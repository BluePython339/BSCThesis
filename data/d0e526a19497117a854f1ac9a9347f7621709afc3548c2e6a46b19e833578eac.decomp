sub_401083
push esi
push edi
call sub_4154bd
mov edi rw-data
mov ecx edi
lea esi [ eax + 0x20 ]
call sub_40bd50
push 0x0
push esi
mov ecx edi
mov [ rw-data ] r--data
call sub_40ab70
push sub_42f4c9
call sub_41448e
pop ecx
pop edi
pop esi
retn
sub_401120
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_401170
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp - 0x8 ]
sub esp 0x8
push [ ebp + 0x8 ]
push edx
call [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ edx ]
jne r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
sub_4011b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor al al
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al 0x1
pop ebp
retn 0x8
sub_4011e0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_40f8b1
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_401260
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
push esi
call sub_4011e0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x15
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
push r--data
mov [ esi ] 0x0
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4012c0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_40f8db
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_401330
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40f8b1
add esp 0x4
test eax eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
je r-xdata
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
sub_401370
push ebp
mov ebp esp
push 0xffffffff
push sub_42e8c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x20 ] 0x0
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ ebp - 0x28 ] edi
mov [ edi ] 0x0
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x20 ] 0x1
test eax eax
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp + 0x8 ] eax
mov al [ edx ]
inc edx
mov [ ebp + ebx - 0x14 ] al
inc ebx
mov ah [ ebp - 0x12 ]
mov ch [ ebp - 0x13 ]
mov cl [ ebp - 0x14 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0xd ] ah
mov [ ebp - 0x1b ] ch
mov [ ebp - 0x19 ] cl
cmp ebx 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov al cl
and cl 0x3
shr al 0x2
mov [ ebp - 0x18 ] al
mov al ch
shl cl 0x4
shr al 0x4
add cl al
mov al ah
mov [ ebp - 0x17 ] cl
mov cl ch
and cl 0xf
shr al 0x6
shl cl 0x2
add cl al
mov al ah
and al 0x3f
mov [ ebp - 0x16 ] cl
mov [ ebp - 0x15 ] al
xor ebx ebx
lea ecx [ ecx ]
test ebx ebx
je r-xdata
push r--data
call sub_40f9f1
lea esi [ ecx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
mov eax ebx
cmp ebx 0x3
jge r-xdata
mov eax [ edi + 0x14 ]
cmp eax esi
jae r-xdata
mov dl [ ebp - 0xd ]
cmp eax 0x3
test esi esi
jne r-xdata
push ecx
push esi
mov ecx edi
call sub_401aa0
mov dl [ ebp - 0x1a ]
test esi esi
je r-xdata
cmp ebx 0x3
jge r-xdata
jmp r-xdata
call sub_414602
mov [ ebp + eax - 0x14 ] 0x0
inc eax
cmp eax 0x3
jl r-xdata
cmp [ edi + 0x14 ] 0x10
mov ecx [ edi + 0x10 ]
jb r-xdata
mov [ edi + 0x10 ] esi
cmp eax 0x10
jb r-xdata
inc ebx
cmp ebx 0x4
jl r-xdata
mov ecx [ edi + 0x10 ]
or eax 0xffffffff
sub eax ecx
inc ebx
cmp eax 0x1
jbe r-xdata
cmp [ rw-data ] 0x10
mov ecx rw-data
movzx eax [ ebp + edx - 0x18 ]
cmovae ecx [ rw-data ]
mov al [ eax + ecx ]
mov ecx [ edi + 0x10 ]
mov [ ebp - 0xd ] al
or eax 0xffffffff
sub eax ecx
cmp eax 0x1
jbe r-xdata
jae r-xdata
mov dl [ ebp - 0x12 ]
mov ch [ ebp - 0x13 ]
mov cl [ ebp - 0x14 ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ edi ]
mov [ eax ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x10
mov ecx rw-data
movzx eax [ ebp + ebx - 0x18 ]
cmovae ecx [ rw-data ]
mov dl [ eax + ecx ]
or eax 0xffffffff
mov ecx [ edi + 0x10 ]
sub eax ecx
mov [ ebp - 0x1a ] dl
cmp eax 0x1
jbe r-xdata
mov edx [ ebp - 0x24 ]
xor ebx ebx
mov ch [ ebp - 0x1b ]
mov cl [ ebp - 0x19 ]
lea esi [ ecx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
lea esi [ ecx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
mov al cl
and cl 0x3
shr al 0x2
mov [ ebp - 0x18 ] al
mov al ch
shr al 0x4
and ch 0xf
shl cl 0x4
add cl al
shl ch 0x2
mov al dl
mov [ ebp - 0x17 ] cl
shr al 0x6
and dl 0x3f
add ch al
mov [ ebp - 0x15 ] dl
xor edx edx
mov [ ebp - 0x16 ] ch
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x14 ] edx
test eax eax
jle r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ eax + ecx ] dl
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax esi
jae r-xdata
mov eax [ edi + 0x14 ]
cmp eax esi
jae r-xdata
mov [ eax + esi ] 0x0
test esi esi
jne r-xdata
push ecx
push esi
mov ecx edi
call sub_401aa0
test esi esi
je r-xdata
test esi esi
jne r-xdata
push ecx
push esi
mov ecx edi
call sub_401aa0
mov edx [ ebp - 0x14 ]
test esi esi
je r-xdata
cmp [ edi + 0x14 ] 0x10
mov ecx [ edi + 0x10 ]
jb r-xdata
mov [ edi + 0x10 ] esi
cmp eax 0x10
jb r-xdata
cmp ebx 0x3
jl r-xdata
cmp [ edi + 0x14 ] 0x10
mov ecx [ edi + 0x10 ]
jb r-xdata
mov [ edi + 0x10 ] esi
cmp eax 0x10
jb r-xdata
inc edx
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x14 ] edx
cmp edx eax
jl r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ edi ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ edi ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ ecx + eax ] 0x3d
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov dl [ ebp - 0xd ]
mov [ eax + ecx ] dl
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
mov [ esi + eax ] 0x0
mov edx [ ebp - 0x14 ]
mov [ eax + esi ] 0x0
sub_4016d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40f9f1
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_401aa0
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_401a50
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_401780
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edi [ ebx + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_40fa1f
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0xfffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_40fa1f
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_401aa0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_4019b0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_4019b0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
lea eax [ ebx + ecx ]
push eax
push edx
call sub_416730
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4018b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_401aa0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
push ebx
push eax
call sub_416730
add esp 0xc
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_401780
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_401780
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4019b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_40fa1f
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
pop esi
mov [ eax + ecx ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_4138e0
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_401a50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
movsx eax al
push eax
lea eax [ ecx + edx ]
push eax
call sub_417ad0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_401aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e8f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov eax 0xfffffffe
lea edi [ ecx + ebx ]
sub eax ecx
cmp ebx eax
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov edi 0xfffffffe
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
call sub_40f9c0
push ecx
call sub_414729
add esp 0x4
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_41497e#2
add esp 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
push ebx
push ecx
push eax
call sub_416730
add esp 0xc
test ebx ebx
je r-xdata
sub_401b72
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_416e0b
mov ecx esi
test ebx ebx
je r-xdata
push [ esi ]
call j_sub_41497e#2
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
push ecx
push eax
call sub_416730
add esp 0xc
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_41497e#2
add esp 0x4
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
sub_401bf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0xffffffff
ja r-xdata
call sub_40f9c0
push eax
call sub_414729
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_401c30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414814
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_401c70
push ebp
mov ebp esp
push 0xffffffff
push sub_42e95a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x18 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] ax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] ax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] al
mov [ ebp - 0x4 ] 0x6
test edi edi
jne r-xdata
push edi
push esi
call sub_40fccd
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] r--data
push eax
lea ecx [ ebp - 0x24 ]
call sub_4147b1
push r--data
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] r--data
push eax
call sub_416e0b
sub_401d40
push esi
mov esi ecx
push esi
call sub_40fd18
mov eax [ esi + 0x2c ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x2c ] 0x0
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_41497e
add esp 0x4
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_41497e
add esp 0x4
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_41497e
add esp 0x4
mov [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_41497e
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_41497e
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov ecx esi
pop esi
jmp sub_40feae
push eax
call sub_41497e
add esp 0x4
sub_401e00
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_401e90
push ebp
mov ebp esp
push 0xffffffff
push sub_42e98b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_414729
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x54 ]
call sub_401d40
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x54 ]
call sub_401c70
lea eax [ ebp - 0x20 ]
mov [ esi + 0x4 ] 0x0
push eax
mov ebx 0x1
mov [ esi ] r--data
call sub_40fee0
add esp 0x4
movdqu xmm0 [ eax ]
movdqu [ esi + 0x8 ] xmm0
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_401f80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
sub ebx esi
push edi
xor edi edi
cmp esi [ ebp + 0xc ]
cmova ebx edx
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ ecx + 0x8 ]
mov [ ebp + 0xc ] eax
push eax
movzx eax [ esi ]
push eax
call sub_40ff4c
mov [ esi ] al
inc edi
mov eax [ ebp + 0xc ]
add esp 0x8
inc esi
cmp edi ebx
jne r-xdata
sub_401ff0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
sub ebx esi
push edi
xor edi edi
cmp esi [ ebp + 0xc ]
cmova ebx edx
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ ecx + 0x8 ]
mov [ ebp + 0xc ] eax
push eax
movzx eax [ esi ]
push eax
call sub_41004b
mov [ esi ] al
inc edi
mov eax [ ebp + 0xc ]
add esp 0x8
inc esi
cmp edi ebx
jne r-xdata
sub_402050
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x10 ]
call sub_416730
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_402080
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x14 ]
call sub_416730
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_4020a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
push [ esi + 0xc ]
call sub_41497e
jmp r-xdata
push [ esi + 0x14 ]
call sub_41497e
add esp 0x4
mov [ esi ] r--data
test [ ebp + 0x8 ] 0x1
je r-xdata
push [ esi + 0xc ]
call j_sub_41497e
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_402100
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
push [ ecx ]
mov ecx eax
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_402130
push ebp
mov ebp esp
push 0xffffffff
push sub_42e9c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp + 0xc ]
call sub_402100
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_403fb0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp + 0x14 ]
call sub_4040b0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov edx [ ebp + 0x28 ]
cmp edx 0x10
jae r-xdata
push [ ebp - 0x2c ]
call j_sub_41497e#2
add esp 0x4
mov ecx [ ebp + 0x14 ]
mov [ esi ] ecx
mov eax [ ebp + 0x24 ]
inc eax
je r-xdata
mov ecx [ ebp + 0x24 ]
mov eax esi
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
lea eax [ ebp + 0x14 ]
push eax
push esi
call sub_4138e0
mov edx [ ebp + 0x28 ]
add esp 0xc
jmp r-xdata
sub_402200
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42e9e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x18
mov ecx esp
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_401780
push [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x8 ]
push eax
call sub_402130
add esp 0x24
mov [ esp + 0x30 ] 0x0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov [ esp + 0x8 ] eax
mov ecx esi
lea eax [ esp + 0x8 ]
push eax
call sub_4147b1
cmp [ esp + 0x20 ] 0x10
mov [ esi ] r--data
jb r-xdata
mov eax [ eax ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax esi
mov [ esi ] r--data
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0xc ]
call j_sub_41497e#2
add esp 0x4
sub_4022d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42e9e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] 0x0
cmp [ ecx ] 0x0
jne r-xdata
mov edx ecx
lea edi [ edx + 0x1 ]
xor edx edx
jmp r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
push edx
push ecx
lea ecx [ esp + 0x14 ]
call sub_4018b0
lea eax [ esp + 0xc ]
mov [ esp + 0x30 ] 0x0
push eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_402200
cmp [ esp + 0x20 ] 0x10
jb r-xdata
mov eax esi
mov [ esi ] r--data
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0xc ]
call j_sub_41497e#2
add esp 0x4
sub_402380
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x18
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x0
push 0x0
call sub_416e0b
test cl 0x4
jne r-xdata
push r--data
push rw-data
push 0x1
lea ecx [ esp + 0x10 ]
call sub_4022d0
push r--data
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] r--data
push eax
call sub_416e0b
test cl 0x2
lea ecx [ esp + 0x4 ]
jne r-xdata
push r--data
push rw-data
push 0x1
call sub_4022d0
push r--data
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] r--data
push eax
call sub_416e0b
jmp r-xdata
push r--data
push rw-data
push 0x1
call sub_4022d0
push r--data
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] r--data
push eax
call sub_416e0b
int3
sub_402440
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402460
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_4147f1
mov [ edi ] r--data
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
mov [ edi ] r--data
pop edi
pop esi
pop ebp
retn 0x4
sub_402490
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_4147f1
mov [ edi ] r--data
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
mov [ edi ] r--data
pop edi
pop esi
pop ebp
retn 0x4
sub_4024c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_4147f1
mov [ edi ] r--data
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4024f0
push esi
mov esi edx
mov ecx rw-data
mov edx r--data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
mov edx [ esi ]
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
mov edx [ esi ]
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
push 0x50
push ecx
mov ecx eax
call sub_405c70
add esp 0x4
mov ecx eax
call sub_403e10
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
pop esi
retn
sub_402980
push ebp
mov ebp esp
and esp 0xffffffc0
push 0xffffffff
push sub_42ea26
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax 0x2534
call sub_42a0a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2530 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2578 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ esp + 0x40 ] eax
cmp ecx 0x2
jge r-xdata
movsd xmm0 [ r--data ]
xor ebx ebx
xor esi esi
mov [ esp + 0x54 ] 0x4
xor edi edi
mov [ esp + 0x3c ] ebx
movsd [ esp + 0xa4 ] xmm0
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0xac ] 0x7d0
mov [ esp + 0x98 ] bl
mov [ esp + 0x90 ] 0xffffffff
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x7c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0xb4 ] ebx
mov [ esp + 0x8c ] esi
mov [ esp + 0x58 ] ebx
mov [ esp + 0x68 ] 0xc38
mov [ esp + 0x153c ] bl
mov [ esp + 0x94 ] ebx
mov [ esp + 0x80 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x47 ] bl
mov [ esp + 0x9c ] ebx
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x74 ] r--data
test ecx ecx
jle r-xdata
mov edx eax
call sub_4024f0
jmp r-xdata
push 0xb0
lea eax [ esp + 0xc0 ]
push 0x0
push eax
call sub_417ad0
add esp 0x8
lea ecx [ esp + 0xc0 ]
call sub_40ead0
mov [ esp + 0x164 ] 0x0
mov [ esp + 0x168 ] 0x1
mov [ esp + 0x2580 ] 0x0
cmp [ esp + 0xb4 ] 0x1
jne r-xdata
lea esp [ esp ]
mov eax 0x1
cmp esi 0x1
jne r-xdata
lea eax [ esp + 0x43c ]
push eax
lea ecx [ esp + 0xc0 ]
call sub_40e9a0
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
lea esi [ ebx + 0x2 ]
mov edi r--data
cmp [ ebp + 0x8 ] esi
jl r-xdata
cmp [ esp + 0x168 ] 0x0
je r-xdata
mov edx [ esp + 0x40 ]
call sub_4024f0
jmp r-xdata
mov ecx r--data
mov eax esi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edx r--data
mov ecx rw-data
call sub_405c70
mov esi eax
lea eax [ esp + 0xb4 ]
push eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
call sub_402440
push eax
mov [ esp + 0x2584 ] 0x1
call sub_405b40
mov [ esp + 0x2584 ] 0x0
add esp 0x4
mov ecx [ esp + 0xb4 ]
mov edi eax
test ecx ecx
je r-xdata
cmp [ esp + 0x60 ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
jle r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] esi
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax [ edi ]
mov ecx edi
push 0xa
mov eax [ eax + 0x20 ]
call eax
movzx eax al
mov ecx esi
push eax
call sub_406230
mov ecx esi
call sub_404d70
lea ecx [ esp + 0xbc ]
mov [ esp + 0x2580 ] 0xffffffff
call sub_40e8c0
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
push [ eax + ebx * 4 + 0x4 ]
lea eax [ esp + 0x340 ]
push 0x100
push eax
call sub_414da3
mov ecx [ esp + 0x4c ]
add esp 0xc
mov ecx [ esp + 0x40 ]
mov edi [ ecx + ebx * 4 + 0x4 ]
jmp r-xdata
cmp [ esp + 0x168 ] 0x0
je r-xdata
mov ebx [ esp + 0x40 ]
lea esp [ esp ]
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
cmp [ esp + 0x168 ] 0x0
je r-xdata
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
mov ecx r--data
mov eax esi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov eax [ ebp + 0x8 ]
sub eax [ esp + 0x3c ]
sub eax 0x3
test eax eax
jle r-xdata
push [ ecx + esi * 4 ]
call sub_414d5b
add esp 0x4
mov ebx eax
mov eax [ esp + 0x3c ]
mov ebx 0x50
add eax 0x3
cmp [ ebp + 0x8 ] eax
jl r-xdata
lea eax [ esp + 0x324 ]
push 0x9
push eax
call sub_414f38
lea eax [ esp + 0xbc ]
push eax
call sub_4150e5
add esp 0xc
lea eax [ esp + 0xb4 ]
push eax
lea eax [ esp + 0x174 ]
push eax
call sub_4149b6
lea eax [ esp + 0x178 ]
push eax
push r--data
lea eax [ esp + 0x340 ]
push 0xb
push eax
call sub_414f1b
lea eax [ esp + 0x33c ]
push eax
lea eax [ esp + 0x34c ]
push eax
lea eax [ esp + 0xdc ]
push r--data
push eax
call sub_40ea30
push r--data
lea eax [ esp + 0xe8 ]
push r--data
push eax
call sub_40ea30
add esp 0x34
cmp [ esp + 0x168 ] 0x0
je r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] 0x1
jne r-xdata
push [ ebx + esi * 4 ]
lea eax [ esp + 0xc0 ]
push r--data
push eax
call sub_40ea30
inc esi
add esp 0xc
cmp esi edi
jl r-xdata
mov ebx [ esp + 0x3c ]
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] 0x1
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esp + 0x48 ]
cmp esi 0x1
jne r-xdata
cmp eax 0x1
mov ecx r--data
mov esi r--data
cmovne esi ecx
mov ecx rw-data
push eax
call sub_403e10
mov edx r--data
mov ecx eax
call sub_405c70
mov edx esi
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] 0x1
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
mov ecx r--data
mov eax esi
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
lea eax [ esp + 0x194 ]
push eax
push 0x101
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x60 ] 0x0
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
cmp [ esp + 0x168 ] 0x0
je r-xdata
push eax
push ecx
mov edx r--data
mov ecx rw-data
call sub_405c70
add esp 0x4
mov ecx eax
call sub_403e10
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov [ esp + 0x2580 ] 0xffffffff
lea ecx [ esp + 0xbc ]
call sub_40e8c0
mov eax 0xff
jmp r-xdata
push 0x3a
push edi
call sub_414c30
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax r--data
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp [ esp + 0x60 ] 0x0
movsd xmm0 [ esp + 0xa4 ]
jne r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] 0x1
jne r-xdata
mov ecx [ esp + 0x2578 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2530 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov esi edi
add esi 0x3
jmp r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
cmp [ esp + 0x47 ] 0x0
lea ecx [ esp + 0xbc ]
mov eax 0x1
cmovne eax [ esp + 0x54 ]
sub esp 0x8
movsd [ esp ] xmm0
push [ esp + 0xa0 ]
push [ esp + 0x80 ]
push [ esp + 0xb0 ]
push ecx
lea ecx [ esp + 0x354 ]
push ecx
push eax
push [ esp + 0xbc ]
lea eax [ esp + 0x1d60 ]
push [ esp + 0xa4 ]
push [ esp + 0xac ]
push eax
push [ esp + 0xc4 ]
lea eax [ esp + 0x1570 ]
push [ esp + 0x9c ]
push eax
push [ esp + 0x94 ]
sub esp 0x8
push [ esp + 0xa4 ]
push [ esp + 0xb0 ]
push [ esp + 0xa0 ]
push [ esp + 0xa0 ]
push esi
push [ esp + 0xd8 ]
push [ esp + 0xd8 ]
push [ esp + 0xec ]
push [ esp + 0xf8 ]
push [ esp + 0x118 ]
push [ esp + 0xdc ]
push [ esp + 0xe4 ]
push ecx
call sub_4080b0
add esp 0x7c
sub esp 0x8
lea eax [ esp + 0xc4 ]
mov edx ebx
mov ecx edi
movsd [ esp ] xmm0
push [ esp + 0xa0 ]
push [ esp + 0x80 ]
push [ esp + 0xb0 ]
push eax
push [ esp + 0xb4 ]
lea eax [ esp + 0x1d58 ]
push [ esp + 0x9c ]
push [ esp + 0xa4 ]
push eax
push [ esp + 0xbc ]
lea eax [ esp + 0x1568 ]
push [ esp + 0x94 ]
push eax
push [ esp + 0x8c ]
sub esp 0x8
push [ esp + 0x9c ]
push [ esp + 0xa8 ]
push [ esp + 0x98 ]
push [ esp + 0x98 ]
push esi
push [ esp + 0xd0 ]
push [ esp + 0xd0 ]
push [ esp + 0xe4 ]
push [ esp + 0xf0 ]
push [ esp + 0x110 ]
push [ esp + 0xd4 ]
push [ esp + 0xdc ]
push [ esp + 0xc4 ]
call sub_406a00
add esp 0x74
jmp r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
lea eax [ esp + 0x544 ]
push eax
call sub_414da3
mov [ esp + 0xd48 ] 0x0
mov [ eax ] 0x0
inc eax
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x544 ]
push eax
call sub_414da3
add esp 0xc
lea eax [ esp + 0xd3c ]
push [ esp + 0x4c ]
push 0x800
push eax
call sub_414da3
jmp r-xdata
push 0x2f
push esi
call sub_414c30
add esp 0x8
mov [ esp + 0x4c ] eax
push esi
push 0x800
test eax eax
je r-xdata
mov eax [ esi + edi * 4 ]
mov ecx r--data
mov edi edi
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
lea ebx [ edi + 0x1 ]
mov [ esp + 0x6c ] eax
add esp 0x4
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov esi eax
call [ WSACleanup@IAT ]
lea ecx [ esp + 0xbc ]
mov [ esp + 0x2580 ] 0xffffffff
call sub_40e8c0
mov eax esi
jmp r-xdata
mov esi [ esp + 0x48 ]
push r--data
call sub_4164fc
add esp 0x4
cmp [ esp + 0x164 ] 0x1
jne r-xdata
add esp 0xc
lea eax [ esp + 0x53c ]
push eax
lea eax [ esp + 0xd40 ]
push eax
lea eax [ esp + 0xc4 ]
push r--data
push eax
call sub_40ea30
add esp 0x10
cmp [ esp + 0x168 ] 0x0
je r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
mov esi [ esp + 0x40 ]
test eax eax
jne r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
lea ecx [ esp + 0xbc ]
call sub_405c70
lea ecx [ esp + 0xbc ]
call sub_404d70
mov eax [ esi + edi * 4 ]
mov ecx r--data
push [ esi + edi * 4 + 0x4 ]
lea eax [ esp + 0x1540 ]
push 0x800
push eax
call sub_414962
lea ebx [ edi + 0x1 ]
add esp 0xc
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esi + edi * 4 ]
mov ecx r--data
mov eax esi
nop
push [ esi + edi * 4 + 0x4 ]
lea eax [ esp + 0x1d40 ]
push 0x800
push eax
call sub_414962
lea ebx [ edi + 0x1 ]
mov [ esp + 0xa0 ] 0x1
add esp 0xc
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov ebx edi
mov [ esp + 0x58 ] 0x4
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax r--data
lea esp [ esp ]
mov ebx edi
mov [ esp + 0x58 ] 0x6
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esp + 0x40 ]
mov ecx r--data
mov eax [ esi + edi * 4 ]
lea ebx [ ebx ]
mov ebx edi
mov [ esp + 0x54 ] 0xffffffff
push rw-data
mov [ esp + 0x4b ] 0x1
mov [ esp + 0x40 ] ebx
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
mov ecx [ esi + edi * 4 ]
mov edx r--data
lea ecx [ ecx ]
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
lea ebx [ edi + 0x1 ]
mov [ esp + 0x58 ] eax
add esp 0x4
mov [ esp + 0x47 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sbb eax eax
or eax 0x1
test al al
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esi + edi * 4 ]
mov edx r--data
mov ecx esi
lea ecx [ ecx ]
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
lea ebx [ edi + 0x1 ]
mov [ esp + 0xa0 ] eax
add esp 0x4
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test al al
je r-xdata
test eax eax
jne r-xdata
add ecx 0x2
add edx 0x2
test al al
jne r-xdata
mov ecx r--data
mov eax esi
mov ebx edi
mov [ esp + 0x88 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add ecx 0x2
add edx 0x2
test al al
jne r-xdata
mov ecx r--data
mov eax esi
mov ebx edi
mov [ esp + 0x8c ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax r--data
mov edi edi
mov ebx edi
mov [ esp + 0x98 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esi + edi * 4 ]
mov ecx r--data
mov eax esi
lea ecx [ ecx ]
push [ esi + edi * 4 + 0x4 ]
lea eax [ esp + 0x440 ]
push 0x100
push eax
call sub_414da3
lea ebx [ edi + 0x1 ]
mov [ esp + 0xc0 ] 0x1
add esp 0xc
mov [ esp + 0x3c ] ebx
mov [ esp + 0x8c ] 0x1
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
mov esi [ esp + 0x40 ]
test eax eax
jne r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
mov ecx r--data
mov eax esi
lea esp [ esp ]
mov ebx edi
mov [ esp + 0x80 ] 0x1
mov [ esp + 0x3c ] ebx
mov [ esp + 0x60 ] 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov ebx edi
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov ebx edi
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x50 ] eax
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov ebx edi
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov ebx edi
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x50 ] 0x2
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov ebx edi
mov [ esp + 0x7c ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax r--data
lea esp [ esp ]
mov ebx edi
mov [ esp + 0x78 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx r--data
push [ esi + edi * 4 + 0x4 ]
call sub_4150d4
fstp [ esp + 0xa8 ]
movsd xmm0 [ esp + 0xa8 ]
lea ebx [ edi + 0x1 ]
add esp 0x4
mov [ esp + 0x3c ] ebx
movsd [ esp + 0xa4 ] xmm0
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
mov esi [ esp + 0x40 ]
test eax eax
jne r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
mov esi [ esi + edi * 4 ]
mov ecx r--data
mov eax esi
lea ebx [ ebx ]
push [ esi + edi * 4 + 0x4 ]
call sub_4150d4
fstp [ esp + 0xb0 ]
movsd xmm0 [ esp + 0xb0 ]
lea ebx [ edi + 0x1 ]
mulsd xmm0 [ r--data ]
add esp 0x4
mov [ esp + 0x3c ] ebx
cvttsd2si eax xmm0
mov [ esp + 0xac ] eax
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov eax [ esp + 0x40 ]
lea ebx [ edi + 0x1 ]
mov [ esp + 0xa0 ] 0x1
mov [ esp + 0x3c ] ebx
mov eax [ eax + edi * 4 + 0x4 ]
mov [ esp + 0x74 ] eax
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov edi edi
mov ebx edi
mov [ esp + 0x70 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax r--data
lea esp [ esp ]
mov ebx edi
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov esi [ esp + 0x40 ]
mov eax [ esp + 0x40 ]
mov ecx r--data
mov [ esp + 0x64 ] 0x1
mov esi [ eax + edi * 4 + 0x4 ]
mov eax esi
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test al al
je r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
mov ecx [ esi + edi * 4 ]
mov edx r--data
lea ecx [ ecx ]
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
lea ebx [ edi + 0x1 ]
mov [ esp + 0x94 ] eax
add esp 0x4
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
push esi
call sub_414d5b
mov esi [ esp + 0x44 ]
add esp 0x4
test eax eax
jne r-xdata
lea ebx [ edi + 0x1 ]
mov [ esp + 0x5c ] eax
mov [ esp + 0x3c ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sbb eax eax
or eax 0x1
test al al
je r-xdata
test eax eax
jne r-xdata
add ecx 0x2
add edx 0x2
test al al
jne r-xdata
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
lea ebx [ edi + 0x1 ]
mov [ esp + 0x60 ] eax
add esp 0x4
mov [ esp + 0x3c ] ebx
jmp r-xdata
mov ebx edi
mov [ esp + 0x3c ] ebx
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx r--data
mov ebx edi
mov [ esp + 0x84 ] 0x1
push rw-data
mov [ esp + 0x40 ] ebx
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
mov ecx [ esi + edi * 4 ]
mov edx r--data
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add ecx 0x2
add edx 0x2
test al al
jne r-xdata
mov esi [ esi + edi * 4 ]
mov ecx r--data
mov eax esi
push [ esi + edi * 4 + 0x4 ]
call sub_414d5b
add esp 0x4
mov [ esp + 0x6c ] eax
lea ebx [ edi + 0x1 ]
mov [ esp + 0x3c ] ebx
lea ecx [ eax - 0x1 ]
cmp ecx 0x3
ja r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
jmp [ ecx * 4 + jump_table_403ddc ]
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edx r--data
mov ecx rw-data
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
mov edx r--data
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push rw-data
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
jmp r-xdata
mov eax r--data
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push rw-data
call sub_405f20
mov edx r--data
jmp r-xdata
push rw-data
call sub_405f20
mov edx r--data
jmp r-xdata
push rw-data
call sub_405f20
mov edx r--data
jmp r-xdata
push rw-data
call sub_405f20
mov edx r--data
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
add esp 0x4
mov ecx eax
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov eax [ esp + 0x40 ]
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov esi [ eax + edi * 4 ]
mov ecx r--data
mov eax esi
lea ebx [ ebx ]
mov esi [ esp + 0x8c ]
test eax eax
je r-xdata
add esi 0x2
add eax 0x2
test cl cl
jne r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
sub_403e10
push ebp
mov ebp esp
push 0xffffffff
push sub_42ea78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ esi ]
xor edi edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x2c ] esi
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
sete al
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405fd0
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x1c ]
mov ebx eax
test ecx ecx
je r-xdata
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_4185c4
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx esi
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x34 ] 0x0
mov al [ ecx + 0x40 ]
mov [ ebp - 0x20 ] al
push [ ebp - 0x20 ]
mov eax [ ebx ]
push ecx
push [ ecx + 0x38 ]
lea ecx [ ebp - 0x34 ]
push [ ebp - 0x34 ]
push ecx
mov ecx ebx
call [ eax + 0x24 ]
cmp [ ebp - 0x34 ] 0x0
mov eax 0x4
cmovne edi eax
jmp r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
call sub_404d70
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404ce0
push 0x0
push eax
call sub_402380
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_403f0d
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_403fb0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax edx
jb r-xdata
push r--data
call sub_40fa1f
mov ebx [ ebp + 0x10 ]
sub eax edx
mov edx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax edx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40f9f1
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ edx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_401aa0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ecx ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax [ ebp + 0xc ]
add eax ecx
push ebx
push eax
mov eax [ esi + 0x10 ]
add eax edx
push eax
call sub_416730
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4040b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
mov edx [ esi + 0x10 ]
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
sub eax edx
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_40f9f1
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ edx + ecx ]
cmp edi 0xfffffffe
ja r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_401aa0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_403fb0
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_403fb0
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax [ esi + 0x10 ]
push ecx
add eax edx
push ebx
push eax
call sub_416730
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_404200
push ebp
mov ebp esp
push 0xffffffff
push sub_42eaa8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
mov [ edi ] esi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
sete al
mov [ edi + 0x4 ] al
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
cmp ecx esi
je r-xdata
call sub_404d70
sub_404290
push esi
mov esi ecx
call j_sub_4185c4
test al al
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
call sub_404ce0
pop esi
retn
mov eax [ ecx ]
pop esi
jmp [ eax + 0x8 ]
sub_4042c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42eae0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov [ esp + 0x10 ] al
test [ esi + 0x14 ] 0x4000
jne r-xdata
lea eax [ esp + 0x18 ]
mov ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x64 ] 0x0
call sub_406100
mov [ esp + 0x64 ] 0xffffffff
add esp 0x4
mov ecx [ esp + 0x18 ]
mov edi eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ecx ]
movzx eax al
push eax
push [ esp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call [ edx + 0x24 ]
jmp r-xdata
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
cmp [ ebp + 0x1c ] 0x0
lea eax [ esp + 0x20 ]
mov [ esp + 0x60 ] 0x1
mov ecx edi
push eax
je r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x18
call sub_405820
call sub_405840
jmp r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
cmp [ esi + 0x24 ] 0x0
mov ecx [ esp + 0x48 ]
jl r-xdata
push [ esp + 0x20 ]
call j_sub_41497e#2
add esp 0x4
push eax
lea ecx [ esp + 0x3c ]
call sub_404b90
cmp [ esp + 0x34 ] 0x10
jb r-xdata
xor edi edi
jg r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edi
push [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ esp + 0x28 ]
call sub_4057a0
mov ecx [ esp + 0x60 ]
add esp 0x18
xor edi edi
mov edx [ eax ]
mov [ ebp + 0xc ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edi [ esi + 0x20 ]
cmp edi ecx
jbe r-xdata
cmp [ esi + 0x20 ] 0x0
jbe r-xdata
push [ esp + 0x38 ]
call j_sub_41497e#2
add esp 0x4
cmp [ esp + 0x4c ] 0x10
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x38 ]
cmovae eax [ esp + 0x38 ]
push ecx
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x24 ]
push edx
push eax
push [ esp + 0x28 ]
call sub_405720
push edi
push [ esp + 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push ebx
push [ esp + 0x40 ]
mov [ ebp + 0x10 ] eax
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
call sub_4057a0
add esp 0x30
cmp [ esp + 0x4c ] 0x10
jb r-xdata
sub edi ecx
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_4044b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi ecx
push [ esi + 0x14 ]
push r--data
push eax
push edi
call sub_4052f0
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_414962
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
call sub_405380
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax ebx
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x18
sub_404530
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi ecx
push [ esi + 0x14 ]
push r--data
push eax
push edi
call sub_4052f0
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_414962
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
call sub_405380
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax ebx
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x18
sub_4045b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi ecx
push [ ebp + 0x1c ]
push [ esi + 0x14 ]
push r--data
push eax
push edi
call sub_4052f0
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_414962
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
call sub_405380
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax ebx
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x1c
sub_404630
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi ecx
push [ ebp + 0x1c ]
push [ esi + 0x14 ]
push r--data
push eax
push edi
call sub_4052f0
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_414962
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
call sub_405380
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax ebx
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x1c
sub_4046b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x98
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x94 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x1c ] ecx
mov edi [ eax + 0x1c ]
mov esi [ eax + 0x18 ]
mov [ esp + 0x14 ] eax
test edi edi
jg r-xdata
mov eax 0x24
mov [ esp + 0x10 ] eax
jmp r-xdata
jl r-xdata
movsd xmm1 [ ebp + 0x1c ]
cdq
sub esi eax
mov eax [ esp + 0x14 ]
sbb edi edx
xor edx edx
xor ecx ecx
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x14 ]
and eax 0x3000
mov [ esp + 0xc ] ecx
cmp eax 0x2000
jne r-xdata
test [ eax + 0x14 ] 0x2000
jne r-xdata
test esi esi
jne r-xdata
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x21 ]
mov [ esp + 0x20 ] 0x25
mov edx [ edi + 0x14 ]
test dl 0x20
je r-xdata
movapd xmm0 xmm1
mulsd xmm0 [ r--data ]
ucomisd xmm0 xmm1
lahf
test ah 0x44
jpo r-xdata
test edi edi
jl r-xdata
mov esi 0x6
xor edi edi
test dl 0x10
je r-xdata
mov [ esp + 0x21 ] 0x2b
lea eax [ esp + 0x22 ]
movsd xmm4 [ r--data ]
xorps xmm3 xmm3
comisd xmm3 xmm1
seta al
test al al
je r-xdata
mov eax esi
mov [ esp + 0x10 ] esi
jg r-xdata
mov ecx edx
mov [ eax ] 0x2a2e
and ecx 0x3000
test dl 0x4
je r-xdata
mov [ eax ] 0x23
inc eax
movsd xmm0 [ r--data ]
comisd xmm1 xmm0
movsd xmm2 [ r--data ]
jb r-xdata
xorpd xmm1 xmm4
cmp esi 0x24
jbe r-xdata
cmp ecx 0x2000
jne r-xdata
cmp ecx 0x2000
je r-xdata
comisd xmm1 xmm3
jbe r-xdata
cmp edx 0x1388
jae r-xdata
cmp ecx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp ecx 0x3000
jne r-xdata
test al al
je r-xdata
test edi edi
jl r-xdata
mov [ esp + 0x8 ] edx
divsd xmm1 xmm2
add edx 0xa
comisd xmm1 xmm0
jae r-xdata
cmp ecx 0x1000
setne cl
lea ecx [ ecx * 2 + 0x65 ]
mov cl 0x61
jmp r-xdata
mov [ eax + 0x2 ] cl
sub esp 0x8
add eax 0x3
movsd [ esp ] xmm1
mov [ eax ] 0x0
lea eax [ esp + 0x28 ]
push [ esp + 0x18 ]
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_414962
push eax
push esi
push [ esp + 0x2c ]
mov esi [ esp + 0x3c ]
lea eax [ esp + 0x4c ]
push [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ esp + 0x5c ]
call sub_404e70
mov ecx [ esp + 0xe0 ]
add esp 0x44
mov eax esi
pop edi
pop esi
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x1c
cmp ecx 0x1000
setne cl
lea ecx [ ecx * 2 + 0x45 ]
jmp r-xdata
mov cl 0x41
jmp r-xdata
xorpd xmm1 xmm4
jg r-xdata
movsd xmm0 [ r--data ]
cmp esi 0xa
jb r-xdata
mov [ esp + 0xc ] ecx
cmp ecx 0x1388
jae r-xdata
add esi 0xfffffff6
mulsd xmm1 xmm2
adc edi 0xffffffff
add ecx 0xa
test edi edi
jg r-xdata
comisd xmm0 xmm1
jb r-xdata
jl r-xdata
cmp esi 0xa
jae r-xdata
sub_4048f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x98
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x94 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x1c ] ecx
mov edi [ eax + 0x1c ]
mov esi [ eax + 0x18 ]
mov [ esp + 0x14 ] eax
test edi edi
jg r-xdata
mov eax 0x24
mov [ esp + 0x10 ] eax
jmp r-xdata
jl r-xdata
movsd xmm0 [ ebp + 0x1c ]
cdq
sub esi eax
mov eax [ esp + 0x14 ]
sbb edi edx
xor edx edx
xor ecx ecx
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x14 ]
and eax 0x3000
mov [ esp + 0xc ] ecx
cmp eax 0x2000
jne r-xdata
test [ eax + 0x14 ] 0x2000
jne r-xdata
test esi esi
jne r-xdata
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x21 ]
mov [ esp + 0x20 ] 0x25
mov edx [ edi + 0x14 ]
test dl 0x20
je r-xdata
movsd xmm4 [ r--data ]
xorps xmm3 xmm3
comisd xmm3 xmm0
seta al
test al al
je r-xdata
test edi edi
jl r-xdata
mov esi 0x6
xor edi edi
test dl 0x10
je r-xdata
mov [ esp + 0x21 ] 0x2b
lea eax [ esp + 0x22 ]
movsd xmm1 [ r--data ]
comisd xmm0 xmm1
movsd xmm2 [ r--data ]
jb r-xdata
xorpd xmm0 xmm4
mov eax esi
mov [ esp + 0x10 ] esi
jg r-xdata
mov ecx edx
mov [ eax ] 0x2a2e
and ecx 0x3000
mov [ eax + 0x2 ] 0x4c
test dl 0x4
je r-xdata
mov [ eax ] 0x23
inc eax
comisd xmm0 xmm3
jbe r-xdata
cmp edx 0x1388
jae r-xdata
cmp esi 0x24
jbe r-xdata
cmp ecx 0x2000
jne r-xdata
cmp ecx 0x2000
je r-xdata
test al al
je r-xdata
test edi edi
jl r-xdata
mov [ esp + 0x8 ] edx
divsd xmm0 xmm2
add edx 0xa
comisd xmm0 xmm1
jae r-xdata
cmp ecx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp ecx 0x3000
jne r-xdata
xorpd xmm0 xmm4
jg r-xdata
cmp ecx 0x1000
setne cl
lea ecx [ ecx * 2 + 0x65 ]
mov cl 0x61
jmp r-xdata
mov [ eax + 0x3 ] cl
sub esp 0x8
add eax 0x4
movsd [ esp ] xmm0
mov [ eax ] 0x0
lea eax [ esp + 0x28 ]
push [ esp + 0x18 ]
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_414962
push eax
push esi
push [ esp + 0x2c ]
mov esi [ esp + 0x3c ]
lea eax [ esp + 0x4c ]
push [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ esp + 0x5c ]
call sub_404e70
mov ecx [ esp + 0xe0 ]
add esp 0x44
mov eax esi
pop edi
pop esi
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x1c
cmp ecx 0x1000
setne cl
lea ecx [ ecx * 2 + 0x45 ]
jmp r-xdata
mov cl 0x41
jmp r-xdata
movsd xmm1 [ r--data ]
lea esp [ esp ]
cmp esi 0xa
jb r-xdata
mov [ esp + 0xc ] ecx
cmp ecx 0x1388
jae r-xdata
add esi 0xfffffff6
mulsd xmm0 xmm2
adc edi 0xffffffff
add ecx 0xa
test edi edi
jg r-xdata
comisd xmm1 xmm0
jb r-xdata
jl r-xdata
cmp esi 0xa
jae r-xdata
sub_404b20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push eax
push r--data
lea eax [ esp + 0x18 ]
mov edi ecx
push 0x40
push eax
call sub_414962
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
call sub_405380
mov ecx [ esp + 0x84 ]
add esp 0x30
mov eax ebx
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x18
sub_404b90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
push [ esi ]
call j_sub_41497e#2
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] 0x0
mov eax [ edi + 0x10 ]
inc eax
je r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
push eax
push edi
push esi
call sub_4138e0
add esp 0xc
jmp r-xdata
sub_404c10
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
je r-xdata
push r--data
call sub_40f9f1
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
push edi
call sub_401aa0
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov al [ ebp + 0xc ]
mov ecx esi
mov [ ecx ] al
jmp r-xdata
mov ecx [ esi ]
mov al [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push edi
movsx eax al
push eax
push ecx
call sub_417ad0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_404ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_42eb10
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ eax + esi + 0x14 ] 0x2
je r-xdata
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_402380
or eax 0x4
sub_404d70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42eb38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0x38 ] 0x0
je r-xdata
mov eax esi
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push esi
lea ecx [ esp + 0xc ]
call sub_404200
mov [ esp + 0x20 ] 0x0
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ esp + 0x20 ] 0xffffffff
call j_sub_4185c4
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + edx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_404ce0
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x0
push eax
call sub_402380
or eax 0x4
sub_404e70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42eb80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x30 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x28 ] ecx
test ecx ecx
je r-xdata
xor edi edi
mov al [ ebx ]
cmp al 0x2b
je r-xdata
lea eax [ edi + 0x2 ]
mov edx r--data
cmp eax ecx
ja r-xdata
mov edx r--data
jmp r-xdata
mov edi 0x1
jmp r-xdata
cmp al 0x2d
jne r-xdata
push edx
push ebx
call sub_414ff0
mov [ esp + 0x38 ] eax
mov eax 0x2e
mov [ esp + 0x44 ] ax
call sub_414d78
mov eax [ eax ]
mov al [ eax ]
mov [ esp + 0x44 ] al
lea eax [ esp + 0x44 ]
push eax
push ebx
call sub_414ff0
add esp 0x10
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x24 ]
mov ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x84 ] 0x0
call sub_405b40
mov [ esp + 0x84 ] 0xffffffff
add esp 0x4
mov ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
test ecx ecx
je r-xdata
cmp [ ebx + edi ] 0x30
jne r-xdata
mov eax [ esi + 0x14 ]
and eax 0x3000
mov [ esp + 0x10 ] edi
cmp eax 0x3000
je r-xdata
mov ecx [ esp + 0x14 ]
push 0x30
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
call eax
push 0x0
push [ esp + 0x2c ]
lea ecx [ esp + 0x48 ]
mov [ esp + 0x3c ] al
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
call sub_404c10
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x40 ]
mov [ esp + 0x80 ] 0x1
cmp [ esp + 0x54 ] 0x10
cmovae eax [ esp + 0x40 ]
mov edx [ ecx ]
push eax
mov eax [ esp + 0x2c ]
add eax ebx
push eax
push ebx
call [ edx + 0x1c ]
lea eax [ esp + 0x24 ]
mov ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x84 ] 0x2
call sub_406100
mov [ esp + 0x84 ] 0x1
add esp 0x4
mov ecx [ esp + 0x24 ]
mov ebx eax
mov [ esp + 0x14 ] ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
mov cl [ ebx + edi + 0x1 ]
cmp cl 0x78
je r-xdata
lea eax [ esp + 0x58 ]
mov ecx ebx
push eax
call sub_405b00
mov [ esp + 0x80 ] 0x3
mov ecx ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
call eax
mov ecx [ esp + 0x30 ]
mov [ esp + 0x2c ] al
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x28 ]
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov edi eax
mov [ esp + 0x10 ] edi
cmp cl 0x58
jne r-xdata
mov esi [ esp + 0x34 ]
mov edi [ ebp + 0x24 ]
push esi
push [ ebp + 0x2c ]
push ecx
lea ecx [ esp + 0x4c ]
lea ebx [ eax + edi ]
call sub_4059f0
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x40 ]
push esi
push [ ebp + 0x28 ]
inc eax
push eax
call sub_4059f0
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
call eax
cmp [ esp + 0x54 ] 0x10
mov cl al
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x40 ]
cmovae eax [ esp + 0x40 ]
push esi
push edi
push edx
mov [ eax + edx ] cl
lea ecx [ esp + 0x4c ]
call sub_4059f0
mov edi [ esp + 0x10 ]
mov eax [ ebp + 0x24 ]
push [ esp + 0x34 ]
push eax
lea ebx [ ecx + eax ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_4059f0
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x50 ]
mov [ esp + 0x2c ] eax
cmp [ ebx + 0x24 ] 0x0
jl r-xdata
lea ecx [ ecx ]
cmp [ esp + 0x6c ] 0x10
lea esi [ esp + 0x58 ]
cmovae esi [ esp + 0x58 ]
mov al [ esi ]
cmp al 0x7f
je r-xdata
xor esi esi
jg r-xdata
movsx ecx al
mov eax ebx
sub eax edi
cmp ecx eax
jae r-xdata
cmp [ esp + 0x54 ] 0x10
lea eax [ esp + 0x40 ]
push edi
cmovae eax [ esp + 0x44 ]
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_405720
add esp 0x18
cmp eax 0x100
je r-xdata
mov esi [ ebx + 0x20 ]
cmp esi eax
jbe r-xdata
cmp [ ebx + 0x20 ] 0x0
jbe r-xdata
push [ esp + 0x2c ]
sub ebx ecx
lea ecx [ esp + 0x44 ]
push 0x1
push ebx
call sub_4059f0
cmp [ esi + 0x1 ] 0x0
lea eax [ esi + 0x1 ]
cmovg esi eax
mov al [ esi ]
cmp al 0x7f
jne r-xdata
cmp [ esp + 0x54 ] 0x10
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
jb r-xdata
push [ esp + 0x58 ]
call j_sub_41497e#2
add esp 0x4
cmp [ esp + 0x54 ] 0x10
lea eax [ esp + 0x40 ]
push edi
cmovae eax [ esp + 0x44 ]
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_405720
mov ecx eax
push esi
push [ ebp + 0x1c ]
mov eax [ ecx ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x38 ]
push [ ecx + 0x4 ]
push [ ecx ]
push eax
push [ ebp + 0x8 ]
call sub_4057a0
add esp 0x30
xor esi esi
jmp r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ esp + 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4057a0
mov ecx eax
xor esi esi
cmp [ esp + 0x6c ] 0x10
push edi
mov eax [ ecx ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x5c ]
cmovae eax [ esp + 0x5c ]
push eax
push [ ecx + 0x4 ]
lea eax [ esp + 0x3c ]
push [ ecx ]
push eax
push [ ebp + 0x8 ]
call sub_405720
add esp 0x30
jmp r-xdata
sub esi eax
jmp r-xdata
test al al
jle r-xdata
mov eax ebx
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push [ esp + 0x40 ]
call j_sub_41497e#2
add esp 0x4
mov edx [ eax ]
cmp [ esp + 0x54 ] 0x10
mov ecx [ esp + 0x2c ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x40 ]
cmovae eax [ esp + 0x40 ]
sub ecx edi
push ecx
add eax edi
mov edi [ ebp + 0x8 ]
push eax
push [ esp + 0x18 ]
lea eax [ esp + 0x24 ]
push edx
push eax
push edi
call sub_405720
push esi
push [ ebp + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
mov [ ebx + 0x20 ] 0x0
mov [ ebx + 0x24 ] 0x0
mov ebx [ esp + 0x60 ]
push ebx
push edi
mov [ ebp + 0x14 ] eax
call sub_4057a0
add esp 0x30
cmp [ esp + 0x6c ] 0x10
jb r-xdata
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_4052f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ esi ] 0x25
lea eax [ esi + 0x1 ]
test cl 0x20
je r-xdata
test cl 0x8
je r-xdata
mov [ eax ] 0x2b
inc eax
mov edi [ ebp + 0x10 ]
mov dl [ edi ]
cmp dl 0x4c
je r-xdata
mov [ eax ] 0x23
inc eax
mov [ eax ] 0x3649
mov [ eax + 0x2 ] 0x34
add eax 0x3
mov [ eax ] dl
inc eax
jmp r-xdata
cmp edx 0x800
je r-xdata
mov cl 0x6f
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn
mov edx ecx
and edx 0xe00
cmp edx 0x400
jne r-xdata
shl cl 0x3
not cl
and cl 0x20
or cl 0x58
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn
mov cl [ edi + 0x1 ]
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn
sub_405380
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42ebd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x20 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] ecx
test edi edi
je r-xdata
xor ebx ebx
mov al [ ecx ]
cmp al 0x2b
je r-xdata
lea eax [ esp + 0x20 ]
mov ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x6c ] 0x0
call sub_405b40
mov [ esp + 0x6c ] 0xffffffff
add esp 0x4
mov ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
test ecx ecx
je r-xdata
lea eax [ ebx + 0x2 ]
cmp eax edi
ja r-xdata
mov ebx 0x1
jmp r-xdata
cmp al 0x2d
jne r-xdata
push 0x0
push edi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
call sub_404c10
mov [ esp + 0x68 ] 0x1
lea eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x10 ]
cmovae eax [ esp + 0x28 ]
mov edx [ esp + 0x14 ]
push eax
lea eax [ edi + ecx ]
push eax
mov edx [ edx ]
push ecx
mov ecx [ esp + 0x20 ]
call [ edx + 0x1c ]
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x6c ] 0x2
call sub_406100
mov [ esp + 0x6c ] 0x1
add esp 0x4
mov ecx [ esp + 0x10 ]
mov esi eax
mov [ esp + 0x20 ] esi
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
cmp [ ecx + ebx ] 0x30
jne r-xdata
mov eax [ esi + 0x14 ]
and eax 0xe00
cmp eax 0x800
jne r-xdata
lea eax [ esp + 0x40 ]
mov ecx esi
push eax
call sub_405b00
mov [ esp + 0x68 ] 0x3
lea esi [ esp + 0x40 ]
cmp [ esp + 0x54 ] 0x10
cmovae esi [ esp + 0x40 ]
mov al [ esi ]
cmp al 0x7f
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov cl [ ecx + ebx + 0x1 ]
cmp cl 0x78
je r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
mov [ esp + 0x10 ] eax
cmp [ esi + 0x24 ] 0x0
jl r-xdata
test al al
jle r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov ebx eax
cmp cl 0x58
jne r-xdata
xor edi edi
jg r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
call eax
mov [ esp + 0x10 ] al
mov al [ esi ]
cmp al 0x7f
je r-xdata
cmp [ esp + 0x3c ] 0x10
lea eax [ esp + 0x28 ]
push ebx
cmovae eax [ esp + 0x2c ]
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_405720
add esp 0x18
cmp eax 0x100
je r-xdata
mov edi [ esi + 0x20 ]
cmp edi eax
jbe r-xdata
cmp [ esi + 0x20 ] 0x0
jbe r-xdata
mov edi edi
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
jb r-xdata
push [ esp + 0x40 ]
call j_sub_41497e#2
add esp 0x4
cmp [ esp + 0x3c ] 0x10
lea eax [ esp + 0x28 ]
push ebx
cmovae eax [ esp + 0x2c ]
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_405720
mov ecx eax
push edi
push [ ebp + 0x1c ]
mov eax [ ecx ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x38 ]
push [ ecx + 0x4 ]
push [ ecx ]
push eax
push [ ebp + 0x8 ]
call sub_4057a0
add esp 0x30
xor edi edi
jmp r-xdata
push edi
push [ ebp + 0x1c ]
lea eax [ esp + 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4057a0
mov edx eax
lea ecx [ esp + 0x40 ]
xor edi edi
cmp [ esp + 0x54 ] 0x10
push ebx
cmovae ecx [ esp + 0x44 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
mov eax [ edx + 0x4 ]
push ecx
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x38 ]
push [ edx + 0x4 ]
push [ edx ]
push eax
push [ ebp + 0x8 ]
call sub_405720
add esp 0x30
jmp r-xdata
sub edi eax
jmp r-xdata
movsx ecx al
mov eax edi
sub eax ebx
cmp ecx eax
jae r-xdata
mov eax esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
call j_sub_41497e#2
add esp 0x4
mov edx [ eax ]
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x10 ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ esp + 0x14 ] eax
mov [ ebp + 0x14 ] eax
lea eax [ esp + 0x28 ]
cmovae eax [ esp + 0x28 ]
sub ecx ebx
push ecx
add eax ebx
mov ebx [ ebp + 0x8 ]
push eax
push [ esp + 0x1c ]
lea eax [ esp + 0x24 ]
push edx
push eax
push ebx
call sub_405720
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov esi [ esp + 0x4c ]
push esi
push ebx
mov [ ebp + 0x14 ] eax
call sub_4057a0
add esp 0x30
cmp [ esp + 0x54 ] 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push [ esp + 0x10 ]
sub edi ecx
lea ecx [ esp + 0x2c ]
push 0x1
push edi
call sub_4059f0
cmp [ esi + 0x1 ] 0x0
lea eax [ esi + 0x1 ]
cmovg esi eax
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
sub_405720
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov [ ebp + 0x10 ] 0x1
mov eax [ esi + 0x20 ]
mov cl [ ebx ]
mov [ ebp - 0x1 ] cl
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi ]
movzx eax cl
mov ecx esi
push eax
call [ edx + 0xc ]
mov edx [ esi + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
inc ebx
dec edi
jne r-xdata
dec eax
mov [ edx ] eax
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x1 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_4057a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] esi
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov bl [ ebp + 0x18 ]
lea ebx [ ebx ]
mov [ ebp + 0x10 ] 0x1
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov edx [ esi ]
mov ecx esi
movzx eax bl
push eax
call [ edx + 0xc ]
mov ecx [ esi + 0x30 ]
mov eax [ ecx ]
test eax eax
jle r-xdata
dec edi
jne r-xdata
dec eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov [ edx ] bl
movzx eax bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_405880
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4058e0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_405940
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_4018b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4059a0
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call j_sub_41497e
push [ esi + 0x10 ]
call j_sub_41497e
push [ esi + 0x14 ]
call j_sub_41497e
add esp 0xc
mov [ esi ] r--data
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_4059f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
cmp ecx edx
jb r-xdata
push r--data
call sub_40fa1f
mov ebx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40f9f1
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ ecx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40f9f1
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_401aa0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov [ ebp + 0xc ] esi
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edx
call sub_401a50
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push eax
mov eax [ ebp + 0xc ]
add eax edx
push eax
lea eax [ ecx + edx ]
add eax ebx
push eax
call sub_4138e0
mov edx [ ebp + 0x8 ]
add esp 0xc
mov eax [ esi + 0x10 ]
sub eax edx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_405b40
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x0
mov [ ebp - 0x20 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40fe53
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40feae
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40fbf2
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40feae
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_401e90
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40fbca
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_414795
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_416e0b
sub_405c70
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax edx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] ecx
xor edi edi
mov [ ebp - 0x30 ] ecx
cmp [ eax ] 0x0
mov [ ebp - 0x2c ] edi
jne r-xdata
lea esi [ edx + 0x1 ]
xor edx edx
jmp r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx esi
mov eax [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax [ eax + 0x4 ]
mov ebx [ eax + ecx + 0x24 ]
mov esi [ eax + ecx + 0x20 ]
test ebx ebx
jl r-xdata
xorps xmm0 xmm0
movlpd [ ebp - 0x28 ] xmm0
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x28 ]
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
cmp [ eax + ecx + 0xc ] 0x0
jne r-xdata
mov eax [ edx ]
mov ecx edx
call [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
sub esi edx
sbb ebx edi
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add edx ecx
cmp [ edx + 0xc ] 0x0
sete al
mov [ ebp - 0x24 ] al
mov [ ebp - 0x4 ] 0x1
test al al
jne r-xdata
mov eax [ eax + ecx + 0x3c ]
test eax eax
je r-xdata
mov edx [ eax + ecx + 0x38 ]
mov [ ebp - 0x28 ] ecx
test edx edx
je r-xdata
test ebx ebx
jl r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ edx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edi 0x4
jmp r-xdata
cmp eax ecx
je r-xdata
jg r-xdata
mov eax [ ecx ]
push 0x0
push [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x20 ]
mov ecx [ eax + ecx + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
call eax
cmp eax [ ebp - 0x1c ]
jne r-xdata
lea ecx [ ecx ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add edx ecx
test edi edi
je r-xdata
mov ecx eax
call sub_404d70
mov ecx [ ebp - 0x18 ]
cmp esi edx
jbe r-xdata
mov edi 0x4
test edx edx
jne r-xdata
test edi edi
jne r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_4185c4
mov esi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ edx + 0xc ]
or eax edi
cmp [ edx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x1
test ebx ebx
jl r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x20 ] 0x0
mov [ eax + ecx + 0x24 ] 0x0
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov dl [ eax + ecx + 0x40 ]
mov ecx [ eax + ecx + 0x38 ]
mov [ ebp - 0x11 ] dl
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404ce0
push 0x0
push eax
mov ecx edx
call sub_402380
or eax 0x4
mov ecx [ ebp - 0x18 ]
jg r-xdata
movzx eax dl
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
call [ edx + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov dl [ eax + ecx + 0x40 ]
mov ecx [ eax + ecx + 0x38 ]
mov [ ebp - 0x11 ] dl
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test esi esi
je r-xdata
add esi 0xffffffff
adc ebx 0xffffffff
jmp r-xdata
or edi 0x4
mov [ ebp - 0x2c ] edi
mov dl [ ebp - 0x11 ]
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x11 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
movzx eax dl
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
test eax eax
jle r-xdata
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x18 ]
cmp eax 0xffffffff
jne r-xdata
add esi 0xffffffff
adc ebx 0xffffffff
jmp r-xdata
or edi 0x4
jmp r-xdata
mov edx [ ecx + 0x30 ]
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x11 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_405e82
mov ecx [ ebp - 0x30 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_405f20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42ec68
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ esp + 0x10 ]
add ecx esi
push eax
call sub_402440
push eax
mov [ esp + 0x24 ] 0x0
call sub_405b40
mov [ esp + 0x24 ] 0xffffffff
add esp 0x4
mov ecx [ esp + 0x10 ]
mov edi eax
test ecx ecx
je r-xdata
mov edx [ edi ]
mov ecx edi
push 0xa
mov edx [ edx + 0x20 ]
call edx
movzx ecx al
push ecx
mov ecx esi
call sub_406230
mov ecx esi
call sub_404d70
mov eax esi
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_405fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x0
mov [ ebp - 0x20 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40fe53
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40feae
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40fbf2
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40feae
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4063b0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40fbca
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_414795
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_416e0b
sub_406100
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x0
mov [ ebp - 0x20 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40fe53
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40feae
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40fbf2
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40feae
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_406460
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40fbca
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_414795
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_416e0b
sub_406230
push ebp
mov ebp esp
push 0xffffffff
push sub_42eca0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ esi ]
xor edi edi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] esi
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] 0x0
sete al
mov [ ebp - 0x1c ] al
mov [ ebp - 0x4 ] 0x1
test al al
jne r-xdata
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edi 0x4
jmp r-xdata
cmp ecx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
movzx eax al
push eax
call [ edx + 0xc ]
cmp eax 0xffffffff
mov ecx 0x4
cmove edi ecx
jmp r-xdata
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
call sub_404d70
mov [ ebp - 0x4 ] 0x1
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov ecx 0x4
mov al [ ebp + 0x8 ]
mov [ edx ] al
movzx eax al
cmp eax 0xffffffff
cmove edi ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_4185c4
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_404ce0
push 0x0
push eax
call sub_402380
or eax 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
call [ edx + 0x8 ]
sub_406317
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_4063b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42eccb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_414729
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_401d40
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_401c70
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_406460
push ebp
mov ebp esp
push 0xffffffff
push sub_42ed1c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x18
call sub_414729
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
xorps xmm0 xmm0
movdqu [ esi ] xmm0
movq [ esi + 0x10 ] xmm0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_401d40
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_401c70
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x4 ] 0x0
push 0x1
mov [ ebp - 0x4 ] 0x2
mov ecx esi
push eax
mov [ esi ] r--data
call sub_406540
jmp r-xdata
lea eax [ ecx + 0x1c ]
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
sub_406540
push ebp
mov ebp esp
push 0xffffffff
push sub_42ed40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x14 ] ebx
call sub_414d78
mov esi eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x18 ] esi
call sub_40fa4d
add esp 0x4
mov [ ebx + 0x8 ] 0x0
cmp [ ebp + 0xc ] 0x0
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
mov esi r--data
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
sub edi ecx
inc edi
push edi
call sub_40fed7
add esp 0x4
mov edx eax
test edi edi
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
call sub_40fa4d
mov edi esi
add esp 0x4
lea ecx [ edi + 0x1 ]
mov edi 0x6
mov [ ebx + 0x8 ] edx
push edi
mov esi r--data
call sub_40fed7
mov edx eax
add esp 0x4
sub edx esi
mov ecx edx
sub ecx esi
mov cl [ esi ]
lea esi [ esi + 0x1 ]
mov [ edx + esi - 0x1 ] cl
dec edi
jne r-xdata
mov edi 0x5
mov [ ebx + 0x10 ] eax
push edi
mov esi r--data
call sub_40fed7
mov edx eax
add esp 0x4
sub edx esi
lea esp [ esp ]
mov al [ esi ]
lea esi [ esi + 0x1 ]
mov [ ecx + esi - 0x1 ] al
dec edi
jne r-xdata
mov cl [ esi ]
lea esi [ esi + 0x1 ]
mov [ edx + esi - 0x1 ] cl
dec edi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
mov [ ebx + 0x14 ] eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
movzx eax [ eax ]
mov [ ebx + 0xc ] al
mov eax [ ecx + 0x4 ]
movzx eax [ eax ]
mov [ ebx + 0xd ] al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xc ] 0x2c2e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4066b0
push ecx
push esi
mov esi ecx
push edi
push 0x0
push 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] 0x0
call sub_402380
push 0x4
call sub_414729
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
mov [ esi + 0x30 ] 0x0
pop esi
pop ecx
retn
push 0x1
mov [ edi ] 0x0
call sub_40fbf8
mov [ edi ] eax
add esp 0x4
mov [ esi + 0x30 ] edi
pop edi
pop esi
pop ecx
retn
sub_406740
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_406770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
movsx eax al
push eax
call sub_415136
xor ecx ecx
add esp 0x8
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_406790
mov eax [ ecx ]
lea edx [ ecx + 0x8 ]
push edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x8 ] r--data
mov eax [ edx - 0x8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0xc ] eax
mov [ edx ] r--data
call sub_410260
pop ecx
retn
sub_4067c0
push ebp
mov ebp esp
sub esp 0x410
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x410 ] ecx
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi edx
push edi
mov edi [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
push r--data
push esi
push eax
lea eax [ ebp - 0xc ]
push eax
push r--data
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
push r--data
push esi
push eax
lea eax [ ebp - 0xc ]
push eax
push r--data
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x5
push eax
call sub_414da3
add esp 0xc
test edi edi
mov eax r--data
cmovne eax edi
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push r--data
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push 0x0
sub ecx edx
lea eax [ ebp - 0x40c ]
push ecx
push eax
push [ ebp - 0x410 ]
call [ send@IAT ]
mov ecx [ ebp - 0x4 ]
cmp eax 0xffffffff
setne al
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call sub_414962
add esp 0x1c
pop edi
lea ecx [ ebp - 0x40c ]
pop esi
lea edx [ ecx + 0x1 ]
pop ebx
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call sub_414962
add esp 0x18
jmp r-xdata
sub_4068d0
push ebp
mov ebp esp
sub esp 0x80c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ recv@IAT ]
push esi
push edi
mov [ ebp - 0x80c ] edx
mov edi ecx
mov [ ebp - 0x808 ] eax
xor esi esi
nop
push 0x400
lea eax [ ebp - 0x804 ]
mov eax 0x400
sub eax esi
push eax
lea eax [ ebp - 0x404 ]
add eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or eax 0xffffffff
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push eax
push edi
call ebx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x80c ]
push 0x20
mov [ eax ] esi
lea eax [ ebp - 0x404 ]
push eax
call sub_414c30
push 0x20
lea esi [ eax + 0x1 ]
push esi
call sub_414c30
push esi
mov [ eax ] 0x0
call sub_414d5b
mov ecx [ ebp - 0x808 ]
add esp 0x14
pop edi
pop esi
mov [ ecx ] eax
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
add esi eax
jmp r-xdata
push 0x0
cmp esi 0x400
jge r-xdata
sub_4069a0
push ebp
mov ebp esp
and esp 0xfffffff8
cmp [ rw-data ] 0x1
mov ecx rw-data
je r-xdata
call sub_404d70
mov edx r--data
mov ecx rw-data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
push 0x1
call sub_416379
int3
mov edx r--data
call sub_405c70
push eax
call sub_405f20
add esp 0x4
mov [ rw-data ] 0x1
mov esp ebp
pop ebp
retn
sub_406a00
push ebp
mov ebp esp
and esp 0xfffffff0
push 0xffffffff
push sub_42edb8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x1198
call sub_42a0a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1194 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x11a8 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x3c ] edx
mov edx ecx
mov [ esp + 0x2c ] edx
mov eax [ ebp + 0x2c ]
mov edi [ ebp + 0x64 ]
mov ecx [ ebp + 0x6c ]
mov esi [ ebp + 0x54 ]
mov [ esp + 0x80 ] eax
mov eax [ ebp + 0x38 ]
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x48 ]
push edx
push r--data
mov [ esp + 0x58 ] eax
cmp [ eax ] 0x0
lea eax [ esp + 0x1a4 ]
push 0x800
mov [ esp + 0x84 ] edi
mov [ esp + 0x50 ] ecx
mov [ esp + 0x88 ] 0x0
push eax
jne r-xdata
call sub_414962
push [ esp + 0x60 ]
push r--data
push [ esp + 0x44 ]
call sub_4148de
mov eax [ ebp + 0x4c ]
add esp 0x1c
mov [ esp + 0x3c ] eax
mov [ esp + 0x7c ] 0x1
call sub_414962
add esp 0x10
jmp r-xdata
push 0x1
push sub_4069a0
call [ SetConsoleCtrlHandler@IAT ]
movsd xmm1 [ r--data ]
lea ecx [ esp + 0xd0 ]
xorps xmm0 xmm0
mov [ rw-data ] 0x0
xor esi esi
mov [ esp + 0x68 ] 0x0
xor eax eax
mov [ esp + 0x10 ] esi
movapd xmm2 xmm0
mov [ esp + 0x38 ] esi
mov esi [ esp + 0x48 ]
push esi
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x38 ] 0x0
movsd [ esp + 0x70 ] xmm0
movsd [ esp + 0xa8 ] xmm1
movsd [ esp + 0x98 ] xmm2
movsd [ esp + 0x88 ] xmm0
movsd [ esp + 0x90 ] xmm1
movsd [ esp + 0xa0 ] xmm0
mov [ esp + 0x68 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x50 ] 0xffffffff
mov [ esp + 0x2c ] 0x1
movq [ esp + 0xd4 ] xmm0
mov [ esp + 0xdc ] eax
call sub_409b10
mov [ esp + 0x11b0 ] 0x1
lea ecx [ esp + 0xf0 ]
xorps xmm0 xmm0
mov [ esp + 0xf8 ] 0x0
push esi
movq [ esp + 0xf4 ] xmm0
call sub_409b10
push [ esp + 0x3c ]
lea eax [ esp + 0x150 ]
mov [ esp + 0x11b4 ] 0x2
push r--data
push 0x6
push eax
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x1f ] 0x0
mov [ esp + 0x28 ] 0x0
call sub_414962
mov esi [ esp + 0x3c ]
lea eax [ esp + 0xc4 ]
add esp 0x10
xorps xmm0 xmm0
movdqa [ esp + 0x104 ] xmm0
movdqa [ esp + 0x114 ] xmm0
mov [ esp + 0x108 ] 0x0
push eax
lea eax [ esp + 0x108 ]
mov [ esp + 0x110 ] 0x1
push eax
lea eax [ esp + 0x154 ]
push eax
push esi
call [ getaddrinfo@IAT ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
mov [ esp + 0xe4 ] 0xf
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0xd0 ] 0x0
jne r-xdata
cmp [ ebp + 0x50 ] 0x1
jne r-xdata
mov eax [ esp + 0xb4 ]
mov ecx eax
mov edx [ ebp + 0x44 ]
mov [ esp + 0x14 ] ecx
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esp + 0x28 ] 0x0
push esi
push r--data
push edi
call sub_40ea30
add esp 0xc
mov esi 0x3
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xd8 ]
call sub_4018b0
mov [ esp + 0x11b0 ] 0x0
lea edx [ esp + 0xd0 ]
cmp [ esp + 0xe4 ] 0x10
lea ecx [ esp + 0xb8 ]
push [ esp + 0xe0 ]
cmovae edx [ esp + 0xd4 ]
call sub_401370
add esp 0x4
lea eax [ esp + 0xb8 ]
cmp [ esp + 0xcc ] 0x10
cmovae eax [ esp + 0xb8 ]
push eax
lea eax [ esp + 0x9a0 ]
push r--data
push eax
call sub_4148de
add esp 0xc
cmp [ esp + 0xcc ] 0x10
jb r-xdata
mov [ esp + 0x28 ] 0x0
push r--data
push edi
call sub_40ea30
add esp 0x8
mov esi 0x3
jmp r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0xf0 ]
test eax eax
je r-xdata
mov [ esp + 0x11b0 ] 0xffffffff
cmp [ esp + 0xe4 ] 0x10
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
jb r-xdata
push [ esp + 0xb8 ]
call j_sub_41497e#2
add esp 0x4
mov [ esp + 0x44 ] 0x0
xor eax eax
mov esi [ esp + 0x44 ]
lea eax [ esp + 0xb0 ]
push eax
push 0x0
push 0x0
push esi
call [ getaddrinfo@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
push eax
call j_sub_41497e#2
add esp 0x4
push [ esp + 0xd0 ]
call j_sub_41497e#2
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ esp + 0x14 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
call [ socket@IAT ]
mov ecx [ esp + 0xb0 ]
push [ ecx + 0x10 ]
push [ ecx + 0x18 ]
push eax
call [ bind@IAT ]
cmp eax 0xffffffff
jne r-xdata
push esi
push r--data
push edi
call sub_40ea30
add esp 0xc
mov esi 0x4
jmp r-xdata
cmp eax 0x17
jne r-xdata
cmp edx 0x6
jne r-xdata
cmp [ ebp + 0x68 ] 0x0
mov [ esp + 0xb0 ] 0x0
je r-xdata
mov eax esi
mov ecx [ esp + 0x11a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x1194 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push eax
call j_sub_41497e#2
add esp 0x4
cmp [ ebp + 0x5c ] 0x0
mov [ edi + 0xac ] 0x1
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax ecx
mov esi [ ebp + 0x18 ]
cdq
idiv esi
mov [ esp + 0x60 ] 0x0
test edx edx
jne r-xdata
call [ WSAGetLastError@IAT ]
push eax
push esi
push r--data
push edi
call sub_40ea30
add esp 0x10
mov esi 0x5
jmp r-xdata
mov ecx [ ecx + 0x1c ]
mov [ esp + 0x14 ] ecx
test ecx ecx
jne r-xdata
cmp edx 0x4
jne r-xdata
mov esi [ esp + 0x10 ]
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
cmp [ esp + 0x28 ] 0x1
mov [ esp + 0x11b0 ] 0x7
jne r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
cmp esi 0xffffffff
je r-xdata
jle r-xdata
mov esi 0x1
jmp r-xdata
mov esi [ esp + 0x2c ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
sub eax 0x2
je r-xdata
mov esi [ esp + 0x14 ]
mov esi [ esp + 0x2c ]
lea eax [ esp + 0xb4 ]
push eax
lea eax [ esp + 0x108 ]
push eax
lea eax [ esp + 0x154 ]
push eax
push esi
call [ getaddrinfo@IAT ]
test eax eax
je r-xdata
test ecx ecx
jg r-xdata
xor esi esi
cmp [ esp + 0x38 ] 0x0
jle r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov eax [ ecx + 0x18 ]
push [ eax + 0x4 ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ esp + 0x158 ]
push 0x2e
push eax
call sub_414962
add esp 0xc
sub eax 0x15
jne r-xdata
cmp [ esp + 0x28 ] 0x1
jne r-xdata
lea eax [ esp + 0x184 ]
push 0x9
push eax
call sub_414f38
lea eax [ esp + 0x104 ]
push eax
call sub_4150e5
add esp 0xc
lea eax [ esp + 0xfc ]
push eax
lea eax [ esp + 0x12c ]
push eax
call sub_4149b6
lea eax [ esp + 0x130 ]
push eax
push r--data
lea eax [ esp + 0x1a0 ]
push 0xb
push eax
call sub_414f1b
lea eax [ esp + 0x19c ]
push eax
lea eax [ esp + 0x1ac ]
push eax
push r--data
push edi
call sub_40ea30
add esp 0x28
mov eax [ esp + 0xb4 ]
mov esi eax
mov [ esp + 0x14 ] esi
test eax eax
je r-xdata
push esi
push r--data
push edi
call sub_40ea30
add esp 0xc
mov [ esp + 0x28 ] 0x0
mov esi 0x2
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x154 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
lea eax [ esp + 0x154 ]
push ecx
push eax
jmp r-xdata
cmp [ esp + 0x154 ] 0x0
jne r-xdata
push 0x2
push eax
push eax
push 0x2e
lea eax [ esp + 0x164 ]
push eax
push [ ecx + 0x10 ]
push [ ecx + 0x18 ]
call [ getnameinfo@IAT ]
jmp r-xdata
inc [ esp + 0x64 ]
xorps xmm0 xmm0
cmp [ edi + 0xac ] 0x0
movsd [ esp + 0x54 ] xmm0
je r-xdata
push 0x1
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadAffinityMask@IAT ]
push rw-data
call [ QueryPerformanceFrequency@IAT ]
push rw-data
call [ QueryPerformanceCounter@IAT ]
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
jmp r-xdata
test esi esi
jle r-xdata
push eax
push r--data
push edi
call sub_40ea30
add esp 0xc
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ esp + 0x154 ]
push ecx
push eax
jmp r-xdata
lea ecx [ esp + 0xc0 ]
call sub_4018b0
cmp [ esp + 0xcc ] 0x10
lea eax [ esp + 0xb8 ]
push [ esp + 0x3c ]
cmovae eax [ esp + 0xbc ]
push eax
push r--data
push edi
call sub_40ea30
push [ esp + 0x44 ]
push r--data
push edi
call sub_40ea30
mov esi [ esp + 0x2c ]
add esp 0x1c
push [ esp + 0x38 ]
push esi
push r--data
push edi
call sub_40ea30
mov eax [ esp + 0x74 ]
add esp 0x10
test eax eax
jle r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ ebp + 0x8 ]
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi [ esp + 0xb0 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
call [ socket@IAT ]
mov [ esp + 0x1c ] eax
test esi esi
je r-xdata
push [ ebp + 0x70 ]
mov edx [ ebp + 0x14 ]
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0xb8 ]
mov ecx esi
push [ ebp + 0x20 ]
call sub_407f00
add esp 0x10
mov esi eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x44 ]
test eax eax
jne r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
cmp [ esp + 0x38 ] 0x0
jle r-xdata
cmp eax ecx
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
mov esi [ esp + 0x1c ]
push [ esi + 0x10 ]
push [ esi + 0x18 ]
mov esi eax
push esi
call [ bind@IAT ]
jmp r-xdata
mov [ esp + 0x1c ] esi
cmp eax 0x2
jne r-xdata
test ecx ecx
je r-xdata
cmp [ esp + 0xcc ] 0x10
jb r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
movsd xmm1 [ esp + 0x54 ]
add esi 0xa
movd xmm0 esi
cvtdq2pd xmm0 xmm0
comisd xmm1 xmm0
ja r-xdata
push rw-data
call [ QueryPerformanceCounter@IAT ]
cmp esi 0xffffffff
jne r-xdata
mov eax [ esp + 0x14 ]
push [ eax + 0x10 ]
push [ eax + 0x18 ]
push esi
call [ connect@IAT ]
cmp eax 0xffffffff
mov eax 0xffffffff
cmove esi eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x58 ] 0x1
jne r-xdata
cmp [ ebp + 0x58 ] 0x1
jne r-xdata
cmp eax 0x17
jne r-xdata
cmp ecx 0x6
jne r-xdata
mov [ esp + 0x28 ] 0x1
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0x11b0 ] 0x3
sub eax 0x2
je r-xdata
push [ esp + 0xb4 ]
call [ freeaddrinfo@IAT ]
test esi esi
jne r-xdata
push [ esp + 0xb8 ]
call j_sub_41497e#2
add esp 0x4
jmp r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
movsd xmm1 [ esp + 0x6c ]
sub esp 0x18
movd xmm0 esi
cvtdq2pd xmm0 xmm0
movsd xmm2 [ esp + 0xac ]
divsd xmm1 xmm0
movsd [ esp + 0x10 ] xmm1
movsd xmm1 [ esp + 0xbc ]
movsd [ esp + 0x8 ] xmm2
movsd [ esp ] xmm1
push r--data
push edi
call sub_40ea30
add esp 0x20
cmp [ ebp + 0x28 ] 0x1
jne r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esp + 0x11b0 ] 0x5
mov eax [ ecx + 0x4 ]
sub eax 0x2
je r-xdata
cmp [ esp + 0xf ] 0x1
jne r-xdata
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esp + 0x11b0 ] 0x4
mov eax [ ecx + 0x4 ]
sub eax 0x2
je r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
push r--data
push edi
call sub_40ea30
mov esi [ esi + 0x1c ]
add esp 0x8
mov [ esp + 0x14 ] esi
test esi esi
jne r-xdata
cmp ecx 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
push [ eax + 0x4 ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ esp + 0x158 ]
push 0x2e
push eax
call sub_414962
add esp 0xc
sub eax 0x15
jne r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov edx r--data
jmp r-xdata
mov eax [ ecx + 0x18 ]
push [ eax + 0x4 ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ esp + 0x158 ]
push 0x2e
push eax
call sub_414962
add esp 0xc
sub eax 0x15
jne r-xdata
cmp [ esp + 0x34 ] 0x0
mov [ edi + 0xac ] 0x1
jle r-xdata
inc [ esp + 0x18 ]
mov [ edi + 0xac ] 0x0
jmp r-xdata
mov eax [ ecx + 0x18 ]
push [ eax + 0x4 ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ esp + 0x158 ]
push 0x2e
push eax
call sub_414962
add esp 0xc
sub eax 0x15
jne r-xdata
cmp [ esp + 0x34 ] 0x0
mov [ edi + 0xac ] 0x1
jle r-xdata
inc [ esp + 0x18 ]
mov [ edi + 0xac ] 0x0
jmp r-xdata
jmp r-xdata
lea ecx [ esp + 0x154 ]
lea edx [ ecx + 0x1 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x154 ] 0x0
jne r-xdata
push 0x2
push eax
push eax
push 0x2e
lea eax [ esp + 0x164 ]
push eax
push [ esi + 0x10 ]
push [ esi + 0x18 ]
call [ getnameinfo@IAT ]
jmp r-xdata
movsd xmm1 [ esp + 0x84 ]
sub esp 0x18
movd xmm0 esi
cvtdq2pd xmm0 xmm0
divsd xmm1 xmm0
movsd xmm0 [ esp + 0xb4 ]
movsd [ esp + 0x10 ] xmm1
movsd xmm1 [ esp + 0xa4 ]
movsd [ esp + 0x8 ] xmm0
movsd [ esp ] xmm1
push r--data
push edi
call sub_40ea30
add esp 0x20
jmp r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
lea ecx [ esp + 0x154 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x154 ] 0x0
jne r-xdata
push 0x2
push eax
push eax
push 0x2e
lea eax [ esp + 0x164 ]
push eax
push [ ecx + 0x10 ]
push [ ecx + 0x18 ]
call [ getnameinfo@IAT ]
jmp r-xdata
mov [ esp + 0x18 ] 0x0
push [ esp + 0x18 ]
push r--data
push edi
call sub_40ea30
add esp 0xc
mov [ esp + 0xf ] 0x1
mov [ esp + 0x40 ] 0x0
lea ecx [ esp + 0x154 ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x154 ] 0x0
jne r-xdata
push 0x2
push eax
push eax
push 0x2e
lea eax [ esp + 0x164 ]
push eax
push [ ecx + 0x10 ]
push [ ecx + 0x18 ]
call [ getnameinfo@IAT ]
jmp r-xdata
mov [ esp + 0x18 ] 0x0
push [ esp + 0x18 ]
push r--data
push edi
call sub_40ea30
add esp 0xc
mov [ esp + 0xf ] 0x0
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push ecx
lea eax [ esp + 0x158 ]
push eax
lea ecx [ esp + 0xc0 ]
call sub_4018b0
cmp [ esp + 0xcc ] 0x10
lea eax [ esp + 0xb8 ]
cmovae eax [ esp + 0xb8 ]
push eax
push [ esp + 0x30 ]
push r--data
push edi
call sub_40ea30
add esp 0x10
mov [ esp + 0x11b0 ] 0x2
cmp [ esp + 0xcc ] 0x10
jb r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x158 ]
push eax
lea ecx [ esp + 0xc0 ]
call sub_4018b0
cmp [ esp + 0xcc ] 0x10
lea eax [ esp + 0xb8 ]
push [ esp + 0x3c ]
cmovae eax [ esp + 0xbc ]
push eax
push r--data
push edi
call sub_40ea30
add esp 0x10
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x158 ]
push eax
lea ecx [ esp + 0xc0 ]
call sub_4018b0
cmp [ esp + 0xcc ] 0x10
lea eax [ esp + 0xb8 ]
push [ esp + 0x3c ]
cmovae eax [ esp + 0xbc ]
push eax
push r--data
push edi
call sub_40ea30
mov eax [ esp + 0x54 ]
add esp 0x10
test eax eax
je r-xdata
sub ecx edx
push [ esp + 0xb8 ]
call j_sub_41497e#2
add esp 0x4
jmp r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov edx eax
call sub_40f600
cmp [ edi + 0xac ] 0x0
mov esi eax
je r-xdata
inc [ esp + 0x10 ]
push 0x1
mov [ esp + 0x64 ] 0x1
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadAffinityMask@IAT ]
push rw-data
call [ QueryPerformanceFrequency@IAT ]
push rw-data
call [ QueryPerformanceCounter@IAT ]
lea eax [ esp + 0x99c ]
mov ecx esi
push eax
push [ ebp + 0x50 ]
lea edx [ esp + 0x1a4 ]
push [ esp + 0x84 ]
push [ ebp + 0x30 ]
push [ esp + 0x90 ]
call sub_4067c0
add esp 0x14
lea eax [ esp + 0x74 ]
lea edx [ esp + 0x68 ]
mov ecx esi
push eax
call sub_4068d0
add esp 0x4
push rw-data
call [ QueryPerformanceCounter@IAT ]
push esi
call [ closesocket@IAT ]
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x60 ] 0x1
jmp r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
inc [ esp + 0x38 ]
inc [ esp + 0x40 ]
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov esi [ esp + 0x1c ]
push esi
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov edx r--data
mov ecx rw-data
call sub_405c70
mov ecx eax
call sub_40dad0
cmp eax 0x2
je r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
mov edx r--data
mov ecx rw-data
call sub_405c70
mov ecx eax
call sub_40dad0
mov edx r--data
mov ecx eax
call sub_405c70
mov ecx eax
call sub_40dad0
mov edx r--data
mov ecx eax
call sub_405c70
cmp eax 0x1
je r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
jmp r-xdata
mov edx r--data
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx esi
mov ecx edi
call sub_405c70
mov ecx edi
call sub_404d70
mov ecx esi
call sub_40f7a0
mov edx [ rw-data ]
mov ecx [ rw-data ]
call sub_42e87d
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov edx [ rw-data ]
sbb edx [ rw-data ]
movsd [ esp + 0x1c ] xmm0
call sub_42e87d
mulsd xmm0 [ r--data ]
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov edx [ rw-data ]
sbb edx [ rw-data ]
divsd xmm0 [ esp + 0x1c ]
movsd [ esp + 0x54 ] xmm0
call sub_42e87d
mulsd xmm0 [ r--data ]
sub esp 0x8
movsd xmm1 [ esp + 0x5c ]
movsd [ esp ] xmm1
divsd xmm0 [ esp + 0x24 ]
push r--data
push edi
movsd [ esp + 0x2c ] xmm0
call sub_40ea30
mov eax [ ebp + 0x28 ]
add esp 0x10
cmp eax 0x1
jne r-xdata
push [ esp + 0xb8 ]
call j_sub_41497e#2
add esp 0x4
cmp eax 0x3
jne r-xdata
mov [ esp + 0x11b0 ] 0x2
cmp [ esp + 0xcc ] 0x10
jb r-xdata
cmp eax 0x3
jne r-xdata
inc [ esp + 0x34 ]
movsd xmm2 [ esp + 0x54 ]
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov [ esp + 0x4c ] 0x1
cmp [ esp + 0x4c ] 0x0
jne r-xdata
mov [ esp + 0x4c ] 0x0
jmp r-xdata
cmp [ esp + 0x4c ] 0x1
jne r-xdata
movsd xmm1 [ esp + 0x6c ]
movsd xmm0 [ esp + 0xa4 ]
movapd xmm1 xmm2
comisd xmm0 xmm2
addsd xmm1 [ esp + 0x6c ]
movsd [ esp + 0x6c ] xmm1
jbe r-xdata
push [ esp + 0x68 ]
movsd xmm0 [ esp + 0x20 ]
push [ esp + 0x78 ]
sub esp 0x8
movsd [ esp ] xmm0
push r--data
push edi
call sub_40ea30
imul eax [ esp + 0x80 ] 0x3e8
add esp 0x10
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm0 [ esp + 0x24 ]
mulsd xmm0 [ r--data ]
divsd xmm0 [ r--data ]
movsd [ esp ] xmm0
push r--data
push edi
call sub_40ea30
mov eax [ ebp + 0x28 ]
add esp 0x10
mov eax [ esp + 0x80 ]
test eax eax
je r-xdata
cmp [ esp + 0x60 ] 0x1
jne r-xdata
cmp esi 0x1
jle r-xdata
comisd xmm2 [ esp + 0x94 ]
jbe r-xdata
movsd [ esp + 0xa4 ] xmm2
push [ esp + 0x2c ]
push r--data
push edi
call sub_40ea30
add esp 0xc
push eax
push [ esp + 0x30 ]
push r--data
push edi
call sub_40ea30
add esp 0x10
jmp r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov eax [ esp + 0x48 ]
test eax eax
jle r-xdata
mov edx [ esp + 0x48 ]
test edx edx
jne r-xdata
cmp eax 0x1
jne r-xdata
movsd [ esp + 0x94 ] xmm2
mov eax [ esp + 0x30 ]
mov ecx [ ebp + 0x8 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax ecx
je r-xdata
push r--data
call sub_4164fc
add esp 0x4
cmp [ edi + 0xa8 ] 0x1
jne r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0xd0 ]
movsd xmm0 [ esp + 0x54 ]
movsd [ edx + ecx * 8 ] xmm0
mov edx [ esp + 0xf0 ]
movsd xmm0 [ esp + 0x1c ]
movsd [ edx + ecx * 8 ] xmm0
inc ecx
xor edx edx
cmp ecx eax
cmove ecx edx
mov [ esp + 0x50 ] ecx
mov edi [ esp + 0xd0 ]
xor ecx ecx
xorps xmm1 xmm1
dec esi
nop
dec esi
subsd xmm1 xmm2
sub esp 0x8
movd xmm0 esi
cvtdq2pd xmm0 xmm0
divsd xmm1 xmm0
movaps xmm0 xmm2
subsd xmm0 xmm1
movsd [ esp ] xmm0
push r--data
push edi
call sub_40ea30
add esp 0x10
cmp [ ebp + 0x28 ] 0x1
jne r-xdata
cmp [ ebp + 0x34 ] 0x1
mov esi [ esp + 0x10 ]
jne r-xdata
movsd xmm1 [ esp + 0x1c ]
movaps xmm0 xmm1
addsd xmm0 [ esp + 0x84 ]
movsd [ esp + 0x84 ] xmm0
movsd xmm0 [ esp + 0x8c ]
comisd xmm0 xmm1
jbe r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
mov edx r--data
mov ecx edi
call sub_405c70
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x38 ] 0x0
je r-xdata
cmp esi edx
mov edi [ esp + 0x78 ]
mov eax edx
cmovl eax esi
sub esp 0x8
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm1 xmm0
movapd xmm0 xmm2
subsd xmm0 xmm1
movsd [ esp ] xmm0
push r--data
push edi
call sub_40ea30
add esp 0x10
cmp [ ebp + 0x28 ] 0x1
jne r-xdata
addsd xmm1 [ edi + ecx * 8 ]
inc ecx
jmp r-xdata
mov esi [ esp + 0x10 ]
movsd xmm2 [ esp + 0x1c ]
movsd xmm1 [ esp + 0x84 ]
movd xmm0 esi
subsd xmm1 xmm2
cvtdq2pd xmm0 xmm0
divsd xmm1 xmm0
movaps xmm0 xmm2
jmp r-xdata
comisd xmm1 [ esp + 0x9c ]
jbe r-xdata
movsd [ esp + 0x8c ] xmm1
mov edx [ ebp + 0x60 ]
cmp [ esp + 0x40 ] edx
jl r-xdata
test esi esi
jg r-xdata
push edi
lea ecx [ esp + 0xec ]
call sub_404200
mov [ esp + 0x11b0 ] 0x6
cmp [ esp + 0xec ] 0x0
je r-xdata
mov edx [ esp + 0x48 ]
xorps xmm1 xmm1
mov edi [ esp + 0xf0 ]
xor ecx ecx
mov edi edi
cmp edx esi
mov eax esi
cmovl eax edx
cmp ecx eax
jge r-xdata
sub esp 0x8
subsd xmm0 xmm1
movsd [ esp ] xmm0
push r--data
push edi
call sub_40ea30
add esp 0x10
movsd [ esp + 0x9c ] xmm1
movsd xmm0 [ ebp + 0x74 ]
xor esi esi
mulsd xmm0 [ r--data ]
subsd xmm0 [ esp + 0x54 ]
comisd xmm0 [ r--data ]
movsd [ esp + 0x54 ] xmm0
jbe r-xdata
test edx edx
je r-xdata
mov [ esp + 0x11b0 ] 0x2
call j_sub_4185c4
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ esp + 0x78 ]
cmp esi edx
mov eax edx
cmovl eax esi
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm1 xmm0
movsd xmm0 [ esp + 0x1c ]
addsd xmm1 [ edi + ecx * 8 ]
inc ecx
jmp r-xdata
mov ecx [ esp + 0xe8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0xe8 ]
call sub_404ce0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp edx esi
mov eax esi
cmovl eax edx
cmp ecx eax
jge r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push eax
call sub_402380
or eax 0x4
sub_407f00
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
push [ edi + 0xc ]
push [ edi + 0x8 ]
push [ edi + 0x4 ]
call [ socket@IAT ]
mov esi eax
mov ecx 0x1
xor eax eax
cmp [ ebp + 0x14 ] cl
cmove ecx eax
lea eax [ ebp - 0x8 ]
push eax
push 0x8004667e
push esi
mov [ ebp - 0x8 ] ecx
call [ ioctlsocket@IAT ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ QueryPerformanceFrequency@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call [ QueryPerformanceCounter@IAT ]
push [ edi + 0x10 ]
push [ edi + 0x18 ]
push esi
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebx + 0x10 ]
push [ ebx + 0x18 ]
push esi
call [ bind@IAT ]
mov edi [ ebp + 0x8 ]
mov ebx [ Sleep@IAT ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push esi
call [ closesocket@IAT ]
call [ WSAGetLastError@IAT ]
mov ecx [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov [ ecx ] eax
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x0
test edi edi
jne r-xdata
call [ WSAGetLastError@IAT ]
mov ecx [ ebp - 0x24 ]
push esi
mov [ ecx ] eax
call [ closesocket@IAT ]
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x1
push r--data
push edi
push edi
jmp r-xdata
test eax eax
jne r-xdata
cmp edi eax
jmp r-xdata
push esi
call eax
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
sbb edx [ ebp - 0x14 ]
call sub_42e87d
mulsd xmm0 [ r--data ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
movsd [ ebp - 0x30 ] xmm0
call sub_42e87d
movsd xmm1 [ ebp - 0x30 ]
divsd xmm1 xmm0
movd xmm0 [ ebp - 0x28 ]
cvtdq2pd xmm0 xmm0
comisd xmm1 xmm0
jae r-xdata
test edi edi
je r-xdata
movsd xmm0 [ r--data ]
comisd xmm0 xmm1
jbe r-xdata
push esi
call [ closesocket@IAT ]
call [ WSAGetLastError@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x1
call ebx
jmp r-xdata
push 0x0
call ebx
jmp r-xdata
cmp [ rw-data ] 0x0
mov eax [ send@IAT ]
jne r-xdata
sub_4080b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ee5f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x2c ]
xor ebx ebx
mov esi [ ebp + 0x68 ]
mov [ ebp - 0x2d8 ] eax
mov eax [ ebp + 0x48 ]
mov [ ebp - 0x2c8 ] eax
mov eax [ ebp + 0x54 ]
mov [ ebp - 0x2c0 ] eax
mov eax [ ebp + 0x6c ]
mov [ ebp - 0x2dc ] eax
mov eax [ ebp + 0x74 ]
mov [ ebp - 0x2d4 ] eax
xor eax eax
mov [ ebp - 0x2cc ] ebx
mov edi [ Sleep@IAT ]
mov [ ebp - 0x2d0 ] esi
mov [ ebp - 0x2b8 ] eax
push 0xb8
lea eax [ ebp - 0x2b4 ]
push 0x0
push eax
call sub_417ad0
push esi
lea ecx [ ebp - 0x2b4 ]
call sub_409bc0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1e8 ] 0xf
mov [ ebp - 0x1ec ] 0x0
mov [ ebp - 0x1fc ] 0x0
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x2b4 ]
lea ecx [ ebp - 0x2b4 ]
mov eax [ eax + 0x4 ]
add ecx eax
lea eax [ ebp - 0x2e0 ]
push eax
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x2e0 ]
mov esi eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2bc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0xa
mov eax [ eax + 0x20 ]
call eax
mov [ ebp - 0x2c4 ] al
lea edx [ ebp - 0x1fc ]
push [ ebp - 0x2c4 ]
lea ecx [ ebp - 0x2b4 ]
call sub_40e470
mov ecx eax
add esp 0x4
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
test [ eax + ecx + 0xc ] 0x6
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
inc [ ebp - 0x2b8 ]
cmp [ ebp - 0x1e8 ] 0x10
jb r-xdata
push 0xb0
lea eax [ ebp - 0x1e4 ]
push 0x0
push eax
call sub_417ad0
mov [ ebp - 0x1e4 ] r--data
mov [ ebp - 0x1d4 ] r--data
mov [ ebp - 0x17c ] r--data
add esp 0x8
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x1cc ]
or ebx 0x1
lea ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x2cc ] ebx
push eax
call sub_40ae90
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x1e4 ]
push 0x4
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x68 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea eax [ ebp - 0x1cc ]
mov [ ebp - 0x2e8 ] eax
mov [ ebp - 0x1cc ] r--data
call sub_414729
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x2b4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x2b4 ] r--data
mov eax [ ebp - 0x2b4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ebp + ecx - 0x2b8 ] eax
mov eax [ ebp - 0x254 ]
mov [ ebp - 0x2a4 ] r--data
test eax eax
je r-xdata
push [ ebp - 0x1fc ]
call j_sub_41497e#2
add esp 0x4
xor esi esi
push 0x1
mov [ esi ] 0x0
call sub_40fbf8
add esp 0x4
mov [ esi ] eax
jmp r-xdata
cmp [ ebp - 0x258 ] 0x0
je r-xdata
mov esi [ ebp - 0x298 ]
lea ecx [ ebp - 0x260 ]
cmp [ esi ] ecx
jne r-xdata
mov [ ebp - 0x118 ] 0xf
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x12c ] 0x0
lea edx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x1e4 ]
call sub_40e640
mov ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
test [ eax + ecx + 0xc ] 0x6
jne r-xdata
push ecx
push eax
lea ecx [ ebp - 0x1cc ]
call sub_40be00
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x198 ] esi
mov [ ebp - 0x1c0 ] eax
lea eax [ ebp - 0x1c4 ]
mov [ ebp - 0x1bc ] eax
lea eax [ ebp - 0x1b8 ]
mov [ ebp - 0x1b0 ] eax
lea eax [ ebp - 0x1b4 ]
mov [ ebp - 0x1ac ] eax
lea eax [ ebp - 0x1a8 ]
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x1a4 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1c4 ] 0x0
mov [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x1c8 ] 0x0
mov [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1a8 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x1fc ]
cmp [ ebp - 0x1e8 ] 0x10
mov ecx [ ebp - 0x1ec ]
cmovae eax [ ebp - 0x1fc ]
mov [ ebp - 0x1cc ] r--data
mov [ ebp - 0x194 ] 0x0
mov [ ebp - 0x190 ] 0x0
test ecx ecx
je r-xdata
mov esi [ ebp - 0x270 ]
mov [ ebp - 0x2a4 ] r--data
test esi esi
je r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x268 ]
mov ecx [ ebp - 0x26c ]
sub edx ecx
mov [ esi ] ecx
mov eax [ ebp - 0x288 ]
mov [ eax ] ecx
mov eax [ ebp - 0x278 ]
mov [ eax ] edx
mov eax [ ebp - 0x254 ]
cmp [ ebp - 0x118 ] 0x10
jb r-xdata
lea eax [ ebp - 0x130 ]
push eax
lea ecx [ ebp - 0x1e4 ]
call sub_408c60
mov esi [ ebp - 0x130 ]
mov ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
test [ eax + ecx + 0xc ] 0x6
mov eax 0x50
cmovne esi eax
cmp [ ebp - 0x118 ] 0x10
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x130 ] esi
cmovae eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x114 ]
push 0xff
push eax
call sub_414da3
movsd xmm0 [ ebp + 0x7c ]
lea ecx [ ebp - 0x114 ]
add esp 0x4
mov edx esi
movsd [ esp ] xmm0
push [ ebp + 0x78 ]
push [ ebp - 0x2d4 ]
push [ ebp + 0x70 ]
push [ ebp - 0x2dc ]
push [ ebp + 0x60 ]
push [ ebp + 0x5c ]
push [ ebp + 0x58 ]
push [ ebp - 0x2c0 ]
push [ ebp + 0x50 ]
push [ ebp + 0x4c ]
push [ ebp - 0x2c8 ]
push [ ebp + 0x44 ]
sub esp 0x8
push [ ebp + 0x38 ]
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp - 0x2d8 ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
call sub_406a00
movsd xmm0 [ ebp + 0x7c ]
xorps xmm1 xmm1
mulsd xmm0 [ r--data ]
add esp 0x74
xor esi esi
mov [ ebp - 0x2bc ] eax
comisd xmm0 xmm1
movsd [ ebp - 0x2ec ] xmm0
jbe r-xdata
mov eax [ ebp - 0x2b4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x2b4 ] r--data
mov eax [ ebp - 0x2b4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x2b8 ] eax
lea eax [ ebp - 0x244 ]
push eax
mov [ ebp - 0x244 ] r--data
call sub_410260
mov eax [ ebp - 0x2b8 ]
add esp 0x4
mov esi [ ebp - 0x2d0 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x2a0 ]
mov [ ebp - 0x258 ] 0x0
mov [ ebp - 0x298 ] eax
lea eax [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
lea eax [ ebp - 0x290 ]
mov [ ebp - 0x288 ] eax
lea eax [ ebp - 0x28c ]
mov [ ebp - 0x284 ] eax
lea eax [ ebp - 0x280 ]
mov [ ebp - 0x278 ] eax
lea eax [ ebp - 0x27c ]
mov [ ebp - 0x274 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x25f ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x27c ] 0x0
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x290 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x254 ] 0x0
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x264 ] 0x0
lea ecx [ ebp - 0x2a4 ]
call sub_40ac10
push [ ebp - 0x254 ]
call sub_415f63
add esp 0x4
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x118 ] 0xf
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x12c ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x68 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea ecx [ ebp - 0x1cc ]
call sub_409e80
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ebp + ecx - 0x1e8 ] eax
mov eax [ ebp - 0x1d4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1d4 ] r--data
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ebp + ecx - 0x1d8 ] eax
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0x17c ] r--data
call sub_410260
add esp 0x4
push [ ebp - 0x12c ]
call j_sub_41497e#2
add esp 0x4
cmp [ ebp - 0x118 ] 0x10
jb r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x64 ]
cmp eax ecx
jl r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x118 ] 0xf
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x12c ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x68 ]
mov [ ebp + ecx - 0x1e8 ] eax
test [ ebp - 0x190 ] 0x1
mov [ ebp - 0x1cc ] r--data
je r-xdata
push [ ebp - 0x12c ]
call j_sub_41497e#2
add esp 0x4
cmp eax 0x1
je r-xdata
push 0xa
call edi
movsd xmm1 [ ebp - 0x2ec ]
add esi 0xa
movd xmm0 esi
cvtdq2pd xmm0 xmm0
comisd xmm1 xmm0
ja r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov eax [ ebp - 0x1c0 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x1b0 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x1a0 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
mov eax [ ebp - 0x1ac ]
mov [ eax ] 0x0
mov eax [ ebp - 0x19c ]
mov [ eax ] 0x0
and [ ebp - 0x190 ] 0xfffffffe
mov esi [ ebp - 0x198 ]
mov [ ebp - 0x194 ] 0x0
mov [ ebp - 0x1cc ] r--data
test esi esi
je r-xdata
mov eax [ ebp - 0x1c0 ]
push [ eax ]
call j_sub_41497e#2
add esp 0x4
cmp [ ebp - 0x118 ] 0x10
jb r-xdata
mov eax [ rw-data ]
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ebp + ecx - 0x1e8 ] eax
mov eax [ ebp - 0x1d4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1d4 ] r--data
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ebp + ecx - 0x1d8 ] eax
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0x17c ] r--data
call sub_410260
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x118 ] 0xf
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x12c ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x68 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea ecx [ ebp - 0x1cc ]
call sub_409e80
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ebp + ecx - 0x1e8 ] eax
mov eax [ ebp - 0x1d4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1d4 ] r--data
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ebp + ecx - 0x1d8 ] eax
mov eax [ ebp - 0x1e4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x1e4 ] r--data
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x1e8 ] eax
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0x17c ] r--data
call sub_410260
add esp 0x4
cmp [ ebp - 0x1e8 ] 0x10
jb r-xdata
push [ ebp - 0x12c ]
call j_sub_41497e#2
add esp 0x4
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x2b4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x2b4 ] r--data
mov eax [ ebp - 0x2b4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ebp + ecx - 0x2b8 ] eax
cmp [ ebp - 0x254 ] 0x0
mov [ ebp - 0x2a4 ] r--data
je r-xdata
push [ ebp - 0x1fc ]
call j_sub_41497e#2
add esp 0x4
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
cmp [ ebp - 0x258 ] 0x0
je r-xdata
mov eax [ ebp - 0x298 ]
lea ecx [ ebp - 0x260 ]
cmp [ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x270 ]
mov [ ebp - 0x2a4 ] r--data
test esi esi
je r-xdata
lea ecx [ ebp - 0x2a4 ]
call sub_40aac0
mov edx [ ebp - 0x268 ]
mov ecx [ ebp - 0x26c ]
sub edx ecx
mov [ eax ] ecx
mov eax [ ebp - 0x288 ]
mov [ eax ] ecx
mov eax [ ebp - 0x278 ]
mov [ eax ] edx
mov eax [ ebp - 0x2b4 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x2b4 ] r--data
mov eax [ ebp - 0x2b4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x2b8 ] eax
lea eax [ ebp - 0x244 ]
push eax
mov [ ebp - 0x244 ] r--data
call sub_410260
add esp 0x4
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_408bc0
mov eax [ ecx ]
push esi
lea esi [ ecx + 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_4091f0
mov eax [ esi - 0x70 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
pop esi
retn
sub_408c60
push ebp
mov ebp esp
push 0xffffffff
push sub_42eea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x0
mov eax [ esi ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] esi
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_40a780
mov [ ebp - 0x38 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40dd80
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x28 ]
mov ebx eax
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ edx + 0xc ]
or eax ecx
cmp [ edx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov edx [ ebx ]
mov [ ebp - 0x40 ] 0x1
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x38 ]
test ecx ecx
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x1c ]
sete [ ebp - 0x30 ]
push ecx
mov ecx [ eax + 0x38 ]
push eax
push [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x30 ]
push ecx
push eax
mov ecx ebx
call [ edx + 0x28 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x0
push eax
mov ecx edx
call sub_402380
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
test cl 0x2
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x20 ]
lea eax [ edx - 0x80000000 ]
cmp eax 0xffffffff
ja r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
test ecx ecx
je r-xdata
mov [ edi ] edx
jmp r-xdata
sub_408d53
mov ecx [ ebp - 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_408e20
push esi
mov esi [ ecx + 0x34 ]
mov [ ecx ] r--data
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_408e50
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
mov ecx [ esi + 0x2c ]
mov edx [ ecx ]
cmp edx 0x1
jle r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
or eax eax
pop esi
retn
test eax eax
je r-xdata
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x18 ]
mov eax [ esi + 0x2c ]
cmp [ eax ] 0x0
jg r-xdata
mov ecx [ esi + 0x2c ]
mov eax [ ecx ]
test eax eax
jle r-xdata
movzx eax [ ecx ]
pop esi
retn
dec eax
mov [ ecx ] eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_408f00
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
dec [ eax ]
mov ecx [ esi + 0x1c ]
pop esi
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
retn
or eax eax
pop esi
retn
sub_408f30
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
xorps xmm0 xmm0
mov [ esp + 0xc ] ecx
movlpd [ esp + 0x10 ] xmm0
push esi
push edi
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ebp + 0x8 ] ecx
adc [ esp + 0xc ] 0x0
add edi 0xffffffff
mov ecx [ esp + 0x14 ]
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_40a9e0
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
adc [ esp + 0xc ] eax
sub edi esi
mov ecx [ esp + 0x14 ]
sbb ebx eax
mov eax [ ecx + 0x2c ]
sub [ eax ] esi
mov eax [ ecx + 0x1c ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
mov eax [ ecx + 0x1c ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_416730
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_409040
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
xorps xmm0 xmm0
mov [ esp + 0xc ] ecx
movlpd [ esp + 0x10 ] xmm0
push esi
push edi
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx ]
movzx eax [ esi ]
push eax
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esp + 0x14 ]
inc esi
add [ esp + 0x10 ] 0x1
mov [ ebp + 0x8 ] esi
adc [ esp + 0xc ] 0x0
add edi 0xffffffff
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_4041e0
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
adc [ esp + 0xc ] eax
sub edi esi
mov ecx [ esp + 0x14 ]
sbb ebx eax
mov eax [ ecx + 0x30 ]
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
push [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
push [ eax ]
call sub_416730
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_4091f0
push ecx
push esi
mov esi ecx
push edi
cmp [ esi + 0x50 ] 0x0
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
lea eax [ esi + 0x44 ]
cmp [ edi ] eax
jne r-xdata
mov [ esi ] r--data
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov ecx esi
call sub_40aac0
mov edx [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
sub edx ecx
mov [ edi ] ecx
mov eax [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi + 0x2c ]
mov [ eax ] edx
pop edi
pop esi
pop ecx
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_409280
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42eed8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
mov esi [ ebx + 0x30 ]
mov edi [ esi ]
lea eax [ edi + edx ]
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0xc ]
lea eax [ ebx + 0x44 ]
cmp [ esi ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ edi - 0x1 ]
mov [ esi ] eax
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x38 ]
mov edx [ ebx + 0x3c ]
mov [ esi ] ecx
sub edx ecx
mov eax [ ebx + 0x1c ]
mov [ eax ] ecx
mov eax [ ebx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ esp + 0x1c ] cl
lea eax [ esp + 0x20 ]
mov ecx 0xf
mov [ esp + 0x20 ] 0x0
xorps xmm0 xmm0
mov [ esp + 0x34 ] ecx
cmp ecx 0x10
movq [ esp + 0x20 ] xmm0
mov [ esp + 0x30 ] 0x8
cmovae eax [ esp + 0x20 ]
mov [ eax + 0x8 ] 0x0
mov [ esp + 0x48 ] 0x0
jmp r-xdata
push [ ebx + 0x50 ]
movsx eax cl
push eax
call sub_415136
or ecx 0xffffffff
add esp 0x8
cmp eax ecx
cmovne ecx [ ebp + 0x8 ]
mov eax ecx
jmp r-xdata
cmp [ esp + 0x34 ] 0x10
lea eax [ esp + 0x14 ]
mov esi [ ebx + 0x40 ]
lea ecx [ esp + 0x20 ]
cmovae ecx [ esp + 0x20 ]
lea edx [ esp + 0x20 ]
cmovae edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x34 ]
mov edi [ esi ]
add eax ecx
push eax
push edx
lea eax [ esp + 0x24 ]
mov ecx esi
push eax
lea eax [ esp + 0x2d ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ ebx + 0x48 ]
push eax
call [ edi + 0x1c ]
test eax eax
js r-xdata
or ebx 0xffffffff
cmp eax 0x1
jg r-xdata
mov eax ebx
push [ esp + 0x20 ]
call j_sub_41497e#2
add esp 0x4
cmp eax 0x3
jne r-xdata
mov edi [ esp + 0x34 ]
lea eax [ esp + 0x20 ]
mov ecx [ esp + 0x20 ]
cmp edi 0x10
mov esi [ esp + 0x14 ]
cmovae eax ecx
sub esi eax
je r-xdata
push [ ebx + 0x50 ]
push [ esp + 0x20 ]
call sub_406770
or ecx 0xffffffff
add esp 0x8
test al al
cmovne ecx [ ebp + 0x8 ]
mov ebx ecx
jmp r-xdata
lea eax [ esp + 0x1c ]
mov [ ebx + 0x45 ] 0x1
cmp [ esp + 0x18 ] eax
jne r-xdata
push [ ebx + 0x50 ]
cmp edi 0x10
lea eax [ esp + 0x24 ]
push esi
cmovae eax ecx
push 0x1
push eax
call sub_415e75
add esp 0x10
cmp esi eax
jne r-xdata
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp [ esp + 0x30 ] 0x20
jae r-xdata
push esi
push 0x8
lea ecx [ esp + 0x28 ]
call sub_4016d0
jmp r-xdata
sub_4094b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] ecx
jae r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x2c ]
inc [ eax ]
mov eax [ esi + 0x1c ]
pop esi
dec [ eax ]
xor eax eax
cmp ebx 0xffffffff
cmovne eax ebx
pop ebx
pop ebp
retn 0x4
movzx eax [ ecx - 0x1 ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x44 ]
cmp [ eax ] ecx
je r-xdata
push eax
movzx ecx bl
push ecx
call sub_415679
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov [ ecx ] bl
mov ecx esi
call sub_40ae50
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_409540
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0x1c ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
mov eax [ eax ]
add eax ecx
cmp ecx eax
jae r-xdata
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0x10 ]
mov eax edi
pop edi
pop esi
retn
pop edi
or eax eax
pop esi
retn
movzx eax [ ecx ]
pop esi
retn
sub_409580
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42ef08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x14 ] edi
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ edi + 0x50 ] 0x0
jne r-xdata
mov edx [ edi + 0x2c ]
mov esi [ edx ]
lea eax [ esi + ecx ]
cmp ecx eax
jae r-xdata
mov esi [ edi + 0xc ]
lea eax [ edi + 0x44 ]
cmp [ esi ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi - 0x1 ]
mov [ edx ] eax
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov edx [ edi + 0x3c ]
mov ecx [ edi + 0x38 ]
sub edx ecx
mov [ esi ] ecx
mov eax [ edi + 0x1c ]
mov [ eax ] ecx
mov eax [ edi + 0x2c ]
mov [ eax ] edx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x50 ] 0x0
push [ edi + 0x50 ]
call sub_415a65
mov edx eax
add esp 0x4
mov [ esp + 0x18 ] edx
cmp edx 0xffffffff
je r-xdata
push [ edi + 0x50 ]
call sub_415a65
add esp 0x4
cmp eax 0xffffffff
je r-xdata
or esi 0xffffffff
lea ebx [ ebx ]
movzx eax al
jmp r-xdata
mov eax esi
push [ esp + 0x28 ]
call j_sub_41497e#2
add esp 0x4
push r--data
call sub_40f9f1
lea esi [ ebx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
mov ecx [ esp + 0x3c ]
cmp ecx esi
jae r-xdata
test esi esi
jne r-xdata
push ebx
push esi
lea ecx [ esp + 0x30 ]
call sub_401aa0
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
mov edx [ esp + 0x18 ]
test esi esi
je r-xdata
cmp ecx 0x10
lea eax [ esp + 0x28 ]
cmovae eax [ esp + 0x28 ]
mov [ eax + ebx ] dl
lea eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x38 ] esi
cmovae eax [ esp + 0x28 ]
mov [ eax + esi ] 0x0
cmp ecx 0x10
mov [ esp + 0x38 ] esi
lea eax [ esp + 0x28 ]
cmovae eax [ esp + 0x28 ]
mov [ eax ] 0x0
jmp r-xdata
lea eax [ esp + 0x20 ]
cmp ecx 0x10
mov ecx [ esp + 0x14 ]
lea edi [ esp + 0x28 ]
cmovae edi [ esp + 0x28 ]
lea esi [ esp + 0x28 ]
cmovae esi [ esp + 0x28 ]
push eax
mov ecx [ ecx + 0x40 ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2f ]
push eax
mov edx [ ecx ]
lea eax [ esp + 0x28 ]
push eax
lea eax [ edi + ebx ]
mov edi [ esp + 0x24 ]
push eax
push esi
lea eax [ edi + 0x48 ]
push eax
call [ edx + 0x18 ]
test eax eax
js r-xdata
cmp eax 0x1
jle r-xdata
mov ebx [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
lea eax [ esp + 0x27 ]
cmp [ esp + 0x20 ] eax
mov eax [ esp + 0x1c ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ esp + 0x3c ] 0x10
lea esi [ esp + 0x28 ]
cmovae esi [ esp + 0x28 ]
sub esi eax
add esi [ esp + 0x38 ]
test esi esi
jle r-xdata
cmp [ esp + 0x3c ] 0x10
lea ecx [ esp + 0x28 ]
cmovae ecx [ esp + 0x28 ]
sub eax ecx
lea ecx [ esp + 0x28 ]
push eax
push 0x0
call sub_4019b0
cmp [ esp + 0x38 ] 0x1
jb r-xdata
movzx esi [ esp + 0x27 ]
jmp r-xdata
mov edi edi
mov ebx [ esp + 0x38 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx 0x1
jbe r-xdata
push [ edi + 0x50 ]
call sub_415a65
mov edx eax
add esp 0x4
mov [ esp + 0x18 ] edx
cmp edx 0xffffffff
jne r-xdata
cmp [ esp + 0x3c ] 0x10
lea eax [ esp + 0x28 ]
push 0x1
cmovae eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2f ]
push 0x1
push eax
call sub_415c9d
add esp 0x10
cmp [ esp + 0x3c ] 0x10
jb r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
push [ edi + 0x50 ]
movsx eax [ esi + eax - 0x1 ]
dec esi
push eax
call sub_415679
add esp 0x8
test esi esi
jle r-xdata
sub_409850
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x1c ]
lea ecx [ edi + 0x44 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov ecx edi
call sub_40ac10
test al al
je r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax ebx
or eax ecx
mov eax [ ebp + 0x14 ]
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
add ebx 0xffffffff
adc eax 0xffffffff
jmp r-xdata
push eax
push ecx
push ebx
push [ edi + 0x50 ]
call sub_41573e
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x1
je r-xdata
cmp [ edi + 0x50 ] 0x0
mov [ esp + 0xc ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_4156e9
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
lea ecx [ edi + 0x44 ]
cmp [ eax ] ecx
jne r-xdata
mov edx [ edi + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
jmp r-xdata
mov edx [ edi + 0x3c ]
mov ecx [ edi + 0x38 ]
sub edx ecx
mov [ eax ] ecx
mov eax [ edi + 0x1c ]
mov [ eax ] ecx
mov eax [ edi + 0x2c ]
mov [ eax ] edx
mov ecx [ esp + 0x1c ]
mov eax esi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x14
sub_409970
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x10 ]
cmp [ edi + 0x50 ] 0x0
mov [ esp + 0xc ] eax
je r-xdata
mov eax [ r--data ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
call sub_40ac10
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_415b5e
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax ebx
or eax ecx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_4156e9
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push ecx
push ebx
push [ edi + 0x50 ]
call sub_41573e
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx edi
mov [ edi + 0x48 ] eax
call sub_40ae20
mov edx [ edi + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax esi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_409a70
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
push 0x1
push [ esi + 0x50 ]
mov ecx esi
call sub_40ab70
mov eax esi
pop esi
pop ebp
retn 0xc
lea eax [ edx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
push edx
push ecx
call sub_415b97
add esp 0x10
test eax eax
jne r-xdata
sub_409ac0
push esi
mov esi ecx
cmp [ esi + 0x50 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x50 ]
call sub_415928
add esp 0x4
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_409af0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40deb0
add esp 0x4
mov ecx esi
push eax
call sub_40ad90
pop esi
pop ebp
retn 0x4
sub_409b10
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp edi 0x1fffffff
ja r-xdata
push r--data
call sub_40f9f1
push ebx
lea ebx [ edi * 8 ]
push ebx
call sub_414729
mov edx eax
add esp 0x4
test edx edx
je r-xdata
call sub_40f9c0
add ebx edx
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
test edi edi
je r-xdata
mov [ esi + 0x4 ] ebx
pop ebx
and edi 0x1fffffff
add edi edi
xor eax eax
mov ecx edi
mov edi edx
[ edi ]
sub_409b90
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push eax
call j_sub_41497e#2
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_409bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ef6a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ eax + 0x4 ]
add edi esi
mov ecx edi
call sub_4066b0
lea eax [ ebp - 0x14 ]
mov [ edi + 0x3c ] 0x0
lea ebx [ esi + 0x10 ]
mov ecx edi
push eax
mov [ edi + 0x38 ] ebx
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
push 0x20
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
call eax
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x4 ] eax
mov ecx ebx
call sub_40bd50
lea eax [ ebx + 0x4 ]
mov [ ebx ] r--data
mov [ ebx + 0xc ] eax
lea ecx [ ebx + 0x8 ]
lea eax [ ebx + 0x14 ]
mov [ ebx + 0x4c ] 0x0
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov [ ebx + 0x20 ] eax
lea eax [ ebx + 0x24 ]
mov [ ebx + 0x2c ] eax
lea eax [ ebx + 0x28 ]
mov [ ebx + 0x30 ] eax
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x10 ] ecx
mov [ ecx ] 0x0
mov eax [ ebx + 0x20 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x30 ]
mov [ eax ] 0x0
mov eax [ ebx + 0xc ]
mov [ eax ] 0x0
mov eax [ ebx + 0x1c ]
mov [ eax ] 0x0
mov eax [ ebx + 0x2c ]
mov [ eax ] 0x0
mov [ ebx + 0x50 ] 0x0
mov eax [ rw-data ]
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x40 ] 0x0
push ecx
push 0x1
push [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x4
call sub_40aa00
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx edi
or eax 0x4
push 0x0
push eax
call sub_402380
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_402380
or eax 0x4
sub_409da0
push esi
mov esi ecx
mov eax [ esi - 0x68 ]
lea ecx [ esi - 0x50 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x68 ] r--data
mov eax [ esi - 0x68 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x68 ]
mov [ edx + esi - 0x6c ] eax
call sub_409e80
mov eax [ esi - 0x68 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x68 ] r--data
mov eax [ esi - 0x68 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x6c ] eax
mov eax [ esi - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x58 ] r--data
mov eax [ esi - 0x58 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x5c ] eax
mov eax [ esi - 0x68 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x68 ] r--data
mov eax [ esi - 0x68 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x6c ] eax
pop esi
retn
sub_409e20
mov eax [ ecx - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x20 ] r--data
mov eax [ ecx - 0x20 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x20 ]
mov [ edx + ecx - 0x24 ] eax
lea edx [ ecx - 0x8 ]
mov eax [ edx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x8 ] r--data
mov eax [ edx - 0x8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0xc ] eax
mov eax [ edx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x18 ] r--data
mov eax [ edx - 0x18 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x1c ] eax
retn
sub_409e80
push esi
mov esi ecx
test [ esi + 0x3c ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] 0x0
mov eax [ esi + 0x10 ]
mov [ eax ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
and [ esi + 0x3c ] 0xfffffffe
mov [ esi + 0x38 ] 0x0
mov [ esi ] r--data
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov eax [ esi + 0xc ]
push [ eax ]
call j_sub_41497e#2
add esp 0x4
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_409f10
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
test al 0x2
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
jne r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
test al 0x8
je r-xdata
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x20 ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ eax ]
test edx edx
je r-xdata
xor edi edi
jmp r-xdata
mov edi [ esi + 0x30 ]
mov ecx [ edi ]
lea eax [ ecx + edx ]
cmp edx eax
jae r-xdata
mov edi [ esi + 0x38 ]
cmp edx edi
jae r-xdata
mov ecx edi
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
test edx edx
jne r-xdata
dec ecx
mov eax ebx
mov [ edi ] ecx
mov edx [ esi + 0x20 ]
pop edi
mov esi [ edx ]
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ esi ] bl
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
add ecx edx
sub ecx edi
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx 0x20
jmp r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0xc ]
mov edi [ eax ]
sub edi [ ecx ]
add edi edx
pop edi
pop ebx
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov eax 0x7fffffff
sub eax ecx
cmp eax edi
jae r-xdata
test ecx ecx
jne r-xdata
shr ecx 0x1
jne r-xdata
lea eax [ ecx + edi ]
xor ebx ebx
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
cmp eax 0xffffffff
ja r-xdata
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov [ esi + 0x38 ] ebx
mov [ eax ] ebx
mov eax [ esi + 0x20 ]
mov [ eax ] ebx
mov eax [ esi + 0x30 ]
mov [ eax ] edx
mov eax [ esi + 0xc ]
test [ esi + 0x3c ] 0x4
mov [ eax ] ebx
mov eax [ esi + 0x1c ]
je r-xdata
push edi
push ecx
push ebx
call sub_416730
mov ecx [ ebp - 0x4 ]
add esp 0xc
test edi edi
jne r-xdata
call sub_40f9c0
push eax
call sub_414729
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
mov [ eax ] 0x1
jmp r-xdata
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] ebx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
sub eax ecx
add [ esi + 0x38 ] eax
mov eax [ esi + 0x20 ]
mov edx [ eax ]
mov eax ebx
sub edx ecx
sub eax edi
mov ecx [ esi + 0x10 ]
add edx ebx
add [ ecx ] eax
mov ecx ebx
mov eax [ esi + 0x20 ]
sub ecx edx
add ecx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ esi + 0x30 ]
mov [ eax ] ecx
test [ esi + 0x3c ] 0x4
je r-xdata
test [ esi + 0x3c ] 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ eax ]
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
mov eax [ esi + 0xc ]
sub ecx edi
add ecx ebx
sub edx ecx
inc edx
mov [ eax ] ebx
mov eax [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi + 0x2c ]
mov [ eax ] edx
mov eax [ esi + 0xc ]
mov [ eax ] ebx
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] ebx
jmp r-xdata
mov eax [ esi + 0x30 ]
or [ esi + 0x3c ] 0x1
pop edi
pop ebx
dec [ eax ]
mov ecx [ esi + 0x20 ]
pop esi
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx ] al
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_41497e#2
add esp 0x4
sub_40a110
push ebp
mov ebp esp
mov edx ecx
push esi
mov eax [ edx + 0x1c ]
mov esi [ eax ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
mov eax [ edx + 0xc ]
cmp esi [ eax ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov eax [ edx + 0x2c ]
inc [ eax ]
mov eax [ edx + 0x1c ]
dec [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp cl [ esi - 0x1 ]
je r-xdata
xor ecx ecx
mov eax ecx
pop esi
pop ebp
retn 0x4
mov eax [ edx + 0x1c ]
pop esi
mov eax [ eax ]
mov [ eax ] cl
mov eax ecx
pop ebp
retn 0x4
test [ edx + 0x3c ] 0x2
jne r-xdata
sub_40a170
push esi
mov esi [ ecx + 0x1c ]
mov edx [ esi ]
test edx edx
jne r-xdata
push edi
mov edi [ ecx + 0x2c ]
mov eax [ edi ]
add eax edx
cmp edx eax
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x3c ] 0x4
jne r-xdata
movzx eax [ edx ]
pop edi
pop esi
retn
pop edi
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax edx
ja r-xdata
cmp [ ecx + 0x38 ] eax
jae r-xdata
cmp [ ecx + 0x38 ] edx
jbe r-xdata
mov eax [ ecx + 0x38 ]
sub eax [ esi ]
mov [ edi ] eax
mov eax [ ecx + 0x1c ]
pop edi
pop esi
mov eax [ eax ]
movzx eax [ eax ]
retn
mov [ ecx + 0x38 ] eax
sub_40a1d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov edx [ ebx + 0x20 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
test cl 0x1
je r-xdata
cmp [ ebx + 0x38 ] eax
jae r-xdata
test cl 0x2
je r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax ]
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
mov [ ebx + 0x38 ] eax
mov esi [ ebp + 0xc ]
mov eax esi
mov edi [ ebp + 0x10 ]
or eax edi
je r-xdata
mov edx [ edx ]
mov [ ebp + 0x18 ] edx
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov edi [ r--data ]
mov eax [ ebp + 0x14 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x38 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub eax [ ecx ]
cdq
add esi eax
adc edi edx
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x38 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub eax [ ecx ]
cdq
add esi eax
adc edi edx
jmp r-xdata
test eax eax
je r-xdata
test cl 0x2
jne r-xdata
test edi edi
jl r-xdata
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov eax edx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub eax [ ecx ]
cdq
add esi eax
adc edi edx
jmp r-xdata
test edi edi
jl r-xdata
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov edi [ r--data ]
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov eax esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub eax [ ecx ]
cdq
add esi eax
adc edi edx
jmp r-xdata
jg r-xdata
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov edi [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x38 ]
sub eax ecx
cdq
cmp edi edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x38 ]
sub eax ecx
cdq
cmp edi edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
mov eax [ ebx + 0x2c ]
sub ecx [ ebp - 0x4 ]
add ecx esi
sub [ eax ] ecx
mov eax [ ebx + 0x1c ]
add [ eax ] ecx
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
mov eax [ ebx + 0x30 ]
sub ecx [ ebp + 0x18 ]
add ecx esi
sub [ eax ] ecx
mov eax [ ebx + 0x20 ]
add [ eax ] ecx
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
mov eax [ ebx + 0x20 ]
add ecx [ ebp + 0x18 ]
sub ecx edx
mov [ eax ] edx
mov eax [ ebx + 0x30 ]
mov [ eax ] ecx
jmp r-xdata
sub_40a3a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
add esi [ ebp + 0x14 ]
push edi
adc ebx [ ebp + 0x18 ]
mov edi ecx
mov [ esp + 0x14 ] eax
mov edx [ edi + 0x20 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov eax [ r--data ]
cmp esi [ r--data ]
jne r-xdata
cmp [ edi + 0x38 ] eax
jae r-xdata
mov ecx [ ebp + 0x24 ]
test cl 0x1
je r-xdata
cmp ebx eax
je r-xdata
mov [ edi + 0x38 ] eax
test cl 0x2
je r-xdata
mov eax [ edi + 0x1c ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx eax
cmp [ edx ] 0x0
je r-xdata
mov eax [ r--data ]
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
jg r-xdata
mov esi [ r--data ]
mov eax [ edi + 0xc ]
mov ecx [ eax ]
mov eax [ edi + 0x38 ]
sub eax ecx
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
mov eax [ edi + 0x38 ]
sub eax ecx
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
mov eax [ edi + 0x2c ]
sub ecx [ esp + 0xc ]
add ecx esi
sub [ eax ] ecx
mov eax [ edi + 0x1c ]
add [ eax ] ecx
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
mov eax [ edi + 0x20 ]
sub ecx [ eax ]
mov eax [ edi + 0x30 ]
add ecx esi
sub [ eax ] ecx
mov eax [ edi + 0x20 ]
add [ eax ] ecx
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ edi + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ eax ]
mov eax [ edi + 0x30 ]
mov ecx [ eax ]
mov eax [ edi + 0x20 ]
add ecx [ esp + 0xc ]
sub ecx edx
mov [ eax ] edx
mov eax [ edi + 0x30 ]
mov [ eax ] ecx
jmp r-xdata
sub_40a4e0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov eax [ esi ]
lea edx [ esi + 0x18 ]
push edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x18 ] r--data
mov eax [ edx - 0x18 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x1c ] eax
mov [ edx ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40a530
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x34 ]
mov [ esi ] r--data
test edi edi
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
push edi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40a580
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov eax [ esi ]
lea edx [ esi + 0x8 ]
push edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x8 ] r--data
mov eax [ edx - 0x8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0xc ] eax
mov [ edx ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40a5d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4091f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40a600
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x70 ]
mov eax [ edi ]
lea esi [ edi + 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_4091f0
mov eax [ esi - 0x70 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_41497e#2
add esp 0x4
sub_40a670
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x68 ]
lea esi [ edi + 0x68 ]
mov ecx esi
call sub_409da0
push esi
mov [ esi ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_41497e#2
add esp 0x4
sub_40a6b0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x20 ]
mov ecx esi
call sub_40a710
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40a6e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409e80
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40a710
mov eax [ ecx ]
lea edx [ ecx + 0x20 ]
push edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x20 ] r--data
mov eax [ edx - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + edx - 0x24 ] eax
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x14 ] eax
mov eax [ edx - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x20 ] r--data
mov eax [ edx - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x24 ] eax
mov [ edx ] r--data
call sub_410260
pop ecx
retn
sub_40a780
push ebp
mov ebp esp
push 0xffffffff
push sub_42ef98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
push 0x0
push eax
call sub_402380
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
or eax 0x4
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_404d70
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test [ ecx + 0x14 ] 0x1
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
call sub_405b40
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edi eax
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
lea ecx [ ecx ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
movzx ecx al
mov eax [ edi + 0xc ]
test [ eax + ecx * 2 ] 0x48
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x1
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
call sub_408e50
jmp r-xdata
push 0x0
push eax
call sub_402380
jmp r-xdata
or eax 0x4
cmp eax 0xffffffff
jne r-xdata
sub_40a892
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_40a920
push ebp
mov ebp esp
push 0xffffffff
push sub_42efc8
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call sub_4066b0
mov eax [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x38 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x3c ] 0x0
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
call sub_405b40
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edi eax
test ecx ecx
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x20
mov eax [ eax + 0x20 ]
call eax
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx esi
or eax 0x4
push 0x0
push eax
call sub_402380
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_4101ea
add esp 0x4
sub_40aa00
push ebp
mov ebp esp
push 0xffffffff
push sub_42eff8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x50 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410381
add esp 0xc
test eax eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_40ab70
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_40bde0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40deb0
add esp 0x4
mov ecx esi
push eax
call sub_40ad90
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40aac0
push esi
mov esi ecx
push edi
cmp [ esi + 0x50 ] 0x0
jne r-xdata
call sub_40ac10
push [ esi + 0x50 ]
xor ecx ecx
mov edi esi
test al al
cmove edi ecx
call sub_415f63
xor ecx ecx
add esp 0x4
test eax eax
cmovne edi ecx
xor edi edi
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0x4c ] 0x0
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x8 ]
lea eax [ esi + 0x14 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x45 ] 0x0
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax edi
mov ecx [ esi + 0xc ]
pop edi
mov [ ecx ] 0x0
mov ecx [ esi + 0x1c ]
mov [ ecx ] 0x0
mov ecx [ esi + 0x2c ]
mov [ ecx ] 0x0
mov [ esi + 0x50 ] 0x0
mov ecx [ rw-data ]
mov [ esi + 0x48 ] ecx
mov [ esi + 0x40 ] 0x0
pop esi
retn
sub_40ab70
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
lea edx [ ecx + 0x8 ]
mov [ ecx + 0x10 ] edx
sete al
mov [ ecx + 0x45 ] 0x0
mov [ ecx + 0x4c ] al
lea eax [ ecx + 0x4 ]
mov [ ecx + 0xc ] eax
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x1c ] eax
lea eax [ ecx + 0x18 ]
mov [ ecx + 0x20 ] eax
lea eax [ ecx + 0x24 ]
mov [ ecx + 0x2c ] eax
lea eax [ ecx + 0x28 ]
mov [ ecx + 0x30 ] eax
mov [ edx ] 0x0
mov eax [ ecx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ecx + 0x30 ]
mov [ eax ] 0x0
mov eax [ ecx + 0xc ]
mov [ eax ] 0x0
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x0
mov eax [ ecx + 0x2c ]
mov [ eax ] 0x0
test edx edx
je r-xdata
mov [ ecx + 0x50 ] edx
mov eax [ rw-data ]
mov [ ecx + 0x48 ] eax
mov [ ecx + 0x40 ] 0x0
pop ebp
retn 0x8
lea eax [ edx + 0x8 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
lea eax [ edx + 0x4 ]
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
sub_40ac10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f028
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebx + 0x45 ] 0x0
je r-xdata
mov eax [ ebx ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
jne r-xdata
mov ecx 0xf
mov [ esp + 0x18 ] 0x0
xorps xmm0 xmm0
mov [ esp + 0x2c ] ecx
cmp ecx 0x10
movq [ esp + 0x18 ] xmm0
lea eax [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x8
cmovae eax [ esp + 0x18 ]
mov [ eax + 0x8 ] 0x0
mov [ esp + 0x40 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
cmp [ esp + 0x2c ] 0x10
lea eax [ esp + 0x14 ]
mov ecx [ ebx + 0x40 ]
lea edi [ esp + 0x18 ]
cmovae edi [ esp + 0x18 ]
lea esi [ esp + 0x18 ]
cmovae esi [ esp + 0x18 ]
push eax
mov eax [ esp + 0x2c ]
mov edx [ ecx ]
add eax edi
push eax
push esi
lea eax [ ebx + 0x48 ]
push eax
call [ edx + 0x20 ]
sub eax 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov [ ebx + 0x45 ] 0x0
dec eax
je r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push [ ebx + 0x50 ]
cmp ecx 0x10
lea eax [ esp + 0x1c ]
push esi
cmovae eax edx
push 0x1
push eax
call sub_415e75
add esp 0x10
cmp esi eax
jne r-xdata
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
cmp ecx 0x10
mov esi [ esp + 0x14 ]
cmovae eax edx
sub esi eax
je r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
test esi esi
jne r-xdata
xor bl bl
jmp r-xdata
mov al bl
jmp r-xdata
push [ esp + 0x18 ]
call j_sub_41497e#2
add esp 0x4
push esi
push 0x8
lea ecx [ esp + 0x20 ]
call sub_4016d0
jmp r-xdata
cmp [ esp + 0x2c ] 0x10
jb r-xdata
sub_40ad90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
mov eax [ edi ]
mov eax [ eax + 0xc ]
call eax
test al al
je r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0x40 ] edi
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x8 ]
lea eax [ esi + 0x14 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
pop edi
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x4
pop edi
mov [ esi + 0x40 ] 0x0
pop esi
pop ebp
retn 0x4
sub_40ae20
push edi
mov edi [ ecx + 0xc ]
lea eax [ ecx + 0x44 ]
cmp [ edi ] eax
jne r-xdata
pop edi
retn
mov edx [ ecx + 0x38 ]
push esi
mov esi [ ecx + 0x3c ]
mov [ edi ] edx
sub esi edx
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
mov [ eax ] esi
pop esi
sub_40ae50
mov edx ecx
push esi
push edi
mov edi [ edx + 0xc ]
lea esi [ edx + 0x44 ]
mov eax [ edi ]
cmp eax esi
je r-xdata
mov [ edi ] esi
mov ecx edx
mov eax [ edx + 0x1c ]
sub ecx esi
add ecx 0x45
pop edi
mov [ eax ] esi
mov eax [ edx + 0x2c ]
pop esi
mov [ eax ] ecx
retn
mov ecx [ edx + 0x1c ]
mov [ edx + 0x38 ] eax
mov eax [ edx + 0x2c ]
mov eax [ eax ]
add eax [ ecx ]
mov [ edx + 0x3c ] eax
sub_40ae90
push ebp
mov ebp esp
push 0xffffffff
push sub_42f063
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + esi - 0x4 ] eax
mov eax [ esi ]
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ eax + 0x4 ]
add edi esi
mov ecx edi
call sub_4066b0
mov eax [ ebp + 0x8 ]
mov ecx edi
mov [ edi + 0x38 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ edi + 0x3c ] 0x0
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov ebx eax
test ecx ecx
je r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x20
mov eax [ eax + 0x20 ]
call eax
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x10 ] r--data
mov eax [ esi + 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi + 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0xc ]
mov ecx edi
or eax 0x4
push 0x0
push eax
call sub_402380
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40afb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f0a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
mov eax [ ebp + 0x1c ]
or edi 0xffffffff
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
test [ eax + 0x14 ] 0x4000
mov [ esp + 0x3c ] esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] ecx
je r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3c ] 0x0
push ecx
mov ecx eax
call sub_402440
lea ecx [ esp + 0x3c ]
mov [ esp + 0x88 ] 0x4
push ecx
push eax
mov eax [ esp + 0x18 ]
push [ eax + 0x14 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x6c ]
push eax
push [ esp + 0x30 ]
call sub_40beb0
add esp 0x18
push eax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x64 ]
push eax
call sub_410ad5
mov [ esp + 0x98 ] 0xffffffff
add esp 0x10
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
test ecx ecx
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ecx eax
call sub_402440
push eax
mov [ esp + 0x8c ] 0x0
call sub_406100
mov [ esp + 0x8c ] edi
add esp 0x4
mov ecx [ esp + 0x10 ]
mov esi eax
test ecx ecx
je r-xdata
lea ecx [ esp + 0x58 ]
cmp [ esp + 0x38 ] ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x50 ] 0x1
lea eax [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x1
push eax
mov ecx esi
call sub_405820
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x94 ] 0x2
call sub_403fb0
mov [ esp + 0x88 ] 0x1
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
cmp [ esp + 0x3c ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x0
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4016d0
lea eax [ esp + 0x20 ]
mov ecx esi
push eax
call sub_405840
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x94 ] 0x3
call sub_403fb0
mov [ esp + 0x88 ] 0x1
cmp [ esp + 0x34 ] 0x10
jb r-xdata
push [ esp + 0x20 ]
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
test edi edi
jns r-xdata
or [ ebx ] 0x1
cmp eax 0x1
cmovbe edi eax
jmp r-xdata
cmp [ esp + 0x54 ] 0x10
lea eax [ esp + 0x40 ]
cmovae eax [ esp + 0x40 ]
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_40dfe0
add esp 0x10
mov [ esp + 0x88 ] 0xffffffff
cmp [ esp + 0x54 ] 0x10
mov edi eax
jb r-xdata
push [ esp + 0x20 ]
call j_sub_41497e#2
add esp 0x4
mov eax [ esp + 0x1c ]
setne cl
mov [ eax ] cl
or [ ebx ] 0x2
jmp r-xdata
mov esi [ esp + 0x3c ]
push [ esp + 0x40 ]
call j_sub_41497e#2
add esp 0x4
mov ecx [ ebp + 0xc ]
mov eax esi
mov [ esi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b250
push ebp
mov ebp esp
push 0xffffffff
push sub_42f0d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x34 ] 0x0
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push [ esi + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push edi
call sub_40beb0
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x18
mov ecx [ ebp - 0x44 ]
mov esi eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x30 ]
lea edi [ ebp - 0x2f ]
cmovne edi eax
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call sub_410ad5
add esp 0x10
lea ecx [ ebp + 0xc ]
mov esi eax
lea eax [ ebp + 0x14 ]
push eax
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x38 ] edi
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax ] si
jmp r-xdata
neg esi
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b370
push ebp
mov ebp esp
push 0xffffffff
push sub_42f0d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x34 ] 0x0
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push [ esi + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push edi
call sub_40beb0
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x18
mov ecx [ ebp - 0x44 ]
mov esi eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x30 ]
lea edi [ ebp - 0x2f ]
cmovne edi eax
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call sub_410ad5
add esp 0x10
lea ecx [ ebp + 0xc ]
mov esi eax
lea eax [ ebp + 0x14 ]
push eax
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x38 ] edi
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax ] esi
jmp r-xdata
neg esi
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b490
push ebp
mov ebp esp
push 0xffffffff
push sub_42f0d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x34 ] 0x0
call sub_402440
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ esi + 0x14 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push edi
call sub_40beb0
add esp 0x18
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_41014a
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x10
mov ecx [ ebp - 0x44 ]
mov esi eax
test ecx ecx
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax ] esi
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b590
push ebp
mov ebp esp
push 0xffffffff
push sub_42f0d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x34 ] 0x0
call sub_402440
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ esi + 0x14 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push edi
call sub_40beb0
add esp 0x18
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_410ad5
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x10
mov ecx [ ebp - 0x44 ]
mov esi eax
test ecx ecx
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax ] esi
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b690
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f108
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x24 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x28 ] 0x0
call sub_402440
lea ecx [ esp + 0x24 ]
mov [ esp + 0x58 ] 0x0
push ecx
push eax
push [ esi + 0x14 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x3c ]
push eax
push edi
call sub_40beb0
add esp 0x18
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_4105b9
mov [ esp + 0x68 ] 0xffffffff
add esp 0x10
mov ecx [ esp + 0x14 ]
mov esi eax
mov edi edx
test ecx ecx
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ esp + 0x28 ]
cmp [ esp + 0x20 ] eax
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ eax + 0x4 ] edi
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b7c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f108
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ecx esi
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x24 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x28 ] 0x0
call sub_402440
lea ecx [ esp + 0x24 ]
mov [ esp + 0x58 ] 0x0
push ecx
push eax
push [ esi + 0x14 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x3c ]
push eax
push edi
call sub_40beb0
add esp 0x18
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_410681
mov [ esp + 0x68 ] 0xffffffff
add esp 0x10
mov ecx [ esp + 0x14 ]
mov esi eax
mov edi edx
test ecx ecx
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ esp + 0x28 ]
cmp [ esp + 0x20 ] eax
je r-xdata
or [ ebx ] 0x1
mov eax [ ecx ]
push 0x1
call [ eax ]
or [ ebx ] 0x2
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ eax + 0x4 ] edi
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b8f0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x1c ]
lea edx [ esp + 0x30 ]
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
push edx
push ecx
lea edx [ esp + 0x3c ]
mov [ esp + 0x44 ] 0x0
push edx
push eax
lea eax [ ebp + 0x14 ]
mov [ esp + 0x44 ] 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x58 ]
push eax
push ecx
call sub_40c3e0
add esp 0x1c
push eax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_4103a7
mov eax [ esp + 0x44 ]
add esp 0x10
fstp [ esp + 0x30 ]
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
movss xmm0 [ esp + 0x30 ]
shl eax 0x2
cvtps2pd xmm0 xmm0
push eax
sub esp 0x8
movsd [ esp ] xmm0
call sub_415237
fstp [ esp + 0x3c ]
add esp 0xc
lea eax [ esp + 0x40 ]
cmp [ esp + 0x38 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ esp + 0x3c ] 0x0
jne r-xdata
movss xmm0 [ esp + 0x30 ]
movss [ ebx ] xmm0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax edi
mov [ edi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x4 ] ecx
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40b9e0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x1c ]
lea edx [ esp + 0x30 ]
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
push edx
push ecx
lea edx [ esp + 0x34 ]
mov [ esp + 0x44 ] 0x0
push edx
push eax
lea eax [ ebp + 0x14 ]
mov [ esp + 0x3c ] 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x58 ]
push eax
push ecx
call sub_40c3e0
add esp 0x1c
push eax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_410c51
mov eax [ esp + 0x3c ]
add esp 0x10
fstp [ esp + 0x30 ]
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
movsd xmm0 [ esp + 0x30 ]
shl eax 0x2
push eax
sub esp 0x8
movsd [ esp ] xmm0
call sub_415237
fstp [ esp + 0x3c ]
add esp 0xc
lea eax [ esp + 0x40 ]
cmp [ esp + 0x38 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ esp + 0x3c ] 0x0
jne r-xdata
movsd xmm0 [ esp + 0x30 ]
movsd [ ebx ] xmm0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax edi
mov [ edi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x4 ] ecx
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40bad0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x1c ]
lea edx [ esp + 0x30 ]
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
push edx
push ecx
lea edx [ esp + 0x34 ]
mov [ esp + 0x44 ] 0x0
push edx
push eax
lea eax [ ebp + 0x14 ]
mov [ esp + 0x3c ] 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x58 ]
push eax
push ecx
call sub_40c3e0
add esp 0x1c
push eax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_41086c
mov eax [ esp + 0x3c ]
add esp 0x10
fstp [ esp + 0x30 ]
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40e320
test al al
je r-xdata
movsd xmm0 [ esp + 0x30 ]
shl eax 0x2
push eax
sub esp 0x8
movsd [ esp ] xmm0
call sub_415237
fstp [ esp + 0x3c ]
add esp 0xc
lea eax [ esp + 0x40 ]
cmp [ esp + 0x38 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ esp + 0x3c ] 0x0
jne r-xdata
movsd xmm0 [ esp + 0x30 ]
movsd [ ebx ] xmm0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax edi
mov [ edi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x4 ] ecx
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40bbc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f138
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x30 ] 0x0
call sub_402440
push eax
push 0x800
lea eax [ ebp + 0x14 ]
mov [ esp + 0x68 ] 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ esp + 0x40 ]
push eax
push esi
call sub_40beb0
mov [ esp + 0x78 ] 0xffffffff
add esp 0x18
mov ecx [ esp + 0x14 ]
mov esi eax
test ecx ecx
je r-xdata
lea eax [ esp + 0x2c ]
push eax
push esi
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_410ad5
add esp 0x10
mov [ esp + 0x20 ] 0x0
mov esi eax
lea ecx [ ebp + 0xc ]
lea eax [ ebp + 0x14 ]
push eax
call sub_40e320
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
lea eax [ esp + 0x30 ]
cmp [ esp + 0x28 ] eax
je r-xdata
or [ edi ] 0x1
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
or [ edi ] 0x2
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax ebx
mov [ ebx ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn 0x20
sub_40bd50
push esi
mov esi ecx
push edi
push 0x4
mov [ esi ] r--data
call sub_414729
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
push 0x1
mov [ edi ] 0x0
call sub_40fbf8
add esp 0x4
mov [ edi ] eax
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0x34 ] edi
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x8 ]
lea eax [ esi + 0x14 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
pop edi
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] 0x0
mov eax esi
pop esi
retn
sub_40bde0
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40be00
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
and eax 0x6
cmp al 0x6
je r-xdata
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0xc ]
push edi
cmp ebx 0xffffffff
ja r-xdata
call sub_40f9c0
push ebx
call sub_414729
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push ebx
push [ ebp + 0x8 ]
push edi
call sub_416730
add esp 0xc
lea ecx [ edi + ebx ]
test [ esi + 0x3c ] 0x4
mov [ esi + 0x38 ] ecx
jne r-xdata
mov eax [ esi + 0x3c ]
test al 0x2
jne r-xdata
mov eax [ esi + 0xc ]
mov [ eax ] edi
mov eax [ esi + 0x1c ]
mov [ eax ] edi
mov eax [ esi + 0x2c ]
mov [ eax ] ebx
or [ esi + 0x3c ] 0x1
pop edi
pop ebx
test al 0x18
mov edx edi
mov eax [ esi + 0x10 ]
cmovne edx ecx
mov ecx edi
sub ecx edx
add ecx ebx
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edx
mov eax [ esi + 0x30 ]
mov [ eax ] ecx
mov eax [ esi + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov [ eax ] edi
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] edi
sub_40beb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42f170
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x1c ]
mov esi [ ebp + 0x10 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ esp + 0x1c ] eax
call sub_406100
add esp 0x4
mov edi eax
lea eax [ esp + 0x3c ]
mov ecx edi
push eax
call sub_405b00
mov [ esp + 0x80 ] 0x0
cmp [ esp + 0x4c ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
mov eax [ eax + 0x10 ]
call eax
mov [ esp + 0x12 ] al
mov [ esp + 0x12 ] 0x0
jmp r-xdata
mov ebx [ ebp + 0x18 ]
and ebx 0xe00
cmp ebx 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push ebx
call sub_405b40
add esp 0x4
lea ecx [ esp + 0x54 ]
mov edx [ eax ]
push ecx
push r--data
push r--data
mov ecx eax
call [ edx + 0x1c ]
mov edi [ esp + 0x18 ]
mov ecx esi
mov ebx [ esp + 0x1c ]
push edi
mov [ esp + 0x18 ] ebx
call sub_40e320
test al al
jne r-xdata
cmp ebx 0x800
jne r-xdata
mov ebx 0x8
jmp r-xdata
mov al [ esi + 0x5 ]
cmp al [ esp + 0x6b ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
neg ebx
sbb ebx ebx
and ebx 0xa
mov ebx 0x10
jmp r-xdata
push edi
mov ecx esi
mov [ ebp + 0x18 ] ebx
mov [ esp + 0x15 ] 0x0
mov [ esp + 0x17 ] 0x0
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ esp + 0x6a ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea eax [ ebx + 0x1 ]
mov ecx esi
mov [ esp + 0x14 ] eax
call sub_40da80
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esp + 0x20 ] 0xa
cmp ebx 0xa
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ esp + 0x54 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x2d
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov esi [ esp + 0x50 ]
lea edx [ esp + 0x3c ]
mov ebx [ esp + 0x3c ]
cmp esi 0x10
cmovae edx ebx
cmp [ esp + 0x11 ] 0x0
je r-xdata
jmp r-xdata
mov ecx 0x8
mov eax 0x16
cmp ebx ecx
cmove eax ecx
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ecx esi
mov [ esp + 0x11 ] 0x1
call sub_40da80
push edi
mov ecx esi
call sub_40e320
test al al
jne r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x1c ]
lea esp [ esp ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esp + 0x11 ]
mov ebx 0xf
mov [ esp + 0x38 ] ebx
mov [ esp + 0x24 ] al
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x25 ] 0x0
push [ esp + 0x18 ]
mov ecx esi
mov [ esp + 0x84 ] 0x1
xor edi edi
call sub_40e320
test al al
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_40da30
cmp al [ esp + 0x6d ]
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
push [ esp + 0x24 ]
call j_sub_41497e#2
mov esi [ esp + 0x54 ]
add esp 0x4
mov ebx [ esp + 0x3c ]
cmp [ esp + 0x13 ] 0x0
mov eax [ esp + 0x14 ]
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov cl [ esp + 0x54 ]
lea eax [ esp + 0x54 ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ebx 0x8
mov [ ebp + 0x18 ] ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx esi
call sub_40da30
cmp al [ esp + 0x6c ]
jne r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push ebx
call j_sub_41497e#2
add esp 0x4
cmp [ esp + 0x38 ] 0x10
mov [ eax ] 0x0
jb r-xdata
mov [ eax ] 0x30
inc eax
jmp r-xdata
dec edi
je r-xdata
lea ecx [ esp + 0x54 ]
sub eax ecx
cmp eax [ esp + 0x20 ]
jae r-xdata
mov edi edi
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ebx 0x10
mov [ esp + 0x11 ] 0x0
mov ecx esi
mov [ ebp + 0x18 ] ebx
call sub_40da80
jmp r-xdata
cmp ebx 0x10
jne r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp [ esp + 0x38 ] 0x10
lea eax [ esp + 0x24 ]
cmovae eax [ esp + 0x24 ]
cmp cl [ eax + edi ]
jne r-xdata
cmp ebx 0x10
lea eax [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
cmovae eax ebx
cmp [ eax + edi ] 0x0
je r-xdata
cmp [ esp + 0x13 ] 0x0
mov ecx [ esp + 0x14 ]
mov al [ eax + r--data ]
mov [ ecx ] al
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ esp + 0x38 ] 0x10
lea eax [ esp + 0x24 ]
cmovae eax [ esp + 0x24 ]
cmp cl [ eax ]
jl r-xdata
test edi edi
je r-xdata
mov al [ esp + 0x12 ]
test al al
je r-xdata
mov edx [ esp + 0x1c ]
lea eax [ edx + 0x1f ]
cmp ecx eax
jae r-xdata
cmp al 0x30
je r-xdata
cmp cl dl
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
test edi edi
je r-xdata
inc edx
jmp r-xdata
cmp [ esp + 0x38 ] 0x10
lea eax [ esp + 0x24 ]
cmovae eax ebx
cmp [ eax + edi ] 0x0
jle r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx 0x10
mov [ esp + 0x11 ] 0x1
mov ebx [ esp + 0x24 ]
lea eax [ esp + 0x24 ]
cmovae eax ebx
cmp [ eax + edi ] 0x7f
je r-xdata
inc ecx
mov [ esp + 0x13 ] 0x1
mov [ esp + 0x14 ] ecx
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x11 ] 0x0
inc edi
jmp r-xdata
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esp + 0x38 ] 0x10
lea eax [ esp + 0x24 ]
cmovae eax ebx
inc [ eax + edi ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x2c ]
call sub_4016d0
inc edi
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp + 0x24 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ esp + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov al [ esp + 0x12 ]
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ esp + 0x18 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40c3e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f1c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x14 ]
mov ecx [ ebp + 0x1c ]
and eax 0x3000
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x58 ] edx
cmp eax 0x3000
jne r-xdata
lea eax [ ebp - 0x78 ]
mov ecx edi
push eax
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
call sub_406100
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x4
mov ecx [ ebp - 0x78 ]
mov ebx eax
mov [ ebp - 0x74 ] ebx
test ecx ecx
je r-xdata
push ecx
push edi
push edx
push esi
push ebx
push [ ebp + 0x8 ]
call sub_40ceb0
add esp 0x18
jmp r-xdata
lea eax [ ebp - 0x50 ]
mov ecx ebx
push eax
call sub_405b00
mov ebx [ ebp - 0x70 ]
lea eax [ ebp - 0x6c ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5a ] 0x0
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x6c ]
mov edi eax
test ecx ecx
je r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ edi ]
lea ecx [ ebp - 0x20 ]
push ecx
push r--data
push r--data
mov ecx edi
call [ eax + 0x1c ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
xor edi edi
mov [ ebp - 0x51 ] 0x0
cmp [ ebp - 0x3c ] 0x10
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x68 ] edi
cmovae eax [ ebp - 0x50 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x64 ] edi
mov al [ eax ]
cmp al 0x7f
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
test al al
jle r-xdata
mov al [ esi + 0x5 ]
mov ecx esi
cmp al [ ebp - 0x15 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
lea esp [ esp ]
cmp [ ebp - 0x40 ] edi
jne r-xdata
call sub_40da30
cmp al [ ebp - 0x16 ]
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ebx [ ebp - 0x60 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov cl [ ebp - 0x20 ]
lea eax [ ebp - 0x20 ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
call eax
mov [ ebp - 0x59 ] al
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ eax ] 0x2d
lea ebx [ eax + 0x1 ]
mov [ ebp - 0x60 ] ebx
call sub_40da80
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
mov ecx [ ebp - 0x74 ]
mov bl [ esi + 0x5 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
call eax
cmp bl al
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x20 ]
sub eax ecx
cmp eax 0xa
jae r-xdata
cmp cl dl
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ebp - 0x6c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0xf
mov [ ebp - 0x38 ] di
mov [ ebp - 0x28 ] 0x1
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
xor edi edi
call sub_40e320
mov ebx [ ebp - 0x38 ]
test al al
jne r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov al [ ebp - 0x51 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x64 ]
test eax eax
jns r-xdata
mov ebx [ ebp - 0x58 ]
mov edi [ ebp - 0x64 ]
call sub_414d78
mov ebx [ ebp - 0x60 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
inc ebx
mov ecx [ esi ]
mov [ ebp - 0x60 ] ebx
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
cmp [ ebp - 0x51 ] 0x0
je r-xdata
cmp edi 0x24
jl r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ ebp - 0x24 ]
mov cl [ eax ]
cmp cl 0x7f
je r-xdata
mov cl [ ebp - 0x20 ]
lea eax [ ebp - 0x20 ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x5a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x30
inc ebx
inc eax
mov [ ebp - 0x64 ] eax
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x20 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
jmp r-xdata
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
test edi edi
jne r-xdata
test eax eax
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov edi [ ebp - 0x68 ]
push ebx
call j_sub_41497e#2
add esp 0x4
mov edx [ ebp - 0x24 ]
dec edi
je r-xdata
lea ecx [ ebp - 0x20 ]
sub eax ecx
cmp eax 0xa
jae r-xdata
lea ebx [ ebx ]
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ebx [ ebp - 0x70 ]
test al al
jne r-xdata
mov al [ ebp - 0x51 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov cl [ ebp - 0x20 ]
lea eax [ ebp - 0x20 ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x60 ]
mov [ ebp - 0x64 ] edi
mov edi [ ebp - 0x68 ]
mov ecx [ esi ]
dec edi
mov [ ebp - 0x51 ] 0x1
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov [ eax ] 0x30
inc eax
mov [ ebp - 0x60 ] eax
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x68 ] edi
test edi edi
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x51 ] 0x1
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edx 0x10
lea eax [ ebp - 0x38 ]
cmovae eax ebx
cmp cl [ eax + edi ]
jne r-xdata
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x38 ]
cmp edx 0x10
cmovae eax ebx
cmp [ eax + edi ] 0x0
je r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x51 ] 0x1
cmp edx 0x24
jl r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x64 ]
push [ ebp - 0x50 ]
call j_sub_41497e#2
add esp 0x4
cmp [ ebp - 0x3c ] 0x10
mov [ ebx ] 0x0
jb r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x13 ]
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x20 ]
sub eax ecx
cmp eax 0xa
jae r-xdata
cmp cl dl
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
cmp edx 0x10
lea eax [ ebp - 0x38 ]
cmovae eax ebx
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x5a ] 0x1
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x59 ] 0x0
je r-xdata
test eax eax
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
cmp cl dl
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ ebx ] 0x65
inc ebx
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
cmp edi 0x24
jge r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edx 0x10
jb r-xdata
cmp edx 0x10
lea eax [ ebp - 0x38 ]
cmovae eax ebx
cmp [ eax + edi ] 0x0
jle r-xdata
mov ecx esi
call sub_40da30
cmp al [ ebp - 0x59 ]
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov al [ eax + r--data ]
mov [ ecx ] al
inc ecx
inc edx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] edx
test edx edx
je r-xdata
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x38 ]
cmp ecx 0x10
cmovae eax ebx
cmp [ eax + edi ] 0x7f
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx [ esi ]
mov [ ebp - 0x51 ] 0x1
test ecx ecx
je r-xdata
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
test edi edi
je r-xdata
inc edi
mov edx [ ebp - 0x24 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_4016d0
inc edi
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x38 ]
cmovae eax ebx
inc [ eax + edi ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push ebx
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x15 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x20 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x51 ] 0x0
xor edi edi
call sub_40e320
test al al
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov cl [ ebp - 0x20 ]
lea eax [ ebp - 0x20 ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x51 ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x51 ] 0x1
test ecx ecx
je r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x16 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x20 ]
sub eax ecx
cmp eax 0xa
jae r-xdata
lea esp [ esp ]
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ ebx ] 0x30
inc ebx
mov [ esi ] edi
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov [ ebx ] 0x2d
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
cmp [ eax ] edi
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp edi 0x8
jge r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x51 ] 0x1
test ecx ecx
je r-xdata
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
cmp cl dl
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40ceb0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f213
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
mov ecx edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x88 ] eax
lea eax [ ebp - 0x84 ]
push eax
mov [ ebp - 0x7c ] ebx
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x0
call sub_406100
mov [ ebp - 0x4 ] 0xffffffff
add esp 0x4
mov ecx [ ebp - 0x84 ]
mov ebx eax
mov [ ebp - 0x80 ] ebx
test ecx ecx
je r-xdata
lea eax [ ebp - 0x5c ]
mov ecx ebx
push eax
call sub_405b00
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov ecx edi
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x74 ]
mov edi eax
test ecx ecx
je r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x2c ]
push ecx
push r--data
push r--data
mov ecx edi
call [ eax + 0x1c ]
push [ ebp - 0x64 ]
mov edi [ ebp - 0x7c ]
mov ecx esi
mov ebx edi
mov [ ebp - 0x66 ] 0x0
call sub_40e320
test al al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
push [ ebp - 0x64 ]
mov [ ebx ] 0x7830
xor edi edi
add ebx 0x2
mov [ ebp - 0x5d ] 0x0
mov ecx esi
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x70 ] edi
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
cmp [ ebp - 0x48 ] 0x10
lea eax [ ebp - 0x5c ]
cmovae eax [ ebp - 0x5c ]
mov [ ebp - 0x74 ] eax
mov al [ eax ]
cmp al 0x7f
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x15 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
test al al
jle r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x2c ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4c ] edi
jne r-xdata
mov ecx esi
call sub_40da80
push [ ebp - 0x64 ]
mov ecx eax
call sub_40e320
test al al
jne r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x16 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx esi
lea ebx [ edi + 0x1 ]
call sub_40da80
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
test edi edi
jne r-xdata
mov cl [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x80 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
call eax
mov [ ebp - 0x65 ] al
mov [ ebp - 0x65 ] 0x0
jmp r-xdata
mov [ ebp - 0x5d ] 0x1
mov ecx esi
call sub_40da30
cmp al [ ebp - 0x13 ]
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov [ edi ] 0x2d
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov ebx [ ebp - 0x6c ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov [ ebp - 0x6c ] ebx
lea ecx [ ebp - 0x2c ]
sub eax ecx
cmp eax 0x16
jae r-xdata
nop
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
mov [ ebp - 0x30 ] 0xf
mov [ ebp - 0x44 ] di
mov [ ebp - 0x34 ] 0x1
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
xor edi edi
call sub_40e320
mov ebx [ ebp - 0x44 ]
test al al
jne r-xdata
mov ecx esi
call sub_40da80
jmp r-xdata
mov ecx esi
call sub_40da30
cmp al [ ebp - 0x14 ]
jne r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
mov ecx [ ebp - 0x80 ]
mov bl [ esi + 0x5 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
call eax
cmp bl al
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp edi 0x24
jl r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ ebp - 0x30 ]
mov cl [ eax ]
cmp cl 0x7f
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov al [ ebp - 0x5d ]
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jns r-xdata
mov ebx [ ebp - 0x64 ]
mov edi [ ebp - 0x70 ]
mov edi edi
call sub_414d78
mov ebx [ ebp - 0x6c ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
inc ebx
mov ecx [ esi ]
mov [ ebp - 0x6c ] ebx
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
cmp cl dl
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov edi [ ebp - 0x78 ]
mov ebx [ ebp - 0x6c ]
push ebx
call j_sub_41497e#2
add esp 0x4
mov edx [ ebp - 0x30 ]
dec edi
je r-xdata
mov cl [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x66 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
mov cl [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x30
inc ebx
inc eax
mov [ ebp - 0x70 ] eax
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x2c ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
jmp r-xdata
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x78 ] edi
test edi edi
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x5d ] 0x1
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edx 0x10
lea eax [ ebp - 0x44 ]
cmovae eax ebx
cmp cl [ eax + edi ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
sub eax ecx
cmp eax 0x16
jae r-xdata
cmp cl dl
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ebx [ ebp - 0x7c ]
test al al
jne r-xdata
mov al [ ebp - 0x5d ]
cmp [ esi + 0x4 ] al
jne r-xdata
lea ecx [ ebp - 0x2c ]
sub eax ecx
cmp eax 0x16
jae r-xdata
lea ecx [ ecx ]
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ebx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] edi
mov edi [ ebp - 0x78 ]
mov ecx [ esi ]
dec edi
mov [ ebp - 0x5d ] 0x1
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x74 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
cmp edx 0x10
lea eax [ ebp - 0x44 ]
cmovae eax ebx
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x66 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x44 ]
cmp edx 0x10
cmovae eax ebx
cmp [ eax + edi ] 0x0
je r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x5d ] 0x1
cmp edx 0x24
jl r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push [ ebp - 0x5c ]
call j_sub_41497e#2
add esp 0x4
cmp [ ebp - 0x48 ] 0x10
mov ecx [ ebp - 0x88 ]
mov eax [ ebp - 0x70 ]
mov [ ebx ] 0x0
mov [ ecx ] eax
jb r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x11 ]
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp edi 0x24
jge r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edx 0x10
jb r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x65 ] 0x0
je r-xdata
test eax eax
jne r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ ebx ] 0x70
inc ebx
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x5d ] 0x1
test ecx ecx
je r-xdata
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
cmp cl dl
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
test edi edi
je r-xdata
cmp edx 0x10
lea eax [ ebp - 0x44 ]
cmovae eax ebx
cmp [ eax + edi ] 0x0
jle r-xdata
mov ecx esi
call sub_40da30
cmp al [ ebp - 0x65 ]
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov al [ eax + r--data ]
mov [ ecx ] al
inc ecx
inc edx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x78 ] edx
test edx edx
je r-xdata
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x44 ]
cmp ecx 0x10
cmovae eax ebx
cmp [ eax + edi ] 0x7f
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x12 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
inc edi
lea ebx [ ebx ]
mov edx [ ebp - 0x30 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_4016d0
inc edi
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x44 ]
cmovae eax ebx
inc [ eax + edi ]
jmp r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
push ebx
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ ebp - 0x44 ]
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
jne r-xdata
lea esp [ esp ]
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x15 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x2c ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x5d ] 0x0
xor edi edi
call sub_40e320
test al al
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov cl [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
mov dl [ esi + 0x5 ]
test cl cl
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x5d ] 0x1
test ecx ecx
je r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebp - 0x16 ]
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x2c ]
sub eax ecx
cmp eax 0x16
jae r-xdata
cmp cl dl
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ ebx ] 0x30
inc ebx
mov [ esi ] edi
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov [ ebx ] 0x2d
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi ] edi
mov eax [ ecx + 0x1c ]
cmp [ eax ] edi
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp edi 0x8
jge r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] edi
jle r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0x5d ] 0x1
test ecx ecx
je r-xdata
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
inc edi
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
push [ ebp - 0x64 ]
mov ecx esi
call sub_40e320
test al al
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40da30
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ esi + 0x5 ] al
mov [ esi + 0x4 ] 0x1
pop esi
retn
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40da80
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov eax esi
mov [ esi + 0x4 ] 0x1
pop esi
retn
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
retn
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40dad0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f250
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov eax [ edi ]
xor esi esi
mov ebx edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x20 ] esi
mov eax [ eax + 0x4 ]
mov [ ebp - 0x2c ] ebx
mov ecx [ eax + edi + 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ edx + 0xc ] 0x0
sete al
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov ecx [ eax + edi + 0x3c ]
test ecx ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ eax + edi + 0x20 ] 0x0
mov [ eax + edi + 0x24 ] 0x0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov ecx [ edx + 0x24 ]
mov ebx [ edx + 0x20 ]
test ecx ecx
jg r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_4185c4
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
sub ebx 0x1
sbb ecx 0x0
jl r-xdata
call sub_404d70
mov ecx [ ebx ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + ebx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx ebx
call sub_404ce0
push 0x0
push eax
call sub_402380
or eax 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
nop
xorps xmm0 xmm0
movlpd [ ebp - 0x38 ] xmm0
mov ecx [ ebp - 0x34 ]
mov ebx [ ebp - 0x38 ]
jmp r-xdata
cmp ebx 0x1
ja r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
call [ edx + 0x8 ]
movzx eax [ ebp - 0x14 ]
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x2c ]
test ecx ecx
jl r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ edx + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x1c ] ecx
cmp eax 0x40
je r-xdata
test eax eax
jl r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x14 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
jg r-xdata
jg r-xdata
cmp eax 0xffffffff
mov eax 0x4
cmove esi eax
mov eax [ ebp - 0x1c ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov cl [ eax + edi + 0x40 ]
mov [ ebp - 0x15 ] cl
mov ecx [ eax + edi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov cl [ eax + edi + 0x40 ]
mov [ ebp - 0x14 ] cl
mov ecx [ eax + edi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x15 ]
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
movzx eax [ ebp - 0x14 ]
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
test esi esi
jne r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x15 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
mov [ ebp - 0x20 ] esi
test esi esi
jne r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x14 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp eax 0xffffffff
mov edx 0x4
cmove esi edx
add ebx 0xffffffff
mov [ ebp - 0x20 ] esi
adc ecx 0xffffffff
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp eax 0xffffffff
mov eax 0x4
cmove esi eax
mov eax [ ebp - 0x1c ]
add ebx 0xffffffff
adc eax 0xffffffff
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_40dcd1
mov ecx [ ebp - 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_40dd80
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x0
mov [ ebp - 0x20 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40fe53
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40feae
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40fbf2
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40feae
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40e270
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40fbca
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_414795
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_416e0b
sub_40deb0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x0
mov [ ebp - 0x20 ] esi
call sub_40fe53
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40fe53
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40feae
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40fbf2
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40feae
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40e3c0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40fbca
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_414795
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_416e0b
sub_40dfe0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42ef08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov dl [ ebx ]
mov [ esp + 0x24 ] eax
test dl dl
je r-xdata
push 0x0
push esi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
call sub_404c10
mov ecx 0x1
mov [ esp + 0x50 ] 0x0
mov eax 0xfffffffe
mov [ esp + 0x14 ] ecx
mov al dl
mov ecx ebx
cmp [ esp + 0x3c ] 0x10
jb r-xdata
jmp r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
inc esi
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
call j_sub_41497e#2
mov eax [ esp + 0x20 ]
add esp 0x4
mov al [ esi + ebx ]
test al al
je r-xdata
cmp al dl
jne r-xdata
cmp [ esp + 0x3c ] 0x10
lea eax [ esp + 0x28 ]
cmovae eax [ esp + 0x28 ]
cmp [ eax + edx ] 0x0
je r-xdata
mov cl [ ebx ]
add esi ecx
mov al [ esi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ esp + 0x3c ] 0x10
lea eax [ esp + 0x28 ]
cmovae eax [ esp + 0x28 ]
movsx eax [ eax + edx ]
add esi eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov al [ esi + ebx + 0x1 ]
inc esi
test al al
jne r-xdata
cmp [ esp + 0x3c ] 0x10
lea edx [ esp + 0x28 ]
mov eax [ esp + 0x14 ]
mov ecx 0x7f
cmovae edx [ esp + 0x28 ]
cmp [ esp + 0x14 ] ecx
movzx eax al
cmovb ecx eax
mov eax [ esp + 0x18 ]
mov [ edx + eax ] cl
mov edx eax
mov [ esp + 0x1c ] edx
test al al
je r-xdata
mov ah [ esp + 0x13 ]
cmp al cl
je r-xdata
mov ecx [ esp + 0x14 ]
test ah ah
je r-xdata
push [ esp + 0x24 ]
mov ecx edi
call sub_40e320
test al al
jne r-xdata
mov eax [ esp + 0x1c ]
push [ esp + 0x24 ]
mov ecx edi
call sub_40e320
test al al
jne r-xdata
cmp [ esp + 0x3c ] 0x10
lea edx [ esp + 0x28 ]
mov eax [ esp + 0x14 ]
mov ecx 0x7f
cmovae edx [ esp + 0x28 ]
cmp [ esp + 0x14 ] ecx
movzx eax al
cmovb ecx eax
mov eax [ esp + 0x18 ]
mov [ edx + eax ] cl
mov edx eax
jmp r-xdata
cmp [ edi + 0x4 ] al
jne r-xdata
inc [ esp + 0x14 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov al [ esi + ebx ]
cmp al [ edi + 0x5 ]
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
or eax 0xffffffff
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
mov ah 0x1
mov [ esp + 0x13 ] ah
jmp r-xdata
mov [ edi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
xor edx edx
mov [ esp + 0x1c ] eax
xor esi esi
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] edx
cmp [ esp + 0x20 ] edx
jbe r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
inc edx
mov [ esp + 0x18 ] edx
cmp edx [ esp + 0x20 ]
jb r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx [ esp + 0x14 ]
or eax 0xffffffff
mov [ edi + 0x4 ] 0x0
jmp r-xdata
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
mov [ edi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ edi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
sub_40e270
push ebp
mov ebp esp
push 0xffffffff
push sub_42eccb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_414729
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_401d40
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_401c70
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_40e320
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ edi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov [ esi ] 0x0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ edi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov [ edi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x1
cmp eax 0xffffffff
je r-xdata
sub_40e3c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42eccb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_414729
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_401d40
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_401c70
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_40e470
push ebp
mov ebp esp
push 0xffffffff
push sub_42f280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
mov edi ecx
mov eax [ edi ]
xor esi esi
xor bl bl
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x11 ] bl
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] edi
mov ecx [ eax + edi + 0x38 ]
test ecx ecx
je r-xdata
push 0x1
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_40a780
mov [ ebp - 0x2c ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
or esi 0x2
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ecx + 0x14 ] 0x10
mov [ ecx + 0x10 ] 0x0
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x0
push eax
call sub_402380
or eax 0x4
mov eax [ edx ]
mov ecx edx
call [ eax + 0x18 ]
mov eax [ edx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
movzx eax al
mov [ ebp - 0x28 ] eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edi + 0x38 ]
mov eax [ edx + 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
cmp eax [ ebp - 0x28 ]
jne r-xdata
or esi 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax ]
jmp r-xdata
cmp [ ecx + 0x10 ] 0xfffffffe
jb r-xdata
mov eax [ edi ]
mov bl 0x1
mov [ ebp - 0x11 ] bl
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
test bl bl
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push eax
push 0x1
call sub_4016d0
mov eax [ edi ]
mov bl 0x1
mov [ ebp - 0x11 ] bl
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
call sub_408e50
jmp r-xdata
or esi 0x2
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
jmp r-xdata
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x18 ]
lea esp [ esp ]
dec eax
mov [ edx ] eax
mov eax [ ecx + 0x1c ]
inc [ eax ]
jmp r-xdata
sub_40e5aa
mov ecx [ ebp - 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_40e640
push ebp
mov ebp esp
push 0xffffffff
push sub_42f2b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov [ ebp - 0x24 ] ebx
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ esi ]
xor edi edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x30 ] esi
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_40a780
mov [ ebp - 0x2c ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp [ ebp - 0x11 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x20 ] 0x0
mov [ eax + esi + 0x24 ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
or edi 0x2
cmp [ ebx + 0x14 ] 0x10
mov [ ebx + 0x10 ] 0x0
jb r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x30 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0x24 ]
mov ebx [ ecx + esi + 0x20 ]
test eax eax
jl r-xdata
mov ebx [ ebx ]
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push eax
call sub_402380
or eax 0x4
mov ebx 0xfffffffe
jg r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x34 ] eax
cmp ebx 0xfffffffe
jae r-xdata
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edx 0xffffffff
jne r-xdata
movzx edx [ edx ]
jmp r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx dl
mov eax [ eax + 0xc ]
test [ eax + ecx * 2 ] 0x48
jne r-xdata
or edi 0x1
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x24 ]
push edx
push 0x1
call sub_4016d0
mov eax [ esi ]
dec ebx
mov [ ebp - 0x11 ] 0x1
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
call sub_408e50
jmp r-xdata
mov edx eax
sub_40e78e
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_402380
mov eax r-xdata
retn
or eax 0x4
sub_40e860
mov eax [ ecx ]
push esi
lea esi [ ecx + 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_4091f0
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
pop esi
retn
sub_40e8c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f2e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0xa8 ] 0x0
je r-xdata
mov [ esi + 0xa8 ] 0x0
add esi 0x60
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_4091f0
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x4 ]
call sub_40aac0
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_402380
or eax 0x4
sub_40e9a0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xa8 ] 0x0
je r-xdata
push ecx
push 0x2
push [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_40aa00
test eax eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
jne r-xdata
lea ecx [ esi + 0x4 ]
call sub_40aac0
test eax eax
jne r-xdata
add ecx esi
xor eax eax
mov edx 0x4
cmp [ ecx + 0x38 ] eax
cmove eax edx
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_402380
mov [ esi + 0xa8 ] 0x1
pop esi
pop ebp
retn 0x4
or eax 0x4
jmp r-xdata
push 0x0
push eax
call sub_402380
or eax 0x4
sub_40ea30
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x108 ] eax
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xac ] 0x0
je r-xdata
mov ecx [ esp + 0x10c ]
pop esi
xor ecx esp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ esp + 0x10 ]
push 0x100
push eax
call sub_4164cc
add esp 0x10
cmp [ esi + 0xac ] 0x0
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call sub_4164fc
add esp 0x4
cmp [ esi + 0xa8 ] 0x1
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
call sub_415928
add esp 0x4
lea edx [ esp + 0x8 ]
mov ecx esi
call sub_405c70
mov ecx esi
call sub_404d70
sub_40ead0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f33f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x60 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edi - 0x4 ] eax
mov eax [ edi ]
mov esi [ eax + 0x4 ]
add esi edi
mov ecx esi
call sub_4066b0
lea eax [ ebp - 0x14 ]
mov [ esi + 0x3c ] 0x0
lea ebx [ edi + 0x4 ]
mov ecx esi
push eax
mov [ esi + 0x38 ] ebx
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
push 0x20
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
call eax
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + edi - 0x4 ] eax
mov ecx ebx
call sub_40bd50
lea eax [ ebx + 0x4 ]
mov [ ebx ] r--data
mov [ ebx + 0xc ] eax
lea ecx [ ebx + 0x8 ]
lea eax [ ebx + 0x14 ]
mov [ ebx + 0x4c ] 0x0
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov [ ebx + 0x20 ] eax
lea eax [ ebx + 0x24 ]
mov [ ebx + 0x2c ] eax
lea eax [ ebx + 0x28 ]
mov [ ebx + 0x30 ] eax
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x10 ] ecx
mov [ ecx ] 0x0
mov eax [ ebx + 0x20 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x30 ]
mov [ eax ] 0x0
mov eax [ ebx + 0xc ]
mov [ eax ] 0x0
mov eax [ ebx + 0x1c ]
mov [ eax ] 0x0
mov eax [ ebx + 0x2c ]
mov [ eax ] 0x0
mov [ ebx + 0x50 ] 0x0
mov eax [ rw-data ]
mov [ ebx + 0x48 ] eax
mov eax edi
mov [ ebx + 0x40 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
mov ecx esi
or eax 0x4
push 0x0
push eax
call sub_402380
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40ec70
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x60 ]
mov eax [ edi ]
lea esi [ edi + 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_4091f0
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_41497e#2
add esp 0x4
sub_40ece0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f37c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40a920
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
sub_40ed80
push esi
mov esi ecx
mov eax [ esi + 0x44 ]
and al 0x9
mov [ esi ] r--data
cmp al 0x1
jne r-xdata
and [ esi + 0x44 ] 0xfffffff6
mov [ esi + 0x40 ] 0x0
mov [ esi ] r--data
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4c ]
push [ eax ]
test ecx ecx
je r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
call j_sub_41497e
call ecx
jmp r-xdata
push esi
call j_sub_41497e#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
add esp 0x4
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40edf0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x20 ]
push edi
mov edx [ eax ]
test edx edx
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x44 ]
test al 0x4
je r-xdata
mov ecx [ esi + 0x30 ]
mov edi [ ecx ]
lea eax [ edi + edx ]
cmp edx eax
jae r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0x4
test al 0xa
jne r-xdata
lea eax [ edi - 0x1 ]
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
pop edi
pop esi
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov [ edx ] bl
movzx eax bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0xc ]
mov edi [ eax ]
sub edi [ ecx ]
add edi edx
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax edi
cdq
sub eax edx
mov edx eax
sar edx 0x1
cmp edx [ esi + 0x38 ]
cmovl edx [ esi + 0x38 ]
mov [ esi + 0x38 ] 0x20
test edx edx
jle r-xdata
mov ecx 0x7fffffff
sub ecx edx
cmp ecx edi
jge r-xdata
test edx edx
jle r-xdata
mov eax edx
cdq
sub eax edx
mov edx eax
sar edx 0x1
test edx edx
jg r-xdata
mov ecx [ esi + 0x48 ]
lea eax [ edx + edi ]
mov [ ebp - 0x4 ] eax
push eax
test ecx ecx
je r-xdata
call sub_40fed7
call ecx
jmp r-xdata
test edi edi
jle r-xdata
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
test [ esi + 0x44 ] 0x1
je r-xdata
mov eax [ esi + 0xc ]
push edi
push [ eax ]
push ebx
call sub_416730
add esp 0xc
or [ esi + 0x44 ] 0x1
test edi edi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4c ]
push [ eax ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
mov eax ebx
sub eax [ ecx ]
add [ esi + 0x40 ] eax
mov edx [ ecx ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x10 ]
mov edi [ eax ]
mov eax ebx
sub eax edx
sub edi edx
add [ ecx ] eax
add edi ebx
mov eax [ esi + 0x20 ]
mov ecx ebx
sub ecx edi
add ecx [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0xc ]
mov edi [ eax ]
mov eax [ esi + 0x1c ]
mov edx [ eax ]
sub edx [ ecx ]
mov [ ecx ] ebx
add edx ebx
mov eax [ esi + 0x1c ]
sub edi edx
inc edi
mov [ eax ] edx
mov eax [ esi + 0x2c ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x40 ] ebx
mov [ eax ] ebx
mov eax [ esi + 0x20 ]
mov [ eax ] ebx
mov eax [ esi + 0x30 ]
mov [ eax ] edx
mov eax [ esi + 0xc ]
mov [ eax ] ebx
mov eax [ esi + 0x1c ]
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
mov [ eax ] edi
jmp r-xdata
call j_sub_41497e
call ecx
jmp r-xdata
mov eax [ esi + 0x30 ]
pop edi
dec [ eax ]
mov ecx [ esi + 0x20 ]
pop esi
pop ebx
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx ] al
movzx eax al
mov esp ebp
pop ebp
retn 0x4
add esp 0x4
sub_40efa0
push ebp
mov ebp esp
mov edx ecx
push esi
mov eax [ edx + 0x1c ]
mov esi [ eax ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
mov eax [ edx + 0xc ]
cmp esi [ eax ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov eax [ edx + 0x2c ]
inc [ eax ]
mov eax [ edx + 0x1c ]
dec [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp cl [ esi - 0x1 ]
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ edx + 0x1c ]
mov eax [ eax ]
cmp [ eax ] cl
je r-xdata
test [ edx + 0x44 ] 0x2
jne r-xdata
movzx eax cl
pop esi
pop ebp
retn 0x4
mov [ eax ] cl
sub_40f000
push esi
mov esi [ ecx + 0x1c ]
mov edx [ esi ]
test edx edx
jne r-xdata
push edi
mov edi [ ecx + 0x2c ]
mov eax [ edi ]
add eax edx
cmp edx eax
jae r-xdata
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
movzx eax [ edx ]
pop edi
pop esi
retn
pop edi
or eax 0xffffffff
pop esi
retn
cmp eax edx
ja r-xdata
cmp [ ecx + 0x40 ] eax
jae r-xdata
cmp [ ecx + 0x40 ] edx
jbe r-xdata
mov eax [ ecx + 0x40 ]
sub eax [ esi ]
mov [ edi ] eax
mov eax [ ecx + 0x1c ]
pop edi
pop esi
mov eax [ eax ]
movzx eax [ eax ]
retn
mov [ ecx + 0x40 ] eax
sub_40f060
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ edi + 0x20 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x18 ]
test dl 0x1
je r-xdata
mov eax [ edi + 0x40 ]
sub eax ecx
jns r-xdata
test dl 0x2
je r-xdata
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0x18 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x40 ] ecx
mov esi [ r--data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ebx [ r--data ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ r--data ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x40 ]
sub ecx [ eax ]
add esi ecx
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x40 ]
sub ecx [ eax ]
add esi ecx
jmp r-xdata
test eax eax
jne r-xdata
test dl 0x2
jne r-xdata
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx ebx
sub ecx [ eax ]
add esi ecx
jmp r-xdata
test esi esi
js r-xdata
mov esi ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0xc ]
sub ecx [ eax ]
add esi ecx
jmp r-xdata
mov esi ebx
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
mov eax [ edi + 0x40 ]
sub eax ecx
cmp esi eax
jg r-xdata
mov esi edx
cmp esi edx
jne r-xdata
mov esi edx
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
mov eax [ edi + 0x40 ]
sub eax ecx
cmp esi eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov eax esi
cdq
pop edi
pop esi
mov [ ecx ] eax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x10 ] 0x0
pop ebx
pop ebp
retn 0x14
mov eax [ edi + 0x2c ]
sub ecx [ ebp + 0x18 ]
add ecx esi
sub [ eax ] ecx
mov eax [ edi + 0x1c ]
add [ eax ] ecx
test dl 0x2
je r-xdata
mov eax [ edi + 0x30 ]
sub ecx ebx
add ecx esi
sub [ eax ] ecx
mov eax [ edi + 0x20 ]
add [ eax ] ecx
jmp r-xdata
mov ebx [ edi + 0x20 ]
cmp [ ebx ] 0x0
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ eax ]
mov eax [ edi + 0x30 ]
mov ecx [ eax ]
add ecx [ ebx ]
mov [ ebx ] edx
sub ecx edx
mov eax [ edi + 0x30 ]
mov [ eax ] ecx
jmp r-xdata
sub_40f1c0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x14 ]
add edi [ ebp + 0xc ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ r--data ]
cmp edi edx
je r-xdata
mov eax [ esi + 0x40 ]
sub eax ecx
jns r-xdata
mov eax edi
mov [ ebx + 0x8 ] 0x0
cdq
pop edi
mov [ ebx ] eax
mov eax ebx
pop esi
mov [ ebx + 0x4 ] edx
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x10 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0x24 ]
test cl 0x1
je r-xdata
mov [ esi + 0x40 ] ecx
test cl 0x2
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edi edx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
test edi edi
js r-xdata
test edi edi
js r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov eax [ esi + 0x40 ]
sub eax ecx
cmp edi eax
jg r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov eax [ esi + 0x40 ]
sub eax ecx
cmp edi eax
jg r-xdata
mov eax [ esi + 0x2c ]
sub ecx [ ebp - 0x4 ]
add ecx edi
sub [ eax ] ecx
mov eax [ esi + 0x1c ]
add [ eax ] ecx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ esi + 0x20 ]
sub ecx [ eax ]
mov eax [ esi + 0x30 ]
add ecx edi
sub [ eax ] ecx
mov eax [ esi + 0x20 ]
add [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov edx [ eax ]
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
add ecx [ ebp - 0x4 ]
sub ecx edx
mov [ eax ] edx
mov eax [ esi + 0x30 ]
mov [ eax ] ecx
jmp r-xdata
sub_40f2c0
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov [ ecx + 0xc ] eax
lea edx [ ecx + 0x8 ]
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x1c ] eax
lea eax [ ecx + 0x18 ]
mov [ ecx + 0x20 ] eax
lea eax [ ecx + 0x24 ]
mov [ ecx + 0x2c ] eax
lea eax [ ecx + 0x28 ]
mov [ ecx + 0x30 ] eax
mov [ edx ] 0x0
mov eax [ ecx + 0x20 ]
mov [ eax ] 0x0
mov eax [ ecx + 0x30 ]
mov [ eax ] 0x0
mov eax [ ecx + 0xc ]
mov [ eax ] 0x0
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x0
mov eax [ ecx + 0x2c ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x38 ] 0x20
mov [ ecx + 0x3c ] 0x0
mov [ ecx + 0x48 ] 0x0
mov [ ecx + 0x4c ] 0x0
mov [ ecx + 0x44 ] 0x0
mov [ ecx + 0x40 ] rw-data
test eax eax
jne r-xdata
push esi
mov esi rw-data
cmp eax rw-data
jae r-xdata
mov eax [ ecx + 0xc ]
mov [ eax ] rw-data
mov eax [ ecx + 0x1c ]
mov [ eax ] rw-data
mov eax [ ecx + 0x2c ]
mov [ eax ] 0x100
pop ebp
retn 0x14
cmp eax rw-data
mov edx esi
cmovbe edx eax
mov edx rw-data
jmp r-xdata
mov eax [ ecx + 0x10 ]
sub esi edx
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
sub edx rw-data
mov eax [ ecx + 0x30 ]
mov [ eax ] esi
mov eax [ ecx + 0xc ]
pop esi
mov [ eax ] rw-data
mov eax [ ecx + 0x1c ]
mov [ eax ] rw-data
mov eax [ ecx + 0x2c ]
mov [ eax ] edx
pop ebp
retn 0x14
sub_40f3c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ed80
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
add esp 0x4
sub_40f3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42f33f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
add edi esi
mov ecx edi
call sub_4066b0
lea eax [ ebp - 0x14 ]
mov [ edi + 0x3c ] 0x0
lea ebx [ esi + 0x4 ]
mov ecx edi
push eax
mov [ edi + 0x38 ] ebx
call sub_402440
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405b40
mov [ ebp - 0x4 ] 0x1
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
push 0x20
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
call eax
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x60 ]
mov [ edx + esi - 0x4 ] eax
call sub_40bd50
push ecx
push rw-data
sub esp 0xc
mov [ ebx ] r--data
mov ecx ebx
call sub_40f2c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ edi + 0xc ]
mov ecx edi
or eax 0x4
push 0x0
push eax
call sub_402380
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40f530
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x60 ]
mov eax [ edi ]
lea esi [ edi + 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_40ed80
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_41497e#2
add esp 0x4
sub_40f5a0
mov eax [ ecx ]
push esi
lea esi [ ecx + 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_40ed80
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_410260
add esp 0x4
pop esi
retn
sub_40f600
push ebp
mov ebp esp
push 0xffffffff
push sub_42f3ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
push 0xa8
lea eax [ ebp - 0xb8 ]
push 0x0
push eax
call sub_417ad0
sub esp 0x8
lea ecx [ ebp - 0xb8 ]
call sub_40f3f0
mov edx r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb8 ]
call sub_405c70
test esi esi
jne r-xdata
mov [ ebp - 0xbc ] 0x0
lea eax [ ebp - 0xc4 ]
push [ ebp - 0xbc ]
mov edx rw-data
mov [ ebp - 0xc4 ] esi
push eax
mov [ ebp - 0xc0 ] 0x0
call sub_40f860
add esp 0x8
cmp eax rw-data
je r-xdata
call [ WSAGetLastError@IAT ]
mov esi eax
mov edx r--data
cmp [ eax ] esi
jne r-xdata
mov edx [ eax + 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0xb8 ]
call sub_405c70
push esi
push ecx
mov edx r--data
lea ecx [ ebp - 0xb8 ]
call sub_405c70
add esp 0x4
mov ecx eax
call sub_403e10
mov edx r--data
mov ecx eax
call sub_405c70
push 0x0
lea ecx [ ebp - 0xb8 ]
call sub_406230
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xb8 ]
mov [ rw-data ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0xb8 ] r--data
mov eax [ ebp - 0xb8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ebp + ecx - 0xbc ] eax
lea ecx [ ebp - 0xb4 ]
call sub_40ed80
mov eax [ ebp - 0xb8 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0xb8 ] r--data
mov eax [ ebp - 0xb8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ebp + ecx - 0xbc ] eax
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_410260
add esp 0x4
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
sub_40f7a0
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
push 0x1
push esi
call [ shutdown@IAT ]
cmp eax 0xffffffff
je r-xdata
push esi
call [ closesocket@IAT ]
xor al al
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov edi [ recv@IAT ]
lea eax [ ebp - 0x408 ]
push 0x0
push 0x400
push eax
push esi
call edi
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push esi
call [ closesocket@IAT ]
mov ecx [ ebp - 0x4 ]
cmp eax 0xffffffff
pop edi
setne al
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
push eax
push ecx
mov edx r--data
mov ecx rw-data
call sub_405c70
add esp 0x4
mov ecx eax
call sub_403e10
mov edx r--data
mov ecx eax
call sub_405c70
push 0x0
push 0x400
lea eax [ ebp - 0x408 ]
push eax
push esi
call edi
cmp eax 0xffffffff
jne r-xdata
sub_40f860
push ebp
mov ebp esp
push esi
mov ecx edx
mov esi rw-data
sub ecx esi
sar ecx 0x3
test ecx ecx
jle r-xdata
mov eax esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
lea ebx [ ebx ]
mov ecx edx
lea esi [ eax + 0x8 ]
or eax 0xffffffff
sub eax edx
add ecx eax
jmp r-xdata
mov eax ecx
cdq
sub eax edx
mov edx eax
sar edx 0x1
cmp [ esi + edx * 8 ] edi
lea eax [ esi + edx * 8 ]
jge r-xdata
pop edi
test ecx ecx
jg r-xdata
sub_40f8b1
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40f8db
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40f97c
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_414814
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_40f9a1
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414814
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_40f9c0
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_4147d6
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_416e0b
int3
sub_40f9f1
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4147b1
push r--data
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] r--data
push eax
call sub_416e0b
int3
sub_40fa1f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4147b1
push r--data
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] r--data
push eax
call sub_416e0b
int3
sub_40fa4d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0xa
pop ecx
xor eax eax
mov [ esi ] ebx
lea edi [ esi + 0x4 ]
[ edi ]
call sub_41734e
mov edi esi
mov [ edi ] eax
call sub_41739c
mov [ esi + 0x4 ] eax
call sub_417374
xor ecx ecx
cmp [ eax + 0x8 ] ebx
sete cl
mov [ edi + 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_41783c
pop ecx
test eax eax
je r-xdata
inc ebx
cmp ebx 0x100
jl r-xdata
mov esi ebx
mov ecx ebx
sar esi 0x3
and ecx 0x7
mov dl 0x1
shl dl cl
or [ esi + edi + 0xc ] dl
sub_40fab6
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] al
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_40fb57
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40fb08
push esi
jmp r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
mov [ rw-data ] eax
call sub_40faf3
push esi
call j_sub_41497e#2
pop ecx
pop esi
retn
sub_40fb2c
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_40fc74
cmp [ esi + 0x18 ] 0x0
pop ecx
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x18 ]
call sub_41497e
pop ecx
sub_40fb57
push ebp
mov ebp esp
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ ebx ] edi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
cmp [ ebx ] 0x0
je r-xdata
and [ ebx ] 0x0
test edi edi
je r-xdata
push [ ebx ]
call sub_41497e
pop ecx
cmp [ edi ] 0x0
push esi
mov esi edi
je r-xdata
sub esi edi
inc esi
push esi
call sub_417852
mov [ ebx ] eax
pop ecx
test eax eax
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop esi
push esi
push edi
push eax
call sub_416730
add esp 0xc
sub_40fbab
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40fb2c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_40fbca
push ebp
mov ebp esp
push 0x8
call sub_414729
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_40fbf8
push 0x4
mov eax sub_42f3db
call sub_416e82
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40fe53
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call sub_40fd3a
mov esi eax
push esi
call sub_40fd59
pop ecx
pop ecx
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
call sub_40fb57
mov [ rw-data ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x10 ]
call sub_40feae
mov eax esi
call sub_416e6e
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
sub_40fc74
push 0x4
mov eax sub_42f3db
call sub_416e82
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40fe53
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
push [ edi + 0x8 ]
call sub_41497e
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_40feae
call sub_416e6e
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40fccd
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_4178e4
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_40fb57
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_4178e4
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x2c ]
call sub_40fb57
pop esi
pop ebp
retn
sub_40fd18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebp
retn
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push ecx
push 0x0
call sub_4178e4
pop ecx
pop ecx
lea ecx [ eax + 0x28 ]
sub_40fd3a
push ebp
mov ebp esp
push 0x20
call sub_414729
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
mov ecx eax
call sub_40fab6
pop ebp
retn
sub_40fd81
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40fda0
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_40fe53
push rw-data
call sub_40fd81
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_40feae
mov esp ebp
pop ebp
retn
sub_40fdcc
push esi
mov esi [ rw-data ]
mov edx rw-data
mov [ rw-data ] edx
push edi
mov edi ecx
test esi esi
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x3c ] edx
mov edx [ rw-data ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x3c ] edx
mov edx [ rw-data ]
mov eax edi
pop edi
pop esi
retn
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x3c ] edx
sub_40fe25
push edi
xor eax eax
mov edi ecx
mov ecx rw-data
inc eax
[ ecx ] eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_410f1f
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_40fe53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_417b60
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_410f36
pop ecx
sub_40fe86
mov ecx rw-data
or eax 0xffffffff
[ ecx ] eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_410f11
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_40feae
mov eax [ ecx ]
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_417cca
pop ecx
retn
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_410f44
pop ecx
sub_40fee0
push ebp
mov ebp esp
push esi
call sub_41734e
mov esi [ ebp + 0x8 ]
push 0x2
push 0x100
mov [ esi ] eax
call sub_418d9d
mov [ esi + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_418ab9
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] eax
push 0x200
call sub_418ab9
push eax
push [ esi + 0x4 ]
call sub_416730
add esp 0xc
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
push eax
call sub_418ae2
pop ecx
mov [ esi + 0xc ] eax
call sub_417374
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
sub_40ff4c
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_417374
mov edi [ eax + 0x8 ]
call sub_41734e
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
add eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_418ab9
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_41430b
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x100
push edi
push 0x0
call sub_418d39
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_41004b
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_417374
mov edi [ eax + 0x8 ]
call sub_41734e
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_418ab9
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_4142b5
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push edi
push 0x0
call sub_418d39
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_41014a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi eax
movzx eax [ eax ]
jmp r-xdata
lea edi [ ebp + 0xc ]
push eax
call sub_4142e0
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov bl [ esi ]
cmp bl 0x2d
je r-xdata
inc esi
cmp bl 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ecx [ edi ]
jne r-xdata
mov [ edi ] ecx
mov bl 0x2b
jmp r-xdata
cmp bl 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_410ad5
mov ecx [ ebp + 0x8 ]
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp bl 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_41778e
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp bl 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_4101ea
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_40fe53
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x1
mov eax [ ecx + 0x8 ]
inc [ eax + rw-data ]
mov [ eax * 4 + rw-data ] ecx
lea ecx [ ebp - 0x4 ]
call sub_40feae
mov esp ebp
pop ebp
retn
cmp eax ecx
je r-xdata
lea eax [ edx + 0x1 ]
mov [ ecx + 0x8 ] eax
cmp eax 0x8
jb r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
sub_41023b
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_410260
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx esi
call sub_41029d
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
dec [ eax + rw-data ]
mov al [ eax + rw-data ]
test al al
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_401e70
push esi
call j_sub_41497e#2
pop ecx
sub_41029d
push esi
push edi
push 0x0
mov edi ecx
call sub_41023b
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
and [ edi + 0x28 ] 0x0
mov eax [ edi + 0x2c ]
test eax eax
je r-xdata
mov esi [ eax ]
push eax
call j_sub_41497e#2
mov eax esi
pop ecx
test esi esi
jne r-xdata
and [ edi + 0x2c ] 0x0
pop edi
pop esi
retn
mov esi [ eax ]
push eax
call j_sub_41497e#2
mov eax esi
pop ecx
test esi esi
jne r-xdata
sub_4102df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor ecx ecx
push esi
push edi
mov edi eax
mov edx eax
and edi 0x4
and edx 0x80
inc ecx
test al 0x40
je r-xdata
test al 0x8
je r-xdata
or eax ecx
and eax 0xffffff3b
xor esi esi
or eax 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov ecx [ esi * 4 + r--data ]
inc esi
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_41038a
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test al 0xa
je r-xdata
pop edi
pop esi
pop ebp
retn
test edi edi
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_41038a
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_419017
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_415f63
pop ecx
jmp r-xdata
sub_4103a7
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x4c ]
push esi
push eax
mov [ ebp - 0x58 ] ebx
call sub_410f52
mov edi eax
and edi 0x8
mov [ ebp - 0x5c ] edi
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor edi edi
and eax 0xfffffff7
inc edi
cmp eax edi
jne r-xdata
and [ ebx ] 0x0
cmp eax 0x2
jne r-xdata
push edi
lea eax [ ebp - 0x54 ]
push eax
push esi
push [ ebp - 0x4c ]
push [ ebp - 0x44 ]
call sub_41108c
fld [ r--data ]
add esp 0x10
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x28 ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_411e62
add esp 0xc
lea eax [ ebp - 0x10 ]
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
cmp eax 0x3
jne r-xdata
push edi
lea eax [ ebp - 0x54 ]
push eax
push esi
push [ ebp - 0x4c ]
push [ ebp - 0x44 ]
call sub_4112df
fld [ r--data ]
add esp 0x10
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x1c ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_411e62
add esp 0xc
lea eax [ ebp - 0x10 ]
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
push [ ebp - 0x50 ]
push esi
push eax
call sub_411dfb
add esp 0xc
cmp [ ebp - 0x44 ] edi
jle r-xdata
fldz
push ecx
fstp [ esp ]
push esi
push eax
call sub_411e62
add esp 0xc
jmp r-xdata
cmp eax 0x4
jne r-xdata
fld [ rw-data ]
jmp r-xdata
push [ ebp - 0x50 ]
push esi
push eax
call sub_411dfb
add esp 0xc
cmp [ ebp - 0x44 ] edi
jle r-xdata
fldz
push ecx
fstp [ esp ]
push esi
push eax
call sub_411e62
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x54 ]
add eax [ ebp + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_411ee6
add esp 0xc
jmp r-xdata
mov ebx [ ebp - 0x44 ]
fldz
fld [ rw-data ]
jmp r-xdata
fstp [ ebp - 0x48 ]
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_411ee6
push [ ebp - 0x54 ]
lea eax [ ebp - 0x48 ]
push eax
fstp [ ebp - 0x48 ]
call sub_4115c0
add esp 0x14
jmp r-xdata
mov ebx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
push eax
push esi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_411d27
push [ ebp + edi * 4 - 0x50 ]
inc edi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_411dfb
push esi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_411a7b
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x58 ]
mov ecx [ ebp - 0x4 ]
fld [ ebp - 0x48 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x48 ]
push eax
call sub_4115b5
pop ecx
mov ecx 0x8000
xor [ eax ] cx
cmp [ ebp - 0x5c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push esi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_411d27
push [ ebp + edi * 4 - 0x50 ]
inc edi
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_411dfb
push esi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_411a7b
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x58 ]
sub_4105b9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi eax
movzx eax [ eax ]
jmp r-xdata
lea edi [ ebp + 0xc ]
push eax
call sub_4142e0
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov bl [ esi ]
cmp bl 0x2d
je r-xdata
inc esi
cmp bl 0x2b
je r-xdata
xor esi esi
cmp eax [ edi ]
jne r-xdata
mov [ edi ] eax
mov bl 0x2b
jmp r-xdata
cmp bl 0x2b
jne r-xdata
mov eax ecx
or eax edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_410681
add esp 0x10
mov ecx eax
mov eax [ ebp + 0x8 ]
cmp esi [ edi ]
jne r-xdata
cmp bl 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
mov edi 0x80000000
mov eax ecx
mov edi 0x80000000
xor esi esi
cmp edx edi
jb r-xdata
jb r-xdata
cmp bl 0x2d
je r-xdata
mov [ eax ] 0x1
neg ecx
adc edx esi
neg edx
ja r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov eax esi
mov edx edi
jmp r-xdata
or esi 0xffffffff
mov edi 0x7fffffff
call sub_41778e
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp ecx esi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410681
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x24
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ebx
movzx eax [ ebx ]
jmp r-xdata
and [ eax ] 0x0
push eax
call sub_4142e0
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
mov [ ebp - 0x1 ] al
cmp al 0x2d
je r-xdata
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp edi 0x24
jg r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
js r-xdata
test edi edi
jle r-xdata
cmp [ esi ] 0x30
je r-xdata
cmp edi 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
push 0xa
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp [ esi ] 0x30
jne r-xdata
push 0x10
pop edi
cmp al 0x58
je r-xdata
cmp [ esi ] 0x30
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
push 0x8
jmp r-xdata
inc esi
xor eax eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x8 ] eax
mov ebx eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x13 ] al
movsx eax [ esi ]
push edi
push eax
call sub_4191dd
pop ecx
push eax
mov eax r--data
push eax
mov [ ebp - 0x14 ] eax
call sub_413f30
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
pop edi
jmp r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
mov eax edi
cdq
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
jmp r-xdata
movsx eax [ edi + r--data ]
mov ecx esi
sub ecx eax
sub ecx [ ebp - 0x24 ]
js r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
sub cl [ ebp - 0x14 ]
push ebx
push eax
push edx
push [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0x13 ] cl
call sub_419210
mov ecx eax
mov ebx edx
movsx eax [ ebp + 0x13 ]
cdq
add ecx eax
push edi
adc ebx edx
mov [ ebp - 0x8 ] ecx
inc esi
movsx eax [ esi ]
push eax
call sub_4191dd
pop ecx
push eax
mov eax r--data
push eax
call sub_413f30
mov edx [ ebp - 0x1c ]
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov cl [ ebp - 0x1 ]
mov eax [ ebp - 0x8 ]
test ecx ecx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
neg eax
adc ebx 0x0
neg ebx
call sub_41778e
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
cdq
mov [ ebp + 0x8 ] ecx
sub [ ebp + 0x8 ] eax
mov eax ebx
sbb eax edx
mov [ ebp + 0x10 ] eax
cmp ebx eax
jb r-xdata
mov edx ebx
jmp r-xdata
mov [ ecx ] esi
or eax 0xffffffff
mov cl 0x2b
mov ebx eax
jmp r-xdata
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp cl 0x2d
jne r-xdata
mov eax edi
cdq
push edx
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_419250
cmp eax [ ebp - 0xc ]
jne r-xdata
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx [ ebp - 0x10 ]
je r-xdata
sub_41086c
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x98 ]
push esi
push eax
mov [ ebp - 0x9c ] ebx
call sub_410f52
mov edi eax
and edi 0x8
mov [ ebp - 0xa0 ] edi
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor edi edi
and eax 0xfffffff7
inc edi
cmp eax edi
jne r-xdata
and [ ebx ] 0x0
cmp eax 0x2
jne r-xdata
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp - 0x98 ]
push [ ebp - 0x8c ]
call sub_41108c
fld [ r--data ]
add esp 0xc
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x40 ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_4125ff
add esp 0x10
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
cmp eax 0x3
jne r-xdata
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp - 0x98 ]
push [ ebp - 0x8c ]
call sub_4112df
fld [ r--data ]
add esp 0xc
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x58 ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_4125ff
add esp 0x10
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
push [ ebp - 0xc ]
push esi
push eax
call sub_4125d7
add esp 0xc
cmp [ ebp - 0x8c ] edi
jle r-xdata
fldz
push ecx
push ecx
fstp [ esp ]
push esi
push eax
call sub_4125ff
add esp 0x10
jmp r-xdata
cmp eax 0x4
jne r-xdata
fld [ rw-data ]
jmp r-xdata
push [ ebp - 0xc ]
push esi
push eax
call sub_4125d7
add esp 0xc
cmp [ ebp - 0x8c ] edi
jle r-xdata
fldz
push ecx
push ecx
fstp [ esp ]
push esi
push eax
call sub_4125ff
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4126ed
add esp 0xc
jmp r-xdata
mov ebx [ ebp - 0x8c ]
fldz
fld [ rw-data ]
jmp r-xdata
fstp [ ebp - 0x94 ]
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_4126ed
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
fstp [ ebp - 0x94 ]
call sub_412016
add esp 0x14
jmp r-xdata
mov ebx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412504
push [ ebp + edi * 4 - 0xc ]
inc edi
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_4125d7
push esi
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412325
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
fld [ ebp - 0x94 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x94 ]
push eax
call sub_412879
pop ecx
mov ecx 0x8000
xor [ eax ] cx
cmp [ ebp - 0xa0 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412504
push [ ebp + edi * 4 - 0xc ]
inc edi
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_4125d7
push esi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412325
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x9c ]
sub_410ad5
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x10
push ebx
push esi
xor ebx ebx
push edi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi eax
movzx eax [ eax ]
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_4142e0
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
mov [ ebp - 0x1 ] al
cmp al 0x2d
je r-xdata
inc esi
cmp al 0x2b
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
cmp edi 0x24
jg r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
js r-xdata
test edi edi
jle r-xdata
cmp [ esi ] 0x30
je r-xdata
cmp edi 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
push 0xa
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp [ esi ] 0x30
jne r-xdata
push 0x10
pop edi
cmp al 0x58
je r-xdata
cmp [ esi ] 0x30
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
push 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push edi
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ebx
call sub_4191dd
pop ecx
push eax
mov eax r--data
push eax
call sub_413f30
add esp 0xc
test eax eax
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
pop edi
jmp r-xdata
mov dl [ ebp + 0xb ]
mov [ ebp - 0x8 ] ebx
mov ecx r--data
sub al cl
imul ebx edi
mov [ ebp + 0x13 ] al
movsx eax al
push edi
add ebx eax
inc esi
movsx eax [ esi ]
push eax
call sub_4191dd
pop ecx
push eax
mov eax r--data
push eax
call sub_413f30
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
movsx eax [ edi + r--data ]
mov ecx esi
sub ecx eax
sub ecx [ ebp - 0x10 ]
js r-xdata
mov dl [ ebp + 0x13 ]
jmp r-xdata
mov al [ ebp - 0x1 ]
test ecx ecx
jg r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
neg ebx
call sub_41778e
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax dl
mov ecx ebx
sub ecx eax
cmp ebx ecx
jb r-xdata
mov eax ebx
jmp r-xdata
mov [ ecx ] esi
or ebx 0xffffffff
mov al 0x2b
jmp r-xdata
mov [ eax ] 0x1
xor edx edx
mov eax ecx
div edi
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp al 0x2d
jne r-xdata
sub_410c51
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x98 ]
push esi
push eax
mov [ ebp - 0x9c ] ebx
call sub_410f52
mov edi eax
and edi 0x8
mov [ ebp - 0xa0 ] edi
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor edi edi
and eax 0xfffffff7
inc edi
cmp eax edi
jne r-xdata
and [ ebx ] 0x0
cmp eax 0x2
jne r-xdata
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp - 0x98 ]
push [ ebp - 0x8c ]
call sub_41108c
fld [ r--data ]
add esp 0xc
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x40 ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_41315f
add esp 0x10
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
cmp eax 0x3
jne r-xdata
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp - 0x98 ]
push [ ebp - 0x8c ]
call sub_4112df
fld [ r--data ]
add esp 0xc
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x58 ]
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_41315f
add esp 0x10
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
push [ ebp - 0xc ]
push esi
push eax
call sub_413137
add esp 0xc
cmp [ ebp - 0x8c ] edi
jle r-xdata
fldz
push ecx
push ecx
fstp [ esp ]
push esi
push eax
call sub_41315f
add esp 0x10
jmp r-xdata
cmp eax 0x4
jne r-xdata
fld [ rw-data ]
jmp r-xdata
push [ ebp - 0xc ]
push esi
push eax
call sub_413137
add esp 0xc
cmp [ ebp - 0x8c ] edi
jle r-xdata
fldz
push ecx
push ecx
fstp [ esp ]
push esi
push eax
call sub_41315f
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_41324d
add esp 0xc
jmp r-xdata
mov ebx [ ebp - 0x8c ]
fldz
fld [ rw-data ]
jmp r-xdata
fstp [ ebp - 0x94 ]
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_41324d
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
fstp [ ebp - 0x94 ]
call sub_412884
add esp 0x14
jmp r-xdata
mov ebx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_413064
push [ ebp + edi * 4 - 0xc ]
inc edi
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_413137
push esi
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412df1
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
fld [ ebp - 0x94 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x94 ]
push eax
call sub_412879
pop ecx
mov ecx 0x8000
xor [ eax ] cx
cmp [ ebp - 0xa0 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_413064
push [ ebp + edi * 4 - 0xc ]
inc edi
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_413137
push esi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_412df1
add esp 0x30
cmp edi ebx
jl r-xdata
mov ebx [ ebp - 0x9c ]
sub_410eba
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xa
jb r-xdata
mov eax [ ecx * 4 + rw-data ]
inc ecx
push eax
mov [ rw-data ] ecx
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_410ee3
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je sub_4192d7
push [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
sub_410f52
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov esi [ ebx ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_4142e0
pop ecx
test eax eax
jne r-xdata
inc esi
mov al [ esi ]
cmp al 0x2d
jne r-xdata
cmp al 0x2b
jne r-xdata
push 0x8
pop edi
jmp r-xdata
mov al [ esi ]
cmp al 0x6e
je r-xdata
inc esi
mov al [ esi + 0x1 ]
cmp al 0x61
je r-xdata
cmp al 0x4e
je r-xdata
mov al [ esi + 0x2 ]
cmp al 0x6e
je r-xdata
cmp al 0x41
jne r-xdata
cmp al 0x69
je r-xdata
add esi 0x3
push 0x4
mov ebx esi
pop edi
cmp [ esi ] 0x28
jne r-xdata
cmp al 0x4e
je r-xdata
mov esi [ ebx ]
xor edi edi
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x6e
je r-xdata
cmp al 0x49
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
inc ebx
movzx eax [ ebx ]
push eax
call sub_41425d
pop ecx
test eax eax
jne r-xdata
mov al [ esi + 0x2 ]
cmp al 0x66
je r-xdata
cmp al 0x4e
jne r-xdata
cmp al 0x30
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ eax ] esi
cmp [ ebx ] 0x5f
je r-xdata
add esi 0x3
or edi 0x3
mov al [ esi ]
cmp al 0x69
je r-xdata
cmp al 0x46
jne r-xdata
or edi 0x1
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
cmp [ ebx ] 0x29
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x6e
je r-xdata
cmp al 0x49
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x2e
jne r-xdata
cmp al 0x58
jne r-xdata
lea esi [ ebx + 0x1 ]
mov cl [ esi + 0x2 ]
cmp cl 0x69
je r-xdata
cmp cl 0x4e
jne r-xdata
movzx eax [ eax ]
push eax
call sub_414336
pop ecx
test eax eax
je r-xdata
inc eax
mov cl [ esi + 0x3 ]
cmp cl 0x74
je r-xdata
cmp cl 0x49
jne r-xdata
add esi 0x2
or edi 0x2
jmp r-xdata
mov cl [ esi + 0x4 ]
cmp cl 0x79
je r-xdata
cmp cl 0x54
jne r-xdata
add esi 0x5
jmp r-xdata
cmp cl 0x59
jne r-xdata
sub_41108c
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x54 ] eax
imul eax [ ebp + 0x18 ] 0x9
push 0x2d
pop ecx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x38 ] eax
cmp eax ecx
jle r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
cmp [ esi ] 0x30
mov [ ebp - 0x44 ] eax
jne r-xdata
mov [ ebp - 0x38 ] ecx
mov edi eax
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
je r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x44 ] ecx
call sub_414d78
mov ecx [ eax ]
mov al [ esi ]
cmp al [ ecx ]
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x44 ] ecx
inc esi
cmp [ esi ] 0x30
je r-xdata
mov [ ebp - 0x3c ] esi
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x3c ] esi
inc [ ebx ]
mov al [ esi ]
sub al 0x30
mov [ ebp + edi - 0x34 ] al
inc edi
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x30
jne r-xdata
cmp edi [ ebp - 0x38 ]
jg r-xdata
mov [ ebp - 0x3c ] esi
inc esi
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x38 ]
cmp eax edi
jge r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x44 ] ecx
xor ecx ecx
inc ecx
mov [ ebp - 0x44 ] ecx
test edi edi
jle r-xdata
cmp [ ebp + eax - 0x34 ] 0x5
jl r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
jne r-xdata
mov al [ esi ]
sub al 0x30
mov [ ebp + edi - 0x34 ] al
inc edi
dec [ ebx ]
dec [ ebx ]
inc esi
cmp [ esi ] 0x30
je r-xdata
mov [ ebp - 0x3c ] esi
jne r-xdata
lea eax [ ebp - 0x34 ]
inc [ ebx ]
mov edi eax
inc [ ebp + eax - 0x35 ]
cmp edi [ ebp - 0x38 ]
jg r-xdata
mov [ ebp - 0x3c ] esi
xor ecx ecx
xor edi edi
inc edi
xor ecx ecx
mov [ ebp - 0x34 ] cl
jmp r-xdata
test edi edi
inc [ ebx ]
dec edi
test edi edi
jg r-xdata
mov edx [ ebp - 0x54 ]
test edx edx
je r-xdata
mov eax edi
mov [ ebp - 0x4c ] 0x9
cdq
idiv [ ebp - 0x4c ]
push 0x9
pop eax
sub eax edx
mov [ ebp - 0x50 ] eax
cdq
idiv [ ebp - 0x4c ]
mov eax edx
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x38 ] eax
mov eax ecx
mov [ ebp - 0x48 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
cmp [ eax + edi - 0x1 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov al [ esi ]
cmp al 0x65
je r-xdata
mov ecx [ ebp - 0x50 ]
lea edx [ ebp - 0x34 ]
mov esi [ ebp - 0x38 ]
sub ecx edx
mov [ ebp - 0x50 ] ecx
mov [ edx ] esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x48 ] esi
inc esi
mov al [ esi ]
mov [ ebp - 0x3d ] al
cmp al 0x2b
je r-xdata
cmp al 0x45
jne r-xdata
imul ecx [ ebx + esi * 4 ] 0xa
add ecx eax
mov [ ebx + esi * 4 ] ecx
mov ecx [ ebp - 0x50 ]
inc esi
mov [ ebx + esi * 4 ] eax
jmp r-xdata
inc esi
cmp al 0x2d
je r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x34 ]
add eax edx
mov [ ebp - 0x38 ] eax
add eax ecx
cdq
idiv [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
movsx eax [ eax ]
test edx edx
jne r-xdata
mov [ ebp - 0x38 ] esi
xor ecx ecx
mov esi [ ebp - 0x3c ]
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x48 ] eax
cmp eax edi
jl r-xdata
cmp [ ebp - 0x3d ] 0x2d
mov eax [ ebp - 0x3c ]
jne r-xdata
mov ebx [ ebp - 0x3c ]
inc edi
mov [ ebp - 0x3d ] 0x2b
jmp r-xdata
add [ ebx ] eax
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x44 ]
test edi edi
jne r-xdata
neg eax
inc esi
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
jne r-xdata
imul ecx ebx 0xa
movzx ebx [ esi ]
add ebx 0xffffffd0
add ebx ecx
movzx eax [ esi ]
push eax
mov [ ebp - 0x3c ] ecx
call sub_41428a
xor edi edi
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x48 ]
jmp r-xdata
cmp ebx 0x5f5e100
jge r-xdata
mov [ ebp - 0x3c ] ebx
mov ebx [ ebp - 0x58 ]
sub_4112df
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x48 ] eax
imul eax [ ebp + 0x18 ] 0x7
push 0x23
pop ecx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x2c ] eax
cmp eax ecx
jle r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
cmp [ esi ] 0x30
mov [ ebp - 0x38 ] eax
jne r-xdata
mov [ ebp - 0x2c ] ecx
mov edi eax
movsx eax [ esi ]
push 0x16
push eax
push r--data
call sub_413f30
add esp 0xc
test eax eax
je r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x38 ] ecx
call sub_414d78
mov ecx [ eax ]
mov al [ esi ]
cmp al [ ecx ]
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x38 ] ecx
inc esi
cmp [ esi ] 0x30
je r-xdata
mov [ ebp - 0x30 ] esi
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x30 ] esi
inc [ ebx ]
sub eax r--data
mov al [ eax + r--data ]
mov [ ebp + edi - 0x28 ] al
inc edi
jmp r-xdata
movsx eax [ esi ]
push 0x16
push eax
push r--data
call sub_413f30
add esp 0xc
test eax eax
je r-xdata
cmp [ esi ] 0x30
jne r-xdata
cmp edi [ ebp - 0x2c ]
jg r-xdata
mov [ ebp - 0x30 ] esi
inc esi
push 0x16
movsx eax [ esi ]
push eax
push r--data
call sub_413f30
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp eax edi
jge r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x38 ] ecx
xor ecx ecx
inc ecx
mov [ ebp - 0x38 ] ecx
test edi edi
jle r-xdata
cmp [ ebp + eax - 0x28 ] 0x8
jl r-xdata
inc esi
push 0x16
movsx eax [ esi ]
push eax
push r--data
call sub_413f30
add esp 0xc
test eax eax
jne r-xdata
sub eax r--data
mov al [ eax + r--data ]
mov [ ebp + edi - 0x28 ] al
inc edi
dec [ ebx ]
dec [ ebx ]
inc esi
cmp [ esi ] 0x30
je r-xdata
mov [ ebp - 0x30 ] esi
jne r-xdata
lea eax [ ebp - 0x28 ]
inc [ ebx ]
mov edi eax
inc [ ebp + eax - 0x29 ]
cmp edi [ ebp - 0x2c ]
jg r-xdata
mov [ ebp - 0x30 ] esi
xor ecx ecx
xor edi edi
inc edi
xor ecx ecx
mov [ ebp - 0x28 ] cl
jmp r-xdata
test edi edi
inc [ ebx ]
dec edi
test edi edi
jg r-xdata
mov edx [ ebp - 0x48 ]
test edx edx
je r-xdata
mov eax edi
mov [ ebp - 0x40 ] 0x7
cdq
idiv [ ebp - 0x40 ]
push 0x7
pop eax
sub eax edx
mov [ ebp - 0x44 ] eax
cdq
idiv [ ebp - 0x40 ]
mov eax edx
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x2c ] eax
mov eax ecx
mov [ ebp - 0x3c ] eax
test edi edi
jle r-xdata
shl [ ebx ] 0x2
mov eax [ ebp - 0x38 ]
test eax eax
je r-xdata
cmp [ eax + edi - 0x1 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov al [ esi ]
cmp al 0x70
je r-xdata
mov ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x28 ]
mov esi [ ebp - 0x2c ]
sub ecx edx
mov [ ebp - 0x44 ] ecx
mov [ edx ] esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x3c ] esi
inc esi
mov al [ esi ]
mov [ ebp - 0x31 ] al
cmp al 0x2b
je r-xdata
cmp al 0x50
jne r-xdata
mov ecx [ ebx + esi * 4 ]
shl ecx 0x4
add ecx eax
mov [ ebx + esi * 4 ] ecx
mov ecx [ ebp - 0x44 ]
inc esi
mov [ ebx + esi * 4 ] eax
jmp r-xdata
inc esi
cmp al 0x2d
je r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x28 ]
add eax edx
mov [ ebp - 0x2c ] eax
add eax ecx
cdq
idiv [ ebp - 0x40 ]
mov eax [ ebp - 0x2c ]
movsx eax [ eax ]
test edx edx
jne r-xdata
mov [ ebp - 0x2c ] esi
xor ecx ecx
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x3c ]
inc eax
mov [ ebp - 0x3c ] eax
cmp eax edi
jl r-xdata
cmp [ ebp - 0x31 ] 0x2d
mov eax [ ebp - 0x30 ]
jne r-xdata
mov ebx [ ebp - 0x30 ]
inc edi
mov [ ebp - 0x31 ] 0x2b
jmp r-xdata
add [ ebx ] eax
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x38 ]
test edi edi
jne r-xdata
neg eax
inc esi
movzx eax [ esi ]
push eax
call sub_41428a
pop ecx
test eax eax
jne r-xdata
imul ecx ebx 0xa
movzx ebx [ esi ]
add ebx 0xffffffd0
add ebx ecx
movzx eax [ esi ]
push eax
mov [ ebp - 0x30 ] ecx
call sub_41428a
xor edi edi
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x3c ]
jmp r-xdata
cmp ebx 0x5f5e100
jge r-xdata
mov [ ebp - 0x30 ] ebx
mov ebx [ ebp - 0x4c ]
sub_411569
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7f80
movzx eax [ ecx + 0x2 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0x7f
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
push 0x2
pop eax
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4115c0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi 0xff
movzx eax [ ebx + 0x2 ]
mov ecx eax
shr ecx 0x7
and ecx esi
cmp cx si
jne r-xdata
test cx cx
jne r-xdata
test al 0x7f
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jle r-xdata
push ebx
call sub_41336f
pop ecx
movzx ecx ax
xor eax eax
cmp ax cx
jl r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push edi
movsx edi cx
mov eax edi
neg eax
cmp eax edx
jge r-xdata
movsx eax cx
sub esi eax
cmp esi edx
jg r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ ebx + 0x2 ]
dec edx
add edx edi
mov esi ecx
mov eax 0x8000
and ecx 0x7f
and esi eax
or ecx 0x80
mov [ ebp - 0x8 ] esi
lea eax [ edx + 0x18 ]
mov [ ebx + 0x2 ] cx
cmp eax 0x17
ja r-xdata
mov ax [ ebx + 0x2 ]
add ecx edx
mov edx 0x807f
shl ecx 0x7
and ax dx
or cx ax
mov [ ebx + 0x2 ] cx
jmp r-xdata
fld [ rw-data ]
mov eax 0x8000
test [ ebx + 0x2 ] ax
je r-xdata
xor eax eax
mov [ ebx + 0x2 ] si
mov [ ebx ] ax
xor edi edi
movzx eax dx
mov [ ebp + 0x8 ] edi
cmp dx 0xfff0
jg r-xdata
or eax 0xffffffff
jmp r-xdata
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ ebx ]
fchs
neg eax
movzx eax ax
mov [ ebp - 0x4 ] eax
test ax ax
je r-xdata
movzx eax [ ebx ]
mov [ ebp + 0x8 ] eax
xor eax eax
mov [ ebx + 0x2 ] ax
lea eax [ edx + 0x10 ]
mov [ ebx ] cx
movzx eax ax
pop edi
or [ ebx + 0x2 ] si
mov edx 0x8000
mov eax [ ebp + 0x8 ]
mov cx [ ebx + 0x2 ]
cmp dx ax
jb r-xdata
movzx edi [ ebx ]
cwde
mov dx di
push 0x10
pop esi
sub esi eax
xor eax eax
mov ecx esi
shl dx cl
cmp [ ebp + 0x8 ] ax
mov cx [ ebp - 0x4 ]
setne al
shr di cl
or dx ax
mov ecx esi
mov esi [ ebp - 0x8 ]
movzx eax dx
movzx edx [ ebx + 0x2 ]
mov [ ebp + 0x8 ] eax
mov ax dx
shl ax cl
mov cx [ ebp - 0x4 ]
or di ax
shr dx cl
mov [ ebx ] di
xor edi edi
mov [ ebx + 0x2 ] dx
inc [ ebx ]
jne r-xdata
jne r-xdata
cmp cx si
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebx + 0x2 ] ax
jmp r-xdata
test [ ebx ] 0x1
je r-xdata
cmp [ ebx ] di
je r-xdata
xor eax eax
sub_41175a
push ebp
mov ebp esp
sub esp 0x10
fld [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
fstp [ ebp - 0xc ]
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_41352c
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jge r-xdata
test ax ax
jns r-xdata
push 0x2
pop esi
cmp ax si
je r-xdata
pop esi
xor esi esi
mov [ ebp - 0x4 ] 0x100
test ebx ebx
jle r-xdata
fld [ ebp + 0x10 ]
fstp [ edi ]
jmp r-xdata
push edi
call sub_411569
movzx eax ax
pop ecx
test ax ax
jle r-xdata
lea eax [ edi + esi * 4 ]
fld [ eax ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0x10 ]
call sub_41352c
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jl r-xdata
cmp ax si
je r-xdata
fld [ ebp + 0x10 ]
test ax ax
je r-xdata
push edi
call sub_4115b5
mov ecx 0x8000
mov ax [ eax ]
and ax cx
movzx esi ax
lea eax [ ebp + 0x10 ]
push eax
call sub_4115b5
pop ecx
pop ecx
mov ecx 0x8000
mov ax [ eax ]
and ax cx
cmp ax si
je r-xdata
lea ecx [ esi + 0x1 ]
fstp [ edi + esi * 4 ]
cmp ecx ebx
jge r-xdata
movsx edx [ ebp + 0xc ]
movsx eax [ ebp + 0x8 ]
mov ecx edx
fldz
sub ecx eax
cmp ecx 0xfffffff4
jg r-xdata
push 0x1
call sub_413439
fld [ rw-data ]
fstp [ edi ]
pop ecx
cmp ebx 0x1
jle r-xdata
fldz
fstp [ edi + esi * 4 + 0x4 ]
push 0xc
pop eax
cmp ecx eax
jl r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fstp [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
fld [ ecx ]
faddp st2
fxch st1
fstp [ ebp + 0x10 ]
fld [ ebp + 0x10 ]
fst [ ecx ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
fstp st0
mov edx esi
fstp st0
mov [ ebp - 0x4 ] edx
fstp st0
inc esi
jmp r-xdata
lea eax [ ebx - 0x1 ]
cmp ecx eax
jge r-xdata
fld [ edi + ecx * 4 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
inc esi
cmp esi ebx
je r-xdata
mov ax [ ebp - 0x2 ]
push 0xc
sub ax dx
pop ecx
add ax cx
movzx eax ax
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_413462
movsx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_4115c0
mov eax [ ebp - 0x8 ]
add esp 0x10
fld [ eax ]
fsub [ ebp + 0x10 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fst [ eax ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fst [ edi + ebx * 4 - 0x4 ]
fld [ ecx ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ edi + edx * 4 ]
fstp [ ebp + 0x10 ]
fld [ ebp + 0x10 ]
fst [ edi + edx * 4 - 0x4 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
cmp esi ebx
jl r-xdata
cmp ecx ebx
jne r-xdata
inc ecx
jmp r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
fld [ eax ]
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp + 0x10 ]
call sub_41352c
push 0xc
pop eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_413462
movsx eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_4115c0
mov ecx [ ebp - 0x8 ]
add esp 0x18
fld [ ebp + 0x10 ]
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
fsub [ ecx ]
fstp [ ebp + 0x10 ]
fld [ ebp + 0x10 ]
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fstp st0
mov ecx esi
jmp r-xdata
inc edx
cmp edx ebx
jge r-xdata
jmp r-xdata
cmp esi ecx
jge r-xdata
dec ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp - 0xc ]
call sub_41352c
fstp st0
fld [ ecx ]
fld [ edi + esi * 4 - 0x4 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0xc ]
call sub_41352c
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x100
jmp r-xdata
fstp [ edi + ebx * 4 - 0x4 ]
jmp r-xdata
fld [ edi + ecx * 4 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fst [ edi + ecx * 4 - 0x4 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ecx ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp + 0x10 ]
call sub_41352c
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x2 ] ax
lea ecx [ edx - 0xc ]
cwde
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
fxch st1
fstp [ eax ]
fstp [ ebp + 0x10 ]
jmp r-xdata
fld [ edi + ecx * 4 - 0x4 ]
fstp [ edi + ecx * 4 ]
dec ecx
cmp ecx esi
jg r-xdata
pop ecx
pop ecx
dec esi
jne r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
sub_411a7b
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x14 ] esi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
fldz
push edi
mov edi [ ebp + 0x10 ]
pop edi
fld [ edi + esi * 4 ]
push ecx
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41175a
fldz
add esp 0xc
inc esi
cmp esi [ ebp + 0x14 ]
jl r-xdata
fld [ edi + esi * 4 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st0
sub_411abe
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
inc edi
cmp ecx edi
je r-xdata
fldz
jmp r-xdata
fld [ esi ]
fld [ esi ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
mov esp ebp
pop ebp
retn
fstp st0
fld [ esi + 0x4 ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
cmp ecx 0x2
je r-xdata
fstp st0
fld [ esi + 0x4 ]
fadd [ esi ]
fstp [ ebp + 0xc ]
fld [ ebp + 0xc ]
jmp r-xdata
fld [ esi + 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
pop edi
pop esi
fld [ esi + 0x4 ]
fadd [ esi ]
fstp [ ebp - 0x4 ]
fld [ esi + 0x8 ]
fstp [ ebp + 0xc ]
fld [ esi + 0xc ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebp - 0x4 ]
fld st0
fsub [ esi ]
fld [ esi + 0x4 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_412871
pop ecx
or [ eax ] di
fstp st0
fld [ esi + 0x4 ]
fadd [ ebp + 0xc ]
fadd [ esi ]
fstp [ ebp + 0xc ]
fld [ ebp + 0xc ]
jmp r-xdata
fadd [ ebp + 0xc ]
fstp [ ebp + 0xc ]
fld [ ebp + 0xc ]
jmp r-xdata
sub_411b9d
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fldz
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
jle r-xdata
xor esi esi
xor ecx ecx
inc esi
mov [ ebp - 0x24 ] ecx
test ebx ebx
jg r-xdata
fstp st0
lea eax [ ebp - 0x14 ]
fmul [ edi ]
push eax
fstp [ ebp - 0x14 ]
call sub_411569
movzx esi ax
xor eax eax
pop ecx
cmp ax si
jg r-xdata
cmp esi 0x4
jge r-xdata
fstp st0
jmp r-xdata
fldz
fst [ edi ]
fld [ ebp + 0x10 ]
fxch st1
cmp si 0x2
jne r-xdata
fstp st1
lea eax [ ecx + esi ]
lea edx [ edi + eax * 4 ]
fstp st0
fld [ ebp - 0x14 ]
xor eax eax
fstp [ edi ]
cmp ax si
jge r-xdata
push 0x1
call sub_413439
pop ecx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
fstp [ ebp - 0x18 ]
call sub_41352c
lea eax [ ebp - 0x18 ]
push 0xc
push eax
call sub_413462
movsx eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4115c0
fld [ ebp - 0x18 ]
add esp 0x14
fstp [ esp ]
push ebx
push edi
call sub_41175a
fld [ ebp - 0x14 ]
add esp 0x8
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x20 ]
fstp [ esp ]
push ebx
push edi
call sub_41175a
fldz
xor ecx ecx
inc ecx
add esp 0xc
cmp esi ecx
jle r-xdata
fstp st1
push 0x8
fst [ ebp + esi * 4 - 0x14 ]
pop esi
jmp r-xdata
fld [ edx ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
cmp ebx 0x1
jle r-xdata
mov ecx [ ebp - 0x24 ]
fld [ ebp + 0x10 ]
inc ecx
dec esi
mov [ ebp - 0x24 ] ecx
cmp ecx ebx
jl r-xdata
fld [ ebp + ecx * 4 - 0x14 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x20 ]
fst [ ebp + ecx * 4 - 0x18 ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebp - 0x14 ]
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fld st1
fmul [ edx ]
fstp [ ebp + esi * 4 - 0x14 ]
inc esi
fst [ edx ]
add edx 0x4
cmp esi 0x4
jl r-xdata
fldz
fstp [ edi + 0x4 ]
jmp r-xdata
fxch st1
fstp st1
inc ecx
cmp ecx esi
jl r-xdata
lea eax [ ecx + esi ]
cmp eax ebx
jge r-xdata
sub_411d27
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
fld [ ebx ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp st0
fld [ ebx + 0x4 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebx ]
push ecx
fstp [ esp ]
push esi
push edi
call sub_411b9d
add esp 0xc
mov ecx [ ebp + 0x18 ]
push edi
push esi
push ecx
call sub_411b80
fld [ ebx ]
pop ecx
pop ecx
fstp [ esp ]
push esi
push edi
call sub_411b9d
xor eax eax
add esp 0xc
inc eax
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] eax
jle r-xdata
pop ebx
fld [ ebx + eax * 4 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
push esi
lea eax [ ecx + esi * 4 ]
push eax
call sub_411b80
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x18 ]
fld [ ebx + eax * 4 ]
fstp [ esp ]
push esi
lea eax [ ecx + esi * 4 ]
push eax
call sub_411b9d
mov ecx [ ebp + 0x18 ]
push esi
lea eax [ ecx + esi * 4 ]
push eax
push esi
push edi
call sub_411a7b
mov eax [ ebp + 0xc ]
add esp 0x1c
inc eax
mov [ ebp + 0xc ] eax
cmp eax [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
sub_411dfb
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx 0x2710
cdq
idiv ecx
push ecx
mov [ ebp + 0x10 ] eax
fild [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
fstp [ ebp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411e62
fld [ r--data ]
pop ecx
pop ecx
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411b9d
fild [ ebp - 0x4 ]
add esp 0x8
fstp [ ebp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41175a
mov eax [ ebp + 0x8 ]
add esp 0xc
mov esp ebp
pop ebp
retn
sub_411e62
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
fld [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
fstp [ ebp - 0x4 ]
jle r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x1
je r-xdata
fld [ ebp - 0x4 ]
fstp [ esi ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_41352c
movzx eax ax
pop ecx
pop ecx
test ax ax
je r-xdata
xor ecx ecx
cmp cx ax
jge r-xdata
lea eax [ ebp - 0x4 ]
push 0xc
push eax
call sub_413462
movsx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4115c0
fld [ ebp - 0x4 ]
add esp 0x10
cmp [ ebp + 0xc ] 0x2
fst [ esi ]
fsubr [ ebp + 0x10 ]
fstp [ esi + 0x4 ]
jle r-xdata
fld [ ebp - 0x4 ]
fstp [ esi ]
fldz
fstp [ esi + 0x4 ]
jmp r-xdata
fldz
fstp [ esi + 0x8 ]
jmp r-xdata
sub_411ee6
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x3c ] edi
test ebx ebx
je r-xdata
push 0x3
push ecx
call sub_411abe
pop ecx
pop ecx
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x10 ]
push esi
test ebx ebx
jle r-xdata
push r--data
push 0x3
pop esi
push esi
push eax
neg ebx
call sub_411b80
fld [ r--data ]
push ecx
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_411e62
jmp r-xdata
sar ebx 0x1
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push edi
call sub_411d27
add esp 0x14
mov edi [ ebp - 0x38 ]
add esp 0xc
push esi
push edi
call sub_411abe
mov edi [ ebp - 0x3c ]
fstp [ ebp - 0x38 ]
fld [ ebp - 0x38 ]
fldz
fucomp st1
fnstsw ax
pop ecx
pop ecx
pop esi
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_411b80
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_411d27
add esp 0x20
jmp r-xdata
fstp st0
fld [ rw-data ]
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
test bl 0x1
je r-xdata
fld [ ebp - 0x38 ]
jmp r-xdata
or [ edi ] 0x1
fld [ ebp - 0x38 ]
fxch st1
fchs
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
jmp r-xdata
call sub_41778e
mov [ eax ] 0x22
test edi edi
je r-xdata
sub_41201f
push ebp
mov ebp esp
sub esp 0x18
fld [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
fstp [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4135ba
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jge r-xdata
test ax ax
jns r-xdata
push 0x2
pop esi
cmp ax si
je r-xdata
pop esi
xor esi esi
mov [ ebp - 0x4 ] 0x800
test ebx ebx
jle r-xdata
fld [ ebp + 0x10 ]
fstp [ edi ]
jmp r-xdata
push edi
call sub_41200d
movzx eax ax
pop ecx
test ax ax
jle r-xdata
lea eax [ edi + esi * 8 ]
fld [ eax ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0x18 ]
call sub_4135ba
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jl r-xdata
cmp ax si
je r-xdata
fld [ ebp + 0x10 ]
test ax ax
je r-xdata
push edi
call sub_412879
mov ecx 0x8000
mov ax [ eax ]
and ax cx
movzx esi ax
lea eax [ ebp + 0x10 ]
push eax
call sub_412879
pop ecx
pop ecx
mov ecx 0x8000
mov ax [ eax ]
and ax cx
cmp ax si
je r-xdata
lea ecx [ esi + 0x1 ]
fstp [ edi + esi * 8 ]
cmp ecx ebx
jge r-xdata
movsx edx [ ebp + 0xc ]
movsx eax [ ebp + 0x8 ]
mov ecx edx
fldz
sub ecx eax
cmp ecx 0xffffffe6
jg r-xdata
push 0x1
call sub_413439
fld [ rw-data ]
fstp [ edi ]
pop ecx
cmp ebx 0x1
jle r-xdata
fldz
fstp [ edi + esi * 8 + 0x8 ]
push 0x1a
pop eax
cmp ecx eax
jl r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fstp [ edi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
fld [ ecx ]
faddp st2
fxch st1
fst [ ecx ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
fstp st0
mov edx esi
fstp st0
mov [ ebp - 0x4 ] edx
fstp st0
inc esi
jmp r-xdata
lea eax [ ebx - 0x1 ]
cmp ecx eax
jge r-xdata
fld [ edi + ecx * 8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
inc esi
cmp esi ebx
je r-xdata
mov ax [ ebp - 0x2 ]
push 0x1a
sub ax dx
pop ecx
add ax cx
movzx eax ax
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_4135b1
movsx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_412016
mov eax [ ebp - 0x8 ]
add esp 0x10
fld [ eax ]
fsub [ ebp + 0x10 ]
fst [ eax ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fst [ edi + ebx * 8 - 0x8 ]
fld [ ecx ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ edi + edx * 8 ]
fst [ edi + edx * 8 - 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
cmp esi ebx
jl r-xdata
cmp ecx ebx
jne r-xdata
inc ecx
jmp r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
fld [ eax ]
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp + 0x10 ]
call sub_4135ba
push 0x1a
pop eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4135b1
movsx eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_412016
mov ecx [ ebp - 0x8 ]
add esp 0x18
fld [ ebp + 0x10 ]
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
fsub [ ecx ]
fst [ ebp + 0x10 ]
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fstp st0
mov ecx esi
jmp r-xdata
inc edx
cmp edx ebx
jge r-xdata
jmp r-xdata
cmp esi ecx
jge r-xdata
dec ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp - 0x10 ]
call sub_4135ba
fstp st0
fld [ ecx ]
fld [ edi + esi * 8 - 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0x10 ]
call sub_4135ba
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x800
jmp r-xdata
fstp [ edi + ebx * 8 - 0x8 ]
jmp r-xdata
fld [ edi + ecx * 8 ]
fst [ edi + ecx * 8 - 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ecx ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp + 0x10 ]
call sub_4135ba
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x2 ] ax
lea ecx [ edx - 0x1a ]
cwde
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
fxch st1
fstp [ eax ]
fstp [ ebp + 0x10 ]
jmp r-xdata
fld [ edi + ecx * 8 - 0x8 ]
fstp [ edi + ecx * 8 ]
dec ecx
cmp ecx esi
jg r-xdata
pop ecx
pop ecx
dec esi
jne r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
sub_412325
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x14 ] esi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
fldz
push edi
mov edi [ ebp + 0x10 ]
pop edi
fld [ edi + esi * 8 ]
push ecx
push ecx
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41201f
fldz
add esp 0x10
inc esi
cmp esi [ ebp + 0x14 ]
jl r-xdata
fld [ edi + esi * 8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st0
sub_412386
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fldz
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
jle r-xdata
xor esi esi
xor edx edx
inc esi
mov [ ebp - 0x2c ] edx
test ebx ebx
jg r-xdata
fstp st0
lea eax [ ebp - 0x24 ]
fmul [ edi ]
push eax
fstp [ ebp - 0x24 ]
call sub_41200d
movzx esi ax
xor eax eax
pop ecx
cmp ax si
jg r-xdata
cmp esi 0x4
jge r-xdata
fstp st0
jmp r-xdata
fldz
fst [ edi ]
fld [ ebp + 0x10 ]
fxch st1
cmp si 0x2
jne r-xdata
fstp st1
lea eax [ edx + esi ]
lea ecx [ edi + eax * 8 ]
fstp st0
fld [ ebp - 0x24 ]
xor eax eax
fstp [ edi ]
cmp ax si
jge r-xdata
push 0x1
call sub_413439
pop ecx
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
fstp [ ebp - 0x34 ]
call sub_4135ba
lea eax [ ebp - 0x34 ]
push 0x1a
push eax
call sub_4135b1
movsx eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_412016
fld [ ebp - 0x34 ]
add esp 0x10
fstp [ esp ]
push ebx
push edi
call sub_41201f
fld [ ebp - 0x24 ]
add esp 0x8
fsub [ ebp - 0x34 ]
fstp [ esp ]
push ebx
push edi
call sub_41201f
fldz
xor ecx ecx
inc ecx
add esp 0x10
cmp esi ecx
jle r-xdata
fstp st1
push 0x8
fst [ ebp + esi * 8 - 0x24 ]
pop esi
jmp r-xdata
fld [ ecx ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
cmp ebx 0x1
jle r-xdata
mov edx [ ebp - 0x2c ]
fld [ ebp + 0x10 ]
inc edx
dec esi
mov [ ebp - 0x2c ] edx
cmp edx ebx
jl r-xdata
fld [ ebp + ecx * 8 - 0x24 ]
fst [ ebp + ecx * 8 - 0x2c ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebp - 0x24 ]
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fld st1
fmul [ ecx ]
fstp [ ebp + esi * 8 - 0x24 ]
inc esi
fst [ ecx ]
add ecx 0x8
cmp esi 0x4
jl r-xdata
fldz
fstp [ edi + 0x8 ]
jmp r-xdata
fxch st1
fstp st1
inc ecx
cmp ecx esi
jl r-xdata
lea eax [ edx + esi ]
cmp eax ebx
jge r-xdata
sub_412504
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
fld [ ebx ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp st0
fld [ ebx + 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebx ]
push ecx
push ecx
fstp [ esp ]
push esi
push edi
call sub_412386
add esp 0x10
mov ecx [ ebp + 0x18 ]
push edi
push esi
push ecx
call sub_412369
fld [ ebx ]
pop ecx
fstp [ esp ]
push esi
push edi
call sub_412386
xor eax eax
add esp 0x10
inc eax
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] eax
jle r-xdata
pop ebx
fld [ ebx + eax * 8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
push esi
lea eax [ ecx + esi * 8 ]
push eax
call sub_412369
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ ebp + 0x18 ]
fld [ ebx + eax * 8 ]
fstp [ esp ]
lea eax [ ecx + esi * 8 ]
push esi
push eax
call sub_412386
mov ecx [ ebp + 0x18 ]
push esi
lea eax [ ecx + esi * 8 ]
push eax
push esi
push edi
call sub_412325
mov eax [ ebp + 0xc ]
add esp 0x20
inc eax
mov [ ebp + 0xc ] eax
cmp eax [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
sub_4125d7
push ebp
mov ebp esp
push ecx
push ecx
fild [ ebp + 0x10 ]
push ecx
push ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4125ff
mov eax [ ebp + 0x8 ]
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4125ff
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
fst [ ebp - 0x8 ]
test edi edi
jle r-xdata
fstp st0
cmp edi 0x1
je r-xdata
fstp [ esi ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
fstp st0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_4135ba
movzx eax ax
pop ecx
pop ecx
test ax ax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fld [ ebp - 0x8 ]
xor ecx ecx
cmp cx ax
jge r-xdata
lea eax [ ebp - 0x8 ]
push 0x1a
push eax
call sub_4135b1
movsx eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_412016
fld [ ebp - 0x8 ]
lea ebx [ esi + 0x8 ]
fst [ esi ]
fsubr [ ebp + 0x10 ]
add esp 0x10
fst [ ebp + 0x10 ]
fst [ ebx ]
cmp edi 0x2
jle r-xdata
fld [ ebp - 0x8 ]
fstp [ esi ]
fldz
fstp [ esi + 0x8 ]
jmp r-xdata
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp [ esi + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
fstp st0
push ebx
push eax
call sub_4135ba
push 0x1a
push ebx
call sub_4135b1
movsx eax [ ebp + 0xc ]
push eax
push ebx
call sub_412016
fld [ ebp + 0x10 ]
add esp 0x18
fsub [ ebx ]
fst [ esi + 0x10 ]
cmp edi 0x3
jle r-xdata
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp [ esi + 0x18 ]
jmp r-xdata
sub_4126ed
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x68 ] ecx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] edi
test ebx ebx
je r-xdata
push 0x3
push ecx
call sub_412e35
pop ecx
pop ecx
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x1c ]
push esi
test ebx ebx
jle r-xdata
push r--data
push 0x3
pop esi
push esi
push eax
neg ebx
call sub_412369
add esp 0xc
fld [ r--data ]
push ecx
push ecx
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_4125ff
add esp 0x10
jmp r-xdata
sar ebx 0x1
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
push esi
lea eax [ ebp - 0x1c ]
push eax
push esi
push edi
call sub_412504
add esp 0x14
mov edi [ ebp - 0x68 ]
push esi
push edi
call sub_412e35
mov edi [ ebp - 0x70 ]
add esp 0x8
fst [ ebp - 0x6c ]
fldz
fucomp st1
fnstsw ax
pop esi
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_412369
lea eax [ ebp - 0x64 ]
push eax
push esi
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_412504
add esp 0x20
jmp r-xdata
fstp st0
call sub_41778e
fld [ ebp - 0x6c ]
mov [ eax ] 0x22
test edi edi
je r-xdata
fld [ rw-data ]
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
or [ edi ] 0x1
jmp r-xdata
fstp st0
fchs
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
jmp r-xdata
sub_41280f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7ff0
movzx eax [ ecx + 0x6 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0xf
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
pop ebp
retn
inc eax
pop ebp
retn
sub_412884
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x7ff
movzx eax [ edi + 0x6 ]
mov ecx eax
shr ecx 0x4
and ecx esi
cmp cx si
jne r-xdata
test cx cx
jne r-xdata
test al 0xf
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jle r-xdata
push edi
call sub_4135c3
pop ecx
movzx ecx ax
xor eax eax
cmp ax cx
jl r-xdata
push 0x2
pop eax
jmp r-xdata
xor ebx ebx
cmp [ edi + 0x4 ] bx
jne r-xdata
movsx esi cx
mov eax esi
neg eax
cmp eax edx
jge r-xdata
movsx eax cx
sub esi eax
cmp esi edx
jg r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x2 ] bx
jne r-xdata
movzx eax [ edi + 0x6 ]
dec edx
mov ecx eax
add edx esi
and eax 0xf
mov ebx 0x8000
or eax 0x10
and ecx ebx
movzx ebx ax
mov [ edi + 0x6 ] ax
lea eax [ edx + 0x35 ]
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x8 ] ebx
cmp eax 0x34
ja r-xdata
mov ax [ edi + 0x6 ]
add ecx edx
mov edx 0x800f
shl ecx 0x4
and ax dx
or cx ax
mov [ edi + 0x6 ] cx
fld [ rw-data ]
mov eax 0x8000
test [ edi + 0x6 ] ax
je r-xdata
cmp [ edi ] bx
je r-xdata
xor eax eax
mov [ edi + 0x6 ] cx
mov [ edi + 0x2 ] eax
mov [ edi ] ax
xor ebx ebx
movzx esi dx
mov [ ebp - 0x4 ] ebx
cmp dx 0xfff0
jg r-xdata
fstp [ edi ]
fchs
xor eax eax
inc eax
jmp r-xdata
neg esi
movzx eax si
mov [ ebp + 0x8 ] eax
test ax ax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
movzx eax ax
mov [ ebp - 0x4 ] eax
movzx eax [ edi + 0x4 ]
mov [ ebp - 0x8 ] eax
movzx eax [ edi + 0x2 ]
mov [ ebp + 0x8 ] eax
mov eax 0xfff0
sub ax dx
shr ax 0x4
inc ax
movzx eax ax
mov [ ebp - 0x10 ] eax
shl eax 0x4
add eax edx
mov edx [ ebp - 0x10 ]
movzx esi ax
mov [ ebp - 0x14 ] esi
mov esi [ ebp - 0x8 ]
or [ edi + 0x6 ] cx
mov esi 0x8000
mov eax [ ebp - 0x4 ]
mov dx [ edi + 0x6 ]
cmp si ax
jb r-xdata
movzx esi [ edi ]
cwde
mov dx si
push 0x10
pop ecx
sub ecx eax
xor eax eax
shl dx cl
cmp [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
setne al
or dx ax
movzx eax dx
movzx edx [ edi + 0x2 ]
mov [ ebp - 0x4 ] eax
mov ax dx
shl ax cl
mov cx [ ebp + 0x8 ]
shr si cl
mov ecx [ ebp - 0x8 ]
or ax si
movzx esi [ edi + 0x4 ]
mov [ edi ] ax
mov ax si
shl ax cl
mov cx [ ebp + 0x8 ]
shr dx cl
mov ecx [ ebp - 0x8 ]
or ax dx
movzx edx [ edi + 0x6 ]
mov [ edi + 0x2 ] ax
mov ax dx
shl ax cl
mov cx [ ebp + 0x8 ]
shr si cl
or ax si
shr dx cl
mov ecx [ ebp - 0xc ]
mov [ edi + 0x4 ] ax
mov [ edi + 0x6 ] dx
xor eax eax
test cx cx
setne al
or ax [ edi ]
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ edi ] ax
movzx eax si
mov esi [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
movzx esi si
mov [ ebp - 0x4 ] ebx
dec edx
jne r-xdata
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi + 0x6 ] cx
mov ecx [ ebp - 0xc ]
mov [ edi + 0x4 ] si
mov esi [ ebp - 0x14 ]
mov [ edi + 0x2 ] ax
inc [ edi ]
jne r-xdata
jne r-xdata
cmp dx cx
jne r-xdata
inc [ edi + 0x2 ]
jne r-xdata
test [ edi ] 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x4 ] bx
jne r-xdata
inc [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x2 ] bx
jne r-xdata
lea eax [ edx + 0x1 ]
mov [ edi + 0x6 ] ax
jmp r-xdata
cmp [ edi ] bx
je r-xdata
jmp r-xdata
sub_412aeb
push ebp
mov ebp esp
sub esp 0x18
fld [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
fstp [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_413830
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jge r-xdata
test ax ax
jns r-xdata
push 0x2
pop esi
cmp ax si
je r-xdata
pop esi
xor esi esi
mov [ ebp - 0x4 ] 0x800
test ebx ebx
jle r-xdata
fld [ ebp + 0x10 ]
fstp [ edi ]
jmp r-xdata
push edi
call sub_41280f
movzx eax ax
pop ecx
test ax ax
jle r-xdata
lea eax [ edi + esi * 8 ]
fld [ eax ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0x18 ]
call sub_413830
pop ecx
pop ecx
movzx eax ax
xor ecx ecx
cmp cx ax
jl r-xdata
cmp ax si
je r-xdata
fld [ ebp + 0x10 ]
test ax ax
je r-xdata
push edi
call sub_412879
mov ecx 0x8000
mov ax [ eax ]
and ax cx
movzx esi ax
lea eax [ ebp + 0x10 ]
push eax
call sub_412879
pop ecx
pop ecx
mov ecx 0x8000
mov ax [ eax ]
and ax cx
cmp ax si
je r-xdata
lea ecx [ esi + 0x1 ]
fstp [ edi + esi * 8 ]
cmp ecx ebx
jge r-xdata
movsx edx [ ebp + 0xc ]
movsx eax [ ebp + 0x8 ]
mov ecx edx
fldz
sub ecx eax
cmp ecx 0xffffffe6
jg r-xdata
push 0x1
call sub_413439
fld [ rw-data ]
fstp [ edi ]
pop ecx
cmp ebx 0x1
jle r-xdata
fldz
fstp [ edi + esi * 8 + 0x8 ]
push 0x1a
pop eax
cmp ecx eax
jl r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fstp [ edi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
fld [ ecx ]
faddp st2
fxch st1
fst [ ecx ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
fstp st0
mov edx esi
fstp st0
mov [ ebp - 0x4 ] edx
fstp st0
inc esi
jmp r-xdata
lea eax [ ebx - 0x1 ]
cmp ecx eax
jge r-xdata
fld [ edi + ecx * 8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
inc esi
cmp esi ebx
je r-xdata
mov ax [ ebp - 0x2 ]
push 0x1a
sub ax dx
pop ecx
add ax cx
movzx eax ax
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_413734
movsx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_412884
mov eax [ ebp - 0x8 ]
add esp 0x10
fld [ eax ]
fsub [ ebp + 0x10 ]
fst [ eax ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fst [ edi + ebx * 8 - 0x8 ]
fld [ ecx ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ edi + edx * 8 ]
fst [ edi + edx * 8 - 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
cmp esi ebx
jl r-xdata
cmp ecx ebx
jne r-xdata
inc ecx
jmp r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
fld [ eax ]
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp + 0x10 ]
call sub_413830
push 0x1a
pop eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_413734
movsx eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_412884
mov ecx [ ebp - 0x8 ]
add esp 0x18
fld [ ebp + 0x10 ]
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
fsub [ ecx ]
fst [ ebp + 0x10 ]
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fstp st0
mov ecx esi
jmp r-xdata
inc edx
cmp edx ebx
jge r-xdata
jmp r-xdata
cmp esi ecx
jge r-xdata
dec ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp - 0x10 ]
call sub_413830
fstp st0
fld [ ecx ]
fld [ edi + esi * 8 - 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
fstp [ ebp - 0x10 ]
call sub_413830
movsx eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x800
jmp r-xdata
fstp [ edi + ebx * 8 - 0x8 ]
jmp r-xdata
fld [ edi + ecx * 8 ]
fst [ edi + ecx * 8 - 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ecx ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
fstp [ ebp + 0x10 ]
call sub_413830
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x2 ] ax
lea ecx [ edx - 0x1a ]
cwde
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
fxch st1
fstp [ eax ]
fstp [ ebp + 0x10 ]
jmp r-xdata
fld [ edi + ecx * 8 - 0x8 ]
fstp [ edi + ecx * 8 ]
dec ecx
cmp ecx esi
jg r-xdata
pop ecx
pop ecx
dec esi
jne r-xdata
inc ecx
cmp ecx ebx
jge r-xdata
sub_412df1
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x14 ] esi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
fldz
push edi
mov edi [ ebp + 0x10 ]
pop edi
fld [ edi + esi * 8 ]
push ecx
push ecx
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412aeb
fldz
add esp 0x10
inc esi
cmp esi [ ebp + 0x14 ]
jl r-xdata
fld [ edi + esi * 8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st0
sub_412e35
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x10
test ecx ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
inc edi
cmp ecx edi
je r-xdata
fldz
jmp r-xdata
fld [ esi ]
fld [ esi ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
mov esp ebp
pop ebp
retn
fstp st0
fld [ esi + 0x8 ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
cmp ecx 0x2
je r-xdata
fstp st0
fld [ esi + 0x8 ]
fld [ esi + 0x10 ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
pop edi
pop esi
fld [ esi + 0x8 ]
fadd [ esi ]
fst [ ebp - 0x10 ]
fld [ esi + 0x10 ]
fst [ ebp - 0x8 ]
fld [ esi + 0x18 ]
fucomp st3
fnstsw ax
fstp st2
test ah 0x44
jpo r-xdata
fld st0
fsub [ esi ]
fld [ esi + 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
lea eax [ ebp - 0x8 ]
fstp st1
push eax
fstp st0
call sub_412871
pop ecx
or [ eax ] di
fld [ ebp - 0x8 ]
fld [ ebp - 0x10 ]
fstp st0
fadd [ esi + 0x8 ]
jmp r-xdata
faddp st1
jmp r-xdata
fadd [ esi ]
jmp r-xdata
sub_412ee6
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fldz
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
jle r-xdata
xor esi esi
xor edx edx
inc esi
mov [ ebp - 0x2c ] edx
test ebx ebx
jg r-xdata
fstp st0
lea eax [ ebp - 0x24 ]
fmul [ edi ]
push eax
fstp [ ebp - 0x24 ]
call sub_41280f
movzx esi ax
xor eax eax
pop ecx
cmp ax si
jg r-xdata
cmp esi 0x4
jge r-xdata
fstp st0
jmp r-xdata
fldz
fst [ edi ]
fld [ ebp + 0x10 ]
fxch st1
cmp si 0x2
jne r-xdata
fstp st1
lea eax [ edx + esi ]
lea ecx [ edi + eax * 8 ]
fstp st0
fld [ ebp - 0x24 ]
xor eax eax
fstp [ edi ]
cmp ax si
jge r-xdata
push 0x1
call sub_413439
pop ecx
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
fstp [ ebp - 0x34 ]
call sub_413830
lea eax [ ebp - 0x34 ]
push 0x1a
push eax
call sub_413734
movsx eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_412884
fld [ ebp - 0x34 ]
add esp 0x10
fstp [ esp ]
push ebx
push edi
call sub_412aeb
fld [ ebp - 0x24 ]
add esp 0x8
fsub [ ebp - 0x34 ]
fstp [ esp ]
push ebx
push edi
call sub_412aeb
fldz
xor ecx ecx
inc ecx
add esp 0x10
cmp esi ecx
jle r-xdata
fstp st1
push 0x8
fst [ ebp + esi * 8 - 0x24 ]
pop esi
jmp r-xdata
fld [ ecx ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
cmp ebx 0x1
jle r-xdata
mov edx [ ebp - 0x2c ]
fld [ ebp + 0x10 ]
inc edx
dec esi
mov [ ebp - 0x2c ] edx
cmp edx ebx
jl r-xdata
fld [ ebp + ecx * 8 - 0x24 ]
fst [ ebp + ecx * 8 - 0x2c ]
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebp - 0x24 ]
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fld st1
fmul [ ecx ]
fstp [ ebp + esi * 8 - 0x24 ]
inc esi
fst [ ecx ]
add ecx 0x8
cmp esi 0x4
jl r-xdata
fldz
fstp [ edi + 0x8 ]
jmp r-xdata
fxch st1
fstp st1
inc ecx
cmp ecx esi
jl r-xdata
lea eax [ edx + esi ]
cmp eax ebx
jge r-xdata
sub_413064
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
fld [ ebx ]
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp st0
fld [ ebx + 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ ebx ]
push ecx
push ecx
fstp [ esp ]
push esi
push edi
call sub_412ee6
add esp 0x10
mov ecx [ ebp + 0x18 ]
push edi
push esi
push ecx
call sub_412369
fld [ ebx ]
pop ecx
fstp [ esp ]
push esi
push edi
call sub_412ee6
xor eax eax
add esp 0x10
inc eax
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] eax
jle r-xdata
pop ebx
fld [ ebx + eax * 8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
push esi
lea eax [ ecx + esi * 8 ]
push eax
call sub_412369
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ ebp + 0x18 ]
fld [ ebx + eax * 8 ]
fstp [ esp ]
lea eax [ ecx + esi * 8 ]
push esi
push eax
call sub_412ee6
mov ecx [ ebp + 0x18 ]
push esi
lea eax [ ecx + esi * 8 ]
push eax
push esi
push edi
call sub_412df1
mov eax [ ebp + 0xc ]
add esp 0x20
inc eax
mov [ ebp + 0xc ] eax
cmp eax [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
sub_413137
push ebp
mov ebp esp
push ecx
push ecx
fild [ ebp + 0x10 ]
push ecx
push ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41315f
mov eax [ ebp + 0x8 ]
add esp 0x10
mov esp ebp
pop ebp
retn
sub_41315f
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
fst [ ebp - 0x8 ]
test edi edi
jle r-xdata
fstp st0
cmp edi 0x1
je r-xdata
fstp [ esi ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
fstp st0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_413830
movzx eax ax
pop ecx
pop ecx
test ax ax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fld [ ebp - 0x8 ]
xor ecx ecx
cmp cx ax
jge r-xdata
lea eax [ ebp - 0x8 ]
push 0x1a
push eax
call sub_413734
movsx eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_412884
fld [ ebp - 0x8 ]
lea ebx [ esi + 0x8 ]
fst [ esi ]
fsubr [ ebp + 0x10 ]
add esp 0x10
fst [ ebp + 0x10 ]
fst [ ebx ]
cmp edi 0x2
jle r-xdata
fld [ ebp - 0x8 ]
fstp [ esi ]
fldz
fstp [ esi + 0x8 ]
jmp r-xdata
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp [ esi + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
fstp st0
push ebx
push eax
call sub_413830
push 0x1a
push ebx
call sub_413734
movsx eax [ ebp + 0xc ]
push eax
push ebx
call sub_412884
fld [ ebp + 0x10 ]
add esp 0x18
fsub [ ebx ]
fst [ esi + 0x10 ]
cmp edi 0x3
jle r-xdata
fldz
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp [ esi + 0x18 ]
jmp r-xdata
sub_41324d
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x68 ] ecx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] edi
test ebx ebx
je r-xdata
push 0x3
push ecx
call sub_412e35
pop ecx
pop ecx
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x1c ]
push esi
test ebx ebx
jle r-xdata
push r--data
push 0x3
pop esi
push esi
push eax
neg ebx
call sub_412369
add esp 0xc
fld [ r--data ]
push ecx
push ecx
fstp [ esp ]
push 0x3
pop esi
push esi
push eax
call sub_41315f
add esp 0x10
jmp r-xdata
sar ebx 0x1
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
push esi
lea eax [ ebp - 0x1c ]
push eax
push esi
push edi
call sub_413064
add esp 0x14
mov edi [ ebp - 0x68 ]
push esi
push edi
call sub_412e35
mov edi [ ebp - 0x70 ]
add esp 0x8
fst [ ebp - 0x6c ]
fldz
fucomp st1
fnstsw ax
pop esi
test ah 0x44
jpo r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_412369
lea eax [ ebp - 0x64 ]
push eax
push esi
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_413064
add esp 0x20
jmp r-xdata
fstp st0
call sub_41778e
fld [ ebp - 0x6c ]
mov [ eax ] 0x22
test edi edi
je r-xdata
fld [ rw-data ]
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
or [ edi ] 0x1
jmp r-xdata
fstp st0
fchs
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
jmp r-xdata
sub_41336f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x7f
movzx eax [ esi + 0x2 ]
inc edi
mov ebx eax
and ebx 0x8000
pop ecx
and eax ecx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x2 ] ax
jne r-xdata
test ax ax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
movzx eax [ esi + 0x2 ]
mov ecx 0x80
cmp ax cx
jae r-xdata
mov ax [ esi ]
mov [ esi + 0x2 ] ax
xor eax eax
push 0xfffffff1
mov [ esi ] ax
pop edi
or [ esi + 0x2 ] bx
mov ax di
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x2 ]
mov ecx 0x100
cmp cx ax
ja r-xdata
mov ebx ecx
push 0x7f
pop eax
and [ esi + 0x2 ] ax
movzx edx [ esi ]
mov ecx eax
mov esi 0x100
movzx edx [ esi ]
add eax eax
mov cx dx
shr cx 0xf
or cx ax
dec edi
movzx ecx cx
lea eax [ edx + edx ]
mov [ esi ] ax
mov eax ecx
cmp cx bx
jb r-xdata
mov ebx [ ebp - 0x4 ]
mov [ esi + 0x2 ] cx
mov eax ecx
shr dx 0x1
shl eax 0xf
or ax dx
shr cx 0x1
inc edi
movzx edx ax
cmp si cx
jbe r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x2 ] cx
mov [ esi ] dx
sub_413439
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x5
je r-xdata
test [ ebp + 0x8 ] 0x18
je r-xdata
call sub_41778e
mov [ eax ] 0x21
pop ebp
retn
pop ebp
retn
call sub_41778e
mov [ eax ] 0x22
sub_413462
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax 0xff
movzx ecx [ esi + 0x2 ]
mov edx ecx
shr edx 0x7
and edx eax
mov [ ebp + 0x8 ] edx
cmp dx ax
jne r-xdata
test ecx 0xffff7fff
jne r-xdata
test cl 0x7f
jne r-xdata
mov eax 0x96
sub eax edx
sub eax [ ebp + 0xc ]
movzx eax ax
push edi
mov di ax
mov [ ebp + 0x8 ] eax
test di di
jg r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x18
pop edx
cmp dx di
jg r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
and eax 0xf
sar di 0x4
movzx edx [ eax * 2 + r--data ]
movsx eax di
mov ecx [ eax * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp + 0x8 ] edx
mov [ esi + ecx * 2 ] ax
xor eax eax
mov cx dx
cmp ax di
jge r-xdata
xor eax eax
and ecx 0x8000
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x2 ] cx
jmp r-xdata
pop edi
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi ]
mov [ esi ] ax
sub_41352c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov edx 0xff
mov ax [ esi + 0x2 ]
shr ax 0x7
and ax dx
movzx ecx ax
cmp cx dx
jne r-xdata
xor eax eax
cmp ax cx
jl r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
test [ esi + 0x2 ] 0x7f
jne r-xdata
mov ax [ esi + 0x2 ]
mov edx 0xbf7f
and ax dx
add ecx 0xffffff82
mov edx 0x3f00
or ax dx
mov [ esi + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
or eax 0xffffffff
push esi
call sub_41336f
pop ecx
movzx ecx ax
test cx cx
jle r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ esi ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
sub_4135c3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0xf
movzx eax [ esi + 0x6 ]
inc edi
mov ebx eax
and ebx 0x8000
pop ecx
and eax ecx
mov [ ebp - 0x8 ] ebx
mov [ esi + 0x6 ] ax
jne r-xdata
test ax ax
jne r-xdata
xor ecx ecx
cmp [ esi + 0x4 ] cx
jne r-xdata
movzx ecx [ esi + 0x6 ]
push 0x10
pop eax
cmp cx ax
jae r-xdata
movzx eax [ esi + 0x4 ]
movzx ecx [ esi + 0x2 ]
cmp [ esi + 0x2 ] cx
jne r-xdata
movzx eax [ esi + 0x6 ]
push 0x20
pop ecx
cmp cx ax
ja r-xdata
movzx edx [ esi + 0x2 ]
movzx ebx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx edx ax
xor ebx ebx
movzx eax cx
sub edi 0x10
movzx ecx [ esi ]
mov [ esi ] bx
test dx dx
je r-xdata
mov ebx [ ebp - 0x8 ]
mov [ esi + 0x6 ] dx
mov [ esi + 0x4 ] ax
mov [ esi + 0x2 ] cx
cmp [ esi ] cx
je r-xdata
push 0xf
pop eax
and [ esi + 0x6 ] ax
movzx edx [ esi + 0x4 ]
movzx ecx [ esi + 0x2 ]
movzx ebx [ esi ]
mov esi eax
mov [ ebp - 0x4 ] eax
add ecx ecx
mov ax bx
shr ax 0xf
or cx ax
movzx eax cx
mov cx dx
movzx edx [ esi ]
mov [ ebp - 0xc ] eax
lea eax [ ebx + ebx ]
shr cx 0xf
or cx ax
mov eax [ ebp - 0x4 ]
movzx ebx cx
add eax eax
mov cx dx
shr cx 0xf
or cx ax
dec edi
movzx eax cx
mov [ ebp - 0x4 ] eax
lea eax [ edx + edx ]
push 0x10
mov [ esi ] ax
mov eax [ ebp - 0xc ]
pop edx
movzx ecx ax
cmp ax dx
jb r-xdata
or [ esi + 0x6 ] bx
mov ax di
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
shr bx 0x1
shl eax 0xf
or ax bx
shr cx 0x1
movzx ebx ax
mov eax edx
shl eax 0xf
or cx ax
shr dx 0x1
mov eax esi
movzx ecx cx
shl eax 0xf
or ax dx
shr si 0x1
push 0x20
movzx edx ax
inc edi
pop eax
cmp ax si
jbe r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ esi ] bx
mov ebx [ ebp - 0x8 ]
mov [ esi + 0x6 ] ax
mov [ esi + 0x4 ] dx
mov [ esi + 0x2 ] cx
mov edx [ ebp - 0x4 ]
mov [ esi + 0x6 ] ax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] bx
mov ebx [ ebp - 0x8 ]
mov [ esi + 0x2 ] ax
sub_413734
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7ff
movzx edx [ esi + 0x6 ]
mov ecx edx
shr ecx 0x4
and ecx eax
mov [ ebp + 0x8 ] ecx
cmp cx ax
jne r-xdata
test edx 0xffff7fff
jne r-xdata
test dl 0xf
jne r-xdata
mov eax 0x433
sub eax ecx
sub eax [ ebp + 0xc ]
movzx ecx ax
mov ax cx
mov [ ebp + 0x8 ] ecx
test ax ax
jle r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x35
pop edi
cmp di ax
jg r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x2 ] ax
jne r-xdata
sar ax 0x4
and ecx 0xf
movsx edi ax
movzx edx [ ecx * 2 + r--data ]
mov ecx [ edi * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp + 0x8 ] edx
mov [ esi + ecx * 2 ] ax
mov cx dx
dec edi
je r-xdata
xor eax eax
and edx 0x8000
mov [ esi + 0x2 ] eax
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x6 ] dx
jmp r-xdata
cmp [ esi ] ax
jne r-xdata
cmp [ esi ] ax
jne r-xdata
or cx [ esi ]
xor eax eax
mov [ esi ] ax
dec edi
je r-xdata
pop edi
inc eax
jmp r-xdata
or cx [ esi + 0x2 ]
xor eax eax
mov [ esi + 0x2 ] ax
dec edi
jne r-xdata
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi + 0x4 ]
xor eax eax
mov [ esi + 0x4 ] ax
sub_413830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov edx 0x7ff
mov ax [ esi + 0x6 ]
shr ax 0x4
and ax dx
movzx ecx ax
cmp cx dx
jne r-xdata
xor eax eax
cmp ax cx
jl r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
test [ esi + 0x6 ] 0xf
jne r-xdata
mov ax [ esi + 0x6 ]
mov edx 0xbfef
and ax dx
add ecx 0xfffffc02
mov edx 0x3fe0
or ax dx
mov [ esi + 0x6 ] ax
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
or eax 0xffffffff
push esi
call sub_4135c3
pop ecx
movzx ecx ax
test cx cx
jle r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x2 ] ax
jne r-xdata
cmp [ esi ] ax
jne r-xdata
inc eax
jmp r-xdata
sub_4138e0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_413db4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_413cb8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413db4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_413b2c ]
jmp [ ecx * 4 + jump_table_413bac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413c18 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413db4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413c18 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413db4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413db4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413db4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413c18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413c18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413c18 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_413c18 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_413f30
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_413fdd
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
push edi
call sub_41cf59
mov edi eax
mov [ esi + 0x8 ] edi
mov edx [ edi + 0x6c ]
mov [ esi ] edx
mov ecx [ edi + 0x68 ]
mov [ esi + 0x4 ] ecx
cmp edx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
pop edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_41c5b8
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41c93a
mov [ esi + 0x4 ] eax
sub_414065
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4140bd
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41410f
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_414161
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4141b3
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_414205
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_41cd73
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41425d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_414065
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
pop ebp
retn
sub_41428a
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4140bd
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_4142b5
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41410f
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
sub_4142e0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_414161
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
pop ebp
retn
sub_41430b
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4141b3
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
sub_414336
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_414205
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
pop ebp
retn
sub_414363
push esi
push 0x4
push 0x20
call sub_418d9d
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_414392
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
call sub_416238
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4143d6
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4143d0
mov eax esi
call sub_41e075
retn
sub_4143d6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_41dff5
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
push ecx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_418e2c
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_418e2c
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_4144ca
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_41e40a
push [ ebp + 0x8 ]
call sub_419754
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_41973f
pop ecx
pop ebp
retn
push 0x1
call sub_41e40a
pop ecx
sub_414507
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_4144ca
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_41460e
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_4144ca
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_4146ec
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_419320
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41470a
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4146de
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_414729
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_417852
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41eee0
pop ecx
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_4147d6
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_416e0b
int3
sub_4147b1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_414877
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4147f1
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_41481f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41481f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_4148b5
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_414877
jmp r-xdata
sub_414852
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4148b5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_414877
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_416d80
lea edi [ eax + 0x1 ]
push edi
call sub_417852
mov [ ebx + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_414da3
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_4148de
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
lea edi [ ebp - 0x1c ]
push 0x7
xor eax eax
mov [ ebp - 0x20 ] ebx
pop ecx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
mov [ ebp - 0x14 ] 0x42
call sub_41f1fb
add esp 0x10
mov esi eax
dec [ ebp - 0x1c ]
js r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f0ac
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
jmp r-xdata
mov eax esi
pop esi
sub_41497e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41778e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4177a1
pop ecx
mov [ esi ] eax
pop esi
sub_4149b6
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test edi edi
jne r-xdata
push 0x24
push 0xff
push edi
call sub_417ad0
mov esi [ ebp + 0xc ]
add esp 0xc
test esi esi
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
cmp [ esi + 0x4 ] ebx
jg r-xdata
push 0x7
pop eax
cmp [ esi + 0x4 ] eax
jl r-xdata
jl r-xdata
call sub_4200c5
lea eax [ ebp - 0x8 ]
push eax
call sub_41fe1c
pop ecx
test eax eax
jne r-xdata
jg r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp [ esi ] ebx
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
lea eax [ ebp - 0xc ]
push eax
call sub_41fe46
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] 0x93406fff
ja r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
push eax
call sub_41fe70
pop ecx
test eax eax
jne r-xdata
mov ebx [ esi + 0x4 ]
mov ecx [ esi ]
test ebx ebx
jl r-xdata
push esi
push edi
call sub_41fe9a
pop ecx
pop ecx
test eax eax
jne r-xdata
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub ecx eax
lea eax [ ebp - 0x14 ]
push eax
sbb ebx edx
mov [ ebp - 0x14 ] ecx
push edi
mov [ ebp - 0x10 ] ebx
call sub_41fe9a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x3f480
jbe r-xdata
mov eax [ edi ]
cdq
mov ebx eax
mov esi edx
mov eax [ ebp - 0x4 ]
cdq
sub ebx eax
sbb esi edx
push edi
call sub_420115
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
push 0x0
push 0x3c
push esi
push ebx
call sub_420860
mov esi eax
mov ebx edx
mov eax [ edi + 0x4 ]
cdq
add esi eax
push 0x0
push 0x3c
adc ebx edx
push ebx
push esi
call sub_420910
mov [ edi + 0x4 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add ebx 0xffffffc4
mov [ edi ] eax
adc esi 0xffffffff
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
cdq
mov ecx eax
mov [ edi + 0x20 ] 0x1
mov eax [ edi ]
mov esi edx
cdq
mov ebx eax
sub ebx ecx
sbb edx esi
mov [ ebp + 0x8 ] edx
mov esi edx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_420115
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push esi
call sub_420860
mov esi eax
mov ebx edx
mov eax [ edi + 0x8 ]
cdq
add esi eax
push 0x0
push 0x18
adc ebx edx
push ebx
push esi
call sub_420910
mov [ edi + 0x8 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add esi 0xffffffc4
mov [ edi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push esi
push ebx
call sub_420910
mov [ edi ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push edi
call sub_41fe9a
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x0
push 0x18
push ebx
push esi
call sub_420860
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add esi 0xffffffe8
mov [ edi + 0x8 ] eax
adc ebx 0xffffffff
mov [ edi + 0x20 ] 0x1
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax 0x7
add [ edi + 0xc ] ecx
add eax ecx
push 0x7
cdq
pop esi
idiv esi
mov eax [ edi + 0xc ]
mov [ edi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ edi + 0x1c ] ecx
add eax 0x1f
mov [ edi + 0x10 ] 0xb
mov [ edi + 0xc ] eax
lea eax [ ecx + 0x16d ]
add [ edi + 0x1c ] eax
dec [ edi + 0x14 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax ecx
push 0x7
cdq
pop esi
idiv esi
add [ edi + 0xc ] ecx
mov [ edi + 0x18 ] edx
test ecx ecx
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_414c30
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_414da3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41778e
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_41778e
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_414df8
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov edi ebx
mov [ ebp - 0x4 ] ebx
mov esi ebx
call sub_413fdd
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ eax ] bl
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x10 ]
push ebx
push [ eax + 0xc ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
add eax eax
push eax
call sub_418de5
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41776d
jmp r-xdata
push esi
call sub_41497e
push [ ebp - 0x4 ]
call sub_41497e
pop ecx
pop ecx
mov ebx edi
push [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push 0xffffffff
push [ ebp + 0x10 ]
push ebx
push [ eax + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop ecx
mov eax [ ebp + 0xc ]
add eax eax
push eax
call sub_418de5
mov esi eax
pop ecx
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push esi
call sub_41a25c
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov eax [ ebp - 0x18 ]
push ebx
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xffffffff
push esi
push ebx
push [ eax + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41776d
mov edi ebx
sub_414f38
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_41778e
push 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
cmp [ ebp + 0xc ] 0x9
mov [ edi ] 0x0
jae r-xdata
push ebx
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xc ]
cdq
push 0xa
pop ebx
idiv ebx
movzx ecx [ ebp - 0xa ]
add al 0x30
movzx esi [ ebp - 0x8 ]
mov [ edi ] al
add dl 0x30
mov [ edi + 0x1 ] dl
mov eax ecx
cdq
idiv ebx
push 0x30
pop ecx
add al cl
mov [ edi + 0x5 ] 0x3a
mov [ edi + 0x3 ] al
add dl cl
mov [ edi + 0x4 ] dl
mov eax esi
cdq
idiv ebx
mov [ edi + 0x2 ] 0x3a
add al cl
mov [ edi + 0x8 ] 0x0
add dl cl
mov [ edi + 0x6 ] al
mov [ edi + 0x7 ] dl
xor eax eax
pop ebx
jmp r-xdata
call sub_41778e
push 0x22
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_414ff0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_415036
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_413fdd
test esi esi
jne r-xdata
mov edx [ ebp - 0x2c ]
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
fldz
jmp r-xdata
movzx ecx [ esi ]
mov eax [ edx + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x2c ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_41cd73
mov edx [ ebp - 0x2c ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
pop esi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_420c12
add esp 0xc
fld [ eax + 0x10 ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edx + 0x74 ] 0x1
jle r-xdata
sub_4150e5
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add ecx 0x2ac18000
push 0x0
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_419250
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_415136
push 0xc
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4154c3
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_421461
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_41e075
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41522f
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41f0ac
pop ecx
pop ecx
mov edi eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
movzx edi cl
inc [ esi ]
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_415237
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
call sub_41eddc
fld [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov eax 0x7ff0
movzx ecx cx
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_41e513
pop ecx
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41e412
mov ecx [ ebp + 0x10 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
test ecx ecx
jns r-xdata
fstp st0
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
fadd st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp edx eax
jg r-xdata
mov eax 0x80000000
sub eax ecx
cmp edx eax
jl r-xdata
push edi
push esi
call sub_41eddc
pop ecx
pop ecx
call sub_41e668
add esp 0x24
cmp eax 0x3
jne r-xdata
push esi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_421739
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp ]
push ecx
push ecx
lea eax [ edx + ecx ]
cmp eax 0xa00
jg r-xdata
fldz
fmulp st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
fild [ ebp + 0x10 ]
push esi
sub esp 0x10
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_41e922
add esp 0x18
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41e4e4
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41e4e4
push edi
push esi
fstp [ ebp + 0x8 ]
call sub_41eddc
add esp 0x14
jmp r-xdata
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41e4e4
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fld [ ebp + 0x8 ]
jmp r-xdata
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_415423
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_418d9d
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_418d9d
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_4154c3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_417b60
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_415502
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_417b60
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_415532
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_417cca
pop ecx
pop ebp
retn
sub_41556c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_417cca
pop ecx
pop ebp
retn
sub_415599
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_421461
pop ecx
mov ecx eax
mov ebx rw-data
cmp ecx edi
je r-xdata
mov eax edi
test [ esi + 0xc ] 0x1
jne r-xdata
mov edx ebx
cmp ecx 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test [ esi + 0xc ] 0x80
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
cmp ecx edi
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_4217fe
pop ecx
test [ esi + 0xc ] 0x2
jne r-xdata
mov ecx ebx
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ ecx + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
movzx eax bl
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_415679
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4154c3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_415599
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4156e1
mov eax edi
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
call sub_41e075
retn
sub_4156e9
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_421844
mov [ esi ] eax
and eax edx
mov [ esi + 0x4 ] edx
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41573e
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4154c3
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4157c4
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4157bc
mov eax edi
cmp edi 0x1
je r-xdata
call sub_41e075
retn
cmp edi 0x2
jne r-xdata
sub_4157c4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_41778e
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
push ebx
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push esi
call sub_4218bf
mov ebx [ ebp + 0xc ]
add ebx eax
mov eax [ ebp + 0x10 ]
pop ecx
adc eax edx
xor edi edi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
mov [ ebp + 0x8 ] eax
call sub_4158bb
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push edi
push [ ebp + 0x8 ]
push ebx
push esi
call sub_421461
pop ecx
push eax
call sub_421c94
add esp 0x10
and eax edx
or ecx 0xffffffff
pop ebx
cmp eax ecx
je r-xdata
test al 0x8
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_415875
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4158bb
pop ecx
test eax eax
je r-xdata
push esi
call sub_415981
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_421461
push eax
call sub_421e03
neg eax
pop ecx
pop ecx
sbb eax eax
jmp r-xdata
sub_4158bb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax ebx
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_421461
pop ecx
push eax
call sub_421eec
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_415928
push 0xc
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4154c3
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_415875
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415979
mov eax edi
push edi
call sub_415981
pop ecx
jmp r-xdata
call sub_41e075
retn
sub_415981
push 0x14
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_417b60
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415a5c
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_41e075
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_415502
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_415a29
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_415875
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_415875
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_415a65
push 0xc
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4154c3
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_421461
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_41e075
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415b56
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
call sub_422840
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_415b5e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41573e
add esp 0x10
pop ebp
retn
sub_415b97
push 0x10
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_41e075
retn
mov ecx [ ebp + 0x14 ]
lea eax [ ecx - 0x2 ]
cmp eax 0x7ffffffd
ja r-xdata
cmp ebx 0x40
je r-xdata
cmp ebx 0x40
jne r-xdata
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x20 ] esi
push esi
call sub_4154c3
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_4158bb
push esi
call sub_422961
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
push 0x2
pop ebx
jmp r-xdata
or ecx 0x500
mov [ esi + 0xc ] ecx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_418de5
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] edi
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415c95
mov eax edi
sub_415c9d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_417ad0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_41778e
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_416730
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_41778e
push 0x22
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
pop edi
sub_415d1c
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_41f0ac
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
xor edx edx
mov eax edi
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
dec ebx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_4158bb
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_416730
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ esi + 0x4 ] eax
sub ebx eax
add [ esi ] eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_421461
pop ecx
push eax
call sub_421eec
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_415e75
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4154c3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415d1c
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415eef
mov eax edi
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
call sub_41e075
retn
sub_415ef7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_4158bb
push esi
mov edi eax
call sub_422961
push esi
call sub_421461
push eax
call sub_422991
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_41497e
and [ esi + 0x1c ] 0x0
pop ecx
sub_415f63
push 0xc
push r--data
call sub_41e030
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push esi
call sub_4154c3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_415ef7
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415fd2
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_41e075
retn
sub_415fda
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
call sub_419458
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_418de5
mov [ esi ] eax
pop ecx
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41776d
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_41776d
push [ esi ]
call sub_41497e
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_41608c
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_416110
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_422ea1
push r--data
push r--data
call sub_416216
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_422db0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_422b26
call sub_41448e
mov [ esp ] r--data
push r--data
call sub_4161e0
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_422db0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4161a8
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_41ef06
push esi
call sub_41f039
push esi
call sub_41e3fd
push esi
call sub_422f5d
push esi
call sub_422f3f
push esi
call sub_42316e
add esp 0x18
pop esi
jmp sub_419498
sub_4161e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
sub eax esi
add eax 0x3
shr eax 0x2
cmp [ ebp + 0xc ] esi
push edi
sbb edi edi
not edi
and edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
inc ebx
cmp ebx edi
jb r-xdata
call eax
sub_416216
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_41624a
push 0x1c
push r--data
call sub_41e030
push 0x8
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416364
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_41e075
retn
mov [ rw-data ] 0x1
push 0x8
call sub_417cca
pop ecx
push [ ebp + 0x8 ]
call sub_4160c0
push r--data
push r--data
call sub_4161e0
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_4161e0
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_41638d
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
xor eax eax
push edi
lea edi [ ebp - 0x1c ]
push 0x7
pop ecx
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp esi eax
ja r-xdata
test edi edi
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x18 ]
mov [ ebp - 0x18 ] edi
push [ ebp + 0x14 ]
mov [ ebp - 0x20 ] edi
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
mov [ ebp - 0x1c ] esi
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
pop esi
xor eax eax
mov [ edi + esi - 0x1 ] 0x0
cmp [ ebp - 0x1c ] eax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41f0ac
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_416457
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_423252
call sub_41638d
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_41778e
mov [ eax ] 0x22
jmp r-xdata
call sub_41f071
or eax 0xffffffff
sub_4164fc
push 0xc
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_4154bd
add eax 0x20
push eax
push 0x1
call sub_415502
pop ecx
pop ecx
mov [ ebp - 0x4 ] edi
call sub_4154bd
add eax 0x20
push eax
call sub_4231ac
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_4154bd
add eax 0x20
push eax
call sub_41f1fb
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4154bd
add eax 0x20
push eax
push esi
call sub_42317b
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416598
mov eax edi
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
call sub_41e075
retn
sub_4165ab
push 0x14
push r--data
call sub_41e030
push 0x1
call sub_424320
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_41fdef
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_41d093
test eax eax
jne r-xdata
push 0x1c
call sub_4166ff
cmp [ eax + r--data ] ebx
setne bl
call sub_422b06
and [ ebp - 0x4 ] 0x0
call sub_421485
test eax eax
jns r-xdata
push 0x10
call sub_4166ff
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_424409
mov [ rw-data ] eax
call sub_424010
test eax eax
jns r-xdata
push 0x1b
call sub_4166ff
call sub_42423f
test eax eax
jns r-xdata
push 0x8
call sub_4160d6
push 0x1
call sub_416110
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4160d6
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_402980
add esp 0xc
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_4160d6
call sub_416101
jmp sub_4166f0
push esi
call sub_416379
sub_416730
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_416c04 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_416b08 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c04 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41697c ]
jmp [ ecx * 4 + jump_table_4169fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416a68 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416c04 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416a68 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c04 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c04 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c04 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416a68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416a68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416a68 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_416a68 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_416d80
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_416e0b
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
test [ esi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test [ esi ] 0x8
je r-xdata
mov ecx [ edi ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x18 ]
call [ eax + 0x20 ]
mov [ ebp - 0xc ] 0x1994000
sub_416e82
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_416eb5
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_416eeb
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4138c4
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_418971
add esp 0x20
pop esi
pop ebp
retn
sub_416f1c
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4138c4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_418971
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_417022
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4171a9
pop ebx
mov esp ebp
pop ebp
retn
sub_416fbb
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_416eeb
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4244a0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_417022
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_416f1c
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_41cf59
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
sub_4170f9
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0xc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
push edi
mov edi esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_422ec0
cmp esi edi
jbe r-xdata
dec esi
imul eax esi 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_422ec0
imul eax esi 0x14
pop edi
pop esi
pop ebx
add eax ecx
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_417177
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_4171a9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4171fe
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_41cf59
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_41cf59
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_417228
push ebp
mov ebp esp
push esi
call sub_41cf59
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41cf59
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_41cf59
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_422ec0
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_417278
push ebp
mov ebp esp
call sub_41cf59
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4172a1
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418971
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4173c2
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] ebx
test eax eax
je r-xdata
mov ecx [ esi + 0x88 ]
test ecx ecx
je r-xdata
push edi
lea edi [ esi + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ esi + 0x88 ] ebx
xor eax eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x74 ] 0x1
or eax 0xffffffff
[ ecx ] eax
push 0x4
call sub_418de5
push 0x2
push 0x180
mov [ ebp - 0x2c ] eax
call sub_418d9d
push 0x1
push 0x180
mov [ ebp - 0x20 ] eax
call sub_418d9d
push 0x1
push 0x180
mov [ ebp - 0x24 ] eax
call sub_418d9d
push 0x1
push 0x101
mov [ ebp - 0x1c ] eax
call sub_418d9d
mov ecx eax
add esp 0x24
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
test eax eax
je r-xdata
push edi
push 0x1004
push eax
lea eax [ ebp - 0x44 ]
push ebx
push eax
call sub_41e224
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_41497e
push [ ebp - 0x20 ]
call sub_41497e
push [ ebp - 0x24 ]
call sub_41497e
push [ ebp - 0x1c ]
call sub_41497e
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov [ eax ] ebx
mov eax ebx
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ edi ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x28 ]
mov edx 0xff
push ebx
push [ edi ]
movzx eax ax
inc ecx
push edx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
add eax 0x81
mov [ ebp - 0x34 ] ecx
push eax
push edx
push ecx
push 0x100
push [ esi + 0xa8 ]
push ebx
call sub_418d39
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx 0xff
push ebx
push [ edi ]
add eax 0x81
push ecx
push eax
push ecx
push [ ebp - 0x34 ]
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_418d39
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jle r-xdata
mov eax [ ebp - 0x20 ]
push ebx
push [ edi ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x28 ]
push 0x1
push ebx
call sub_4250a9
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edi [ ebp - 0x20 ]
xor ecx ecx
mov eax [ ebp - 0x1c ]
mov [ edi + 0xfe ] cx
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x7f ] bl
sub ecx 0xffffff80
mov [ eax + 0x7f ] bl
sub eax 0xffffff80
cmp [ ebp - 0x30 ] 0x1
mov [ ebp - 0x3c ] ecx
mov [ ecx ] bl
mov [ ebp - 0x38 ] eax
mov [ eax ] bl
jle r-xdata
mov edi [ ebp - 0x28 ]
lea ecx [ ebp - 0x11 ]
push 0xfe
lea eax [ edi + 0x200 ]
push eax
push edi
call sub_416730
mov ecx [ ebp - 0x24 ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_416730
mov ecx [ ebp - 0x1c ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_416730
mov ecx [ esi + 0x88 ]
add esp 0x24
test ecx ecx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
lea edi [ esi + 0x4 ]
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0x88 ] eax
lea eax [ edi + 0x100 ]
mov [ esi + 0x90 ] eax
lea eax [ edi + 0xfe ]
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x74 ] eax
jmp r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x28 ]
call sub_41497e
pop ecx
mov eax ebx
pop edi
jmp r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_41497e
mov eax [ esi + 0x94 ]
add eax 0xffffff80
push eax
call sub_41497e
mov eax [ esi + 0x98 ]
add eax 0xffffff80
push eax
call sub_41497e
push [ esi + 0x88 ]
call sub_41497e
add esp 0x10
movzx edx [ ecx - 0x1 ]
movzx eax al
cmp edx eax
jg r-xdata
mov [ edx + edi ] 0x20
inc edx
movzx eax [ ecx ]
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea eax [ edi + 0x100 ]
lea eax [ eax + edx * 2 ]
mov [ ebp - 0x34 ] eax
mov edi eax
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
inc edx
mov [ edi ] ax
lea edi [ edi + 0x2 ]
movzx eax [ ecx ]
cmp edx eax
jle r-xdata
mov edi [ ebp - 0x20 ]
sub_41776d
push ebp
mov ebp esp
push esi
call sub_41775a
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4177a1
pop ecx
mov esi eax
call sub_41778e
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4177a1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4177e2
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov eax [ ebp + 0xc ]
mov cl [ ebp + 0x14 ]
movzx esi al
mov eax [ ebp - 0xc ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_417852
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_41eee0
pop ecx
call sub_41778e
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_422b46
push 0x1e
call sub_422ba3
push 0xff
call sub_4160c0
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_41778e
mov [ eax ] ebx
push esi
call sub_41eee0
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_41778e
mov [ eax ] ebx
sub_4178e4
push 0x20
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi ebx
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
or ebx 0xffffffff
push 0x7fffffff
push edi
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call sub_425328
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call sub_41cf59
mov [ ebp - 0x24 ] eax
mov ecx [ eax + 0x6c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ eax + 0x68 ]
mov [ ebp - 0x2c ] ecx
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push esi
xor esi esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_4255ad
add esp 0x18
test eax eax
je r-xdata
push 0x2
push [ ebp - 0x1c ]
call sub_418d9d
pop ecx
pop ecx
mov esi eax
test esi esi
jne r-xdata
cmp eax 0x16
je r-xdata
call sub_41e075
retn
mov eax [ ebp - 0x1c ]
add eax 0x4
push eax
call sub_418de5
pop ecx
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
cmp eax 0x16
je r-xdata
or ebx 0xffffffff
push ebx
push edi
push [ ebp - 0x1c ]
push esi
xor edi edi
push edi
call sub_425328
add esp 0x14
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
cmp eax 0x22
jne r-xdata
lea eax [ esi + 0x4 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x30 ]
push ecx
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x1c ]
push eax
push 0x0
call sub_4255ad
add esp 0x18
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
cmp eax 0x22
jne r-xdata
push esi
mov edi [ ebp + 0x8 ]
push edi
call sub_41d6d8
mov [ ebp + 0xc ] eax
push esi
call sub_41497e
add esp 0xc
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
cmp eax 0x16
je r-xdata
mov esi [ ebp - 0x30 ]
push 0xc
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
add edi edi
mov ecx [ esi + edi * 8 + 0x18 ]
test ecx ecx
je r-xdata
cmp eax 0x16
je r-xdata
call sub_41f081
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
jmp r-xdata
cmp eax 0x22
jne r-xdata
mov eax [ ebp - 0x24 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax ebx
[ ecx ] eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp eax 0x22
jne r-xdata
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
mov [ esi + edi * 8 + 0x18 ] ecx
mov ebx [ ebp - 0x20 ]
mov [ esi + edi * 8 + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417abf
mov eax ebx
test [ rw-data ] 0x1
jne r-xdata
push [ esi + edi * 8 + 0x18 ]
call sub_41497e
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41497e
pop ecx
jmp r-xdata
mov eax [ esi + edi * 8 + 0x18 ]
test eax eax
je r-xdata
[ eax ] ebx
dec ebx
jne r-xdata
push [ esi + edi * 8 + 0x18 ]
call sub_41497e
pop ecx
sub_417ad0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_417b60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_417be8
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4160d6
sub_417b94
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_41497e
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_417be8
push 0x8
push r--data
call sub_41e030
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_422b46
push 0x1e
call sub_422ba3
push 0xff
call sub_4160c0
xor eax eax
inc eax
push 0x18
call sub_418de5
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_41778e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_41497e
pop ecx
push ebx
push 0xfa0
push esi
call sub_41942a
add esp 0xc
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_41e075
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417c88
sub_417c91
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
push 0x0
mov [ esi ] edi
add edi 0x18
push 0xfa0
push [ esi ]
call sub_41942a
add esp 0xc
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_417cdf
push 0x8
push r--data
call sub_41e030
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41e075
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_41701b
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_417d90
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_414814
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_41497e#2
pop ecx
sub_417db5
push 0x30
push r--data
call sub_41e030
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_4171fe
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_41cf59
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_41cf59
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_41cf59
mov [ eax + 0x88 ] esi
call sub_41cf59
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_416fbb
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417efc
mov eax edi
call sub_41e075
retn
sub_417e54
mov esp [ ebp - 0x18 ]
call sub_41cf59
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ edi + 0x8 ]
movsx eax [ edi + 0x8 ]
jmp r-xdata
push eax
push edx
push ebx
push edi
call sub_418898
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417efc
mov eax edi
call sub_41e075
retn
imul edi ecx 0x14
mov [ ebp + 0x18 ] edi
cmp eax [ edi + esi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov esi [ edx + 0x10 ]
mov ecx ebx
mov [ ebp - 0x24 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x24 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edi [ ebp + 0x18 ]
cmp eax [ edi + esi + 0x8 ]
mov edi [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + esi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_417efc
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_417228
pop ecx
call sub_41cf59
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_41cf59
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_417278
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_417cdf
pop ecx
pop ecx
jmp r-xdata
sub_417fbb
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4185fa
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_417177
call sub_4171a9
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_418898
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_417db5
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_418036
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_41cf59
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_418083
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_422ec0
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_41cf59
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_422ec0
call sub_422ef8
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_418420
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_41cf59
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_41cf59
mov esi [ eax + 0x88 ]
call sub_41cf59
push 0x1
push esi
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x8c ]
mov [ ebp + 0x8 ] eax
call sub_425740
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_422ec0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_4170f9
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_41cf59
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_417cdf
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_41cf59
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_41cf59
push [ ebp - 0x14 ]
push esi
mov [ eax + 0x94 ] ebx
call sub_41853c
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
test edi edi
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_422ec0
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_41853c
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_417cdf
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x18 ] r--data
push eax
lea ecx [ ebp - 0x3c ]
call sub_4147b1
push r--data
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] r--data
push eax
call sub_416e0b
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_41cf59
call sub_41cf59
call sub_41cf59
mov [ eax + 0x88 ] esi
call sub_41cf59
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
push esi
mov [ eax + 0x8c ] ecx
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_4146ec
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_418a52
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
add ecx 0x10
dec eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x20 ] eax
test eax eax
jg r-xdata
call sub_4171a9
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_418898
add esp 0x10
push [ edi + 0x1c ]
call sub_417f7b
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_417fbb
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
dec eax
mov ecx [ ebp - 0xc ]
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_418420
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_41cf59
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_41cf59
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_4170f9
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
call sub_422ec0
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_417022
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_417fbb
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_41853c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_422ec0
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_418a52
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_4185d5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4185fa
push 0x8
push r--data
call sub_41e030
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_4185d5
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41701b
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_418688
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e075
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_4185d5
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41701b
jmp r-xdata
sub_418688
push 0xc
push r--data
call sub_41e030
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov edi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add edi 0xc
add edi edx
push 0x1
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test cl 0x8
je r-xdata
test [ esi ] 0x10
je r-xdata
test [ esi ] 0x1
je r-xdata
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_422ec0
push 0x1
push edi
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
call eax
mov [ ebp + 0x10 ] eax
push 0x1
push eax
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
jmp r-xdata
push 0x1
push edi
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_425740
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_4138e0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ edi ] ecx
lea eax [ esi + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ esi + 0x18 ]
call sub_425740
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4185d5
pop ecx
pop ecx
push eax
push edi
call sub_4138e0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_41e075
retn
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_4185d5
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_41884a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_41cf59
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_41cf59
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_41cf59
and [ eax + 0x90 ] 0x0
jmp sub_422ef8
sub_418898
push 0x10
push r--data
call sub_41e030
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418957
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41cf59
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_41e075
retn
call sub_422ec0
call sub_422ec0
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_4244a0
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_418971
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41cf59
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_418083
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_418898
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x24 ]
movzx eax al
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418a52
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ esi ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_419320
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_418ae2
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41982a
push 0x2
lea edi [ eax + 0x1 ]
push edi
call sub_42574f
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_42578f
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_418b35
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x24 ] eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ebx
call sub_418d7f
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c0c7
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
push eax
call sub_417852
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_4257f0
mov ebx esp
test ebx ebx
je r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
mov eax [ ebp - 0x8 ]
push edi
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c0c7
add esp 0x18
test eax eax
je r-xdata
lea ecx [ edi + edi ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c0c7
add esp 0x18
jmp r-xdata
push esi
call sub_418d7f
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
push eax
call sub_417852
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4257f0
mov esi esp
test esi esi
je r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_418d39
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_418b35
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_418d7f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_41497e
pop ecx
sub_418d9d
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_419731
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425930
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_418de5
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call sub_419731
mov edi [ rw-data ]
add esi 0x3e8
pop ecx
cmp esi edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_417852
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_418e2c
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_419731
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42581c
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_418e76
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_419731
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4258c7
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_418ec4
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_41e075
retn
call sub_4259aa
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_41778e
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_425ac9
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418f80
mov eax edi
call sub_41778e
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_425d50
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_418f88
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
mov [ esi + 0xc ] eax
push edi
cmp ebx 0x1
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_425ea2
mov edi [ ebp + 0xc ]
add edi eax
xor ebx ebx
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_4158bb
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_421461
pop ecx
push eax
call sub_426232
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_419017
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4154c3
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_418f88
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419092
mov eax edi
cmp edi 0x1
je r-xdata
call sub_41e075
retn
cmp edi 0x2
jne r-xdata
sub_41909a
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_413fdd
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_41778e
xor ecx ecx
inc ecx
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_4263c8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41cd73
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
push 0x1
push [ eax + 0x4 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_418d39
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4191dd
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41909a
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_419210
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_419250
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4192d7
call sub_422f50
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_422f79
pop ecx
push 0x3
call sub_416194
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_41ef14
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_419320
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_419408
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41942a
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_419458
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
pop esi
setg al
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_419498
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_41978d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42667c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_426665
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_426607
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_426607
pop edx
retn
sub_419843
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
movzx eax ax
push esi
push edi
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
test eax eax
js r-xdata
sub eax 0x5a
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp eax 0x17
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp eax 0xb
jle r-xdata
call sub_4200c5
push [ ebp + 0x8 ]
xor esi esi
push 0xffffffff
mov [ ebp + 0xc ] esi
call sub_41fe16
mov ecx [ ebp + 0x10 ]
xor edx edx
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
cmp [ ecx + 0x20 ] esi
setne dl
push [ eax + edx * 4 ]
lea eax [ ebp + 0xc ]
push [ edi ]
push [ ebx ]
push eax
call sub_42524a
add esp 0x18
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x64
pop ecx
cdq
idiv ecx
push [ ebp + 0x20 ]
add eax 0x13
push [ ebp + 0x18 ]
imul eax eax 0x64
push [ ebp + 0x14 ]
push 0x4
add eax edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x4
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp eax 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
dec eax
je r-xdata
inc eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0x50
jne r-xdata
cmp eax 0x16
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
push eax
jmp r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jl r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
sub eax 0x9
je r-xdata
mov ecx [ ebp + 0x1c ]
push [ ecx + 0x150 ]
mov eax [ ebp + 0x1c ]
push [ eax + 0x14c ]
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
xor eax eax
inc eax
sub eax ecx
add [ edi ] eax
mov [ edi ] esi
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f081
int3
cmp eax 0x22
je r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
call sub_419d69
add esp 0x14
jmp r-xdata
jg r-xdata
cmp [ eax ] 0x3b
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
push 0xc
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub eax 0x18
je r-xdata
call sub_419e2e
add esp 0xc
push [ ebp + 0x8 ]
call sub_419e5c
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x20 ]
cdq
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push 0x64
pop ecx
idiv ecx
jmp r-xdata
xor eax eax
lea eax [ ecx * 2 - 0x2 ]
add [ ebx ] eax
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xb4 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
mov edx ecx
mov ecx [ ebp + 0x14 ]
push 0x25
pop edx
mov eax [ ecx ]
mov [ eax ] dx
mov eax [ ebp + 0x18 ]
add [ ecx ] 0x2
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push edx
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xec ]
jmp r-xdata
mov edi [ ebp + 0x18 ]
xor esi esi
mov ebx [ ebp + 0x14 ]
push edi
push ebx
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_419e5c
add esp 0x18
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call sub_419e5c
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xc ] 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
cmp [ edi ] esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ eax + 0xc ] 0x1f
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
test eax eax
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ ebx ] 0x2
dec [ edi ]
push edi
push ebx
jmp r-xdata
mov eax [ edi ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ edi ] 0x2
dec [ esi ]
push esi
push edi
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0xc ]
cmp eax 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ edx + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xd0 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x10 ]
push 0x2
push [ ebp + 0x20 ]
inc eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0x11c ]
jmp r-xdata
cmp eax 0x17
sub_419d69
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x18 ] esi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax [ ecx ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_419dd8
add esp 0xc
jmp r-xdata
mov [ ecx ] esi
dec eax
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
lea eax [ esi + esi ]
add [ edi ] eax
sub [ ecx ] esi
pop edi
pop ebx
jmp r-xdata
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
cdq
mov [ ebp + 0x18 ] 0xa
idiv [ ebp + 0x18 ]
mov [ ebp + 0x18 ] eax
add edx 0x30
mov eax [ edi ]
inc esi
mov [ ecx + eax ] dx
lea ecx [ ecx - 0x2 ]
mov eax [ ebp + 0x18 ]
dec ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_419dd8
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ecx ]
cmp [ edi ] 0x1
jbe r-xdata
mov edx [ ecx ]
mov [ ecx ] esi
sub esi 0x2
push ebx
mov ebx [ ebp + 0x8 ]
mov ax [ edx ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edx ] cx
add edx 0x2
cmp edx esi
jb r-xdata
pop edi
pop esi
pop ebp
retn
pop ebx
cmp [ edi ] 0x1
ja r-xdata
mov eax ebx
push 0xa
cdq
pop ebx
idiv ebx
mov ebx eax
lea eax [ edx + 0x30 ]
mov [ esi ] ax
add esi 0x2
dec [ edi ]
test ebx ebx
jle r-xdata
sub_419e2e
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
pop edi
pop esi
mov eax [ esi ]
add edx 0x2
mov [ eax ] di
add [ esi ] 0x2
dec [ ecx ]
jne r-xdata
movzx edi [ edx ]
test di di
je r-xdata
sub_419e5c
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax ebx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] ecx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x1c ] esi
push edi
sub eax 0x0
je r-xdata
mov edi [ ecx + 0x154 ]
dec eax
je r-xdata
movzx edx [ edi ]
test dx dx
jne r-xdata
sub ebx 0x2
mov eax 0x76c
neg ebx
sbb ebx ebx
add ax [ edx + 0x14 ]
mov [ ebp - 0x14 ] ax
not ebx
mov ax [ edx + 0x10 ]
inc ax
mov [ ebp - 0x12 ] ax
mov ax [ edx + 0xc ]
mov [ ebp - 0xe ] ax
mov ax [ edx + 0x8 ]
mov [ ebp - 0xc ] ax
mov ax [ edx + 0x4 ]
mov [ ebp - 0xa ] ax
mov ax [ edx ]
xor edx edx
push edx
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x14 ]
push edx
push edi
push eax
push edx
push [ ecx + 0x160 ]
and ebx 0x1
je r-xdata
mov edi [ ecx + 0x158 ]
jmp r-xdata
mov edi [ ecx + 0x15c ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
call sub_41bfc4
mov edx eax
mov [ ebp - 0x28 ] eax
call sub_41c03c
mov edx eax
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
je r-xdata
xor eax eax
inc eax
xor esi esi
mov [ ebp - 0x18 ] edi
xor eax eax
movzx ecx dx
mov ebx edi
lea ecx [ edx + edx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
add esp 0x18
test edx edx
je r-xdata
add ebx 0x2
inc eax
cmp [ ebx ] cx
je r-xdata
movzx ecx dx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x24 ]
cmp ecx 0x64
jg r-xdata
xor esi esi
mov [ ebp - 0x18 ] esi
lea edx [ edx * 2 + 0x8 ]
cmp edx 0x400
ja r-xdata
sub ecx 0x68
je r-xdata
je r-xdata
mov esi [ ebp - 0x1c ]
jmp r-xdata
push edx
push esi
push edi
lea eax [ ebp - 0x14 ]
test ebx ebx
mov ebx [ ebp - 0x24 ]
push eax
push 0x0
push [ ebx + 0x160 ]
je r-xdata
push edx
call sub_417852
mov esi eax
mov [ ebp - 0x18 ] eax
pop ecx
test esi esi
je r-xdata
mov eax edx
call sub_4257f0
mov esi esp
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
dec eax
je r-xdata
sub ecx 0x5
je r-xdata
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
call sub_41bfc4
call sub_41c03c
jmp r-xdata
mov edx [ ebp - 0x28 ]
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
sub ecx 0x6
je r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
lea edi [ edi + eax * 2 ]
test al 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push esi
call sub_418d7f
pop ecx
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov edx eax
add esp 0x18
dec edx
mov edi esi
test edx edx
jle r-xdata
test esi esi
je r-xdata
add esi 0x8
mov [ ebp - 0x18 ] esi
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x18 ]
push 0x49
mov ecx [ ebp - 0x20 ]
add edi 0x2
mov esi [ ebp - 0x1c ]
mov eax [ ecx ]
mov [ eax ] dx
add [ ecx ] 0x2
dec [ esi ]
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
dec ecx
je r-xdata
pop eax
push esi
mov esi [ ebp - 0x1c ]
push ebx
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push eax
push [ ebp - 0x30 ]
call sub_419843
add esp 0x1c
test eax eax
je r-xdata
push 0x64
jmp r-xdata
dec eax
je r-xdata
movzx ecx [ edi ]
test cx cx
je r-xdata
push r--data
push edi
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ esi ]
mov ax [ edi ]
add edi 0x2
mov [ ecx ] ax
add [ esi ] 0x2
dec [ ebx ]
dec edx
test edx edx
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x4d
jmp r-xdata
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x8 ] 0xb
jg r-xdata
sub ecx 0x5
jne r-xdata
push 0x61
jmp r-xdata
dec eax
jne r-xdata
mov esi [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
push r--data
push edi
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ edi + 0xa ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
push 0x53
jmp r-xdata
jmp r-xdata
mov edx [ ebx + 0x150 ]
mov edx [ ebx + 0x14c ]
jmp r-xdata
dec eax
dec eax
je r-xdata
push 0x41
jmp r-xdata
push 0x27
pop eax
add edi 0x2
cmp cx ax
je r-xdata
push 0x70
jmp r-xdata
lea eax [ edi + 0x6 ]
mov [ ebp - 0x18 ] eax
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
cmp ecx 0x61
jne r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov esi [ ebp - 0x1c ]
cmp eax 0x1
jne r-xdata
push 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ edx ]
mov [ eax ] cx
add [ edx ] 0x2
dec [ esi ]
movzx ecx [ edi ]
test cx cx
jne r-xdata
push 0x48
jmp r-xdata
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edi [ ebp - 0x20 ]
mov ax [ edx ]
mov ecx [ edi ]
mov [ ecx ] ax
add [ edi ] 0x2
dec [ esi ]
jmp r-xdata
push 0x59
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
push 0x6d
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx ]
add edx 0x2
mov [ eax ] cx
add [ ebx ] 0x2
dec [ esi ]
movzx ecx [ edx ]
test cx cx
jne r-xdata
push 0x62
jmp r-xdata
dec eax
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
jmp r-xdata
push 0x42
jmp r-xdata
sub_41a25c
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
xor esi esi
mov [ ebp - 0xc ] eax
call sub_413fdd
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
test edi edi
je r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
jne r-xdata
mov eax ebx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x9c ]
mov [ ebp + 0x18 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
ja r-xdata
test eax eax
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp bx 0x25
mov ebx [ ebp + 0xc ]
je r-xdata
call sub_41778e
mov [ eax ] 0x22
jmp r-xdata
xor eax eax
mov esi ebx
mov [ ecx ] ax
sub esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
add edi 0x2
mov [ ecx ] ax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add ecx 0x2
dec eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add edi 0x2
mov eax esi
cmp [ edi ] 0x23
jne r-xdata
mov edx [ ebp + 0x18 ]
test eax eax
jne r-xdata
push eax
push edx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_419843
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
inc eax
add edi 0x2
movzx ebx [ edi ]
mov [ ebp - 0x8 ] ebx
movzx ebx bx
test ebx ebx
mov ebx [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
add edi 0x2
mov eax [ ebp - 0x4 ]
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov [ ecx ] dx
test eax eax
jne r-xdata
sub_41a39f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41ba97 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41bb17
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x1c ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] ecx
push edi
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push eax
call sub_41bd9b
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
mov esi eax
mov edi [ ebp + 0x20 ]
test edi edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edi 0xffffffff
jl r-xdata
push edi
push ecx
call sub_41bd9b
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x28 ] ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
cmp esi edi
jne r-xdata
test edi edi
jne r-xdata
cmp edi 0x1
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
jle r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
push ecx
push ebx
push esi
push [ ebp - 0x1c ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
test edi edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push ebx
call sub_418d7f
mov eax [ ebp - 0x28 ]
pop ecx
xor eax eax
push eax
push eax
push edi
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
jle r-xdata
push eax
call sub_417852
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_4257f0
mov ebx esp
test ebx ebx
je r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
mov esi [ ebp - 0x1c ]
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
mov esi [ ebp - 0x24 ]
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
push ecx
push esi
push edi
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
add ebx 0x8
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
push esi
call sub_418d7f
pop ecx
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_41be81
add esp 0x18
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
push eax
call sub_417852
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4257f0
mov esi esp
test esi esi
je r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
sub_41bd9b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx eax
mov edx [ ebp + 0x8 ]
test eax eax
je r-xdata
dec ecx
dec ecx
cmp [ edx ] 0x0
je r-xdata
sub eax ecx
dec eax
pop ebp
retn
inc edx
test ecx ecx
jne r-xdata
sub_41bdbb
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41bb17
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41bdfe
push ebp
mov ebp esp
push esi
xor ecx ecx
mov esi 0xe3
pop esi
pop ebp
retn
test edx edx
jns r-xdata
lea ecx [ eax + 0x1 ]
lea esi [ eax - 0x1 ]
jmp r-xdata
lea eax [ esi + ecx ]
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp ecx esi
jle r-xdata
sub_41be33
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_41c113
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41be81
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bf49
pop ecx
push eax
call [ CompareStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41becd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
je r-xdata
xor eax eax
cmp eax 0x400
je r-xdata
cmp eax 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
push eax
call sub_41bdfe
pop ecx
test eax eax
js r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_42694a
mov edi eax
pop ecx
pop ecx
test esi esi
jle r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_42578f
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
sub_41bf49
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_41be33
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_41bf87
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push sub_41bf73
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
and [ rw-data ] 0x0
pop ebp
retn
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41bfc4
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bf49
pop ecx
push eax
call [ GetDateFormatW@IAT ]
pop ebp
retn
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41c00d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_41bf49
pop ecx
push eax
call [ GetLocaleInfoW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41c03c
push ebp
mov ebp esp
push [ ebp + 0x1c ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_41bf49
pop ecx
push eax
call [ GetTimeFormatW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41c071
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_41becd
add esp 0xc
pop ebp
retn
call eax
pop ebp
retn
sub_41c09c
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41bf49
pop ecx
push eax
call [ IsValidLocale@IAT ]
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41c0c7
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bf49
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41c113
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_41c181
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c0c7
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_42694a
pop ecx
pop ecx
sub_41c1b0
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ rw-data ] ebx
xor eax eax
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x1c ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x14 ]
xor eax 0x6c65746e
mov [ rw-data ] esi
or ecx eax
mov eax [ ebp - 0x18 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
sbb cl cl
pop eax
inc cl
push 0x0
pop ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x1c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
xor eax eax
push 0x7
xor ecx ecx
lea esi [ ebp - 0x1c ]
pop eax
cpuid
mov [ esi ] eax
mov eax esi
mov esi [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x18 ]
test eax 0x200
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
pop edi
pop esi
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
test ecx 0x8000000
je r-xdata
test ecx 0x100000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jl r-xdata
cmp eax 0x20670
je r-xdata
test ecx 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
test al 0x20
je r-xdata
cmp eax 0x30660
je r-xdata
or esi 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] esi
cmp eax 0x30670
jne r-xdata
sub_41c329
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
inc ecx
push edi
mov eax ecx
[ edx ] eax
mov esi [ edx + 0x78 ]
test esi esi
je r-xdata
mov esi [ edx + 0x80 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x7c ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x88 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
push 0x6
lea esi [ edx + 0x1c ]
pop ebx
mov eax ecx
[ esi ] eax
cmp [ esi - 0xc ] 0x0
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
add esi 0x10
dec ebx
jne r-xdata
mov edi [ esi - 0x4 ]
test edi edi
je r-xdata
mov eax ecx
[ edi ] eax
cmp [ esi - 0x8 ] rw-data
je r-xdata
mov eax [ edx + 0x9c ]
add eax 0xb0
[ eax ] ecx
inc ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ecx
[ edi ] eax
sub_41c3be
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp + 0x8 ] eax
lea edi [ esi + 0x1c ]
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_41497e
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_41497e
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_41497e
push [ esi + 0x88 ]
call sub_41497e
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_427073
push [ esi + 0x9c ]
call sub_41497e
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_41497e
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_41497e
push [ ebx ]
call sub_41497e
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_41497e
push [ esi + 0x84 ]
call sub_41497e
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41497e
push [ esi + 0x84 ]
call sub_426969
pop ecx
pop ecx
push eax
call sub_41497e
pop ecx
push eax
call sub_41497e
push [ esi + 0x84 ]
call sub_426e06
pop ecx
pop ecx
sub_41c518
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax edx
pop ebp
retn
push ebx
push esi
or esi 0xffffffff
push edi
mov eax esi
[ edx ] eax
mov ecx [ edx + 0x78 ]
test ecx ecx
je r-xdata
mov ecx [ edx + 0x80 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x7c ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x88 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
push 0x6
lea ecx [ edx + 0x1c ]
pop ebx
mov eax esi
[ ecx ] eax
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edi [ ecx ]
test edi edi
je r-xdata
add ecx 0x10
dec ebx
jne r-xdata
mov edi [ ecx - 0x4 ]
test edi edi
je r-xdata
mov eax esi
[ edi ] eax
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov ecx [ edx + 0x9c ]
add ecx 0xb0
[ ecx ] esi
dec esi
pop edi
pop esi
pop ebx
mov eax esi
[ edi ] eax
sub_41c5b8
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
call sub_41cf59
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_41c638
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c62f
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41cf59
mov esi [ eax + 0x6c ]
mov eax esi
call sub_41e075
retn
push 0x20
call sub_4160d6
sub_41c638
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_41c329
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_41c518
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41c3be
pop ecx
sub_41c6a1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41c6db
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_413fdd
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41c749
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_417ad0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c7a8
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x518 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
lea ecx [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x520 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4250a9
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_418d39
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_418d39
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_41c93a
push 0xc
push r--data
call sub_41e030
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_41cf59
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c9d7
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
xor eax eax
inc eax
[ esi ] eax
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_41e075
retn
push 0x20
call sub_4160d6
cmp esi rw-data
je r-xdata
push esi
call sub_41497e
pop ecx
sub_41c9e0
push 0x10
push r--data
call sub_41e030
or edi 0xffffffff
call sub_41cf59
mov ebx eax
mov [ ebp - 0x20 ] ebx
call sub_41c93a
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_41c6db
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_418de5
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_41e075
retn
mov ecx 0x88
mov eax [ ebp - 0x20 ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_41cb88
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x68 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_41497e
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_41497e
pop ecx
mov eax [ ebp - 0x20 ]
push 0xd
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x5
jge r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41cb52
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_41497e
pop ecx
sub_41cb88
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_41c6db
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_41c749
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_417ad0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_41c6a1
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_41c7a8
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_417ad0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_41c749
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_41c6a1
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_41cd73
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_413fdd
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_4263c8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4250a9
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41ce24
push 0x8
push r--data
call sub_41e030
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41e075
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_41497e
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_41497e
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_41497e
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_41497e
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_41497e
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_41497e
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_41497e
pop ecx
push 0xd
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push [ esi + 0x5c ]
call sub_41497e
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41cf44
push 0xc
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41cf50
push esi
call sub_41497e
pop ecx
push edi
call sub_41c518
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp ecx rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push ecx
call sub_41497e
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41c3be
pop ecx
sub_41cf71
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4193e9
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_418d9d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_419408
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_41497e
pop ecx
xor esi esi
push 0x0
push esi
call sub_41cfe0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41cfe0
push 0x8
push r--data
call sub_41e030
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x68 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d081
push 0xc
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_41c329
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d08a
call sub_41e075
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_41d093
call sub_4161a8
call sub_417c91
test eax eax
jne r-xdata
push sub_41ce24
call sub_4193ac
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_41d109
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_418d9d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_41d109
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_419408
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_41cfe0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_41d126
push 0x8
push r--data
call sub_41e030
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_41e075
retn
push 0xc
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_41c638
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d16f
sub_41d178
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_42694a
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_418de5
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov eax edi
jmp r-xdata
sub_41d1dc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42578f
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f081
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d699
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d699
add esp 0x14
sub_41d24a
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push 0x1ca
push ebx
push edi
call sub_417ad0
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
movzx ebx [ ecx ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_41f081
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
inc [ ebp + 0xc ]
jmp r-xdata
push r--data
push esi
call sub_427d0c
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41d376
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_41c329
pop ecx
pop edi
sub_41d3a2
push ebp
mov ebp esp
sub esp 0x1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x1ec ] eax
mov [ ebp - 0x1f0 ] edi
call sub_41cf59
lea ecx [ eax + 0xb4 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0xb8 ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x1be ]
mov [ ebp - 0x1d4 ] ecx
xor ecx ecx
mov [ ebp - 0x1dc ] ecx
test esi esi
jne r-xdata
add eax 0x2ec
push 0x55
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1e8 ] eax
push ebx
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_41982a
mov [ ebp - 0x1e4 ] eax
pop ecx
cmp eax 0x83
jae r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
mov edi [ rw-data ]
lea eax [ ebp - 0x1d0 ]
xor edi [ rw-data ]
neg edi
push esi
sbb edi edi
not edi
push eax
and edi 0x1
call sub_41d24a
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x1d4 ]
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x1ec ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_42578f
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
test edi edi
mov edi [ ebp - 0x1d8 ]
push eax
push edi
push eax
je r-xdata
test edi edi
je r-xdata
push esi
push [ ebp - 0x1e0 ]
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
test edi edi
je r-xdata
push ebx
call sub_41982a
inc eax
push eax
push ebx
push 0x55
push [ ebp - 0x1e8 ]
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x1dc ]
push eax
push 0x20001004
push esi
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
call sub_428414
call sub_428bfe
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1ec ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_42578f
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0x1d8 ]
push edi
call sub_416730
add esp 0xc
mov eax esi
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1dc ] eax
mov eax [ ebp - 0x1dc ]
test eax eax
jne r-xdata
push esi
call sub_41c09c
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
mov edi 0x83
push eax
push edi
push [ ebp - 0x1d4 ]
call sub_41d1dc
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
push edi
push esi
push [ ebp + 0x18 ]
push ebx
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ edi ] eax
mov edi [ ebp - 0x1e4 ]
inc edi
push edi
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_41982a
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
call sub_427d8d
add esp 0x14
test eax eax
je r-xdata
push edi
push esi
push 0x55
push [ ebp - 0x1e8 ]
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp - 0x1e4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
mov edi 0x83
inc eax
push eax
push esi
push edi
push [ ebp - 0x1e0 ]
call sub_427d8d
add esp 0x10
test eax eax
je r-xdata
mov edi [ ebp - 0x1f0 ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
call sub_41f081
int3
sub_41d699
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427c62
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_41d6d8
push 0x14
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_41cf59
mov esi eax
mov [ ebp - 0x20 ] esi
call sub_41c5b8
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] ebx
push 0x1
push 0xb8
call sub_418d9d
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d850
mov eax ebx
push 0xc
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x6c ]
push edi
call sub_41d376
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_41d80e
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_41d9c2
add esp 0xc
mov ebx eax
mov [ ebp - 0x1c ] ebx
test ebx ebx
je r-xdata
call sub_41e075
retn
push edi
call sub_41c518
push edi
call sub_41c3be
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0x6c ]
push edi
push eax
call sub_41c638
push edi
call sub_41c518
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41d81d
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
push [ esi + 0x6c ]
push rw-data
call sub_41c638
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + 0x84 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x90 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x74 ]
mov [ rw-data ] eax
sub_41d855
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
xor edi edi
inc edi
push 0x6a6
mov [ ebp - 0x8 ] edi
call sub_418de5
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ ebx + 0x4 ]
mov [ esi ] ax
mov [ ebx ] edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x24 ]
push r--data
push [ r--data ]
push 0x3
push 0x351
push esi
call sub_41d699
mov eax r--data
add esp 0x18
mov [ ebp - 0x4 ] eax
lea eax [ edi + 0x24 ]
mov [ ebp - 0xc ] eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_41f081
int3
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x10 ]
push [ esi ]
push [ eax ]
call sub_427cce
neg eax
mov ecx esi
lea esi [ ebx + 0x4 ]
mov [ ebp - 0xc ] ecx
sbb eax eax
not eax
and [ ebp - 0x8 ] eax
push [ ecx ]
mov eax [ ebp - 0x4 ]
add eax 0xc
push r--data
mov [ ebp - 0x4 ] eax
push [ eax ]
push 0x3
push 0x351
push esi
call sub_41d699
mov eax [ ebp - 0x4 ]
add esp 0x20
cmp eax r--data
jl r-xdata
push r--data
push 0x351
push esi
call sub_427c62
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebx
call sub_41497e
pop ecx
mov ecx [ edi + 0x1c ]
or esi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ edi + 0x1c ]
or esi 0xffffffff
test ecx ecx
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax esi
[ ecx ] eax
jne r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax esi
[ ecx ] eax
jne r-xdata
mov eax [ edi + 0x34 ]
xor ecx ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ecx
mov [ edi + 0x14 ] ecx
jmp r-xdata
[ eax ] esi
dec esi
jne r-xdata
push [ edi + 0x1c ]
call sub_41497e
pop ecx
xor ecx ecx
mov [ edi + 0x1c ] ebx
lea eax [ ebx + 0x4 ]
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] eax
[ eax ] esi
dec esi
jne r-xdata
push [ edi + 0x1c ]
call sub_41497e
pop ecx
pop esi
push [ edi + 0x18 ]
call sub_41497e
pop ecx
push [ edi + 0x18 ]
call sub_41497e
pop ecx
sub_41d9c2
push ebp
mov ebp esp
sub esp 0x1cc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1cc ] edi
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x1c0 ] 0x1
mov ebx eax
mov [ ebp - 0x1c4 ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_41d855
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax eax
mov eax [ edi + eax * 8 + 0x14 ]
jmp r-xdata
push esi
push eax
push edi
call sub_41dc4b
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_41d3a2
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x14 ]
xor esi esi
mov [ ebp - 0x1bc ] eax
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
push [ eax ]
lea eax [ ebp - 0x10c ]
push eax
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_427e4b
mov [ ebp - 0x1c8 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x1bc ]
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_41dc4b
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
sub ecx esi
sar ecx 0x1
mov [ ebp - 0x1bc ] ecx
je r-xdata
test ebx ebx
je r-xdata
inc ebx
xor ecx ecx
mov [ ebp - 0x1c0 ] ecx
jmp r-xdata
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x1bc ] eax
cmp esi 0x5
jle r-xdata
mov edi [ ebp - 0x1bc ]
mov ebx r--data
mov [ ebp - 0x1c0 ] 0x1
inc [ ebp - 0x1c0 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
push [ ebx ]
call sub_41982a
pop ecx
cmp edi eax
je r-xdata
push edi
push esi
push [ ebx ]
call sub_427d57
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x1c8 ]
add esi 0x2
push r--data
push esi
call sub_427d0c
mov edi [ ebp - 0x1cc ]
mov ebx [ ebp - 0x1c4 ]
mov [ ebp - 0x1bc ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x1c0 ] 0x5
jg r-xdata
push 0x3b
pop ecx
cmp [ esi ] cx
jne r-xdata
lea esi [ esi + eax * 2 ]
xor eax eax
cmp [ esi ] ax
je r-xdata
push eax
push esi
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_427d8d
add esp 0x10
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov eax [ ebp - 0x1bc ]
add eax eax
cmp eax 0x106
jae r-xdata
jmp r-xdata
call sub_414602
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c0 ]
push edi
call sub_41dc4b
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
inc ebx
mov [ ebp - 0x1c4 ] ebx
sub_41dc4b
push ebp
mov ebp esp
sub esp 0x2e8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2bc ] ebx
call sub_41cf59
add eax 0x2c4
mov [ ebp - 0x2c4 ] eax
lea eax [ ebp - 0x2d4 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_41d3a2
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x2d8 ] ebx
push [ ebx + edi + 0x14 ]
push eax
call sub_427cce
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x10c ]
push eax
call sub_41982a
lea esi [ eax + 0x1 ]
lea ecx [ esi * 2 + 0x4 ]
push ecx
call sub_418de5
mov [ ebp - 0x2e0 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + edi + 0x14 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov eax [ ebx + edi + 0x14 ]
mov [ ebp - 0x2dc ] eax
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x2cc ] ecx
mov eax [ edi + eax * 4 + 0xa0 ]
mov [ ebp - 0x2e8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x2e4 ] eax
lea eax [ ebp - 0x10c ]
push eax
push esi
push ecx
call sub_42578f
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_41f081
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2cc ]
mov [ ebx + edi + 0x14 ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_41d178
mov edx [ ebp - 0x2bc ]
pop ecx
mov [ edi + edx * 4 + 0xa0 ] eax
cmp [ ebp - 0x10a ] si
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x2c4 ]
mov [ ebp - 0x2c8 ] eax
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x2d0 ] ecx
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x2cc ] ecx
mov ecx esi
mov [ ebp - 0x2c0 ] ecx
mov edx [ ebp - 0x2bc ]
mov [ edi + edx * 4 + 0xa0 ] esi
jmp r-xdata
cmp edx 0x5
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x2c8 ]
mov edx [ ebp - 0x2c8 ]
mov ebx [ ebp - 0x2d0 ]
add [ ebp - 0x2c8 ] 0x8
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x2cc ]
mov [ ebp - 0x2cc ] ecx
mov ecx [ ebp - 0x2c0 ]
inc ecx
mov [ edx + 0x4 ] ebx
mov ebx [ ebp - 0x2d8 ]
mov edx [ ebp - 0x2bc ]
mov [ ebp - 0x2d0 ] eax
mov [ ebp - 0x2c0 ] ecx
cmp ecx 0x5
jl r-xdata
cmp edx 0x2
jne r-xdata
imul eax edx 0xc
push edi
call [ eax + r--data ]
test eax eax
mov eax [ ebp - 0x2dc ]
pop ecx
je r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x2c0 ]
mov ecx [ ebp - 0x2c4 ]
mov ecx [ ebp - 0x2c4 ]
mov eax [ ebp - 0x2c0 ]
mov ebx [ ebp - 0x2d0 ]
mov eax [ ecx + eax * 8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x2c0 ]
mov eax [ ecx + eax * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ ecx + eax * 8 ] ebx
mov ebx [ ebp - 0x2cc ]
mov [ ecx + eax * 8 + 0x4 ] ebx
mov ebx [ ebp - 0x2d8 ]
jmp r-xdata
mov edx [ ebp - 0x2c8 ]
mov eax [ edi + 0x4 ]
cmp eax [ edx ]
mov edx [ ebp - 0x2bc ]
je r-xdata
cmp eax rw-data
je r-xdata
mov [ ebx + edi + 0x14 ] eax
mov ebx [ ebp - 0x2bc ]
push [ edi + ebx * 4 + 0xa0 ]
call sub_41497e
mov eax [ ebp - 0x2e8 ]
mov [ edi + ebx * 4 + 0xa0 ] eax
mov eax [ ebp - 0x2e0 ]
push eax
call sub_41497e
mov eax [ ebp - 0x2e4 ]
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edi + 0x70 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x4 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push esi
call sub_4250a9
add esp 0x1c
test eax eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp - 0x2e0 ]
mov [ eax ] 0x1
mov [ ebx + edi + 0x1c ] eax
jmp r-xdata
mov eax [ ebx + edi + 0x1c ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x2c4 ]
mov [ ecx + 0x4 ] esi
mov eax esi
push [ ebx + edi + 0x1c ]
call sub_41497e
push [ ebx + edi + 0x18 ]
call sub_41497e
mov eax [ ebp - 0x2bc ]
push [ edi + eax * 4 + 0xa0 ]
call sub_41497e
mov eax [ ebp - 0x2bc ]
add esp 0xc
mov [ ebx + edi + 0x14 ] esi
mov [ edi + eax * 4 + 0xa0 ] esi
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_41a39f
mov ecx [ ebp - 0x2c4 ]
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x2bc ]
mov [ ecx ] eax
sub_41dff5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
sub_41e030
push sub_41e090
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41e090
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov edi [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor edi [ rw-data ]
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4138c4
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4138c4
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_425e8b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
lea eax [ edi + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ edx + esi ]
call sub_4138c4
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4138c4
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_425e42
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov [ ebp - 0x8 ] ebx
mov eax ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_425e72
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_425e8b
mov eax [ ebp + 0xc ]
push r--data
call sub_422db0
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4138c4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_425e59
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4138c4
sub_41e224
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x8c ] ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea ebx [ ebp - 0x84 ]
xor esi esi
mov eax ebx
mov [ ebp - 0x90 ] esi
push eax
push [ ebp + 0x14 ]
push ecx
push edx
call sub_428fa2
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor esi esi
push esi
push esi
push [ ebp + 0x14 ]
mov [ edi ] esi
push ecx
call sub_41c00d
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
push 0x1
push eax
call sub_418d9d
mov edx eax
mov [ edi ] edx
pop ecx
pop ecx
test edx edx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] eax
lea eax [ ebp - 0x88 ]
push 0x2
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push ecx
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
push [ edi ]
call sub_41497e
pop ecx
mov [ edi ] esi
jmp r-xdata
push 0x2
push ebx
call sub_418d9d
mov [ edi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x88 ]
lea eax [ ecx - 0x1 ]
push eax
push ebx
push ecx
push edx
call sub_428e1a
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x90 ] esi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_428fa2
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
call sub_41c00d
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f081
int3
cmp [ ebp - 0x90 ] esi
je r-xdata
push ebx
call sub_41497e
pop ecx
push 0x1
push eax
call sub_418d9d
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_41497e
pop ecx
push [ ebp - 0x88 ]
mov [ ebp - 0x90 ] 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_428fa2
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
sub_41e412
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_41e4e4
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_41e4e4
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_41e4e4
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
movzx eax ax
lea ecx [ ecx + 0x3fe ]
and eax 0x800f
shl ecx 0x4
fstp [ ebp - 0x8 ]
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41e513
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_41e56e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_41e5a0
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push esi
push eax
push [ ebx + 0x8 ]
call sub_41e744
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41e56e
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41e9a3
mov esi [ ebx + 0x20 ]
add esp 0x1c
push eax
call sub_41ec88
mov [ esp ] 0xffff
push esi
call sub_41eddc
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_41ecb5
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41e668
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push esi
push eax
push [ ebx + 0x8 ]
call sub_41e744
fld [ ebx + 0x18 ]
add esp 0xc
test eax eax
jne r-xdata
fstp st0
mov eax [ ebp - 0x40 ]
and eax 0xffffffe3
or eax 0x3
mov [ ebp - 0x40 ] eax
lea eax [ ebx + 0x20 ]
push 0x0
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
fstp [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41e9a3
mov esi [ ebx + 0x28 ]
add esp 0x1c
jmp r-xdata
push eax
call sub_41ec88
mov [ esp ] 0xffff
push esi
call sub_41eddc
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x8 ]
call sub_41e56e
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
fld [ ebx + 0x20 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_41ecb5
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41e744
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_41ee07
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_41ee07
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41ee07
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41ee07
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41e412
mov eax [ ebp + 0x8 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp + 0x8 ] eax
fst [ ebp - 0xc ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_41ee07
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_41e922
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fld st0
fld [ ebp + 0x14 ]
fadd st1
fxch st1
fst [ ebp + 0xc ]
jne r-xdata
fstp st0
fstp st1
fstp st0
call sub_41778e
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_41eddc
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x1c ]
sub esp 0x18
fstp [ esp + 0x10 ]
fstp [ esp + 0x8 ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_41ecb5
add esp 0x24
pop ebp
retn
sub_41e982
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e9a3
add esp 0x1c
pop ebp
retn
sub_41e9a3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_41ee5f
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41edcb
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41ec88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_41778e
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_41778e
mov [ eax ] 0x22
pop ebp
retn
sub_41ecb5
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + rw-data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_41eddc
push [ ebp + 0x8 ]
call sub_41ec88
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41eddc
lea eax [ ebp - 0x20 ]
push eax
call sub_4091c0
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + rw-data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_41ec88
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_41ed55
push 0x8
push r--data
call sub_41e030
cmp [ rw-data ] 0x1
jl r-xdata
call sub_41e075
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41eddc
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and eax [ ebp + 0xc ]
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41ee07
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_41ee6f
push 0xc
push r--data
call sub_41e030
push 0xe
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41eed7
call sub_41e075
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_41497e
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_41497e
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_41eee0
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41ef14
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
lea eax [ ebp - 0x31c ]
push 0x4c
push 0x0
push eax
call sub_417ad0
lea eax [ ebp - 0x320 ]
add esp 0xc
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_419754
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41e40a
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_4138c4
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_41e40a
pop ecx
sub_41f046
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f081
int3
pop ebp
jmp eax
sub_41f081
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41ef14
push esi
call sub_41973f
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_41f0ac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_421461
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_41778e
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_41778e
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4154bd
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_421eec
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
dec eax
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_428fdc
pop ecx
test eax eax
jne r-xdata
call sub_4154bd
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax al
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_421eec
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4217fe
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_421c94
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_41f1fb
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x238 ] eax
call sub_413fdd
call sub_41778e
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_421461
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x224 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_41fd5b ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
sar eax 0x4
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x228 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x228 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_41fd7b
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_41fd7b
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x224 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x24c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x25c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x238 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_41497e
xor eax eax
pop ecx
mov [ ebp - 0x250 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_423dee
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_41fdc3
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x25c ]
movsx eax dl
push [ ebp - 0x228 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x278 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_4164e7
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x238 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x238 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_429154
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_423dee
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_41fdc3
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_418de5
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x250 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov [ ebp - 0x238 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_4263c8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_416d80
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_429170
add ecx 0x30
mov [ ebp - 0x27c ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_41fdc3
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x258 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_423dee
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x27c ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x27c ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_429154
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_41fd7b
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push edx
movsx eax al
push eax
call sub_41f0ac
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_41fdc3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_41fd7b
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_41fe1c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push 0x16
pop eax
pop ebp
retn
sub_41fe46
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push 0x16
pop eax
pop ebp
retn
sub_41fe70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push 0x16
pop eax
pop ebp
retn
sub_41fe9a
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
push 0x24
push 0xff
push eax
call sub_417ad0
mov eax [ ebp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
push ebx
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jg r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x7
pop ecx
cmp eax ecx
jl r-xdata
jl r-xdata
push edi
push 0x0
push 0x1e13380
push eax
push ebx
call sub_420860
add eax 0x46
mov ecx 0x190
mov [ ebp - 0x8 ] eax
push 0x64
pop edi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x10 ] ecx
add eax 0x12b
mov [ ebp - 0x18 ] esi
cdq
idiv ecx
push 0xffffffff
mov ecx eax
mov [ ebp - 0xc ] edi
mov eax esi
cdq
idiv edi
push 0xfffffe93
sub ecx eax
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax 0xffffffef
add eax ecx
cdq
mov esi eax
mov edi edx
mov eax [ ebp - 0x8 ]
add eax 0xffffffba
cdq
push edx
push eax
call sub_419210
sub eax esi
push 0x0
push 0x15180
sbb edx edi
push edx
push eax
call sub_419210
mov esi [ ebp - 0x14 ]
add ebx eax
adc esi edx
xor edi edi
inc edi
test esi esi
jg r-xdata
jg r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
mov eax esi
jmp r-xdata
cmp ebx 0xffff5740
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
and eax 0x80000003
jns r-xdata
jl r-xdata
cmp ebx 0x934126cf
jbe r-xdata
pop ebx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov ecx [ ebp - 0x18 ]
add ebx 0x1e13380
mov eax ecx
adc esi 0x0
and eax 0x80000003
jns r-xdata
test ebx ebx
jae r-xdata
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov edi [ ebp + 0x8 ]
push 0x0
push 0x15180
push esi
push ebx
mov [ edi + 0x14 ] ecx
call sub_420860
push 0xffffffff
mov [ edi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_419210
add ebx eax
mov ecx rw-data
adc esi edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
mov edx [ edi + 0x1c ]
xor eax eax
inc eax
cmp [ ecx + 0x4 ] edx
jge r-xdata
mov ecx rw-data
add ebx 0x15180
adc esi 0x0
jmp r-xdata
dec eax
mov [ edi + 0x10 ] eax
push 0x0
push 0x15180
sub edx [ ecx + eax * 4 ]
mov eax [ ebp + 0xc ]
mov [ edi + 0xc ] edx
push [ eax + 0x4 ]
push [ eax ]
call sub_420860
push 0x7
pop ecx
add eax 0x4
cdq
idiv ecx
push 0x0
push 0xe10
push esi
push ebx
mov [ edi + 0x18 ] edx
call sub_420860
push 0xffffffff
mov [ edi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_419210
add ebx eax
push 0x0
push 0x3c
adc esi edx
push esi
push ebx
call sub_420860
and [ edi + 0x20 ] 0x0
mov [ edi + 0x4 ] eax
imul eax eax 0x3c
sub ebx eax
xor eax eax
mov [ edi ] ebx
pop edi
inc eax
cmp [ ecx + eax * 4 ] edx
jl r-xdata
sub_4200c5
push 0x8
push r--data
call sub_41e030
cmp [ rw-data ] 0x0
jne r-xdata
call sub_41e075
retn
push 0x6
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42010c
call sub_420343
inc [ rw-data ]
sub_420115
push 0xc
push r--data
call sub_41e030
and [ ebp - 0x1c ] 0x0
push 0x6
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_42015f
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420156
mov eax esi
call sub_41e075
retn
sub_42015f
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_41fe1c
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
inc edi
mov ecx [ esi + 0x14 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp ecx [ rw-data ]
je r-xdata
push 0x3
pop eax
push 0x2
pop edx
xor ebx ebx
push 0xb
inc ebx
pop edi
cmp ecx 0x6b
jge r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
mov edx [ rw-data ]
mov edi [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx edi
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push edx
push eax
push ecx
push 0x1
push 0x1
call sub_420675
xor eax eax
push eax
push eax
push eax
push 0x2
push eax
push eax
push ebx
push edi
push [ esi + 0x14 ]
push 0x1
push eax
call sub_420675
add esp 0x58
push 0x4
pop eax
push 0xa
pop edi
xor edx edx
push 0x5
inc edx
pop ebx
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push ecx
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push ecx
push edi
jmp r-xdata
cmp ecx edi
jl r-xdata
cmp ecx edx
jl r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push [ esi + 0x14 ]
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
push edi
call sub_420675
movzx eax [ rw-data ]
add esp 0x2c
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
xor eax eax
inc eax
cmp ecx edx
jg r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jg r-xdata
push ebx
call sub_420675
add esp 0x2c
jmp r-xdata
cmp ecx edi
jle r-xdata
pop edi
pop esi
cmp ecx edx
jle r-xdata
imul eax [ esi + 0x8 ] 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul esi eax 0x3e8
xor eax eax
cmp ecx edx
jne r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edi
jge r-xdata
cmp esi [ rw-data ]
setl al
jmp r-xdata
cmp esi [ rw-data ]
setge al
jmp r-xdata
sub_420343
push 0x30
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x7
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_41fe16
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41fe70
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
lea eax [ ebp - 0x24 ]
push eax
call sub_41fe1c
pop ecx
test eax eax
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
xor esi esi
inc esi
cmp eax 0xffffffff
je r-xdata
push eax
call sub_41497e
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_41fe46
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x2c ] esi
mov [ rw-data ] esi
imul ecx [ rw-data ] 0x3c
mov [ ebp - 0x1c ] ecx
cmp [ rw-data ] 0x0
je r-xdata
call sub_41734e
mov [ ebp - 0x38 ] eax
mov [ rw-data ] ebx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
push r--data
call sub_429205
pop ecx
mov edi eax
mov [ ebp - 0x3c ] edi
test edi edi
je r-xdata
call sub_41e075
retn
push 0x3
push edi
push 0x40
mov esi [ ebp - 0x20 ]
push [ esi ]
call sub_428e1a
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
imul eax [ rw-data ] 0x3c
add ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ edi ] bl
je r-xdata
add edi 0x3
cmp [ edi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call sub_414d64
pop ecx
imul ecx eax 0xe10
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x34 ] 0x1
inc edi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push edi
call sub_416d80
inc eax
push eax
call sub_418de5
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
push eax
push edi
call sub_419320
pop ecx
pop ecx
test eax eax
je r-xdata
inc edi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push edi
push edi
call sub_416d80
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_414da3
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ edi ]
cmp al 0x2b
je r-xdata
cmp [ edi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
call sub_41fe10
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_41fe04
mov [ eax ] esi
mov esi [ ebp - 0x28 ]
call sub_41fe0a
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4205d3
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push eax
call sub_41497e
pop ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
inc edi
push edi
call sub_414d64
pop ecx
imul eax eax 0x3c
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
neg ecx
mov [ ebp - 0x1c ] ecx
mov al [ edi ]
cmp al 0x30
jge r-xdata
mov [ ebp - 0x24 ] ebx
mov eax [ esi + 0x4 ]
mov [ eax ] bl
mov [ ebp - 0x24 ] 0x1
push 0x3
push edi
push 0x40
push [ esi + 0x4 ]
call sub_428e1a
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ edi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_41fe10
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_41fe04
mov [ eax ] esi
jmp r-xdata
inc edi
inc edi
push edi
call sub_414d64
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov al [ edi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc edi
sub_420675
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
push edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x64
mov [ ebp - 0xc ] eax
mov esi 0x190
pop ecx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebx + 0x76c ]
mov ecx 0x190
cdq
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ ebx + 0x76c ]
cdq
idiv esi
test edx edx
je r-xdata
mov eax ebx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
jmp r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] edi
call sub_41fe46
pop ecx
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebx
add edi [ ebp + 0x20 ]
add eax [ ebp + 0x1c ]
add edi eax
cmp ecx 0x5
jne r-xdata
add eax 0xfffffff9
mov [ ebp + 0xc ] eax
inc edi
lea eax [ ebx + 0x12b ]
cdq
idiv esi
push 0x7
mov esi eax
lea eax [ ebx - 0x1 ]
cdq
idiv ecx
imul ecx ebx 0x16d
sub esi eax
lea eax [ ebx - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx 0xffff9c25
add eax edi
add eax esi
add eax ecx
mov ecx [ ebp + 0x18 ]
cdq
pop esi
idiv esi
imul eax ecx 0x7
sub eax edx
cmp edx [ ebp + 0x1c ]
jg r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_41f081
int3
imul eax [ ebp - 0x4 ] 0x3e8
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
jns r-xdata
imul eax [ ebp + 0x24 ] 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x5265c00
cmp ecx eax
jl r-xdata
add ecx 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ ebx + 0x76c ]
mov ecx 0x190
cdq
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov [ rw-data ] ebx
jmp r-xdata
sub ecx eax
inc [ rw-data ]
mov [ rw-data ] ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub edi esi
jmp r-xdata
cmp edi eax
jle r-xdata
sub_420860
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_420910
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4209c2
push ebp
mov ebp esp
sub esp 0x24
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_413fdd
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
xor ebx ebx
mov edi [ ebp - 0x24 ]
lea esi [ eax + 0x1 ]
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov bl [ eax ]
cmp edi 0x2
jl r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ edi + 0x90 ]
movzx ecx bl
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41cd73
mov edi [ ebp - 0x24 ]
add esp 0xc
jmp r-xdata
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1 ] bl
cmp bl 0x2d
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
je r-xdata
or eax 0x2
cmp [ edi + 0x74 ] 0x1
jle r-xdata
mov cl [ esi ]
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov cl [ ebp - 0x1 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
test edi edi
js r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp edi 0x24
jg r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jne r-xdata
cmp cl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0x14 ] eax
cmp cl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0xa
and eax 0x103
je r-xdata
movsx eax [ ebp - 0x1 ]
sub eax 0x30
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0x10
pop edi
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x10 ]
mov cl [ ebp - 0x1 ]
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp eax edi
jae r-xdata
mov cl [ esi + 0x1 ]
add esi 0x2
mov [ ebp - 0x1 ] cl
cmp al 0x58
jne r-xdata
push 0x8
jmp r-xdata
mov edi 0x7fffffff
test dl 0x4
jne r-xdata
test eax eax
je r-xdata
add eax 0xffffffc9
sub eax 0x20
mov ecx [ ebp - 0xc ]
or edx 0x8
cmp ebx ecx
jb r-xdata
pop edi
jmp r-xdata
call sub_41778e
mov edx [ ebp - 0x8 ]
mov [ eax ] 0x22
test dl 0x1
je r-xdata
test dl 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
imul ebx edi
add ebx eax
jne r-xdata
test dl 0x2
push 0x0
pop ebx
setne bl
add ebx edi
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax edx
and eax 0x2
je r-xdata
movzx ecx cl
movzx eax [ eax + ecx * 2 ]
mov ecx eax
and ecx 0x4
je r-xdata
mov eax [ ebp + 0x10 ]
or edx 0x4
test eax eax
je r-xdata
cmp eax [ ebp - 0x10 ]
jbe r-xdata
test dl 0x2
je r-xdata
mov [ eax ] esi
test eax eax
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
dec esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] edx
test dl 0x8
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
neg ebx
jmp r-xdata
cmp ebx edi
jbe r-xdata
mov cl [ esi ]
inc esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1 ] cl
jmp r-xdata
sub_420be8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_4209c2
add esp 0x14
pop ebp
retn
sub_420c12
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x24 ] eax
xor esi esi
mov eax [ ebp + 0x10 ]
mov edi esi
push eax
push esi
push esi
push esi
push esi
push ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_420cb9
mov ebx eax
add esp 0x20
test bl 0x4
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4293d3
pop ecx
pop ecx
test bl 0x2
jne r-xdata
mov edi 0x200
mov eax esi
jmp r-xdata
mov edi 0x80
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x1c ]
mov [ edx ] edi
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov [ edx + 0x10 ] esi
xor ecx ebp
pop esi
mov [ edx + 0x14 ] eax
mov eax edx
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
or edi 0x100
cmp eax 0x2
jne r-xdata
test bl 0x1
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_420cb9
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x6c ] eax
mov esi ebx
mov eax ebx
mov [ ebp - 0x70 ] ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx edx
mov [ ebp - 0x50 ] ecx
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp cl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov cl [ edx ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_421431 ]
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
cmp cl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
sub cl 0x30
inc eax
mov [ ebp - 0x5c ] eax
cmp cl 0x9
ja r-xdata
lea eax [ edx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
mov esi ebx
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp cl 0x30
cmp cl 0x30
jne r-xdata
mov edx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x30
jmp r-xdata
push 0xa
pop eax
dec edx
lea eax [ edx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax cl
sub eax 0x2b
je r-xdata
cmp cl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x5
cmp cl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
cmp cl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov cl [ edx ]
inc edx
sub cl 0x31
cmp cl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x70 ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp cl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp cl 0x2d
je r-xdata
inc esi
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
jmp r-xdata
cmp cl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
mov cl [ edx ]
dec eax
inc edx
cmp cl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x6c ] ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x6c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cl 0x30
jge r-xdata
imul ecx esi 0xa
movsx esi [ ebp - 0x55 ]
add esi 0xffffffd0
add esi ecx
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x70 ] ecx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp cl 0x30
je r-xdata
jmp r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
cmp cl 0x43
jle r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
dec esi
cmp cl 0x39
jg r-xdata
mov cl [ ebp - 0x55 ]
mov esi 0x1451
jmp r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
mov edi [ ebp - 0x80 ]
or eax [ ebp - 0x70 ]
mov [ edi + 0xa ] ax
mov eax ebx
mov [ edi ] cx
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_429eb7
mov ecx [ ebp - 0x6c ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp cl 0x43
jle r-xdata
dec edx
jmp r-xdata
cmp cl 0x45
jle r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
add esi [ ebp - 0x54 ]
mov eax [ ebp - 0x64 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp cl 0x45
jle r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x60 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub cl 0x64
cmp cl 0x1
jbe r-xdata
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub cl 0x64
cmp cl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov edx rw-data
sub edx 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edx rw-data
neg esi
sub edx 0x60
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax esi
add edx 0x54
sar esi 0x3
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] esi
and eax 0x7
je r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edx
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
mov [ ebp - 0x7c ] ebx
and eax 0x8000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
mov [ ebp - 0x28 ] ebx
and edi eax
mov [ ebp - 0x24 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x6c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x5
mov eax ebx
lea edx [ ebp - 0x28 ]
pop edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x5c ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x6c ]
mov edx [ ebp - 0x24 ]
add esi 0xc002
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx [ ebp - 0x5c ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x7c ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov edx edi
shr edx 0x1f
mov ecx eax
add eax eax
shr ecx 0x1f
or eax edx
add edi edi
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
add edx edx
mov eax 0xffff
mov [ ebp - 0x2c ] edi
or edx ecx
add esi eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
sub [ ebp - 0x64 ] 0x2
add esi 0x2
dec edi
test edi edi
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ esi ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ebx
movzx eax [ eax ]
imul ecx eax
mov [ ebp - 0x5c ] ecx
add ecx [ edx - 0x4 ]
cmp ecx [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x74 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] ebx
cmp [ ebp - 0x60 ] ax
mov [ ebp - 0x3c ] ebx
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
mov eax 0x7fff
cmp si ax
jb r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_421461
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
sub_421485
push 0x64
push r--data
call sub_41e030
push 0xb
call sub_417b60
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_418d9d
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_425d50
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_41e075
retn
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] ebx
call sub_421730
xor eax eax
mov esi edi
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test edi edi
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ edi - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_418d9d
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
inc edi
jmp r-xdata
xor edi edi
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] ebx
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x2c ] edi
cmp edi 0x3
jge r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi ebx
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ esi ] ecx
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41942a
add esp 0xc
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41942a
add esp 0xc
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_421739
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_421761
push 0x10
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_417b60
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4217f5
mov eax edi
call sub_41e075
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_415f63
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_41497e
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_4217fe
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_418de5
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_421844
push 0x10
push r--data
call sub_41e030
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4154c3
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_4218bf
pop ecx
mov edi eax
mov [ ebp - 0x20 ] edi
mov ebx edx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4218b7
mov eax edi
mov edx ebx
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_41e075
retn
sub_4218bf
push ebp
mov ebp esp
mov eax 0x1024
call sub_42a0a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_421461
xor edi edi
mov esi eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] edi
jge r-xdata
push 0x1
push edi
push edi
push esi
call sub_421c94
add esp 0x10
mov [ ebp - 0x1010 ] eax
mov [ ebp - 0x100c ] edx
cmp edx edi
jg r-xdata
mov [ ebx + 0x4 ] edi
mov eax esi
mov ecx esi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1014 ] eax
mov [ ebp - 0x1024 ] ecx
mov esi [ eax * 4 + rw-data ]
mov al [ esi + ecx + 0x24 ]
add al al
sar al 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1005 ] al
mov eax [ ebp - 0x1010 ]
jne r-xdata
jl r-xdata
mov edi [ ebx ]
mov esi edi
sub esi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x1010 ]
mov edi [ ebp - 0x100c ]
cdq
sub ecx eax
mov eax ecx
sbb edi edx
mov edx edi
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
cmp eax edi
jae r-xdata
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ecx eax
or ecx edx
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
mov edx [ ebp - 0x1014 ]
mov eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
je r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1010 ]
cmp [ edx + ecx + 0x30 ] 0x0
mov edx [ ebp - 0x100c ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax esi
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
jmp r-xdata
shr esi 0x1
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp ecx edi
jb r-xdata
mov edx [ ebp - 0x1014 ]
mov ebx [ ebp - 0x1018 ]
push 0x0
mov eax [ edx * 4 + rw-data ]
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_421c94
mov edi eax
mov [ ebp - 0x101c ] edx
mov eax [ ebp - 0x1014 ]
add esp 0x10
mov [ ebp - 0x1020 ] edi
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1024 ]
cmp edi [ ecx + eax + 0x28 ]
jne r-xdata
xor edx edx
add eax esi
adc edx [ ebp - 0x100c ]
shr esi 0x1
mov edx [ ebp - 0x1014 ]
mov ecx [ ebp - 0x1024 ]
sub edi [ ebx + 0x8 ]
add edi [ ebx + 0x4 ]
mov eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
je r-xdata
xor esi esi
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_421c94
mov ecx [ ebp - 0x1010 ]
add esp 0x10
mov [ ebp - 0x101c ] edx
mov edx [ ebp - 0x100c ]
cmp eax ecx
jne r-xdata
inc ecx
inc esi
push 0x0
lea edx [ ebp - 0x1018 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub eax edi
sbb edx 0x0
mov [ ebp - 0x100c ] edx
shr edi 0x1
push 0x0
push edx
push ecx
push [ ebp - 0x1018 ]
call sub_421c94
add esp 0x10
test edx edx
jg r-xdata
cmp [ ebp - 0x101c ] edx
jne r-xdata
mov edi [ ebp - 0x100c ]
mov ecx [ ebp - 0x1010 ]
push 0x0
push edi
push ecx
push ebx
call sub_421c94
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ ebx + 0x8 ]
and [ ebp - 0x101c ] 0x0
add eax edi
mov ecx eax
sub ecx [ ebx + 0x8 ]
cmp eax [ ebx + 0x8 ]
sbb eax eax
not eax
and eax ecx
mov [ ebp - 0x1020 ] eax
jbe r-xdata
mov eax [ ebp - 0x1018 ]
cmp esi eax
ja r-xdata
jl r-xdata
mov edi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
test eax eax
jb r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp - 0x101c ]
lea ecx [ ebp - 0x1004 ]
test esi esi
je r-xdata
test eax eax
jb r-xdata
inc edi
test [ ebx + 0xc ] 0x400
mov edi eax
je r-xdata
mov eax [ ebp - 0x1010 ]
je r-xdata
inc eax
inc ecx
cmp ecx [ ebp - 0x1020 ]
jb r-xdata
inc edi
lea eax [ ebp - 0x1004 ]
xor edx edx
sub ecx eax
add ecx [ ebp - 0x1020 ]
mov eax ecx
adc edx [ ebp - 0x101c ]
jmp r-xdata
mov edx ecx
add edx eax
mov eax [ ebp - 0x1014 ]
mov ecx [ ebp - 0x1024 ]
mov edx [ ebp - 0x100c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x4 ] 0x4
cmp [ eax ] 0xa
jne r-xdata
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec esi
cmp ecx edx
jae r-xdata
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_421c94
push 0x18
push r--data
call sub_41e030
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41775a
and [ eax ] 0x0
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
and [ eax ] 0x0
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42a970
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_421d90
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_41e075
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421d66
mov edx ebx
jmp r-xdata
sub_421d90
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42ac2d
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_41778e
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_41776d
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_421e03
push 0x14
push r--data
call sub_41e030
xor esi esi
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42a970
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_41778e
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_42ac2d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_41e075
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421ecb
mov eax esi
jmp r-xdata
call sub_41775a
mov [ eax ] esi
sub_421eec
push 0x10
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41775a
mov [ eax ] ebx
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42a970
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41775a
and [ eax ] 0x0
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_421fdb
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
call sub_41e075
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421fb3
mov eax edi
jmp r-xdata
sub_421fdb
push ebp
mov ebp esp
mov eax 0x1af0
call sub_42a0a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1abc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1ac8 ] eax
push edi
xor edi edi
mov [ ebp - 0x1ad0 ] ecx
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx eax
mov ecx eax
sar edx 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1ad8 ] edx
push ebx
mov edx [ edx * 4 + rw-data ]
mov [ ebp - 0x1adc ] ecx
mov bl [ ecx + edx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_41775a
and [ eax ] esi
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac8 ]
call sub_41775a
and [ eax ] esi
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
test [ ecx + edx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac8 ]
call sub_428fdc
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push eax
call sub_421d90
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1adc ]
test [ eax + ecx + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push 0x0
lea edx [ ebp - 0x1ae0 ]
push edx
push [ ebp + 0x10 ]
push [ ebp - 0x1ad0 ]
push [ eax + ecx ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ad0 ]
xor edi edi
mov [ ebp - 0x1acc ] edi
test bl bl
jne r-xdata
call sub_41cf59
xor ecx ecx
mov eax [ eax + 0x6c ]
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae8 ]
push eax
mov eax [ ebp - 0x1ad8 ]
sete cl
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x1ae0 ]
xor edi edi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x1ac4 ] esi
je r-xdata
mov ecx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] ecx
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
lea edi [ ebp - 0x140c ]
mov eax edx
mov [ ebp - 0x1ac4 ] ecx
sub eax [ ebp - 0x1ad0 ]
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1ad0 ]
xor ecx ecx
and [ ebp - 0x1ac8 ] ecx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
test bl bl
je r-xdata
sub esi ecx
mov eax esi
test edi edi
je r-xdata
mov [ ebp - 0x1aec ] 0xa
mov [ ebp - 0x1aec ] 0xa
call sub_41778e
mov [ eax ] 0x1c
call sub_41775a
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x140c ]
sub edi eax
lea eax [ ebp - 0x1ae0 ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1ae1 ] cl
cmp cl 0xa
mov [ ebp - 0x1ac8 ] edx
mov ecx [ ebp - 0x1ac4 ]
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
xor edx edx
mov [ ebp - 0x1ac0 ] edx
mov [ ebp - 0x1aec ] 0xa
mov edx [ ebp - 0x1ad0 ]
push 0x5
pop ebx
cmp edi ebx
jne r-xdata
xor esi esi
lea ecx [ ebp - 0xd64 ]
push esi
push esi
push 0xd55
push ecx
lea ecx [ ebp - 0x1ab8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
movzx esi [ edi ]
add ecx 0x2
add edi 0x2
mov [ ebp - 0x1ac8 ] edi
cmp si [ ebp - 0x1aec ]
jne r-xdata
lea eax [ ebp - 0x140c ]
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ae0 ]
push eax
push ebx
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
test eax eax
je r-xdata
movzx edi [ ecx ]
add eax 0x2
add ecx 0x2
cmp di [ ebp - 0x1aec ]
jne r-xdata
xor eax eax
jmp r-xdata
add esi [ ebp - 0x1ae0 ]
cmp [ ebp - 0x1ae0 ] edi
jl r-xdata
mov dl [ ebp - 0x1ae1 ]
mov [ edi ] dl
inc edi
mov edx [ ebp - 0x1ac8 ]
inc ecx
mov [ ebp - 0x1ac4 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1abc ]
mov [ edi ] 0xd
inc edi
inc ecx
cmp bl 0x1
je r-xdata
mov dl [ eax ]
xor eax eax
mov ecx [ ebp - 0x1adc ]
cmp dl 0xa
sete al
mov [ ebp - 0x1ae8 ] eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x1ac4 ] eax
cmp [ ecx + eax + 0x38 ] edi
je r-xdata
push edi
call sub_41776d
pop ecx
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
mov [ eax ] ebx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] si
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop edi
mov [ eax ] di
add eax 0x2
mov edi [ ebp - 0x1ac8 ]
add edx 0x2
add esi [ ebp - 0x1ae0 ]
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp - 0x1ae0 ] ebx
jl r-xdata
mov [ ebx ] di
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
add [ ebp - 0x1abc ] 0x2
mov [ ebx ] si
add ebx 0x2
add edx 0x2
mov edi [ ebp - 0x1acc ]
mov edx [ ebp - 0x1ac8 ]
mov eax edx
sub eax [ ebp - 0x1ad0 ]
cmp eax ebx
jb r-xdata
cmp eax ebx
jae r-xdata
movzx ecx [ eax ]
xor edx edx
cmp cx [ ebp - 0x1aec ]
mov [ ebp - 0x1acc ] ecx
sete dl
add eax 0x2
mov [ ebp - 0x1ac4 ] edx
mov edx [ ebp - 0x1ac0 ]
add edx 0x2
mov [ ebp - 0x1ad4 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax dl
push eax
call sub_426402
pop ecx
test eax eax
je r-xdata
mov al [ ecx + eax + 0x34 ]
mov [ ebp - 0xc ] al
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0xb ] dl
push 0x2
and [ ecx + eax + 0x38 ] edi
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov edi eax
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] edi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ae0 ]
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac4 ]
mov eax ecx
mov edx [ ebp - 0x1ad0 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push ecx
call sub_42ae49
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1ad4 ]
mov eax [ ebp - 0x1ad0 ]
mov edx [ ebp - 0x1ad4 ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1acc ]
push eax
call sub_42ae31
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1ac8 ]
mov esi ecx
mov edx [ ebp - 0x1ad0 ]
sub esi edx
mov [ ebp - 0x1ac0 ] esi
cmp esi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ae0 ]
push edx
push eax
lea eax [ ebp - 0xd64 ]
add eax ecx
mov ecx [ ebp - 0x1adc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea ebx [ ebp - 0x140c ]
mov eax ecx
push 0xd
sub eax edx
mov edx [ ebp - 0x1ae8 ]
pop esi
jmp r-xdata
add esi 0x2
cmp [ ebp - 0x1ac4 ] edi
je r-xdata
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp - 0x1ad4 ]
mov ebx [ ebp - 0x1ad8 ]
inc esi
mov al [ edx ]
mov edx [ ebp - 0x1adc ]
mov ecx [ ebx * 4 + rw-data ]
mov [ edx + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ edx + eax + 0x38 ] 0x1
jmp r-xdata
push 0x2
push edx
lea eax [ ebp - 0x1acc ]
push eax
call sub_42ae31
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea eax [ ebp - 0x1ab8 ]
mov edi [ ebp - 0x1ac8 ]
sub ecx edx
mov edx [ ebp - 0x1ae8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp - 0x1ac0 ]
mov eax [ ebp - 0x1ad4 ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1acc ] eax
call sub_42ae49
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
and [ ebp - 0x1ac4 ] edi
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1ac8 ]
push ecx
mov ecx [ ebp - 0x1adc ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ad4 ]
inc eax
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc esi
inc [ ebp - 0x1abc ]
mov esi [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1abc ]
add esi ecx
mov eax [ ebp - 0x1ac4 ]
cmp [ ebp - 0x1ac8 ] eax
jl r-xdata
xor ecx ecx
inc eax
inc [ ebp - 0x1ac0 ]
push ecx
push ecx
push 0x5
mov [ ebp - 0x1ad4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1acc ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x1ae8 ] edi
je r-xdata
mov ecx [ ebp - 0x1acc ]
jmp r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x1ac8 ]
push 0x0
push eax
push 0x1
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xd
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x1
jl r-xdata
inc [ ebp - 0x1abc ]
inc esi
sub_422840
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_4217fe
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_421461
pop ecx
push eax
call sub_42a0cb
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_421461
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_421461
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_421461
mov esi eax
push edi
sar esi 0x5
call sub_421461
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_422961
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_41497e
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_422991
push 0x10
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41775a
mov [ eax ] ebx
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42a970
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41775a
and [ eax ] 0x0
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_422a6c
pop ecx
mov edi eax
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
call sub_41e075
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422a44
mov eax edi
jmp r-xdata
sub_422a6c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_42ac2d
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_41776d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_42ac2d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42ac2d
push 0x1
mov esi eax
call sub_42ac2d
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_42aba7
pop ecx
mov ecx edi
and edi 0x1f
sar ecx 0x5
shl edi 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_422b06
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_422b26
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_422b46
push 0x3
call sub_42432d
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_422ba3
push 0xff
call sub_422ba3
pop ecx
pop ecx
push 0x3
call sub_42432d
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_422b7f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_422ba3
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_422b7f
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
push ebx
push 0x3
call sub_42432d
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_42432d
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_42578f
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
mov [ ebp - 0x5 ] bl
push eax
lea eax [ ebp - 0x1f8 ]
push eax
call sub_416d80
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_41982a
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_42578f
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_427c62
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_41982a
push 0x3
push r--data
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
sar eax 0x1
sub esi eax
push esi
push ecx
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_427c62
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_42ae8c
add esp 0xc
jmp r-xdata
sub_422d60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_422db0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_41e090
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_422e70
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_422d60
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422e70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_422f79
push 0x24
push r--data
call sub_41e030
and [ ebp - 0x2c ] 0x0
and [ ebp - 0x30 ] 0x0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_41cf71
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_423134
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_416194
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_41e075
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_417b60
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x2c ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x34 ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4230fa
cmp esi 0x8
jne r-xdata
imul ecx edx 0xc
mov eax [ edi + 0x5c ]
and [ eax + ecx + 0x8 ] 0x0
inc edx
mov [ ebp - 0x34 ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_423134
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul ecx ecx 0xc
add ecx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
imul eax ecx 0xc
add edx 0xc
add eax [ ebp + 0xc ]
cmp edx eax
jb r-xdata
xor eax eax
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ edx + 0x4 ] esi
je r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_42317b
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_4158bb
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_4231ac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_421461
push eax
call sub_428fdc
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_4154bd
add eax 0x20
cmp esi eax
jne r-xdata
call sub_4154bd
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_418de5
mov [ edi * 4 + rw-data ] eax
pop ecx
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_423252
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x244 ] eax
call sub_413fdd
call sub_41778e
mov [ ebp - 0x25c ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_421461
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x228 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x24c ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x238 ]
test eax eax
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
cmp eax 0x7
je r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x238 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
mov [ ebp - 0x238 ] edi
mov edi [ ebp - 0x21c ]
shr eax 0x4
mov [ ebp - 0x238 ] eax
cmp eax 0x8
je r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_423dce ]
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x224 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x244 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x224 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x224 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x224 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_41fd7b
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_41fd7b
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x24c ] dl
test dl dl
jne r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x224 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x224 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x228 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x248 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x224 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x250 ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x244 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_41497e
xor eax eax
pop ecx
mov [ ebp - 0x258 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x228 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x224 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x224 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x25c ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_423dee
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_41fdc3
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x250 ]
movsx eax dl
push [ ebp - 0x224 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x280 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_4164e7
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x228 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x244 ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x224 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x224 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x228 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x244 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x244 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_429154
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x25c ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_423dee
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_41fdc3
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_418de5
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x258 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x244 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_4263c8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x258 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x224 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_416d80
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ecx
call sub_429170
add ecx 0x30
mov [ ebp - 0x274 ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_41fdc3
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x224 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x228 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x25c ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_423dee
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x274 ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x224 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x274 ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_429154
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x228 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_423dee
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_41fd7b
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_41fd7b
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_423e66
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_422ef8
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_423eb5
push ebp
mov ebp esp
push esi
call sub_41cf71
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
mov ecx edx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
and [ edi + eax + 0x8 ] 0x0
add edi 0xc
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_424010
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
push 0x104
mov edi rw-data
xor ebx ebx
push edi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] edi
test esi esi
je r-xdata
call sub_41c683
mov esi edi
cmp [ esi ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0xffffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push esi
call sub_4240c3
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea edx [ ecx + ebx * 4 ]
cmp edx ecx
jb r-xdata
push edx
call sub_418de5
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_4240c3
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] edi
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4240c3
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
xor eax eax
test ecx ecx
sete al
inc esi
mov ecx eax
mov al 0x22
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp + 0x1b ] al
movzx eax al
push eax
call sub_41783c
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test ecx ecx
jne r-xdata
mov al [ ebp + 0x1b ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov ecx [ ebp + 0x8 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test edx edx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
and [ ebp + 0x18 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
pop ebp
retn
and [ edx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ edx ] edi
add edx 0x4
mov [ ebp + 0xc ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
jne r-xdata
test cl 0x1
jne r-xdata
dec ecx
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr ecx 0x1
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0x18 ] eax
sete al
mov [ ebp + 0x18 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
call sub_41783c
pop ecx
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebx ]
inc esi
inc [ ebx ]
mov al [ esi ]
mov [ edi ] al
inc edi
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
inc [ ebx ]
sub_42423f
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_41c683
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_418d9d
mov edi eax
mov [ rw-data ] edi
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_416d80
inc esi
pop ecx
add esi eax
inc edi
mov esi [ rw-data ]
push ebx
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_41497e
and [ rw-data ] 0x0
and [ edi ] 0x0
xor eax eax
mov [ rw-data ] 0x1
push esi
call sub_416d80
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
add esi ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x1
push ebx
call sub_418d9d
mov [ edi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_41497e
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
add edi 0x4
sub_42432d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_42436d
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_424409
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
xor eax eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov esi edi
cmp [ edi ] ax
je r-xdata
push ebx
push eax
push eax
push eax
sub esi edi
push eax
sar esi 0x1
inc esi
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_418de5
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebx
call sub_41497e
pop ecx
xor ebx ebx
pop ebx
pop esi
sub_4244a0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_42b18c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_42b18c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4244ec
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42450d
add esp 0x1c
pop ebp
retn
sub_42450d
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424a5e
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424c18
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424593
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424cd9
jmp r-xdata
sub_424593
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x8 ] 0x3ff
mov [ ebp - 0x4 ] ecx
xor ebx ebx
lea ecx [ ebp - 0x2c ]
call sub_413fdd
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_41778e
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_41f071
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_41778e
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
add esi 0x3
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_4248ef
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov ecx 0xf0000
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_42b1c0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_42b5e0
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_42b5e0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_417ad0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_42b5e0
mov ecx eax
mov ebx edx
xor eax eax
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_42b500
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_42b500
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov [ esi ] 0x30
mov edi esi
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov edi eax
mov [ esi ] cl
mov [ esi + 0x1 ] al
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_42b500
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_42490d
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_413fdd
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_41778e
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_41f071
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_41778e
push 0x22
mov eax [ ebp + 0x18 ]
push esi
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_424f62
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_41f081
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4138e0
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_424a5e
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42b46f
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41778e
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_41778e
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_42b2f7
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_42490d
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_424b2c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0x1c ]
mov eax [ eax + 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
call sub_413fdd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41778e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f071
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_424f62
pop ecx
mov [ esi ] 0x30
inc esi
pop ecx
jmp r-xdata
pop edi
push 0x1
push esi
call sub_424f62
mov eax [ ebp - 0x14 ]
pop ecx
pop ecx
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_424f62
push edi
push 0x30
push esi
call sub_417ad0
add esp 0x14
mov edi eax
sub_424c18
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42b46f
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41778e
mov [ eax ] ebx
call sub_41f071
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_41778e
mov [ eax ] ebx
call sub_41f071
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_42b2f7
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_424b2c
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_424cd9
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42b46f
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41778e
mov [ eax ] ebx
call sub_41f071
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
dec eax
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_41778e
mov [ eax ] ebx
call sub_41f071
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_42b2f7
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_42490d
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_424b2c
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_424de9
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_424e81
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4293bb
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_42932d
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
sub_424ed4
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_413fdd
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4191dd
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41428a
test eax eax
movsx eax [ esi ]
push eax
call sub_4191dd
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_424f48
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_424f62
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_416d80
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_4138e0
add esp 0x10
pop esi
sub_424f8a
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42b5ff
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f081
int3
pop esi
retn
sub_424fb1
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
push edi
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_417ad0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ebx + ebx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push esi
call sub_418d7f
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_417852
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4257f0
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4250a9
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_424fb1
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4250e9
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_413fdd
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop ebx
push esi
push esi
or esi 0xffffffff
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_416d80
pop ecx
push [ ebp + 0x10 ]
or esi 0xffffffff
push edi
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea esi [ eax - 0x1 ]
call sub_41778e
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx eax [ esi + ebx ]
mov [ edi ] ax
cmp [ esi + ebx ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41778e
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
jmp r-xdata
inc esi
add edi 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp + 0x8 ] eax
test ecx ecx
jne r-xdata
jmp r-xdata
dec ecx
mov [ ebp - 0x4 ] ecx
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
sub eax ebx
push edi
push eax
mov eax [ ebp - 0x14 ]
push ebx
push 0x1
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
movzx eax cl
push eax
call sub_4263c8
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
je r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
inc eax
cmp [ eax ] 0x0
je r-xdata
sub_42524a
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_4250e9
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41778e
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_41778e
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_41778e
push 0x22
sub_425346
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xor esi esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
call sub_413fdd
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
test ecx ecx
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push esi
push esi
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
cmp [ eax + 0x74 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
call sub_41778e
or edi 0xffffffff
mov [ eax ] 0x2a
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov edi esi
jmp r-xdata
mov edx 0xff
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
test ebx ebx
je r-xdata
mov edx 0xff
mov eax edi
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
lea edi [ eax - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add edi 0x2
inc esi
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push ebx
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
mov edx ebx
call sub_41778e
or esi 0xffffffff
mov [ eax ] 0x2a
jmp r-xdata
mov al [ edi ]
mov [ ecx + esi ] al
mov ax [ edi ]
add edi 0x2
test ax ax
je r-xdata
cmp ax dx
ja r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
test edx edx
je r-xdata
add eax 0x2
dec edx
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + esi - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax ] si
jne r-xdata
cmp [ eax ] si
je r-xdata
cmp [ edi ] dx
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec esi
jmp r-xdata
mov ebx eax
sub ebx edi
sar ebx 0x1
inc ebx
cmp [ ebp - 0x10 ] esi
jne r-xdata
test edx edx
js r-xdata
cmp edx 0x5
ja r-xdata
lea eax [ edx + edi ]
cmp eax ebx
ja r-xdata
mov eax esi
mov [ ebp - 0x1c ] eax
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x14 ] eax
cmp edi ebx
jb r-xdata
mov ecx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0xc ]
push esi
push [ ecx + 0x74 ]
push edx
push 0x1
push eax
push esi
push [ ecx + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edx eax
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
inc eax
inc edi
mov [ ebp - 0x1c ] eax
cmp eax edx
jl r-xdata
mov al [ ebp + eax - 0xc ]
mov [ ecx + edi ] al
test al al
je r-xdata
sub_4255ad
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x10 ]
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
test esi esi
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ esi ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
cmp [ ebp + 0x18 ] edi
ja r-xdata
mov [ ebx ] eax
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_425346
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41778e
push 0x16
jmp r-xdata
inc eax
test esi esi
je r-xdata
test esi esi
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
call sub_41778e
mov eax [ eax ]
jmp r-xdata
mov [ esi ] 0x0
pop ebx
mov eax ecx
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push 0x50
mov eax edi
pop ecx
jmp r-xdata
mov [ esi ] 0x0
cmp edi eax
ja r-xdata
mov [ eax + esi - 0x1 ] 0x0
jmp r-xdata
call sub_41778e
push 0x22
sub_42574f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425930
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_41778e
test eax eax
je r-xdata
call sub_41778e
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_42578f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41778e
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41778e
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_42581c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_417852
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41497e
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_41eee0
pop ecx
call sub_41778e
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_41778e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4177a1
pop ecx
mov [ esi ] eax
push esi
call sub_41eee0
pop ecx
test eax eax
je r-xdata
call sub_41778e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4177a1
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4258c7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
test esi esi
je r-xdata
imul esi [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push ebx
call sub_42581c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
push ebx
call sub_41dff5
pop ecx
mov edi eax
call sub_41778e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
pop edi
pop esi
pop ebp
retn
sub esi edi
lea eax [ edi + ebx ]
push esi
push 0x0
push eax
call sub_417ad0
add esp 0xc
sub_425930
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_41778e
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_41eee0
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_4259aa
push 0x10
push r--data
call sub_41e030
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425ac0
mov eax esi
call sub_41e075
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_418de5
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push ebx
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call sub_41942a
add esp 0xc
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_415502
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_417be8
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_41556c
pop ecx
pop ecx
sub_425ac9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
xor eax eax
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_42b773
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_42b791
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_42b8c0
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_42b8c0
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_42b8c0
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_425d50
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_425de0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_42b195
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_42b1b4
jmp r-xdata
sub_425de0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4138c4
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_425d50
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_425e42
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_425e72
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_425ea2
push ebp
mov ebp esp
mov eax 0x1028
call sub_42a0a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1014 ] edi
test edi edi
jne r-xdata
push ebx
push esi
push edi
call sub_421461
xor ebx ebx
mov esi eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_426232
add esp 0xc
mov [ ebp - 0x100c ] eax
test eax eax
js r-xdata
mov [ edi + 0x4 ] ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_4138c4
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
mov eax esi
mov ecx esi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1010 ] eax
mov [ ebp - 0x1020 ] ecx
mov edx [ eax * 4 + rw-data ]
mov eax [ edi + 0xc ]
mov [ ebp - 0x1024 ] eax
mov dl [ ecx + edx + 0x24 ]
add dl dl
sar dl 0x1
test eax 0x108
mov eax [ ebp - 0x100c ]
mov [ ebp - 0x1005 ] dl
jne r-xdata
pop esi
pop ebx
mov esi [ edi ]
mov edi [ edi + 0x8 ]
mov [ ebp - 0x101c ] edi
mov edi esi
sub edi [ ebp - 0x101c ]
test [ ebp - 0x1024 ] 0x3
mov [ ebp - 0x1028 ] edi
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test [ ebp - 0x1024 ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test eax eax
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov eax [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1028 ]
test [ ecx + eax + 0x4 ] 0x80
mov eax [ ebp - 0x100c ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov eax [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1028 ]
cmp [ ecx + eax + 0x30 ] ebx
je r-xdata
test [ ebp - 0x1024 ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
mov edx [ ebp - 0x101c ]
jmp r-xdata
mov eax [ ebp - 0x1014 ]
shr edi 0x1
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp dl 0x1
jne r-xdata
mov eax [ ebp - 0x1014 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp edx esi
jb r-xdata
mov edx [ ebp - 0x1010 ]
push ebx
mov eax [ edx * 4 + rw-data ]
push [ ecx + eax + 0x2c ]
push [ ecx + eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_421c94
mov ecx [ ebp - 0x1020 ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
add eax edi
shr edi 0x1
mov ebx [ ebp - 0x1010 ]
sub esi [ eax + 0x8 ]
add esi [ eax + 0x4 ]
push 0x0
mov eax [ ebx * 4 + rw-data ]
pop ebx
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x100c ]
mov edi ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov dl [ ebp - 0x1005 ]
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
mov eax [ ebp - 0x100c ]
sub eax esi
push 0x2
push ebx
push [ ebp - 0x1018 ]
call sub_426232
mov ecx [ ebp - 0x100c ]
add esp 0xc
cmp eax ecx
jne r-xdata
inc edx
inc edi
push ebx
lea edx [ ebp - 0x101c ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push ebx
push ecx
push [ ebp - 0x1018 ]
call sub_426232
add esp 0xc
test eax eax
jns r-xdata
mov edx [ ebp - 0x1014 ]
mov eax [ edx + 0x8 ]
add eax esi
mov ecx eax
sub ecx [ edx + 0x8 ]
cmp eax [ edx + 0x8 ]
sbb eax eax
not eax
and eax ecx
mov [ ebp - 0x1020 ] eax
jbe r-xdata
mov ecx [ ebp - 0x100c ]
push ebx
push ecx
push [ ebp - 0x1018 ]
call sub_426232
add esp 0xc
test eax eax
js r-xdata
mov eax [ ebp - 0x1014 ]
mov ecx 0x200
cmp esi ecx
ja r-xdata
test [ edx + 0xc ] 0x2000
jmp r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ ebp - 0x101c ]
cmp edi eax
ja r-xdata
mov esi [ eax + 0x18 ]
test [ eax + 0xc ] 0x8
je r-xdata
je r-xdata
inc eax
inc ebx
cmp ebx ecx
jb r-xdata
inc esi
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1005 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ eax + 0xc ] 0x400
mov esi ecx
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_426232
push 0x10
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41775a
mov [ eax ] ebx
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42a970
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41775a
and [ eax ] 0x0
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_426321
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
call sub_41e075
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4262f9
mov eax edi
jmp r-xdata
sub_426321
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42ac2d
mov edi eax
pop ecx
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ SetFilePointerEx@IAT ]
lea eax [ ebp - 0x8 ]
push 0x1
push eax
push 0x0
push 0x0
push edi
call ebx
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x9
or eax edi
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41776d
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
push ecx
cdq
push edx
push eax
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x10 ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
call ebx
call sub_41778e
mov [ eax ] 0x16
sub_4263c8
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov eax [ ebp + 0x8 ]
movzx ecx al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_426420
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_4265f0
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42c473
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_426607
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42c473
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_426695
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_426725
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_4265f0
pop edx
retn
call sub_426607
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_4267dc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42686f
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_42686f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_413fdd
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42c57c
lea ecx [ ebp - 0x10 ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_42c57c
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_42694a
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_426969
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
push eax
call sub_41497e
pop ecx
sub_426a65
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_418d9d
mov esi eax
mov [ ebp + 0x8 ] esi
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
call sub_418de5
mov edi eax
mov [ ebp - 0x4 ] edi
pop ecx
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x4 ] ecx
mov esi rw-data
jmp r-xdata
and [ edi ] 0x0
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_41497e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x80 ]
or ecx 0xffffffff
test edx edx
je r-xdata
mov edi [ ebp + 0x8 ]
mov esi rw-data
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
call sub_418de5
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax ecx
[ edx ] eax
mov [ edi ] ecx
and [ eax ] 0x0
lea eax [ esi + 0xc ]
mov edi [ ebx + 0xac ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
mov ecx [ ebp + 0x8 ]
mov esi eax
add ecx 0x10
lea eax [ ebp - 0x14 ]
push ecx
push 0x14
push edi
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov [ ebp - 0xc ] eax
push eax
push 0x18
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
push 0x1a
push edi
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_41497e
push edi
call sub_41497e
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
xor eax eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x84 ] esi
[ eax ] ecx
dec ecx
jne r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_426969
push ebx
call sub_41497e
mov eax [ ebp - 0x4 ]
push eax
call sub_41497e
mov eax [ ebp - 0x8 ]
push eax
call sub_41497e
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x84 ]
call sub_41497e
push [ ebx + 0x78 ]
call sub_41497e
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x84 ]
xor ecx ecx
mov esi [ ebp + 0x8 ]
inc ecx
mov edi [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_426e06
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41497e
pop ecx
push eax
call sub_41497e
pop ecx
sub_426e6d
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0x8 ] esi
call sub_418d9d
mov [ ebp + 0x8 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x84 ]
mov edi eax
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
call sub_418de5
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] eax
mov esi rw-data
jmp r-xdata
xor edi edi
mov [ eax ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp + 0x8 ]
call sub_41497e
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x7c ]
or ecx 0xffffffff
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_418de5
mov [ ebp - 0xc ] eax
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax ecx
[ edx ] eax
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_41497e
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41497e
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
mov [ eax ] edi
lea eax [ ebp - 0x14 ]
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
push 0x1
push eax
call sub_41e224
mov ecx [ ebp + 0x8 ]
mov esi eax
add ecx 0x4
lea eax [ ebp - 0x14 ]
push ecx
push 0xf
push edi
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41e224
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41e224
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
xor eax eax
mov [ ebx + 0x7c ] edi
mov [ ebx + 0x84 ] esi
[ eax ] ecx
dec ecx
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
jmp r-xdata
push [ ebp + 0x8 ]
call sub_426e06
or [ ebp - 0x8 ] 0xffffffff
pop ecx
push [ ebx + 0x78 ]
call sub_41497e
push [ ebx + 0x84 ]
call sub_41497e
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_427073
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_41497e
push [ esi + 0x8 ]
call sub_41497e
push [ esi + 0xc ]
call sub_41497e
push [ esi + 0x10 ]
call sub_41497e
push [ esi + 0x14 ]
call sub_41497e
push [ esi + 0x18 ]
call sub_41497e
push [ esi ]
call sub_41497e
push [ esi + 0x20 ]
call sub_41497e
push [ esi + 0x24 ]
call sub_41497e
push [ esi + 0x28 ]
call sub_41497e
push [ esi + 0x2c ]
call sub_41497e
push [ esi + 0x30 ]
call sub_41497e
push [ esi + 0x34 ]
call sub_41497e
push [ esi + 0x1c ]
call sub_41497e
push [ esi + 0x38 ]
call sub_41497e
push [ esi + 0x3c ]
call sub_41497e
add esp 0x40
push [ esi + 0x40 ]
call sub_41497e
push [ esi + 0x44 ]
call sub_41497e
push [ esi + 0x48 ]
call sub_41497e
push [ esi + 0x4c ]
call sub_41497e
push [ esi + 0x50 ]
call sub_41497e
push [ esi + 0x54 ]
call sub_41497e
push [ esi + 0x58 ]
call sub_41497e
push [ esi + 0x5c ]
call sub_41497e
push [ esi + 0x60 ]
call sub_41497e
push [ esi + 0x64 ]
call sub_41497e
push [ esi + 0x68 ]
call sub_41497e
push [ esi + 0x6c ]
call sub_41497e
push [ esi + 0x70 ]
call sub_41497e
push [ esi + 0x74 ]
call sub_41497e
push [ esi + 0x78 ]
call sub_41497e
push [ esi + 0x7c ]
call sub_41497e
add esp 0x40
push [ esi + 0x80 ]
call sub_41497e
push [ esi + 0x84 ]
call sub_41497e
push [ esi + 0x88 ]
call sub_41497e
push [ esi + 0x8c ]
call sub_41497e
push [ esi + 0x90 ]
call sub_41497e
push [ esi + 0x94 ]
call sub_41497e
push [ esi + 0x98 ]
call sub_41497e
push [ esi + 0x9c ]
call sub_41497e
push [ esi + 0xa0 ]
call sub_41497e
push [ esi + 0xa4 ]
call sub_41497e
push [ esi + 0xa8 ]
call sub_41497e
push [ esi + 0xb8 ]
call sub_41497e
push [ esi + 0xbc ]
call sub_41497e
push [ esi + 0xc0 ]
call sub_41497e
push [ esi + 0xc4 ]
call sub_41497e
push [ esi + 0xc8 ]
call sub_41497e
add esp 0x40
push [ esi + 0xcc ]
call sub_41497e
push [ esi + 0xb4 ]
call sub_41497e
push [ esi + 0xd4 ]
call sub_41497e
push [ esi + 0xd8 ]
call sub_41497e
push [ esi + 0xdc ]
call sub_41497e
push [ esi + 0xe0 ]
call sub_41497e
push [ esi + 0xe4 ]
call sub_41497e
push [ esi + 0xe8 ]
call sub_41497e
push [ esi + 0xd0 ]
call sub_41497e
push [ esi + 0xec ]
call sub_41497e
push [ esi + 0xf0 ]
call sub_41497e
push [ esi + 0xf4 ]
call sub_41497e
push [ esi + 0xf8 ]
call sub_41497e
push [ esi + 0xfc ]
call sub_41497e
push [ esi + 0x100 ]
call sub_41497e
push [ esi + 0x104 ]
call sub_41497e
add esp 0x40
push [ esi + 0x108 ]
call sub_41497e
push [ esi + 0x10c ]
call sub_41497e
push [ esi + 0x110 ]
call sub_41497e
push [ esi + 0x114 ]
call sub_41497e
push [ esi + 0x118 ]
call sub_41497e
push [ esi + 0x11c ]
call sub_41497e
push [ esi + 0x120 ]
call sub_41497e
push [ esi + 0x124 ]
call sub_41497e
push [ esi + 0x128 ]
call sub_41497e
push [ esi + 0x12c ]
call sub_41497e
push [ esi + 0x130 ]
call sub_41497e
push [ esi + 0x134 ]
call sub_41497e
push [ esi + 0x138 ]
call sub_41497e
push [ esi + 0x13c ]
call sub_41497e
push [ esi + 0x140 ]
call sub_41497e
push [ esi + 0x144 ]
call sub_41497e
add esp 0x40
push [ esi + 0x148 ]
call sub_41497e
push [ esi + 0x14c ]
call sub_41497e
push [ esi + 0x150 ]
call sub_41497e
push [ esi + 0x154 ]
call sub_41497e
push [ esi + 0x158 ]
call sub_41497e
push [ esi + 0x15c ]
call sub_41497e
push [ esi + 0x160 ]
call sub_41497e
add esp 0x1c
sub_4273f3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
je r-xdata
mov esi rw-data
xor ebx ebx
push 0x164
inc ebx
push ebx
call sub_418d9d
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi + 0x9c ] esi
xor eax eax
add eax 0xb0
or ecx 0xffffffff
[ eax ] ecx
push edi
push esi
call sub_42746f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov [ esi + 0xb0 ] ebx
jmp r-xdata
push esi
call sub_427073
push esi
call sub_41497e
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x9c ]
cmp eax rw-data
je r-xdata
sub_42746f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ esi + 0xb4 ]
test edi edi
jne r-xdata
push ebx
call sub_41d178
and [ ebp - 0x4 ] 0x0
mov [ edi + 0x160 ] eax
lea eax [ edi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
push 0x1
push eax
call sub_41e224
lea ecx [ edi + 0x8 ]
mov esi eax
push ecx
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x40
or esi eax
lea eax [ edi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
push edi
push 0x37
push ebx
or esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x24 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x88 ]
push eax
push 0x40
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xa0 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xa4 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xa8 ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0xac ]
push eax
push 0x1009
push ebx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xb8 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xbc ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xc0 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0xc4 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xc8 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xcc ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xb4 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0xd4 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xd8 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xdc ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xe0 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0xe4 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xe8 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xd0 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xec ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0xf0 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xf4 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xf8 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0xfc ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x100 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x104 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x108 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x10c ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x110 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x114 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x118 ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0x8 ]
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x11c ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x120 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x124 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x128 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x12c ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x130 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x134 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x138 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x13c ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x140 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x144 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x148 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x14c ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or esi eax
lea eax [ edi + 0x150 ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x154 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x158 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
or esi eax
lea eax [ edi + 0x15c ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41e224
add esp 0x50
or eax esi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427c62
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_41778e
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_41778e
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_427cce
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
jle r-xdata
or ecx 0xffffffff
jmp r-xdata
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
mov eax ecx
pop ebp
retn
xor ecx ecx
inc ecx
test di di
je r-xdata
sub_427d0c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
pop ebp
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx edx [ eax ]
mov [ ebp + 0x8 ] edx
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx [ ebp + 0x8 ]
je r-xdata
xor edx edx
sub_427d57
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_427d8d
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41778e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_41778e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_427e4b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
mov edx ebx
mov esi edi
test bx bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx cx
je r-xdata
sub_427e8d
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
push 0x55
push eax
or [ esi + 0x8 ] 0x104
call sub_41c071
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xb0 ]
push eax
call sub_41982a
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
sub_427f06
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41982a
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_41982a
sub eax 0x3
neg eax
pop ecx
sbb eax eax
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
push [ esi ]
call sub_427fc4
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test [ esi + 0x8 ] 0x200
je r-xdata
push 0x0
push 0x3
push sub_427ff6
mov [ esi + 0xc ] eax
call sub_41bf87
add esp 0xc
test [ esi + 0x8 ] 0x100
je r-xdata
test [ esi + 0x8 ] 0x7
jne r-xdata
pop esi
pop ebp
retn
sub_427f7a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41982a
sub eax 0x3
neg eax
pop ecx
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
je r-xdata
push [ esi ]
call sub_427fc4
pop ecx
push 0x2
pop eax
jmp r-xdata
pop esi
pop ebp
retn
and [ esi + 0x8 ] 0x0
push 0x0
push 0x3
push sub_428216
mov [ esi + 0xc ] eax
call sub_41bf87
add esp 0xc
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_427fc4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_427ff6
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x88 ] esi
call sub_41cf59
push 0x40
lea ebx [ eax + 0x9c ]
mov ecx [ ebx + 0x14 ]
lea eax [ ebp - 0x84 ]
neg ecx
push eax
sbb ecx ecx
and ecx 0xfffff005
add ecx 0x1002
push ecx
push esi
call sub_41c00d
add esp 0x10
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x84 ]
push eax
push [ ebx + 0x4 ]
call sub_4267dc
mov edi 0xfffff002
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ ebx + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax edi
add eax 0x1001
push eax
push esi
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebx + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
lea eax [ ebp - 0x84 ]
neg ecx
push 0x80
sbb ecx ecx
and ecx edi
push eax
add ecx 0x1001
push ecx
push esi
call sub_41c00d
add esp 0x10
test eax eax
jne r-xdata
and [ ebx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
test [ ebx + 0x8 ] 0x2
jne r-xdata
or [ ebx + 0x8 ] 0x304
or [ ebx + 0x8 ] 0x200
xor edi edi
cmp [ ebx + 0x10 ] edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] edi
je r-xdata
or [ ebx + 0x8 ] 0x100
cmp [ ebx + 0x250 ] di
jne r-xdata
test [ ebx + 0x8 ] 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_42c26e
add esp 0xc
test eax eax
jne r-xdata
xor edi edi
push [ ebx ]
call sub_41982a
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_41982a
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
push esi
call sub_42835e
pop ecx
test eax eax
je r-xdata
or [ ebx + 0x8 ] 0x2
jmp r-xdata
push esi
call sub_42835e
pop ecx
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41f081
int3
or [ ebx + 0x8 ] 0x1
jmp r-xdata
push esi
call sub_41982a
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_427d8d
add esp 0x14
test eax eax
je r-xdata
push [ ebx ]
call sub_427fc4
push [ ebx ]
mov esi eax
call sub_41982a
pop ecx
pop ecx
cmp esi eax
je r-xdata
mov esi [ ebp - 0x88 ]
jmp r-xdata
sub_428216
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41cf59
push 0x78
lea esi [ eax + 0x9c ]
mov ecx [ esi + 0x10 ]
lea eax [ ebp - 0xf4 ]
neg ecx
push eax
sbb ecx ecx
and ecx 0xfffff002
add ecx 0x1001
push ecx
push edi
call sub_41c00d
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41982a
inc eax
push eax
push edi
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn 0xc
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
or [ esi + 0x8 ] 0x4
sub_4282c9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x20001004
push eax
call sub_41c00d
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_427cce
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_42c749
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x2000000b
push eax
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_42835e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x9
push eax
push 0x59
push esi
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_427d57
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_4283aa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
pop ebp
retn
push ebx
pop ebx
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
imul ecx ebx 0xc
mov [ ebp + 0xc ] ecx
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4267dc
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_428414
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call sub_41cf59
mov ebx [ ebp + 0x8 ]
xor ecx ecx
lea esi [ eax + 0x9c ]
lea eax [ esi + 0x250 ]
mov [ esi + 0x8 ] ecx
mov [ eax ] cx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x80 ]
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_4283aa
add esp 0xc
xor ecx ecx
call sub_427e8d
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_4282c9
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_427f7a
call sub_427f06
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_4283aa
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_427f7a
jmp r-xdata
call sub_427f06
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push [ ebp - 0x4 ]
xor eax eax
lea ebx [ edi + 0x120 ]
mov [ ebx ] ax
call sub_41982a
inc eax
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_427d8d
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
lea eax [ edi + 0x120 ]
push 0x1002
push eax
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_42c75d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
lea eax [ edi + 0x120 ]
push 0x7
push eax
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_42c75d
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_42c62d
add esp 0x10
sub_4285d8
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41cf59
mov ebx eax
call sub_41cf59
push esi
mov edi [ eax + 0x3b8 ]
call sub_428a98
pop ecx
mov ecx [ ebx + 0xb0 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0xf0
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0xa0 ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_428b72
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_428688
push ebp
mov ebp esp
push esi
call sub_41cf59
mov esi eax
push [ esi + 0xa0 ]
call sub_41982a
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4285d8
mov [ esi + 0xb0 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
pop ebp
retn
and [ eax ] 0x0
sub_4286c8
push ebp
mov ebp esp
push esi
push edi
call sub_41cf59
lea esi [ eax + 0x9c ]
push [ esi ]
call sub_41982a
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_41982a
mov edi [ ebp + 0x8 ]
sub eax 0x3
neg eax
pop ecx
sbb eax eax
inc eax
mov [ esi + 0x14 ] eax
and [ edi + 0x4 ] 0x0
cmp [ esi + 0x10 ] 0x0
pop ecx
je r-xdata
push [ esi ]
call sub_42879e
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ edi ] 0x0
test [ edi ] 0x200
je r-xdata
push 0x1
push sub_4287c8
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesW@IAT ]
test [ edi ] 0x100
je r-xdata
test [ edi ] 0x7
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_428745
push ebp
mov ebp esp
push esi
call sub_41cf59
mov esi eax
push [ esi + 0x9c ]
call sub_41982a
sub eax 0x3
neg eax
pop ecx
sbb eax eax
inc eax
mov [ esi + 0xac ] eax
je r-xdata
push [ esi + 0x9c ]
call sub_42879e
pop ecx
push 0x2
pop eax
jmp r-xdata
pop ebp
retn
and [ eax ] 0x0
push 0x1
push sub_4289bd
mov [ esi + 0xa8 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
sub_42879e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_4287c8
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41cf59
lea ebx [ eax + 0x9c ]
call sub_41cf59
push esi
mov edi [ eax + 0x3b8 ]
call sub_428a98
pop ecx
mov ecx [ ebx + 0x14 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0xf0
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x4 ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0xf0
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
lea eax [ ebp - 0xf4 ]
neg ecx
push 0xf0
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
or [ edi ] 0x200
cmp [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] eax
je r-xdata
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_42c26e
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi + 0x4 ] esi
push [ ebx ]
call sub_41982a
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_428b72
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
push [ ebx ]
call sub_41982a
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push edi
push eax
push edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ edi ] edx
mov [ edi + 0x4 ] esi
jmp r-xdata
push esi
call sub_428b94
add esp 0xc
test eax eax
je r-xdata
sub_4289bd
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41cf59
lea ebx [ eax + 0x9c ]
call sub_41cf59
push esi
mov edi [ eax + 0x3b8 ]
call sub_428a98
pop ecx
mov ecx [ ebx + 0x10 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0xf0
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_4267dc
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_428b94
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_428a98
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
movzx ecx [ edx ]
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_428ae7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_427cce
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_427cce
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_42c749
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_428b72
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_428b94
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_41cf59
mov esi [ ebp + 0x8 ]
mov edi eax
push 0x2
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push [ edi + 0x9c ]
call sub_42879e
push [ edi + 0x9c ]
mov esi eax
call sub_41982a
pop ecx
pop ecx
cmp esi eax
je r-xdata
sub_428bfe
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x14 ] eax
call sub_41cf59
push 0xc
lea ebx [ eax + 0x9c ]
xor eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_417ad0
add esp 0xc
call sub_41cf59
lea ecx [ ebp - 0x10 ]
mov [ eax + 0x3b8 ] ecx
test esi esi
jne r-xdata
lea eax [ esi + 0x80 ]
mov [ ebx ] esi
lea edi [ ebx + 0x4 ]
xor ecx ecx
mov [ edi ] eax
test eax eax
je r-xdata
or [ ebp - 0x10 ] 0x104
jmp r-xdata
mov [ ebp - 0x10 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_4283aa
add esp 0xc
xor ecx ecx
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_428ae7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov [ ebp - 0x10 ] 0x104
cmp [ eax ] cx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_428688
lea eax [ ebp - 0x10 ]
push eax
call sub_428745
cmp [ eax ] cx
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ r--data ]
push ebx
dec eax
push eax
push r--data
call sub_4283aa
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4286c8
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_428745
jmp r-xdata
xor ecx ecx
cmp [ eax ] cx
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4286c8
jmp r-xdata
push 0x55
lea eax [ ebx + 0x250 ]
push eax
push [ ebp - 0xc ]
call sub_41becd
mov ebx [ ebp - 0x14 ]
add esp 0xc
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_41becd
mov edi [ GetLocaleInfoW@IAT ]
add esp 0xc
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call edi
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_42c62d
add esp 0x10
sub_428e1a
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41778e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ebx ] dl
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov al [ esi ]
mov [ ebx + esi ] al
inc esi
test al al
je r-xdata
jmp r-xdata
mov al [ esi + ebx ]
mov [ ebx ] al
inc ebx
test al al
je r-xdata
mov [ ecx ] 0x0
call sub_41778e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
sub_428ebe
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax ]
xor edi edi
push edi
push edi
push [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41c00d
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4138c4
mov esp ebp
pop ebp
retn
push ebx
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c00d
add esp 0x10
test eax eax
je r-xdata
lea ecx [ ebx + ebx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push esi
call sub_418d7f
pop ecx
mov eax edi
push edi
push edi
cmp [ ebp + 0x18 ] edi
jne r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
push edi
jmp r-xdata
push eax
call sub_417852
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4257f0
mov esi esp
test esi esi
je r-xdata
push 0xffffffff
push esi
push edi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_428fa2
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_428ebe
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428fdc
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_429030
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_41778e
mov [ eax ] 0x2a
call sub_41778e
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41778e
push 0x22
pop esi
mov [ eax ] esi
call sub_41f071
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_417ad0
add esp 0xc
push edi
push esi
push ebx
call sub_417ad0
add esp 0xc
sub_429170
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_429205
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_416d80
pop ecx
mov edi eax
jmp r-xdata
call sub_42c80b
test eax eax
jne r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push ecx
call sub_416d80
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_42c89a
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
inc eax
add eax edi
jmp r-xdata
pop edi
sub_429289
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
call sub_413fdd
lea eax [ ebp - 0x2c ]
xor edi edi
push eax
push edi
push edi
push edi
push edi
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_420cb9
mov ebx eax
add esp 0x20
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_429945
pop ecx
pop ecx
test bl 0x3
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
test bl 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
push 0x4
jmp r-xdata
test bl 0x2
je r-xdata
push 0x3
cmp eax 0x2
jne r-xdata
pop edi
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42932d
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x28 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
call sub_413fdd
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_420cb9
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_4293d3
mov ecx eax
add esp 0x28
mov eax [ ebp - 0x14 ]
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4293d3
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_429945
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_429eb7
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov eax 0x404e
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shl edx 0x10
shr eax 0x10
or edx eax
shr esi 0x10
mov eax [ ebp - 0x4 ]
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
mov ecx esi
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
mov eax [ ebp - 0x4 ]
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax edx
mov esi [ ebp - 0xc ]
add edx edx
add edi [ ebp - 0x14 ]
add esi esi
and [ ebp - 0x10 ] 0x0
add edi edi
shr eax 0x1f
or esi eax
shr ecx 0x1f
mov eax [ ebp + 0x8 ]
or edi ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
movsx eax [ eax ]
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] eax
lea ecx [ edx + eax ]
mov [ ebp - 0xc ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx eax
jae r-xdata
mov [ ebx ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
dec eax
mov [ ebx + 0x4 ] esi
inc [ ebp + 0x8 ]
mov [ ebx + 0x8 ] edi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax esi
xor edx edx
lea esi [ eax + 0x1 ]
mov [ ebp + 0x10 ] esi
cmp esi eax
jb r-xdata
mov edx [ ebp - 0xc ]
lea edi [ ebp - 0x1c ]
mov esi ebx
mov eax ecx
shr eax 0x1f
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
mov edi [ ebp - 0x8 ]
add esi esi
or esi eax
shr ecx 0x1f
add edi edi
mov eax edx
or edi ecx
shr eax 0x1f
mov ecx esi
add edx edx
add esi esi
shr ecx 0x1f
or esi eax
mov [ ebx ] edx
mov eax [ ebp - 0x1c ]
add edi edi
or edi ecx
mov [ ebx + 0x4 ] esi
add eax edx
mov [ ebx + 0x8 ] edi
xor ecx ecx
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp esi 0x1
jae r-xdata
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test edx edx
je r-xdata
sub_42a0a0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_42a0cb
push 0x10
push r--data
call sub_41e030
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41775a
mov [ eax ] ebx
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
call sub_41775a
and [ eax ] 0x0
jmp r-xdata
push esi
call sub_42a970
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41775a
and [ eax ] 0x0
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42a1df
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41f071
call sub_41e075
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a1b7
mov eax edi
jmp r-xdata
sub_42a1df
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_41775a
mov [ eax ] edi
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
mov [ eax ] edi
call sub_41778e
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
mov ebx eax
sar ecx 0x5
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x24 ] ebx
mov edx [ ecx * 4 + rw-data ]
mov al [ edx + ebx + 0x4 ]
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_41775a
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_41f071
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_41775a
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_418de5
mov [ ebp - 0x10 ] eax
pop ecx
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
test [ edx + ebx + 0x4 ] 0x48
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_421d90
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_41778e
mov [ eax ] 0xc
call sub_41775a
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_428fdc
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
lea ecx [ ebp - 0x14 ]
push 0x0
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
inc edi
mov eax [ ecx * 4 + rw-data ]
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_41776d
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
shr esi 0x1
push eax
mov eax [ ebp - 0xc ]
push esi
push [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
inc edx
mov eax [ ecx * 4 + rw-data ]
dec esi
cmp [ ebp + 0x13 ] 0x1
push 0x2
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_41497e
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
mov edi esi
sub eax edx
mov ecx esi
sar eax 0x1
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
mov [ edx ] al
inc edx
mov eax [ ecx * 4 + rw-data ]
dec esi
pop edi
push 0xa
pop ecx
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x20 ] eax
lea ecx [ eax + edi ]
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x28 ] eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
add ecx 0x2
push 0xa
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
inc edi
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
add edi 0x2
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
sub esi edi
shr eax 0x1
push eax
push [ ebp + 0xc ]
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
mov edi eax
inc esi
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_41778e
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
cmp edi esi
setne cl
add edi edi
mov eax [ eax * 4 + rw-data ]
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_421d90
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_421d90
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
inc esi
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_421d90
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
add esi 0x2
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
push 0xa
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
pop ecx
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x26 ] al
sub_42a970
push 0x8
push r--data
call sub_41e030
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_41e075
retn
push 0xa
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a9f5
push ebx
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41942a
add esp 0xc
inc [ esi + 0x8 ]
sub_42a9fe
push 0x18
push r--data
call sub_41e030
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_417be8
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_417b60
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ab9e
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_41e075
retn
push 0x40
push 0x20
call sub_418d9d
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_42a970
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_417b60
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42aad6
push 0x0
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call sub_41942a
add esp 0xc
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_42aba7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
mov esi eax
sar edi 0x5
and esi 0x1f
shl esi 0x6
mov ecx [ edi * 4 + rw-data ]
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_42ac2d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41775a
and [ eax ] 0x0
call sub_41778e
mov [ eax ] 0x9
jmp r-xdata
call sub_41775a
and [ eax ] 0x0
call sub_41778e
mov [ eax ] 0x9
call sub_41f071
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42ac94
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_41778e
mov [ eax ] 0x9
call sub_41775a
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
mov edi ecx
sar ebx 0x5
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_42ad16
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx 0xc
mov eax [ eax * 4 + rw-data ]
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42ad3c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4263c8
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41778e
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_42ae49
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_42c987
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_42ae8c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
xor esi esi
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_419458
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] esi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax edi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov edi [ ebp - 0x18 ]
push r--data
push edi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov edi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
push edi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push esi
call eax
jmp r-xdata
call eax
mov esi eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov edi [ ebp + 0x10 ]
or edi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push esi
call eax
mov esi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_42b080
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b0a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4138c4
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_42b0e5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42b0e5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_42b0a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_42b195
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_42b1b4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_42b18c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_42b195
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_42b1c0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_42b2f7
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_41778e
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov [ esi ] 0x30
push ebx
lea ebx [ esi + 0x1 ]
mov eax ebx
test ecx ecx
jle r-xdata
call sub_41778e
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_416d80
inc eax
push eax
push ebx
push esi
call sub_4138e0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_42b3a7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
movzx edi [ eax + 0x6 ]
mov ebx 0x80000000
mov edx [ eax + 0x4 ]
mov ecx edi
mov eax [ eax ]
and edi 0x8000
shr ecx 0x4
and edx 0xfffff
and ecx 0x7ff
mov [ ebp - 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
shl ecx 0xb
or esi ebx
mov [ ebp + 0xc ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
add esi esi
mov ecx edx
add edi 0xffff
shr ecx 0x1f
or esi ecx
lea eax [ edx + edx ]
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b46f
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_42b3a7
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_42c9a6
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_414da3
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
mov [ ebx + 0xc ] esi
xor ecx ebp
pop esi
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
sub_42b500
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42b5e0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_42b5ff
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42d423
call sub_42d423
mov [ esi ] eax
jmp r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42d423
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42b65c
push 0x14
push r--data
call sub_41e030
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ecx
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] ecx
je r-xdata
call sub_41e075
retn
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_42b725
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b6f9
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_42b6f9
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_42ad16
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_42b725
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_415fda
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42bb1b
push [ ebp - 0x4 ]
mov esi eax
call sub_41497e
add esp 0x20
mov eax esi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42b7a9
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_413fdd
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d7c0
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
dec esi
mov edx [ ebp - 0x10 ]
mov eax ecx
inc ebx
push 0x0
mov [ ebp - 0x4 ] ebx
test [ eax + edx + 0x19 ] 0x4
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
inc edi
mov edx [ ebp - 0x10 ]
mov eax ebx
push 0x0
test [ eax + edx + 0x19 ] 0x4
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ecx edx
mov ebx [ ebp - 0x10 ]
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
inc edi
movzx ebx bx
jmp r-xdata
sub_42b8d8
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0x14 ]
call sub_413fdd
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d838
add esp 0xc
mov edx eax
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
push esi
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
inc ebx
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
mov [ ebp + 0x10 ] edx
test [ edx + ecx + 0x19 ] 0x10
pop edx
je r-xdata
test edi edi
jne r-xdata
shl esi 0x8
movzx eax al
or si ax
inc [ ebp - 0x8 ]
movzx eax si
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
pop esi
mov al [ ebx ]
mov si dx
movzx eax al
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
inc ebx
mov eax [ ebp - 0x4 ]
movzx eax ax
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
movzx esi [ eax ]
dec edi
inc [ ebp - 0x8 ]
mov [ ebp - 0x4 ] esi
movzx eax [ ebp - 0x4 ]
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_42ba93
push ebp
mov ebp esp
sub esp 0x18
call sub_419458
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x18 ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42bb1b
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
mov [ ebp - 0x38 ] 0xc
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_42db0a
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov edx 0xc0000000
and eax 0x3
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_41778e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f071
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
mov esi 0x400
and eax 0x700
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
mov eax 0x4000000
or [ ebp - 0xc ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_41775a
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_41778e
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f071
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_42a9fe
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push esi
mov [ eax ] 0x1
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_42ba93
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_41775a
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_41778e
mov [ eax ] 0x18
call sub_41778e
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_41776d
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_41776d
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_41778e
mov ebx [ eax ]
jmp r-xdata
call sub_41778e
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
and ecx 0x7fffffff
push [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
push esi
push eax
push [ ebp - 0xc ]
push ecx
push [ ebp + 0x10 ]
call sub_42ba93
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_42ac94
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x24 ] 0x80
mov al dl
mov ecx [ ebp + 0x14 ]
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
mov ecx [ eax * 4 + rw-data ]
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov eax esi
mov ecx [ ebp + 0x14 ]
and esi 0x1f
sar eax 0x5
shl esi 0x6
shr ecx 0x10
shl cl 0x7
mov edx [ eax * 4 + rw-data ]
mov al [ edx + esi + 0x24 ]
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_421d90
mov ecx eax
mov [ ebp - 0x2c ] eax
and ecx edx
mov [ ebp - 0x14 ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
push eax
push [ edi ]
call sub_42a1df
add esp 0xc
test eax eax
jne r-xdata
call sub_41775a
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
and esi 0x7fffffff
push [ ebp - 0x18 ]
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_42ba93
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_422a6c
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
shl edx 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_41776d
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_42aba7
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_42d954
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_42a1df
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_421d90
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_422a6c
pop ecx
call sub_41778e
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_421eec
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_421d90
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_42c26e
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c324
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_42c324
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_413fdd
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_42c57c
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_42c57c
add esp 0x10
movzx eax ax
dec [ ebp + 0x10 ]
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_42c41d
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
movzx ecx cx
and eax ecx
sub_42c473
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_41ec88
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_41e744
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_4091c0
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4138c4
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41e982
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_41eddc
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_42c57c
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_413fdd
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_41c181
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_42c41d
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
movzx eax cx
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
movzx ecx ax
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
jmp r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
sub_42c62d
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42c656
pop ebp
retn
sub_42c656
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
push edi
ja r-xdata
call sub_41778e
push 0x16
pop esi
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
xor eax eax
test edx edx
mov [ ecx ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
call sub_41778e
push 0x16
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
push 0x22
add eax 0xfffffffe
pop esi
cmp eax esi
ja r-xdata
call sub_41778e
push 0x22
jmp r-xdata
mov [ eax ] esi
call sub_41f071
mov eax esi
jmp r-xdata
xor eax eax
mov edi ecx
test edx edx
mov [ ebp + 0x18 ] eax
mov edx [ ebp + 0x8 ]
je r-xdata
pop esi
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x18 ]
mov ebx edi
push 0x2d
pop eax
mov [ ecx ] ax
lea edi [ ecx + 0x2 ]
xor eax eax
inc eax
neg edx
mov [ ebp + 0x18 ] eax
add eax 0x30
add eax 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ edi ] ax
add edi 0x2
inc ecx
test edx edx
je r-xdata
xor eax eax
mov [ edi ] ax
sub edi 0x2
xor eax eax
mov [ ecx ] ax
call sub_41778e
mov eax edx
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp + 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9
jbe r-xdata
mov ax [ ebx ]
movzx ecx [ edi ]
mov [ edi ] ax
sub edi 0x2
mov [ ebx ] cx
add ebx 0x2
cmp ebx edi
jb r-xdata
xor eax eax
sub_42c75d
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
sub esp 0x20
cmp [ rw-data ] 0x1
mov dx [ ebx + 0xc ]
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movdqu xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_42c80b
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
push 0x1
push edi
call sub_418d9d
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x0
push edi
push eax
push 0xffffffff
push [ esi ]
xor edi edi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_41497e
pop ecx
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_42ddfa
pop ecx
pop ecx
test eax eax
jns r-xdata
add esi 0x4
cmp [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_41497e
pop ecx
mov [ ebp - 0x4 ] edi
sub_42c8b2
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x14 ]
call sub_413fdd
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
push [ edi + 0x4 ]
push eax
push edx
push eax
push ecx
push 0x1001
push [ edi + 0x21c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41bdbb
add esp 0x20
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push eax
push edx
push ecx
call sub_42e0fd
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
sub_42c9a6
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov eax 0x7fff
push esi
mov esi 0x8000
mov [ ebp - 0x74 ] ebx
and edx esi
mov [ ebp - 0x30 ] 0xcccccccc
movzx esi [ ebp + 0x10 ]
inc ecx
and esi eax
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x64 ] eax
push edi
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov ecx edi
shr ecx 0x18
mov eax edx
shr eax 0x8
xor ebx ebx
mov [ ebp - 0x1a ] edi
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x16 ] si
mov [ ebp - 0x58 ] 0x5
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x70 ] 0xbffd
imul ecx eax 0x4d
imul eax edx 0x4d10
mov [ ebp - 0x54 ] 0x3fbf
add eax 0xecbced0c
add eax ecx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x20 ] ax
movsx eax cx
neg eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx + 0x3 ] cl
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov eax ecx
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc ecx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x48 ] ecx
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
mov [ ebp - 0x10 ] ebx
and edi 0x8000
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x44 ] edi
mov edi 0x7fff
and eax edi
mov [ ebp - 0x8 ] ebx
and ecx edi
mov [ ebp - 0x7c ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg eax
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x44 ] eax
test eax eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4138c4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x44 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x7c ]
cmp ax [ ebp - 0x64 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x70 ]
ja r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
jne r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edi
mov [ ebp - 0x68 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f081
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
add edx edx
shr ecx 0x1f
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x64 ]
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
push 0x0
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add edi 0x54
mov [ ebp - 0x6c ] edi
and eax 0x7
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov esi 0x8000
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x5c ] edi
and edi 0x7fff
xor [ ebp - 0x5c ] eax
and eax 0x7fff
and [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] eax
add eax edi
mov [ ebp - 0x60 ] edi
dec esi
movzx edi ax
mov eax [ ebp - 0x50 ]
cmp ax si
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x68 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x54 ] eax
lea edi [ esi + 0x4 ]
mov [ ebp - 0x64 ] edi
mov ecx edi
mov [ ebp - 0x58 ] ecx
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edi 0x3fff
shr eax 0x10
cmp ax di
jb r-xdata
xor eax eax
cmp [ ebp - 0x5c ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov ecx 0x7fff
cmp [ ebp - 0x60 ] cx
mov ecx [ ebp - 0x68 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
mov ecx edx
lea edi [ ebp - 0x3c ]
shr ecx 0x1f
movsd [ edi ] [ esi ]
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov eax edi
shr eax 0x1f
add edi edi
or edx eax
mov eax [ ebp - 0x44 ]
lea esi [ eax + eax ]
mov eax edi
or esi ecx
shr eax 0x1f
mov ecx edx
add edi edi
add edx edx
shr ecx 0x1f
or edx eax
add esi esi
mov eax [ ebp - 0x3c ]
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x70 ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
shr esi 0x1
mov eax ebx
shl ecx 0x1f
shl eax 0x1f
or esi ecx
shr edx 0x1
shr ebx 0x1
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
xor ebx ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
mov edx ebx
lea ecx [ ebp - 0xc ]
push 0x5
mov [ ebp - 0x50 ] edx
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x58 ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x54 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x74 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x74 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov edx eax
mov ecx [ ebp - 0x48 ]
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x74 ]
mov edi [ ebp - 0x64 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
add esi [ ebp - 0x34 ]
mov eax ecx
mov edx [ ebp - 0x48 ]
mov ecx edi
add edx edx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
shr ecx 0x1f
lea eax [ esi + esi ]
mov [ ebp - 0x1c ] edx
or eax ecx
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ebp - 0x15 ] bl
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x54 ]
dec eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
push 0x5
mov eax ebx
lea edx [ ebp - 0xc ]
pop esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x78 ]
mov [ ebp - 0x68 ] ebx
mov edx [ ebp - 0x68 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx ebx
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
add ebx ebx
mov eax 0xffff
mov [ ebp - 0x10 ] ebx
or esi ecx
add edi eax
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x54 ]
mov eax [ ebp - 0x70 ]
add edi 0x2
sub eax 0x2
mov [ ebp - 0x54 ] edi
dec esi
mov [ ebp - 0x70 ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x40 ] esi
mov esi [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov eax esi
mov ecx ebx
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x58 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x64 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
add edi 0xc002
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov [ ebp - 0x8 ] esi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x78 ]
mov edi [ ebp - 0x6c ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
xor edx edx
movzx eax ax
add edi eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edi
inc edx
mov edi [ ebp - 0x7c ]
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx esi
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x10 ] esi
or eax ecx
mov ecx 0xffff
add edi ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x40 ]
add eax 0x2
sub ecx 0x2
mov [ ebp - 0x88 ] eax
dec esi
mov [ ebp - 0x40 ] ecx
test esi esi
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
inc edi
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ ecx ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + edi ]
cmp ecx eax
mov [ ebp - 0x60 ] ecx
mov eax ecx
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x84 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_42d37a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_42d423
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_42d725
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_42d37a
push eax
mov [ ebp + 0xc ] eax
call sub_41ed55
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_42d725
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42d7c0
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_42d838
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d8a3
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_42e1d0
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov eax esi
jmp r-xdata
sub_42d8a3
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_413fdd
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_42e1d0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41909a
lea ecx [ ebp - 0x10 ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_41909a
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_42d954
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_421d90
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
mov [ ebp - 0x14 ] ecx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
call sub_41778e
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_421d90
mov ecx eax
add esp 0x10
and eax edx
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_421d90
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_42db34
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_41778e
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call sub_42ac2d
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
mov [ ebp - 0x8 ] eax
and ecx eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_41778e
mov [ eax ] 0xd
call sub_41775a
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_41775a
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_41778e
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_42db34
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_421fdb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_42db0a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
push 0x16
pop eax
pop ebp
retn
sub_42db34
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_42dc01
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0xc
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
xor eax eax
jmp r-xdata
push ebx
push esi
push edi
movzx edi [ ecx ]
lea esi [ ecx + 0x2 ]
xor ebx ebx
jmp r-xdata
cmp eax 0x2
jl r-xdata
mov esp ebp
pop ebp
retn
push 0x8
push edi
call sub_42c41d
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_42e231
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_42e231
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_41778e
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_42e231
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
test al 0x2
push 0x0
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_42ddfa
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push edi
test eax eax
jne r-xdata
push ebx
mov ebx [ eax ]
push esi
test ebx ebx
je r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
or eax 0xffffffff
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
push 0x3d
push ebx
call sub_42e420
mov esi eax
mov [ ebp - 0xc ] esi
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
cmp ebx esi
je r-xdata
mov edi [ rw-data ]
xor eax eax
cmp [ esi + 0x1 ] al
sete al
mov [ ebp - 0x4 ] eax
cmp edi [ rw-data ]
jne r-xdata
test edi edi
jne r-xdata
push edi
call sub_42e042
mov edi eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ rw-data ] edi
mov eax esi
sub eax ebx
push eax
push ebx
call sub_42e0a2
mov esi eax
pop ecx
pop ecx
test esi esi
js r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push ebx
call sub_41497e
mov edi [ ebp + 0x8 ]
pop ecx
and [ edi ] 0x0
test esi esi
jns r-xdata
push [ edi + esi * 4 ]
call sub_41497e
cmp [ ebp - 0x4 ] 0x0
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_418de5
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
call sub_42c80b
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ esi + 0x2 ]
cmp eax esi
jl r-xdata
neg esi
cmp [ edi + esi * 4 ] 0x0
jne r-xdata
mov [ edi + esi * 4 ] ebx
mov edi [ ebp + 0x8 ]
and [ edi ] 0x0
jmp r-xdata
or eax 0xffffffff
and [ eax ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ edi + esi * 4 + 0x4 ]
mov [ edi + esi * 4 ] eax
inc esi
cmp esi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x4
call sub_418de5
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
push eax
push 0x4
push [ rw-data ]
call sub_418e76
add esp 0xc
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x4
push esi
push [ rw-data ]
call sub_418e76
mov edi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
push ebx
call sub_416d80
pop ecx
add eax 0x2
push eax
call sub_418d9d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
and [ eax ] 0x0
mov edi [ ebp + 0x8 ]
and [ eax + esi * 4 + 0x4 ] 0x0
mov [ eax + esi * 4 ] ebx
and [ edi ] 0x0
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push ebx
call sub_41497e
and [ edi ] 0x0
pop ecx
push ebx
push ebx
call sub_416d80
pop ecx
add eax 0x2
push eax
push esi
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov ecx esi
sub ecx ebx
add ecx [ ebp - 0xc ]
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41497e
pop ecx
or [ ebp - 0x8 ] 0xffffffff
call sub_41778e
mov [ eax ] 0x2a
sub_42e042
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov eax esi
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_418d9d
mov edi eax
mov ebx edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push 0x9
call sub_4160d6
and [ edi ] 0x0
mov eax ebx
pop edi
pop ebx
sub esi edi
push eax
call sub_42e3d0
mov [ edi ] eax
add edi 0x4
pop ecx
mov eax [ esi + edi ]
test eax eax
jne r-xdata
sub_42e0a2
push ebp
mov ebp esp
mov ecx [ rw-data ]
push esi
mov esi ecx
push edi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi ecx
sar esi 0x2
neg esi
mov edi [ ebp + 0xc ]
add esi 0x4
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_42c89a
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub esi [ rw-data ]
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_42e0fd
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_413fdd
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0x10 ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
jmp r-xdata
push [ edi + 0x8 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_41bdbb
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
push esi
push eax
push edx
push ecx
call sub_42d8a3
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_41778e
mov [ eax ] 0x16
jmp r-xdata
sub_42e1d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_42e231
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_42e3d0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_416d80
lea edi [ eax + 0x1 ]
push edi
call sub_417852
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_414da3
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f081
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_42e435
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x10 ]
call sub_413fdd
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov edi [ ebp - 0xc ]
xor esi esi
cmp [ edi + 0x8 ] esi
jne r-xdata
call sub_41778e
mov [ eax ] 0x16
call sub_41f071
xor esi esi
jmp r-xdata
movzx ecx [ edx ]
test cx cx
jne r-xdata
push [ ebp + 0xc ]
push edx
call sub_414c30
pop ecx
pop ecx
mov esi eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax cl
test [ eax + edi + 0x19 ] 0x4
je r-xdata
movzx eax cx
cmp [ ebp + 0xc ] eax
jne r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax cx
cmp [ ebp + 0xc ] eax
je r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
mov esi edx
inc edx
movzx ecx cx
shl ecx 0x8
movzx eax al
or ecx eax
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea esi [ edx - 0x1 ]
jmp r-xdata
sub_42e4e0
mov ecx 0x1
movsd xmm5 [ r--data ]
jmp r-xdata
movd eax xmm0
and eax 0x7fffffff
cmp eax 0x7f800000
jae r-xdata
mov edx 0x8
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
cvtss2sd xmm0 xmm0
cmp ecx 0x2
jne r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42e67d
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x2
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
sub_42e4fe
mov ecx 0x3
movsd xmm5 [ r--data ]
movd eax xmm0
and eax 0x7fffffff
cmp eax 0x7f800000
jae r-xdata
mov edx 0x8
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
cvtss2sd xmm0 xmm0
cmp ecx 0x2
jne r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42e67d
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x2
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
sub_42e67d
sub esp 0x20
fwait
fnstcw [ esp ]
movzx eax [ esp ]
cmp edx 0x8
je r-xdata
fldcw [ r--data ]
mov [ esp ] edx
mov [ esp + 0x4 ] 0x0
movsd [ esp + 0x8 ] xmm0
movsd [ esp + 0x10 ] xmm0
mov [ esp + 0x18 ] eax
call sub_41e5a0
test [ edx + r--data ] al
jne r-xdata
add esp 0x20
retn
sub_42e6bf
mov ecx 0x1
movsd xmm5 [ r--data ]
jmp r-xdata
movdqa xmm1 xmm0
psrldq xmm1 0x4
movd eax xmm1
and eax 0x7fffffff
cmp eax 0x7ff00000
jae r-xdata
mov edx 0x8
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
jne r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jbe r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jae r-xdata
cmp ecx 0x4
je r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42e67d
movdqa xmm3 xmm0
cmp ecx 0x4
jne r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x1
call sub_42e67d
mov edx 0x1
call sub_42e67d
mov edx 0x10
call sub_42e67d
jmp r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
movdqa xmm4 xmm3
psllq xmm4 0x23
psrlq xmm4 0x23
movd eax xmm4
or eax eax
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm3 xmm2
jb r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
mov edx 0x2
call sub_42e67d
mov edx 0x10
call sub_42e67d
jmp r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
comisd xmm0 xmm5
jae r-xdata
mov edx 0x10
call sub_42e67d
subpd xmm3 xmm2
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jb r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
jmp r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x2
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
sub_42e6dd
mov ecx 0x5
movsd xmm5 [ r--data ]
movdqa xmm1 xmm0
psrldq xmm1 0x4
movd eax xmm1
and eax 0x7fffffff
cmp eax 0x7ff00000
jae r-xdata
mov edx 0x8
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
jne r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jbe r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jae r-xdata
cmp ecx 0x4
je r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42e67d
movdqa xmm3 xmm0
cmp ecx 0x4
jne r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x1
call sub_42e67d
mov edx 0x1
call sub_42e67d
mov edx 0x10
call sub_42e67d
jmp r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
movdqa xmm4 xmm3
psllq xmm4 0x23
psrlq xmm4 0x23
movd eax xmm4
or eax eax
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm3 xmm2
jb r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
mov edx 0x2
call sub_42e67d
mov edx 0x10
call sub_42e67d
jmp r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
comisd xmm0 xmm5
jae r-xdata
mov edx 0x10
call sub_42e67d
subpd xmm3 xmm2
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jb r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
jmp r-xdata
mov edx 0x10
call sub_42e67d
mov edx 0x2
call sub_42e67d
xor eax eax
mov edx 0x80000000
retn
sub_42e7ec
test edx edx
jne r-xdata
movd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movd xmm6 [ r--data ]
movd xmm0 ecx
movd xmm1 edx
punpckldq xmm0 xmm1
mov eax 0x20
bsr ecx edx
sub eax ecx
movd xmm2 eax
psllq xmm0 xmm2
movdqa xmm3 xmm0
psllq xmm3 0x33
psrlq xmm3 0x33
movdqa xmm1 xmm3
psrlq xmm0 0xd
psllq xmm0 0x1
pcmpgtd xmm3 xmm4
punpckldq xmm3 xmm3
psubq xmm0 xmm3
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
psubq xmm0 xmm1
psubq xmm6 xmm2
psllq xmm6 0x34
paddq xmm0 xmm6
retn
cvtsi2sd xmm0 ecx
shr ecx 0x1f
movsd xmm1 [ ecx * 8 + r--data ]
addsd xmm0 xmm1
retn
sub_42e87d
mov eax ecx
sar eax 0x1f
cmp eax edx
jne r-xdata
test edx edx
jge sub_42e7ec
cvtsi2sd xmm0 ecx
retn
movsd xmm7 [ r--data ]
neg ecx
adc edx 0x0
neg edx
call sub_42e7ec
orps xmm0 xmm7
retn
sub_42f420
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x10
jb r-xdata
mov [ rw-data ] 0xf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_401a90
push rw-data
lea ecx [ ebp - 0x1 ]
call sub_401c20
lea ecx [ ebp - 0x1 ]
call sub_401a90
push esi
call j_sub_41497e#2
add esp 0x4
pop esi
sub_401000
push 0x40
push r--data
mov ecx rw-data
call sub_4018b0
push sub_42f420
call sub_41448e
pop ecx
retn
sub_401020
push sub_42f4a0
call sub_41448e
pop ecx
retn
sub_401030
push sub_42f490
call sub_41448e
pop ecx
retn
sub_401040
push sub_42f480
call sub_41448e
pop ecx
retn
sub_40104c
push sub_42f4ab
call sub_41448e
pop ecx
retn
sub_401058
push sub_42f4b5
call sub_41448e
pop ecx
retn
sub_401064
push 0x1
push 0x0
push rw-data
mov ecx rw-data
call sub_40ece0
push sub_42f4bf
call sub_41448e
pop ecx
retn
sub_4010bb
mov ecx rw-data
jmp sub_40fdcc
sub_4010c5
mov ecx rw-data
call sub_40fe25
push sub_42f4d3
call sub_41448e
pop ecx
retn
sub_4010db
mov ecx rw-data
call sub_40fe25
push sub_42f4dd
call sub_41448e
pop ecx
retn
sub_4010f1
push sub_42f4e7
call sub_41448e
pop ecx
retn
sub_4010fd
mov ecx rw-data
call sub_40fe25
push sub_42f4f1
call sub_41448e
pop ecx
retn
sub_401150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4011d0
mov eax r--data
retn
sub_401250
mov eax r--data
retn
sub_4012b0
mov eax r--data
retn
sub_4016a0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push [ esi ]
call j_sub_41497e#2
add esp 0x4
sub_401c20
retn 0x4
j_sub_414814
jmp sub_414814
sub_401de0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401e30
add ecx 0x4
mov eax 0x1
[ ecx ] eax
retn
sub_401e40
lea eax [ ecx + 0x4 ]
or edx 0xffffffff
[ eax ] edx
mov eax 0x0
cmove eax ecx
retn
sub_401e60
mov [ ecx ] r--data
retn
sub_401e70
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_401f60
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
movzx eax al
push eax
call sub_40ff4c
add esp 0x8
pop ebp
retn 0x4
sub_401fd0
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
movzx eax al
push eax
call sub_41004b
add esp 0x8
pop ebp
retn 0x4
sub_402040
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_402070
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_403df0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_41497e
add esp 0x4
sub_4041e0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
cdq
retn
sub_404d64
mov eax r-xdata
retn
sub_404e50
mov ecx [ ecx ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0x8 ]
sub_405820
push ebp
mov ebp esp
push ecx
mov edx [ ecx ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call [ edx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_405840
push ebp
mov ebp esp
push ecx
mov edx [ ecx ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_405860
mov al [ ecx + 0xc ]
retn
sub_405870
mov al [ ecx + 0xd ]
retn
sub_405b00
push ebp
mov ebp esp
push ecx
mov edx [ ecx ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call [ edx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_405b20
push esi
mov esi ecx
push [ esi + 0x8 ]
call j_sub_41497e
push [ esi + 0x10 ]
call j_sub_41497e
push [ esi + 0x14 ]
call j_sub_41497e
add esp 0xc
pop esi
retn
sub_406687
mov ecx [ ebp - 0x14 ]
call sub_405b20
push 0x0
push 0x0
call sub_416e0b
int3
sub_408c20
push esi
lea esi [ ecx + 0x68 ]
mov ecx esi
call sub_409da0
push esi
mov [ esi ] r--data
call sub_410260
add esp 0x4
pop esi
retn
sub_408c40
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + ecx - 0x1c ] eax
retn
sub_408e10
push ecx
mov [ ecx ] r--data
call sub_410260
pop ecx
retn
sub_409150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebp
retn 0x14
sub_409180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebp
retn 0x20
sub_4091b0
mov eax ecx
retn 0xc
sub_4091c0
xor eax eax
retn
sub_4091d0
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x8 ]
mov [ edx + ecx - 0xc ] eax
retn
sub_409260
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
retn
push eax
call sub_4154c3
pop ecx
sub_409270
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
retn
push eax
call sub_415532
pop ecx
sub_40a9e0
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x2c ]
mov eax [ eax ]
cdq
retn
sub_40bce0
mov al 0x1
retn
sub_40bcf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax 0x3
pop ebp
retn 0x1c
sub_40bd10
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x10
sub_40bd30
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
cmovb eax [ ebp + 0x14 ]
pop ebp
retn 0x10
sub_40e834
sub ecx [ ecx - 0x4 ]
jmp sub_40a670
sub_40e83c
sub ecx [ ecx - 0x4 ]
jmp sub_40a6b0
sub_40e844
sub ecx [ ecx - 0x4 ]
jmp sub_40a600
sub_40e84c
sub ecx [ ecx - 0x4 ]
jmp sub_40a580
sub_40e854
sub ecx [ ecx - 0x4 ]
jmp sub_40a4e0
sub_40ed71
sub ecx [ ecx - 0x4 ]
jmp sub_40ec70
sub_40f8a9
sub ecx [ ecx - 0x4 ]
jmp sub_40f530
sub_40f905
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f920
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f93b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f956
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f971
mov [ ecx ] r--data
jmp sub_414814
sub_40faf3
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40fbf2
mov eax [ rw-data ]
retn
sub_40fd59
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_40fda0
mov [ rw-data ] 0x1
call sub_410ee3
pop ecx
j_sub_4185c4
jmp sub_4185c4
sub_40fed7
push ebp
mov ebp esp
pop ebp
jmp sub_414729
sub_410381
push ebp
mov ebp esp
pop ebp
jmp sub_4102df
sub_41038a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ eax * 4 + r--data ]
push [ ebp + 0x8 ]
call sub_418ec4
add esp 0xc
pop ebp
retn
sub_410f11
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_410f1f
push ebp
mov ebp esp
push 0x0
push 0xfa0
push [ ebp + 0x8 ]
call sub_41942a
add esp 0xc
pop ebp
retn
sub_410f36
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_410f44
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41200d
push ebp
mov ebp esp
pop ebp
jmp sub_41280f
sub_412871
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4135b1
push ebp
mov ebp esp
pop ebp
jmp sub_413734
sub_4135ba
push ebp
mov ebp esp
pop ebp
jmp sub_413830
sub_4143d0
call sub_416241
retn
sub_41448e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_414392
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_4144a3
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
call sub_4192b8
pop ecx
pop ecx
jmp sub_4192d7
call eax
j_sub_41497e#2
jmp sub_41497e
sub_414602
push ebp
mov ebp esp
push 0x8
call sub_41460e
pop ebp
retn
sub_4146de
push ecx
mov [ ecx ] r--data
call sub_41ee6f
pop ecx
retn
sub_41477a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_414795
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
mov esi ecx
push eax
call sub_4147b1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4147d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx + 0x8 ] 0x0
pop ebp
retn 0x8
sub_414814
mov [ ecx ] r--data
jmp sub_4148b5
sub_4148b5
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_41497e
pop ecx
sub_4148d1
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_414962
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416457
add esp 0x14
pop ebp
retn
sub_414d5b
push ebp
mov ebp esp
pop ebp
jmp sub_414d64
sub_414d78
call sub_41cf59
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41c5b8
sub_414f1b
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414df8
add esp 0x18
pop ebp
retn
sub_4150d4
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_415036
pop ecx
pop ecx
pop ebp
retn
sub_41522f
push esi
call sub_415532
pop ecx
retn
sub_415496
call sub_41591f
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_41497e
and [ rw-data ] 0x0
pop ecx
retn
call sub_421761
sub_4156e1
push esi
call sub_415532
pop ecx
retn
sub_4157bc
push esi
call sub_415532
pop ecx
retn
sub_41591f
push 0x1
call sub_415981
pop ecx
retn
sub_415979
push esi
call sub_415532
pop ecx
retn
sub_415a29
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_41556c
pop ecx
pop ecx
retn
sub_415a5c
push 0x1
call sub_417cca
pop ecx
retn
sub_415b56
push esi
call sub_415532
pop ecx
retn
sub_415c95
push esi
call sub_415532
pop ecx
retn
sub_415eef
push esi
call sub_415532
pop ecx
retn
sub_415fd2
push esi
call sub_415532
pop ecx
retn
sub_4160c0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41608c
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4160f2
push 0x1
push 0x1
push 0x0
call sub_41624a
add esp 0xc
retn
sub_416101
push 0x1
push 0x0
push 0x0
call sub_41624a
add esp 0xc
retn
sub_416194
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41624a
add esp 0xc
pop ebp
retn
sub_416238
push 0x8
call sub_417b60
pop ecx
retn
sub_416241
push 0x8
call sub_417cca
pop ecx
retn
sub_416364
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_417cca
pop ecx
sub_416379
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41624a
add esp 0xc
pop ebp
retn
sub_4164cc
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416457
add esp 0x14
pop ebp
retn
sub_4164e7
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_416598
call sub_4154bd
add eax 0x20
push eax
push 0x1
call sub_41556c
pop ecx
pop ecx
retn
sub_4166c2
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_423eb5
pop ecx
pop ecx
retn
sub_4166d6
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4160f2
push esi
call sub_416194
sub_4166f0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_41e075
retn
sub_4166ff
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
push [ ebp + 0x8 ]
call sub_422ba3
push 0xff
call sub_4160c0
call sub_422b46
_start
call sub_42436d
jmp sub_4165ab
sub_416e6e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4172d7
push ebp
mov ebp esp
call sub_4172ee
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_424f8a
sub_4172ee
mov eax sub_4244ec
mov [ rw-data ] sub_424dd8
mov [ rw-data ] eax
mov [ rw-data ] sub_424e69
mov [ rw-data ] sub_424ec3
mov [ rw-data ] sub_424f48
mov [ rw-data ] eax
mov [ rw-data ] sub_42450d
mov [ rw-data ] sub_424e81
mov [ rw-data ] sub_424de9
mov [ rw-data ] sub_424ed4
retn
sub_41734e
call sub_41cf59
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_41c5b8
sub_417374
call sub_41cf59
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xa0
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_41c5b8
sub_41739c
call sub_41cf59
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x74 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_41c5b8
sub_417abf
push 0xc
call sub_417cca
pop ecx
retn
sub_417c88
push 0xa
call sub_417cca
pop ecx
retn
sub_417cca
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417d3f
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_417d48
mov esp [ ebp - 0x18 ]
call sub_422ef8
sub_417d6a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4147f1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417d85
mov [ ecx ] r--data
jmp sub_414814
sub_417e4a
push [ ebp - 0x14 ]
call sub_418036
pop ecx
retn
sub_417f7b
push 0x4
mov eax sub_42f3f6
call sub_416eb5
call sub_41cf59
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_422f2c
call sub_422ec0
sub_4185c4
call sub_41cf59
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_41867b
xor eax eax
inc eax
retn
sub_41867f
mov esp [ ebp - 0x18 ]
call sub_422ef8
sub_418836
xor eax eax
inc eax
retn
sub_41883a
mov esp [ ebp - 0x18 ]
call sub_422ef8
sub_418919
push [ ebp - 0x14 ]
call sub_41884a
pop ecx
retn
sub_418957
call sub_41cf59
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41cf59
dec [ eax + 0x90 ]
sub_418ab9
call sub_41cf59
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x90 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_41c5b8
sub_418f80
push esi
call sub_415532
pop ecx
retn
sub_419092
push esi
call sub_415532
pop ecx
retn
sub_4192b8
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
not edx
mov ecx [ ebp + 0x8 ]
and edx eax
and ecx [ ebp + 0xc ]
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_4193ac
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_4193ca
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_4193e9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_419723
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_419731
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
pop ebp
retn
sub_41973f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_419754
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_419770
sub esp 0xc
fst [ esp ]
call sub_4266d8
call sub_41978d
add esp 0xc
retn
sub_41bf73
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn 0x4
sub_41c62f
push 0xc
call sub_417cca
pop ecx
retn
sub_41c683
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41c9e0
pop ecx
mov [ rw-data ] 0x1
sub_41c9d7
push 0xd
call sub_417cca
pop ecx
retn
sub_41cb52
push 0xd
call sub_417cca
pop ecx
retn
sub_41cf44
push 0xd
call sub_417cca
pop ecx
retn
sub_41cf50
push 0xc
call sub_417cca
pop ecx
retn
sub_41d081
push 0xd
call sub_417cca
pop ecx
retn
sub_41d08a
push 0xc
call sub_417cca
pop ecx
retn
sub_41d109
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_417b94
push eax
call sub_4193ca
or [ rw-data ] 0xffffffff
pop ecx
sub_41d16f
push 0xc
call sub_417cca
pop ecx
retn
sub_41d80e
push 0xc
call sub_417cca
pop ecx
retn
sub_41d81d
push 0xc
call sub_417cca
pop ecx
retn
sub_41d850
and [ esi + 0x70 ] 0xffffffef
retn
sub_41e075
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41e3fd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41ed84
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_41edcb
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41ee5f
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41eed7
push 0xe
call sub_417cca
pop ecx
retn
sub_41ef06
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41f039
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41fdef
call [ GetProcessHeap@IAT ]
xor ecx ecx
mov [ rw-data ] eax
test eax eax
setne cl
mov eax ecx
retn
sub_41fe0a
mov eax rw-data
retn
sub_41fe16
mov eax rw-data
retn
sub_42010c
push 0x6
call sub_417cca
pop ecx
retn
sub_420156
push 0x6
call sub_417cca
pop ecx
retn
sub_4205d3
push 0x7
call sub_417cca
pop ecx
retn
sub_421730
push 0xb
call sub_417cca
pop ecx
retn
sub_4217f5
push 0x1
call sub_417cca
pop ecx
retn
sub_4218b7
push esi
call sub_415532
pop ecx
retn
sub_421d66
push edi
call sub_42ad16
pop ecx
retn
sub_421ecb
push edi
call sub_42ad16
pop ecx
retn
sub_421fb3
push esi
call sub_42ad16
pop ecx
retn
sub_422a44
push esi
call sub_42ad16
pop ecx
retn
sub_422e39
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_422ea1
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_422ec0
push 0x8
push r--data
call sub_41e030
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_422ef8
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_422ee4
xor eax eax
inc eax
retn
sub_422ef8
push 0x8
push r--data
call sub_41e030
call sub_41cf59
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4192d7
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_422f18
xor eax eax
inc eax
retn
sub_422f2c
call sub_41cf59
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_422ef8
call eax
sub_422f3f
push sub_422ef8
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_422f50
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_422f5d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4230fa
test ebx ebx
je r-xdata
retn
push 0x0
call sub_417cca
pop ecx
sub_42316e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_423ea7
push sub_423e66
call sub_419723
pop ecx
xor eax eax
retn
sub_424320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4248ef
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424a5e
add esp 0x18
pop ebp
retn
sub_424dd8
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_424de9
pop ecx
pop ecx
pop ebp
retn
sub_424e69
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424e81
add esp 0x10
pop ebp
retn
sub_424ec3
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_424ed4
pop ecx
pop ecx
pop ebp
retn
sub_425328
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42524a
add esp 0x18
pop ebp
retn
sub_425740
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_4257f0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_42a0a0
sub_425806
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_42a0a0
sub_425ac0
push 0x1
call sub_417cca
pop ecx
retn
sub_425e26
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_425d50
add esp 0xc
pop ebp
retn 0x4
sub_425e59
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_42b195
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_425e8b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_425d50
add esp 0xc
pop ebp
retn 0x8
sub_4262f9
push esi
call sub_42ad16
pop ecx
retn
sub_426402
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4263c8
pop ecx
pop ecx
pop ebp
retn
sub_4265d9
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_4265e3
or cl cl
je r-xdata
retn
fchs
sub_426650
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_426665
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_42667c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_4266d8
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_429154
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429030
add esp 0x14
pop ebp
retn
sub_4293bb
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429289
add esp 0x10
pop ebp
retn
sub_42a1b7
push esi
call sub_42ad16
pop ecx
retn
sub_42a9f5
push 0xa
call sub_417cca
pop ecx
retn
sub_42aad6
push 0xa
call sub_417cca
pop ecx
retn
sub_42ab9e
push 0xb
call sub_417cca
pop ecx
retn
sub_42ae31
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ad3c
add esp 0x10
pop ebp
retn
sub_42b072
push 0x2
call sub_4160d6
sub_42b169
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_42b0a0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_42b1b4
call eax
retn
sub_42b773
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42b65c
add esp 0x18
pop ebp
retn
sub_42b791
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b7a9
add esp 0x10
pop ebp
retn
sub_42b8c0
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b8d8
add esp 0x10
pop ebp
retn
sub_42c749
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42dde2
add esp 0xc
pop ebp
retn
sub_42c89a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c8b2
add esp 0x10
pop ebp
retn
sub_42c970
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_42c987
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_42dde2
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42dc01
add esp 0x10
pop ebp
retn
sub_42e420
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e435
add esp 0xc
pop ebp
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_42e8b0
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov ecx [ ebp - 0x28 ]
jmp sub_4016a0
sub_42e8c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42e8f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42e910
mov ecx [ ebp - 0x18 ]
jmp sub_40feae
sub_42e918
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_403df0
sub_42e923
mov ecx [ ebp - 0x18 ]
add ecx 0xc
jmp sub_403df0
sub_42e92e
mov ecx [ ebp - 0x18 ]
add ecx 0x14
jmp sub_403df0
sub_42e939
mov ecx [ ebp - 0x18 ]
add ecx 0x1c
jmp sub_403df0
sub_42e944
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_403df0
sub_42e94f
mov ecx [ ebp - 0x18 ]
add ecx 0x2c
jmp sub_403df0
sub_42e95a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42e980
mov eax [ ebp + 0x8 ]
push eax
call j_sub_41497e#2
pop ecx
retn
sub_42e98b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42e9b0
lea ecx [ ebp + 0x14 ]
jmp sub_4016a0
sub_42e9b8
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42e9c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42e9e0
lea ecx [ ebp - 0x28 ]
jmp sub_4016a0
sub_42e9e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ea10
lea ecx [ ebp - 0x24c8 ]
jmp sub_40e8c0
sub_42ea1b
lea ecx [ ebp - 0x24d0 ]
jmp sub_401e70
sub_42ea26
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2574 ]
mov ecx [ edx - 0x2578 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ea60
lea ecx [ ebp - 0x2c ]
jmp sub_404e50
sub_42ea78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eaa0
mov ecx [ ebp - 0x10 ]
jmp sub_404e50
sub_42eaa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ead0
lea ecx [ ebp - 0x4c ]
jmp sub_401e70
sub_42ead8
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42eae0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eb10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eb30
lea ecx [ ebp - 0x1c ]
jmp sub_404290
sub_42eb38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4138c4
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eb60
lea ecx [ ebp - 0x60 ]
jmp sub_401e70
sub_42eb68
lea ecx [ ebp - 0x44 ]
jmp sub_4016a0
sub_42eb70
lea ecx [ ebp - 0x60 ]
jmp sub_401e70
sub_42eb78
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42eb80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ebb0
lea ecx [ ebp - 0x4c ]
jmp sub_401e70
sub_42ebb8
lea ecx [ ebp - 0x44 ]
jmp sub_4016a0
sub_42ebc0
lea ecx [ ebp - 0x5c ]
jmp sub_401e70
sub_42ebc8
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42ebd0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ec00
lea ecx [ ebp - 0x18 ]
jmp sub_40feae
sub_42ec08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ec30
lea ecx [ ebp - 0x28 ]
jmp sub_404e50
sub_42ec38
lea ecx [ ebp - 0x28 ]
jmp sub_404290
sub_42ec40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ec60
lea ecx [ ebp - 0x14 ]
jmp sub_401e70
sub_42ec68
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ec90
lea ecx [ ebp - 0x20 ]
jmp sub_404e50
sub_42ec98
lea ecx [ ebp - 0x20 ]
jmp sub_404290
sub_42eca0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ecc0
mov eax [ ebp + 0x8 ]
push eax
call j_sub_41497e#2
pop ecx
retn
sub_42eccb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ecf0
mov eax [ ebp + 0x8 ]
push eax
call j_sub_41497e#2
pop ecx
retn
sub_42ecfb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x44 ]
jmp sub_401d40
sub_42ed14
mov ecx [ ebp + 0x8 ]
jmp sub_401e60
sub_42ed1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ed40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ed60
lea ecx [ ebp - 0x10e4 ]
jmp sub_4016a0
sub_42ed6b
lea ecx [ ebp - 0x10e4 ]
jmp sub_409b90
sub_42ed76
lea ecx [ ebp - 0x10c4 ]
jmp sub_409b90
sub_42ed81
lea ecx [ ebp - 0x10fc ]
jmp sub_4016a0
sub_42ed8c
lea ecx [ ebp - 0x10fc ]
jmp sub_4016a0
sub_42ed97
lea ecx [ ebp - 0x10fc ]
jmp sub_4016a0
sub_42eda2
lea ecx [ ebp - 0x10cc ]
jmp sub_404290
sub_42edad
lea ecx [ ebp - 0x10fc ]
jmp sub_4016a0
sub_42edb8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x11a4 ]
mov ecx [ edx - 0x11a8 ]
xor ecx eax
call sub_4138c4
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42edf0
lea ecx [ ebp - 0x2b4 ]
jmp sub_408bc0
sub_42edfb
lea ecx [ ebp - 0x1fc ]
jmp sub_4016a0
sub_42ee06
lea ecx [ ebp - 0x2e0 ]
jmp sub_401e70
sub_42ee11
mov eax [ ebp - 0x2cc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2cc ] 0xfffffffe
lea ecx [ ebp - 0x17c ]
jmp sub_408e10
sub_42ee33
lea ecx [ ebp - 0x1c4 ]
jmp sub_409e20
sub_42ee3e
mov ecx [ ebp - 0x2e8 ]
jmp sub_408e20
sub_42ee49
lea ecx [ ebp - 0x1e4 ]
jmp sub_408c20
sub_42ee54
lea ecx [ ebp - 0x12c ]
jmp sub_4016a0
sub_42ee5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f0 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ee90
lea ecx [ ebp - 0x3c ]
jmp sub_404e50
sub_42ee98
lea ecx [ ebp - 0x3c ]
jmp sub_404e50
sub_42eea0
lea ecx [ ebp - 0x28 ]
jmp sub_401e70
sub_42eea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eed0
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42eed8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ef00
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42ef08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ef30
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
add ecx 0x70
jmp sub_408e10
sub_42ef4c
lea ecx [ ebp - 0x14 ]
jmp sub_401e70
sub_42ef54
mov ecx [ ebp - 0x1c ]
add ecx 0x18
jmp sub_408c40
sub_42ef5f
mov ecx [ ebp - 0x1c ]
add ecx 0x10
jmp sub_4091f0
sub_42ef6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42ef90
lea ecx [ ebp + 0x8 ]
jmp sub_401e70
sub_42ef98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42efc0
lea ecx [ ebp + 0x8 ]
jmp sub_401e70
sub_42efc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42eff0
lea ecx [ ebp + 0xc ]
jmp sub_401e70
sub_42eff8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f020
lea ecx [ ebp - 0x2c ]
jmp sub_4016a0
sub_42f028
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f050
lea ecx [ ebp + 0x8 ]
jmp sub_401e70
sub_42f058
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_408c40
sub_42f063
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f080
lea ecx [ ebp - 0x7c ]
jmp sub_401e70
sub_42f088
lea ecx [ ebp - 0x4c ]
jmp sub_4016a0
sub_42f090
lea ecx [ ebp - 0x6c ]
jmp sub_4016a0
sub_42f098
lea ecx [ ebp - 0x6c ]
jmp sub_4016a0
sub_42f0a0
lea ecx [ ebp - 0x78 ]
jmp sub_401e70
sub_42f0a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f0d0
lea ecx [ ebp - 0x44 ]
jmp sub_401e70
sub_42f0d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f100
lea ecx [ ebp - 0x48 ]
jmp sub_401e70
sub_42f108
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f130
lea ecx [ ebp - 0x50 ]
jmp sub_401e70
sub_42f138
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f160
lea ecx [ ebp - 0x48 ]
jmp sub_4016a0
sub_42f168
lea ecx [ ebp - 0x60 ]
jmp sub_4016a0
sub_42f170
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4138c4
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f1a0
lea ecx [ ebp - 0x78 ]
jmp sub_401e70
sub_42f1a8
lea ecx [ ebp - 0x50 ]
jmp sub_4016a0
sub_42f1b0
lea ecx [ ebp - 0x6c ]
jmp sub_401e70
sub_42f1b8
lea ecx [ ebp - 0x38 ]
jmp sub_4016a0
sub_42f1c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f1f0
lea ecx [ ebp - 0x84 ]
jmp sub_401e70
sub_42f1fb
lea ecx [ ebp - 0x5c ]
jmp sub_4016a0
sub_42f203
lea ecx [ ebp - 0x74 ]
jmp sub_401e70
sub_42f20b
lea ecx [ ebp - 0x44 ]
jmp sub_4016a0
sub_42f213
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f240
lea ecx [ ebp - 0x2c ]
jmp sub_404e50
sub_42f248
lea ecx [ ebp - 0x2c ]
jmp sub_404290
sub_42f250
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f270
lea ecx [ ebp - 0x30 ]
jmp sub_404e50
sub_42f278
lea ecx [ ebp - 0x30 ]
jmp sub_404e50
sub_42f280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f2a0
lea ecx [ ebp - 0x30 ]
jmp sub_404e50
sub_42f2a8
lea ecx [ ebp - 0x30 ]
jmp sub_404e50
sub_42f2b0
lea ecx [ ebp - 0x1c ]
jmp sub_401e70
sub_42f2b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f2e0
mov ecx [ ebp - 0x10 ]
jmp sub_40e860
sub_42f2e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f310
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
add ecx 0x60
jmp sub_408e10
sub_42f32c
lea ecx [ ebp - 0x14 ]
jmp sub_401e70
sub_42f334
mov ecx [ ebp - 0x1c ]
add ecx 0x8
jmp sub_4091d0
sub_42f33f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f360
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_408e10
sub_42f37c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f3a0
lea ecx [ ebp - 0xb8 ]
jmp sub_40f5a0
sub_42f3ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_4138c4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f3d3
lea ecx [ ebp - 0x10 ]
jmp sub_40feae
sub_42f3db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f3f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4138c4
mov eax r--data
jmp sub_4172a1
sub_42f480
mov [ rw-data ] r--data
retn
sub_42f490
mov [ rw-data ] r--data
retn
sub_42f4a0
mov [ rw-data ] r--data
retn
sub_42f4ab
mov ecx rw-data
jmp sub_40fb08
sub_42f4b5
mov ecx rw-data
jmp sub_401e70
sub_42f4bf
mov ecx rw-data
jmp sub_406790
sub_42f4c9
mov ecx rw-data
jmp sub_4091f0
sub_42f4d3
mov ecx rw-data
jmp sub_40fe86
sub_42f4dd
mov ecx rw-data
jmp sub_40fe86
sub_42f4e7
mov ecx rw-data
jmp sub_410eba
sub_42f4f1
mov ecx rw-data
jmp sub_40fe86
