sub_401000
push ebp
mov ebp esp
sub esp 0x18
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx edx
mov eax edx
mov [ ebp - 0x18 ] ecx
push ebx
shr eax 0x3
shr ecx 0x3
push esi
mov esi [ ebp + 0x14 ]
cmp eax ecx
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ecx
jae r-xdata
mov ecx eax
and edx 0x7
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx edx
mov edx [ ebp - 0x18 ]
and edx 0x7
cmp ecx edx
mov [ ebp + 0x10 ] edx
jae r-xdata
mov [ ebp + 0x14 ] edx
and [ ebp + 0x14 ] 0x7
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ edx + eax - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc eax
cmp eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jb r-xdata
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ eax + edx - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ edi + esi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ edi + eax ] bl
inc ecx
inc edi
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov ecx eax
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx [ ebp + 0x14 ]
cmp ecx 0x8
jae r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ esi + edi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ eax + edi ] bl
inc ecx
inc edi
cmp edi 0xa
jl r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
sub_401139
push ebp
mov ebp esp
sub esp 0x118
and [ ebp - 0x118 ] 0x0
push ebx
push esi
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
push rw-data
or ebx 0xffffffff
stosb [ edi ]
call [ LoadLibraryA@IAT ]
mov edi eax
push rw-data
lea eax [ ebp - 0x118 ]
push rw-data
push eax
mov [ ebp - 0x14 ] edi
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x10 ] eax
call esi
push rw-data
push edi
mov [ ebp - 0x8 ] eax
call esi
cmp [ rw-data ] 0x5
mov [ ebp - 0xc ] eax
mov edi 0x104
jne r-xdata
xor esi esi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
push 0x80000002
push rw-data
push [ ebp - 0x14 ]
call esi
call eax
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp ebx esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] 0x6
jne r-xdata
push edi
push [ ebp + 0x8 ]
push 0x1
push esi
push esi
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov ebx eax
cmp ebx esi
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x118 ]
push esi
push eax
call memset
push [ ebp + 0x8 ]
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call [ rw-data ]
add esp 0x18
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ ebp - 0x10 ]
mov ebx eax
cmp ebx esi
jne r-xdata
push [ ebp - 0x4 ]
call [ ebp - 0xc ]
jmp r-xdata
push edi
push rw-data
push 0x1
push esi
push rw-data
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov ebx eax
cmp ebx esi
jne r-xdata
lea eax [ ebp - 0x118 ]
push edi
push eax
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov ebx eax
call [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000002
call [ ebp - 0x10 ]
mov ebx eax
cmp ebx esi
jne r-xdata
push edi
push rw-data
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov ebx eax
sub_4012c4
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
push 0x40
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x113 ]
mov [ ebp - 0x114 ] bl
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x114 ]
push eax
call [ rw-data ]
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call [ rw-data ]
push ebx
push 0x80
push 0x3
push ebx
push 0x1
lea eax [ ebp - 0x114 ]
push 0x80000000
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
push ebx
push [ ebp + 0x8 ]
push esi
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push esi
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401386
push ebx
push esi
push edi
mov edi [ LoadLibraryA@IAT ]
push rw-data
call edi
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
mov ebx rw-data
push rw-data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push rw-data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
retn
sub_40140d
push ebp
mov ebp esp
push esi
push edi
xor edi edi
mov esi [ GetProcAddress@IAT ]
push edi
push [ ebp + 0x10 ]
push edi
push 0x4
push edi
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call esi
call eax
cmp eax edi
mov [ ebp + 0x8 ] eax
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push edi
push edi
push edi
push 0x6
push eax
push rw-data
push [ rw-data ]
call esi
call eax
mov ebx eax
cmp ebx edi
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call [ rw-data ]
add esp 0xc
push rw-data
push edi
push [ ebp + 0x10 ]
push ebx
call sub_401000
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
sub_401494
push ebp
mov ebp esp
sub esp 0x104
and [ ebp - 0x104 ] 0x0
push ebx
push esi
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push edi
push eax
call [ rw-data ]
pop ecx
pop ecx
push rw-data
push edi
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
push edi
push rw-data
push [ rw-data ]
call esi
call eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
push 0x6
push 0x1
push eax
push eax
push 0xc0000000
push edi
call [ rw-data ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call [ rw-data ]
lea eax [ ebp - 0x104 ]
push 0x1
push eax
push edi
push rw-data
push [ rw-data ]
call esi
call eax
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40140d
add esp 0xc
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x14 ]
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
push ebx
call [ rw-data ]
push rw-data
push edi
call sub_401139
pop ecx
pop ecx
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
_start
push ebp
mov ebp esp
sub esp 0x10c
and [ ebp - 0x10c ] 0x0
push ebx
push esi
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x10b ]
[ edi ]
stosw [ edi ]
push rw-data
push 0x0
push 0x277
push rw-data
stosb [ edi ]
call sub_401000
call sub_401386
mov esi [ GetProcAddress@IAT ]
push rw-data
push [ rw-data ]
call esi
call eax
xor edx edx
mov [ rw-data ] eax
mov dl ah
movzx ecx al
movzx eax dl
cmp ecx 0x6
mov [ rw-data ] ecx
mov [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_4012c4
cmp [ rw-data ] 0x5
pop ecx
mov ebx 0x2c00
mov edi rw-data
jne r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
xor eax eax
push eax
push eax
push 0x801c
push eax
push rw-data
push rw-data
call [ LoadLibraryA@IAT ]
push eax
call esi
call eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
lea eax [ ebp - 0x10c ]
push edi
push eax
call sub_401494
add esp 0x10
lea eax [ ebp - 0x10c ]
push 0x104
push eax
call [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
lea eax [ ebp - 0x10c ]
push edi
push eax
call sub_401494
add esp 0x10
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
memset
jmp [ memset@IAT ]
